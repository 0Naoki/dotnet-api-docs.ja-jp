<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="794f66876f66d7f8eb1279ed074318e7dd3a2c62" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69357322" /></Metadata><TypeSignature Language="C#" Value="public class SortKey" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="04acc-101">文字列とその並べ替えキーとの対応付けの結果を表します。</span><span class="sxs-lookup"><span data-stu-id="04acc-101">Represents the result of mapping a string to its sort key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04acc-102">2つの文字列のカルチャに依存した比較では、スクリプト、アルファベット、大文字と小文字、および発音区別度を含む、いくつかのカテゴリの並べ替えの重みを持つ文字列の各文字に依存します。</span><span class="sxs-lookup"><span data-stu-id="04acc-102">A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="04acc-103">並べ替えキーは、特定の文字列のこれらの重みのリポジトリとして機能します。</span><span class="sxs-lookup"><span data-stu-id="04acc-103">A sort key serves as the repository of these weights for a particular string.</span></span>  
  
 <span data-ttu-id="04acc-104">メソッド<xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType>は、指定された<xref:System.Globalization.SortKey>文字列内の文字のカルチャに依存したマッピングを反映するクラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="04acc-104">The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string.</span></span> <span data-ttu-id="04acc-105"><xref:System.Globalization.SortKey>オブジェクトの値はキーデータであり、 <xref:System.Globalization.SortKey.KeyData%2A>プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="04acc-105">The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property.</span></span> <span data-ttu-id="04acc-106">このキーデータは、文字列、カルチャ固有の並べ替え規則、およびユーザー指定の比較オプションをエンコードする一連のバイトで構成されます。</span><span class="sxs-lookup"><span data-stu-id="04acc-106">This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options.</span></span> <span data-ttu-id="04acc-107">並べ替えキーを使用した比較は、各並べ替えキーの対応するキーデータのビットごとの比較で構成されます。</span><span class="sxs-lookup"><span data-stu-id="04acc-107">A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.</span></span>  <span data-ttu-id="04acc-108">たとえば、 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>値がであるメソッドを呼び出すことによって並べ替えキーを作成した場合、並べ替えキーを使用する文字列比較操作では大文字と小文字が区別されません。</span><span class="sxs-lookup"><span data-stu-id="04acc-108">For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, a string comparison operation that uses the sort key is case-insensitive.</span></span>  
  
 <span data-ttu-id="04acc-109">文字列の並べ替えキーを作成した後、静的<xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType>メソッドを呼び出すことによって並べ替えキーを比較します。</span><span class="sxs-lookup"><span data-stu-id="04acc-109">After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04acc-110">このメソッドは、単純なバイト単位の比較を実行するため、メソッド<xref:System.String.Compare%2A?displayProperty=nameWithType>または<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>メソッドよりもはるかに高速です。</span><span class="sxs-lookup"><span data-stu-id="04acc-110">This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=nameWithType> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  

> [!NOTE]
> <span data-ttu-id="04acc-111">[並べ替えの重みテーブル](https://www.microsoft.com/download/details.aspx?id=10921)をダウンロードできます。これには、Windows オペレーティングシステムの並べ替えおよび比較操作で使用される文字の重みに関する情報を含むテキストファイルのセット、[既定の Unicode 照合順序要素テーブル](https://www.unicode.org/Public/UCA/latest/allkeys.txt)、並べ替えLinux および macOS の重みテーブル。</span><span class="sxs-lookup"><span data-stu-id="04acc-111">You can download the [Sorting Weight Tables](https://www.microsoft.com/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the sort weight table for Linux and macOS.</span></span>

## <a name="performance-considerations"></a><span data-ttu-id="04acc-112">パフォーマンスに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="04acc-112">Performance considerations</span></span>  
 <span data-ttu-id="04acc-113">文字列比較を実行すると、 <xref:System.Globalization.SortKey.Compare%2A>メソッド<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>とメソッドは同じ結果を生成しますが、さまざまなシナリオを対象とします。</span><span class="sxs-lookup"><span data-stu-id="04acc-113">When performing a string comparison, the <xref:System.Globalization.SortKey.Compare%2A> and <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> methods yield the same results, but they target different scenarios.</span></span>  
  
 <span data-ttu-id="04acc-114">大まかには、メソッドは<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>各文字列の並べ替えキーを生成し、比較を実行してから、並べ替えキーを破棄し、比較の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="04acc-114">At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison.</span></span> <span data-ttu-id="04acc-115">ただし、この<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>メソッドでは、比較を実行するために並べ替えキー全体が生成されるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="04acc-115">However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method actually doesn't generate an entire sort key to perform the comparison.</span></span> <span data-ttu-id="04acc-116">代わりに、メソッドによって、各文字列の各テキスト要素 (基本文字、サロゲートペア、または組み合わせ文字シーケンス) のキーデータが生成されます。</span><span class="sxs-lookup"><span data-stu-id="04acc-116">Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string.</span></span> <span data-ttu-id="04acc-117">次に、メソッドは、対応するテキスト要素のキーデータを比較します。</span><span class="sxs-lookup"><span data-stu-id="04acc-117">The method then compares the key data for the corresponding text elements.</span></span> <span data-ttu-id="04acc-118">この操作は、比較の最終的な結果が決定されるとすぐに終了します。</span><span class="sxs-lookup"><span data-stu-id="04acc-118">The operation terminates as soon as the ultimate result of the comparison is determined.</span></span> <span data-ttu-id="04acc-119">並べ替えキーの情報は計算され<xref:System.Globalization.SortKey>ますが、オブジェクトは作成されません。</span><span class="sxs-lookup"><span data-stu-id="04acc-119">Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created.</span></span> <span data-ttu-id="04acc-120">この方法は、両方の文字列が1回比較される場合のパフォーマンスの点で経済的ですが、同じ文字列が何度も比較される場合はコストが高くなります。</span><span class="sxs-lookup"><span data-stu-id="04acc-120">This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.</span></span>  
  
 <span data-ttu-id="04acc-121">メソッド<xref:System.Globalization.SortKey.Compare%2A>では、比較を<xref:System.Globalization.SortKey>実行する前に、文字列ごとにオブジェクトを生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="04acc-121">The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison.</span></span> <span data-ttu-id="04acc-122">この方法では、オブジェクトの<xref:System.Globalization.SortKey>生成に費やした時間とメモリが原因で、最初の比較のパフォーマンスが高くなります。</span><span class="sxs-lookup"><span data-stu-id="04acc-122">This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects.</span></span> <span data-ttu-id="04acc-123">ただし、同じ並べ替えキーが何度も比較されると、経済的になります。</span><span class="sxs-lookup"><span data-stu-id="04acc-123">However, it becomes economical if the same sort keys are compared many times.</span></span>  
  
 <span data-ttu-id="04acc-124">たとえば、データベーステーブルで、文字列ベースのインデックス列が指定した検索文字列に一致する行を検索するアプリケーションを記述するとします。</span><span class="sxs-lookup"><span data-stu-id="04acc-124">For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string.</span></span> <span data-ttu-id="04acc-125">テーブルには何千もの行が含まれており、検索文字列を各行のインデックスと比較すると、長い時間がかかります。</span><span class="sxs-lookup"><span data-stu-id="04acc-125">The table contains thousands of rows, and comparing the search string to the index in each row will take a long time.</span></span> <span data-ttu-id="04acc-126">このため、アプリケーションで行とそのインデックス列を格納すると、検索のパフォーマンスを向上させるために専用の列にインデックスの並べ替えキーが生成され、格納されます。</span><span class="sxs-lookup"><span data-stu-id="04acc-126">Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance.</span></span> <span data-ttu-id="04acc-127">アプリケーションは、対象の行を検索するときに、検索文字列をインデックス文字列と比較するのではなく、検索文字列の並べ替えキーをインデックス文字列の並べ替えキーと比較します。</span><span class="sxs-lookup"><span data-stu-id="04acc-127">When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="04acc-128">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="04acc-128">Security considerations</span></span>  
 <span data-ttu-id="04acc-129">メソッド<xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>は、指定<xref:System.Globalization.SortKey>された文字列と<xref:System.Globalization.CompareOptions>値、および基になる<xref:System.Globalization.CompareInfo>オブジェクトに関連付けられているカルチャに基づいて、値を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="04acc-129">The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object.</span></span> <span data-ttu-id="04acc-130">セキュリティの決定が文字列の比較または大文字と小文字の変更に依存<xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>している場合は、オペレーティングシステムのカルチャ設定に関係なく、操作の動作が一貫していることを確認するために、インバリアントカルチャのメソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="04acc-130">If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.</span></span>  
  
 <span data-ttu-id="04acc-131">並べ替えキーを取得するには、次の手順に従います。</span><span class="sxs-lookup"><span data-stu-id="04acc-131">Use the following steps to obtain a sort key:</span></span>  
  
1.  <span data-ttu-id="04acc-132"><xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType>プロパティからインバリアントカルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="04acc-132">Retrieve the invariant culture from the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> property.</span></span>  
  
2.  <span data-ttu-id="04acc-133">インバリアント<xref:System.Globalization.CompareInfo>カルチャのオブジェクトを<xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType>プロパティから取得します。</span><span class="sxs-lookup"><span data-stu-id="04acc-133">Retrieve a <xref:System.Globalization.CompareInfo> object for the invariant culture from the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="04acc-134"><xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="04acc-134">Call the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="04acc-135"><xref:System.Globalization.SortKey>オブジェクトの値を使用することは、指定された`LCMapString` LCMAP_SORTKEY 値を使用して Windows メソッドを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="04acc-135">Working with the value of a <xref:System.Globalization.SortKey> object is equivalent to calling the Windows `LCMapString` method with the LCMAP_SORTKEY value specified.</span></span> <span data-ttu-id="04acc-136">ただし、 <xref:System.Globalization.SortKey>オブジェクトの場合、英語の文字の並べ替えキーは、韓国語の文字の並べ替えキーの前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="04acc-136">However, for the <xref:System.Globalization.SortKey> object, the sort keys for English characters precede the sort keys for Korean characters.</span></span>  
  
 <span data-ttu-id="04acc-137"><xref:System.Globalization.SortKey>オブジェクトを複数のオブジェクトにまたがる<xref:System.AppDomain>ことができるように、オブジェクトをシリアル化することはできます。</span><span class="sxs-lookup"><span data-stu-id="04acc-137"><xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects.</span></span> <span data-ttu-id="04acc-138">アプリケーションがオブジェクトを<xref:System.Globalization.SortKey>シリアル化する場合、新しいバージョンの .NET Framework が存在する場合、アプリケーションはすべての並べ替えキーを再生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="04acc-138">If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.</span></span>  
  
 <span data-ttu-id="04acc-139">並べ替えキーの詳細については、「unicode Technical Standard #10」、unicode[コンソーシアムの web サイト](https://go.microsoft.com/fwlink/?linkid=37123)の「Unicode 照合アルゴリズム」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="04acc-139">For more information about sort keys, see Unicode Technical Standard #10, "Unicode Collation Algorithm" on the [Unicode Consortium website](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04acc-140">次の例では、"en-us" カルチャと "es" カルチャを使用した文字列 "llama" と、"en-us" と "es" の従来のカルチャを比較しています。</span><span class="sxs-lookup"><span data-stu-id="04acc-140">The following example compares the string "llama" using the "en-US" and "es-ES" cultures, and the "en-US" and "es-ES" traditional cultures.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 <span data-ttu-id="04acc-141">次の例は、 <xref:System.Globalization.SortKey>クラスを使用して、大規模な配列の並べ替えと検索に大きく依存するアプリケーションのパフォーマンスを向上させる方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="04acc-141">The following example shows how you can use the <xref:System.Globalization.SortKey> class to improve performance in an application that relies extensively on sorting and searching a large array.</span></span> <span data-ttu-id="04acc-142">この例では、順序付けられていない名前の配列を作成します。この例では、13個の要素があります。</span><span class="sxs-lookup"><span data-stu-id="04acc-142">The example creates an unordered array of names, which in this case has 13 elements.</span></span> <span data-ttu-id="04acc-143">次に、各名前の並べ替えキーを並列配列に格納します。これは、 <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType>メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="04acc-143">It then stores the sort key of each name in a parallel array, which it passes to the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="04acc-144">結果は並べ替えられた配列になります。</span><span class="sxs-lookup"><span data-stu-id="04acc-144">The result is a sorted array.</span></span> <span data-ttu-id="04acc-145">この例では、配列内で3つの文字列を検索します。</span><span class="sxs-lookup"><span data-stu-id="04acc-145">The example then searches the array for three strings.</span></span> <span data-ttu-id="04acc-146">検索文字列ごとに、 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>メソッドを呼び出して文字列の並べ替えキーを取得し、メソッドを<xref:System.Array.FindIndex%2A?displayProperty=nameWithType>呼び出して、並べ替えキーの配列内の並べ替えキーのインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="04acc-146">For each search string, it calls the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method to retrieve the string's sort key, and then calls the <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> method to retrieve the index of that sort key in the array of sort keys.</span></span> <span data-ttu-id="04acc-147">名前と並べ替えキーの配列は並列であるため、返されるインデックスは`names`配列内の名前のインデックスでもあります。</span><span class="sxs-lookup"><span data-stu-id="04acc-147">Because the name and sort key arrays are parallel, the returned index is also the index of the name in the `names` array.</span></span>  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1"><span data-ttu-id="04acc-148">比較対象の第 1 並べ替えキー。</span><span class="sxs-lookup"><span data-stu-id="04acc-148">The first sort key to compare.</span></span></param>
        <param name="sortkey2"><span data-ttu-id="04acc-149">比較対象の第 2 並べ替えキー。</span><span class="sxs-lookup"><span data-stu-id="04acc-149">The second sort key to compare.</span></span></param>
        <summary><span data-ttu-id="04acc-150">2 つの並べ替えキーを比較します。</span><span class="sxs-lookup"><span data-stu-id="04acc-150">Compares two sort keys.</span></span></summary>
        <returns><span data-ttu-id="04acc-151"><paramref name="sortkey1" /> および <paramref name="sortkey2" /> の間のリレーションシップを示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="04acc-151">A signed integer that indicates the relationship between <paramref name="sortkey1" /> and <paramref name="sortkey2" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="04acc-152">[値]</span><span class="sxs-lookup"><span data-stu-id="04acc-152">Value</span></span> 
 </term><description> <span data-ttu-id="04acc-153">条件</span><span class="sxs-lookup"><span data-stu-id="04acc-153">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="04acc-154">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="04acc-154">Less than zero</span></span> 
 </term><description><span data-ttu-id="04acc-155"><paramref name="sortkey1" /> は <paramref name="sortkey2" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="04acc-155"><paramref name="sortkey1" /> is less than <paramref name="sortkey2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="04acc-156">0</span><span class="sxs-lookup"><span data-stu-id="04acc-156">Zero</span></span> 
 </term><description><span data-ttu-id="04acc-157"><paramref name="sortkey1" /> と <paramref name="sortkey2" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="04acc-157"><paramref name="sortkey1" /> is equal to <paramref name="sortkey2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="04acc-158">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="04acc-158">Greater than zero</span></span> 
 </term><description><span data-ttu-id="04acc-159"><paramref name="sortkey1" /> が <paramref name="sortkey2" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="04acc-159"><paramref name="sortkey1" /> is greater than <paramref name="sortkey2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04acc-160">メソッド<xref:System.Globalization.SortKey.Compare%2A>は、パラメーター <xref:System.Globalization.SortKey.KeyData%2A> `sortkey1`とパラメーターのプロパティを比較します。`sortkey2`</span><span class="sxs-lookup"><span data-stu-id="04acc-160">The <xref:System.Globalization.SortKey.Compare%2A> method compares the <xref:System.Globalization.SortKey.KeyData%2A> properties of the `sortkey1` and `sortkey2` parameters.</span></span> <span data-ttu-id="04acc-161">メソッドは、 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>メソッドと同じ結果を生成します。</span><span class="sxs-lookup"><span data-stu-id="04acc-161">The method yields the same results as the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="04acc-162"><xref:System.Globalization.SortKey.Compare%2A>メソッドと並べ替えキーの比較の詳細については、クラスの<xref:System.Globalization.SortKey>トピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="04acc-162">For more information about the <xref:System.Globalization.SortKey.Compare%2A> method and the comparison of sort keys, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04acc-163">次のコード例では、 <xref:System.Globalization.SortKey.Compare%2A>メソッドとそれに相当<xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>するメソッドを使用して2つの文字列を比較します。</span><span class="sxs-lookup"><span data-stu-id="04acc-163">The following code example compares two strings using the <xref:System.Globalization.SortKey.Compare%2A> method and the equivalent <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04acc-164"><paramref name="sortkey1" /> または <paramref name="sortkey2" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="04acc-164"><paramref name="sortkey1" /> or <paramref name="sortkey2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="04acc-165">現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="04acc-165">The object to compare with the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></param>
        <summary><span data-ttu-id="04acc-166">指定したオブジェクトが、現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトと等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="04acc-166">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></summary>
        <returns><span data-ttu-id="04acc-167"><paramref name="value" /> パラメーターが現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="04acc-167"><see langword="true" /> if the <paramref name="value" /> parameter is equal to the current <see cref="T:System.Globalization.SortKey" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04acc-168">2 <xref:System.Globalization.SortKey>つのオブジェクトは、 <xref:System.Globalization.SortKey.KeyData%2A>プロパティが等しい場合に等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="04acc-168">Two <xref:System.Globalization.SortKey> objects are considered equal if their <xref:System.Globalization.SortKey.KeyData%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="04acc-169">このメソッドは、<xref:System.Object.Equals%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="04acc-169">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04acc-170">次のコード例は、異なる<xref:System.Globalization.SortKey.Equals%2A> <xref:System.Globalization.SortKey>オブジェクトと比較した場合のの結果を示しています。</span><span class="sxs-lookup"><span data-stu-id="04acc-170">The following code example shows the results of <xref:System.Globalization.SortKey.Equals%2A> when compared with different <xref:System.Globalization.SortKey> objects.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04acc-171"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="04acc-171"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04acc-172">現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトのハッシュ関数として機能します。ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適しています。</span><span class="sxs-lookup"><span data-stu-id="04acc-172">Serves as a hash function for the current <see cref="T:System.Globalization.SortKey" /> object that is suitable for hashing algorithms and data structures such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="04acc-173">現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="04acc-173">A hash code for the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04acc-174">このメソッドは、<xref:System.Globalization.SortKey.Equals%2A> メソッドによって等しいと評価された 2 つのオブジェクトに対して同じハッシュ コードを生成します。</span><span class="sxs-lookup"><span data-stu-id="04acc-174">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.SortKey.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="04acc-175">このメソッドは、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="04acc-175">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04acc-176">現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトを表すバイト配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="04acc-176">Gets the byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></summary>
        <value><span data-ttu-id="04acc-177">現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトを表すバイト配列。</span><span class="sxs-lookup"><span data-stu-id="04acc-177">A byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04acc-178">文字列を比較するときに<xref:System.Globalization.SortKey.KeyData%2A>プロパティによって返されるデータの使用方法の詳細については、クラスの<xref:System.Globalization.SortKey>トピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="04acc-178">For more information about the use of the data returned by the <xref:System.Globalization.SortKey.KeyData%2A> property in comparing strings, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04acc-179">次のコード例では、大文字小文字を区別する並べ替えキーと大文字と小文字を区別しない並べ替えキーの元の文字列と、それと等価な文字列およびキーデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="04acc-179">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04acc-180">現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトを作成するために使用する元の文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="04acc-180">Gets the original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></summary>
        <value><span data-ttu-id="04acc-181">現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトを作成するために使用する元の文字列。</span><span class="sxs-lookup"><span data-stu-id="04acc-181">The original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="04acc-182">次のコード例では、大文字小文字を区別する並べ替えキーと大文字と小文字を区別しない並べ替えキーの元の文字列と、それと等価な文字列およびキーデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="04acc-182">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04acc-183">現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトを表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="04acc-183">Returns a string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></summary>
        <returns><span data-ttu-id="04acc-184">現在の <see cref="T:System.Globalization.SortKey" /> オブジェクトを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="04acc-184">A string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04acc-185">戻り値は、文字列 "SortKey-"、現在<xref:System.Globalization.SortKey>のオブジェクトのカルチャ識別子と比較オプション、および<xref:System.Globalization.SortKey.OriginalString%2A>プロパティの値を連結したものです。</span><span class="sxs-lookup"><span data-stu-id="04acc-185">The return value is the concatenation of the string "SortKey - ", the culture identifier and compare options of the current <xref:System.Globalization.SortKey> object, and the value of the <xref:System.Globalization.SortKey.OriginalString%2A> property.</span></span>  
  
 <span data-ttu-id="04acc-186">このメソッドは、<xref:System.Object.ToString%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="04acc-186">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="04acc-187">次のコード例では、元の文字列、大文字と<xref:System.Globalization.SortKey.ToString%2A>小文字を区別する並べ替えキーのメソッドによって生成される文字列、大文字と小文字を区別する並べ替えキーおよび大文字と小文字を区別しない並べ替えキーのキーデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="04acc-187">The following code example displays an original string, the strings yielded by the <xref:System.Globalization.SortKey.ToString%2A> method for case-sensitive and case-insensitive sort keys, and the key data for case-sensitive and case-insensitive sort keys.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
