<Type Name="JapaneseCalendar" FullName="System.Globalization.JapaneseCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d73ea154d6dc656d270ba94739cf8361ae1609e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37759858" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JapaneseCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JapaneseCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.JapaneseCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class JapaneseCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class JapaneseCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type JapaneseCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ba33c-101">Represents the Japanese calendar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ba33c-101">Represents the Japanese calendar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-102">和暦とも呼ばれますが、日本語の予定表は、年と時代 (年号) が異なる点を除いて、グレゴリオ暦のカレンダーとまったく同じように動作します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-102">The Japanese calendar, which is also known as the Wareki calendar, works exactly like the Gregorian calendar, except that the year and era are different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba33c-103">使用方法について、<xref:System.Globalization.JapaneseCalendar>クラスとその他の .NET Framework のクラスを予定表を参照してください[カレンダーの使用](~/docs/standard/datetime/working-with-calendars.md)します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-103">For information about using the <xref:System.Globalization.JapaneseCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="ba33c-104">日本語のカレンダーでは、すべて皇帝の量を設定の 1 つの時代 (年号) を認識します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-104">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="ba33c-105">現在の時代 (年号) が、平成時代には、構成のグレゴリオ暦カレンダーの 1989 年に開始されました。</span><span class="sxs-lookup"><span data-stu-id="ba33c-105">The current era is the Heisei era, which began in the Gregorian calendar year 1989.</span></span> <span data-ttu-id="ba33c-106">時代 (年号) の名前は通常、年の前に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-106">The era name is typically displayed before the year.</span></span> <span data-ttu-id="ba33c-107">たとえば、グレゴリオ暦のカレンダーの 2001 年は日本語のカレンダー年度平成 13 です。</span><span class="sxs-lookup"><span data-stu-id="ba33c-107">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="ba33c-108">時代 (年号) の最初の年が「元年。」と呼ばれることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ba33c-108">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="ba33c-109">そのため、構成のグレゴリオ暦カレンダーの 1989 年には、日本語のカレンダー年度平成元年がでした。</span><span class="sxs-lookup"><span data-stu-id="ba33c-109">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  
  
 <span data-ttu-id="ba33c-110">このクラスは、次のように、時代 (年号) に数値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-110">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="ba33c-111">GetEra 値</span><span class="sxs-lookup"><span data-stu-id="ba33c-111">GetEra value</span></span>|<span data-ttu-id="ba33c-112">時代 (年号) の名前</span><span class="sxs-lookup"><span data-stu-id="ba33c-112">Era Name</span></span>|<span data-ttu-id="ba33c-113">時代 (年号) の略称</span><span class="sxs-lookup"><span data-stu-id="ba33c-113">Era Abbreviation</span></span>|<span data-ttu-id="ba33c-114">グレゴリオ暦の日付</span><span class="sxs-lookup"><span data-stu-id="ba33c-114">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="ba33c-115">4</span><span class="sxs-lookup"><span data-stu-id="ba33c-115">4</span></span>|<span data-ttu-id="ba33c-116">平成 (平成)</span><span class="sxs-lookup"><span data-stu-id="ba33c-116">平成 (Heisei)</span></span>|<span data-ttu-id="ba33c-117">平 (H、h)</span><span class="sxs-lookup"><span data-stu-id="ba33c-117">平 (H, h)</span></span>|<span data-ttu-id="ba33c-118">1989 年 1 月 8 日を表示するには</span><span class="sxs-lookup"><span data-stu-id="ba33c-118">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="ba33c-119">3</span><span class="sxs-lookup"><span data-stu-id="ba33c-119">3</span></span>|<span data-ttu-id="ba33c-120">昭和 (昭和)</span><span class="sxs-lookup"><span data-stu-id="ba33c-120">昭和 (Showa)</span></span>|<span data-ttu-id="ba33c-121">昭 (S, s)</span><span class="sxs-lookup"><span data-stu-id="ba33c-121">昭 (S, s)</span></span>|<span data-ttu-id="ba33c-122">1989 年 1 月 7 日に 1926 年 12 月 25 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-122">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="ba33c-123">2</span><span class="sxs-lookup"><span data-stu-id="ba33c-123">2</span></span>|<span data-ttu-id="ba33c-124">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="ba33c-124">大正 (Taisho)</span></span>|<span data-ttu-id="ba33c-125">大 (T, t)</span><span class="sxs-lookup"><span data-stu-id="ba33c-125">大 (T, t)</span></span>|<span data-ttu-id="ba33c-126">1926 年 12 月 24 日に 1912 年 7 月 30 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-126">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="ba33c-127">1</span><span class="sxs-lookup"><span data-stu-id="ba33c-127">1</span></span>|<span data-ttu-id="ba33c-128">明治 (明治)</span><span class="sxs-lookup"><span data-stu-id="ba33c-128">明治 (Meiji)</span></span>|<span data-ttu-id="ba33c-129">明 (M, m)</span><span class="sxs-lookup"><span data-stu-id="ba33c-129">明 (M, m)</span></span>|<span data-ttu-id="ba33c-130">1912 年 7 月 29 日に 1868 年 9 月 8 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-130">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="ba33c-131">このクラスは、年 9 月 8日明治 1 年 (グレゴリオ暦 1868 年 9 月 8 日) での日付を処理します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-131">This class handles dates from September 8 in the year Meiji 1 (in the Gregorian calendar, September 8, 1868).</span></span> <span data-ttu-id="ba33c-132">和暦太陽暦、太陰暦から明治 6 年 (グレゴリオ暦のカレンダーの 1873) 年の切り替わりましたが、この実装は、太陽の予定表のみに基づいています。</span><span class="sxs-lookup"><span data-stu-id="ba33c-132">Although the Japanese calendar was switched from a lunar calendar to a solar calendar in the year Meiji 6 (1873 of the Gregorian calendar), this implementation is based on the solar calendar only.</span></span>  
  
 <span data-ttu-id="ba33c-133">うるう年日本語のカレンダーでは、グレゴリオ暦での同じうるう年に対応します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-133">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="ba33c-134">うるう年、グレゴリオ暦では、4 つの 100 で割り切れる場合を除き、均等に割り切れるはグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-134">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="ba33c-135">ただし、400 で割り切れるはグレゴリオ暦の年が閏年が。</span><span class="sxs-lookup"><span data-stu-id="ba33c-135">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="ba33c-136">一般的な年は 365 日を備え、閏年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="ba33c-136">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="ba33c-137">日本語のカレンダーでは、28 ~ 31 日の 12 か月間があります。</span><span class="sxs-lookup"><span data-stu-id="ba33c-137">The Japanese calendar has 12 months with 28 to 31 days each:</span></span>  
  
|<span data-ttu-id="ba33c-138">GetMonth 値</span><span class="sxs-lookup"><span data-stu-id="ba33c-138">GetMonth value</span></span>|<span data-ttu-id="ba33c-139">月</span><span class="sxs-lookup"><span data-stu-id="ba33c-139">Month</span></span>|<span data-ttu-id="ba33c-140">英語</span><span class="sxs-lookup"><span data-stu-id="ba33c-140">English</span></span>|<span data-ttu-id="ba33c-141">一般的な年の日数</span><span class="sxs-lookup"><span data-stu-id="ba33c-141">Days in common years</span></span>|<span data-ttu-id="ba33c-142">閏年の日数</span><span class="sxs-lookup"><span data-stu-id="ba33c-142">Days in leap years</span></span>|  
|--------------------|-----------|-------------|--------------------------|------------------------|  
|<span data-ttu-id="ba33c-143">1</span><span class="sxs-lookup"><span data-stu-id="ba33c-143">1</span></span>|<span data-ttu-id="ba33c-144">1月 (和暦)</span><span class="sxs-lookup"><span data-stu-id="ba33c-144">1月 (Ichigatsu)</span></span>|<span data-ttu-id="ba33c-145">年 1 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-145">January</span></span>|<span data-ttu-id="ba33c-146">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-146">31</span></span>|<span data-ttu-id="ba33c-147">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-147">31</span></span>|  
|<span data-ttu-id="ba33c-148">2</span><span class="sxs-lookup"><span data-stu-id="ba33c-148">2</span></span>|<span data-ttu-id="ba33c-149">2月 (日数)</span><span class="sxs-lookup"><span data-stu-id="ba33c-149">2月 (Nigatsu)</span></span>|<span data-ttu-id="ba33c-150">2 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-150">February</span></span>|<span data-ttu-id="ba33c-151">28</span><span class="sxs-lookup"><span data-stu-id="ba33c-151">28</span></span>|<span data-ttu-id="ba33c-152">29</span><span class="sxs-lookup"><span data-stu-id="ba33c-152">29</span></span>|  
|<span data-ttu-id="ba33c-153">3</span><span class="sxs-lookup"><span data-stu-id="ba33c-153">3</span></span>|<span data-ttu-id="ba33c-154">3月 (Sangatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-154">3月 (Sangatsu)</span></span>|<span data-ttu-id="ba33c-155">3 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-155">March</span></span>|<span data-ttu-id="ba33c-156">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-156">31</span></span>|<span data-ttu-id="ba33c-157">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-157">31</span></span>|  
|<span data-ttu-id="ba33c-158">4</span><span class="sxs-lookup"><span data-stu-id="ba33c-158">4</span></span>|<span data-ttu-id="ba33c-159">4月 (Shigatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-159">4月 (Shigatsu)</span></span>|<span data-ttu-id="ba33c-160">4 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-160">April</span></span>|<span data-ttu-id="ba33c-161">30</span><span class="sxs-lookup"><span data-stu-id="ba33c-161">30</span></span>|<span data-ttu-id="ba33c-162">30</span><span class="sxs-lookup"><span data-stu-id="ba33c-162">30</span></span>|  
|<span data-ttu-id="ba33c-163">5</span><span class="sxs-lookup"><span data-stu-id="ba33c-163">5</span></span>|<span data-ttu-id="ba33c-164">5月 (Gogatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-164">5月 (Gogatsu)</span></span>|<span data-ttu-id="ba33c-165">可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ba33c-165">May</span></span>|<span data-ttu-id="ba33c-166">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-166">31</span></span>|<span data-ttu-id="ba33c-167">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-167">31</span></span>|  
|<span data-ttu-id="ba33c-168">6</span><span class="sxs-lookup"><span data-stu-id="ba33c-168">6</span></span>|<span data-ttu-id="ba33c-169">6月 (Rokugatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-169">6月 (Rokugatsu)</span></span>|<span data-ttu-id="ba33c-170">June</span><span class="sxs-lookup"><span data-stu-id="ba33c-170">June</span></span>|<span data-ttu-id="ba33c-171">30</span><span class="sxs-lookup"><span data-stu-id="ba33c-171">30</span></span>|<span data-ttu-id="ba33c-172">30</span><span class="sxs-lookup"><span data-stu-id="ba33c-172">30</span></span>|  
|<span data-ttu-id="ba33c-173">7</span><span class="sxs-lookup"><span data-stu-id="ba33c-173">7</span></span>|<span data-ttu-id="ba33c-174">7月 (Shichigatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-174">7月 (Shichigatsu)</span></span>|<span data-ttu-id="ba33c-175">7 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-175">July</span></span>|<span data-ttu-id="ba33c-176">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-176">31</span></span>|<span data-ttu-id="ba33c-177">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-177">31</span></span>|  
|<span data-ttu-id="ba33c-178">8</span><span class="sxs-lookup"><span data-stu-id="ba33c-178">8</span></span>|<span data-ttu-id="ba33c-179">8月 (Hachigatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-179">8月 (Hachigatsu)</span></span>|<span data-ttu-id="ba33c-180">8 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-180">August</span></span>|<span data-ttu-id="ba33c-181">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-181">31</span></span>|<span data-ttu-id="ba33c-182">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-182">31</span></span>|  
|<span data-ttu-id="ba33c-183">9</span><span class="sxs-lookup"><span data-stu-id="ba33c-183">9</span></span>|<span data-ttu-id="ba33c-184">9月 (Kugatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-184">9月 (Kugatsu)</span></span>|<span data-ttu-id="ba33c-185">9 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-185">September</span></span>|<span data-ttu-id="ba33c-186">30</span><span class="sxs-lookup"><span data-stu-id="ba33c-186">30</span></span>|<span data-ttu-id="ba33c-187">30</span><span class="sxs-lookup"><span data-stu-id="ba33c-187">30</span></span>|  
|<span data-ttu-id="ba33c-188">10</span><span class="sxs-lookup"><span data-stu-id="ba33c-188">10</span></span>|<span data-ttu-id="ba33c-189">10月 (Juugatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-189">10月 (Juugatsu)</span></span>|<span data-ttu-id="ba33c-190">10 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-190">October</span></span>|<span data-ttu-id="ba33c-191">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-191">31</span></span>|<span data-ttu-id="ba33c-192">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-192">31</span></span>|  
|<span data-ttu-id="ba33c-193">11</span><span class="sxs-lookup"><span data-stu-id="ba33c-193">11</span></span>|<span data-ttu-id="ba33c-194">11月 (Juuichigatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-194">11月 (Juuichigatsu)</span></span>|<span data-ttu-id="ba33c-195">11 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-195">November</span></span>|<span data-ttu-id="ba33c-196">30</span><span class="sxs-lookup"><span data-stu-id="ba33c-196">30</span></span>|<span data-ttu-id="ba33c-197">30</span><span class="sxs-lookup"><span data-stu-id="ba33c-197">30</span></span>|  
|<span data-ttu-id="ba33c-198">12</span><span class="sxs-lookup"><span data-stu-id="ba33c-198">12</span></span>|<span data-ttu-id="ba33c-199">12月 (Juunigatsu)</span><span class="sxs-lookup"><span data-stu-id="ba33c-199">12月 (Juunigatsu)</span></span>|<span data-ttu-id="ba33c-200">12 月</span><span class="sxs-lookup"><span data-stu-id="ba33c-200">December</span></span>|<span data-ttu-id="ba33c-201">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-201">31</span></span>|<span data-ttu-id="ba33c-202">31</span><span class="sxs-lookup"><span data-stu-id="ba33c-202">31</span></span>|  
  
 <span data-ttu-id="ba33c-203">日数は、これは 2 月の構成のグレゴリオ暦カレンダー月に相当は、29 日、閏年と平年 28 があります。</span><span class="sxs-lookup"><span data-stu-id="ba33c-203">Nigatsu, which is equivalent to the Gregorian calendar month of February, has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="ba33c-204">西暦 2001 年 1 月 1 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-204">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="ba33c-205">日本語のカレンダーの年平成 13 の和暦の最初の日に相当します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-205">in the Gregorian calendar is equivalent to the first day of Ichigatsu in the year Heisei 13 in the Japanese calendar.</span></span>  
  
 <span data-ttu-id="ba33c-206">アプリケーションが使用されている場合、<xref:System.Globalization.JapaneseCalendar>クラス、<xref:System.DateTime.Parse%2A?displayProperty=nameWithType>年前に時代 (年号) の省略形を認識します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-206">If the application is using the <xref:System.Globalization.JapaneseCalendar> class, <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> recognizes the era abbreviations in front of the year.</span></span> <span data-ttu-id="ba33c-207">省略名は、ラテン アルファベットの大文字 1 文字の省略形または漢字の 1 文字の省略形のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="ba33c-207">The abbreviation is either the single-character case-insensitive Latin alphabet abbreviation or the single-character Kanji abbreviation.</span></span>  
  
 <span data-ttu-id="ba33c-208">各<xref:System.Globalization.CultureInfo>オブジェクトは、予定表のセットをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ba33c-208">Each <xref:System.Globalization.CultureInfo> object supports a set of calendars.</span></span> <span data-ttu-id="ba33c-209"><xref:System.Globalization.CultureInfo.Calendar%2A>プロパティは、カルチャの既定の暦を返します、<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>プロパティは、カルチャでサポートされているすべてのカレンダーを含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-209">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="ba33c-210">使用する暦を変更する、 <xref:System.Globalization.CultureInfo>、アプリケーションを設定する必要があります、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>を新しい<xref:System.Globalization.Calendar>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-210">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JapaneseCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JapaneseCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ba33c-211">Initializes a new instance of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-211">Initializes a new instance of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeInitializationException">
          <span data-ttu-id="ba33c-212">Unable to initialize a <see cref="T:System.Globalization.JapaneseCalendar" /> object because of missing culture information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-212">Unable to initialize a <see cref="T:System.Globalization.JapaneseCalendar" /> object because of missing culture information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="japaneseCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="ba33c-213">The <see cref="T:System.DateTime" /> to which to add months.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-213">The <see cref="T:System.DateTime" /> to which to add months.</span>
          </span>
        </param>
        <param name="months">
          <span data-ttu-id="ba33c-214">The number of months to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-214">The number of months to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-215">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-215">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-216">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-216">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-217">結果の日の部分<xref:System.DateTime>結果として得られる日が結果として得られる結果の年の月の有効な日付ではない場合に影響します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-217">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="ba33c-218">結果として得られる結果の年の月の最後の有効な日付に変更されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-218">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="ba33c-219">結果の年の部分<xref:System.DateTime>がその月が指定した年を超えた場合の影響を受ける<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-219">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="ba33c-220">結果の時代 (年号) の一部<xref:System.DateTime>結果の年が指定した時代 (年号) を超えた場合は、影響を受ける<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-220">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="ba33c-221">結果の時刻の部分<xref:System.DateTime>は、指定したのと同じ<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-221">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="ba33c-222">たとえば、指定した月が 31 日に Juugatsu (年 10 月) の場合に、指定した日が、その月の 31 日と`months`6 は、結果の年は、1 つ Shigatsu (4 月)、および結果として得られる日、月は、指定した年を超える最後の日 Shigatsu (年 4 月) である 30 日です。</span><span class="sxs-lookup"><span data-stu-id="ba33c-222">For example, if the specified month is Juugatsu (October), which has 31 days, the specified day is the 31st day of that month, and `months` is 6, the resulting year is one more than the specified year, the resulting month is Shigatsu (April), and the resulting day is the 30th day, which is the last day in Shigatsu (April).</span></span>  
  
 <span data-ttu-id="ba33c-223">場合`months`が負の場合、その結果<xref:System.DateTime>が、指定よりも前<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-223">If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="ba33c-224"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>常に equals を値<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-224">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba33c-225">維持することができます、<xref:System.DateTime.Kind%2A>のプロパティ、`time`パラメーターを呼び出すことによって、<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>メソッドを次の例を示します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-225">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-226">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>和暦の観点から。</span><span class="sxs-lookup"><span data-stu-id="ba33c-226">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba33c-227">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-227">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-228">
            <paramref name="months" /> is less than -120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-228">
              <paramref name="months" /> is less than -120000.</span>
          </span>
          <span data-ttu-id="ba33c-229">-or-  <paramref name="months" /> is greater than 120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-229">-or-  <paramref name="months" /> is greater than 120000.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="japaneseCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="ba33c-230">The <see cref="T:System.DateTime" /> to which to add years.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-230">The <see cref="T:System.DateTime" /> to which to add years.</span>
          </span>
        </param>
        <param name="years">
          <span data-ttu-id="ba33c-231">The number of years to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-231">The number of years to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-232">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-232">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-233">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-233">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-234">結果の日の部分<xref:System.DateTime>結果として得られる日が結果として得られる結果の年の月の有効な日付ではない場合に影響します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-234">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="ba33c-235">結果として得られる結果の年の月の最後の有効な日付に変更されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-235">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="ba33c-236">結果の月の部分<xref:System.DateTime>は、指定したのと同じ<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-236">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="ba33c-237">結果の時代 (年号) の一部<xref:System.DateTime>結果の年が指定した時代 (年号) を超えた場合は、影響を受ける<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-237">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="ba33c-238">結果の時刻の部分<xref:System.DateTime>は、指定したのと同じ<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-238">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="ba33c-239">たとえば、閏年では、平年の場合は 29 日、28 日があります。</span><span class="sxs-lookup"><span data-stu-id="ba33c-239">For example, Nigatsu (February) has 28 days except during leap years when it has 29 days.</span></span> <span data-ttu-id="ba33c-240">指定した日付が閏年の 29 日の場合、閏年の値で`years`は 1 です。 結果として得られるの日付は次の年の閏年の 28 日になります。</span><span class="sxs-lookup"><span data-stu-id="ba33c-240">If the specified date is the 29th day of Nigatsu (February) in a leap year and the value of `years` is 1, the resulting date will be the 28th day of Nigatsu (February) in the following year.</span></span>  
  
 <span data-ttu-id="ba33c-241">場合`years`が負の場合、その結果<xref:System.DateTime>が、指定よりも前<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-241">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="ba33c-242"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>常に equals を値<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-242">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba33c-243">維持することができます、<xref:System.DateTime.Kind%2A>のプロパティ、`time`パラメーターを呼び出すことによって、<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>メソッドを次の例を示します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-243">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-244">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>和暦の観点から。</span><span class="sxs-lookup"><span data-stu-id="ba33c-244">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ba33c-245">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-245">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-246">
            <paramref name="time" /> is outside the supported range of the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-246">
              <paramref name="time" /> is outside the supported range of the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span>
          </span>
          <span data-ttu-id="ba33c-247">-or-  <paramref name="years" /> is less than -10,000 or greater than 10,000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-247">-or-  <paramref name="years" /> is less than -10,000 or greater than 10,000.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.JapaneseCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba33c-248">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-248">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba33c-249">常に <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-249">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba33c-250">次の例では、リフレクションを使用して、それぞれをインスタンス化<xref:System.Globalization.Calendar>型については、.NET Framework との値を表示、<xref:System.Globalization.Calendar.AlgorithmType%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ba33c-250">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.JapaneseCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba33c-251">Gets the list of eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-251">Gets the list of eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba33c-252">時代 (年号) を表す整数の配列、<see cref="T:System.Globalization.JapaneseCalendar" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-252">An array of integers that represents the eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-253">日本語のカレンダーでは、すべて皇帝の量を設定の 1 つの時代 (年号) を認識します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-253">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="ba33c-254">現在の時代 (年号) が、平成時代には、構成のグレゴリオ暦カレンダーの 1989 年に開始されました。</span><span class="sxs-lookup"><span data-stu-id="ba33c-254">The current era is the Heisei era, which began in the Gregorian calendar year 1989.</span></span> <span data-ttu-id="ba33c-255">時代 (年号) の名前は通常、年の前に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-255">The era name is typically displayed before the year.</span></span> <span data-ttu-id="ba33c-256">たとえば、グレゴリオ暦のカレンダーの 2001 年は日本語のカレンダー年度平成 13 です。</span><span class="sxs-lookup"><span data-stu-id="ba33c-256">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="ba33c-257">時代 (年号) の最初の年が「元年。」と呼ばれることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ba33c-257">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="ba33c-258">そのため、構成のグレゴリオ暦カレンダーの 1989 年には、日本語のカレンダー年度平成元年がでした。</span><span class="sxs-lookup"><span data-stu-id="ba33c-258">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  
  
 <span data-ttu-id="ba33c-259">このクラスは、次のように、時代 (年号) に数値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-259">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="ba33c-260">GetEra 値</span><span class="sxs-lookup"><span data-stu-id="ba33c-260">GetEra value</span></span>|<span data-ttu-id="ba33c-261">時代 (年号) の名前</span><span class="sxs-lookup"><span data-stu-id="ba33c-261">Era Name</span></span>|<span data-ttu-id="ba33c-262">時代 (年号) の略称</span><span class="sxs-lookup"><span data-stu-id="ba33c-262">Era Abbreviation</span></span>|<span data-ttu-id="ba33c-263">グレゴリオ暦の日付</span><span class="sxs-lookup"><span data-stu-id="ba33c-263">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="ba33c-264">4</span><span class="sxs-lookup"><span data-stu-id="ba33c-264">4</span></span>|<span data-ttu-id="ba33c-265">平成 (平成)</span><span class="sxs-lookup"><span data-stu-id="ba33c-265">平成 (Heisei)</span></span>|<span data-ttu-id="ba33c-266">平 (H、h)</span><span class="sxs-lookup"><span data-stu-id="ba33c-266">平 (H, h)</span></span>|<span data-ttu-id="ba33c-267">1989 年 1 月 8 日を表示するには</span><span class="sxs-lookup"><span data-stu-id="ba33c-267">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="ba33c-268">3</span><span class="sxs-lookup"><span data-stu-id="ba33c-268">3</span></span>|<span data-ttu-id="ba33c-269">昭和 (昭和)</span><span class="sxs-lookup"><span data-stu-id="ba33c-269">昭和 (Showa)</span></span>|<span data-ttu-id="ba33c-270">昭 (S, s)</span><span class="sxs-lookup"><span data-stu-id="ba33c-270">昭 (S, s)</span></span>|<span data-ttu-id="ba33c-271">1989 年 1 月 7 日に 1926 年 12 月 25 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-271">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="ba33c-272">2</span><span class="sxs-lookup"><span data-stu-id="ba33c-272">2</span></span>|<span data-ttu-id="ba33c-273">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="ba33c-273">大正 (Taisho)</span></span>|<span data-ttu-id="ba33c-274">大 (T, t)</span><span class="sxs-lookup"><span data-stu-id="ba33c-274">大 (T, t)</span></span>|<span data-ttu-id="ba33c-275">1926 年 12 月 24 日に 1912 年 7 月 30 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-275">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="ba33c-276">1</span><span class="sxs-lookup"><span data-stu-id="ba33c-276">1</span></span>|<span data-ttu-id="ba33c-277">明治 (明治)</span><span class="sxs-lookup"><span data-stu-id="ba33c-277">明治 (Meiji)</span></span>|<span data-ttu-id="ba33c-278">明 (M, m)</span><span class="sxs-lookup"><span data-stu-id="ba33c-278">明 (M, m)</span></span>|<span data-ttu-id="ba33c-279">1912 年 7 月 29 日に 1868 年 9 月 8 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-279">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="ba33c-280">このクラスは、年 9 月 8日明治 1 (年 1 月 1 日 1868 構成のグレゴリオ暦カレンダーの) 年の日付を処理します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-280">This class handles dates from September 8 in the year Meiji 1 (January 1, 1868 of the Gregorian calendar).</span></span> <span data-ttu-id="ba33c-281">和暦太陽暦、太陰暦から明治 6 年 (グレゴリオ暦のカレンダーの 1873) 年の切り替わりましたが、この実装は、太陽の予定表のみに基づいています。</span><span class="sxs-lookup"><span data-stu-id="ba33c-281">Although the Japanese calendar was switched from a lunar calendar to a solar calendar in the year Meiji 6 (1873 of the Gregorian calendar), this implementation is based on the solar calendar only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ba33c-282">追加の時代 (年号) は、今後追加される、アプリケーションが、予期される 4 つ時代 (年号) の和暦よりも多く発生します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-282">Should additional eras be added in the future, applications may encounter more than the expected four eras for the Japanese calendar.</span></span> <span data-ttu-id="ba33c-283">このようなイベントで作業を続けるようにアプリケーションをテストする必要があります。参照してください[日本語のカレンダーの時代 (年号) を処理](http://go.microsoft.com/fwlink/p/?LinkId=239618)します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-283">Applications should be tested to ensure that they continue to work in such an event; see [Era Handling for the Japanese Calendar](http://go.microsoft.com/fwlink/p/?LinkId=239618).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-284">次の例に含まれる値の表示、<xref:System.Globalization.JapaneseCalendar.Eras%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ba33c-284">The following example displays the values contained in the <xref:System.Globalization.JapaneseCalendar.Eras%2A> property.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="japaneseCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="ba33c-285">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-285">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-286">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-286">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-287">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-287">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba33c-288">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>和暦の観点から。</span><span class="sxs-lookup"><span data-stu-id="ba33c-288">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="japaneseCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="ba33c-289">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-289">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-290">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-290">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-291">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-291">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-292"><xref:System.DayOfWeek>ような値。</span><span class="sxs-lookup"><span data-stu-id="ba33c-292">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="ba33c-293">DayOfWeek 値</span><span class="sxs-lookup"><span data-stu-id="ba33c-293">DayOfWeek value</span></span>|<span data-ttu-id="ba33c-294">これを示します</span><span class="sxs-lookup"><span data-stu-id="ba33c-294">which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="ba33c-295">日曜日</span><span class="sxs-lookup"><span data-stu-id="ba33c-295">Sunday</span></span>|<span data-ttu-id="ba33c-296">日曜日 (Nichiyoubi)</span><span class="sxs-lookup"><span data-stu-id="ba33c-296">日曜日 (Nichiyoubi)</span></span>|  
|<span data-ttu-id="ba33c-297">月曜日</span><span class="sxs-lookup"><span data-stu-id="ba33c-297">Monday</span></span>|<span data-ttu-id="ba33c-298">月曜日 (Getsuyoubi)</span><span class="sxs-lookup"><span data-stu-id="ba33c-298">月曜日 (Getsuyoubi)</span></span>|  
|<span data-ttu-id="ba33c-299">火曜日</span><span class="sxs-lookup"><span data-stu-id="ba33c-299">Tuesday</span></span>|<span data-ttu-id="ba33c-300">火曜日 (Kayoubi)</span><span class="sxs-lookup"><span data-stu-id="ba33c-300">火曜日 (Kayoubi)</span></span>|  
|<span data-ttu-id="ba33c-301">水曜日</span><span class="sxs-lookup"><span data-stu-id="ba33c-301">Wednesday</span></span>|<span data-ttu-id="ba33c-302">水曜日 (Suiyoubi)</span><span class="sxs-lookup"><span data-stu-id="ba33c-302">水曜日 (Suiyoubi)</span></span>|  
|<span data-ttu-id="ba33c-303">木曜日</span><span class="sxs-lookup"><span data-stu-id="ba33c-303">Thursday</span></span>|<span data-ttu-id="ba33c-304">木曜日 (Mokuyoubi)</span><span class="sxs-lookup"><span data-stu-id="ba33c-304">木曜日 (Mokuyoubi)</span></span>|  
|<span data-ttu-id="ba33c-305">金曜日</span><span class="sxs-lookup"><span data-stu-id="ba33c-305">Friday</span></span>|<span data-ttu-id="ba33c-306">金曜日 (Kinyoubi)</span><span class="sxs-lookup"><span data-stu-id="ba33c-306">金曜日 (Kinyoubi)</span></span>|  
|<span data-ttu-id="ba33c-307">土曜日</span><span class="sxs-lookup"><span data-stu-id="ba33c-307">Saturday</span></span>|<span data-ttu-id="ba33c-308">土曜日 (Doyoubi)</span><span class="sxs-lookup"><span data-stu-id="ba33c-308">土曜日 (Doyoubi)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-309">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>和暦の観点から。</span><span class="sxs-lookup"><span data-stu-id="ba33c-309">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="japaneseCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="ba33c-310">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-310">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-311">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-311">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-312">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-312">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-313">年の日付は、年の最初の日付から日数として定義されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-313">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="ba33c-314">たとえば、<xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A>最初の月の最初の曜日は 1 を返しますと<xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A>月、最後の最後の日の値が同じである、その年の日数の合計数が返されますによって返された<xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-314">For example, <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value as that returned by <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-315">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>和暦の観点から。</span><span class="sxs-lookup"><span data-stu-id="ba33c-315">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="japaneseCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="ba33c-316">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-316">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="ba33c-317">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-317">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="ba33c-318">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-318">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-319">Returns the number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-319">Returns the number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-320">The number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-320">The number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-321">このメソッドが 28 または 29 を日数を返します、(2 月、 `month` = 2) かどうかに応じて、`year`うるう年します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-321">For example, this method returns 28 or 29 for Nigatsu (February, `month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-322">次のコード例では<xref:System.Globalization.JapaneseCalendar.GetDaysInMonth%2A>各時代 (年号) の 5 年間のそれぞれに 2 番目の月。</span><span class="sxs-lookup"><span data-stu-id="ba33c-322">The following code example calls <xref:System.Globalization.JapaneseCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/CPP/japanesecalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/CS/japanesecalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/VB/japanesecalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-323">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-323">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-324">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-324">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-325">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-325">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="japaneseCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="ba33c-326">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-326">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="ba33c-327">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-327">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-328">Returns the number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-328">Returns the number of days in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-329">The number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-329">The number of days in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-330">365 または 366 のかどうかに応じて、たとえば、このメソッドが返されます`year`うるう年します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-330">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-331">次の例では、 <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A> 5 年以上に各時代 (年号)。</span><span class="sxs-lookup"><span data-stu-id="ba33c-331">The following example calls <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/CPP/japanesecalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/CS/japanesecalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/VB/japanesecalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-332">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-332">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-333">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-333">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="japaneseCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="ba33c-334">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-334">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-335">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-335">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-336">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-336">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-337">日本語のカレンダーでは、すべて皇帝の量を設定の 1 つの時代 (年号) を認識します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-337">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="ba33c-338">現在の時代 (年号) が、平成時代には、構成のグレゴリオ暦カレンダーの 1989 年に開始されました。</span><span class="sxs-lookup"><span data-stu-id="ba33c-338">The current era is the Heisei era, which began in the Gregorian calendar year 1989.</span></span> <span data-ttu-id="ba33c-339">時代 (年号) の名前は通常、年の前に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-339">The era name is typically displayed before the year.</span></span> <span data-ttu-id="ba33c-340">たとえば、グレゴリオ暦のカレンダーの 2001 年は日本語のカレンダー年度平成 13 です。</span><span class="sxs-lookup"><span data-stu-id="ba33c-340">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="ba33c-341">時代 (年号) の最初の年が「元年。」と呼ばれることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ba33c-341">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="ba33c-342">そのため、構成のグレゴリオ暦カレンダーの 1989 年には、日本語のカレンダー年度平成元年がでした。</span><span class="sxs-lookup"><span data-stu-id="ba33c-342">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  
  
 <span data-ttu-id="ba33c-343">このクラスは、次のように、時代 (年号) に数値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-343">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="ba33c-344">GetEra 値</span><span class="sxs-lookup"><span data-stu-id="ba33c-344">GetEra value</span></span>|<span data-ttu-id="ba33c-345">時代 (年号) の名前</span><span class="sxs-lookup"><span data-stu-id="ba33c-345">Era Name</span></span>|<span data-ttu-id="ba33c-346">時代 (年号) の略称</span><span class="sxs-lookup"><span data-stu-id="ba33c-346">Era Abbreviation</span></span>|<span data-ttu-id="ba33c-347">グレゴリオ暦の日付</span><span class="sxs-lookup"><span data-stu-id="ba33c-347">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="ba33c-348">4</span><span class="sxs-lookup"><span data-stu-id="ba33c-348">4</span></span>|<span data-ttu-id="ba33c-349">平成 (平成)</span><span class="sxs-lookup"><span data-stu-id="ba33c-349">平成 (Heisei)</span></span>|<span data-ttu-id="ba33c-350">平 (H、h)</span><span class="sxs-lookup"><span data-stu-id="ba33c-350">平 (H, h)</span></span>|<span data-ttu-id="ba33c-351">1989 年 1 月 8 日を表示するには</span><span class="sxs-lookup"><span data-stu-id="ba33c-351">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="ba33c-352">3</span><span class="sxs-lookup"><span data-stu-id="ba33c-352">3</span></span>|<span data-ttu-id="ba33c-353">昭和 (昭和)</span><span class="sxs-lookup"><span data-stu-id="ba33c-353">昭和 (Showa)</span></span>|<span data-ttu-id="ba33c-354">昭 (S, s)</span><span class="sxs-lookup"><span data-stu-id="ba33c-354">昭 (S, s)</span></span>|<span data-ttu-id="ba33c-355">1989 年 1 月 7 日に 1926 年 12 月 25 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-355">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="ba33c-356">2</span><span class="sxs-lookup"><span data-stu-id="ba33c-356">2</span></span>|<span data-ttu-id="ba33c-357">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="ba33c-357">大正 (Taisho)</span></span>|<span data-ttu-id="ba33c-358">大 (T, t)</span><span class="sxs-lookup"><span data-stu-id="ba33c-358">大 (T, t)</span></span>|<span data-ttu-id="ba33c-359">1926 年 12 月 24 日に 1912 年 7 月 30 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-359">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="ba33c-360">1</span><span class="sxs-lookup"><span data-stu-id="ba33c-360">1</span></span>|<span data-ttu-id="ba33c-361">明治 (明治)</span><span class="sxs-lookup"><span data-stu-id="ba33c-361">明治 (Meiji)</span></span>|<span data-ttu-id="ba33c-362">明 (M, m)</span><span class="sxs-lookup"><span data-stu-id="ba33c-362">明 (M, m)</span></span>|<span data-ttu-id="ba33c-363">1912 年 7 月 29 日に 1868 年 9 月 8 日</span><span class="sxs-lookup"><span data-stu-id="ba33c-363">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="ba33c-364">通常、<xref:System.Globalization.JapaneseCalendar>クラス明治 1 (年 9 月 8 日 1868 構成のグレゴリオ暦カレンダーの)、これは、値の年の年 9 月 8 日のサポートの<xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ba33c-364">Ordinarily, the <xref:System.Globalization.JapaneseCalendar> class supports dates from September 8 in the year Meiji 1 (September 8, 1868 of the Gregorian calendar), which is the value of the <xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A> property.</span></span> <span data-ttu-id="ba33c-365">ただし、<xref:System.Globalization.JapaneseCalendar.GetEra%2A>メソッドが正常に日付の時代 (年号) を返します年 1 月 1 日 ~ 明治 1 年 9 月 7 日 (年 1 月 1 日 1868 1868 年 9 月 7 日、グレゴリオ暦での使用)。</span><span class="sxs-lookup"><span data-stu-id="ba33c-365">However, the <xref:System.Globalization.JapaneseCalendar.GetEra%2A> method successfully returns the era for dates from January 1 through September 7 in the year Meiji 1 (January 1, 1868 through September 7, 1868 in the Gregorian calendar).</span></span> <span data-ttu-id="ba33c-366">構成のグレゴリオ暦カレンダーにおける 1868 年 1 月 1 日より前の日付、メソッドがスローされます、<xref:System.ArgumentOutOfRangeException>例外。</span><span class="sxs-lookup"><span data-stu-id="ba33c-366">For dates earlier than January 1, 1868 in the Gregorian calendar, the method throws an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-367">次の例のいくつかのコンポーネントの値を表示、<xref:System.DateTime>和暦の観点から。</span><span class="sxs-lookup"><span data-stu-id="ba33c-367">The following example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-368">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-368">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="japaneseCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="ba33c-369">A year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-369">A year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="ba33c-370">An era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-370">An era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-371">Calculates the leap month for a specified year and era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-371">Calculates the leap month for a specified year and era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-372">The return value is always 0 because the <see cref="T:System.Globalization.JapaneseCalendar" /> type does not support the notion of a leap month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-372">The return value is always 0 because the <see cref="T:System.Globalization.JapaneseCalendar" /> type does not support the notion of a leap month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-373">閏月の概念をサポートする予定表、閏月は特定の月の後、または 1 年間のすべての月の後にできます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-373">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="ba33c-374">たとえば、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>メソッドは、1 から 13 に関連付けられた、指定された日付の月を示す数値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-374">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="ba33c-375">年の第 8 と 9 番目の月の間閏月がある場合、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>メソッド leap 8 番目の月の 9 および 10 9 番目の月は 8 番目の月の 8 が返されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-375">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-376">
            <paramref name="year" /> or <paramref name="era" /> is outside the range supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-376">
              <paramref name="year" /> or <paramref name="era" /> is outside the range supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="japaneseCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="ba33c-377">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-377">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-378">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-378">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-379">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-379">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba33c-380">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>和暦の観点から。</span><span class="sxs-lookup"><span data-stu-id="ba33c-380">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="japaneseCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="ba33c-381">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-381">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="ba33c-382">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-382">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-383">Returns the number of months in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-383">Returns the number of months in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-384">The return value is always 12.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-384">The return value is always 12.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba33c-385">次のコード例では<xref:System.Globalization.JapaneseCalendar.GetMonthsInYear%2A>5 年以上に各時代 (年号)。</span><span class="sxs-lookup"><span data-stu-id="ba33c-385">The following code example calls <xref:System.Globalization.JapaneseCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/CPP/japanesecalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/CS/japanesecalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/VB/japanesecalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-386">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-386">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-387">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-387">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="japaneseCalendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="ba33c-388">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-388">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="ba33c-389">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-389">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span>
          </span>
        </param>
        <param name="firstDayOfWeek">
          <span data-ttu-id="ba33c-390">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-390">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-391">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-391">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-392">A 1-based integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-392">A 1-based integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-393">設定して、年の週の数を決定するこのメソッドを使用できます、`time`パラメーター、今年の最終日を。</span><span class="sxs-lookup"><span data-stu-id="ba33c-393">This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.</span></span>  
  
 <span data-ttu-id="ba33c-394"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティには使用できるカルチャ固有の値が含まれています、`rule`と`firstDayOfWeek`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="ba33c-394">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.</span></span>  
  
 <span data-ttu-id="ba33c-395"><xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>既定値を含む<xref:System.DayOfWeek>で指定されたカレンダーを使用して、特定のカルチャの週の最初の日を表す値、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba33c-395">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba33c-396"><xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>既定値を含む<xref:System.Globalization.CalendarWeekRule>値で指定されたカレンダーを使用して、特定のカルチャのカレンダーの週を定義する、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ba33c-396">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba33c-397">たとえば、 <xref:System.Globalization.GregorianCalendar>、 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 1 月 1 日のメソッドは 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-397">For example, in <xref:System.Globalization.GregorianCalendar>, the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method for January 1 returns 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-398">次のコード例は、結果の<xref:System.Globalization.Calendar.GetWeekOfYear%2A>かによって異なります、<xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>と<xref:System.Globalization.CalendarWeekRule>使用される値。</span><span class="sxs-lookup"><span data-stu-id="ba33c-398">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used.</span></span> <span data-ttu-id="ba33c-399">指定した日付が年の最終日の場合<xref:System.Globalization.Calendar.GetWeekOfYear%2A>その年の週の合計数を返します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-399">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-400">
            <paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-400">
              <paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-401">-or-  <paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-401">-or-  <paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="japaneseCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="ba33c-402">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-402">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-403">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-403">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-404">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-404">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba33c-405">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>和暦の観点から。</span><span class="sxs-lookup"><span data-stu-id="ba33c-405">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="japaneseCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="ba33c-406">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-406">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="ba33c-407">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-407">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="ba33c-408">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-408">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="ba33c-409">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-409">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-410">Determines whether the specified date in the specified era is a leap day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-410">Determines whether the specified date in the specified era is a leap day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-411">
            <see langword="true" />, if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-411">
              <see langword="true" />, if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-412">うるう年日本語のカレンダーでは、グレゴリオ暦での同じうるう年に対応します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-412">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="ba33c-413">うるう年、グレゴリオ暦では、4 つの 100 で割り切れる場合を除き、均等に割り切れるはグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-413">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="ba33c-414">ただし、400 で割り切れるはグレゴリオ暦の年が閏年が。</span><span class="sxs-lookup"><span data-stu-id="ba33c-414">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="ba33c-415">一般的な年は 365 日を備え、閏年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="ba33c-415">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="ba33c-416">閏日が閏年でのみ発生する日です。</span><span class="sxs-lookup"><span data-stu-id="ba33c-416">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="ba33c-417">たとえば、閏年の 29 日は、唯一 leap 日です。</span><span class="sxs-lookup"><span data-stu-id="ba33c-417">For example, the 29th day of Nigatsu (February) is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-418">次の例では、<xref:System.Globalization.JapaneseCalendar.IsLeapDay%2A>最後の日、時代 (年号) のそれぞれに 5 年の 2 番目の月 (2 月)。</span><span class="sxs-lookup"><span data-stu-id="ba33c-418">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/CPP/japanesecalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/CS/japanesecalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/VB/japanesecalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-419">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-419">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-420">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-420">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-421">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-421">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-422">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-422">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="japaneseCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="ba33c-423">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-423">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="ba33c-424">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-424">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="ba33c-425">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-425">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-426">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-426">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-427">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-427">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-428">うるう年日本語のカレンダーでは、グレゴリオ暦での同じうるう年に対応します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-428">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="ba33c-429">うるう年、グレゴリオ暦では、4 つの 100 で割り切れる場合を除き、均等に割り切れるはグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-429">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="ba33c-430">ただし、400 で割り切れるはグレゴリオ暦の年が閏年が。</span><span class="sxs-lookup"><span data-stu-id="ba33c-430">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="ba33c-431">一般的な年は 365 日を備え、閏年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="ba33c-431">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="ba33c-432">閏月が閏年でのみ発生する月全体です。</span><span class="sxs-lookup"><span data-stu-id="ba33c-432">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="ba33c-433">日本語の予定表には、閏月がありません。</span><span class="sxs-lookup"><span data-stu-id="ba33c-433">The Japanese calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-434">次の例では<xref:System.Globalization.JapaneseCalendar.IsLeapMonth%2A>の現在の時代 (年号) の 5 年間のすべての月。</span><span class="sxs-lookup"><span data-stu-id="ba33c-434">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/CPP/japanesecalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/CS/japanesecalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/VB/japanesecalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-435">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-435">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-436">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-436">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-437">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-437">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="japaneseCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="ba33c-438">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-438">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="ba33c-439">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-439">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-440">Determines whether the specified year in the specified era is a leap year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-440">Determines whether the specified year in the specified era is a leap year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-441">
            <see langword="true" />, if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-441">
              <see langword="true" />, if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-442">うるう年日本語のカレンダーでは、グレゴリオ暦での同じうるう年に対応します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-442">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="ba33c-443">うるう年、グレゴリオ暦では、4 つの 100 で割り切れる場合を除き、均等に割り切れるはグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-443">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="ba33c-444">ただし、400 で割り切れるはグレゴリオ暦の年が閏年が。</span><span class="sxs-lookup"><span data-stu-id="ba33c-444">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="ba33c-445">一般的な年は 365 日を備え、閏年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="ba33c-445">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-446">次の例では<xref:System.Globalization.JapaneseCalendar.IsLeapYear%2A>時代 (年号) のそれぞれに 5 年以上にします。</span><span class="sxs-lookup"><span data-stu-id="ba33c-446">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/CPP/japanesecalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/CS/japanesecalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/VB/japanesecalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-447">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-447">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-448">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-448">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.JapaneseCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba33c-449">Gets the latest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-449">Gets the latest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba33c-450">最新の日付と時刻でサポートされている、<see cref="T:System.Globalization.JapaneseCalendar" />型では、これは 9999 の紀元、年 12 月 31 日の最後の瞬間に相当</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-450">The latest date and time supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type, which is equivalent to the last moment of December 31, 9999 C.E.</span>
          </span>
          <span data-ttu-id="ba33c-451">構成のグレゴリオ暦カレンダーです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-451">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba33c-452">次のコード例では、最小値と予定表の最大値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-452">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CPP/japanesecalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CS/japanesecalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/VB/japanesecalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.JapaneseCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba33c-453">Gets the earliest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-453">Gets the earliest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba33c-454">最も古い日付と時刻でサポートされている、<see cref="T:System.Globalization.JapaneseCalendar" />紀元 1868 年 9 月 8 日の最初の瞬間に相当の種類</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-454">The earliest date and time supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type, which is equivalent to the first moment of September 8, 1868 C.E.</span>
          </span>
          <span data-ttu-id="ba33c-455">構成のグレゴリオ暦カレンダーです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-455">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-456">サポートされる最も早い日付、<xref:System.Globalization.JapaneseCalendar>クラスは、年 9 月 8日での紀元 1868、明治の時代 (年号) の最初の年。</span><span class="sxs-lookup"><span data-stu-id="ba33c-456">The earliest date supported by the <xref:System.Globalization.JapaneseCalendar> class is September 8, 1868 C.E., in the first year of the Meiji era.</span></span> <span data-ttu-id="ba33c-457">通常、日付し、時刻を使用して、操作、<xref:System.Globalization.JapaneseCalendar>クラスを throw、<xref:System.ArgumentOutOfRangeException>この日付より前に、の日付の例外。</span><span class="sxs-lookup"><span data-stu-id="ba33c-457">Ordinarily, date and time operations that use the <xref:System.Globalization.JapaneseCalendar> class throw an <xref:System.ArgumentOutOfRangeException> exception for dates before this date.</span></span> <span data-ttu-id="ba33c-458">ただし、一部のメンバーなど、<xref:System.Globalization.JapaneseCalendar.GetEra%2A>メソッド、明治 1 年目に 1868 年 1 月 1 日から 9 月 7 日から日付をサポートします。</span><span class="sxs-lookup"><span data-stu-id="ba33c-458">However, some members, such as the <xref:System.Globalization.JapaneseCalendar.GetEra%2A> method, support dates from January 1, 1868 through September 7 in the year Meiji 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba33c-459">次の例では、カレンダーでサポートされている最初と最後の日付を取得します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-459">The following example gets the earliest and latest dates supported by the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CPP/japanesecalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CS/japanesecalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/VB/japanesecalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="japaneseCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="ba33c-460">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-460">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="ba33c-461">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-461">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="ba33c-462">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-462">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="ba33c-463">An integer from 0 to 23 that represents the hour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-463">An integer from 0 to 23 that represents the hour.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="ba33c-464">An integer from 0 to 59 that represents the minute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-464">An integer from 0 to 59 that represents the minute.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="ba33c-465">An integer from 0 to 59 that represents the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-465">An integer from 0 to 59 that represents the second.</span>
          </span>
        </param>
        <param name="millisecond">
          <span data-ttu-id="ba33c-466">An integer from 0 to 999 that represents the millisecond.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-466">An integer from 0 to 999 that represents the millisecond.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="ba33c-467">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-467">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-468">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-468">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-469">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-469">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-470"><xref:System.Globalization.JapaneseCalendar.ToDateTime%2A>メソッド グレゴリオ暦の日付を現在の暦で日付を変換できますので便利です。</span><span class="sxs-lookup"><span data-stu-id="ba33c-470">The <xref:System.Globalization.JapaneseCalendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.</span></span> <span data-ttu-id="ba33c-471">グレゴリオ暦の日付後で使用できますなどのさまざまなカレンダーで日付を比較または等価の日付を特定の暦で作成します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-471">The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-472">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-472">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-473">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-473">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-474">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-474">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="ba33c-475">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-475">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          </span>
          <span data-ttu-id="ba33c-476">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-476">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="ba33c-477">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-477">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="ba33c-478">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-478">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          </span>
          <span data-ttu-id="ba33c-479">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-479">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="japaneseCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="ba33c-480">An integer (usually two digits) that represents the year to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-480">An integer (usually two digits) that represents the year to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ba33c-481">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-481">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ba33c-482">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-482">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-483">このメソッドは、<xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType> を実装します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-483">This method implements <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba33c-484">この実装は常の値を返します、日本語のカレンダーの年が通常より小さい 4 桁であるため、`year`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="ba33c-484">Because the year in the Japanese calendar is typically less than four digits long, this implementation always returns the value of the `year` parameter.</span></span>  
  
 <span data-ttu-id="ba33c-485"><xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> 2 桁または 4 桁の年のいずれかをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ba33c-485"><xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="ba33c-486">ただし、有効な年は一般に 2 桁の数字 (100 より小さい) として表されます。</span><span class="sxs-lookup"><span data-stu-id="ba33c-486">However, a valid year is generally represented as two digits (less than 100).</span></span> <span data-ttu-id="ba33c-487">4 桁の値に従って、値に変換するメソッドを 2 桁の年の値を渡すと、<xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A>適切な世紀を表す値。</span><span class="sxs-lookup"><span data-stu-id="ba33c-487">Passing a two-digit year value causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="ba33c-488">アプリケーションを 4 桁の値を提供する場合、または 0 または負の値が渡された場合<xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ba33c-488">If the application supplies a four-digit value, or if it supplies zero or a negative value, <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-489">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-489">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ba33c-490">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-490">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ba33c-491">年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-491">The last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba33c-492">このプロパティは、<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> を実装します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-492">This property implements <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba33c-493">この実装が既定で 99 を返しの戻り値には影響しません、日本語のカレンダーの年が通常より小さい 4 桁であるため<xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>します。</span><span class="sxs-lookup"><span data-stu-id="ba33c-493">Because the year in the Japanese calendar is typically less than four digits long, this implementation returns 99 by default and does not affect the return value of <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ba33c-494">The value specified in a set operation is less than 99.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-494">The value specified in a set operation is less than 99.</span>
          </span>
          <span data-ttu-id="ba33c-495">-or-  The value specified in a set operation is greater than 8011 (or <see langword="MaxSupportedDateTime.Year" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-495">-or-  The value specified in a set operation is greater than 8011 (or <see langword="MaxSupportedDateTime.Year" />).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ba33c-496">In a set operation, the current instance is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ba33c-496">In a set operation, the current instance is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>