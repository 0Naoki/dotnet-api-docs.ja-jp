<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7091a6d43b3cc99adf350405952ae5054ad9b44" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39927038" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" />
  <TypeSignature Language="F#" Value="type CharUnicodeInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0724f-101">Unicode 文字に関する情報を取得します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0724f-101">Retrieves information about a Unicode character.</span>
      </span>
      <span data-ttu-id="0724f-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0724f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0724f-103">[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)Unicode 文字のカテゴリ数を定義します。</span><span class="sxs-lookup"><span data-stu-id="0724f-103">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a number of Unicode character categories.</span></span> <span data-ttu-id="0724f-104">たとえば、大文字、小文字、10 進数、文字、数字、段落区切り記号、数学記号、または通貨記号として文字を分類可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0724f-104">For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="0724f-105">アプリケーションでは、解析や正規表現のサブスト リングの抽出など、文字列ベースの操作を管理するのに、文字カテゴリを使用できます。</span><span class="sxs-lookup"><span data-stu-id="0724f-105">Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions.</span></span> <span data-ttu-id="0724f-106"><xref:System.Globalization.UnicodeCategory>列挙可能な文字のカテゴリを定義します。</span><span class="sxs-lookup"><span data-stu-id="0724f-106">The <xref:System.Globalization.UnicodeCategory> enumeration defines the possible character categories.</span></span>  
  
 <span data-ttu-id="0724f-107">使用する、<xref:System.Globalization.CharUnicodeInfo>を取得するクラス、<xref:System.Globalization.UnicodeCategory>特定の文字の値。</span><span class="sxs-lookup"><span data-stu-id="0724f-107">You use the <xref:System.Globalization.CharUnicodeInfo> class to obtain the <xref:System.Globalization.UnicodeCategory> value for a specific character.</span></span> <span data-ttu-id="0724f-108"><xref:System.Globalization.CharUnicodeInfo>クラスは、次の Unicode 文字値を返すメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="0724f-108">The <xref:System.Globalization.CharUnicodeInfo> class defines methods that return the following Unicode character values:</span></span>  
  
-   <span data-ttu-id="0724f-109">文字またはサロゲート ペアが所属する特定のカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="0724f-109">The specific category to which a character or surrogate pair belongs.</span></span> <span data-ttu-id="0724f-110">返される値のメンバーである、<xref:System.Globalization.UnicodeCategory>列挙体。</span><span class="sxs-lookup"><span data-stu-id="0724f-110">The value returned is a member of the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span>  
  
-   <span data-ttu-id="0724f-111">数値。</span><span class="sxs-lookup"><span data-stu-id="0724f-111">Numeric value.</span></span> <span data-ttu-id="0724f-112">分数、添字、上付き文字、ローマ数字、通貨分子、丸付きの数字、およびスクリプト固有の数字を含む数値の文字にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="0724f-112">Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
-   <span data-ttu-id="0724f-113">桁の値。</span><span class="sxs-lookup"><span data-stu-id="0724f-113">Digit value.</span></span> <span data-ttu-id="0724f-114">番号付けシステムを表す整数値をその他の数値文字を組み合わせて数値の文字に適用されます。</span><span class="sxs-lookup"><span data-stu-id="0724f-114">Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.</span></span>  
  
-   <span data-ttu-id="0724f-115">10 進値。</span><span class="sxs-lookup"><span data-stu-id="0724f-115">Decimal digit value.</span></span> <span data-ttu-id="0724f-116">10 進数 (基数 10) システムでの 10 進数字を表す文字にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="0724f-116">Applies only to characters that represent decimal digits in the decimal (base 10) system.</span></span> <span data-ttu-id="0724f-117">10 進数字には、0 から 9 までの 10 桁のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="0724f-117">A decimal digit can be one of ten digits, from zero through nine.</span></span> <span data-ttu-id="0724f-118">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="0724f-118">These characters are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="0724f-119">さらに、<xref:System.Globalization.CharUnicodeInfo>クラスは、さまざまな他の .NET Framework 型と文字の分類に依存するメソッドによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="0724f-119">In addition, the <xref:System.Globalization.CharUnicodeInfo> class is used internally by a number of other .NET Framework types and methods that rely on character classification.</span></span> <span data-ttu-id="0724f-120">次の設定があります。</span><span class="sxs-lookup"><span data-stu-id="0724f-120">These include:</span></span>  
  
-   <span data-ttu-id="0724f-121"><xref:System.Globalization.StringInfo>クラスは、文字列内の 1 つの文字ではなくテキストの要素と連携します。</span><span class="sxs-lookup"><span data-stu-id="0724f-121">The <xref:System.Globalization.StringInfo> class, which works with textual elements instead of single characters in a string.</span></span>  
  
-   <span data-ttu-id="0724f-122">オーバー ロード、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドで、文字またはサロゲート ペアが所属するカテゴリを確認します。</span><span class="sxs-lookup"><span data-stu-id="0724f-122">The overloads of the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method, which determine the category to which a character or surrogate pair belongs.</span></span>  
  
-   <span data-ttu-id="0724f-123">[文字クラス](~/docs/standard/base-types/character-classes-in-regular-expressions.md)によって認識される<xref:System.Text.RegularExpressions.Regex>、.NET Framework の正規表現エンジンです。</span><span class="sxs-lookup"><span data-stu-id="0724f-123">The [character classes](~/docs/standard/base-types/character-classes-in-regular-expressions.md) recognized by <xref:System.Text.RegularExpressions.Regex>, the .NET Framework's regular expression engine.</span></span>  
  
 <span data-ttu-id="0724f-124">を、アプリケーションでこのクラスを使用する場合を保持に注意してください、次のプログラミングを使用するための考慮事項、<xref:System.Char>型。</span><span class="sxs-lookup"><span data-stu-id="0724f-124">When using this class in your applications, keep in mind the following programming considerations for using the <xref:System.Char> type.</span></span> <span data-ttu-id="0724f-125">種類を使用するには難しいし、文字列が言語的内容を表すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0724f-125">The type can be difficult to use, and strings are generally preferable for representing linguistic content.</span></span>  
  
-   <span data-ttu-id="0724f-126">A<xref:System.Char>オブジェクトが常に 1 つの文字に対応しません。</span><span class="sxs-lookup"><span data-stu-id="0724f-126">A <xref:System.Char> object does not always correspond to a single character.</span></span> <span data-ttu-id="0724f-127">ただし、<xref:System.Char>型 1 つの 16 ビット値を表し、いくつかの文字 (サロゲート ペアの前の書記素クラスターなど) は、2 つ以上の utf-16 コード単位で構成されています。</span><span class="sxs-lookup"><span data-stu-id="0724f-127">Although the <xref:System.Char> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units.</span></span> <span data-ttu-id="0724f-128">詳細については、「オブジェクトと Unicode の文字を Char する」を参照してください、<xref:System.String>クラス。</span><span class="sxs-lookup"><span data-stu-id="0724f-128">For more information, see "Char Objects and Unicode Characters" in the <xref:System.String> class.</span></span>  
  
-   <span data-ttu-id="0724f-129">"Character"の概念は、柔軟性もあります。</span><span class="sxs-lookup"><span data-stu-id="0724f-129">The notion of a "character" is also flexible.</span></span> <span data-ttu-id="0724f-130">文字が、グリフ、多くの場合、考えるが、多くのグリフが複数のコード ポイントが必要です。</span><span class="sxs-lookup"><span data-stu-id="0724f-130">A character is often thought of as a glyph, but many glyphs require multiple code points.</span></span> <span data-ttu-id="0724f-131">Ä は、たとえば、2 つのいずれかを表すコード ポイント ("a"および u+0308、結合ウムラウトである)、または、1 つのコード ポイント (「ä」または U + 00A4) によって。</span><span class="sxs-lookup"><span data-stu-id="0724f-131">For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4).</span></span> <span data-ttu-id="0724f-132">一部の言語では、多くの文字、文字、および言語的なコンテンツの表現で混乱が生じることができますが、複数のコード ポイントを必要とするグリフがあります。</span><span class="sxs-lookup"><span data-stu-id="0724f-132">Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation.</span></span> <span data-ttu-id="0724f-133">たとえば、ΰ メ (U + 03B0、ディアリティカとトノス ギリシャ文字の小文字ウプシロン) が、同等のキャップはありません。</span><span class="sxs-lookup"><span data-stu-id="0724f-133">For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter.</span></span> <span data-ttu-id="0724f-134">このような値を大文字では、元の値だけを取得します。</span><span class="sxs-lookup"><span data-stu-id="0724f-134">Uppercasing such a value simply retrieves the original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0724f-135">次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="0724f-135">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <span data-ttu-id="0724f-136">
        <para>認識されている文字と、特定のカテゴリが属する Unicode 規格によって定義されに Unicode 標準の 1 つのバージョンから変更できます。特定のバージョンの .NET Framework 内の文字の分類は、1 つのバージョンの .NET Framework が実行されている、基になるオペレーティング システムに関係なく、Unicode 規格に基づきます。次の表では、以降の .NET Framework のバージョン、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] Unicode 標準のバージョンの文字を分類するために使用します。 <list type="table"><listheader><term> .NET framework のバージョン</term><description>バージョンの Unicode 標準</description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] </term><description> [Unicode Standard、バージョン 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/) </description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)] </term><description> [Unicode 規格、バージョン 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/) </description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)] </term><description> [Unicode Standard、バージョン 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/) </description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)] </term><description> [Unicode Standard、バージョン 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/) </description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)] </term><description> [Unicode Standard、バージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/) </description></item><item><term>[!INCLUDE[net_v461](~/includes/net-v461-md.md)] </term><description> [Unicode Standard、バージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/) </description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)] </term><description> [Unicode 標準、バージョン 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/) </description></item></list> Unicode 標準の各バージョンが含まれています以前のバージョン以降の Unicode 文字データベースへの変更について説明します。                            Unicode 文字データベースを使って、<see cref="T:System.Globalization.CharUnicodeInfo" />文字を分類するためのクラス。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="0724f-136">
          <para>Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another. Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running. The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.  <list type="table"><listheader><term> .NET Framework version  </term><description> Version of the Unicode Standard  </description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  </term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  </description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]  </term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  </description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]  </term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  </description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]  </term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  </description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]  </term><description> [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  </description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]  </term><description> [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  </description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]  </term><description> [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)  </description></item></list>  Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version. The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0724f-137">数値の Unicode 文字の 10 進値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-137">Gets the decimal digit value of a numeric Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="0724f-138">10 進値を取得する対象の Unicode 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-138">The Unicode character for which to get the decimal digit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0724f-139">指定した数字の 10 進値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-139">Gets the decimal digit value of the specified numeric character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0724f-140">指定した数字の 10 進値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-140">The decimal digit value of the specified numeric character.</span>
          </span>
          <span data-ttu-id="0724f-141">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-141">-or-</span>
          </span>
          <span data-ttu-id="0724f-142">指定した文字が 10 進数でない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-142">-1, if the specified character is not a decimal digit.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0724f-143">このメソッドでは、その同等の整数値を 10 進数字を表す文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="0724f-143">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="0724f-144">10 進数字、文字、<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>カテゴリ 10 の数字で番号付けシステムは、0 から 9 までの 10 進 (基数 10) のいずれかを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="0724f-144">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="0724f-145">U + 1049 (を通じて、u+0030 (数字のゼロ) ~ u+0039 (数字 9)、U + 0660 (アラビア インド数字のゼロ) U + 0669 (アラビア インド数字 9)、U + 07 C (ンコ文字数字 0) から U + 07C 9 (ンコ文字数字 9)、および U + 1040 (ミャンマー桁のゼロ) 経由などの文字が含まれていますミャンマー語の数字 9)。</span><span class="sxs-lookup"><span data-stu-id="0724f-145">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="0724f-146">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)します。</span><span class="sxs-lookup"><span data-stu-id="0724f-146">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0724f-147">次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="0724f-147">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0724f-148">10 進値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-148">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0724f-149">10 進値を取得する対象の Unicode 文字のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-149">The index of the Unicode character for which to get the decimal digit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0724f-150">指定した文字列の指定したインデックス位置にある数字の 10 進値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-150">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0724f-151">指定した文字列の指定したインデックス位置にある数字の 10 進値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-151">The decimal digit value of the numeric character at the specified index of the specified string.</span>
          </span>
          <span data-ttu-id="0724f-152">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-152">-or-</span>
          </span>
          <span data-ttu-id="0724f-153">指定した文字列の指定したインデックス位置にある文字が 10 進数でない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-153">-1, if the character at the specified index of the specified string is not a decimal digit.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0724f-154">このメソッドでは、その同等の整数値を 10 進数字を表す文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="0724f-154">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="0724f-155">10 進数字、文字、<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>カテゴリ 10 の数字で番号付けシステムは、0 から 9 までの 10 進 (基数 10) のいずれかを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="0724f-155">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="0724f-156">U + 1049 (を通じて、u+0030 (数字のゼロ) ~ u+0039 (数字 9)、U + 0660 (アラビア インド数字のゼロ) U + 0669 (アラビア インド数字 9)、U + 07 C (ンコ文字数字 0) から U + 07C 9 (ンコ文字数字 9)、および U + 1040 (ミャンマー桁のゼロ) 経由などの文字が含まれていますミャンマー語の数字 9)。</span><span class="sxs-lookup"><span data-stu-id="0724f-156">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="0724f-157">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)します。</span><span class="sxs-lookup"><span data-stu-id="0724f-157">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0724f-158">次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="0724f-158">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0724f-159">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-159">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0724f-160">
            <paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-160">
              <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0724f-161">数値の Unicode 文字の桁の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-161">Gets the digit value of a numeric Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="0724f-162">桁の値を取得する対象の Unicode 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-162">The Unicode character for which to get the digit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0724f-163">指定した数字の桁の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-163">Gets the digit value of the specified numeric character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0724f-164">指定した数字の桁の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-164">The digit value of the specified numeric character.</span>
          </span>
          <span data-ttu-id="0724f-165">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-165">-or-</span>
          </span>
          <span data-ttu-id="0724f-166">指定した文字が桁でない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-166">-1, if the specified character is not a digit.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0724f-167">桁の値は、数字として使用できる数値文字にのみ適用されるプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0724f-167">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="0724f-168">1 桁の数字は、番号付けシステムを表す整数値を他の数字を組み合わせて数値文字です。</span><span class="sxs-lookup"><span data-stu-id="0724f-168">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="0724f-169">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)します。</span><span class="sxs-lookup"><span data-stu-id="0724f-169">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0724f-170">次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="0724f-170">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0724f-171">桁の値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-171">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0724f-172">桁の値を取得する対象の Unicode 文字のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-172">The index of the Unicode character for which to get the digit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0724f-173">指定した文字列の指定したインデックス位置にある数字の桁の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-173">Gets the digit value of the numeric character at the specified index of the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0724f-174">指定した文字列の指定したインデックス位置にある数字の桁の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-174">The digit value of the numeric character at the specified index of the specified string.</span>
          </span>
          <span data-ttu-id="0724f-175">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-175">-or-</span>
          </span>
          <span data-ttu-id="0724f-176">指定した文字列の指定したインデックス位置にある文字が桁でない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-176">-1, if the character at the specified index of the specified string is not a digit.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0724f-177">桁の値は、数字として使用できる数値文字にのみ適用されるプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0724f-177">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="0724f-178">1 桁の数字は、番号付けシステムを表す整数値を他の数字を組み合わせて数値文字です。</span><span class="sxs-lookup"><span data-stu-id="0724f-178">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="0724f-179">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)します。</span><span class="sxs-lookup"><span data-stu-id="0724f-179">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0724f-180">次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="0724f-180">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0724f-181">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-181">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0724f-182">
            <paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-182">
              <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0724f-183">Unicode 文字に関連付けられている数値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-183">Gets the numeric value associated with a Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="0724f-184">数値を取得する対象の Unicode 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-184">The Unicode character for which to get the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0724f-185">指定した文字に関連付けられている数値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-185">Gets the numeric value associated with the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0724f-186">指定した文字に関連付けられている数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-186">The numeric value associated with the specified character.</span>
          </span>
          <span data-ttu-id="0724f-187">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-187">-or-</span>
          </span>
          <span data-ttu-id="0724f-188">指定した文字が数字でない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-188">-1, if the specified character is not a numeric character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0724f-189">数値は、分数、添字、上付き文字、ローマ数字、通貨分子、丸付きの数字、およびスクリプト固有の数字を含む数字のみに適用される Unicode 文字プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0724f-189">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="0724f-190">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)します。</span><span class="sxs-lookup"><span data-stu-id="0724f-190">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="0724f-191"><xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>メソッド`ch`単一言語の文字に対応し、その文字が 10 進数字に変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0724f-191">The <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method assumes that `ch` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="0724f-192">ただし、Unicode 標準の数値が 2 で表されます<xref:System.Char>サロゲート ペアを形成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0724f-192">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="0724f-193">たとえば、番号付けシステム Aegean は U + U + 10133 を通じて 10107 のコード ポイントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="0724f-193">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="0724f-194">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> AEGEAN 番号 1 を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0724f-194">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="0724f-195">例を示しますから出力として、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>メソッドは、上位サロゲートまたは下位サロゲートのこの文字のいずれかが渡された場合に-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0724f-195">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="0724f-196">次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="0724f-196">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0724f-197">数値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-197">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0724f-198">数値を取得する対象の Unicode 文字のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-198">The index of the Unicode character for which to get the numeric value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0724f-199">指定した文字列の指定したインデックス位置にある文字に関連付けられている数値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-199">Gets the numeric value associated with the character at the specified index of the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0724f-200">指定した文字列の指定したインデックス位置にある文字に関連付けられている数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-200">The numeric value associated with the character at the specified index of the specified string.</span>
          </span>
          <span data-ttu-id="0724f-201">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-201">-or-</span>
          </span>
          <span data-ttu-id="0724f-202">指定した文字列の指定したインデックス位置にある文字が数字でない場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-202">-1, if the character at the specified index of the specified string is not a numeric character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0724f-203">数値は、分数、添字、上付き文字、ローマ数字、通貨分子、丸付きの数字、およびスクリプト固有の数字を含む数字のみに適用される Unicode 文字プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0724f-203">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="0724f-204">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)します。</span><span class="sxs-lookup"><span data-stu-id="0724f-204">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="0724f-205">場合、<xref:System.Char>位置にあるオブジェクト`index`、有効なサロゲート ペアの最初の文字は、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29>メソッドは、サロゲート ペア、フォームの数字、および場合は、その数値の値を返すかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="0724f-205">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value.</span></span> <span data-ttu-id="0724f-206">たとえば、番号付けシステム Aegean は U + U + 10133 を通じて 10107 のコード ポイントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="0724f-206">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="0724f-207">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> Aegean の個々 の数を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0724f-207">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="0724f-208">例を示しますから出力として、 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> Aegean の数の上位サロゲートが渡される場合、メソッドが適切な値を返します。</span><span class="sxs-lookup"><span data-stu-id="0724f-208">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="0724f-209">ただし、下位のサロゲート、渡される場合、下位サロゲートで分離のみを考慮し、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0724f-209">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="0724f-210">次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="0724f-210">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0724f-211">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-211">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0724f-212">
            <paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-212">
              <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0724f-213">Unicode 文字の Unicode カテゴリを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-213">Gets the Unicode category of a Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="0724f-214">Unicode カテゴリを取得する対象の Unicode 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-214">The Unicode character for which to get the Unicode category.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0724f-215">指定した文字の Unicode カテゴリを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-215">Gets the Unicode category of the specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0724f-216">指定した文字のカテゴリを示す <see cref="T:System.Globalization.UnicodeCategory" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-216">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0724f-217">Unicode 文字は、カテゴリに分類されます。</span><span class="sxs-lookup"><span data-stu-id="0724f-217">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="0724f-218">文字のカテゴリでは、そのプロパティの 1 つです。</span><span class="sxs-lookup"><span data-stu-id="0724f-218">A character's category is one of its properties.</span></span> <span data-ttu-id="0724f-219">たとえば、大文字、小文字、10 進数、文字数、コネクタ句読点、数学記号、または通貨記号文字があります。</span><span class="sxs-lookup"><span data-stu-id="0724f-219">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="0724f-220"><xref:System.Globalization.UnicodeCategory>クラスは、Unicode 文字のカテゴリを返します。</span><span class="sxs-lookup"><span data-stu-id="0724f-220">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="0724f-221">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)します。</span><span class="sxs-lookup"><span data-stu-id="0724f-221">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="0724f-222"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A>メソッド`ch`単一言語の文字に対応し、そのカテゴリを返します。</span><span class="sxs-lookup"><span data-stu-id="0724f-222">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> method assumes that `ch` corresponds to a single linguistic character and returns its category.</span></span> <span data-ttu-id="0724f-223">つまり、サロゲート ペアを返します<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>サロゲートが所属するカテゴリではなく。</span><span class="sxs-lookup"><span data-stu-id="0724f-223">This means that, for surrogate pairs, it returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> instead of the category to which the surrogate belongs.</span></span> <span data-ttu-id="0724f-224">たとえば、Ugaritic アルファベットは、コード ポイント 10380 U + U + 1039F を占有します。</span><span class="sxs-lookup"><span data-stu-id="0724f-224">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="0724f-225">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> Ugaritic アルファベット順の最初の文字である UGARITIC 文字 ALPA (U + 10380) を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0724f-225">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="0724f-226">例を示しますから出力として、<xref:System.Char.IsNumber%28System.Char%29>メソッドを返します。`false`場合は、上位サロゲートまたは下位サロゲートのこの文字のいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="0724f-226">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either the high surrogate or the low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 <span data-ttu-id="0724f-227">注意<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>常に返さない同じ<xref:System.Globalization.UnicodeCategory>と値、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッド パラメーターとして渡されると、特定の文字。</span><span class="sxs-lookup"><span data-stu-id="0724f-227">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="0724f-228"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは現在のバージョンの Unicode 標準を反映するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="0724f-228">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="0724f-229">これに対し、ですが、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは、現在のバージョンの Unicode 標準は、通常が反映されますまたは、標準の以前のバージョンに基づく文字のカテゴリを返す可能性があります、とは異なるカテゴリには、現在の標準から返されます。旧バージョンとの互換性を維持します。</span><span class="sxs-lookup"><span data-stu-id="0724f-229">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0724f-230">次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="0724f-230">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (codePoint As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(int codePoint);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="0724f-231">Unicode カテゴリを取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-231">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0724f-232">Unicode カテゴリを取得する対象の Unicode 文字のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-232">The index of the Unicode character for which to get the Unicode category.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0724f-233">指定した文字列の指定したインデックス位置にある文字の Unicode カテゴリを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-233">Gets the Unicode category of the character at the specified index of the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0724f-234">指定した文字列の指定したインデックス位置にある文字のカテゴリを示す <see cref="T:System.Globalization.UnicodeCategory" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-234">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0724f-235">Unicode 文字は、カテゴリに分類されます。</span><span class="sxs-lookup"><span data-stu-id="0724f-235">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="0724f-236">文字のカテゴリでは、そのプロパティの 1 つです。</span><span class="sxs-lookup"><span data-stu-id="0724f-236">A character's category is one of its properties.</span></span> <span data-ttu-id="0724f-237">たとえば、大文字、小文字、10 進数、文字数、コネクタ句読点、数学記号、または通貨記号文字があります。</span><span class="sxs-lookup"><span data-stu-id="0724f-237">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="0724f-238"><xref:System.Globalization.UnicodeCategory>クラスは、Unicode 文字のカテゴリを返します。</span><span class="sxs-lookup"><span data-stu-id="0724f-238">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="0724f-239">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)します。</span><span class="sxs-lookup"><span data-stu-id="0724f-239">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="0724f-240">場合、<xref:System.Char>位置にあるオブジェクト`index`、有効なサロゲート ペアの最初の文字は、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>メソッドが返す代わりに、サロゲート ペアの Unicode カテゴリを返します<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="0724f-240">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns the Unicode category of the surrogate pair instead of returning <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0724f-241">たとえば、Ugaritic アルファベットは、コード ポイント 10380 U + U + 1039F を占有します。</span><span class="sxs-lookup"><span data-stu-id="0724f-241">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="0724f-242">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> Ugaritic アルファベット順の最初の文字である UGARITIC 文字 ALPA (U + 10380) を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0724f-242">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="0724f-243">例を示しますから出力として、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>メソッドを返します。<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>場合は、この文字は、サロゲート ペアとして認識していることを示しますの上位サロゲートが渡されます。</span><span class="sxs-lookup"><span data-stu-id="0724f-243">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair.</span></span> <span data-ttu-id="0724f-244">ただし、下位のサロゲート、渡される場合の分離の下位サロゲートのみを考慮し、返します<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="0724f-244">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 <span data-ttu-id="0724f-245">なお<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは常に返しません同じ<xref:System.Globalization.UnicodeCategory>値として、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッド パラメーターとして渡されると、特定の文字。</span><span class="sxs-lookup"><span data-stu-id="0724f-245">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="0724f-246"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは現在のバージョンの Unicode 標準を反映するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="0724f-246">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="0724f-247">これに対し、ですが、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは、現在のバージョンの Unicode 標準は、通常が反映されますまたは、標準の以前のバージョンに基づく文字のカテゴリを返す可能性があります、とは異なるカテゴリには、現在の標準から返されます。旧バージョンとの互換性を維持します。</span><span class="sxs-lookup"><span data-stu-id="0724f-247">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0724f-248">次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="0724f-248">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0724f-249">
            <paramref name="s" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-249">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0724f-250">
            <paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0724f-250">
              <paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>