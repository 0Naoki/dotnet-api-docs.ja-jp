<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b2483-101">Unicode 文字に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-101">Retrieves information about a Unicode character.</span></span> <span data-ttu-id="b2483-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="b2483-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2483-103">[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)Unicode 文字のカテゴリの数を定義します。</span><span class="sxs-lookup"><span data-stu-id="b2483-103">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a number of Unicode character categories.</span></span> <span data-ttu-id="b2483-104">たとえば、文字は、大文字、小文字、10 進数、文字、数字、段落区切り記号、数学記号、または通貨記号として分類可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b2483-104">For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="b2483-105">アプリケーションは、解析や正規表現のサブスト リングの抽出など、文字列ベースの処理を制御するために文字カテゴリを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="b2483-105">Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions.</span></span> <span data-ttu-id="b2483-106"><xref:System.Globalization.UnicodeCategory>列挙可能な文字のカテゴリを定義します。</span><span class="sxs-lookup"><span data-stu-id="b2483-106">The <xref:System.Globalization.UnicodeCategory> enumeration defines the possible character categories.</span></span>  
  
 <span data-ttu-id="b2483-107">使用する、<xref:System.Globalization.CharUnicodeInfo>を取得するクラス、<xref:System.Globalization.UnicodeCategory>特定の文字の値。</span><span class="sxs-lookup"><span data-stu-id="b2483-107">You use the <xref:System.Globalization.CharUnicodeInfo> class to obtain the <xref:System.Globalization.UnicodeCategory> value for a specific character.</span></span> <span data-ttu-id="b2483-108"><xref:System.Globalization.CharUnicodeInfo>クラスを次の Unicode 文字の値を返すメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="b2483-108">The <xref:System.Globalization.CharUnicodeInfo> class defines methods that return the following Unicode character values:</span></span>  
  
-   <span data-ttu-id="b2483-109">文字またはサロゲート ペアが所属する特定のカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="b2483-109">The specific category to which a character or surrogate pair belongs.</span></span> <span data-ttu-id="b2483-110">返される値のメンバーである、<xref:System.Globalization.UnicodeCategory>列挙します。</span><span class="sxs-lookup"><span data-stu-id="b2483-110">The value returned is a member of the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span>  
  
-   <span data-ttu-id="b2483-111">数値。</span><span class="sxs-lookup"><span data-stu-id="b2483-111">Numeric value.</span></span> <span data-ttu-id="b2483-112">数値文字、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプトに固有の数字を含むにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-112">Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
-   <span data-ttu-id="b2483-113">桁の値。</span><span class="sxs-lookup"><span data-stu-id="b2483-113">Digit value.</span></span> <span data-ttu-id="b2483-114">他の番号付けシステムの数を示す整数を表す数字を組み合わせた数字に適用されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-114">Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.</span></span>  
  
-   <span data-ttu-id="b2483-115">10 進値。</span><span class="sxs-lookup"><span data-stu-id="b2483-115">Decimal digit value.</span></span> <span data-ttu-id="b2483-116">10 進数 (基数 10) システムでの小数点以下桁数を表す文字にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-116">Applies only to characters that represent decimal digits in the decimal (base 10) system.</span></span> <span data-ttu-id="b2483-117">10 進数字には、0 から 9 までの 10 桁の数字のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b2483-117">A decimal digit can be one of ten digits, from zero through nine.</span></span> <span data-ttu-id="b2483-118">これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="b2483-118">These characters are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="b2483-119">さらに、<xref:System.Globalization.CharUnicodeInfo>クラスは、多数の他の .NET Framework の型および文字分類に依存するメソッドによって内部的に使用します。</span><span class="sxs-lookup"><span data-stu-id="b2483-119">In addition, the <xref:System.Globalization.CharUnicodeInfo> class is used internally by a number of other .NET Framework types and methods that rely on character classification.</span></span> <span data-ttu-id="b2483-120">次の設定があります。</span><span class="sxs-lookup"><span data-stu-id="b2483-120">These include:</span></span>  
  
-   <span data-ttu-id="b2483-121"><xref:System.Globalization.StringInfo>クラスは、文字列内の 1 つの文字ではなくテキストの要素と連携します。</span><span class="sxs-lookup"><span data-stu-id="b2483-121">The <xref:System.Globalization.StringInfo> class, which works with textual elements instead of single characters in a string.</span></span>  
  
-   <span data-ttu-id="b2483-122">オーバー ロード、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドで、文字またはサロゲート ペアが所属するカテゴリを確認します。</span><span class="sxs-lookup"><span data-stu-id="b2483-122">The overloads of the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method, which determine the category to which a character or surrogate pair belongs.</span></span>  
  
-   <span data-ttu-id="b2483-123">[文字クラス](~/docs/standard/base-types/character-classes-in-regular-expressions.md)によって認識される<xref:System.Text.RegularExpressions.Regex>、.NET Framework の正規表現エンジンです。</span><span class="sxs-lookup"><span data-stu-id="b2483-123">The [character classes](~/docs/standard/base-types/character-classes-in-regular-expressions.md) recognized by <xref:System.Text.RegularExpressions.Regex>, the .NET Framework's regular expression engine.</span></span>  
  
 <span data-ttu-id="b2483-124">アプリケーションでこのクラスを使用するときに保持ことに注意次プログラミングの考慮事項を使用するため、<xref:System.Char>型です。</span><span class="sxs-lookup"><span data-stu-id="b2483-124">When using this class in your applications, keep in mind the following programming considerations for using the <xref:System.Char> type.</span></span> <span data-ttu-id="b2483-125">型を使用するには困難になり、文字列は言語的内容を表すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b2483-125">The type can be difficult to use, and strings are generally preferable for representing linguistic content.</span></span>  
  
-   <span data-ttu-id="b2483-126">A<xref:System.Char>オブジェクトは常に 1 つの文字に対応していません。</span><span class="sxs-lookup"><span data-stu-id="b2483-126">A <xref:System.Char> object does not always correspond to a single character.</span></span> <span data-ttu-id="b2483-127">ただし、<xref:System.Char>を表す 1 つの 16 ビット値の型、2 つ以上の utf-16 コード単位 (書記素クラスターとサロゲート ペア) などの一部の文字で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-127">Although the <xref:System.Char> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units.</span></span> <span data-ttu-id="b2483-128">詳細については、「Char オブジェクトと Unicode の文字」を参照してください、<xref:System.String>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b2483-128">For more information, see "Char Objects and Unicode Characters" in the <xref:System.String> class.</span></span>  
  
-   <span data-ttu-id="b2483-129">"Character"の概念は、柔軟性もあります。</span><span class="sxs-lookup"><span data-stu-id="b2483-129">The notion of a "character" is also flexible.</span></span> <span data-ttu-id="b2483-130">文字は、多くの場合と考える、グリフが、多くのグリフには、複数のコード ポイントが必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2483-130">A character is often thought of as a glyph, but many glyphs require multiple code points.</span></span> <span data-ttu-id="b2483-131">Ä は、たとえば、2 でいずれかを表すコード ポイント ("a"および u+0308、結合 diaeresis である)、または a の 1 つのコード ポイント (「ä」または U +0 00A4)。</span><span class="sxs-lookup"><span data-stu-id="b2483-131">For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4).</span></span> <span data-ttu-id="b2483-132">一部の言語は、多くの文字、文字、および言語のコンテンツの表示に混乱が生じる場合、複数のコード ポイントを必要とするグリフがあります。</span><span class="sxs-lookup"><span data-stu-id="b2483-132">Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation.</span></span> <span data-ttu-id="b2483-133">たとえば、ΰ メ (U +0 03B0、ギリシャ文字の小文字ウプシロン ディアリティカとトノス) はありません大文字のと同じです。</span><span class="sxs-lookup"><span data-stu-id="b2483-133">For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter.</span></span> <span data-ttu-id="b2483-134">このような値を大文字では、元の値だけを取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-134">Uppercasing such a value simply retrieves the original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2483-135">次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="b2483-135">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para><span data-ttu-id="b2483-136">認識された文字が所属する特定のカテゴリ、Unicode 規格によって定義され、別に、Unicode 規格の 1 つのバージョンから変更できます。</span><span class="sxs-lookup"><span data-stu-id="b2483-136">Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another.</span></span> <span data-ttu-id="b2483-137">特定のバージョンの .NET Framework 内の文字の分類は、.NET Framework が実行されている基になるオペレーティング システムに関係なく、Unicode 規格の 1 つのバージョンに基づきます。</span><span class="sxs-lookup"><span data-stu-id="b2483-137">Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running.</span></span> <span data-ttu-id="b2483-138">次の表に、以降の .NET Framework のバージョン、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] Unicode 標準のバージョンは、文字の分類に使用します。</span><span class="sxs-lookup"><span data-stu-id="b2483-138">The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.</span></span>  
  
 <span data-ttu-id="b2483-139"><list type="table"><listheader><term> .NET framework のバージョン</span><span class="sxs-lookup"><span data-stu-id="b2483-139"><list type="table"><listheader><term> .NET Framework version</span></span>  
  
 <span data-ttu-id="b2483-140"></term><description> Unicode 標準のバージョン</span><span class="sxs-lookup"><span data-stu-id="b2483-140"></term><description> Version of the Unicode Standard</span></span>  
  
 <span data-ttu-id="b2483-141"></description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b2483-141"></description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span></span>  
  
 <span data-ttu-id="b2483-142"></term><description> [Unicode 標準に 5.0.0 以降のバージョン](https://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="b2483-142"></term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="b2483-143"></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b2483-143"></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span></span>  
  
 <span data-ttu-id="b2483-144"></term><description> [Unicode 標準に 5.0.0 以降のバージョン](https://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="b2483-144"></term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="b2483-145"></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b2483-145"></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
  
 <span data-ttu-id="b2483-146"></term><description> [Unicode 標準に 5.0.0 以降のバージョン](https://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="b2483-146"></term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="b2483-147"></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b2483-147"></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]</span></span>  
  
 <span data-ttu-id="b2483-148"></term><description> [Unicode 標準に 5.0.0 以降のバージョン](https://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="b2483-148"></term><description> [The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="b2483-149"></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b2483-149"></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]</span></span>  
  
 <span data-ttu-id="b2483-150"></term><description> [Unicode 標準にバージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)</span><span class="sxs-lookup"><span data-stu-id="b2483-150"></term><description> [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)</span></span>  
  
 <span data-ttu-id="b2483-151"></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b2483-151"></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]</span></span>  
  
 <span data-ttu-id="b2483-152"></term><description> [Unicode 標準にバージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)</span><span class="sxs-lookup"><span data-stu-id="b2483-152"></term><description> [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)</span></span>  
  
 <span data-ttu-id="b2483-153"></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b2483-153"></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]</span></span>  
  
 <span data-ttu-id="b2483-154"></term><description> [Unicode 標準にバージョン 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)</span><span class="sxs-lookup"><span data-stu-id="b2483-154"></term><description> [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="b2483-155">Unicode 標準の各バージョンには、以前のバージョン以降、Unicode 文字データベースへの変更に関する情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2483-155">Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version.</span></span> <span data-ttu-id="b2483-156">Unicode 文字データベースを使用して、<see cref="T:System.Globalization.CharUnicodeInfo" />文字を分類するためのクラスです。</span><span class="sxs-lookup"><span data-stu-id="b2483-156">The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</span></span></para>
    </block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2483-157">数値の Unicode 文字の 10 進値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-157">Gets the decimal digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="b2483-158">10 進値を取得する対象の Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="b2483-158">The Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="b2483-159">指定した数字の 10 進値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-159">Gets the decimal digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="b2483-160">指定した数字の 10 進値。</span><span class="sxs-lookup"><span data-stu-id="b2483-160">The decimal digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="b2483-161">- または -</span><span class="sxs-lookup"><span data-stu-id="b2483-161">-or-</span></span>  
  
 <span data-ttu-id="b2483-162">指定した文字が 10 進数でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b2483-162">-1, if the specified character is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2483-163">このメソッドでは、同等の整数値に小数点以下桁数を表す文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="b2483-163">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="b2483-164">小数点以下桁数は文字で、 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 10 桁の 10 進数 (基数 10) 番号付けシステム、0 から 9 までのいずれかを表すことができるカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="b2483-164">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="b2483-165">U+0030 (数字のゼロ) ~ u+0039 (数字 9)、U +0 0660 (アラビア インド数字のゼロ) U +0 0669 (アラビア インド数字 9)、U +0 07c 0 NKO 桁 U +0 07C 9 (NKO 数字 9)、および U +0 1040 (ミャンマー桁のゼロ) (ミャンマー数字 9) U +0 1049 を通じてを通じて経由などの文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2483-165">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="b2483-166">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="b2483-166">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2483-167">次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="b2483-167">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b2483-168">10 進値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b2483-168">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span></span></param>
        <param name="index"><span data-ttu-id="b2483-169">10 進値を取得する対象の Unicode 文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2483-169">The index of the Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="b2483-170">指定した文字列の指定したインデックス位置にある数字の 10 進値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-170">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="b2483-171">指定した文字列の指定したインデックス位置にある数字の 10 進値。</span><span class="sxs-lookup"><span data-stu-id="b2483-171">The decimal digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="b2483-172">- または -</span><span class="sxs-lookup"><span data-stu-id="b2483-172">-or-</span></span>  
  
 <span data-ttu-id="b2483-173">指定した文字列の指定したインデックス位置にある文字が 10 進数でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b2483-173">-1, if the character at the specified index of the specified string is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2483-174">このメソッドでは、同等の整数値に小数点以下桁数を表す文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="b2483-174">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="b2483-175">小数点以下桁数は文字で、 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 10 桁の 10 進数 (基数 10) 番号付けシステム、0 から 9 までのいずれかを表すことができるカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="b2483-175">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="b2483-176">U+0030 (数字のゼロ) ~ u+0039 (数字 9)、U +0 0660 (アラビア インド数字のゼロ) U +0 0669 (アラビア インド数字 9)、U +0 07c 0 NKO 桁 U +0 07C 9 (NKO 数字 9)、および U +0 1040 (ミャンマー桁のゼロ) (ミャンマー数字 9) U +0 1049 を通じてを通じて経由などの文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2483-176">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="b2483-177">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="b2483-177">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2483-178">次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="b2483-178">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b2483-179"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b2483-179"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b2483-180"><paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2483-180"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2483-181">数値の Unicode 文字の桁の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-181">Gets the digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="b2483-182">桁の値を取得する対象の Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="b2483-182">The Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="b2483-183">指定した数字の桁の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-183">Gets the digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="b2483-184">指定した数字の桁の値。</span><span class="sxs-lookup"><span data-stu-id="b2483-184">The digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="b2483-185">- または -</span><span class="sxs-lookup"><span data-stu-id="b2483-185">-or-</span></span>  
  
 <span data-ttu-id="b2483-186">指定した文字が桁でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b2483-186">-1, if the specified character is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2483-187">桁の値は、数字として使用できる文字の数値にのみ適用されるプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b2483-187">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="b2483-188">1 桁の数字は、番号付けシステムの数を示す整数を表すためには、その他の数字を組み合わせたの数字です。</span><span class="sxs-lookup"><span data-stu-id="b2483-188">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="b2483-189">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="b2483-189">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2483-190">次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="b2483-190">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b2483-191">桁の値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b2483-191">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span></span></param>
        <param name="index"><span data-ttu-id="b2483-192">桁の値を取得する対象の Unicode 文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2483-192">The index of the Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="b2483-193">指定した文字列の指定したインデックス位置にある数字の桁の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-193">Gets the digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="b2483-194">指定した文字列の指定したインデックス位置にある数字の桁の値。</span><span class="sxs-lookup"><span data-stu-id="b2483-194">The digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="b2483-195">- または -</span><span class="sxs-lookup"><span data-stu-id="b2483-195">-or-</span></span>  
  
 <span data-ttu-id="b2483-196">指定した文字列の指定したインデックス位置にある文字が桁でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b2483-196">-1, if the character at the specified index of the specified string is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2483-197">桁の値は、数字として使用できる文字の数値にのみ適用されるプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b2483-197">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="b2483-198">1 桁の数字は、番号付けシステムの数を示す整数を表すためには、その他の数字を組み合わせたの数字です。</span><span class="sxs-lookup"><span data-stu-id="b2483-198">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="b2483-199">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="b2483-199">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2483-200">次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="b2483-200">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b2483-201"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b2483-201"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b2483-202"><paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2483-202"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2483-203">Unicode 文字に関連付けられている数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-203">Gets the numeric value associated with a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="b2483-204">数値を取得する対象の Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="b2483-204">The Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="b2483-205">指定した文字に関連付けられている数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-205">Gets the numeric value associated with the specified character.</span></span></summary>
        <returns><span data-ttu-id="b2483-206">指定した文字に関連付けられている数値。</span><span class="sxs-lookup"><span data-stu-id="b2483-206">The numeric value associated with the specified character.</span></span>  
  
 <span data-ttu-id="b2483-207">- または -</span><span class="sxs-lookup"><span data-stu-id="b2483-207">-or-</span></span>  
  
 <span data-ttu-id="b2483-208">指定した文字が数字でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b2483-208">-1, if the specified character is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2483-209">数値は、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプトに固有の数字を含める数字だけに適用される Unicode 文字プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b2483-209">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="b2483-210">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="b2483-210">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="b2483-211"><xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>メソッドと見なします`ch`単一言語の文字に対応しており、その文字が 10 進数字に変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b2483-211">The <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method assumes that `ch` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="b2483-212">ただし、Unicode 規格の一部の数値が 2 で表されます<xref:System.Char>サロゲート ペアを形成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2483-212">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="b2483-213">たとえば、番号付けシステム エーゲは U +0 10133 を通じて 10107 U +0 のコード ポイントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-213">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="b2483-214">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> AEGEAN 番号 1 を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b2483-214">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="b2483-215">例から出力として、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>上位サロゲートまたは下位サロゲートのこの文字のいずれかが渡された場合、メソッドは-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="b2483-215">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="b2483-216">次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="b2483-216">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b2483-217">数値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b2483-217">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span></span></param>
        <param name="index"><span data-ttu-id="b2483-218">数値を取得する対象の Unicode 文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2483-218">The index of the Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="b2483-219">指定した文字列の指定したインデックス位置にある文字に関連付けられている数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-219">Gets the numeric value associated with the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="b2483-220">指定した文字列の指定したインデックス位置にある文字に関連付けられている数値。</span><span class="sxs-lookup"><span data-stu-id="b2483-220">The numeric value associated with the character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="b2483-221">- または -</span><span class="sxs-lookup"><span data-stu-id="b2483-221">-or-</span></span>  
  
 <span data-ttu-id="b2483-222">指定した文字列の指定したインデックス位置にある文字が数字でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b2483-222">-1, if the character at the specified index of the specified string is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2483-223">数値は、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプトに固有の数字を含める数字だけに適用される Unicode 文字プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b2483-223">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="b2483-224">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="b2483-224">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="b2483-225">場合、<xref:System.Char>オブジェクト位置にある`index`、有効なサロゲート ペアの最初の文字、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29>メソッドかどうか、サロゲート ペア フォームの数字、および決定する場合は、その数値の値を返します。</span><span class="sxs-lookup"><span data-stu-id="b2483-225">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value.</span></span> <span data-ttu-id="b2483-226">たとえば、番号付けシステム エーゲは U +0 10133 を通じて 10107 U +0 のコード ポイントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-226">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="b2483-227">次の例では、 <xref:System.Char.ConvertFromUtf32%2A> Aegean の個々 の数を表す文字列をインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b2483-227">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="b2483-228">例から出力として、 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> Aegean 数の上位サロゲート渡される場合、メソッドが適切な数値を返します。</span><span class="sxs-lookup"><span data-stu-id="b2483-228">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="b2483-229">ただし、下位サロゲート、渡される場合メソッド分離に下位サロゲートのみを考慮し、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="b2483-229">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="b2483-230">次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="b2483-230">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b2483-231"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b2483-231"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b2483-232"><paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2483-232"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2483-233">Unicode 文字の Unicode カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-233">Gets the Unicode category of a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="b2483-234">Unicode カテゴリを取得する対象の Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="b2483-234">The Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="b2483-235">指定した文字の Unicode カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-235">Gets the Unicode category of the specified character.</span></span></summary>
        <returns><span data-ttu-id="b2483-236">指定した文字のカテゴリを示す <see cref="T:System.Globalization.UnicodeCategory" /> 値。</span><span class="sxs-lookup"><span data-stu-id="b2483-236">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2483-237">Unicode 文字は、カテゴリに分類されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-237">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="b2483-238">文字のカテゴリは、そのプロパティの 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b2483-238">A character's category is one of its properties.</span></span> <span data-ttu-id="b2483-239">たとえば、大文字、小文字、10 進数、文字、数字、コネクタ句読点で、数学記号、または通貨記号文字があります。</span><span class="sxs-lookup"><span data-stu-id="b2483-239">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="b2483-240"><xref:System.Globalization.UnicodeCategory>クラスは、Unicode 文字のカテゴリを返します。</span><span class="sxs-lookup"><span data-stu-id="b2483-240">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="b2483-241">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="b2483-241">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="b2483-242"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A>メソッドと見なします`ch`単一言語の文字に対応しており、そのカテゴリを返します。</span><span class="sxs-lookup"><span data-stu-id="b2483-242">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> method assumes that `ch` corresponds to a single linguistic character and returns its category.</span></span> <span data-ttu-id="b2483-243">つまり、サロゲート ペアをそれを返します<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>サロゲートが属しているカテゴリの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b2483-243">This means that, for surrogate pairs, it returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> instead of the category to which the surrogate belongs.</span></span> <span data-ttu-id="b2483-244">たとえば、Ugaritic アルファベットは U +0 1039F にコード ポイント U +0 10380 を占有します。</span><span class="sxs-lookup"><span data-stu-id="b2483-244">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="b2483-245">次の例では、<xref:System.Char.ConvertFromUtf32%2A>メソッドを表す Ugaritic アルファベット順の最初の文字である UGARITIC 文字 ALPA (U +0 10380)、文字列のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b2483-245">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="b2483-246">例から出力として、<xref:System.Char.IsNumber%28System.Char%29>メソッドを返します。`false`上位サロゲートまたは下位サロゲートのこの文字のいずれか渡されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-246">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either the high surrogate or the low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 <span data-ttu-id="b2483-247">注意してください<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>常に返さない同じ<xref:System.Globalization.UnicodeCategory>値として、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッド パラメーターとして渡されると特定の文字です。</span><span class="sxs-lookup"><span data-stu-id="b2483-247">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="b2483-248"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドが現在のバージョンの Unicode 標準を反映するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b2483-248">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="b2483-249">これに対し、ですが、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは通常、Unicode 規格の現在のバージョンを反映して、以前のバージョンの標準に基づく文字のカテゴリを返す場合がありますまたはとは異なるカテゴリの下位互換性を保持するために、現在の標準から返されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-249">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2483-250">次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="b2483-250">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (codePoint As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(int codePoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b2483-251">Unicode カテゴリを取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b2483-251">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span></span></param>
        <param name="index"><span data-ttu-id="b2483-252">Unicode カテゴリを取得する対象の Unicode 文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2483-252">The index of the Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="b2483-253">指定した文字列の指定したインデックス位置にある文字の Unicode カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="b2483-253">Gets the Unicode category of the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="b2483-254">指定した文字列の指定したインデックス位置にある文字のカテゴリを示す <see cref="T:System.Globalization.UnicodeCategory" /> 値。</span><span class="sxs-lookup"><span data-stu-id="b2483-254">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2483-255">Unicode 文字は、カテゴリに分類されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-255">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="b2483-256">文字のカテゴリは、そのプロパティの 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b2483-256">A character's category is one of its properties.</span></span> <span data-ttu-id="b2483-257">たとえば、大文字、小文字、10 進数、文字、数字、コネクタ句読点で、数学記号、または通貨記号文字があります。</span><span class="sxs-lookup"><span data-stu-id="b2483-257">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="b2483-258"><xref:System.Globalization.UnicodeCategory>クラスは、Unicode 文字のカテゴリを返します。</span><span class="sxs-lookup"><span data-stu-id="b2483-258">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="b2483-259">Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。</span><span class="sxs-lookup"><span data-stu-id="b2483-259">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="b2483-260">場合、<xref:System.Char>オブジェクト位置にある`index`、有効なサロゲート ペアの最初の文字、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>メソッドが返す代わりに、サロゲート ペアの Unicode カテゴリを返す<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="b2483-260">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns the Unicode category of the surrogate pair instead of returning <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b2483-261">たとえば、Ugaritic アルファベットは U +0 1039F にコード ポイント U +0 10380 を占有します。</span><span class="sxs-lookup"><span data-stu-id="b2483-261">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="b2483-262">次の例では、<xref:System.Char.ConvertFromUtf32%2A>メソッドを表す Ugaritic アルファベット順の最初の文字である UGARITIC 文字 ALPA (U +0 10380)、文字列のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b2483-262">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="b2483-263">例から出力として、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>メソッドを返します。<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>場合、この文字は、サロゲート ペアと見なされることを示しますの上位サロゲートが渡されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-263">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair.</span></span> <span data-ttu-id="b2483-264">ただし、下位サロゲート、渡される場合分離に下位サロゲートのみを考慮し、返します<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="b2483-264">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 <span data-ttu-id="b2483-265">なお<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは常に返しません同じ<xref:System.Globalization.UnicodeCategory>として値、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッド パラメーターとして渡されると特定の文字です。</span><span class="sxs-lookup"><span data-stu-id="b2483-265">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="b2483-266"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドが現在のバージョンの Unicode 標準を反映するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b2483-266">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="b2483-267">これに対し、ですが、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは通常、Unicode 規格の現在のバージョンを反映して、以前のバージョンの標準に基づく文字のカテゴリを返す場合がありますまたはとは異なるカテゴリの下位互換性を保持するために、現在の標準から返されます。</span><span class="sxs-lookup"><span data-stu-id="b2483-267">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2483-268">次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。</span><span class="sxs-lookup"><span data-stu-id="b2483-268">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b2483-269"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b2483-269"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b2483-270"><paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2483-270"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>