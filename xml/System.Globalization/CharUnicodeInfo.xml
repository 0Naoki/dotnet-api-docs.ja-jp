<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8bee7b96cd712f99cea3c5b643e9b885b969b98" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33682201" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Unicode 文字に関する情報を取得します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)Unicode 文字のカテゴリの数を定義します。 たとえば、文字は、大文字、小文字、10 進数、文字、数字、段落区切り記号、数学記号、または通貨記号として分類可能性があります。 アプリケーションは、解析や正規表現のサブスト リングの抽出など、文字列ベースの処理を制御するために文字カテゴリを使用することができます。 <xref:System.Globalization.UnicodeCategory>列挙可能な文字のカテゴリを定義します。  
  
 使用する、<xref:System.Globalization.CharUnicodeInfo>を取得するクラス、<xref:System.Globalization.UnicodeCategory>特定の文字の値。 <xref:System.Globalization.CharUnicodeInfo>クラスを次の Unicode 文字の値を返すメソッドを定義します。  
  
-   文字またはサロゲート ペアが所属する特定のカテゴリ。 返される値のメンバーである、<xref:System.Globalization.UnicodeCategory>列挙します。  
  
-   数値。 数値文字、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプトに固有の数字を含むにのみ適用されます。  
  
-   桁の値。 他の番号付けシステムの数を示す整数を表す数字を組み合わせた数字に適用されます。  
  
-   10 進値。 10 進数 (基数 10) システムでの小数点以下桁数を表す文字にのみ適用されます。 10 進数字には、0 から 9 までの 10 桁の数字のいずれかを指定できます。 これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>カテゴリ。  
  
 さらに、<xref:System.Globalization.CharUnicodeInfo>クラスは、多数の他の .NET Framework の型および文字分類に依存するメソッドによって内部的に使用します。 次の設定があります。  
  
-   <xref:System.Globalization.StringInfo>クラスは、文字列内の 1 つの文字ではなくテキストの要素と連携します。  
  
-   オーバー ロード、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドで、文字またはサロゲート ペアが所属するカテゴリを確認します。  
  
-   [文字クラス](~/docs/standard/base-types/character-classes-in-regular-expressions.md)によって認識される<xref:System.Text.RegularExpressions.Regex>、.NET Framework の正規表現エンジンです。  
  
 アプリケーションでこのクラスを使用するときに保持ことに注意次プログラミングの考慮事項を使用するため、<xref:System.Char>型です。 型を使用するには困難になり、文字列は言語的内容を表すことをお勧めします。  
  
-   A<xref:System.Char>オブジェクトは常に 1 つの文字に対応していません。 ただし、<xref:System.Char>を表す 1 つの 16 ビット値の型、2 つ以上の utf-16 コード単位 (書記素クラスターとサロゲート ペア) などの一部の文字で構成されます。 詳細については、「Char オブジェクトと Unicode の文字」を参照してください、<xref:System.String>クラスです。  
  
-   "Character"の概念は、柔軟性もあります。 文字は、多くの場合と考える、グリフが、多くのグリフには、複数のコード ポイントが必要があります。 Ä は、たとえば、2 でいずれかを表すコード ポイント ("a"および u+0308、結合 diaeresis である)、または a の 1 つのコード ポイント (「ä」または U +0 00A4)。 一部の言語は、多くの文字、文字、および言語のコンテンツの表示に混乱が生じる場合、複数のコード ポイントを必要とするグリフがあります。 たとえば、ΰ メ (U +0 03B0、ギリシャ文字の小文字ウプシロン ディアリティカとトノス) はありません大文字のと同じです。 このような値を大文字では、元の値だけを取得します。  
  
   
  
## Examples  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>認識された文字が所属する特定のカテゴリ、Unicode 規格によって定義され、別に、Unicode 規格の 1 つのバージョンから変更できます。 特定のバージョンの .NET Framework 内の文字の分類は、.NET Framework が実行されている基になるオペレーティング システムに関係なく、Unicode 規格の 1 つのバージョンに基づきます。 次の表に、以降の .NET Framework のバージョン、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] Unicode 標準のバージョンは、文字の分類に使用します。  
  
 <list type="table"><listheader><term> .NET framework のバージョン  
  
 </term><description> Unicode 標準のバージョン  
  
 </description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  
  
 </term><description> [Unicode 標準に 5.0.0 以降のバージョン](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]  
  
 </term><description> [Unicode 標準に 5.0.0 以降のバージョン](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]  
  
 </term><description> [Unicode 標準に 5.0.0 以降のバージョン](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]  
  
 </term><description> [Unicode 標準に 5.0.0 以降のバージョン](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]  
  
 </term><description> [Unicode 標準にバージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]  
  
 </term><description> [Unicode 標準にバージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]  
  
 </term><description> [Unicode 標準にバージョン 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)  
  
 </description></item></list>  
  
 Unicode 標準の各バージョンには、以前のバージョン以降、Unicode 文字データベースへの変更に関する情報が含まれます。 Unicode 文字データベースを使用して、<see cref="T:System.Globalization.CharUnicodeInfo" />文字を分類するためのクラスです。</para>
    </block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>数値の Unicode 文字の 10 進値を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">10 進値を取得する対象の Unicode 文字。</param>
        <summary>指定した数字の 10 進値を取得します。</summary>
        <returns>指定した数字の 10 進値。  
  
 - または -  
  
 指定した文字が 10 進数でない場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、同等の整数値に小数点以下桁数を表す文字に変換します。 小数点以下桁数は文字で、 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 10 桁の 10 進数 (基数 10) 番号付けシステム、0 から 9 までのいずれかを表すことができるカテゴリ。 U+0030 (数字のゼロ) ~ u+0039 (数字 9)、U +0 0660 (アラビア インド数字のゼロ) U +0 0669 (アラビア インド数字 9)、U +0 07c 0 NKO 桁 U +0 07C 9 (NKO 数字 9)、および U +0 1040 (ミャンマー桁のゼロ) (ミャンマー数字 9) U +0 1049 を通じてを通じて経由などの文字が含まれています。  
  
 Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。  
  
   
  
## Examples  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">10 進値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</param>
        <param name="index">10 進値を取得する対象の Unicode 文字のインデックス。</param>
        <summary>指定した文字列の指定したインデックス位置にある数字の 10 進値を取得します。</summary>
        <returns>指定した文字列の指定したインデックス位置にある数字の 10 進値。  
  
 - または -  
  
 指定した文字列の指定したインデックス位置にある文字が 10 進数でない場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドでは、同等の整数値に小数点以下桁数を表す文字に変換します。 小数点以下桁数は文字で、 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> 10 桁の 10 進数 (基数 10) 番号付けシステム、0 から 9 までのいずれかを表すことができるカテゴリ。 U+0030 (数字のゼロ) ~ u+0039 (数字 9)、U +0 0660 (アラビア インド数字のゼロ) U +0 0669 (アラビア インド数字 9)、U +0 07c 0 NKO 桁 U +0 07C 9 (NKO 数字 9)、および U +0 1040 (ミャンマー桁のゼロ) (ミャンマー数字 9) U +0 1049 を通じてを通じて経由などの文字が含まれています。  
  
 Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。  
  
   
  
## Examples  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>数値の Unicode 文字の桁の値を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">桁の値を取得する対象の Unicode 文字。</param>
        <summary>指定した数字の桁の値を取得します。</summary>
        <returns>指定した数字の桁の値。  
  
 - または -  
  
 指定した文字が桁でない場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 桁の値は、数字として使用できる文字の数値にのみ適用されるプロパティです。 1 桁の数字は、番号付けシステムの数を示す整数を表すためには、その他の数字を組み合わせたの数字です。  
  
 Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。  
  
   
  
## Examples  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">桁の値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</param>
        <param name="index">桁の値を取得する対象の Unicode 文字のインデックス。</param>
        <summary>指定した文字列の指定したインデックス位置にある数字の桁の値を取得します。</summary>
        <returns>指定した文字列の指定したインデックス位置にある数字の桁の値。  
  
 - または -  
  
 指定した文字列の指定したインデックス位置にある文字が桁でない場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 桁の値は、数字として使用できる文字の数値にのみ適用されるプロパティです。 1 桁の数字は、番号付けシステムの数を示す整数を表すためには、その他の数字を組み合わせたの数字です。  
  
 Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。  
  
   
  
## Examples  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Unicode 文字に関連付けられている数値を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">数値を取得する対象の Unicode 文字。</param>
        <summary>指定した文字に関連付けられている数値を取得します。</summary>
        <returns>指定した文字に関連付けられている数値。  
  
 - または -  
  
 指定した文字が数字でない場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数値は、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプトに固有の数字を含める数字だけに適用される Unicode 文字プロパティです。 Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。  
  
 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>メソッドと見なします`ch`単一言語の文字に対応しており、その文字が 10 進数字に変換できるかどうかを確認します。 ただし、Unicode 規格の一部の数値が 2 で表されます<xref:System.Char>サロゲート ペアを形成するオブジェクト。 たとえば、番号付けシステム エーゲは U +0 10133 を通じて 10107 U +0 のコード ポイントで構成されます。 次の例では、 <xref:System.Char.ConvertFromUtf32%2A> AEGEAN 番号 1 を表す文字列をインスタンス化するメソッド。 例から出力として、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>上位サロゲートまたは下位サロゲートのこの文字のいずれかが渡された場合、メソッドは-1 を返します。  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">数値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</param>
        <param name="index">数値を取得する対象の Unicode 文字のインデックス。</param>
        <summary>指定した文字列の指定したインデックス位置にある文字に関連付けられている数値を取得します。</summary>
        <returns>指定した文字列の指定したインデックス位置にある文字に関連付けられている数値。  
  
 - または -  
  
 指定した文字列の指定したインデックス位置にある文字が数字でない場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数値は、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプトに固有の数字を含める数字だけに適用される Unicode 文字プロパティです。 Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。  
  
 場合、<xref:System.Char>オブジェクト位置にある`index`、有効なサロゲート ペアの最初の文字、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29>メソッドかどうか、サロゲート ペア フォームの数字、および決定する場合は、その数値の値を返します。 たとえば、番号付けシステム エーゲは U +0 10133 を通じて 10107 U +0 のコード ポイントで構成されます。 次の例では、 <xref:System.Char.ConvertFromUtf32%2A> Aegean の個々 の数を表す文字列をインスタンス化するメソッド。 例から出力として、 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> Aegean 数の上位サロゲート渡される場合、メソッドが適切な数値を返します。 ただし、下位サロゲート、渡される場合メソッド分離に下位サロゲートのみを考慮し、-1 を返します。  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Unicode 文字の Unicode カテゴリを取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">Unicode カテゴリを取得する対象の Unicode 文字。</param>
        <summary>指定した文字の Unicode カテゴリを取得します。</summary>
        <returns>指定した文字のカテゴリを示す <see cref="T:System.Globalization.UnicodeCategory" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unicode 文字は、カテゴリに分類されます。 文字のカテゴリは、そのプロパティの 1 つです。 たとえば、大文字、小文字、10 進数、文字、数字、コネクタ句読点で、数学記号、または通貨記号文字があります。 <xref:System.Globalization.UnicodeCategory>クラスは、Unicode 文字のカテゴリを返します。 Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。  
  
 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A>メソッドと見なします`ch`単一言語の文字に対応しており、そのカテゴリを返します。 つまり、サロゲート ペアをそれを返します<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>サロゲートが属しているカテゴリの代わりにします。 たとえば、Ugaritic アルファベットは U +0 1039F にコード ポイント U +0 10380 を占有します。 次の例では、<xref:System.Char.ConvertFromUtf32%2A>メソッドを表す Ugaritic アルファベット順の最初の文字である UGARITIC 文字 ALPA (U +0 10380)、文字列のインスタンスを作成します。 例から出力として、<xref:System.Char.IsNumber%28System.Char%29>メソッドを返します。`false`上位サロゲートまたは下位サロゲートのこの文字のいずれか渡されます。  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 注意してください<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>常に返さない同じ<xref:System.Globalization.UnicodeCategory>値として、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッド パラメーターとして渡されると特定の文字です。 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドが現在のバージョンの Unicode 標準を反映するように設計されています。 これに対し、ですが、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは通常、Unicode 規格の現在のバージョンを反映して、以前のバージョンの標準に基づく文字のカテゴリを返す場合がありますまたはとは異なるカテゴリの下位互換性を保持するために、現在の標準から返されます。  
  
   
  
## Examples  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (codePoint As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(int codePoint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codePoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">Unicode カテゴリを取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</param>
        <param name="index">Unicode カテゴリを取得する対象の Unicode 文字のインデックス。</param>
        <summary>指定した文字列の指定したインデックス位置にある文字の Unicode カテゴリを取得します。</summary>
        <returns>指定した文字列の指定したインデックス位置にある文字のカテゴリを示す <see cref="T:System.Globalization.UnicodeCategory" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Unicode 文字は、カテゴリに分類されます。 文字のカテゴリは、そのプロパティの 1 つです。 たとえば、大文字、小文字、10 進数、文字、数字、コネクタ句読点で、数学記号、または通貨記号文字があります。 <xref:System.Globalization.UnicodeCategory>クラスは、Unicode 文字のカテゴリを返します。 Unicode 文字の詳細については、次を参照してください。、 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)です。  
  
 場合、<xref:System.Char>オブジェクト位置にある`index`、有効なサロゲート ペアの最初の文字、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>メソッドが返す代わりに、サロゲート ペアの Unicode カテゴリを返す<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>です。 たとえば、Ugaritic アルファベットは U +0 1039F にコード ポイント U +0 10380 を占有します。 次の例では、<xref:System.Char.ConvertFromUtf32%2A>メソッドを表す Ugaritic アルファベット順の最初の文字である UGARITIC 文字 ALPA (U +0 10380)、文字列のインスタンスを作成します。 例から出力として、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>メソッドを返します。<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>場合、この文字は、サロゲート ペアと見なされることを示しますの上位サロゲートが渡されます。 ただし、下位サロゲート、渡される場合分離に下位サロゲートのみを考慮し、返します<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>です。  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 なお<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは常に返しません同じ<xref:System.Globalization.UnicodeCategory>として値、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッド パラメーターとして渡されると特定の文字です。 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドが現在のバージョンの Unicode 標準を反映するように設計されています。 これに対し、ですが、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは通常、Unicode 規格の現在のバージョンを反映して、以前のバージョンの標準に基づく文字のカテゴリを返す場合がありますまたはとは異なるカテゴリの下位互換性を保持するために、現在の標準から返されます。  
  
   
  
## Examples  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>