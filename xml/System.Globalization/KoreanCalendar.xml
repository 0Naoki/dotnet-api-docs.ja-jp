<Type Name="KoreanCalendar" FullName="System.Globalization.KoreanCalendar">
  <TypeSignature Language="C#" Value="public class KoreanCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit KoreanCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.KoreanCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class KoreanCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class KoreanCalendar : System::Globalization::Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c86a3-101">韓国暦を表します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-101">Represents the Korean calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-102">韓国暦はグレゴリオ暦のカレンダーとまったく同じですが、年と時代 (年号) が異なります。</span><span class="sxs-lookup"><span data-stu-id="c86a3-102">The Korean calendar is exactly like the Gregorian calendar, except that the year and era are different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a3-103">使用方法について、<xref:System.Globalization.KoreanCalendar>クラスと、その他の .NET Framework のクラスを予定表を参照してください[カレンダーの使用](~/docs/standard/datetime/working-with-calendars.md)です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-103">For information about using the <xref:System.Globalization.KoreanCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="c86a3-104"><xref:System.Globalization.KoreanCalendar>クラスは、現在の時代のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-104">The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.</span></span>  
  
 <span data-ttu-id="c86a3-105">うるう年韓国暦では、グレゴリオ暦で同じ閏年に対応します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-105">Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="c86a3-106">うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-106">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="c86a3-107">400 で割り切れるグレゴリオ暦年がうるう年です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-107">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="c86a3-108">共通の年度は 365 日を持ち、うるう年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="c86a3-108">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="c86a3-109">韓国暦では、28 ~ 31 日に 12 か月間があります。</span><span class="sxs-lookup"><span data-stu-id="c86a3-109">The Korean calendar has 12 months with 28 to 31 days each:</span></span>  
  
|<span data-ttu-id="c86a3-110">GetMonth 値</span><span class="sxs-lookup"><span data-stu-id="c86a3-110">GetMonth value</span></span>|<span data-ttu-id="c86a3-111">月</span><span class="sxs-lookup"><span data-stu-id="c86a3-111">Month</span></span>|<span data-ttu-id="c86a3-112">一般的な年の日</span><span class="sxs-lookup"><span data-stu-id="c86a3-112">Days in common years</span></span>|<span data-ttu-id="c86a3-113">閏年の日数</span><span class="sxs-lookup"><span data-stu-id="c86a3-113">Days in leap years</span></span>|  
|--------------------|-----------|--------------------------|------------------------|  
|<span data-ttu-id="c86a3-114">1</span><span class="sxs-lookup"><span data-stu-id="c86a3-114">1</span></span>|<span data-ttu-id="c86a3-115">1월 (1 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-115">1월 (January)</span></span>|<span data-ttu-id="c86a3-116">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-116">31</span></span>|<span data-ttu-id="c86a3-117">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-117">31</span></span>|  
|<span data-ttu-id="c86a3-118">2</span><span class="sxs-lookup"><span data-stu-id="c86a3-118">2</span></span>|<span data-ttu-id="c86a3-119">2월 (2 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-119">2월 (February)</span></span>|<span data-ttu-id="c86a3-120">28</span><span class="sxs-lookup"><span data-stu-id="c86a3-120">28</span></span>|<span data-ttu-id="c86a3-121">29</span><span class="sxs-lookup"><span data-stu-id="c86a3-121">29</span></span>|  
|<span data-ttu-id="c86a3-122">3</span><span class="sxs-lookup"><span data-stu-id="c86a3-122">3</span></span>|<span data-ttu-id="c86a3-123">3월 (年 3 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-123">3월 (March)</span></span>|<span data-ttu-id="c86a3-124">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-124">31</span></span>|<span data-ttu-id="c86a3-125">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-125">31</span></span>|  
|<span data-ttu-id="c86a3-126">4</span><span class="sxs-lookup"><span data-stu-id="c86a3-126">4</span></span>|<span data-ttu-id="c86a3-127">4월 (年 4 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-127">4월 (April)</span></span>|<span data-ttu-id="c86a3-128">30</span><span class="sxs-lookup"><span data-stu-id="c86a3-128">30</span></span>|<span data-ttu-id="c86a3-129">30</span><span class="sxs-lookup"><span data-stu-id="c86a3-129">30</span></span>|  
|<span data-ttu-id="c86a3-130">5</span><span class="sxs-lookup"><span data-stu-id="c86a3-130">5</span></span>|<span data-ttu-id="c86a3-131">5월 (月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-131">5월 (May)</span></span>|<span data-ttu-id="c86a3-132">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-132">31</span></span>|<span data-ttu-id="c86a3-133">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-133">31</span></span>|  
|<span data-ttu-id="c86a3-134">6</span><span class="sxs-lookup"><span data-stu-id="c86a3-134">6</span></span>|<span data-ttu-id="c86a3-135">6월 (6 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-135">6월 (June)</span></span>|<span data-ttu-id="c86a3-136">30</span><span class="sxs-lookup"><span data-stu-id="c86a3-136">30</span></span>|<span data-ttu-id="c86a3-137">30</span><span class="sxs-lookup"><span data-stu-id="c86a3-137">30</span></span>|  
|<span data-ttu-id="c86a3-138">7</span><span class="sxs-lookup"><span data-stu-id="c86a3-138">7</span></span>|<span data-ttu-id="c86a3-139">7월 (7 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-139">7월 (July)</span></span>|<span data-ttu-id="c86a3-140">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-140">31</span></span>|<span data-ttu-id="c86a3-141">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-141">31</span></span>|  
|<span data-ttu-id="c86a3-142">8</span><span class="sxs-lookup"><span data-stu-id="c86a3-142">8</span></span>|<span data-ttu-id="c86a3-143">8월 (8 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-143">8월 (August)</span></span>|<span data-ttu-id="c86a3-144">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-144">31</span></span>|<span data-ttu-id="c86a3-145">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-145">31</span></span>|  
|<span data-ttu-id="c86a3-146">9</span><span class="sxs-lookup"><span data-stu-id="c86a3-146">9</span></span>|<span data-ttu-id="c86a3-147">9월 (年 9 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-147">9월 (September)</span></span>|<span data-ttu-id="c86a3-148">30</span><span class="sxs-lookup"><span data-stu-id="c86a3-148">30</span></span>|<span data-ttu-id="c86a3-149">30</span><span class="sxs-lookup"><span data-stu-id="c86a3-149">30</span></span>|  
|<span data-ttu-id="c86a3-150">10</span><span class="sxs-lookup"><span data-stu-id="c86a3-150">10</span></span>|<span data-ttu-id="c86a3-151">10월 (年 10 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-151">10월 (October)</span></span>|<span data-ttu-id="c86a3-152">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-152">31</span></span>|<span data-ttu-id="c86a3-153">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-153">31</span></span>|  
|<span data-ttu-id="c86a3-154">11</span><span class="sxs-lookup"><span data-stu-id="c86a3-154">11</span></span>|<span data-ttu-id="c86a3-155">11월 (11 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-155">11월 (November)</span></span>|<span data-ttu-id="c86a3-156">30</span><span class="sxs-lookup"><span data-stu-id="c86a3-156">30</span></span>|<span data-ttu-id="c86a3-157">30</span><span class="sxs-lookup"><span data-stu-id="c86a3-157">30</span></span>|  
|<span data-ttu-id="c86a3-158">12</span><span class="sxs-lookup"><span data-stu-id="c86a3-158">12</span></span>|<span data-ttu-id="c86a3-159">12월 (12 月)</span><span class="sxs-lookup"><span data-stu-id="c86a3-159">12월 (December)</span></span>|<span data-ttu-id="c86a3-160">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-160">31</span></span>|<span data-ttu-id="c86a3-161">31</span><span class="sxs-lookup"><span data-stu-id="c86a3-161">31</span></span>|  
  
 <span data-ttu-id="c86a3-162">2 月 29 日、閏年と平年 28 の日があります。</span><span class="sxs-lookup"><span data-stu-id="c86a3-162">February has 29 days during leap years and 28 days during common years.</span></span>  
  
 <span data-ttu-id="c86a3-163">西暦 2001 年 1 月 1 日の日付</span><span class="sxs-lookup"><span data-stu-id="c86a3-163">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="c86a3-164">韓国暦では現在の時代 (年号) の 4334 年 1 月の最初の日に相当します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-164">in the Gregorian calendar is equivalent to the first day of January in the year 4334 of the current era in the Korean calendar.</span></span>  
  
 <span data-ttu-id="c86a3-165">各<xref:System.Globalization.CultureInfo>オブジェクトは、予定表のセットをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a3-165">Each <xref:System.Globalization.CultureInfo> object supports a set of calendars.</span></span> <span data-ttu-id="c86a3-166"><xref:System.Globalization.CultureInfo.Calendar%2A>プロパティを返します、カルチャの既定のカレンダーと<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>プロパティは、カルチャでサポートされているすべてのカレンダーを含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-166">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="c86a3-167">によって使用される暦に変更する、 <xref:System.Globalization.CultureInfo>、アプリケーションを設定する必要があります、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティ<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>を新しい<xref:System.Globalization.Calendar>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-167">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KoreanCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KoreanCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c86a3-168"><see cref="T:System.Globalization.KoreanCalendar" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-168">Initializes a new instance of the <see cref="T:System.Globalization.KoreanCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeInitializationException"><span data-ttu-id="c86a3-169">カルチャ情報がないため <see cref="T:System.Globalization.KoreanCalendar" /> オブジェクトを初期化できません。</span><span class="sxs-lookup"><span data-stu-id="c86a3-169">Unable to initialize a <see cref="T:System.Globalization.KoreanCalendar" /> object because of missing culture information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c86a3-170">月数を加算する対象の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-170">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="c86a3-171">加算する月数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-171">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="c86a3-172">指定した <see cref="T:System.DateTime" /> から指定した月数が経過した後の <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-172">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c86a3-173">指定した <see cref="T:System.DateTime" /> に指定した月数を加算した結果の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-173">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-174">結果の日の部分<xref:System.DateTime>日が結果として得られる結果の年の月の有効な曜日ではない場合に影響します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-174">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="c86a3-175">結果として得られる結果の年の月の最後の有効な日付に変更されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-175">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="c86a3-176">結果の年の部分<xref:System.DateTime>が影響を受けるは、その月が指定した年を超えた場合<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-176">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="c86a3-177">この実装では、現在の時代のみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="c86a3-177">This implementation supports only the current era.</span></span> <span data-ttu-id="c86a3-178">したがって、<xref:System.ArgumentException>結果の年が指定した時代 (年号) を超えた場合にスローされる<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-178">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="c86a3-179">結果の時刻の部分<xref:System.DateTime>は、指定したのと同じ<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-179">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="c86a3-180">たとえば、指定した月が年 10 月 31 日まである場合、指定した日がの値と、その月の 31 日、`months`パラメーターは、6、結果として得られる、年は 1 つ以上の指定した年、月、年 4 月、日は 4 月の末日である 30 日です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-180">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="c86a3-181">場合の値、`months`パラメーターが負の場合、結果として得られる<xref:System.DateTime>指定よりも前か<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-181">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="c86a3-182"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>常に equals を値<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-182">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c86a3-183">保持する、<xref:System.DateTime.Kind%2A>のプロパティ、`time`を呼び出してパラメーター、<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>メソッドを次の例のようにします。</span><span class="sxs-lookup"><span data-stu-id="c86a3-183">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-184">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>韓国暦の観点からです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-184">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-185"><paramref name="months" /> が -120000 未満です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-185"><paramref name="months" /> is less than -120000.</span></span>  
  
 <span data-ttu-id="c86a3-186">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-186">-or-</span></span>  
  
 <span data-ttu-id="c86a3-187"><paramref name="months" /> が 120000 を超えています。</span><span class="sxs-lookup"><span data-stu-id="c86a3-187"><paramref name="months" /> is greater than 120000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c86a3-188">年数を加算する対象の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-188">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="c86a3-189">加算する年数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-189">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="c86a3-190">指定した <see cref="T:System.DateTime" /> から指定した年数が経過した後の <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-190">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c86a3-191">指定した <see cref="T:System.DateTime" /> に指定した年数を加算した結果の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-191">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-192">結果の日の部分<xref:System.DateTime>日が結果として得られる結果の年の月の有効な曜日ではない場合に影響します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-192">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="c86a3-193">結果として得られる結果の年の月の最後の有効な日付に変更されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-193">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="c86a3-194">結果の月部分<xref:System.DateTime>は、指定したのと同じ<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-194">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="c86a3-195">この実装では、現在の時代のみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="c86a3-195">This implementation supports only the current era.</span></span> <span data-ttu-id="c86a3-196">したがって、<xref:System.ArgumentException>結果の年が指定した時代 (年号) を超えた場合にスローされる<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-196">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="c86a3-197">結果の時刻の部分<xref:System.DateTime>は、指定したのと同じ<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-197">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="c86a3-198">たとえば、年 2 月が 28 の日を除く平年の場合は 29 日。</span><span class="sxs-lookup"><span data-stu-id="c86a3-198">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="c86a3-199">指定した日付がうるう年の 2 月 29 日と値の場合`years`1 に設定されて、結果として得られる日付は次の年 2 月 28 日。</span><span class="sxs-lookup"><span data-stu-id="c86a3-199">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="c86a3-200">場合`years`は負の値、結果として得られる<xref:System.DateTime>指定よりも前か<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-200">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="c86a3-201"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>常に equals を値<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-201">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c86a3-202">保持する、<xref:System.DateTime.Kind%2A>のプロパティ、`time`を呼び出してパラメーター、<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>メソッドを次の例のようにします。</span><span class="sxs-lookup"><span data-stu-id="c86a3-202">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-203">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>韓国暦の観点からです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-203">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-204"><paramref name="years" /> または <paramref name="time" /> が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-204"><paramref name="years" /> or <paramref name="time" /> is out of range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.KoreanCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c86a3-205">現在のカレンダーの暦法 (太陽暦、太陰暦、または両者の組み合わせ) を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-205">Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="c86a3-206">常に <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-206">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c86a3-207">次の例では、リフレクションを使用して、各インスタンス化<xref:System.Globalization.Calendar>型と .NET Framework は、の値を表示、<xref:System.Globalization.Calendar.AlgorithmType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-207">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.KoreanCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c86a3-208"><see cref="T:System.Globalization.KoreanCalendar" /> における時代 (年号) のリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-208">Gets the list of eras in the <see cref="T:System.Globalization.KoreanCalendar" />.</span></span></summary>
        <value><span data-ttu-id="c86a3-209">時代 (年号) を <see cref="T:System.Globalization.KoreanCalendar" /> で表す整数の配列。</span><span class="sxs-lookup"><span data-stu-id="c86a3-209">An array of integers that represents the eras in the <see cref="T:System.Globalization.KoreanCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-210"><xref:System.Globalization.KoreanCalendar>クラスは、現在の時代のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-210">The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.</span></span> <span data-ttu-id="c86a3-211">このプロパティは、常に 1 つだけの要素を含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-211">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.KoreanCalendar.KoreanEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c86a3-212">読み取る対象の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-212">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c86a3-213">指定した <see cref="T:System.DateTime" /> の日付を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-213">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c86a3-214">指定された <see cref="T:System.DateTime" /> の日付を表す 1 から 31 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-214">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c86a3-215">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>韓国暦の観点からです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-215">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c86a3-216">読み取る対象の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-216">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c86a3-217">指定した <see cref="T:System.DateTime" /> の曜日を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-217">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c86a3-218">指定した <see cref="T:System.DateTime" /> の曜日を表す <see cref="T:System.DayOfWeek" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c86a3-218">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-219"><xref:System.DayOfWeek>値は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="c86a3-219">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="c86a3-220">DayOfWeek 値</span><span class="sxs-lookup"><span data-stu-id="c86a3-220">DayOfWeek value</span></span>|<span data-ttu-id="c86a3-221">示します</span><span class="sxs-lookup"><span data-stu-id="c86a3-221">Which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="c86a3-222">日曜日</span><span class="sxs-lookup"><span data-stu-id="c86a3-222">Sunday</span></span>|<span data-ttu-id="c86a3-223">일요일</span><span class="sxs-lookup"><span data-stu-id="c86a3-223">일요일</span></span>|  
|<span data-ttu-id="c86a3-224">月曜日</span><span class="sxs-lookup"><span data-stu-id="c86a3-224">Monday</span></span>|<span data-ttu-id="c86a3-225">월요일</span><span class="sxs-lookup"><span data-stu-id="c86a3-225">월요일</span></span>|  
|<span data-ttu-id="c86a3-226">火曜日</span><span class="sxs-lookup"><span data-stu-id="c86a3-226">Tuesday</span></span>|<span data-ttu-id="c86a3-227">화요일</span><span class="sxs-lookup"><span data-stu-id="c86a3-227">화요일</span></span>|  
|<span data-ttu-id="c86a3-228">水曜日</span><span class="sxs-lookup"><span data-stu-id="c86a3-228">Wednesday</span></span>|<span data-ttu-id="c86a3-229">수요일</span><span class="sxs-lookup"><span data-stu-id="c86a3-229">수요일</span></span>|  
|<span data-ttu-id="c86a3-230">木曜日</span><span class="sxs-lookup"><span data-stu-id="c86a3-230">Thursday</span></span>|<span data-ttu-id="c86a3-231">목요일</span><span class="sxs-lookup"><span data-stu-id="c86a3-231">목요일</span></span>|  
|<span data-ttu-id="c86a3-232">金曜日</span><span class="sxs-lookup"><span data-stu-id="c86a3-232">Friday</span></span>|<span data-ttu-id="c86a3-233">금요일</span><span class="sxs-lookup"><span data-stu-id="c86a3-233">금요일</span></span>|  
|<span data-ttu-id="c86a3-234">土曜日</span><span class="sxs-lookup"><span data-stu-id="c86a3-234">Saturday</span></span>|<span data-ttu-id="c86a3-235">토요일</span><span class="sxs-lookup"><span data-stu-id="c86a3-235">토요일</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-236">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>韓国暦の観点からです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-236">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c86a3-237">読み取る対象の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-237">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c86a3-238">指定した <see cref="T:System.DateTime" /> の年間積算日を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-238">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c86a3-239">指定された <see cref="T:System.DateTime" /> の年間積算日を表す 1 から 366 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-239">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-240">その年の日付は、その年の最初の日付から日数として定義されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-240">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="c86a3-241">たとえば、<xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A>最初の月の最初の日が 1 を返しますと<xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A>最後の最後の月の日がその年の日数の合計数を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-241">For example, <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year.</span></span> <span data-ttu-id="c86a3-242">合計がによって返される値と同じ<xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-242">The total is the same value as that returned by <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-243">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>韓国暦の観点からです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-243">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c86a3-244">年を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-244">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="c86a3-245">月を表す 1 から 12 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-245">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="c86a3-246">時代 (年号) を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-246">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c86a3-247">指定した時代 (年号) の指定した年の指定した月の日数を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-247">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="c86a3-248">指定した時代 (年号) の指定した年の指定した月の日数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-248">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-249">たとえば、このメソッドを返します 28 または 29 年 2 月の (`month` = 2) かどうかに応じて、`year`が閏年であります。</span><span class="sxs-lookup"><span data-stu-id="c86a3-249">For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-250">次のコード例では、それぞれ各時代 (年号) の 5 つの年の 2 番目の月の GetDaysInMonth を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-250">The following code example calls GetDaysInMonth for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInMonth/CPP/koreancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInMonth/CS/koreancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInMonth/VB/koreancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-251"><paramref name="year" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-251"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-252">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-252">-or-</span></span>  
  
 <span data-ttu-id="c86a3-253"><paramref name="month" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-253"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-254">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-254">-or-</span></span>  
  
 <span data-ttu-id="c86a3-255"><paramref name="era" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-255"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.KoreanCalendar.KoreanEra" />
        <altmember cref="P:System.Globalization.KoreanCalendar.Eras" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c86a3-256">年を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-256">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="c86a3-257">時代 (年号) を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-257">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c86a3-258">指定した時代 (年号) の指定した年の日数を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-258">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="c86a3-259">指定した時代 (年号) の指定した年の日数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-259">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-260">365 または 366、かどうかに応じて、たとえば、このメソッドが戻る`year`が閏年であります。</span><span class="sxs-lookup"><span data-stu-id="c86a3-260">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-261">次の例では<xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>各時代 (年号) の 5 年間です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-261">The following example calls <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInYear/CPP/koreancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInYear/CS/koreancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInYear/VB/koreancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-262"><paramref name="year" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-262"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-263">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-263">-or-</span></span>  
  
 <span data-ttu-id="c86a3-264"><paramref name="era" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-264"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.KoreanCalendar.KoreanEra" />
        <altmember cref="P:System.Globalization.KoreanCalendar.Eras" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c86a3-265">読み取る対象の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-265">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c86a3-266">指定した <see cref="T:System.DateTime" /> の時代 (年号) を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-266">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c86a3-267">指定した <see cref="T:System.DateTime" /> の時代 (年号) を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-267">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-268"><xref:System.Globalization.KoreanCalendar>クラスは、現在の時代のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-268">The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-269">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>韓国暦の観点からです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-269">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.KoreanCalendar.KoreanEra" />
        <altmember cref="P:System.Globalization.KoreanCalendar.Eras" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c86a3-270">年。</span><span class="sxs-lookup"><span data-stu-id="c86a3-270">A year.</span></span></param>
        <param name="era"><span data-ttu-id="c86a3-271">時代 (年号)。</span><span class="sxs-lookup"><span data-stu-id="c86a3-271">An era.</span></span></param>
        <summary><span data-ttu-id="c86a3-272">指定された年と時代 (年号) の閏月を計算します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-272">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="c86a3-273"><see cref="T:System.Globalization.KoreanCalendar" /> クラスでは閏月の概念がサポートされないため、戻り値は常に 0 です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-273">The return value is always 0 because the <see cref="T:System.Globalization.KoreanCalendar" /> class does not support the notion of a leap month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-274">閏月の概念をサポートする予定表、閏月は特定の月の後、または年のすべての月の後にことができます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-274">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="c86a3-275">たとえば、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=nameWithType>メソッドは、1 ~ 13 を示す、指定した日に関連付けられている月の範囲数を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-275">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=nameWithType> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="c86a3-276">場合は、その年の 8 と 9 番目の月が閏月、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>メソッド leap 8 番目の月を 9 と 10 の 9 番目の月の 8 番目の月の 8 が返されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-276">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c86a3-277">読み取る対象の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-277">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c86a3-278">指定した <see cref="T:System.DateTime" /> の月を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-278">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c86a3-279">指定された <see cref="T:System.DateTime" /> の月を表す 1 から 12 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-279">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c86a3-280">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>韓国暦の観点からです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-280">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c86a3-281">年を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-281">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="c86a3-282">時代 (年号) を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-282">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c86a3-283">指定した時代 (年号) の指定した年の月数を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-283">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="c86a3-284">指定した時代 (年号) の指定した年の月数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-284">The number of months in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c86a3-285">次の例では<xref:System.Globalization.KoreanCalendar.GetMonthsInYear%2A>各時代 (年号) の 5 年間です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-285">The following example calls <xref:System.Globalization.KoreanCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetMonthsInYear/CPP/koreancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetMonthsInYear/CS/koreancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetMonthsInYear/VB/koreancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-286"><paramref name="year" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-286"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-287">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-287">-or-</span></span>  
  
 <span data-ttu-id="c86a3-288"><paramref name="era" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-288"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.KoreanCalendar.KoreanEra" />
        <altmember cref="P:System.Globalization.KoreanCalendar.Eras" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c86a3-289">読み取る対象の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-289">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <param name="rule"><span data-ttu-id="c86a3-290">暦の週を定義するいずれかの <see cref="T:System.Globalization.CalendarWeekRule" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c86a3-290">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span></span></param>
        <param name="firstDayOfWeek"><span data-ttu-id="c86a3-291">週の最初の曜日を表すいずれかの <see cref="T:System.DayOfWeek" /> 値。</span><span class="sxs-lookup"><span data-stu-id="c86a3-291">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span></span></param>
        <summary><span data-ttu-id="c86a3-292">指定した <see cref="T:System.DateTime" /> の日付を含むその年の週を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-292">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c86a3-293"><paramref name="time" /> パラメーターの日付を含む年の週を表す 1 から始まる整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-293">A 1-based integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-294">設定して、その年の週の数を決定するこのメソッドを使用することができます、`time`年の最後の日のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-294">This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.</span></span>  
  
 <span data-ttu-id="c86a3-295"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> ために使用するカルチャ固有の値が含まれています、`rule`と`firstDayOfWeek`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="c86a3-295"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.</span></span>  
  
 <span data-ttu-id="c86a3-296"><xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>既定値を含む<xref:System.DayOfWeek>で指定されたカレンダーを使用して、特定のカルチャの週の最初の日を表す値、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-296">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c86a3-297"><xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>既定値を含む<xref:System.Globalization.CalendarWeekRule>で指定されたカレンダーを使用して、特定のカルチャのカレンダーの週を定義する値、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-297">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c86a3-298">たとえば、 <xref:System.Globalization.GregorianCalendar>、 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 1 月 1 日に 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-298">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> for January 1 returns 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-299">次のコード例に示す方法の結果<xref:System.Globalization.Calendar.GetWeekOfYear%2A>かによって異なります、<xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>と<xref:System.Globalization.CalendarWeekRule>使用される値。</span><span class="sxs-lookup"><span data-stu-id="c86a3-299">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used.</span></span> <span data-ttu-id="c86a3-300">指定した日付の年の最終日が場合<xref:System.Globalization.Calendar.GetWeekOfYear%2A>その年の週の合計数を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-300">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-301"><paramref name="time" /> または <paramref name="firstDayOfWeek" /> が暦でサポートされている範囲外の値です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-301"><paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-302">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-302">-or-</span></span>  
  
 <span data-ttu-id="c86a3-303"><paramref name="rule" /> は有効な <see cref="T:System.Globalization.CalendarWeekRule" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="c86a3-303"><paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="c86a3-304">読み取る対象の <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-304">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="c86a3-305">指定した <see cref="T:System.DateTime" /> の年を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-305">Returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="c86a3-306">指定した <see cref="T:System.DateTime" /> の年を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-306">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c86a3-307">次のコード例のいくつかのコンポーネントの値を表示する、<xref:System.DateTime>韓国暦の観点からです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-307">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c86a3-308">年を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-308">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="c86a3-309">月を表す 1 から 12 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-309">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="c86a3-310">日を表す 1 から 31 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-310">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="c86a3-311">時代 (年号) を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-311">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c86a3-312">指定した時代 (年号) の指定した日付が閏日かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-312">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns>
          <span data-ttu-id="c86a3-313">指定した日が閏日である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-313"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-314">うるう年韓国暦では、グレゴリオ暦で同じ閏年に対応します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-314">Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="c86a3-315">うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-315">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="c86a3-316">400 で割り切れるグレゴリオ暦年がうるう年です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-316">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="c86a3-317">共通の年度は 365 日を持ち、うるう年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="c86a3-317">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="c86a3-318">閏日は、閏年であるだけで発生する日です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-318">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="c86a3-319">たとえば、年 2 月の 29 日は、唯一の leap 日です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-319">For example, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-320">次の例では<xref:System.Globalization.KoreanCalendar.IsLeapDay%2A>時代 (年号) のそれぞれに 5 年間の 2 番目の月 (2 月) の最後の日のです。</span><span class="sxs-lookup"><span data-stu-id="c86a3-320">The following example calls <xref:System.Globalization.KoreanCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapDay/CPP/koreancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapDay/CS/koreancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapDay/VB/koreancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-321"><paramref name="year" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-321"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-322">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-322">-or-</span></span>  
  
 <span data-ttu-id="c86a3-323"><paramref name="month" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-323"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-324">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-324">-or-</span></span>  
  
 <span data-ttu-id="c86a3-325"><paramref name="day" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-325"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-326">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-326">-or-</span></span>  
  
 <span data-ttu-id="c86a3-327"><paramref name="era" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-327"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.KoreanCalendar.KoreanEra" />
        <altmember cref="P:System.Globalization.KoreanCalendar.Eras" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c86a3-328">年を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-328">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="c86a3-329">月を表す 1 から 12 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-329">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="c86a3-330">時代 (年号) を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-330">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c86a3-331">指定した時代 (年号) の指定した年の指定した月が閏月かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-331">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="c86a3-332">このメソッドは、派生クラスでオーバーライドされない限り、常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-332">This method always returns <see langword="false" />, unless overridden by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-333">うるう年韓国暦では、グレゴリオ暦で同じ閏年に対応します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-333">Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="c86a3-334">うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-334">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="c86a3-335">400 で割り切れるグレゴリオ暦年がうるう年です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-335">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="c86a3-336">共通の年度は 365 日を持ち、うるう年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="c86a3-336">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="c86a3-337">閏月は、うるう年でのみ発生する月全体です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-337">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="c86a3-338">韓国暦には、閏月がありません。</span><span class="sxs-lookup"><span data-stu-id="c86a3-338">The Korean calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-339">次の例では<xref:System.Globalization.KoreanCalendar.IsLeapMonth%2A>の現在の時代 (年号) の 5 年間のすべての月です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-339">The following example calls <xref:System.Globalization.KoreanCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapMonth/CPP/koreancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapMonth/CS/koreancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapMonth/VB/koreancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-340"><paramref name="year" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-340"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-341">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-341">-or-</span></span>  
  
 <span data-ttu-id="c86a3-342"><paramref name="month" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-342"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-343">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-343">-or-</span></span>  
  
 <span data-ttu-id="c86a3-344"><paramref name="era" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-344"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.KoreanCalendar.KoreanEra" />
        <altmember cref="P:System.Globalization.KoreanCalendar.Eras" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c86a3-345">年を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-345">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="c86a3-346">時代 (年号) を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-346">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c86a3-347">指定した時代 (年号) の指定した年が閏年かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-347">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns>
          <span data-ttu-id="c86a3-348">指定した年が閏年である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-348"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-349">うるう年韓国暦では、グレゴリオ暦で同じ閏年に対応します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-349">Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="c86a3-350">うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-350">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="c86a3-351">400 で割り切れるグレゴリオ暦年がうるう年です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-351">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="c86a3-352">共通の年度は 365 日を持ち、うるう年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="c86a3-352">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a3-353">次の例では<xref:System.Globalization.KoreanCalendar.IsLeapYear%2A>時代 (年号) のそれぞれに 5 年間です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-353">The following example calls <xref:System.Globalization.KoreanCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapYear/CPP/koreancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapYear/CS/koreancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapYear/VB/koreancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-354"><paramref name="year" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-354"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-355">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-355">-or-</span></span>  
  
 <span data-ttu-id="c86a3-356"><paramref name="era" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-356"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.KoreanCalendar.KoreanEra" />
        <altmember cref="P:System.Globalization.KoreanCalendar.Eras" />
        <altmember cref="M:System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="KoreanEra">
      <MemberSignature Language="C#" Value="public const int KoreanEra = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 KoreanEra = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.KoreanCalendar.KoreanEra" />
      <MemberSignature Language="VB.NET" Value="Public Const KoreanEra As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int KoreanEra = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="c86a3-357">現在の時代 (年号) を表します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-357">Represents the current era.</span></span> <span data-ttu-id="c86a3-358">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-358">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-359"><xref:System.Globalization.KoreanCalendar>クラスは、現在の時代のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-359">The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.</span></span> <span data-ttu-id="c86a3-360">このフィールドは、常に 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-360">This field always returns 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.KoreanCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.KoreanCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c86a3-361"><see cref="T:System.Globalization.KoreanCalendar" /> クラスでサポートされている最も新しい日付と時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-361">Gets the latest date and time supported by the <see cref="T:System.Globalization.KoreanCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="c86a3-362">最新の日付と時刻でサポートされている、<see cref="T:System.Globalization.KoreanCalendar" />紀元 9999 年 12 月 31 日の最終時と同じであるクラス</span><span class="sxs-lookup"><span data-stu-id="c86a3-362">The latest date and time supported by the <see cref="T:System.Globalization.KoreanCalendar" /> class, which is equivalent to the last moment of December 31, 9999 C.E.</span></span> <span data-ttu-id="c86a3-363">グレゴリオ暦です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-363">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c86a3-364">次のコード例では、最小値と、カレンダーの最大値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-364">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/CPP/koreancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/CS/koreancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/VB/koreancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.KoreanCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c86a3-365"><see cref="T:System.Globalization.KoreanCalendar" /> クラスでサポートされている最も古い日付と時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-365">Gets the earliest date and time supported by the <see cref="T:System.Globalization.KoreanCalendar" /> class.</span></span></summary>
        <value><span data-ttu-id="c86a3-366">最も古い日付と時刻でサポートされている、<see cref="T:System.Globalization.KoreanCalendar" />は西暦 0001、1 月 1 日の最初の瞬間に相当するクラス</span><span class="sxs-lookup"><span data-stu-id="c86a3-366">The earliest date and time supported by the <see cref="T:System.Globalization.KoreanCalendar" /> class, which is equivalent to the first moment of January 1, 0001 C.E.</span></span> <span data-ttu-id="c86a3-367">グレゴリオ暦です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-367">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c86a3-368">次のコード例では、最小値と、カレンダーの最大値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-368">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/CPP/koreancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/CS/koreancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/VB/koreancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c86a3-369">年を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-369">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="c86a3-370">月を表す 1 から 12 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-370">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="c86a3-371">日を表す 1 から 31 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-371">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="c86a3-372">時間を表す 0 から 23 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-372">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="c86a3-373">分を表す 0 から 59 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-373">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="c86a3-374">秒を表す 0 から 59 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-374">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="c86a3-375">ミリ秒を表す 0 から 999 の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-375">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="c86a3-376">時代 (年号) を表す整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-376">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="c86a3-377">指定した時代 (年号) の指定した日付と時刻に設定された <see cref="T:System.DateTime" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-377">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="c86a3-378">現在の時代 (年号) の指定した日付と時刻に設定された <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="c86a3-378">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-379"><paramref name="year" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-379"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-380">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-380">-or-</span></span>  
  
 <span data-ttu-id="c86a3-381"><paramref name="month" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-381"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-382">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-382">-or-</span></span>  
  
 <span data-ttu-id="c86a3-383"><paramref name="day" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-383"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="c86a3-384">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-384">-or-</span></span>  
  
 <span data-ttu-id="c86a3-385"><paramref name="hour" /> が 0 未満であるか、23 を超えています。</span><span class="sxs-lookup"><span data-stu-id="c86a3-385"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
 <span data-ttu-id="c86a3-386">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-386">-or-</span></span>  
  
 <span data-ttu-id="c86a3-387"><paramref name="minute" /> が 0 未満か、59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="c86a3-387"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="c86a3-388">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-388">-or-</span></span>  
  
 <span data-ttu-id="c86a3-389"><paramref name="second" /> が 0 未満か、59 を超えています。</span><span class="sxs-lookup"><span data-stu-id="c86a3-389"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="c86a3-390">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-390">-or-</span></span>  
  
 <span data-ttu-id="c86a3-391"><paramref name="millisecond" /> が 0 未満か、999 を超えています。</span><span class="sxs-lookup"><span data-stu-id="c86a3-391"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span>  
  
 <span data-ttu-id="c86a3-392">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-392">-or-</span></span>  
  
 <span data-ttu-id="c86a3-393"><paramref name="era" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-393"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.KoreanCalendar.KoreanEra" />
        <altmember cref="P:System.Globalization.KoreanCalendar.Eras" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="c86a3-394">変換する年を表す 2 桁または 4 桁の整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-394">A two-digit or four-digit integer that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="c86a3-395"><see cref="P:System.Globalization.KoreanCalendar.TwoDigitYearMax" /> プロパティを使用して、指定した年を 4 桁表記に変換し、適切な世紀を判断します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-395">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.KoreanCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="c86a3-396"><paramref name="year" /> の 4 桁表記を保持する整数。</span><span class="sxs-lookup"><span data-stu-id="c86a3-396">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-397"><xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> 表すことができる 100 年の範囲内で最後の年を定義<xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-397"><xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> defines the last year in the 100-year range that can be represented by <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>.</span></span> <span data-ttu-id="c86a3-398">4 桁の年は、その 100 年間の範囲内の 2 桁の年の唯一の検索によって決定されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-398">The century is determined by finding the sole occurrence of the two-digit year within that 100-year range.</span></span> <span data-ttu-id="c86a3-399">たとえば場合、<xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A>設定は 2029年に 100 年の範囲は 1930年から 2029年します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-399">For example, if <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="c86a3-400">そのため、30 の 2 桁の値は 2029 29 桁の値を解釈中に、1930、として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-400">Therefore, a two-digit value of 30 is interpreted as 1930, while a two-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="c86a3-401"><xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A> 2 桁または 4 桁の年のいずれかをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a3-401"><xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="c86a3-402">値によると 4 桁の値に変換するメソッドを 2 桁の年の値 (100 よりも小さい) を渡すと、<xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A>適切な 4 桁の年を表す値です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-402">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="c86a3-403">アプリケーションがサポートされているカレンダーの範囲内にある 4 桁の年の値が指定した場合<xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>、実際の入力値を返します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-403">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="c86a3-404">アプリケーションはサポートされているカレンダー範囲では、4 桁の値が指定した場合、または負の値が渡された場合は、メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="c86a3-404">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c86a3-405"><paramref name="year" /> がカレンダーでサポートされている範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-405"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.KoreanCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.KoreanCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c86a3-406">年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-406">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="c86a3-407">年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年。</span><span class="sxs-lookup"><span data-stu-id="c86a3-407">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c86a3-408">このプロパティは、2 桁の年を 4 桁の年に適切に変換を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a3-408">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="c86a3-409">たとえば、構成のグレゴリオ暦カレンダーにおける 2029年にこのプロパティが設定されている場合、100 年範囲は 1930年 2029 です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-409">For example, in the Gregorian calendar, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="c86a3-410">そのため、30 の 2 桁の値は 2029 29 の 2 桁の値を解釈中に、1930、として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-410">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="c86a3-411">このプロパティの初期値は、コントロール パネルの地域と言語のオプション部分の設定から取得されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-411">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="c86a3-412">ただし、その情報を変更できますの有効期間中に、<xref:System.AppDomain>です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-412">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="c86a3-413"><xref:System.Globalization.KoreanCalendar>クラスには、システム設定の変更は検出されません自動的にします。</span><span class="sxs-lookup"><span data-stu-id="c86a3-413">The <xref:System.Globalization.KoreanCalendar> class does not detect changes in the system settings automatically.</span></span>  
  
 <span data-ttu-id="c86a3-414">アプリケーションは、この値を 2 桁の年をそのまま使用することを示す 99 を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c86a3-414">The application should set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="c86a3-415">たとえば、このプロパティが 99 に設定されている場合 100 年の範囲は 0 (ほとんどのカレンダーの有効な値されません) 99 です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-415">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="c86a3-416">そのため、30 の 2 桁の値は 30 として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="c86a3-416">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c86a3-417">設定操作で指定された値が 99 未満です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-417">The value specified in a set operation is less than 99.</span></span>  
  
 <span data-ttu-id="c86a3-418">- または -</span><span class="sxs-lookup"><span data-stu-id="c86a3-418">-or-</span></span>  
  
 <span data-ttu-id="c86a3-419">設定操作で指定した値が <see langword="MaxSupportedDateTime.Year" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="c86a3-419">The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a3-420">set 操作において、現在のインスタンスが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c86a3-420">In a set operation, the current instance is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>