<Type Name="PersianCalendar" FullName="System.Globalization.PersianCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9c98e7c38dd60cf8f0a3b2e45565b400a02cef7" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48689163" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PersianCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PersianCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.PersianCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class PersianCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersianCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type PersianCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ペルシャ暦を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ペルシャ暦は、一部の地域が月の名前を使用してペルシャ語を読み上げ、ほとんどの国で使用されます。 ペルシャ暦はイランとアフガニスタンの正式な暦であり、カザフスタン、タジキスタンなどのリージョンでは代替の予定表のいずれか。  
  
> [!NOTE]
>  使用方法について、<xref:System.Globalization.PersianCalendar>クラスとその他の .NET Framework のクラスを予定表を参照してください[カレンダーの使用](~/docs/standard/datetime/working-with-calendars.md)します。  
  
 ペルシャ暦で日付の開始、ヒジュラ、622 年から西暦 Medina にふもとからモハメド アリ、(PBUH) 移行時の年。 たとえば、紀元 2002 年 3 月 21 日までの日付 1381 Anno Persico Farvardeen の年の月の最初の日に対応しています。  
  
 ペルシャ暦では、太陽年に基づいており、約 365 日です。 年の 4 つのシーズンが繰り返しし、太陽が地球の中心から見たとき、北半球の場合に、南半球から、赤道を横切るように見えるときに、新しい年が開始されます。 新しい年は、北半球で spring の最初の日である、Farvardeen の月の初日をマークします。  
  
 ペルシャ暦で最初の 6 か月は 31 日、30 日間は、次の 5 か月の各があり、過去 1 か月 29 日、30 日と、閏年の。 うるう年が 1 年間、33 で除算したときに 1、5、9、13、17、22、26、または 30 の残りの部分。 たとえば、1370 年は、33 で割ったときの 17 の剰余となるため、閏年します。 33 年周期には、約 8 つのうるう年があります。  
  
## <a name="the-persiancalendar-class-and-net-framework-versions"></a>PersianCalendar クラスおよび .NET Framework のバージョン  
 以降では、 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]、<xref:System.Globalization.PersianCalendar>クラス監視のアルゴリズムではなく、イスラム暦の太陽天文学アルゴリズムを使用して日付を計算します。 これにより、<xref:System.Globalization.PersianCalendar>イランとアフガニスタン、ペルシャ暦が最も普及している使用中の 2 つの国で使用されているペルシャ暦で一貫性のある実装します。 変更は、.NET Framework 4 またはそれ以上で実行されているすべてのアプリの影響、[!INCLUDE[net_v46](~/includes/net-v46-md.md)]がインストールされています。  
  
 変更されたアルゴリズム: 結果  
  
-   1800 ~ 2123 構成のグレゴリオ暦カレンダーにおける日付を変換するときに、2 つのアルゴリズムでは同一の結果を返す必要があります。  
  
-   1800 前に、と後 2123 構成のグレゴリオ暦カレンダーにおける日付を変換するときに、2 つのアルゴリズムは異なる結果を返す可能性があります。  
  
-   <xref:System.Globalization.PersianCalendar.MinSupportedDateTime%2A>プロパティ値が 0622 年 3 月 21日から構成のグレゴリオ暦カレンダーにおけるまで変更 0622 年 3 月 22日、グレゴリオ暦でします。  
  
-   <xref:System.Globalization.PersianCalendar.MaxSupportedDateTime%2A>プロパティの値が 9378 ペルシャ暦の年の 10 番目の月の 10 日からの 9378 ペルシャ暦の年の 10 番目の月 13 日に変更します。  
  
-   <xref:System.Globalization.PersianCalendar.IsLeapYear%2A>以前よりも、メソッドは、異なる結果を返す可能性があります。  
  
## <a name="using-the-persiancalendar-class"></a>PersianCalendar クラスを使用します。  
 アプリケーションを使用して、<xref:System.Globalization.PersianCalendar>ペルシャ暦の日付の計算またはグレゴリオ暦の日付とペルシャの日付に変換するオブジェクト。  
  
 使用することはできません、<xref:System.Globalization.PersianCalendar>オブジェクトのカルチャの既定の暦として。 既定の暦がで指定された、<xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType>プロパティによって返される予定表のいずれかを指定する必要があります、<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>プロパティ。 現時点では、<xref:System.Globalization.PersianCalendar>クラスは、オプションの暦でサポートされている任意のカルチャのではありません、<xref:System.Globalization.CultureInfo>クラスし、その結果、既定の暦にすることはできません。  
  
   
  
## Examples  
 次の例では、インスタンス化<xref:System.DateTime>オブジェクトを使用して、<xref:System.DateTime.Now%2A?displayProperty=nameWithType>プロパティ、<xref:System.DateTime>コンス トラクター、およびペルシャ暦の<xref:System.Globalization.Calendar.ToDateTime%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>メソッド。 グレゴリオ暦とペルシャ暦でこれらの日付が表示されます。 ペルシャ暦の日付の範囲も表示されます。  
  
 [!code-csharp[sys.glob.PersianCal#3](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/calendar2.cs#3)]
 [!code-vb[sys.glob.PersianCal#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/calendar2.vb#3)]  
  
 次の例では、フィールド、プロパティ、およびメソッドのメンバー、<xref:System.Globalization.PersianCalendar>クラス。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md">カレンダーの使用</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">サンプル: 暦の週の範囲のユーティリティ</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PersianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PersianCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Globalization.PersianCalendar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、コンス トラクターの使用を示します、<xref:System.Globalization.PersianCalendar>クラス。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="persianCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">月数を加算する対象の <see cref="T:System.DateTime" />。</param>
        <param name="months">正または負の、加算する月数。</param>
        <summary>指定した <see cref="T:System.DateTime" /> オブジェクトから指定した月数がオフセットされた <see cref="T:System.DateTime" /> オブジェクトを返します。</summary>
        <returns>
          <paramref name="months" /> パラメーターで指定した月数を <paramref name="time" /> パラメーターで指定した日付に加算することで得られる日付を表す <see cref="T:System.DateTime" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>常に equals を値<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。 維持することができます、<xref:System.DateTime.Kind%2A>のプロパティ、`time`パラメーターを呼び出すことによって、<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>メソッドを次の例を示します。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.AddMonths%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">結果として得られる <see cref="T:System.DateTime" /> がサポートされている範囲外の値です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="months" /> が -120,000 未満であるか、120,000 を超えています。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="persianCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">年数を加算する対象の <see cref="T:System.DateTime" />。</param>
        <param name="years">正または負の、加算する年数。</param>
        <summary>指定した <see cref="T:System.DateTime" /> オブジェクトから指定した年数がオフセットされた <see cref="T:System.DateTime" /> オブジェクトを返します。</summary>
        <returns>指定した <see cref="T:System.DateTime" /> オブジェクトに指定した年数を加算した結果の <see cref="T:System.DateTime" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>常に equals を値<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>します。 維持することができます、<xref:System.DateTime.Kind%2A>のプロパティ、`time`パラメーターを呼び出すことによって、<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>メソッドを次の例を示します。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.AddYears%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">結果として得られる <see cref="T:System.DateTime" /> がサポートされている範囲外の値です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="years" /> が -10,000 未満であるか、または 10,000 を超えています。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.PersianCalendar.AddMonths(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.PersianCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のカレンダーの暦法 (太陽暦、太陰暦、または太陰太陽暦) を示す値を取得します。</summary>
        <value>常に <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定の暦の日付計算は、予定表が太陽暦、太陰暦、または太陰太陽暦によって異なります。  
  
   
  
## Examples  
 次の例では、リフレクションを使用して、それぞれをインスタンス化<xref:System.Globalization.Calendar>型については、.NET Framework との値を表示、<xref:System.Globalization.Calendar.AlgorithmType%2A>プロパティ。  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.PersianCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.PersianCalendar" /> オブジェクト内の時代 (年号) のリストを取得します。</summary>
        <value>
          <see cref="T:System.Globalization.PersianCalendar" /> オブジェクト内の時代 (年号) を表す整数の配列。 配列は、値が <see cref="F:System.Globalization.PersianCalendar.PersianEra" /> である単独の要素から構成されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.Eras%2A>プロパティ。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.PersianCalendar.PersianEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="persianCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した <see cref="T:System.DateTime" /> オブジェクトの日付を返します。</summary>
        <returns>指定した <see cref="T:System.DateTime" /> オブジェクトの日付を表す 1 ～ 31 の整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> パラメーターが <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 未満の日付か、<see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> より大きい日付を表しています。</exception>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="persianCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した <see cref="T:System.DateTime" /> オブジェクトの曜日を返します。</summary>
        <returns>指定した <see cref="T:System.DateTime" /> オブジェクトの曜日を表す <see cref="T:System.DayOfWeek" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.GetDayOfWeek%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="persianCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した <see cref="T:System.DateTime" /> オブジェクトの年間積算日を返します。</summary>
        <returns>指定した <see cref="T:System.DateTime" /> オブジェクトの年間積算日を表す 1 ～ 366 の整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.GetDayOfYear%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> パラメーターが <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 未満の日付か、<see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> より大きい日付を表しています。</exception>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="persianCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す 1 ～ 9378 の整数。</param>
        <param name="month">
          <c>year</c> が 9378 ではない場合は、1 から 12 の月を表す整数。<c>year</c> が 9378 の場合は、1 から 10 の月を表す整数。</param>
        <param name="era">時代 (年号) を表す 0 ～ 1 の整数。</param>
        <summary>指定した年と時代 (年号) の指定した月の日数を返します。</summary>
        <returns>指定した年と時代 (年号) の指定した月の日数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.GetDaysInMonth%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />、<paramref name="month" />、 または <paramref name="era" /> が、このカレンダーでサポートされている範囲外です。</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="persianCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す 1 ～ 9378 の整数。</param>
        <param name="era">時代 (年号) を表す 0 ～ 1 の整数。</param>
        <summary>指定した時代 (年号) の指定した年の日数を返します。</summary>
        <returns>指定した年と時代 (年号) の日数。 日数は、平年の場合は 365、閏年の場合は 366 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例に示しますを使用、<xref:System.Globalization.PersianCalendar.GetDaysInYear%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> または <paramref name="era" /> が、このカレンダーでサポートされている範囲外です。</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="persianCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した <see cref="T:System.DateTime" /> オブジェクトの時代 (年号) を返します。</summary>
        <returns>常に <see cref="F:System.Globalization.PersianCalendar.PersianEra" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.GetEra%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> パラメーターが <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 未満の日付か、<see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> より大きい日付を表しています。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.PersianCalendar.PersianEra" />
        <altmember cref="P:System.Globalization.PersianCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="persianCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">変換する年を表す 1 ～ 9378 の整数。</param>
        <param name="era">時代 (年号) を表す 0 ～ 1 の整数。</param>
        <summary>指定された年と時代 (年号) の閏月を返します。</summary>
        <returns>戻り値は、常に 0 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.GetLeapMonth%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> または <paramref name="era" /> が、このカレンダーでサポートされている範囲外です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="persianCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した <see cref="T:System.DateTime" /> オブジェクトの月を返します。</summary>
        <returns>指定した <see cref="T:System.DateTime" /> オブジェクトの月を表す 1 ～ 12 の整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.GetMonth%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> パラメーターが <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 未満の日付か、<see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> より大きい日付を表しています。</exception>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="persianCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す 1 ～ 9378 の整数。</param>
        <param name="era">時代 (年号) を表す 0 ～ 1 の整数。</param>
        <summary>指定した時代 (年号) の指定した年の月数を返します。</summary>
        <returns>
          <paramref name="year" /> パラメーターが 9378 の場合は 10 を返します。それ以外の場合は、常に 12 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.GetMonthsInYear%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> または <paramref name="era" /> が、このカレンダーでサポートされている範囲外です。</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="persianCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した <see cref="T:System.DateTime" /> オブジェクトの年を返します。</summary>
        <returns>指定した <see cref="T:System.DateTime" /> の年を表す 1 ～ 9378 の整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.GetYear%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> パラメーターが <see cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" /> 未満の日付か、<see cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" /> より大きい日付を表しています。</exception>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="persianCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す 1 ～ 9378 の整数。</param>
        <param name="month">
          <c>year</c> が 9378 ではない場合は、1 から 12 の月を表す整数。<c>year</c> が 9378 の場合は、1 から 10 の月を表す整数。</param>
        <param name="day">日を表す 1 ～ 31 の整数。</param>
        <param name="era">時代 (年号) を表す 0 ～ 1 の整数。</param>
        <summary>指定した日付が閏日かどうかを確認します。</summary>
        <returns>指定した日が閏日である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 閏日が閏年でのみ発生する日です。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.IsLeapDay%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="era" /> が、このカレンダーでサポートされている範囲外です。</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="persianCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す 1 ～ 9378 の整数。</param>
        <param name="month">
          <c>year</c> が 9378 ではない場合は、1 から 12 の月を表す整数。<c>year</c> が 9378 の場合は、1 から 10 の月を表す整数。</param>
        <param name="era">時代 (年号) を表す 0 ～ 1 の整数。</param>
        <summary>指定した年と時代 (年号) の指定した月が閏月かどうかを確認します。</summary>
        <returns>
          <see cref="T:System.Globalization.PersianCalendar" /> クラスは閏月の概念をサポートしないため、常に <see langword="false" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.IsLeapMonth%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />、<paramref name="month" />、 または <paramref name="era" /> が、このカレンダーでサポートされている範囲外です。</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="persianCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す 1 ～ 9378 の整数。</param>
        <param name="era">時代 (年号) を表す 0 ～ 1 の整数。</param>
        <summary>指定した時代 (年号) の指定した年が閏年かどうかを確認します。</summary>
        <returns>指定した年が閏年である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以降では、[!INCLUDE[net_v46](~/includes/net-v46-md.md)]の実装、<xref:System.Globalization.PersianCalendar>クラスは、監視、アルゴリズムからイスラム暦の太陽アルゴリズムに変更します。 結果として、<xref:System.Globalization.PersianCalendar.IsLeapYear%2A>メソッドで実行されると、異なる値を返す可能性があります[!INCLUDE[net_v46](~/includes/net-v46-md.md)]より以前のバージョンの .NET Framework で実行します。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.IsLeapYear%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> または <paramref name="era" /> が、このカレンダーでサポートされている範囲外です。</exception>
        <altmember cref="F:System.Globalization.PersianCalendar.PersianEra" />
        <altmember cref="P:System.Globalization.PersianCalendar.Eras" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.PersianCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.PersianCalendar" /> クラスでサポートされている最も新しい日付と時刻を取得します。</summary>
        <value>
          <see cref="T:System.Globalization.PersianCalendar" /> クラスでサポートされている最も新しい日付と時刻。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Globalization.PersianCalendar.MaxSupportedDateTime%2A>プロパティは、紀元 9999 年 12 月 31 日の最後瞬間 構成のグレゴリオ暦カレンダーです。 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]、この値は 13 9378 ペルシャ暦の年の 10 番目の月の日に相当します。 .NET Framework の以前のバージョンでは、9378 ペルシャ暦の年の 10 番目の月の 10 日と同じです。 詳細についてを参照してください「PersianCalendar クラスと .NET Framework のバージョン」、<xref:System.Globalization.PersianCalendar>トピック。  
  
 紀元 9999 9378 ペルシャ暦の年と同じです。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.MaxSupportedDateTime%2A>プロパティ。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.PersianCalendar.MinSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.PersianCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.PersianCalendar" /> クラスでサポートされている最も古い日付と時刻を取得します。</summary>
        <value>
          <see cref="T:System.Globalization.PersianCalendar" /> クラスでサポートされている最も古い日付と時刻。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以降では、[!INCLUDE[net_v46](~/includes/net-v46-md.md)]の値、<xref:System.Globalization.PersianCalendar.MinSupportedDateTime%2A>プロパティは、紀元 622 年 3 月 22日年の最初の瞬間に相当 構成のグレゴリオ暦カレンダーです。 以前のバージョンので、NET Framework は西暦 622 年 3 月 21 日の最初の瞬間に相当 構成のグレゴリオ暦カレンダーです。 詳細についてを参照してください「PersianCalendar クラスと .NET Framework のバージョン」、<xref:System.Globalization.PersianCalendar>トピック。  
  
 622 紀元 ペルシャ暦の 0001 年と同じです。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.MinSupportedDateTime%2A>プロパティ。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.PersianCalendar.MaxSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="PersianEra">
      <MemberSignature Language="C#" Value="public static readonly int PersianEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 PersianEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.PersianCalendar.PersianEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PersianEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int PersianEra;" />
      <MemberSignature Language="F#" Value=" staticval mutable PersianEra : int" Usage="System.Globalization.PersianCalendar.PersianEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の時代 (年号) を表します。 このフィールドは定数です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値<xref:System.Globalization.PersianCalendar.PersianEra>は 1 です。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.PersianEra>プロパティ。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="persianCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す 1 ～ 9378 の整数。</param>
        <param name="month">月を表す 1 ～ 12 の整数。</param>
        <param name="day">日を表す 1 ～ 31 の整数。</param>
        <param name="hour">時間を表す 0 ～ 23 の整数。</param>
        <param name="minute">分を表す 0 ～ 59 の整数。</param>
        <param name="second">秒を表す 0 ～ 59 の整数。</param>
        <param name="millisecond">ミリ秒を表す 0 ～ 999 の整数。</param>
        <param name="era">時代 (年号) を表す 0 ～ 1 の整数。</param>
        <summary>指定した日付、時刻、および時代 (年号) に設定された <see cref="T:System.DateTime" /> オブジェクトを返します。</summary>
        <returns>現在の時代 (年号) の指定した日付と時刻に設定された <see cref="T:System.DateTime" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.PersianCalendar.ToDateTime%2A>メソッド グレゴリオ暦の日付を現在の暦で日付を変換できますので便利です。 グレゴリオ暦の日付後で使用できますなどのさまざまなカレンダーで日付を比較または等価の日付を特定の暦で作成します。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.ToDateTime%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、<paramref name="second" />、<paramref name="millisecond" />、または <paramref name="era" /> がこの暦でサポートされている範囲外の値です。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.PersianCalendar.PersianEra" />
        <altmember cref="P:System.Globalization.PersianCalendar.Eras" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.PersianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="persianCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">変換する年を表す 1 ～ 9378 の整数。</param>
        <summary>指定した年を 4 桁表記の年に変換します。</summary>
        <returns>
          <paramref name="year" /> の 4 桁表記を保持する整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは変換、`year`パラメーターを使用して 4 桁の年形式を<xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A>プロパティ。 戻り値は、2 桁の年を 4 桁の年に適切に変換することができる 100 年の範囲の上限の境界です。 たとえば、100 年間の範囲は、1930 ~ 2029年が場合、2 桁の値は 30 として解釈されますように、1930年、2029 29 桁の値が解釈されます。  
  
 <xref:System.Globalization.PersianCalendar.ToFourDigitYear%2A> 2 桁または 4 桁の年のいずれかをサポートしています。 4 桁の値に従って、値に変換するメソッドを 2 桁の年の値 (100 未満) を渡すと、<xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A>適切な世紀を表す値。 アプリケーションがサポートされているカレンダーの範囲内にある 4 桁の年の値を提供している場合<xref:System.Globalization.PersianCalendar.ToFourDigitYear%2A>、実際の入力値を返します。 場合は、アプリケーションがサポートされているカレンダーの範囲外にある 4 桁の値を提供、または負の値が渡された場合は、メソッドは例外をスローします。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.ToFourDigitYear%2A>メソッド。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> が 0 より小さいか、9378 を超えています。</exception>
        <altmember cref="P:System.Globalization.PersianCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.PersianCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.PersianCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年を取得または設定します。</summary>
        <value>年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、2 桁の年を 4 桁の年に適切に変換できます。 たとえば、このプロパティが 2029年に設定されている場合、100 年範囲はように、1930年から 2029 です。 そのため、30 の 2 桁の値は、2029年として解釈されます 2 桁の値は 29、ように、1930、として解釈されます。  
  
 このプロパティの初期値は、コントロール パネルの 地域と言語のオプションの設定から派生します。 ただし、その情報を変更の有効期間中に、<xref:System.AppDomain>します。 <xref:System.Globalization.PersianCalendar>クラス システム設定の変更を検出が自動的にします。 予定表が地域と言語のオプションでサポートされていない場合、このプロパティの初期値は、calendar クラスによって定義された既定値です。  
  
 アプリケーションは、この値を 2 桁の年をそのまま使用することを示す 99 に設定する必要があります。 たとえば、このプロパティが 99 に設定されている場合、100 年の範囲は 0 (ほとんどのカレンダーの有効な値されません) 99 です。 そのため、30 の 2 桁の値は 30 として解釈されます。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Globalization.PersianCalendar.TwoDigitYearMax%2A>プロパティ。  
  
 [!code-csharp[sys.glob.PersianCal#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.persianCal/cs/pcal.cs#1)]
 [!code-vb[sys.glob.PersianCal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.persianCal/vb/pcal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このカレンダーは読み取り専用です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">設定操作の値が 100 より小さいか、9378 を超えています。</exception>
        <altmember cref="M:System.Globalization.PersianCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>