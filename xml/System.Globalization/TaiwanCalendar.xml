<Type Name="TaiwanCalendar" FullName="System.Globalization.TaiwanCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f61ea0e805d6530d359b1eacdeb16f2c02637fa6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563125" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaiwanCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TaiwanCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TaiwanCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class TaiwanCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaiwanCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type TaiwanCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="94580-101">the Taiwan calendar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94580-101">the Taiwan calendar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-102">年と時代 (年号) が異なる点を除いて、台湾暦はグレゴリオ暦のカレンダーと同じように動作します。</span><span class="sxs-lookup"><span data-stu-id="94580-102">The Taiwan calendar works exactly like the Gregorian calendar, except that the year and era are different.</span></span> <span data-ttu-id="94580-103"><xref:System.Globalization.TaiwanCalendar>クラスは、現在の時代のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="94580-103">The <xref:System.Globalization.TaiwanCalendar> class recognizes only the current era.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94580-104">使用方法について、<xref:System.Globalization.TaiwanCalendar>クラスと、その他の .NET Framework のクラスを予定表を参照してください[カレンダーの使用](~/docs/standard/datetime/working-with-calendars.md)です。</span><span class="sxs-lookup"><span data-stu-id="94580-104">For information about using the <xref:System.Globalization.TaiwanCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="94580-105">うるう年台湾暦では、グレゴリオ暦で同じ閏年に対応します。</span><span class="sxs-lookup"><span data-stu-id="94580-105">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="94580-106">うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="94580-106">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="94580-107">400 で割り切れるグレゴリオ暦年がうるう年です。</span><span class="sxs-lookup"><span data-stu-id="94580-107">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="94580-108">共通の年度は 365 日を持ち、うるう年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="94580-108">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="94580-109">台湾暦では、28 ~ 31 日に 12 か月間があります。</span><span class="sxs-lookup"><span data-stu-id="94580-109">The Taiwan calendar has 12 months with 28 to 31 days each:</span></span>  
  
|<span data-ttu-id="94580-110">GetMonth 値</span><span class="sxs-lookup"><span data-stu-id="94580-110">GetMonth value</span></span>|<span data-ttu-id="94580-111">月</span><span class="sxs-lookup"><span data-stu-id="94580-111">Month</span></span>|<span data-ttu-id="94580-112">一般的な年の日</span><span class="sxs-lookup"><span data-stu-id="94580-112">Days in common years</span></span>|<span data-ttu-id="94580-113">閏年の日数</span><span class="sxs-lookup"><span data-stu-id="94580-113">Days in leap years</span></span>|  
|--------------------|-----------|--------------------------|------------------------|  
|<span data-ttu-id="94580-114">1</span><span class="sxs-lookup"><span data-stu-id="94580-114">1</span></span>|<span data-ttu-id="94580-115">1月 (1 月)</span><span class="sxs-lookup"><span data-stu-id="94580-115">1月 (January)</span></span>|<span data-ttu-id="94580-116">31</span><span class="sxs-lookup"><span data-stu-id="94580-116">31</span></span>|<span data-ttu-id="94580-117">31</span><span class="sxs-lookup"><span data-stu-id="94580-117">31</span></span>|  
|<span data-ttu-id="94580-118">2</span><span class="sxs-lookup"><span data-stu-id="94580-118">2</span></span>|<span data-ttu-id="94580-119">2月 (2 月)</span><span class="sxs-lookup"><span data-stu-id="94580-119">2月 (February)</span></span>|<span data-ttu-id="94580-120">28</span><span class="sxs-lookup"><span data-stu-id="94580-120">28</span></span>|<span data-ttu-id="94580-121">29</span><span class="sxs-lookup"><span data-stu-id="94580-121">29</span></span>|  
|<span data-ttu-id="94580-122">3</span><span class="sxs-lookup"><span data-stu-id="94580-122">3</span></span>|<span data-ttu-id="94580-123">3月 (年 3 月)</span><span class="sxs-lookup"><span data-stu-id="94580-123">3月 (March)</span></span>|<span data-ttu-id="94580-124">31</span><span class="sxs-lookup"><span data-stu-id="94580-124">31</span></span>|<span data-ttu-id="94580-125">31</span><span class="sxs-lookup"><span data-stu-id="94580-125">31</span></span>|  
|<span data-ttu-id="94580-126">4</span><span class="sxs-lookup"><span data-stu-id="94580-126">4</span></span>|<span data-ttu-id="94580-127">4月 (年 4 月)</span><span class="sxs-lookup"><span data-stu-id="94580-127">4月 (April)</span></span>|<span data-ttu-id="94580-128">30</span><span class="sxs-lookup"><span data-stu-id="94580-128">30</span></span>|<span data-ttu-id="94580-129">30</span><span class="sxs-lookup"><span data-stu-id="94580-129">30</span></span>|  
|<span data-ttu-id="94580-130">5</span><span class="sxs-lookup"><span data-stu-id="94580-130">5</span></span>|<span data-ttu-id="94580-131">5月 (月)</span><span class="sxs-lookup"><span data-stu-id="94580-131">5月 (May)</span></span>|<span data-ttu-id="94580-132">31</span><span class="sxs-lookup"><span data-stu-id="94580-132">31</span></span>|<span data-ttu-id="94580-133">31</span><span class="sxs-lookup"><span data-stu-id="94580-133">31</span></span>|  
|<span data-ttu-id="94580-134">6</span><span class="sxs-lookup"><span data-stu-id="94580-134">6</span></span>|<span data-ttu-id="94580-135">6月 (6 月)</span><span class="sxs-lookup"><span data-stu-id="94580-135">6月 (June)</span></span>|<span data-ttu-id="94580-136">30</span><span class="sxs-lookup"><span data-stu-id="94580-136">30</span></span>|<span data-ttu-id="94580-137">30</span><span class="sxs-lookup"><span data-stu-id="94580-137">30</span></span>|  
|<span data-ttu-id="94580-138">7</span><span class="sxs-lookup"><span data-stu-id="94580-138">7</span></span>|<span data-ttu-id="94580-139">7月 (7 月)</span><span class="sxs-lookup"><span data-stu-id="94580-139">7月 (July)</span></span>|<span data-ttu-id="94580-140">31</span><span class="sxs-lookup"><span data-stu-id="94580-140">31</span></span>|<span data-ttu-id="94580-141">31</span><span class="sxs-lookup"><span data-stu-id="94580-141">31</span></span>|  
|<span data-ttu-id="94580-142">8</span><span class="sxs-lookup"><span data-stu-id="94580-142">8</span></span>|<span data-ttu-id="94580-143">8月 (8 月)</span><span class="sxs-lookup"><span data-stu-id="94580-143">8月 (August)</span></span>|<span data-ttu-id="94580-144">31</span><span class="sxs-lookup"><span data-stu-id="94580-144">31</span></span>|<span data-ttu-id="94580-145">31</span><span class="sxs-lookup"><span data-stu-id="94580-145">31</span></span>|  
|<span data-ttu-id="94580-146">9</span><span class="sxs-lookup"><span data-stu-id="94580-146">9</span></span>|<span data-ttu-id="94580-147">9月 (年 9 月)</span><span class="sxs-lookup"><span data-stu-id="94580-147">9月 (September)</span></span>|<span data-ttu-id="94580-148">30</span><span class="sxs-lookup"><span data-stu-id="94580-148">30</span></span>|<span data-ttu-id="94580-149">30</span><span class="sxs-lookup"><span data-stu-id="94580-149">30</span></span>|  
|<span data-ttu-id="94580-150">10</span><span class="sxs-lookup"><span data-stu-id="94580-150">10</span></span>|<span data-ttu-id="94580-151">10月 (年 10 月)</span><span class="sxs-lookup"><span data-stu-id="94580-151">10月 (October)</span></span>|<span data-ttu-id="94580-152">31</span><span class="sxs-lookup"><span data-stu-id="94580-152">31</span></span>|<span data-ttu-id="94580-153">31</span><span class="sxs-lookup"><span data-stu-id="94580-153">31</span></span>|  
|<span data-ttu-id="94580-154">11</span><span class="sxs-lookup"><span data-stu-id="94580-154">11</span></span>|<span data-ttu-id="94580-155">11月 (11 月)</span><span class="sxs-lookup"><span data-stu-id="94580-155">11月 (November)</span></span>|<span data-ttu-id="94580-156">30</span><span class="sxs-lookup"><span data-stu-id="94580-156">30</span></span>|<span data-ttu-id="94580-157">30</span><span class="sxs-lookup"><span data-stu-id="94580-157">30</span></span>|  
|<span data-ttu-id="94580-158">12</span><span class="sxs-lookup"><span data-stu-id="94580-158">12</span></span>|<span data-ttu-id="94580-159">12月 (12 月)</span><span class="sxs-lookup"><span data-stu-id="94580-159">12月 (December)</span></span>|<span data-ttu-id="94580-160">31</span><span class="sxs-lookup"><span data-stu-id="94580-160">31</span></span>|<span data-ttu-id="94580-161">31</span><span class="sxs-lookup"><span data-stu-id="94580-161">31</span></span>|  
  
 <span data-ttu-id="94580-162">年 2 月 29 日、閏年あり平年 28 です。</span><span class="sxs-lookup"><span data-stu-id="94580-162">February has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="94580-163">日の 2001 年 1 月 1 日西暦</span><span class="sxs-lookup"><span data-stu-id="94580-163">The date January 1, 2001 C.E.</span></span> <span data-ttu-id="94580-164">台湾暦では現在の時代 (年号) の 90 年 1 月の最初の日に相当します。</span><span class="sxs-lookup"><span data-stu-id="94580-164">in the Gregorian calendar is equivalent to the first day of January in the year 90 of the current era in the Taiwan calendar.</span></span>  
  
 <span data-ttu-id="94580-165">各<xref:System.Globalization.CultureInfo>予定表のセットをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="94580-165">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="94580-166"><xref:System.Globalization.CultureInfo.Calendar%2A>プロパティを返します、カルチャの既定のカレンダーと<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>プロパティは、カルチャでサポートされているすべてのカレンダーを含む配列を返します。</span><span class="sxs-lookup"><span data-stu-id="94580-166">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="94580-167">によって使用される暦に変更する、 <xref:System.Globalization.CultureInfo>、アプリケーションを設定する必要があります、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティ<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>を新しい<xref:System.Globalization.Calendar>です。</span><span class="sxs-lookup"><span data-stu-id="94580-167">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <span data-ttu-id="94580-168">
        <para>If<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />は、<see cref="T:System.Globalization.TaiwanCalendar" />ですが、<see cref="P:System.Threading.Thread.CurrentCulture" />はありません"ZH-TW" <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />、 <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />、および<see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />空の文字列を返します ("") です。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="94580-168">
          <para>-   If <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> is the <see cref="T:System.Globalization.TaiwanCalendar" /> but the <see cref="P:System.Threading.Thread.CurrentCulture" /> is not "zh-TW", then <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, and <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> return an empty string ("").</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaiwanCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaiwanCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94580-169">Initializes a new instance of the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-169">Initializes a new instance of the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeInitializationException">
          <span data-ttu-id="94580-170">Unable to initialize a <see cref="T:System.Globalization.TaiwanCalendar" /> object because of missing culture information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-170">Unable to initialize a <see cref="T:System.Globalization.TaiwanCalendar" /> object because of missing culture information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="taiwanCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="94580-171">The <see cref="T:System.DateTime" /> to which to add months.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-171">The <see cref="T:System.DateTime" /> to which to add months.</span>
          </span>
        </param>
        <param name="months">
          <span data-ttu-id="94580-172">The number of months to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-172">The number of months to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-173">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-173">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-174">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-174">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-175">結果の日の部分<xref:System.DateTime>日が結果として得られる結果の年の月の有効な曜日ではない場合に影響します。</span><span class="sxs-lookup"><span data-stu-id="94580-175">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="94580-176">結果として得られる結果の年の月の最後の有効な日付に変更されます。</span><span class="sxs-lookup"><span data-stu-id="94580-176">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="94580-177">結果の年の部分<xref:System.DateTime>が影響を受けるは、その月が指定した年を超えた場合<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="94580-177">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="94580-178">この実装では、現在の時代のみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="94580-178">This implementation supports only the current era.</span></span> <span data-ttu-id="94580-179">したがって、<xref:System.ArgumentException>結果の年が指定した時代 (年号) を超えた場合にスローされる<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="94580-179">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="94580-180">結果の時刻の部分<xref:System.DateTime>は、指定したのと同じ<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="94580-180">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="94580-181">たとえば、指定した月が年 10 月 31 日まである場合、指定した日がの値と、31 日、その月の`months`パラメーターが 6 で、結果の年 1 月は、指定した年を超える年 4 月、および結果として得られる day は、4 月の末日である 30 日です。</span><span class="sxs-lookup"><span data-stu-id="94580-181">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="94580-182">場合の値、`months`パラメーターが負の場合、結果として得られる<xref:System.DateTime>指定よりも前か<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="94580-182">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="94580-183"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>常に equals を値<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="94580-183">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="94580-184">保持する、<xref:System.DateTime.Kind%2A>のプロパティ、`time`を呼び出してパラメーター、<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>メソッドを次の例のようにします。</span><span class="sxs-lookup"><span data-stu-id="94580-184">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="94580-185">使用を次のコード例に示します、<xref:System.Globalization.TaiwanCalendar.AddMonths%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="94580-185">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.AddMonths%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="94580-186">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-186">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-187">
            <paramref name="months" /> is less than -120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-187">
              <paramref name="months" /> is less than -120000.</span>
          </span>
          <span data-ttu-id="94580-188">-or-  <paramref name="months" /> is greater than 120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-188">-or-  <paramref name="months" /> is greater than 120000.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="taiwanCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="94580-189">The <see cref="T:System.DateTime" /> to which to add years.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-189">The <see cref="T:System.DateTime" /> to which to add years.</span>
          </span>
        </param>
        <param name="years">
          <span data-ttu-id="94580-190">The number of years to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-190">The number of years to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-191">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-191">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-192">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-192">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-193">結果の日の部分<xref:System.DateTime>日が結果として得られる結果の年の月の有効な曜日ではない場合に影響します。</span><span class="sxs-lookup"><span data-stu-id="94580-193">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="94580-194">結果として得られる結果の年の月の最後の有効な日付に変更されます。</span><span class="sxs-lookup"><span data-stu-id="94580-194">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="94580-195">結果の月部分<xref:System.DateTime>は、指定したのと同じ<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="94580-195">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="94580-196">この実装では、現在の時代のみをサポートします。</span><span class="sxs-lookup"><span data-stu-id="94580-196">This implementation supports only the current era.</span></span> <span data-ttu-id="94580-197">したがって、<xref:System.ArgumentException>結果の年が指定した時代 (年号) を超えた場合にスローされる<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="94580-197">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="94580-198">結果の時刻の部分<xref:System.DateTime>は、指定したのと同じ<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="94580-198">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="94580-199">たとえば、年 2 月が 28 の日を除く平年の場合は 29 日。</span><span class="sxs-lookup"><span data-stu-id="94580-199">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="94580-200">指定した日付がうるう年の 2 月 29 日と値の場合`years`1 に設定されて、結果として得られる日付は次の年 2 月 28 日。</span><span class="sxs-lookup"><span data-stu-id="94580-200">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="94580-201">場合`years`は負の値、結果として得られる<xref:System.DateTime>指定よりも前か<xref:System.DateTime>です。</span><span class="sxs-lookup"><span data-stu-id="94580-201">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="94580-202"><xref:System.DateTime.Kind%2A> 、返されたプロパティ<xref:System.DateTime>常に equals を値<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="94580-202">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="94580-203">保持する、<xref:System.DateTime.Kind%2A>のプロパティ、`time`を呼び出してパラメーター、<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>メソッドを次の例のようにします。</span><span class="sxs-lookup"><span data-stu-id="94580-203">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="94580-204">次のコード例の使用が表示されます、<xref:System.Globalization.TaiwanCalendar.AddYears%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="94580-204">The following code example displays the use of the <xref:System.Globalization.TaiwanCalendar.AddYears%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="94580-205">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-205">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.TaiwanCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94580-206">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-206">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94580-207">常に <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-207">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94580-208">次の例では、リフレクションを使用して、各インスタンス化<xref:System.Globalization.Calendar>型と .NET Framework は、の値を表示、<xref:System.Globalization.Calendar.AlgorithmType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="94580-208">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.TaiwanCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94580-209">Gets the list of eras in the <see cref="T:System.Globalization.TaiwanCalendar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-209">Gets the list of eras in the <see cref="T:System.Globalization.TaiwanCalendar" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94580-210">対象の値は常に現在の時代 (年号) の 1 つの要素で構成される配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-210">An array that consists of a single element for which the value is always the current era.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-211">このプロパティによって返される配列内の値は、時代 (年号) の最大値の範囲は 1 から番号です。</span><span class="sxs-lookup"><span data-stu-id="94580-211">The values in the array returned by this property are numbers that range from 1 to the largest era number.</span></span> <span data-ttu-id="94580-212">最大の時代 (年号) の数が配列の最初の要素で返されるされ、最後の要素の時代 (年号) の数の最小値が返されます。</span><span class="sxs-lookup"><span data-stu-id="94580-212">The largest era number is returned in the first array element and the smallest era number is returned in the last element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="taiwanCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="94580-213">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-213">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-214">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-214">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-215">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-215">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94580-216">使用を次のコード例に示します、<xref:System.Globalization.TaiwanCalendar.GetDayOfMonth%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="94580-216">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfMonth%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="taiwanCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="94580-217">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-217">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-218">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-218">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-219">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-219">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-220"><xref:System.DayOfWeek>値は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="94580-220">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="94580-221">DayOfWeek 値</span><span class="sxs-lookup"><span data-stu-id="94580-221">DayOfWeek value</span></span>|<span data-ttu-id="94580-222">示します</span><span class="sxs-lookup"><span data-stu-id="94580-222">which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="94580-223">日曜日</span><span class="sxs-lookup"><span data-stu-id="94580-223">Sunday</span></span>|<span data-ttu-id="94580-224">星期日</span><span class="sxs-lookup"><span data-stu-id="94580-224">星期日</span></span>|  
|<span data-ttu-id="94580-225">月曜日</span><span class="sxs-lookup"><span data-stu-id="94580-225">Monday</span></span>|<span data-ttu-id="94580-226">星期一</span><span class="sxs-lookup"><span data-stu-id="94580-226">星期一</span></span>|  
|<span data-ttu-id="94580-227">火曜日</span><span class="sxs-lookup"><span data-stu-id="94580-227">Tuesday</span></span>|<span data-ttu-id="94580-228">星期二</span><span class="sxs-lookup"><span data-stu-id="94580-228">星期二</span></span>|  
|<span data-ttu-id="94580-229">水曜日</span><span class="sxs-lookup"><span data-stu-id="94580-229">Wednesday</span></span>|<span data-ttu-id="94580-230">星期三</span><span class="sxs-lookup"><span data-stu-id="94580-230">星期三</span></span>|  
|<span data-ttu-id="94580-231">木曜日</span><span class="sxs-lookup"><span data-stu-id="94580-231">Thursday</span></span>|<span data-ttu-id="94580-232">星期四</span><span class="sxs-lookup"><span data-stu-id="94580-232">星期四</span></span>|  
|<span data-ttu-id="94580-233">金曜日</span><span class="sxs-lookup"><span data-stu-id="94580-233">Friday</span></span>|<span data-ttu-id="94580-234">星期五</span><span class="sxs-lookup"><span data-stu-id="94580-234">星期五</span></span>|  
|<span data-ttu-id="94580-235">土曜日</span><span class="sxs-lookup"><span data-stu-id="94580-235">Saturday</span></span>|<span data-ttu-id="94580-236">星期六</span><span class="sxs-lookup"><span data-stu-id="94580-236">星期六</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="94580-237">使用を次のコード例に示します、<xref:System.Globalization.TaiwanCalendar.GetDayOfWeek%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="94580-237">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfWeek%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="taiwanCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="94580-238">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-238">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-239">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-239">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-240">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-240">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-241">その年の日付は、その年の最初の日付から日数として定義されます。</span><span class="sxs-lookup"><span data-stu-id="94580-241">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="94580-242">たとえば、<xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A>最初の月の最初の日が 1 を返しますと<xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A>最後の最後の月の日がその年の日数の合計数を返します。</span><span class="sxs-lookup"><span data-stu-id="94580-242">For example, <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year.</span></span> <span data-ttu-id="94580-243">によって返される値としてこの合計は<xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>します。</span><span class="sxs-lookup"><span data-stu-id="94580-243">The total is the same as the value returned by <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94580-244">使用を次のコード例に示します、<xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="94580-244">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="taiwanCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="94580-245">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-245">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="94580-246">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-246">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="94580-247">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-247">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-248">Returns the number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-248">Returns the number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-249">The number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-249">The number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-250">たとえば、このメソッドを返します 28 または 29 年 2 月の (`month` = 2) かどうかに応じて、`year`が閏年であります。</span><span class="sxs-lookup"><span data-stu-id="94580-250">For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94580-251">次の例では<xref:System.Globalization.TaiwanCalendar.GetDaysInMonth%2A>各時代 (年号) の 5 つの年の 2 番目の月です。</span><span class="sxs-lookup"><span data-stu-id="94580-251">The following example calls <xref:System.Globalization.TaiwanCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/CPP/taiwancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/CS/taiwancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/VB/taiwancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-252">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-252">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-253">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-253">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-254">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-254">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="taiwanCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="94580-255">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-255">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="94580-256">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-256">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-257">Returns the number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-257">Returns the number of days in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-258">The number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-258">The number of days in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-259">365 または 366、かどうかに応じて、たとえば、このメソッドが戻る`year`が閏年であります。</span><span class="sxs-lookup"><span data-stu-id="94580-259">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94580-260">次の例では<xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>各時代 (年号) の 5 年間です。</span><span class="sxs-lookup"><span data-stu-id="94580-260">The following example calls <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/CPP/taiwancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/CS/taiwancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/VB/taiwancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-261">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-261">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-262">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-262">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="taiwanCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="94580-263">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-263">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-264">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-264">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-265">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-265">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-266"><xref:System.Globalization.TaiwanCalendar>クラスは、現在の時代のみを認識します。</span><span class="sxs-lookup"><span data-stu-id="94580-266">The <xref:System.Globalization.TaiwanCalendar> class recognizes only the current era.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94580-267">使用を次のコード例に示します、<xref:System.Globalization.TaiwanCalendar.GetEra%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="94580-267">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetEra%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="taiwanCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="94580-268">A year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-268">A year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="94580-269">An era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-269">An era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-270">Calculates the leap month for a specified year and era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-270">Calculates the leap month for a specified year and era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-271">The return value is always 0 because the <see cref="T:System.Globalization.TaiwanCalendar" /> class does not support the notion of a leap month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-271">The return value is always 0 because the <see cref="T:System.Globalization.TaiwanCalendar" /> class does not support the notion of a leap month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-272">閏月の概念をサポートする予定表、閏月は特定の月の後、または年のすべての月の後にことができます。</span><span class="sxs-lookup"><span data-stu-id="94580-272">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="94580-273">たとえば、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>メソッドは、1 ~ 13 を示す、指定した日に関連付けられている月の範囲数を返します。</span><span class="sxs-lookup"><span data-stu-id="94580-273">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="94580-274">場合は、その年の 8 と 9 番目の月が閏月、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>メソッド leap 8 番目の月を 9 と 10 の 9 番目の月の 8 番目の月の 8 が返されます。</span><span class="sxs-lookup"><span data-stu-id="94580-274">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="taiwanCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="94580-275">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-275">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-276">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-276">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-277">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-277">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94580-278">使用を次のコード例に示します、<xref:System.Globalization.TaiwanCalendar.GetMonth%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="94580-278">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetMonth%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="taiwanCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="94580-279">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-279">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="94580-280">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-280">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-281">Returns the number of months in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-281">Returns the number of months in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-282">The number of months in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-282">The number of months in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94580-283">次の例では<xref:System.Globalization.TaiwanCalendar.GetMonthsInYear%2A>各時代 (年号) の 5 年間です。</span><span class="sxs-lookup"><span data-stu-id="94580-283">The following example calls <xref:System.Globalization.TaiwanCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/CPP/taiwancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/CS/taiwancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/VB/taiwancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-284">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-284">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-285">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-285">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="taiwanCalendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="94580-286">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-286">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="94580-287">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-287">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span>
          </span>
        </param>
        <param name="firstDayOfWeek">
          <span data-ttu-id="94580-288">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-288">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-289">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-289">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-290">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-290">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-291">設定して、その年の週の数を決定するこのメソッドを使用することができます、`time`年の最後の日のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="94580-291">This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.</span></span>  
  
 <span data-ttu-id="94580-292"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>プロパティにはために使用するカルチャ固有の値が含まれています、`rule`と`firstDayOfWeek`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="94580-292">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.</span></span>  
  
 <span data-ttu-id="94580-293"><xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>既定値を含む<xref:System.DayOfWeek>で指定されたカレンダーを使用して、特定のカルチャの週の最初の日を表す値、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="94580-293">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="94580-294"><xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>既定値を含む<xref:System.Globalization.CalendarWeekRule>で指定されたカレンダーを使用して、特定のカルチャのカレンダーの週を定義する値、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティの<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="94580-294">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="94580-295">たとえば、 <xref:System.Globalization.GregorianCalendar>、 <xref:System.Globalization.Calendar.GetWeekOfYear%2A> 1 月 1 日のメソッドは 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="94580-295">For example, in <xref:System.Globalization.GregorianCalendar>, the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method for January 1 returns 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94580-296">次のコード例に示す方法の結果<xref:System.Globalization.Calendar.GetWeekOfYear%2A>かによって異なります、<xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>と<xref:System.Globalization.CalendarWeekRule>使用される値。</span><span class="sxs-lookup"><span data-stu-id="94580-296">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used.</span></span> <span data-ttu-id="94580-297">指定した日付の年の最終日が場合<xref:System.Globalization.Calendar.GetWeekOfYear%2A>その年の週の合計数を返します。</span><span class="sxs-lookup"><span data-stu-id="94580-297">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-298">
            <paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-298">
              <paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-299">-or-  <paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-299">-or-  <paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="taiwanCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="94580-300">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-300">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-301">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-301">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-302">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-302">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94580-303">使用を次のコード例に示します、<xref:System.Globalization.TaiwanCalendar.GetYear%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="94580-303">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetYear%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="taiwanCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="94580-304">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-304">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="94580-305">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-305">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="94580-306">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-306">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="94580-307">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-307">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-308">Determines whether the specified date in the specified era is a leap day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-308">Determines whether the specified date in the specified era is a leap day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-309">
            <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-309">
              <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-310">うるう年台湾暦では、グレゴリオ暦で同じ閏年に対応します。</span><span class="sxs-lookup"><span data-stu-id="94580-310">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="94580-311">うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="94580-311">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="94580-312">400 で割り切れるグレゴリオ暦年がうるう年です。</span><span class="sxs-lookup"><span data-stu-id="94580-312">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="94580-313">共通の年度は 365 日を持ち、うるう年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="94580-313">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="94580-314">閏日は、閏年であるだけで発生する日です。</span><span class="sxs-lookup"><span data-stu-id="94580-314">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="94580-315">たとえば、年 2 月の 29 日は、唯一の leap 日です。</span><span class="sxs-lookup"><span data-stu-id="94580-315">For example, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94580-316">次の例では<xref:System.Globalization.TaiwanCalendar.IsLeapDay%2A>時代 (年号) のそれぞれに 5 年間の 2 番目の月 (2 月) の最後の日のです。</span><span class="sxs-lookup"><span data-stu-id="94580-316">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/CPP/taiwancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/CS/taiwancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/VB/taiwancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-317">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-317">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-318">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-318">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-319">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-319">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-320">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-320">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="taiwanCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="94580-321">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-321">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="94580-322">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-322">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="94580-323">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-323">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-324">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-324">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-325">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-325">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-326">うるう年台湾暦では、グレゴリオ暦で同じ閏年に対応します。</span><span class="sxs-lookup"><span data-stu-id="94580-326">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="94580-327">うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="94580-327">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="94580-328">400 で割り切れるグレゴリオ暦年がうるう年です。</span><span class="sxs-lookup"><span data-stu-id="94580-328">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="94580-329">共通の年度は 365 日を持ち、うるう年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="94580-329">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="94580-330">閏月は、うるう年でのみ発生する月全体です。</span><span class="sxs-lookup"><span data-stu-id="94580-330">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="94580-331">台湾暦には、閏月がありません。</span><span class="sxs-lookup"><span data-stu-id="94580-331">The Taiwan calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94580-332">次の例では<xref:System.Globalization.TaiwanCalendar.IsLeapMonth%2A>の現在の時代 (年号) の 5 年間のすべての月です。</span><span class="sxs-lookup"><span data-stu-id="94580-332">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/CPP/taiwancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/CS/taiwancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/VB/taiwancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-333">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-333">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-334">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-334">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-335">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-335">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="taiwanCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="94580-336">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-336">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="94580-337">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-337">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-338">Determines whether the specified year in the specified era is a leap year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-338">Determines whether the specified year in the specified era is a leap year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-339">
            <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-339">
              <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-340">うるう年台湾暦では、グレゴリオ暦で同じ閏年に対応します。</span><span class="sxs-lookup"><span data-stu-id="94580-340">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="94580-341">うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。</span><span class="sxs-lookup"><span data-stu-id="94580-341">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="94580-342">400 で割り切れるグレゴリオ暦年がうるう年です。</span><span class="sxs-lookup"><span data-stu-id="94580-342">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="94580-343">共通の年度は 365 日を持ち、うるう年が 366 日。</span><span class="sxs-lookup"><span data-stu-id="94580-343">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94580-344">次の例では<xref:System.Globalization.TaiwanCalendar.IsLeapYear%2A>時代 (年号) のそれぞれに 5 年間です。</span><span class="sxs-lookup"><span data-stu-id="94580-344">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/CPP/taiwancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/CS/taiwancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/VB/taiwancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-345">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-345">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-346">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-346">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94580-347">Gets the latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-347">Gets the latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94580-348">最新の日付と時刻でサポートされている、<see cref="T:System.Globalization.TaiwanCalendar" />紀元 9999 年 12 月 31 日の最終時と同じであるクラス</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-348">The latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class, which is equivalent to the last moment of December 31, 9999 C.E.</span>
          </span>
          <span data-ttu-id="94580-349">グレゴリオ暦です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-349">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="94580-350">次のコード例では、最小値と、カレンダーの最大値を取得します。</span><span class="sxs-lookup"><span data-stu-id="94580-350">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CPP/taiwancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CS/taiwancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/VB/taiwancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94580-351">Gets the earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-351">Gets the earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94580-352">最も古い日付と時刻でサポートされている、 <see cref="T:System.Globalization.TaiwanCalendar" /> 1912 年 1 月 1 日西暦の最初の瞬間に相当クラス</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-352">The earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class, which is equivalent to the first moment of January 1, 1912 C.E.</span>
          </span>
          <span data-ttu-id="94580-353">グレゴリオ暦です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-353">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-354">Microsoft Visual Basic でサポートされている日付の最小値で指定された時間として 1 日の時刻を表す<xref:System.DateTime>、西暦 0001 年 1 月 1 日であります。</span><span class="sxs-lookup"><span data-stu-id="94580-354">Microsoft Visual Basic represents time of day as the specified time on the minimum date supported by <xref:System.DateTime>, which is January 1, 0001 C.E.</span></span> <span data-ttu-id="94580-355">ただし、<xref:System.Globalization.TaiwanCalendar>クラスがその日付の最小値をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="94580-355">However, the <xref:System.Globalization.TaiwanCalendar> class does not support that minimum date.</span></span> <span data-ttu-id="94580-356">その結果、アプリケーションが、現在の暦を使用して時刻の書式を設定するメソッドを呼び出す、書式指定子で指定されていない場合は、書式設定を使用して、ISO 8601 並べ替え可能な ("s") の日付/時刻のパターン書式指定子既定の [全般] ("G") の日付ではなく/時刻のパターンの書式指定子。</span><span class="sxs-lookup"><span data-stu-id="94580-356">Consequently, if your application calls a method to format the time of day using the current calendar but does not specify a format specifier, formatting uses the ISO 8601 sortable ("s") date/time pattern format specifier instead of the default general ("G") date/time pattern format specifier.</span></span> <span data-ttu-id="94580-357">詳細については、次を参照してください。[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="94580-357">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="94580-358">次のコード例では、最小値と、カレンダーの最大値を取得します。</span><span class="sxs-lookup"><span data-stu-id="94580-358">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CPP/taiwancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CS/taiwancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/VB/taiwancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="taiwanCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="94580-359">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-359">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="94580-360">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-360">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="94580-361">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-361">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="94580-362">An integer from 0 to 23 that represents the hour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-362">An integer from 0 to 23 that represents the hour.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="94580-363">An integer from 0 to 59 that represents the minute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-363">An integer from 0 to 59 that represents the minute.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="94580-364">An integer from 0 to 59 that represents the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-364">An integer from 0 to 59 that represents the second.</span>
          </span>
        </param>
        <param name="millisecond">
          <span data-ttu-id="94580-365">An integer from 0 to 999 that represents the millisecond.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-365">An integer from 0 to 999 that represents the millisecond.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="94580-366">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-366">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-367">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-367">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-368">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-368">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-369">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-369">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-370">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-370">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-371">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-371">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="94580-372">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-372">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          </span>
          <span data-ttu-id="94580-373">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-373">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="94580-374">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-374">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="94580-375">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-375">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          </span>
          <span data-ttu-id="94580-376">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-376">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="taiwanCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="94580-377">A two-digit or four-digit integer that represents the year to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-377">A two-digit or four-digit integer that represents the year to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94580-378">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-378">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94580-379">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-379">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-380">このメソッドは、<xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType> を実装します。</span><span class="sxs-lookup"><span data-stu-id="94580-380">This method implements <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="94580-381">この実装は常の値を返します台湾暦の年より小さい 4 桁では一般的であるため、`year`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="94580-381">Because the year in the Taiwan calendar is typically less than four digits long, this implementation always returns the value of the `year` parameter.</span></span>  
  
 <span data-ttu-id="94580-382"><xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> 2 桁または 4 桁の年のいずれかをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="94580-382"><xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="94580-383">値によると 4 桁の値に変換するメソッドを 2 桁の年の値 (100 よりも小さい) を渡すと、<xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A>適切な 4 桁の年を表す値です。</span><span class="sxs-lookup"><span data-stu-id="94580-383">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="94580-384">アプリケーションがサポートされているカレンダーの範囲内にある 4 桁の年の値が指定した場合<xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>、実際の入力値を返します。</span><span class="sxs-lookup"><span data-stu-id="94580-384">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="94580-385">アプリケーションはサポートされているカレンダー範囲では、4 桁の値が指定した場合、または負の値が渡された場合は、メソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="94580-385">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-386">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-386">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94580-387">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-387">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94580-388">年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-388">The last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94580-389">このプロパティは、<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> を実装します。</span><span class="sxs-lookup"><span data-stu-id="94580-389">This property implements <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="94580-390">この実装が既定では 99 を返しの戻り値には影響しません台湾暦の年は 4 桁よりも小さく、通常、ため<xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>です。</span><span class="sxs-lookup"><span data-stu-id="94580-390">Because the year in the Taiwan calendar is typically less than four digits long, this implementation returns 99 by default and does not affect the return value of <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94580-391">The value specified in a set operation is less than 99.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-391">The value specified in a set operation is less than 99.</span>
          </span>
          <span data-ttu-id="94580-392">-or-  The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-392">-or-  The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="94580-393">In a set operation, the current instance is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94580-393">In a set operation, the current instance is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>