<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0838f7ad92cf5191b15275b5370a9120bc2435d3" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70649864" /></Metadata><TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>文字列のテキスト要素を列挙します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework は、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。 テキスト要素には、次のいずれかを指定できます。  
  
-   1つ<xref:System.Char>の値として表される基本文字。 たとえば、ラテン文字の大文字 A (U + 0041 という) とラテン小文字 AE (U + 00E6) は基本文字です。  
  
-   基本文字と1つ以上の組み合わせ文字で構成される結合文字シーケンス。 たとえば、例として、LATIN の大文字 A (U + 0041 という) と、MACRON (U + 0304) を組み合わせた文字のシーケンスがあります。  
  
-   サロゲートペア。 [Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)では、上位サロゲートと下位サロゲートという2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現として定義されます。 サロゲートペアは、UTF-16 でエンコードされた文字として、Unicode 基本多言語プレーン以外の文字を表すために使用されます。 たとえば、ゴシック文字の SAUIL (U + 10343) は、値が0xD800 で下位サロゲートで、値が0xDF43 である上位サロゲートとして UTF-16 エンコードで表されます。 サロゲートペアは、基本文字または組み合わせ文字を表すことができます。  
  
 クラスを使用すると、単一<xref:System.Char>のオブジェクトではなく、文字列のテキスト要素を操作できます。 <xref:System.Globalization.TextElementEnumerator>  
  
 文字列を<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType>メソッド<xref:System.Globalization.TextElementEnumerator>に渡すことによって、特定の文字列を表すオブジェクトをインスタンス化します。 これにより、文字列内の最初のテキスト要素の前に配置された列挙子が返されます。 また、 <xref:System.Globalization.TextElementEnumerator.Reset%2A>メソッドを呼び出すと、列挙子がこの位置に戻ります。 これは無効な状態を表して<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> <xref:System.Globalization.TextElementEnumerator.Current%2A>いるため、を呼び出して、列挙子を文字列の最初のテキスト要素に進めてから、プロパティの値を読み取って現在のテキスト要素を返す必要があります。  
  
 <xref:System.Globalization.TextElementEnumerator>オブジェクトを使用する場合は、列挙子を配置する必要があります。 プロパティは、または<xref:System.Globalization.TextElementEnumerator.Reset%2A>のいずれか<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>を呼び出すまで、同じテキスト要素を返します。 <xref:System.Globalization.TextElementEnumerator.Current%2A> 列挙子は、最初のテキスト要素の前、または文字列内の最後のテキスト要素の後に配置されている場合、無効な状態になります。 列挙子の状態が無効である場合、 <xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティの値を取得しようとすると例外がスローされます。 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A>プロパティの戻り値が`false`であるかどうかをテストすることで、列挙子が無効な状態であるかどうかを確認できます。  
  
 オブジェクトは、 <xref:System.Globalization.TextElementEnumerator>オブジェクトがインスタンス化される時点での文字列変数または文字列リテラルの現在の状態のスナップショットを表します。 <xref:System.Globalization.TextElementEnumerator> 次の点に注意してください。  
  
-   テキスト要素の列挙子は、文字列内のデータの読み取りにのみ使用できます。 基になる文字列を変更することはできません。  
  
-   列挙子には、それが表す文字列への排他アクセス権がありません。 文字列変数は、列挙子の作成後に変更できます。  
  
-   オブジェクトは、 <xref:System.Globalization.TextElementEnumerator>オブジェクトがインスタンス化されたときに文字列内に存在するテキスト要素を列挙します。 <xref:System.Globalization.TextElementEnumerator> 後でその変数が変更された場合、文字列変数に対する後続の変更は反映されません。  
  
-   クラスはをオーバーライド<xref:System.Object.Equals%2A?displayProperty=nameWithType>しないため、 <xref:System.Globalization.TextElementEnumerator>同じ文字列を表す2つのオブジェクトが等しくないと見なされます。 <xref:System.Globalization.TextElementEnumerator>  
  
   
  
## Examples  
 次の例では<xref:System.Globalization.TextElementEnumerator> 、クラスを使用して、文字列のテキスト要素を列挙します。  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列内の現在のテキスト要素を取得します。</summary>
        <value>文字列内の現在のテキスト要素を格納しているオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子が作成された後<xref:System.Globalization.TextElementEnumerator.Reset%2A> 、または<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>が呼び出された後、の<xref:System.Globalization.TextElementEnumerator.Current%2A>値を読み取る前に、を呼び出して、列挙子を文字列の最初のテキスト要素に進める必要があります。 それ以外<xref:System.Globalization.TextElementEnumerator.Current%2A>の場合、は定義されていません。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A>また、は、文字列の末尾を示す<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>最後`false`の呼び出しが返された場合にも例外をスローします。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A>は、列挙子の位置を移動せず、を<xref:System.Globalization.TextElementEnumerator.Current%2A>連続して呼び出すと、 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A>また<xref:System.Globalization.TextElementEnumerator.Reset%2A>はが呼び出されるまで同じオブジェクトを返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙子が現在位置しているテキスト要素のインデックスを取得します。</summary>
        <value>列挙子が現在位置しているテキスト要素のインデックス。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>文字列内の現在のテキスト要素を取得します。</summary>
        <returns>読み取る文字列の現在のテキスト要素を格納している新しい文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 <xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティと同じテキスト要素を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を文字列の次のテキスト要素に進めます。</summary>
        <returns>列挙子が次のテキスト要素に正常に進んだ場合は <see langword="true" />。列挙子が文字列の末尾を越えた場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子が作成された後<xref:System.Globalization.TextElementEnumerator.Reset%2A> 、またはが呼び出された後、列挙子は文字列の最初のテキスト要素の前に<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>配置され、の最初の呼び出しでは、列挙子が文字列の最初のテキスト要素に移されます。  
  
 この列挙子が作成された後に文字列<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>が変更された場合、は例外をスローします。  
  
 文字列の末尾が渡された後、が呼び出される<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>まで`false` <xref:System.Globalization.TextElementEnumerator.Reset%2A> 、後続のの呼び出しが返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を初期位置、つまり文字列の最初のテキスト要素の前に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Globalization.TextElementEnumerator.Reset%2A>は、最初のテキスト要素の前に、列挙子を文字列の先頭に移動します。 を呼び出した後<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> <xref:System.Globalization.TextElementEnumerator.Current%2A> 、を呼び出して最初のテキスト要素の値を読み取る前に、を呼び出して、列挙子を文字列の最初のテキスト要素に進めておく必要があります。 <xref:System.Globalization.TextElementEnumerator.Reset%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>
