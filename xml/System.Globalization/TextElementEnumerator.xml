<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextElementEnumerator.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c9664f1e2acccdee870814b869f6832677a1e9f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9664f1e2acccdee870814b869f6832677a1e9f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Globalization.TextElementEnumerator">
          <source>Enumerates the text elements of a string.</source>
          <target state="translated">文字列のテキスト要素を列挙します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework では、単一の文字、つまり、書記素として表示されるテキストの単位としてテキスト要素を定義します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A text element can be any of the following:</source>
          <target state="translated">テキスト要素には、次のいずれかを指定できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A base character, which is represented as a single <ph id="ph1">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">基本文字が含まれ、1 つとして表される<ph id="ph1">&lt;xref:System.Char&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</source>
          <target state="translated">ラテン文字の大文字などの文字で表される (u+0041) および LATIN SMALL 文字 AE (U +0 00E6) は基本文字です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A combining character sequence, which consists of a base character and one or more combining characters.</source>
          <target state="translated">組み合わせは、基本文字と 1 つまたは複数の結合文字で構成されるシーケンスを文字です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</source>
          <target state="translated">たとえば、例では、(u+0041) が続く組み合わせ長音 LATIN CAPITAL LETTER (U +0 0304)、結合は、文字のシーケンス。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Surrogate pairs, which the <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</source>
          <target state="translated">サロゲート ペアをする、 <bpt id="p1">[</bpt>Unicode 標準<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>一連の 2 つのコード単位で構成される 1 つの抽象文字のコード化文字表現として定義: 上位サロゲート、および下位サロゲート。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-8 encoded characters.</source>
          <target state="translated">サロゲート ペアは、utf-8 でエンコードされた文字として Unicode 基本多言語面以外の文字を表すために使用されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-8 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</source>
          <target state="translated">たとえば、GOTHIC 文字 SAUIL (U +0 10343) は utf-8 エンコード値が 0xD800 上位サロゲートと値を持つ 0xDF43 下位サロゲートで表されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">サロゲート ペアは、基本文字または組み合わせ文字を表すことができます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class allows you to work with the text elements in a string rather than with single <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>クラスでは、1 つではなく文字列内のテキスト要素で作業することができます<ph id="ph2">&lt;xref:System.Char&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object that represents a particular string by passing the string to the <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">インスタンス化する、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>する文字列を渡すことによって、特定の文字列を表すオブジェクト、<ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>This returns an enumerator that is positioned before the first text element in the string.</source>
          <target state="translated">文字列の最初のテキスト要素の前に配置する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Calling the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>メソッドがこの位置に戻さも、列挙子を表示します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Because this represents an invalid state, you must call <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first text element of the string before reading the value of the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property to return the current text element.</source>
          <target state="translated">これを表すため、無効な状態、呼び出す必要があります<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>の値を読み取る前に、文字列の最初のテキスト要素に列挙子を進める、<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>プロパティを現在のテキスト要素を返します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>When working with a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object, you are responsible for positioning the enumerator.</source>
          <target state="translated">使用する場合、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>オブジェクトの列挙子の位置を担当しています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property returns the same text element until you call either <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>プロパティは、いずれかが呼び出されるまで、同じテキスト要素を返します<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</source>
          <target state="translated">列挙子は無効な状態では文字列の最後のテキスト要素の前後のテキストの最初の要素に配置されている場合です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>When the enumerator is in an invalid state, attempting to retrieve the value of the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">列挙子は、状態が無効ですの値を取得しようとすると、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>プロパティは例外をスローします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>You can determine whether the enumerator is in an invalid state by testing whether the return value of the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">テストすることによって、列挙子が無効な状態ではかどうかを判断できるかどうかの戻り値、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>プロパティは<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object represents a snapshot of the current state of a string variable or string literal at the moment that the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object is instantiated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>オブジェクトを表す文字列変数または現時点でリテラル文字列の現在の状態のスナップショットを<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>オブジェクトをインスタンス化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Note that:</source>
          <target state="translated">次の点に注意してください。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Text element enumerators can only be used to read data in a string.</source>
          <target state="translated">テキスト要素の列挙子は、文字列内のデータの読み取りにのみ使用できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>They cannot modify the underlying string.</source>
          <target state="translated">基になる文字列を変更することはできません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>An enumerator does not have exclusive access to the string that it represents.</source>
          <target state="translated">列挙子には、それが表す文字列への排他アクセスがありません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A string variable can be modified after the enumerator is created.</source>
          <target state="translated">列挙子の作成後に、文字列変数を変更できます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object enumerates the text elements present in the string at the time that the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object was instantiated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>オブジェクトのテキスト要素を列挙時に、文字列内に存在する、<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>オブジェクトがインスタンス化します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</source>
          <target state="translated">その変数が終わった後で変更された場合、文字列変数にそれ以降の変更は反映されません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Because the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class does not override <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>, two <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> objects that represent the same string will be considered unequal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>クラスをオーバーライドしません<ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>、2 つ<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>を同じ文字列を表すオブジェクトと等しくない見なされます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class to enumerate the text elements of a string.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>文字列のテキスト要素を列挙するクラス。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>Gets the current text element in the string.</source>
          <target state="translated">文字列内の現在のテキスト要素を取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>An object containing the current text element in the string.</source>
          <target state="translated">文字列内の現在のテキスト要素を格納しているオブジェクト。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first text element of the string before reading the value of <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">列挙子を作成した後、または後に、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>が呼び出されると、<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>の値を読み取る前に、文字列の最初のテキスト要素に列挙子を進めるに呼び出す必要があります<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>が定義されていません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 場合は、最後の呼び出しも例外をスロー<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>返される<ph id="ph3">`false`</ph>文字列の末尾を示します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 連続して呼び出すと、列挙子の位置を移動しません<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>されるまで、同じオブジェクトを返す<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>Gets the index of the text element that the enumerator is currently positioned over.</source>
          <target state="translated">列挙子が現在位置しているテキスト要素のインデックスを取得します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>The index of the text element that the enumerator is currently positioned over.</source>
          <target state="translated">列挙子が現在位置しているテキスト要素のインデックス。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>Gets the current text element in the string.</source>
          <target state="translated">文字列内の現在のテキスト要素を取得します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>A new string containing the current text element in the string being read.</source>
          <target state="translated">読み取る文字列の現在のテキスト要素を格納している新しい文字列。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>This method returns the same text element as the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">このメソッドと同じテキスト要素を返します、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>Advances the enumerator to the next text element of the string.</source>
          <target state="translated">列挙子を文字列の次のテキスト要素に進めます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next text element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the string.</source>
          <target state="translated">列挙子が次のテキスト要素に正常に進んだ場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。列挙子が文字列の末尾を越えた場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, the enumerator is positioned before the first text element of the string, and the first call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> moves the enumerator over the first text element of the string.</source>
          <target state="translated">列挙子を作成した後、または後に、<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>が呼び出されると、列挙子は、文字列、および最初の呼び出しの最初のテキスト要素の前に置かれます<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>列挙子を文字列の最初のテキスト要素の上に移動します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>If the string is modified after this enumerator was created, <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> throws an exception.</source>
          <target state="translated">この列挙子が作成された後に、文字列が変更された場合<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>例外をスローします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>After the end of the string is passed, subsequent calls to <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">文字列の末尾が渡された、後続の呼び出し後<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>返す<ph id="ph2">`false`</ph>まで<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first text element in the string.</source>
          <target state="translated">列挙子を初期位置、つまり文字列の最初のテキスト要素の前に設定します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> method moves the enumerator to the beginning of the string, before the first text element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>メソッドは、最初のテキスト要素の前に、文字列の先頭に、列挙子を移動します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>, you must call <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first text element of the string before calling <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> to read the value of the first text element.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>、呼び出す必要があります<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>列挙子を呼び出す前に、文字列の最初のテキスト要素に進める<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>テキストの最初の要素の値を読み取れません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>