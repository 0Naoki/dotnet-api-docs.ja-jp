<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a6c417e3be06dd973162c18ff5712b05dc5c925c" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51868377" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="64d6f-101">文字列のテキスト要素を列挙します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="64d6f-101">Enumerates the text elements of a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64d6f-102">.NET Framework では、書記素には、単一の文字として表示されるテキストの単位として、テキスト要素を定義します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-102">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="64d6f-103">テキスト要素には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-103">A text element can be any of the following:</span></span>  
  
-   <span data-ttu-id="64d6f-104">基本文字を 1 つとして表される<xref:System.Char>値。</span><span class="sxs-lookup"><span data-stu-id="64d6f-104">A base character, which is represented as a single <xref:System.Char> value.</span></span> <span data-ttu-id="64d6f-105">LATIN CAPITAL など (u+0041) の文字し、文字 AE 小さなラテン語 (U + 00E6) は基本文字。</span><span class="sxs-lookup"><span data-stu-id="64d6f-105">For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</span></span>  
  
-   <span data-ttu-id="64d6f-106">組み合わせ文字のシーケンスで、基本文字と 1 つまたは複数の組み合わせ文字で構成されます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-106">A combining character sequence, which consists of a base character and one or more combining characters.</span></span> <span data-ttu-id="64d6f-107">たとえば、例、長音を組み合わせることによって (u+0041) の後に LATIN CAPITAL LETTER (U + 0304) は組み合わせ文字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="64d6f-107">For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</span></span>  
  
-   <span data-ttu-id="64d6f-108">サロゲート ペアを[Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)コード ユニットを 2 つのシーケンスで構成される 1 つの抽象文字のコード化文字表現として定義します。 上位サロゲート、および下位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="64d6f-108">Surrogate pairs, which the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</span></span> <span data-ttu-id="64d6f-109">サロゲート ペアは、utf-16 でエンコードされた文字として Unicode 基本多言語面以外の文字を表すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-109">Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-16 encoded characters.</span></span> <span data-ttu-id="64d6f-110">たとえば、ゴシック文字 SAUIL (U + 10343) は utf-16 エンコード値が 0xD800 上位サロゲートと値を持つは 0xDF43 下位サロゲートで表されます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-110">For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-16 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</span></span> <span data-ttu-id="64d6f-111">サロゲート ペアは、基本文字または組み合わせ文字を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-111">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="64d6f-112"><xref:System.Globalization.TextElementEnumerator>クラスでは、1 つではなく文字列内のテキスト要素で作業できます。<xref:System.Char>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="64d6f-112">The <xref:System.Globalization.TextElementEnumerator> class allows you to work with the text elements in a string rather than with single <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="64d6f-113">インスタンス化する、<xref:System.Globalization.TextElementEnumerator>に文字列を渡すことによって、特定の文字列を表すオブジェクトを<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="64d6f-113">You instantiate a <xref:System.Globalization.TextElementEnumerator> object that represents a particular string by passing the string to the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="64d6f-114">これは、文字列の最初のテキスト要素の前に配置される列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-114">This returns an enumerator that is positioned before the first text element in the string.</span></span> <span data-ttu-id="64d6f-115">呼び出す、<xref:System.Globalization.TextElementEnumerator.Reset%2A>メソッドは、この位置に戻さ列挙子を表示することもできます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-115">Calling the <xref:System.Globalization.TextElementEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="64d6f-116">呼び出す必要があるため、これは、無効な状態を表します、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>の値を読み取る前に、文字列の最初のテキスト要素を列挙子を進める、<xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティを現在のテキスト要素を返します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-116">Because this represents an invalid state, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before reading the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property to return the current text element.</span></span>  
  
 <span data-ttu-id="64d6f-117">使用する場合、<xref:System.Globalization.TextElementEnumerator>オブジェクトの列挙子の位置を担当します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-117">When working with a <xref:System.Globalization.TextElementEnumerator> object, you are responsible for positioning the enumerator.</span></span> <span data-ttu-id="64d6f-118"><xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティは、いずれかを呼び出すまで、同じテキスト要素を返します<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>または<xref:System.Globalization.TextElementEnumerator.Reset%2A>します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-118">The <xref:System.Globalization.TextElementEnumerator.Current%2A> property returns the same text element until you call either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A>.</span></span> <span data-ttu-id="64d6f-119">列挙子は無効な状態では、文字列の最後のテキスト要素の前後にテキストの最初の要素に配置されている場合。</span><span class="sxs-lookup"><span data-stu-id="64d6f-119">The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</span></span> <span data-ttu-id="64d6f-120">列挙子が無効な状態のときは、値を取得しようとしています、<xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="64d6f-120">When the enumerator is in an invalid state, attempting to retrieve the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="64d6f-121">テストして、列挙子が無効な状態がかどうかを判断できるかどうかの戻り値、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>プロパティは`false`します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-121">You can determine whether the enumerator is in an invalid state by testing whether the return value of the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="64d6f-122"><xref:System.Globalization.TextElementEnumerator>オブジェクトは、現時点ではリテラル文字列または文字列変数の現在の状態のスナップショットを表します<xref:System.Globalization.TextElementEnumerator>オブジェクトがインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-122">The <xref:System.Globalization.TextElementEnumerator> object represents a snapshot of the current state of a string variable or string literal at the moment that the <xref:System.Globalization.TextElementEnumerator> object is instantiated.</span></span> <span data-ttu-id="64d6f-123">次の点に注意してください。</span><span class="sxs-lookup"><span data-stu-id="64d6f-123">Note that:</span></span>  
  
-   <span data-ttu-id="64d6f-124">テキスト要素の列挙子は、文字列内のデータを読み取る場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-124">Text element enumerators can only be used to read data in a string.</span></span> <span data-ttu-id="64d6f-125">基になる文字列を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="64d6f-125">They cannot modify the underlying string.</span></span>  
  
-   <span data-ttu-id="64d6f-126">列挙子には、それが表す文字列への排他アクセスがありません。</span><span class="sxs-lookup"><span data-stu-id="64d6f-126">An enumerator does not have exclusive access to the string that it represents.</span></span> <span data-ttu-id="64d6f-127">列挙子を作成した後、文字列変数を変更できます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-127">A string variable can be modified after the enumerator is created.</span></span>  
  
-   <span data-ttu-id="64d6f-128">A<xref:System.Globalization.TextElementEnumerator>オブジェクトの列挙時に、文字列内に存在するテキスト要素を<xref:System.Globalization.TextElementEnumerator>オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-128">A <xref:System.Globalization.TextElementEnumerator> object enumerates the text elements present in the string at the time that the <xref:System.Globalization.TextElementEnumerator> object was instantiated.</span></span> <span data-ttu-id="64d6f-129">その後にその変数が変更された場合、文字列変数にそれ以降の変更は反映されません。</span><span class="sxs-lookup"><span data-stu-id="64d6f-129">It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</span></span>  
  
-   <span data-ttu-id="64d6f-130"><xref:System.Globalization.TextElementEnumerator>クラスをオーバーライドしない<xref:System.Object.Equals%2A?displayProperty=nameWithType>、2 つ<xref:System.Globalization.TextElementEnumerator>同じ文字列を表すオブジェクトが等しくない検討されます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-130">Because the <xref:System.Globalization.TextElementEnumerator> class does not override <xref:System.Object.Equals%2A?displayProperty=nameWithType>, two <xref:System.Globalization.TextElementEnumerator> objects that represent the same string will be considered unequal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64d6f-131">次の例では、<xref:System.Globalization.TextElementEnumerator>文字列のテキスト要素を列挙するクラス。</span><span class="sxs-lookup"><span data-stu-id="64d6f-131">The following example uses the <xref:System.Globalization.TextElementEnumerator> class to enumerate the text elements of a string.</span></span>  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64d6f-132">文字列内の現在のテキスト要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-132">Gets the current text element in the string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64d6f-133">文字列内の現在のテキスト要素を格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-133">An object containing the current text element in the string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64d6f-134">列挙子を作成した後、または後に、<xref:System.Globalization.TextElementEnumerator.Reset%2A>が呼び出され、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>の値を読み取る前に、文字列の最初のテキスト要素に列挙子を進みを呼び出す必要がある<xref:System.Globalization.TextElementEnumerator.Current%2A>します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-134">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span> <span data-ttu-id="64d6f-135">それ以外の場合、<xref:System.Globalization.TextElementEnumerator.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="64d6f-135">Otherwise, <xref:System.Globalization.TextElementEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="64d6f-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> 最後の呼び出しの場合も例外をスローします<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返される`false`文字列の末尾を示します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`, which indicates the end of the string.</span></span>  
  
 <span data-ttu-id="64d6f-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> 連続して呼び出すと、列挙子の位置を移動しません<xref:System.Globalization.TextElementEnumerator.Current%2A>まで同じオブジェクトが返されます<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>または<xref:System.Globalization.TextElementEnumerator.Reset%2A>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Globalization.TextElementEnumerator.Current%2A> return the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64d6f-138">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-138">The enumerator is positioned before the first text element of the string or after the last text element.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64d6f-139">列挙子が現在位置しているテキスト要素のインデックスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-139">Gets the index of the text element that the enumerator is currently positioned over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64d6f-140">列挙子が現在位置しているテキスト要素のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-140">The index of the text element that the enumerator is currently positioned over.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64d6f-141">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-141">The enumerator is positioned before the first text element of the string or after the last text element.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64d6f-142">文字列内の現在のテキスト要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-142">Gets the current text element in the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64d6f-143">読み取る文字列の現在のテキスト要素を格納している新しい文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-143">A new string containing the current text element in the string being read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64d6f-144">このメソッドは、要素と同じテキスト要素を返します、<xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="64d6f-144">This method returns the same text element as the <xref:System.Globalization.TextElementEnumerator.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="64d6f-145">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-145">The enumerator is positioned before the first text element of the string or after the last text element.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64d6f-146">列挙子を文字列の次のテキスト要素に進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-146">Advances the enumerator to the next text element of the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64d6f-147">列挙子が次のテキスト要素に正常に進んだ場合は <see langword="true" />。列挙子が文字列の末尾を越えた場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-147">
              <see langword="true" /> if the enumerator was successfully advanced to the next text element; <see langword="false" /> if the enumerator has passed the end of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64d6f-148">列挙子を作成した後、または後に、<xref:System.Globalization.TextElementEnumerator.Reset%2A>が呼び出されると、列挙子は、文字列、および最初の呼び出しの最初のテキスト要素の前に配置されます<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>列挙子を文字列の最初のテキスト要素の上に移動します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-148">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, the enumerator is positioned before the first text element of the string, and the first call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> moves the enumerator over the first text element of the string.</span></span>  
  
 <span data-ttu-id="64d6f-149">この列挙子が作成された後、文字列が変更された場合<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="64d6f-149">If the string is modified after this enumerator was created, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="64d6f-150">文字列の末尾が渡された、後続の呼び出し後<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返す`false`まで<xref:System.Globalization.TextElementEnumerator.Reset%2A>が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="64d6f-150">After the end of the string is passed, subsequent calls to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> return `false` until <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64d6f-151">列挙子を初期位置、つまり文字列の最初のテキスト要素の前に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="64d6f-151">Sets the enumerator to its initial position, which is before the first text element in the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64d6f-152"><xref:System.Globalization.TextElementEnumerator.Reset%2A>メソッドは、最初のテキスト要素の前に、文字列の先頭に、列挙子を移動します。</span><span class="sxs-lookup"><span data-stu-id="64d6f-152">The <xref:System.Globalization.TextElementEnumerator.Reset%2A> method moves the enumerator to the beginning of the string, before the first text element.</span></span> <span data-ttu-id="64d6f-153">呼び出した後<xref:System.Globalization.TextElementEnumerator.Reset%2A>、呼び出す必要があります<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>列挙子を呼び出す前に文字列の最初のテキスト要素に進めておく<xref:System.Globalization.TextElementEnumerator.Current%2A>テキストの最初の要素の値を読み取れません。</span><span class="sxs-lookup"><span data-stu-id="64d6f-153">After calling <xref:System.Globalization.TextElementEnumerator.Reset%2A>, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before calling <xref:System.Globalization.TextElementEnumerator.Current%2A> to read the value of the first text element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>