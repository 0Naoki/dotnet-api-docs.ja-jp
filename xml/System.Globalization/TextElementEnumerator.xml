<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ef9e40a60509d8533f4e7e05649676f34b9d3a34" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48710314" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>文字列のテキスト要素を列挙します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework では、書記素には、単一の文字として表示されるテキストの単位として、テキスト要素を定義します。 テキスト要素には、次のいずれかを指定できます。  
  
-   基本文字を 1 つとして表される<xref:System.Char>値。 LATIN CAPITAL など (u+0041) の文字し、文字 AE 小さなラテン語 (U + 00E6) は基本文字。  
  
-   組み合わせ文字のシーケンスで、基本文字と 1 つまたは複数の組み合わせ文字で構成されます。 たとえば、例、長音を組み合わせることによって (u+0041) の後に LATIN CAPITAL LETTER (U + 0304) は組み合わせ文字のシーケンス。  
  
-   サロゲート ペアを[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)コード ユニットを 2 つのシーケンスで構成される 1 つの抽象文字のコード化文字表現として定義します。 上位サロゲート、および下位サロゲート。 サロゲート ペアは、utf-16 でエンコードされた文字として Unicode 基本多言語面以外の文字を表すために使用されます。 たとえば、ゴシック文字 SAUIL (U + 10343) は utf-16 エンコード値が 0xD800 上位サロゲートと値を持つは 0xDF43 下位サロゲートで表されます。 サロゲート ペアは、基本文字または組み合わせ文字を表すことができます。  
  
 <xref:System.Globalization.TextElementEnumerator>クラスでは、1 つではなく文字列内のテキスト要素で作業できます。<xref:System.Char>オブジェクト。  
  
 インスタンス化する、<xref:System.Globalization.TextElementEnumerator>に文字列を渡すことによって、特定の文字列を表すオブジェクトを<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType>メソッド。 これは、文字列の最初のテキスト要素の前に配置される列挙子を返します。 呼び出す、<xref:System.Globalization.TextElementEnumerator.Reset%2A>メソッドは、この位置に戻さ列挙子を表示することもできます。 呼び出す必要があるため、これは、無効な状態を表します、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>の値を読み取る前に、文字列の最初のテキスト要素を列挙子を進める、<xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティを現在のテキスト要素を返します。  
  
 使用する場合、<xref:System.Globalization.TextElementEnumerator>オブジェクトの列挙子の位置を担当します。 <xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティは、いずれかを呼び出すまで、同じテキスト要素を返します<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>または<xref:System.Globalization.TextElementEnumerator.Reset%2A>します。 列挙子は無効な状態では、文字列の最後のテキスト要素の前後にテキストの最初の要素に配置されている場合。 列挙子が無効な状態のときは、値を取得しようとしています、<xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティは例外をスローします。 テストして、列挙子が無効な状態がかどうかを判断できるかどうかの戻り値、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>プロパティは`false`します。  
  
 <xref:System.Globalization.TextElementEnumerator>オブジェクトは、現時点ではリテラル文字列または文字列変数の現在の状態のスナップショットを表します<xref:System.Globalization.TextElementEnumerator>オブジェクトがインスタンス化します。 次の点に注意してください。  
  
-   テキスト要素の列挙子は、文字列内のデータを読み取る場合にのみ使用できます。 基になる文字列を変更することはできません。  
  
-   列挙子には、それが表す文字列への排他アクセスがありません。 列挙子を作成した後、文字列変数を変更できます。  
  
-   A<xref:System.Globalization.TextElementEnumerator>オブジェクトの列挙時に、文字列内に存在するテキスト要素を<xref:System.Globalization.TextElementEnumerator>オブジェクトをインスタンス化します。 その後にその変数が変更された場合、文字列変数にそれ以降の変更は反映されません。  
  
-   <xref:System.Globalization.TextElementEnumerator>クラスをオーバーライドしない<xref:System.Object.Equals%2A?displayProperty=nameWithType>、2 つ<xref:System.Globalization.TextElementEnumerator>同じ文字列を表すオブジェクトが等しくない検討されます。  
  
   
  
## Examples  
 次の例では、<xref:System.Globalization.TextElementEnumerator>文字列のテキスト要素を列挙するクラス。  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列内の現在のテキスト要素を取得します。</summary>
        <value>文字列内の現在のテキスト要素を格納しているオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子を作成した後、または後に、<xref:System.Globalization.TextElementEnumerator.Reset%2A>が呼び出され、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>の値を読み取る前に、文字列の最初のテキスト要素に列挙子を進みを呼び出す必要がある<xref:System.Globalization.TextElementEnumerator.Current%2A>します。 それ以外の場合、<xref:System.Globalization.TextElementEnumerator.Current%2A>が定義されていません。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> 最後の呼び出しの場合も例外をスローします<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返される`false`文字列の末尾を示します。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> 連続して呼び出すと、列挙子の位置を移動しません<xref:System.Globalization.TextElementEnumerator.Current%2A>まで同じオブジェクトが返されます<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>または<xref:System.Globalization.TextElementEnumerator.Reset%2A>が呼び出されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙子が現在位置しているテキスト要素のインデックスを取得します。</summary>
        <value>列挙子が現在位置しているテキスト要素のインデックス。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>文字列内の現在のテキスト要素を取得します。</summary>
        <returns>読み取る文字列の現在のテキスト要素を格納している新しい文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、要素と同じテキスト要素を返します、<xref:System.Globalization.TextElementEnumerator.Current%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子が、文字列の最初のテキスト要素の前、または最後のテキスト要素の後に位置しています。</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を文字列の次のテキスト要素に進めます。</summary>
        <returns>列挙子が次のテキスト要素に正常に進んだ場合は <see langword="true" />。列挙子が文字列の末尾を越えた場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列挙子を作成した後、または後に、<xref:System.Globalization.TextElementEnumerator.Reset%2A>が呼び出されると、列挙子は、文字列、および最初の呼び出しの最初のテキスト要素の前に配置されます<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>列挙子を文字列の最初のテキスト要素の上に移動します。  
  
 この列挙子が作成された後、文字列が変更された場合<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>例外をスローします。  
  
 文字列の末尾が渡された、後続の呼び出し後<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返す`false`まで<xref:System.Globalization.TextElementEnumerator.Reset%2A>が呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を初期位置、つまり文字列の最初のテキスト要素の前に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.TextElementEnumerator.Reset%2A>メソッドは、最初のテキスト要素の前に、文字列の先頭に、列挙子を移動します。 呼び出した後<xref:System.Globalization.TextElementEnumerator.Reset%2A>、呼び出す必要があります<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>列挙子を呼び出す前に文字列の最初のテキスト要素に進めておく<xref:System.Globalization.TextElementEnumerator.Current%2A>テキストの最初の要素の値を読み取れません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>