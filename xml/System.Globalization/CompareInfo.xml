<Type Name="CompareInfo" FullName="System.Globalization.CompareInfo">
  <TypeSignature Language="C#" Value="public class CompareInfo : System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompareInfo extends System.Object implements class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CompareInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareInfo&#xA;Implements IDeserializationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareInfo : System::Runtime::Serialization::IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="119fe-101">カルチャごとに異なる文字列比較を行うための一連のメソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="119fe-101">Implements a set of methods for culture-sensitive string comparisons.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-102">比較して、データの並べ替えに関する規則には、カルチャが異なります。</span><span class="sxs-lookup"><span data-stu-id="119fe-102">Conventions for comparing and sorting data vary from culture to culture.</span></span> <span data-ttu-id="119fe-103">たとえば、並べ替え順序は、表音または文字のビジュアル表現に基づいて可能性があります。</span><span class="sxs-lookup"><span data-stu-id="119fe-103">For example, sort order may be based on phonetics or on the visual representation of characters.</span></span> <span data-ttu-id="119fe-104">東アジア圏の言語では、文字が表意文字の画数と部首によって並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="119fe-104">In East Asian languages, characters are sorted by the stroke and radical of ideographs.</span></span> <span data-ttu-id="119fe-105">また、並べ替えは、言語やカルチャで使用されているアルファベットの順序によっても異なります。</span><span class="sxs-lookup"><span data-stu-id="119fe-105">Sorting also depends on the order languages and cultures use for the alphabet.</span></span> <span data-ttu-id="119fe-106">たとえば、デンマーク語の文字 "Æ" は、アルファベットでは "Z" の後に位置します。</span><span class="sxs-lookup"><span data-stu-id="119fe-106">For example, the Danish language has an "Æ" character that it sorts after "Z" in the alphabet.</span></span> <span data-ttu-id="119fe-107">また、または区別しない、比較可能性があり、大文字小文字の規則はカルチャによっても異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="119fe-107">In addition, comparisons may be case-sensitive or case-insensitive, and casing rules may also differ by culture.</span></span> <span data-ttu-id="119fe-108"><xref:System.Globalization.CompareInfo>クラスはこのカルチャに依存した文字列比較データを維持するため、およびカルチャに依存した文字列の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-108">The <xref:System.Globalization.CompareInfo> class is responsible for maintaining this culture-sensitive string comparison data and for performing culture-sensitive string operations.</span></span>  
  
 <span data-ttu-id="119fe-109">通常がありませんをインスタンス化、<xref:System.Globalization.CompareInfo>はすべての非序数の文字列比較操作で暗黙的に使用されるため、直接オブジェクトへの呼び出しなど、<xref:System.String.Compare%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="119fe-109">Typically, you do not have to instantiate a <xref:System.Globalization.CompareInfo> object directly, because one is used implicitly by all non-ordinal string comparison operations, including calls to the <xref:System.String.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="119fe-110">ただし、取得する場合、<xref:System.Globalization.CompareInfo>オブジェクト、以下の方法のいずれかで行うことができます。</span><span class="sxs-lookup"><span data-stu-id="119fe-110">However, if you do want to retrieve a <xref:System.Globalization.CompareInfo> object, you can do it in one of these ways:</span></span>  
  
-   <span data-ttu-id="119fe-111">値を取得することによって、<xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType>特定のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="119fe-111">By retrieving the value of the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property for a particular culture.</span></span>  
  
-   <span data-ttu-id="119fe-112">呼び出して、静的な<xref:System.Globalization.CompareInfo.GetCompareInfo%2A>カルチャ名を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="119fe-112">By calling the static <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> method with a culture name.</span></span> <span data-ttu-id="119fe-113">これにより、遅延バインディングへのアクセス、<xref:System.Globalization.CompareInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-113">This allows for late-bound access to a <xref:System.Globalization.CompareInfo> object.</span></span>  
  
## <a name="ignored-search-values"></a><span data-ttu-id="119fe-114">検索値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-114">Ignored search values</span></span>  
 <span data-ttu-id="119fe-115">文字セットには無視できる文字が含まれています。これらの文字は、言語またはカルチャに依存した比較を実行する際には考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-115">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-116">などの比較メソッド<xref:System.Globalization.CompareInfo.IndexOf%2A>と<xref:System.Globalization.CompareInfo.LastIndexOf%2A>カルチャに依存した比較を実行するときにこのような文字は考えない。</span><span class="sxs-lookup"><span data-stu-id="119fe-116">Comparison methods such as <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> do not consider such characters when they perform a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-117">無視できる文字は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="119fe-117">Ignorable characters include:</span></span>  
  
-   <span data-ttu-id="119fe-118"><xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="119fe-118"><xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="119fe-119">カルチャに依存した比較メソッドは検索対象の文字列の先頭 (インデックス 0) に常に空の文字列を検索します。</span><span class="sxs-lookup"><span data-stu-id="119fe-119">Culture-sensitive comparison methods will always find an empty string at the beginning (index zero) of the string being searched.</span></span>  
  
-   <span data-ttu-id="119fe-120">文字または文字列がコード ポイントは、特に、比較オプションのため、操作は考慮されませんが文字のうち、<xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType>と<xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType>オプション生成検索シンボルと非スペーシング組み合わせ文字が無視されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-120">A character or string consisting of characters with code points that are not considered in the operation because of comparison options, In particular, the  <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> and <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> options produce searches in which symbols and nonspacing combining characters are ignored.</span></span>  
  
-   <span data-ttu-id="119fe-121">言語的な意味を持たないコード ポイントを持つ文字列です。</span><span class="sxs-lookup"><span data-stu-id="119fe-121">A string with code points that have no linguistic significance.</span></span> <span data-ttu-id="119fe-122">たとえば、ソフト ハイフン (U +0 00AD) はカルチャに依存した文字列比較では常に無視されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-122">For example, a soft hyphen (U+00AD) is always ignored in a culture-sensitive string comparison.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="119fe-123">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="119fe-123">Security considerations</span></span>  
 <span data-ttu-id="119fe-124">使用する必要があります、セキュリティ上の決定は、文字列の比較や大文字に依存する場合、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>プロパティをオペレーティング システムのカルチャ設定に関係なく、一貫した動作であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="119fe-124">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent, regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-125">型のパラメーターが文字列比較メソッドを使用する必要があります可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-125">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-126">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-126">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-127">例を次にどのように<xref:System.Globalization.CompareInfo>オブジェクトに関連付けられている、<xref:System.Globalization.CultureInfo>オブジェクトが文字列比較に影響します。</span><span class="sxs-lookup"><span data-stu-id="119fe-127">The following example shows how the <xref:System.Globalization.CompareInfo> object associated with a <xref:System.Globalization.CultureInfo> object affects string comparison.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119fe-128">2 つの文字列を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-128">Compares two strings.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="119fe-129">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-129">The first string to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="119fe-130">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-130">The second string to compare.</span></span></param>
        <summary><span data-ttu-id="119fe-131">2 つの文字列を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-131">Compares two strings.</span></span></summary>
        <returns><span data-ttu-id="119fe-132">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="119fe-132">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <span data-ttu-id="119fe-133"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="119fe-133"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="119fe-134"></term><description> 条件</span><span class="sxs-lookup"><span data-stu-id="119fe-134"></term><description> Condition</span></span>  
  
 <span data-ttu-id="119fe-135"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="119fe-135"></description></listheader><item><term> zero</span></span>  
  
 <span data-ttu-id="119fe-136"></term><description> 2 つの文字列が等しい。</span><span class="sxs-lookup"><span data-stu-id="119fe-136"></term><description> The two strings are equal.</span></span>  
  
 <span data-ttu-id="119fe-137"></description></item><item><term> 0 より小さい</span><span class="sxs-lookup"><span data-stu-id="119fe-137"></description></item><item><term> less than zero</span></span>  
  
 <span data-ttu-id="119fe-138"></term><description><paramref name="string1" /> が <paramref name="string2" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-138"></term><description><paramref name="string1" /> is less than <paramref name="string2" />.</span></span>  
  
 <span data-ttu-id="119fe-139"></description></item><item><term> 0 より大きい</span><span class="sxs-lookup"><span data-stu-id="119fe-139"></description></item><item><term> greater than zero</span></span>  
  
 <span data-ttu-id="119fe-140"></term><description><paramref name="string1" /> は <paramref name="string2" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="119fe-140"></term><description><paramref name="string1" /> is greater than <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-141">既定では、比較を使用して実行<xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="119fe-141">By default, the comparison is performed by using <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="119fe-142">使用する必要があります、セキュリティ上の決定は、文字列の比較や大文字に依存する場合、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>プロパティをオペレーティング システムのカルチャ設定に関係なく一貫した動作であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="119fe-142">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-143">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-143">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-144">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-144">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-145">次の例は、さまざまなを使用して 2 つの文字列の一部を比較<xref:System.Globalization.CompareInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-145">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="119fe-146"><xref:System.Globalization.CompareInfo> 国際対応の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-146"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="119fe-147"><xref:System.Globalization.CompareInfo> 従来の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-147"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="119fe-148"><xref:System.Globalization.CompareInfo> オブジェクトに関連付けられている、 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="119fe-148"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 <span data-ttu-id="119fe-149">次の例では、<xref:System.Globalization.CompareInfo.Compare%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="119fe-149">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-150">文字セットには無視できる文字が含まれています。これらの文字は、言語またはカルチャに依存した比較を実行する際には考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-150">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-151"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />カルチャに依存した比較を実行するときに、メソッドでこのような文字が考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-151">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-152">インスタンス「動物」と「ani-正しくない」(ソフト ハイフン、または U +0 00AD 使用) のカルチャに依存した比較では、2 つの文字列が次の例のように、同等であることを示します。</span><span class="sxs-lookup"><span data-stu-id="119fe-152">For instance, a culture-sensitive comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent, as the following example shows.</span></span>  
  
 [!code-vb[System.Globalization.CompareInfo.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]  
  
 <span data-ttu-id="119fe-153">文字列比較で無視できる文字を認識するように呼び出す、<see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />メソッドといずれかの値を供給<see cref="F:System.Globalization.CompareOptions.Ordinal" />または<see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />の<paramref name="options" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-153">To recognize ignorable characters in a string comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="119fe-154">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-154">The first string to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="119fe-155">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-155">The second string to compare.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-156"><c>string1</c> と <c>string2</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-156">A value that defines how <c>string1</c> and <c>string2</c> should be compared.</span></span> <span data-ttu-id="119fe-157"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または 、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />、<see cref="F:System.Globalization.CompareOptions.StringSort" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-157"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="119fe-158">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、2 つの文字列を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-158">Compares two strings using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-159">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="119fe-159">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <span data-ttu-id="119fe-160"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="119fe-160"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="119fe-161"></term><description> 条件</span><span class="sxs-lookup"><span data-stu-id="119fe-161"></term><description> Condition</span></span>  
  
 <span data-ttu-id="119fe-162"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="119fe-162"></description></listheader><item><term> zero</span></span>  
  
 <span data-ttu-id="119fe-163"></term><description> 2 つの文字列が等しい。</span><span class="sxs-lookup"><span data-stu-id="119fe-163"></term><description> The two strings are equal.</span></span>  
  
 <span data-ttu-id="119fe-164"></description></item><item><term> 0 より小さい</span><span class="sxs-lookup"><span data-stu-id="119fe-164"></description></item><item><term> less than zero</span></span>  
  
 <span data-ttu-id="119fe-165"></term><description><paramref name="string1" /> が <paramref name="string2" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-165"></term><description><paramref name="string1" /> is less than <paramref name="string2" />.</span></span>  
  
 <span data-ttu-id="119fe-166"></description></item><item><term> 0 より大きい</span><span class="sxs-lookup"><span data-stu-id="119fe-166"></description></item><item><term> greater than zero</span></span>  
  
 <span data-ttu-id="119fe-167"></term><description><paramref name="string1" /> は <paramref name="string2" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="119fe-167"></term><description><paramref name="string1" /> is greater than <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-168">使用する必要があります、セキュリティ上の決定は、文字列の比較や大文字に依存する場合、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>プロパティをオペレーティング システムのカルチャ設定に関係なく一貫した動作であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="119fe-168">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-169">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-169">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-170">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-170">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-171">次の例は、異なる 2 つの文字列を比較<xref:System.Globalization.CompareOptions>設定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-171">The following example compares two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CPP/comparestrstropt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CS/comparestrstropt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/VB/comparestrstropt.vb#1)]  
  
 <span data-ttu-id="119fe-172">次の例では、<xref:System.Globalization.CompareInfo.Compare%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="119fe-172">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-173"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-173"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-174">文字セットには無視できる文字が含まれています。これらの文字は、言語またはカルチャに依存した比較を実行する際には考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-174">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-175"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />カルチャに依存した比較を実行するときに、メソッドでこのような文字が考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-175">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-176">比較で無視できる文字を認識するには、値を指定<see cref="F:System.Globalization.CompareOptions.Ordinal" />または<see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />の<paramref name="options" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-176">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para>
        </block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="119fe-177">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-177">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="119fe-178"><c>string1</c> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-178">The zero-based index of the character in <c>string1</c> at which to start comparing.</span></span></param>
        <param name="string2"><span data-ttu-id="119fe-179">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-179">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="119fe-180"><c>string2</c> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-180">The zero-based index of the character in <c>string2</c> at which to start comparing.</span></span></param>
        <summary><span data-ttu-id="119fe-181">文字列の末尾部分と別の文字列の末尾部分とを比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-181">Compares the end section of a string with the end section of another string.</span></span></summary>
        <returns><span data-ttu-id="119fe-182">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="119fe-182">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <span data-ttu-id="119fe-183"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="119fe-183"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="119fe-184"></term><description> 条件</span><span class="sxs-lookup"><span data-stu-id="119fe-184"></term><description> Condition</span></span>  
  
 <span data-ttu-id="119fe-185"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="119fe-185"></description></listheader><item><term> zero</span></span>  
  
 <span data-ttu-id="119fe-186"></term><description> 2 つの文字列が等しい。</span><span class="sxs-lookup"><span data-stu-id="119fe-186"></term><description> The two strings are equal.</span></span>  
  
 <span data-ttu-id="119fe-187"></description></item><item><term> 0 より小さい</span><span class="sxs-lookup"><span data-stu-id="119fe-187"></description></item><item><term> less than zero</span></span>  
  
 <span data-ttu-id="119fe-188"></term><description> <paramref name="string1" /> の指定したセクションは <paramref name="string2" /> の指定したセクションより小さい。</span><span class="sxs-lookup"><span data-stu-id="119fe-188"></term><description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>  
  
 <span data-ttu-id="119fe-189"></description></item><item><term> 0 より大きい</span><span class="sxs-lookup"><span data-stu-id="119fe-189"></description></item><item><term> greater than zero</span></span>  
  
 <span data-ttu-id="119fe-190"></term><description> <paramref name="string1" /> の指定したセクションは <paramref name="string2" /> の指定したセクションより大きい。</span><span class="sxs-lookup"><span data-stu-id="119fe-190"></term><description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-191">使用する必要があります、セキュリティ上の決定は、文字列の比較や大文字に依存する場合、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>プロパティをオペレーティング システムのカルチャ設定に関係なく一貫した動作であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="119fe-191">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-192">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-192">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-193">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-193">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-194">次の例は、さまざまなを使用して 2 つの文字列の一部を比較<xref:System.Globalization.CompareInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-194">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="119fe-195"><xref:System.Globalization.CompareInfo> 国際対応の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-195"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="119fe-196"><xref:System.Globalization.CompareInfo> 従来の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-196"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="119fe-197"><xref:System.Globalization.CompareInfo> オブジェクトに関連付けられている、 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="119fe-197"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CPP/comparestrintstrint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CS/comparestrintstrint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/VB/comparestrintstrint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-198"><paramref name="offset1" /> または <paramref name="offset2" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-198"><paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-199">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-199">-or-</span></span>  
  
 <span data-ttu-id="119fe-200"><paramref name="offset1" /> が <paramref name="string1" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="119fe-200"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>  
  
 <span data-ttu-id="119fe-201">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-201">-or-</span></span>  
  
 <span data-ttu-id="119fe-202"><paramref name="offset2" /> が <paramref name="string2" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="119fe-202"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-203">文字セットには無視できる文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-203">Character sets include ignorable characters.</span></span> <span data-ttu-id="119fe-204"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" />言語またはカルチャに依存した比較を実行するときに、メソッドでこれらの文字が考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-204">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-205">比較で無視できる文字を認識するように呼び出して、<see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />メソッドの値を指定<see cref="F:System.Globalization.CompareOptions.Ordinal" />または<see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />の<paramref name="options" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-205">To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="119fe-206">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-206">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="119fe-207"><c>string1</c> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-207">The zero-based index of the character in <c>string1</c> at which to start comparing.</span></span></param>
        <param name="string2"><span data-ttu-id="119fe-208">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-208">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="119fe-209"><c>string2</c> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-209">The zero-based index of the character in <c>string2</c> at which to start comparing.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-210"><c>string1</c> と <c>string2</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-210">A value that defines how <c>string1</c> and <c>string2</c> should be compared.</span></span> <span data-ttu-id="119fe-211"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または 、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />、<see cref="F:System.Globalization.CompareOptions.StringSort" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-211"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="119fe-212">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、文字列の末尾部分と別の文字列の末尾部分とを比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-212">Compares the end section of a string with the end section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-213">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="119fe-213">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <span data-ttu-id="119fe-214"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="119fe-214"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="119fe-215"></term><description> 条件</span><span class="sxs-lookup"><span data-stu-id="119fe-215"></term><description> Condition</span></span>  
  
 <span data-ttu-id="119fe-216"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="119fe-216"></description></listheader><item><term> zero</span></span>  
  
 <span data-ttu-id="119fe-217"></term><description> 2 つの文字列が等しい。</span><span class="sxs-lookup"><span data-stu-id="119fe-217"></term><description> The two strings are equal.</span></span>  
  
 <span data-ttu-id="119fe-218"></description></item><item><term> 0 より小さい</span><span class="sxs-lookup"><span data-stu-id="119fe-218"></description></item><item><term> less than zero</span></span>  
  
 <span data-ttu-id="119fe-219"></term><description> <paramref name="string1" /> の指定したセクションは <paramref name="string2" /> の指定したセクションより小さい。</span><span class="sxs-lookup"><span data-stu-id="119fe-219"></term><description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>  
  
 <span data-ttu-id="119fe-220"></description></item><item><term> 0 より大きい</span><span class="sxs-lookup"><span data-stu-id="119fe-220"></description></item><item><term> greater than zero</span></span>  
  
 <span data-ttu-id="119fe-221"></term><description> <paramref name="string1" /> の指定したセクションは <paramref name="string2" /> の指定したセクションより大きい。</span><span class="sxs-lookup"><span data-stu-id="119fe-221"></term><description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-222">使用する必要があります、セキュリティ上の決定は、文字列の比較や大文字に依存する場合、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>プロパティをオペレーティング システムのカルチャ設定に関係なく一貫した動作であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="119fe-222">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-223">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-223">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-224">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-224">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-225">次の例は、異なる 2 つの文字列の一部を比較<xref:System.Globalization.CompareOptions>設定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-225">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CPP/comparestrintstrintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CS/comparestrintstrintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/VB/comparestrintstrintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-226"><paramref name="offset1" /> または <paramref name="offset2" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-226"><paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-227">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-227">-or-</span></span>  
  
 <span data-ttu-id="119fe-228"><paramref name="offset1" /> が <paramref name="string1" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="119fe-228"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>  
  
 <span data-ttu-id="119fe-229">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-229">-or-</span></span>  
  
 <span data-ttu-id="119fe-230"><paramref name="offset2" /> が <paramref name="string2" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="119fe-230"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-231"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-231"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-232">文字セットには無視できる文字が含まれています。これらの文字は、言語またはカルチャに依存した比較を実行する際には考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-232">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-233"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />カルチャに依存した比較を実行するときに、メソッドでこのような文字が考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-233">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method does not consider such characters when performing a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-234">比較で無視できる文字を認識するには、値を指定<see cref="F:System.Globalization.CompareOptions.Ordinal" />または<see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />の<paramref name="options" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-234">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para>
        </block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="119fe-235">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-235">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="119fe-236"><c>string1</c> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-236">The zero-based index of the character in <c>string1</c> at which to start comparing.</span></span></param>
        <param name="length1"><span data-ttu-id="119fe-237">比較対象の <c>string1</c> に含まれる連続する文字の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-237">The number of consecutive characters in <c>string1</c> to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="119fe-238">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-238">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="119fe-239"><c>string2</c> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-239">The zero-based index of the character in <c>string2</c> at which to start comparing.</span></span></param>
        <param name="length2"><span data-ttu-id="119fe-240">比較対象の <c>string2</c> に含まれる連続する文字の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-240">The number of consecutive characters in <c>string2</c> to compare.</span></span></param>
        <summary><span data-ttu-id="119fe-241">文字列のセクションと別の文字列のセクションとを比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-241">Compares a section of one string with a section of another string.</span></span></summary>
        <returns><span data-ttu-id="119fe-242">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="119fe-242">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <span data-ttu-id="119fe-243"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="119fe-243"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="119fe-244"></term><description> 条件</span><span class="sxs-lookup"><span data-stu-id="119fe-244"></term><description> Condition</span></span>  
  
 <span data-ttu-id="119fe-245"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="119fe-245"></description></listheader><item><term> zero</span></span>  
  
 <span data-ttu-id="119fe-246"></term><description> 2 つの文字列が等しい。</span><span class="sxs-lookup"><span data-stu-id="119fe-246"></term><description> The two strings are equal.</span></span>  
  
 <span data-ttu-id="119fe-247"></description></item><item><term> 0 より小さい</span><span class="sxs-lookup"><span data-stu-id="119fe-247"></description></item><item><term> less than zero</span></span>  
  
 <span data-ttu-id="119fe-248"></term><description> <paramref name="string1" /> の指定したセクションは <paramref name="string2" /> の指定したセクションより小さい。</span><span class="sxs-lookup"><span data-stu-id="119fe-248"></term><description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>  
  
 <span data-ttu-id="119fe-249"></description></item><item><term> 0 より大きい</span><span class="sxs-lookup"><span data-stu-id="119fe-249"></description></item><item><term> greater than zero</span></span>  
  
 <span data-ttu-id="119fe-250"></term><description> <paramref name="string1" /> の指定したセクションは <paramref name="string2" /> の指定したセクションより大きい。</span><span class="sxs-lookup"><span data-stu-id="119fe-250"></term><description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-251">使用する必要があります、セキュリティ上の決定は、文字列の比較や大文字に依存する場合、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>プロパティをオペレーティング システムのカルチャ設定に関係なく一貫した動作であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="119fe-251">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-252">型のパラメーターが文字列比較メソッドを使用する必要があります可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-252">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-253">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-253">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-254">次の例は、さまざまなを使用して 2 つの文字列の一部を比較<xref:System.Globalization.CompareInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-254">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="119fe-255"><xref:System.Globalization.CompareInfo> 国際対応の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-255"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="119fe-256"><xref:System.Globalization.CompareInfo> 従来の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-256"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="119fe-257"><xref:System.Globalization.CompareInfo> オブジェクトに関連付けられている、 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="119fe-257"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CPP/comparestrintintstrintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CS/comparestrintintstrintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/VB/comparestrintintstrintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-258"><paramref name="offset1" />、<paramref name="length1" />、<paramref name="offset2" />、または <paramref name="length2" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-258"><paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-259">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-259">-or-</span></span>  
  
 <span data-ttu-id="119fe-260"><paramref name="offset1" /> が <paramref name="string1" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="119fe-260"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>  
  
 <span data-ttu-id="119fe-261">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-261">-or-</span></span>  
  
 <span data-ttu-id="119fe-262"><paramref name="offset2" /> が <paramref name="string2" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="119fe-262"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span>  
  
 <span data-ttu-id="119fe-263">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-263">-or-</span></span>  
  
 <span data-ttu-id="119fe-264"><paramref name="length1" /> が、<paramref name="offset1" /> から <paramref name="string1" /> の末尾までの文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="119fe-264"><paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span></span>  
  
 <span data-ttu-id="119fe-265">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-265">-or-</span></span>  
  
 <span data-ttu-id="119fe-266"><paramref name="length2" /> が、<paramref name="offset2" /> から <paramref name="string2" /> の末尾までの文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="119fe-266"><paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-267">文字セットには無視できる文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-267">Character sets include ignorable characters.</span></span> <span data-ttu-id="119fe-268"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />言語またはカルチャに依存した比較を実行するときに、メソッドでこれらの文字が考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-268">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-269">比較で無視できる文字を認識するように呼び出して、<see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />メソッドの値を指定<see cref="F:System.Globalization.CompareOptions.Ordinal" />または<see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />の<paramref name="options" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-269">To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="119fe-270">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-270">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="119fe-271"><c>string1</c> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-271">The zero-based index of the character in <c>string1</c> at which to start comparing.</span></span></param>
        <param name="length1"><span data-ttu-id="119fe-272">比較対象の <c>string1</c> に含まれる連続する文字の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-272">The number of consecutive characters in <c>string1</c> to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="119fe-273">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-273">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="119fe-274"><c>string2</c> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-274">The zero-based index of the character in <c>string2</c> at which to start comparing.</span></span></param>
        <param name="length2"><span data-ttu-id="119fe-275">比較対象の <c>string2</c> に含まれる連続する文字の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-275">The number of consecutive characters in <c>string2</c> to compare.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-276"><c>string1</c> と <c>string2</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-276">A value that defines how <c>string1</c> and <c>string2</c> should be compared.</span></span> <span data-ttu-id="119fe-277"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または 、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />、<see cref="F:System.Globalization.CompareOptions.StringSort" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-277"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="119fe-278">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、ある文字列のセクションと別の文字列のセクションとを比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-278">Compares a section of one string with a section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-279">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="119fe-279">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
 <span data-ttu-id="119fe-280"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="119fe-280"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="119fe-281"></term><description> 条件</span><span class="sxs-lookup"><span data-stu-id="119fe-281"></term><description> Condition</span></span>  
  
 <span data-ttu-id="119fe-282"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="119fe-282"></description></listheader><item><term> zero</span></span>  
  
 <span data-ttu-id="119fe-283"></term><description> 2 つの文字列が等しい。</span><span class="sxs-lookup"><span data-stu-id="119fe-283"></term><description> The two strings are equal.</span></span>  
  
 <span data-ttu-id="119fe-284"></description></item><item><term> 0 より小さい</span><span class="sxs-lookup"><span data-stu-id="119fe-284"></description></item><item><term> less than zero</span></span>  
  
 <span data-ttu-id="119fe-285"></term><description> <paramref name="string1" /> の指定したセクションは <paramref name="string2" /> の指定したセクションより小さい。</span><span class="sxs-lookup"><span data-stu-id="119fe-285"></term><description> The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>  
  
 <span data-ttu-id="119fe-286"></description></item><item><term> 0 より大きい</span><span class="sxs-lookup"><span data-stu-id="119fe-286"></description></item><item><term> greater than zero</span></span>  
  
 <span data-ttu-id="119fe-287"></term><description> <paramref name="string1" /> の指定したセクションは <paramref name="string2" /> の指定したセクションより大きい。</span><span class="sxs-lookup"><span data-stu-id="119fe-287"></term><description> The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-288">使用する必要があります、セキュリティ上の決定は、文字列の比較や大文字に依存する場合、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>プロパティをオペレーティング システムのカルチャ設定に関係なく一貫した動作であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="119fe-288">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-289">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-289">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-290">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-290">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-291">次の例は、異なる 2 つの文字列の一部を比較<xref:System.Globalization.CompareOptions>設定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-291">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CPP/comparestrintintstrintintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CS/comparestrintintstrintintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/VB/comparestrintintstrintintopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-292"><paramref name="offset1" />、<paramref name="length1" />、<paramref name="offset2" />、または <paramref name="length2" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-292"><paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-293">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-293">-or-</span></span>  
  
 <span data-ttu-id="119fe-294"><paramref name="offset1" /> が <paramref name="string1" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="119fe-294"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>  
  
 <span data-ttu-id="119fe-295">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-295">-or-</span></span>  
  
 <span data-ttu-id="119fe-296"><paramref name="offset2" /> が <paramref name="string2" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="119fe-296"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span>  
  
 <span data-ttu-id="119fe-297">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-297">-or-</span></span>  
  
 <span data-ttu-id="119fe-298"><paramref name="length1" /> が、<paramref name="offset1" /> から <paramref name="string1" /> の末尾までの文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="119fe-298"><paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span></span>  
  
 <span data-ttu-id="119fe-299">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-299">-or-</span></span>  
  
 <span data-ttu-id="119fe-300"><paramref name="length2" /> が、<paramref name="offset2" /> から <paramref name="string2" /> の末尾までの文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="119fe-300"><paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-301"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-301"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-302">文字セットには無視できる文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-302">Character sets include ignorable characters.</span></span> <span data-ttu-id="119fe-303"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />カルチャに依存した比較を実行するときに、メソッドでこれらの文字が考慮されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-303">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method does not consider these characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-304">比較で無視できる文字を認識するには、値を指定<see cref="F:System.Globalization.CompareOptions.Ordinal" />または<see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />の<paramref name="options" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-304">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para>
        </block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="119fe-305">現在の <see cref="T:System.Globalization.CompareInfo" /> と比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-305">The object to compare with the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></param>
        <summary><span data-ttu-id="119fe-306">指定したオブジェクトが、現在の <see cref="T:System.Globalization.CompareInfo" /> オブジェクトと等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="119fe-306">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="119fe-307">指定したオブジェクトが現在の <see cref="T:System.Globalization.CompareInfo" /> オブジェクトと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="119fe-307"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-308">2 つ<xref:System.Globalization.CompareInfo>オブジェクトが等しい場合は、<xref:System.Globalization.CompareInfo.LCID%2A>と<xref:System.Globalization.CompareInfo.Name%2A>プロパティが等しい。</span><span class="sxs-lookup"><span data-stu-id="119fe-308">Two <xref:System.Globalization.CompareInfo> objects are equal if their <xref:System.Globalization.CompareInfo.LCID%2A> and <xref:System.Globalization.CompareInfo.Name%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="119fe-309">このメソッドは、<xref:System.Object.Equals%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="119fe-309">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="119fe-310">使用する必要があります、セキュリティ上の決定は、文字列の比較や大文字に依存する場合、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>プロパティをオペレーティング システムのカルチャ設定に関係なく一貫した動作であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="119fe-310">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCompareInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119fe-311">新しい <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="119fe-311">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (culture As Integer) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="119fe-312">カルチャ識別子を表す整数。</span><span class="sxs-lookup"><span data-stu-id="119fe-312">An integer representing the culture identifier.</span></span></param>
        <summary><span data-ttu-id="119fe-313">指定した識別子のカルチャに関連付けられている新しい <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="119fe-313">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified identifier.</span></span></summary>
        <returns><span data-ttu-id="119fe-314">指定した識別子のカルチャに関連付けられ、現在の <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-314">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="119fe-315">次の例は、さまざまなを使用して 2 つの文字列の一部を比較<xref:System.Globalization.CompareInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-315">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="119fe-316"><xref:System.Globalization.CompareInfo> 国際対応の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-316"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="119fe-317"><xref:System.Globalization.CompareInfo> 従来の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-317"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="119fe-318"><xref:System.Globalization.CompareInfo> オブジェクトに関連付けられている、 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="119fe-318"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (name As String) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="119fe-319">カルチャ名を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-319">A string representing the culture name.</span></span></param>
        <summary><span data-ttu-id="119fe-320">指定した名前のカルチャに関連付けられている新しい <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="119fe-320">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified name.</span></span></summary>
        <returns><span data-ttu-id="119fe-321">指定した識別子のカルチャに関連付けられ、現在の <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-321">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="119fe-322">次の例は、さまざまなを使用して 2 つの文字列の一部を比較<xref:System.Globalization.CompareInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-322">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>  
  
-   <span data-ttu-id="119fe-323"><xref:System.Globalization.CompareInfo> 国際対応の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-323"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>  
  
-   <span data-ttu-id="119fe-324"><xref:System.Globalization.CompareInfo> 従来の並べ替えのスペイン語 (スペイン) カルチャに関連付けられているオブジェクト</span><span class="sxs-lookup"><span data-stu-id="119fe-324"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>  
  
-   <span data-ttu-id="119fe-325"><xref:System.Globalization.CompareInfo> オブジェクトに関連付けられている、 <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span><span class="sxs-lookup"><span data-stu-id="119fe-325"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-326"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-326"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-327"><paramref name="name" /> が無効なカルチャ名です。</span><span class="sxs-lookup"><span data-stu-id="119fe-327"><paramref name="name" /> is an invalid culture name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture, System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="119fe-328">カルチャ識別子を表す整数。</span><span class="sxs-lookup"><span data-stu-id="119fe-328">An integer representing the culture identifier.</span></span></param>
        <param name="assembly"><span data-ttu-id="119fe-329">使用する文字列比較メソッドを含む <see cref="T:System.Reflection.Assembly" />。</span><span class="sxs-lookup"><span data-stu-id="119fe-329">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span></span></param>
        <summary><span data-ttu-id="119fe-330">指定したカルチャに関連付けられ、指定した <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="119fe-330">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="119fe-331">指定した識別子のカルチャに関連付けられ、現在の <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-331">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="119fe-332">このメソッドの動作は予測できません。</span><span class="sxs-lookup"><span data-stu-id="119fe-332">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="119fe-333">このアセンブリの入力を受け取らないメソッドのバージョンを使用するアプリケーションのことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="119fe-333">It is recommended for your application to use a version of this method that does not take an assembly input.</span></span>  
  
 <span data-ttu-id="119fe-334">`assembly`パラメーターと同じ型でなければなりません<xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="119fe-334">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-335"><paramref name="assembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-335"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-336"><paramref name="assembly" /> が無効な型です。</span><span class="sxs-lookup"><span data-stu-id="119fe-336"><paramref name="assembly" /> is of an invalid type.</span></span></exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name, System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="119fe-337">カルチャ名を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-337">A string representing the culture name.</span></span></param>
        <param name="assembly"><span data-ttu-id="119fe-338">使用する文字列比較メソッドを含む <see cref="T:System.Reflection.Assembly" />。</span><span class="sxs-lookup"><span data-stu-id="119fe-338">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span></span></param>
        <summary><span data-ttu-id="119fe-339">指定したカルチャに関連付けられ、指定した <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="119fe-339">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="119fe-340">指定した識別子のカルチャに関連付けられ、現在の <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-340">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="119fe-341">このメソッドの動作は予測できません。</span><span class="sxs-lookup"><span data-stu-id="119fe-341">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="119fe-342">このアセンブリの入力を受け取らないメソッドのバージョンを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="119fe-342">We recommend that you use a version of this method that does not take an assembly input.</span></span>  
  
 <span data-ttu-id="119fe-343">`assembly`パラメーターと同じ型でなければなりません<xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="119fe-343">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-344"><paramref name="name" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-344"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-345">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-345">-or-</span></span>  
  
 <span data-ttu-id="119fe-346"><paramref name="assembly" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-346"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-347"><paramref name="name" /> が無効なカルチャ名です。</span><span class="sxs-lookup"><span data-stu-id="119fe-347"><paramref name="name" /> is an invalid culture name.</span></span>  
  
 <span data-ttu-id="119fe-348">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-348">-or-</span></span>  
  
 <span data-ttu-id="119fe-349"><paramref name="assembly" /> が無効な型です。</span><span class="sxs-lookup"><span data-stu-id="119fe-349"><paramref name="assembly" /> is of an invalid type.</span></span></exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119fe-350">この <see cref="T:System.Globalization.CompareInfo" /> インスタンスまたは特定の文字列のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-350">Returns a hash code either for this <see cref="T:System.Globalization.CompareInfo" /> instance or for a particular string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="119fe-351">現在の <see cref="T:System.Globalization.CompareInfo" /> のハッシュ関数として機能し、ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造に使用されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-351">Serves as a hash function for the current <see cref="T:System.Globalization.CompareInfo" /> for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="119fe-352">現在の <see cref="T:System.Globalization.CompareInfo" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="119fe-352">A hash code for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-353">このメソッドは、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="119fe-353">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="119fe-354">このメソッドは、<xref:System.Globalization.CompareInfo.Equals%2A> メソッドによって等しいと評価された 2 つのオブジェクトに対して同じハッシュ コードを生成します。</span><span class="sxs-lookup"><span data-stu-id="119fe-354">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.CompareInfo.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode (source As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-355">ハッシュ コードが返される文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-355">The string whose hash code is to be returned.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-356">文字列の比較方法を決定する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-356">A value that determines how strings are compared.</span></span></param>
        <summary><span data-ttu-id="119fe-357">指定した比較オプションに基づいて文字列のハッシュ コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="119fe-357">Gets the hash code for a string based on specified comparison options.</span></span></summary>
        <returns><span data-ttu-id="119fe-358">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="119fe-358">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-359">動作<xref:System.Globalization.CompareInfo.GetHashCode%2A>はその実装は、別に、共通言語ランタイムの 1 つのバージョンから、または 1 つの .NET Framework プラットフォームからを変更する可能性がありますに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-359">The behavior of <xref:System.Globalization.CompareInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another, or from one .NET Framework platform to another.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="119fe-360">2 つの文字列オブジェクトが等しい場合は、<xref:System.Globalization.CompareInfo.GetHashCode%2A>メソッドと同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-360">If two string objects are equal, the <xref:System.Globalization.CompareInfo.GetHashCode%2A> method returns identical values.</span></span> <span data-ttu-id="119fe-361">ただし、一意の文字列値ごとに一意のハッシュ コード値はありません。</span><span class="sxs-lookup"><span data-stu-id="119fe-361">However, there is not a unique hash code value for each unique string value.</span></span> <span data-ttu-id="119fe-362">異なる文字列は、同じハッシュ コードを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="119fe-362">Different strings can return the same hash code.</span></span>  
>   
>  <span data-ttu-id="119fe-363">ハッシュ コード自体は、安定しているは保証されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-363">The hash code itself is not guaranteed to be stable.</span></span> <span data-ttu-id="119fe-364">.NET Framework のバージョンとプラットフォーム (32 ビットおよび 64 ビット) など、.NET Framework の 1 つのバージョンを全体と同じ文字列のハッシュ コードは異なることができます。</span><span class="sxs-lookup"><span data-stu-id="119fe-364">Hash codes for identical strings can differ across versions of the .NET Framework and across platforms (such as 32-bit and 64-bit) for a single version of the .NET Framework.</span></span> <span data-ttu-id="119fe-365">場合によっては、アプリケーション ドメインによっても異なることができます。</span><span class="sxs-lookup"><span data-stu-id="119fe-365">In some cases, they can even differ by application domain.</span></span>  
>   
>  <span data-ttu-id="119fe-366">その結果、ハッシュが作成された、アプリケーション ドメインの外部のコードを使用しないで、コレクション内のキー フィールドとして使用する必要がありますしないと、永続化することはありません。</span><span class="sxs-lookup"><span data-stu-id="119fe-366">As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-367"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-367"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSortKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119fe-368">文字列の <see cref="T:System.Globalization.SortKey" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="119fe-368">Gets a <see cref="T:System.Globalization.SortKey" /> object for a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-369"><see cref="T:System.Globalization.SortKey" /> オブジェクトを取得する対象となる文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-369">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span></span></param>
        <summary><span data-ttu-id="119fe-370">指定した文字列の並べ替えキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="119fe-370">Gets the sort key for the specified string.</span></span></summary>
        <returns><span data-ttu-id="119fe-371">指定した文字列の並べ替えキーを含む <see cref="T:System.Globalization.SortKey" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-371">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-372">文字列内の各文字には、いくつかのカテゴリの並べ替えウェイト、スクリプト、アルファベット順、大文字、および発音の区別の重みが与えられます。</span><span class="sxs-lookup"><span data-stu-id="119fe-372">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="119fe-373">並べ替えキーは、特定の文字列をこれらの規則のリポジトリです。</span><span class="sxs-lookup"><span data-stu-id="119fe-373">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="119fe-374">たとえば、並べ替えキーにはアルファベット順ウェイトの文字列、大文字小文字のウェイトの文字列などが特定の順序で格納されています。</span><span class="sxs-lookup"><span data-stu-id="119fe-374">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="119fe-375"><xref:System.Globalization.CompareInfo.GetSortKey%2A>メソッドは、Windows API メソッドに相当`LCMapString`LCMAP_SORTKEY フラグを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-375">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortKey" />
      </Docs>
    </Member>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String, options As CompareOptions) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-376"><see cref="T:System.Globalization.SortKey" /> オブジェクトを取得する対象となる文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-376">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-377">並べ替えキーの計算方法を定義する、次の列挙値の 1 つ以上のビットごとの組み合わせ: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />、<see cref="F:System.Globalization.CompareOptions.StringSort" />。</span><span class="sxs-lookup"><span data-stu-id="119fe-377">A bitwise combination of one or more of the following enumeration values that define how the sort key is calculated: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="119fe-378">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字列の <see cref="T:System.Globalization.SortKey" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="119fe-378">Gets a <see cref="T:System.Globalization.SortKey" /> object for the specified string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-379">指定した文字列の並べ替えキーを含む <see cref="T:System.Globalization.SortKey" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-379">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-380">文字列内の各文字には、いくつかのカテゴリの並べ替えウェイト、スクリプト、アルファベット順、大文字、および発音の区別の重みが与えられます。</span><span class="sxs-lookup"><span data-stu-id="119fe-380">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="119fe-381">並べ替えキーは、特定の文字列をこれらの規則のリポジトリです。</span><span class="sxs-lookup"><span data-stu-id="119fe-381">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="119fe-382">たとえば、並べ替えキーにはアルファベット順ウェイトの文字列、大文字小文字のウェイトの文字列などが特定の順序で格納されています。</span><span class="sxs-lookup"><span data-stu-id="119fe-382">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="119fe-383"><xref:System.Globalization.CompareInfo.GetSortKey%2A>メソッドは、Windows API メソッドに相当`LCMapString`LCMAP_SORTKEY フラグを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-383">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-384"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-384"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="T:System.Globalization.SortKey" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119fe-385">文字列または部分文字列内にある値のうち、最初に出現する値の、0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-385">Returns the zero-based index of the first occurrence of a value within a string or within a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-386">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-386">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-387"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-387">The character to locate within <c>source</c>.</span></span></param>
        <summary><span data-ttu-id="119fe-388">指定した文字を検索し、検索対象文字列全体内で最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-388">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="119fe-389"><paramref name="source" /> 内で <paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-389">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-390"><paramref name="value" /> が無視できる文字の場合は 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-390">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-391">このメソッドは、文字列の末尾に文字列の先頭から、ソース文字列を検索します。</span><span class="sxs-lookup"><span data-stu-id="119fe-391">This method searches the source string from the beginning of the string to the end of the string.</span></span>  
  
 <span data-ttu-id="119fe-392">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-392">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-393">場合`value`Unicode 文字で合字の「Æ」など (U + 00 C 6)、これと見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じを表します (u+0041、u+0045) に、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-393">If `value` represents a precomposed Unicode character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-394">序数に基づく (カルチャに依存しない) 検索を実行する型のパラメーターを持ち、文字専用と見なされます別の文字と等価の Unicode コード ポイントが同じ場合は、する必要があります、オーバー ロードを呼び出すこと<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-394">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode code points are the same, you should call an overload that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="119fe-395">異なり<xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>のオーバー ロードにより、カルチャに依存した比較を実行する、<xref:System.String.IndexOf%2A?displayProperty=nameWithType>を検索する文字は、序数に基づく比較を実行し、文字列を検索するオーバー ロードは、カルチャに依存した比較を実行するメソッド。</span><span class="sxs-lookup"><span data-stu-id="119fe-395">Unlike <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, which performs a culture-sensitive comparison, overloads of the <xref:System.String.IndexOf%2A?displayProperty=nameWithType> method that search for a character perform an ordinal comparison and overloads that search for a string perform a culture-sensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-396">型のパラメーターが文字列比較メソッドを使用する必要があります可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-396">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-397">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-397">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-398">次の例では、最初と最後に出現する文字または文字列内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-398">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-399"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-399"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-400">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-400">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-401">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-401">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-402">ここで、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />メソッドは 0 (ゼロ) の先頭に一致が見つかったことを示すために常に返します<paramref name="source" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-402">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="119fe-403">次の例で、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />メソッドはソフト ハイフン (U +0 00AD) を 2 つの文字列で検索に使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-403">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="119fe-404">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-404">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-405">どちらの場合はソフト ハイフンに無視できる文字であるため、メソッドを返します 0 (ゼロ) の一致を発見したを示すために、文字列の先頭にします。</span><span class="sxs-lookup"><span data-stu-id="119fe-405">In both cases, because the soft hyphen is an ignorable character, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</para>
        </block>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-406">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-406">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-407"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-407">The string to locate within <c>source</c>.</span></span></param>
        <summary><span data-ttu-id="119fe-408">指定した部分文字列を検索し、検索対象文字列全体内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-408">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="119fe-409"><paramref name="source" /> 内で <paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-409">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-410"><paramref name="value" /> が無視できる文字の場合は 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-410">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-411">ソース文字列は、転送、文字列の先頭から開始し、文字列の末尾で終了が検索されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-411">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="119fe-412">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-412">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-413">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-413">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-414">Unicode 値が比較されます、序数に基づく (カルチャに依存しない) 検索を実行する、型のパラメーターを持つオーバー ロードのいずれかを使用する必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-414">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should use one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-415">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-415">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-416">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-416">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-417">次の例では、最初と最後に出現する文字または文字列内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-417">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-418"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-418"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-419">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-419">-or-</span></span>  
  
 <span data-ttu-id="119fe-420"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-420"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-421">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-421">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-422">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-422">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-423">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />メソッドは 0 (ゼロ) の先頭に一致が見つかったことを示すために常に返します<paramref name="source" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-423">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="119fe-424">次の例で、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />を 2 つの文字列 (ソフト ハイフン (U +0 00AD)、"n"で後にソフト ハイフンおよびにソフト ハイフンの後に"m") の 3 つの部分文字列を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-424">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="119fe-425">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-425">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-426">各ケースではソフト ハイフンに無視できる文字であるため、結果は、場合と同じにソフト ハイフンが含まれていない必要がある<paramref name="value" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-426">In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />.</span></span> <span data-ttu-id="119fe-427">ソフト ハイフンのみを検索するときに、このメソッドは、文字列の先頭に一致するものを発見したを示すために 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-427">When searching for a soft hyphen only, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-428">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-428">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-429"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-429">The character to locate within <c>source</c>.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-430">文字列の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-430">A value that defines how the strings should be compared.</span></span> <span data-ttu-id="119fe-431"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-431"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-432">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列全体内でその文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-432">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-433">指定した比較オプションを使用して、<paramref name="source" /> 内で <paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-433">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-434"><paramref name="value" /> が無視できる文字の場合は 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-434">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-435">ソース文字列は、転送、文字列の先頭から開始し、文字列の末尾で終了が検索されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-435">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="119fe-436"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-436">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-437">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-437">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-438">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-438">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-439">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、序数に基づく (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-439">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="119fe-440">文字は Unicode 値が同じ場合にのみ、他の文字を同等と見なされます。</span><span class="sxs-lookup"><span data-stu-id="119fe-440">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="119fe-441">オーバー ロードが<xref:System.String.IndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-441">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-442">型のパラメーターが文字列比較メソッドを使用する必要があります可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-442">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-443">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-443">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-444">次の例では、最初と最後に出現する文字または文字列内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-444">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-445"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-445"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-446"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-446"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-447">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-447">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-448">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-448">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-449">ここで、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />メソッドは 0 (ゼロ) の先頭に一致が見つかったことを示すために常に返します<paramref name="source" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-449">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="119fe-450">次の例で、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />にソフト ハイフン (U +0 00AD) 2 つの文字列を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-450">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="119fe-451">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-451">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-452">どちらの場合はソフト ハイフンに無視できる文字であるため、カルチャに依存した検索を返します 0 (ゼロ) の一致を発見したを示すために文字列の先頭にします。</span><span class="sxs-lookup"><span data-stu-id="119fe-452">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span> <span data-ttu-id="119fe-453">ただし、序数に基づく検索を正常に 1 つの文字列ではソフト ハイフンを検索してが存在しないことをレポート 2 番目の文字列から。</span><span class="sxs-lookup"><span data-stu-id="119fe-453">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-454">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-454">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-455"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-455">The character to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-456">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-456">The zero-based starting index of the search.</span></span></param>
        <summary><span data-ttu-id="119fe-457">指定した文字を検索し、検索対象文字列の指定したインデックスから文字列の末尾までの範囲内で、その文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-457">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span></span></summary>
        <returns><span data-ttu-id="119fe-458"><paramref name="startIndex" /> から <paramref name="source" /> の末尾までの <paramref name="source" /> のセクション内で、<paramref name="value" /> が見つかった場合は、最初に出現する位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-458">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-459"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-459">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-460">転送を開始位置として、ソース文字列が検索`startIndex`と文字列の末尾で終了します。</span><span class="sxs-lookup"><span data-stu-id="119fe-460">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="119fe-461">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-461">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-462">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-462">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-463">序数に基づく (カルチャに依存しない) 検索を実行する、場所、文字と見なされます別一文字に相当する Unicode 値が同じ場合にのみ、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-463">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="119fe-464">オーバー ロードが<xref:System.String.IndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-464">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-465">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-465">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-466">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-466">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-467">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-467">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="119fe-468">なお<xref:System.Globalization.CompareInfo.IndexOf%2A>と<xref:System.Globalization.CompareInfo.LastIndexOf%2A>で同じでも、文字列の異なる部分検索を実行`startIndex`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-468">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-469"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-469"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-470"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-470"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-471">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-471">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-472">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-472">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-473">この場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-473">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="119fe-474">次の例で、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />を 2 つの文字列で"n"の後にソフト ハイフン (U +0 00AD) を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-474">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="119fe-475">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-475">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-476">どちらの場合はソフト ハイフンに無視できる文字であるために、メソッドは、"n"の位置にある一致を発見したを示すために 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-476">In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-477">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-477">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-478"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-478">The string to locate within <c>source</c>.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-479"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-479">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-480"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-480"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-481">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列全体内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-481">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-482">指定した比較オプションを使用して、<paramref name="source" /> 内で <paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-482">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-483"><paramref name="value" /> が無視できる文字の場合は 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-483">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-484">ソース文字列は、転送、文字列の先頭から開始し、文字列の末尾で終了が検索されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-484">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="119fe-485"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-485">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-486">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-486">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-487">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-487">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-488">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロード、序数に基づく (カルチャに依存しない) 検索を実行、Unicode 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-488">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-489">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-489">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-490">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-490">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-491">次の例では、最初と最後に出現する文字または文字列内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-491">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-492"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-492"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-493">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-493">-or-</span></span>  
  
 <span data-ttu-id="119fe-494"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-494"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-495"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-495"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-496">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-496">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-497">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-497">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-498">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />メソッドは 0 (ゼロ) の先頭に一致が見つかったことを示すために常に返します<paramref name="source" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-498">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="119fe-499">次の例で、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />を 2 つの文字列 (ソフト ハイフン (U +0 00AD)、"n"で後にソフト ハイフンおよびにソフト ハイフンの後に"m") の 3 つの部分文字列を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-499">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="119fe-500">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-500">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-501">ソフト ハイフンは無視できる文字であるため、カルチャに依存した検索は、検索文字列にソフト ハイフンが含まれていないかどうかには返されますものと同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-501">Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="119fe-502">ただし、序数に基づく検索を正常に 1 つの文字列ではソフト ハイフンを検索してが存在しないことをレポート 2 番目の文字列から。</span><span class="sxs-lookup"><span data-stu-id="119fe-502">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-503">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-503">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-504"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-504">The string to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-505">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-505">The zero-based starting index of the search.</span></span></param>
        <summary><span data-ttu-id="119fe-506">指定した部分文字列を検索し、検索対象文字列の指定したインデックスから文字列の末尾までの範囲内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-506">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span></span></summary>
        <returns><span data-ttu-id="119fe-507"><paramref name="startIndex" /> から <paramref name="source" /> の末尾までの <paramref name="source" /> のセクション内で、<paramref name="value" /> が見つかった場合は、最初に出現する位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-507">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-508"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-508">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-509">転送を開始位置として、ソース文字列が検索`startIndex`と文字列の末尾で終了します。</span><span class="sxs-lookup"><span data-stu-id="119fe-509">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="119fe-510">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-510">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-511">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-511">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-512">Unicode 値が比較されます、序数に基づく (カルチャに依存しない) 検索を実行する、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-512">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-513">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-513">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-514">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-514">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-515">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-515">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="119fe-516">なお<xref:System.Globalization.CompareInfo.IndexOf%2A>と<xref:System.Globalization.CompareInfo.LastIndexOf%2A>で同じでも、文字列の異なる部分検索を実行`startIndex`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-516">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-517"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-517"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-518">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-518">-or-</span></span>  
  
 <span data-ttu-id="119fe-519"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-519"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-520"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-520"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-521">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-521">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-522">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-522">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-523">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-523">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
 <span data-ttu-id="119fe-524">次の例で、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />で 2 つの文字列に"m"の後にソフト ハイフン (U +0 00AD) の位置を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-524">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in two strings.</span></span> <span data-ttu-id="119fe-525">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-525">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="119fe-526">どちらの場合はソフト ハイフンに無視できる文字であるために、メソッドは、文字列に"m"のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-526">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string.</span></span> <span data-ttu-id="119fe-527">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="119fe-527">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-528">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-528">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-529"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-529">The character to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-530">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-530">The zero-based starting index of the search.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-531"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-531">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-532"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または 、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-532"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-533">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列の指定したインデックスから文字列の末尾までのセクション内で、その文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-533">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-534">指定した比較オプションを使用して、<paramref name="startIndex" /> から <paramref name="source" /> の末尾までの <paramref name="source" /> のセクション内で、<paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-534">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-535"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-535">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-536">転送を開始位置として、ソース文字列が検索`startIndex`と文字列の末尾で終了します。</span><span class="sxs-lookup"><span data-stu-id="119fe-536">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="119fe-537"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-537">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-538">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-538">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-539">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-539">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-540">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、序数に基づく (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-540">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="119fe-541">文字は Unicode 値が同じ場合にのみ、他の文字を同等と見なされます。</span><span class="sxs-lookup"><span data-stu-id="119fe-541">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="119fe-542">オーバー ロードが<xref:System.String.IndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-542">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-543">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-543">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-544">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-544">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-545">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-545">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="119fe-546">なお<xref:System.Globalization.CompareInfo.IndexOf%2A>と<xref:System.Globalization.CompareInfo.LastIndexOf%2A>で同じでも、文字列の異なる部分検索を実行`startIndex`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-546">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-547"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-547"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-548"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-548"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-549"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-549"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-550">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-550">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-551">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-551">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-552">ここで、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />メソッドは常に返します<paramref name="startIndex" />検索の最初の開始位置の文字の位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-552">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, the character position at which the search first began.</span></span> <span data-ttu-id="119fe-553">次の例で、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />を 2 つの文字列で"n"の後にソフト ハイフン (U +0 00AD) を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-553">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="119fe-554">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-554">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-555">どちらの場合はソフト ハイフンに無視できる文字であるために、カルチャに依存した検索は、"n"の位置にある一致を発見したを示すために 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-555">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n".</span></span> <span data-ttu-id="119fe-556">ただし、序数に基づく検索を正常に 1 つの文字列ではソフト ハイフンを検索してが存在しないことをレポート 2 番目の文字列から。</span><span class="sxs-lookup"><span data-stu-id="119fe-556">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-557">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-557">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-558"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-558">The character to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-559">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-559">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="119fe-560">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-560">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="119fe-561">指定した文字を検索し、検索対象文字列の指定したインデックスから始まり、指定した数の要素を含んでいる範囲内で、その文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-561">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="119fe-562"><paramref name="startIndex" /> から始まり、<paramref name="count" /> で指定した数の要素を含んでいる <paramref name="source" /> の範囲内で、<paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-562">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-563"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-563">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-564">転送を開始位置として、ソース文字列が検索`startIndex`で終わる`startIndex`  +  `count` - 1。</span><span class="sxs-lookup"><span data-stu-id="119fe-564">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="119fe-565">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-565">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-566">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-566">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-567">序数に基づく (カルチャに依存しない) 検索を実行する、場所、文字と見なされます別一文字に相当する Unicode 値が同じ場合にのみ、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-567">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="119fe-568">オーバー ロードが<xref:System.String.IndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-568">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-569">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-569">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-570">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-570">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-571">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-571">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-572"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-572"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-573"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-573"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
 <span data-ttu-id="119fe-574">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-574">-or-</span></span>  
  
 <span data-ttu-id="119fe-575"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-575"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-576">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-576">-or-</span></span>  
  
 <span data-ttu-id="119fe-577"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="119fe-577"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-578">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-578">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-579">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-579">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-580">ここでは、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始最初の文字の位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-580">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began.</span></span> <span data-ttu-id="119fe-581">次の例で、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />を 2 つの文字列で"n"の後にソフト ハイフン (U +0 00AD) を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-581">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="119fe-582">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-582">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-583">どちらの場合はソフト ハイフンに無視できる文字であるために、メソッドは、"n"の位置にある一致を発見したを示すために 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-583">In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-584">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-584">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-585"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-585">The string to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-586">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-586">The zero-based starting index of the search.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-587"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-587">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-588"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-588"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-589">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列の指定したインデックスから文字列の末尾までの範囲内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-589">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-590">指定した比較オプションを使用して、<paramref name="startIndex" /> から <paramref name="source" /> の末尾までの <paramref name="source" /> のセクション内で、<paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-590">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-591"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-591">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-592">転送を開始位置として、ソース文字列が検索`startIndex`と文字列の末尾で終了します。</span><span class="sxs-lookup"><span data-stu-id="119fe-592">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>  
  
 <span data-ttu-id="119fe-593"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-593">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-594">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-594">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-595">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-595">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-596">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロード、序数に基づく (カルチャに依存しない) 検索を実行、Unicode 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-596">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-597">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-597">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-598">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-598">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-599">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-599">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="119fe-600">なお<xref:System.Globalization.CompareInfo.IndexOf%2A>と<xref:System.Globalization.CompareInfo.LastIndexOf%2A>で同じでも、文字列の異なる部分検索を実行`startIndex`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-600">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-601"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-601"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-602">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-602">-or-</span></span>  
  
 <span data-ttu-id="119fe-603"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-603"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-604"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-604"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-605"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-605"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-606">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-606">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-607">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-607">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-608">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-608">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
 <span data-ttu-id="119fe-609">次の例で、 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> "m"2 つの文字列の 3 番目の文字位置から開始後にソフト ハイフン (U +0 00AD) の位置を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-609">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting with the third character position in two strings.</span></span> <span data-ttu-id="119fe-610">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-610">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="119fe-611">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-611">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-612">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="119fe-612">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="119fe-613">このメソッドは、序数に基づく比較を実行したときのみ、最初の文字列に含まれるソフト ハイフンのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-613">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-614">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-614">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-615"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-615">The string to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-616">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-616">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="119fe-617">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-617">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="119fe-618">指定した部分文字列を検索し、検索対象文字列の指定したインデックスから始まり、指定した数の要素を含んでいる範囲内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-618">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="119fe-619"><paramref name="startIndex" /> から始まり、<paramref name="count" /> で指定した数の要素を含んでいる <paramref name="source" /> の範囲内で、<paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-619">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-620"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-620">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-621">転送を開始位置として、ソース文字列が検索`startIndex`で終わる`startIndex`  +  `count` - 1。</span><span class="sxs-lookup"><span data-stu-id="119fe-621">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="119fe-622">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-622">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-623">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-623">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-624">Unicode 値が比較されます、序数に基づく (カルチャに依存しない) 検索を実行する、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-624">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-625">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-625">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-626">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-626">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-627">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-627">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-628"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-628"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-629">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-629">-or-</span></span>  
  
 <span data-ttu-id="119fe-630"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-630"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-631"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-631"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
 <span data-ttu-id="119fe-632">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-632">-or-</span></span>  
  
 <span data-ttu-id="119fe-633"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-633"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-634">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-634">-or-</span></span>  
  
 <span data-ttu-id="119fe-635"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="119fe-635"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-636">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-636">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-637">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-637">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-638">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-638">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
 <span data-ttu-id="119fe-639">次の例で、 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> "m"の 3 番目の 2 つの文字列の 6 番目の文字位置からの起動後にソフト ハイフン (U +0 00AD) の位置を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-639">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="119fe-640">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-640">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="119fe-641">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-641">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-642">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="119fe-642">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-643">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-643">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-644"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-644">The character to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-645">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-645">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="119fe-646">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-646">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-647"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-647">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-648"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-648"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-649">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列の指定したインデックスから始まり、指定した数の要素を含んでいる範囲内で、その文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-649">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-650">指定した比較オプションを使用して、<paramref name="startIndex" /> から始まり、<paramref name="count" /> で指定した数の要素を含んでいる <paramref name="source" /> の範囲内で、<paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-650">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-651"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-651">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-652">転送を開始位置として、ソース文字列が検索`startIndex`で終わる`startIndex`  +  `count` - 1。</span><span class="sxs-lookup"><span data-stu-id="119fe-652">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="119fe-653"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-653">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-654">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-654">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-655">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-655">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-656">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、序数に基づく (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-656">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="119fe-657">文字は Unicode 値が同じ場合にのみ、他の文字を同等と見なされます。</span><span class="sxs-lookup"><span data-stu-id="119fe-657">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="119fe-658">オーバー ロードが<xref:System.String.IndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-658">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-659">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-659">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-660">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-660">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-661">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-661">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-662"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-662"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-663"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-663"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
 <span data-ttu-id="119fe-664">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-664">-or-</span></span>  
  
 <span data-ttu-id="119fe-665"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-665"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-666">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-666">-or-</span></span>  
  
 <span data-ttu-id="119fe-667"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="119fe-667"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-668"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-668"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-669">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-669">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-670">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-670">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-671">ここでは、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始最初の文字の位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-671">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began.</span></span> <span data-ttu-id="119fe-672">次の例で、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />を 2 つの文字列で"n"の後にソフト ハイフン (U +0 00AD) を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-672">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="119fe-673">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-673">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-674">どちらの場合はソフト ハイフンに無視できる文字であるために、カルチャに依存した検索は、"n"の位置にある一致を発見したを示すために 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-674">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n".</span></span> <span data-ttu-id="119fe-675">ただし、序数に基づく検索を正常に 1 つの文字列ではソフト ハイフンを検索してが存在しないことをレポート 2 番目の文字列から。</span><span class="sxs-lookup"><span data-stu-id="119fe-675">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-676">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-676">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-677"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-677">The string to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-678">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-678">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="119fe-679">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-679">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-680"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-680">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-681"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-681"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-682">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列の指定したインデックスから始まり、指定した数の要素を含んでいる範囲内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-682">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-683">指定した比較オプションを使用して、<paramref name="startIndex" /> から始まり、<paramref name="count" /> で指定した数の要素を含んでいる <paramref name="source" /> の範囲内で、<paramref name="value" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-683">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-684"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-684">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-685">転送を開始位置として、ソース文字列が検索`startIndex`で終わる`startIndex`  +  `count` - 1。</span><span class="sxs-lookup"><span data-stu-id="119fe-685">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>  
  
 <span data-ttu-id="119fe-686"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-686">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-687">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-687">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-688">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-688">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-689">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロード、序数に基づく (カルチャに依存しない) 検索を実行、Unicode 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-689">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-690">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-690">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-691">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-691">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-692">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-692">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-693"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-693"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-694">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-694">-or-</span></span>  
  
 <span data-ttu-id="119fe-695"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-695"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-696"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-696"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
 <span data-ttu-id="119fe-697">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-697">-or-</span></span>  
  
 <span data-ttu-id="119fe-698"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-698"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-699">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-699">-or-</span></span>  
  
 <span data-ttu-id="119fe-700"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="119fe-700"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-701"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-701"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-702">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-702">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-703">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-703">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-704">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-704">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
 <span data-ttu-id="119fe-705">次の例で、 <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> "m"の 3 番目の 2 つの文字列の 6 番目の文字位置からの起動後にソフト ハイフン (U +0 00AD) の位置を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-705">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="119fe-706">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-706">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="119fe-707">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-707">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-708">序数に基づく比較を実行するときにただし、その部分文字列のみで検索最初の文字列します。</span><span class="sxs-lookup"><span data-stu-id="119fe-708">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="119fe-709">で、"m"の後にソフト ハイフンが含まれている最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すが失敗したが、代わりに、カルチャに依存した比較を実行するときに"m"のインデックスを返しますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="119fe-709">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-710">このメソッドは、序数に基づく比較を実行したときのみ、最初の文字列に含まれるソフト ハイフンのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-710">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPrefix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119fe-711">文字列が特定のプレフィックスで始まるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="119fe-711">Determines whether a string starts with a specific prefix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-712">検索範囲とする文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-712">The string to search in.</span></span></param>
        <param name="prefix"><span data-ttu-id="119fe-713"><c>source</c> の先頭と比較する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-713">The string to compare with the beginning of <c>source</c>.</span></span></param>
        <summary><span data-ttu-id="119fe-714">指定した検索対象文字列が指定したプリフィックスで始まるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="119fe-714">Determines whether the specified source string starts with the specified prefix.</span></span></summary>
        <returns>
          <span data-ttu-id="119fe-715"><paramref name="prefix" /> の長さが <paramref name="source" /> の長さ以下で、<paramref name="source" /> が <paramref name="prefix" /> で始まる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="119fe-715"><see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-716">空の部分文字列で終わりますしたすべての文字列 ("") です。したがって場合、 `prefix` 、空の文字列は、このメソッドが返される`true`です。</span><span class="sxs-lookup"><span data-stu-id="119fe-716">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-717">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-717">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-718">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-718">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-719">次の例は、文字列が、プレフィックスまたはサフィックスを別の文字列であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="119fe-719">The following example determines whether a string is the prefix or suffix of another string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-720"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-720"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-721">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-721">-or-</span></span>  
  
 <span data-ttu-id="119fe-722"><paramref name="prefix" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-722"><paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-723">検索範囲とする文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-723">The string to search in.</span></span></param>
        <param name="prefix"><span data-ttu-id="119fe-724"><c>source</c> の先頭と比較する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-724">The string to compare with the beginning of <c>source</c>.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-725"><c>source</c> と <c>prefix</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-725">A value that defines how <c>source</c> and <c>prefix</c> should be compared.</span></span> <span data-ttu-id="119fe-726"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-726"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-727">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した検索対象文字列が指定したプレフィックスで始まるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="119fe-727">Determines whether the specified source string starts with the specified prefix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="119fe-728"><paramref name="prefix" /> の長さが <paramref name="source" /> の長さ以下で、<paramref name="source" /> が <paramref name="prefix" /> で始まる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="119fe-728"><see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-729">空の部分文字列で終わりますしたすべての文字列 ("") です。したがって場合、 `prefix` 、空の文字列は、このメソッドが返される`true`です。</span><span class="sxs-lookup"><span data-stu-id="119fe-729">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>  
  
 <span data-ttu-id="119fe-730"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-730">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-731">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-731">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-732">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-732">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-733">次の例では、文字列が、プレフィックスまたはサフィックスを別の文字列を使用するかどうかを判断<xref:System.Globalization.CompareOptions>です。</span><span class="sxs-lookup"><span data-stu-id="119fe-733">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-734"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-734"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-735">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-735">-or-</span></span>  
  
 <span data-ttu-id="119fe-736"><paramref name="prefix" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-736"><paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-737"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-737"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSortable">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119fe-738">指定した Unicode 文字または文字列の並べ替えが可能かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="119fe-738">Indicates whether a specified Unicode character or string is sortable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="119fe-739">Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-739">A Unicode character.</span></span></param>
        <summary><span data-ttu-id="119fe-740">指定した Unicode 文字の並べ替えが可能かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="119fe-740">Indicates whether a specified Unicode character is sortable.</span></span></summary>
        <returns>
          <span data-ttu-id="119fe-741"><paramref name="ch" /> パラメーターが並べ替え可能な場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="119fe-741"><see langword="true" /> if the <paramref name="ch" /> parameter is sortable; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-742">`ch`パラメーターの内部で定義されている Unicode 文字である場合は、並べ替えが<xref:System.Globalization.CompareInfo>クラスの並べ替えテーブル、およびプライベートの使用または対になっていない高いまたは低いサロゲート文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="119fe-742">The `ch` parameter is sortable if it is a Unicode character that is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="119fe-743">0 個以上の Unicode 文字から構成される文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-743">A string of zero or more Unicode characters.</span></span></param>
        <summary><span data-ttu-id="119fe-744">指定した Unicode 文字列の並べ替えが可能かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="119fe-744">Indicates whether a specified Unicode string is sortable.</span></span></summary>
        <returns>
          <span data-ttu-id="119fe-745"><paramref name="str" /> パラメーターが空の文字列 ("") ではなく、<paramref name="str" /> 内のすべての Unicode 文字が並べ替え可能である場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="119fe-745"><see langword="true" /> if the <paramref name="str" /> parameter is not an empty string ("") and all the Unicode characters in <paramref name="str" /> are sortable; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-746">内の各 Unicode 文字、`str`パラメーターは 1 つまたは複数の utf-16 でエンコードされた<xref:System.Char>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-746">Each Unicode character in the `str` parameter is represented by one or more UTF-16 encoded <xref:System.Char> objects.</span></span> <span data-ttu-id="119fe-747">`str`パラメーターのそれぞれの Unicode 文字が内部で定義されている場合は、並べ替えが<xref:System.Globalization.CompareInfo>クラスの並べ替えテーブル、およびプライベートの使用または対になっていない高いまたは低いサロゲート文字ではありません。</span><span class="sxs-lookup"><span data-stu-id="119fe-747">The `str` parameter is sortable if each Unicode character is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-748"><paramref name="str" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-748"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSuffix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119fe-749">文字列が特定のサフィックスで終わるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="119fe-749">Determines whether a string ends with a specific suffix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-750">検索範囲とする文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-750">The string to search in.</span></span></param>
        <param name="suffix"><span data-ttu-id="119fe-751"><c>source</c> の末尾と比較する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-751">The string to compare with the end of <c>source</c>.</span></span></param>
        <summary><span data-ttu-id="119fe-752">指定した検索対象文字列が指定したサフィックスで終わるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="119fe-752">Determines whether the specified source string ends with the specified suffix.</span></span></summary>
        <returns>
          <span data-ttu-id="119fe-753"><paramref name="suffix" /> の長さが <paramref name="source" /> の長さ以下であり、<paramref name="source" /> が <paramref name="suffix" /> で終わる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="119fe-753"><see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-754">空の部分文字列で終わりますしたすべての文字列 ("") です。したがって場合、 `suffix` 、空の文字列は、このメソッドが返される`true`です。</span><span class="sxs-lookup"><span data-stu-id="119fe-754">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-755">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-755">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-756">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-756">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-757">次の例は、文字列が、プレフィックスまたはサフィックスを別の文字列であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="119fe-757">The following example determines whether a string is the prefix or suffix of another string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-758"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-758"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-759">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-759">-or-</span></span>  
  
 <span data-ttu-id="119fe-760"><paramref name="suffix" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-760"><paramref name="suffix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-761">検索範囲とする文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-761">The string to search in.</span></span></param>
        <param name="suffix"><span data-ttu-id="119fe-762"><c>source</c> の末尾と比較する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-762">The string to compare with the end of <c>source</c>.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-763"><c>source</c> と <c>suffix</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-763">A value that defines how <c>source</c> and <c>suffix</c> should be compared.</span></span> <span data-ttu-id="119fe-764"><c>options</c> は、それ自体で使用する列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-764"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" /> used by itself, or the bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-765">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した検索対象文字列が、指定したサフィックスで終わるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="119fe-765">Determines whether the specified source string ends with the specified suffix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns>
          <span data-ttu-id="119fe-766"><paramref name="suffix" /> の長さが <paramref name="source" /> の長さ以下であり、<paramref name="source" /> が <paramref name="suffix" /> で終わる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="119fe-766"><see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-767">空の部分文字列で終わりますしたすべての文字列 ("") です。したがって場合、 `suffix` 、空の文字列は、このメソッドが返される`true`です。</span><span class="sxs-lookup"><span data-stu-id="119fe-767">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>  
  
 <span data-ttu-id="119fe-768"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-768">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-769">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-769">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-770">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-770">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-771">次の例では、文字列が、プレフィックスまたはサフィックスを別の文字列を使用するかどうかを判断<xref:System.Globalization.CompareOptions>です。</span><span class="sxs-lookup"><span data-stu-id="119fe-771">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-772"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-772"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-773">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-773">-or-</span></span>  
  
 <span data-ttu-id="119fe-774"><paramref name="suffix" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-774"><paramref name="suffix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-775"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-775"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="119fe-776">文字列または部分文字列内にある値のうち、最後に出現する値の、0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-776">Returns the zero-based index of the last occurrence of a value within a string or within a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-777">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-777">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-778"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-778">The character to locate within <c>source</c>.</span></span></param>
        <summary><span data-ttu-id="119fe-779">指定した文字を検索し、検索対象文字列全体内でその文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-779">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="119fe-780"><paramref name="source" /> 内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-780">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-781">後方文字列の末尾から開始日と終了の文字列の先頭には、ソース文字列が検索されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-781">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="119fe-782">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-782">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-783">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-783">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-784">序数に基づく (カルチャに依存しない) 検索を実行する、場所、文字と見なされます別一文字に相当する Unicode 値が同じ場合にのみ、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-784">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="119fe-785">オーバー ロードが<xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-785">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-786">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-786">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-787">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-787">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-788">次の例では、最初と最後に出現する文字または文字列内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-788">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-789"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-789"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-790">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-790">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-791">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-791">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-792">ここで、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />メソッドは常に最後のインデックス位置<paramref name="source" />の最後に、一致が見つかったことを示すために<paramref name="source" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-792">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method always returns the last index position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />.</span></span> <span data-ttu-id="119fe-793">次の例で、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />メソッドはソフト ハイフン (U +0 00AD) を 2 つの文字列で検索に使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-793">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="119fe-794">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-794">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-795">どちらの場合はソフト ハイフンに無視できる文字であるために、メソッドは文字列の末尾で照合を発見したを示すために、文字列の最後のインデックス位置を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-795">In both cases, because the soft hyphen is an ignorable character, the method returns the last index position in the string to indicate that it has found a match at the end of the string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-796">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-796">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-797"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-797">The string to locate within <c>source</c>.</span></span></param>
        <summary><span data-ttu-id="119fe-798">指定した部分文字列を検索し、検索対象文字列全体内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-798">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="119fe-799"><paramref name="source" /> 内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-799">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-800">後方文字列の末尾から開始日と終了の文字列の先頭には、ソース文字列が検索されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-800">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="119fe-801">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-801">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-802">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-802">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-803">Unicode 値が比較されます、序数に基づく (カルチャに依存しない) 検索を実行する、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-803">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-804">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-804">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-805">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-805">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-806">次の例では、最初と最後に出現する文字または文字列内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-806">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-807"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-807"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-808">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-808">-or-</span></span>  
  
 <span data-ttu-id="119fe-809"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-809"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-810">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-810">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-811">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-811">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-812">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />メソッドは常に返します<paramref name="source" />です。<see cref="P:System.String.Length" /></span><span class="sxs-lookup"><span data-stu-id="119fe-812">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /></span></span> <span data-ttu-id="119fe-813">– 最後のインデックス位置を表す 1、<paramref name="source" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-813">– 1, which represents the last index position in <paramref name="source" />.</span></span> <span data-ttu-id="119fe-814">次の例で、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />を 2 つの文字列 (ソフト ハイフン (U +0 00AD)、"n"で後にソフト ハイフンおよびにソフト ハイフンの後に"m") の 3 つの部分文字列を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-814">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="119fe-815">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-815">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-816">各ケースではソフト ハイフンに無視できる文字であるため、結果は、場合と同じにソフト ハイフンが含まれていない必要がある<paramref name="value" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-816">In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />.</span></span> <span data-ttu-id="119fe-817">ソフト ハイフンのみを検索するときに、このメソッドは、6 および 5 を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-817">When searching for a soft hyphen only, the method returns 6 and 5.</span></span> <span data-ttu-id="119fe-818">これらの値は、2 つの文字列の最後の文字のインデックスに対応します。</span><span class="sxs-lookup"><span data-stu-id="119fe-818">These values correspond to the index of the last character in the two strings.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-819">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-819">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-820"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-820">The character to locate within <c>source</c>.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-821"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-821">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-822"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-822"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-823">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列全体内でその文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-823">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-824">指定した比較オプションを使用して、<paramref name="source" /> 内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-824">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-825">後方文字列の末尾から開始日と終了の文字列の先頭には、ソース文字列が検索されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-825">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="119fe-826"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-826">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-827">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-827">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-828">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-828">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-829">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、序数に基づく (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-829">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="119fe-830">文字は Unicode 値が同じ場合にのみ、他の文字を同等と見なされます。</span><span class="sxs-lookup"><span data-stu-id="119fe-830">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="119fe-831">オーバー ロードが<xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-831">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-832">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-832">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-833">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-833">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-834">次の例では、最初と最後に出現する文字または文字列内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-834">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-835"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-835"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-836"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-836"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-837">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-837">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-838">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-838">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-839">ここで、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />メソッドは常に最後の文字位置<paramref name="source" />の最後に、一致が見つかったことを示すために<paramref name="source" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-839">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns the last character position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />.</span></span> <span data-ttu-id="119fe-840">次の例で、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />にソフト ハイフン (U +0 00AD) 2 つの文字列を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-840">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="119fe-841">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-841">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-842">どちらの場合はソフト ハイフンに無視できる文字であるために、カルチャに依存した検索は、ソース文字列内の最後のインデックス位置を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-842">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the last index position in the source string.</span></span> <span data-ttu-id="119fe-843">これに対し、序数に基づく検索が正常にソフト ハイフンと内の検索 1 つの文字列が存在しないことをレポート 2 番目の文字列から。</span><span class="sxs-lookup"><span data-stu-id="119fe-843">In contrast, an ordinal search successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-844">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-844">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-845"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-845">The character to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-846">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-846">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="119fe-847">指定した文字を検索し、検索対象文字列の先頭から指定したインデックスまでの範囲内で、その文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-847">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span></span></summary>
        <returns><span data-ttu-id="119fe-848"><paramref name="source" /> の先頭から <paramref name="startIndex" /> までの <paramref name="source" /> の範囲内で、<paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-848">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-849"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-849">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-850">ソース文字列が検索された旧バージョンとを開始位置として`startIndex`と文字列の先頭に終了します。</span><span class="sxs-lookup"><span data-stu-id="119fe-850">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="119fe-851">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-851">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-852">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-852">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-853">序数に基づく (カルチャに依存しない) 検索を実行する、場所、文字と見なされます別一文字に相当する Unicode 値が同じ場合にのみ、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-853">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="119fe-854">オーバー ロードが<xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-854">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-855">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-855">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-856">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-856">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-857">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-857">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="119fe-858">なお<xref:System.Globalization.CompareInfo.IndexOf%2A>と<xref:System.Globalization.CompareInfo.LastIndexOf%2A>で同じでも、文字列の異なる部分検索を実行`startIndex`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-858">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-859"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-859"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-860"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-860"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-861">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-861">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-862">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-862">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-863">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-863">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="119fe-864">次の例で、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />を 2 つの文字列で最後の"m"の前にソフト ハイフン (U +0 00AD) を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-864">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="119fe-865">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-865">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-866">どちらの場合も、ソフト ハイフンに無視できる文字であるため、メソッドを返します、"m"、これは、値のインデックス位置の<paramref name="startIndex" />します。</span><span class="sxs-lookup"><span data-stu-id="119fe-866">In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-867">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-867">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-868"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-868">The string to locate within <c>source</c>.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-869"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-869">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-870"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-870"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-871">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列全体内でその部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-871">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-872">指定した比較オプションを使用して、<paramref name="source" /> 内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-872">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-873">後方文字列の末尾から開始日と終了の文字列の先頭には、ソース文字列が検索されます。</span><span class="sxs-lookup"><span data-stu-id="119fe-873">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="119fe-874"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-874">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-875">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-875">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-876">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-876">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-877">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロード、序数に基づく (カルチャに依存しない) 検索を実行、Unicode 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-877">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-878">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-878">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-879">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-879">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-880">次の例では、最初と最後に出現する文字または文字列内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-880">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-881"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-881"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-882">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-882">-or-</span></span>  
  
 <span data-ttu-id="119fe-883"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-883"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-884"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-884"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-885">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-885">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-886">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-886">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-887">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />メソッドは常に返します<paramref name="source" />です。<see cref="P:System.String.Length" /></span><span class="sxs-lookup"><span data-stu-id="119fe-887">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /></span></span> <span data-ttu-id="119fe-888">– 最後のインデックス位置を表す 1、<paramref name="source" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-888">– 1, which represents the last index position in <paramref name="source" />.</span></span> <span data-ttu-id="119fe-889">次の例で、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />を 2 つの文字列 (ソフト ハイフン (U +0 00AD)、"n"で後にソフト ハイフンおよびにソフト ハイフンの後に"m") の 3 つの部分文字列を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-889">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="119fe-890">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-890">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-891">ソフト ハイフンは無視できる文字であるため、カルチャに依存した検索は、検索文字列にソフト ハイフンが含まれていないかどうかには返されますものと同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-891">Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="119fe-892">ただし、序数に基づく検索を正常に 1 つの文字列ではソフト ハイフンを検索してが存在しないことをレポート 2 番目の文字列から。</span><span class="sxs-lookup"><span data-stu-id="119fe-892">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-893">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-893">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-894"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-894">The string to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-895">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-895">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="119fe-896">指定した部分文字列を検索し、検索対象文字列の先頭から指定したインデックスまでの範囲内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-896">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span></span></summary>
        <returns><span data-ttu-id="119fe-897"><paramref name="source" /> の先頭から <paramref name="startIndex" /> までの <paramref name="source" /> の範囲内で、<paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-897">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-898"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-898">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-899">ソース文字列が検索された旧バージョンとを開始位置として`startIndex`と文字列の先頭に終了します。</span><span class="sxs-lookup"><span data-stu-id="119fe-899">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="119fe-900">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-900">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-901">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-901">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-902">Unicode 値が比較されます、序数に基づく (カルチャに依存しない) 検索を実行する、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-902">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-903">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-903">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-904">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-904">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-905">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-905">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="119fe-906">なお<xref:System.Globalization.CompareInfo.IndexOf%2A>と<xref:System.Globalization.CompareInfo.LastIndexOf%2A>で同じでも、文字列の異なる部分検索を実行`startIndex`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-906">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-907"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-907"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-908">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-908">-or-</span></span>  
  
 <span data-ttu-id="119fe-909"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-909"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-910"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-910"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-911">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-911">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-912">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-912">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-913">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-913">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="119fe-914">次の例で、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />メソッドはソフト ハイフン (U +0 00AD) が含まれているしよりも前または最後の"m"を文字列に含まれます部分文字列を検索に使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-914">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method is used to find a substring that includes a soft hyphen (U+00AD) and that precedes or includes the final "m" in a string.</span></span> <span data-ttu-id="119fe-915">ソフト ハイフンで構成される部分文字列を検索する呼び出しはソフト ハイフンと"m"で構成される部分文字列が文字列で、"m"の位置を返し、"n"を返しますを検索するメソッドを呼び出すと、検索文字列にソフト ハイフンが無視されるため、 "n"の位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-915">Because the soft hyphen in the search string is ignored, calling the method to find a substring that consists of the soft hyphen and "m" returns the position of the "m" in the string, whereas calling it to find a substring that consists of the soft hyphen and "n" returns the position of the "n".</span></span> <span data-ttu-id="119fe-916">メソッドが、"m"の値を表すのインデックスを返します、検索文字列には、ソフト ハイフンのみが含まれている、<paramref name="startIndex" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-916">When the search string contains only the soft hyphen, the method returns the index of the "m", which represents the value of <paramref name="startIndex" />.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-917">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-917">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-918"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-918">The character to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-919">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-919">The zero-based starting index of the backward search.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-920"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-920">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-921"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-921"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-922">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象の文字列の先頭から指定したインデックスまでの範囲内で、その文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-922">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-923">指定した比較オプションを使用して、<paramref name="source" /> の先頭から <paramref name="startIndex" /> までの <paramref name="source" /> の範囲内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-923">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-924"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-924">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-925">ソース文字列が検索された旧バージョンとを開始位置として`startIndex`と文字列の先頭に終了します。</span><span class="sxs-lookup"><span data-stu-id="119fe-925">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="119fe-926"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-926">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-927">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-927">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-928">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-928">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-929">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、序数に基づく (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-929">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="119fe-930">文字は Unicode 値が同じ場合にのみ、他の文字を同等と見なされます。</span><span class="sxs-lookup"><span data-stu-id="119fe-930">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="119fe-931">オーバー ロードが<xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-931">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-932">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-932">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-933">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-933">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-934">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-934">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="119fe-935">なお<xref:System.Globalization.CompareInfo.IndexOf%2A>と<xref:System.Globalization.CompareInfo.LastIndexOf%2A>で同じでも、文字列の異なる部分検索を実行`startIndex`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-935">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-936"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-936"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-937"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-937"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-938"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-938"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-939">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-939">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-940">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-940">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-941">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-941">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="119fe-942">次の例で、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />を 2 つの文字列で最後の"m"の前にソフト ハイフン (U +0 00AD) を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-942">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="119fe-943">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-943">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-944">どちらの場合はソフト ハイフンに無視できる文字であるために、カルチャに依存した検索は、"m"のインデックス位置を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-944">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m".</span></span> <span data-ttu-id="119fe-945">ただし、序数に基づく検索を正常に 1 つの文字列ではソフト ハイフンを検索してが存在しないことをレポート 2 番目の文字列から。</span><span class="sxs-lookup"><span data-stu-id="119fe-945">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-946">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-946">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-947"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-947">The character to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-948">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-948">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="119fe-949">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-949">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="119fe-950">指定した文字を検索し、検索対象文字列の指定したインデックスで終了し、指定した数の要素を含んでいる範囲内で、その文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-950">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="119fe-951"><paramref name="startIndex" /> で終わり、<paramref name="count" /> で指定した数の要素を含んでいる <paramref name="source" /> の範囲内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-951">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-952"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-952">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-953">ソース文字列が検索された旧バージョンとを開始位置として`startIndex`で終わる`startIndex`  -  `count` + 1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-953">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="119fe-954">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-954">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-955">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-955">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-956">序数に基づく (カルチャに依存しない) 検索を実行する、場所、文字と見なされます別一文字に相当する Unicode 値が同じ場合にのみ、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-956">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="119fe-957">オーバー ロードが<xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-957">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-958">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-958">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-959">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-959">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-960">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-960">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-961"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-961"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-962"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-962"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
 <span data-ttu-id="119fe-963">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-963">-or-</span></span>  
  
 <span data-ttu-id="119fe-964"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-964"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-965">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-965">-or-</span></span>  
  
 <span data-ttu-id="119fe-966"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="119fe-966"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-967">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-967">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-968">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-968">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-969">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-969">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="119fe-970">次の例で、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />を 2 つの文字列で最後の"m"の前にソフト ハイフン (U +0 00AD) を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-970">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="119fe-971">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-971">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-972">どちらの場合も、ソフト ハイフンに無視できる文字であるため、メソッドを返します、"m"、これは、値のインデックス位置の<paramref name="startIndex" />します。</span><span class="sxs-lookup"><span data-stu-id="119fe-972">In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-973">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-973">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-974"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-974">The string to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-975">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-975">The zero-based starting index of the backward search.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-976"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-976">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-977"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-977"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-978">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象の文字列の先頭から指定したインデックスまでの範囲内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-978">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-979">指定した比較オプションを使用して、<paramref name="source" /> の先頭から <paramref name="startIndex" /> までの <paramref name="source" /> の範囲内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-979">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-980"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-980">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-981">ソース文字列が検索された旧バージョンとを開始位置として`startIndex`と文字列の先頭に終了します。</span><span class="sxs-lookup"><span data-stu-id="119fe-981">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>  
  
 <span data-ttu-id="119fe-982"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-982">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-983">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-983">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-984">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-984">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-985">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロード、序数に基づく (カルチャに依存しない) 検索を実行、Unicode 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-985">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-986">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-986">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-987">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-987">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-988">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-988">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="119fe-989">なお<xref:System.Globalization.CompareInfo.IndexOf%2A>と<xref:System.Globalization.CompareInfo.LastIndexOf%2A>で同じでも、文字列の異なる部分検索を実行`startIndex`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="119fe-989">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-990"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-990"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-991">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-991">-or-</span></span>  
  
 <span data-ttu-id="119fe-992"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-992"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-993"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-993"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-994"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-994"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-995">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-995">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-996">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-996">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-997">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-997">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
 <span data-ttu-id="119fe-998">次の例で、 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> "m"、"m"で 2 つの文字列の最後の開始後にソフト ハイフン (U +0 00AD) の位置を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-998">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m", starting with the final "m" in two strings.</span></span> <span data-ttu-id="119fe-999">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-999">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="119fe-1000">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1000">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-1001">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="119fe-1001">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="119fe-1002">このメソッドは、序数に基づく比較を実行したときのみ、最初の文字列に含まれるソフト ハイフンのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1002">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-1003">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-1003">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-1004"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-1004">The string to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-1005">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-1005">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="119fe-1006">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-1006">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="119fe-1007">指定した部分文字列を検索し、検索対象文字列の指定したインデックスで終了し、指定した数の要素を含んでいる範囲内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1007">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="119fe-1008"><paramref name="startIndex" /> で終わり、<paramref name="count" /> で指定した数の要素を含んでいる <paramref name="source" /> の範囲内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1008">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="119fe-1009"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1009">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-1010">ソース文字列が検索された旧バージョンとを開始位置として`startIndex`で終わる`startIndex`  -  `count` + 1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1010">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="119fe-1011">このオーバー ロードでは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1011">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-1012">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1012">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-1013">Unicode 値が比較されます、序数に基づく (カルチャに依存しない) 検索を実行する、型のパラメーターを持つオーバー ロードのいずれかを呼び出す必要があります<xref:System.Globalization.CompareOptions>を使用して、<xref:System.Globalization.CompareOptions.Ordinal>値。</span><span class="sxs-lookup"><span data-stu-id="119fe-1013">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-1014">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1014">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-1015">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1015">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons .</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-1016">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1016">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-1017"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1017"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-1018">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-1018">-or-</span></span>  
  
 <span data-ttu-id="119fe-1019"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1019"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-1020"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1020"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
 <span data-ttu-id="119fe-1021">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-1021">-or-</span></span>  
  
 <span data-ttu-id="119fe-1022"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1022"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-1023">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-1023">-or-</span></span>  
  
 <span data-ttu-id="119fe-1024"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="119fe-1024"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-1025">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-1025">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-1026">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-1026">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-1027">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-1027">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
 <span data-ttu-id="119fe-1028">次の例で、 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> 3 つ前の文字が 2 つの文字列の最後の"m"で"m"の後にソフト ハイフン (U +0 00AD) の位置を検索する方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1028">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in the three characters that precede the final "m" of two strings.</span></span> <span data-ttu-id="119fe-1029">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-1029">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="119fe-1030">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1030">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-1031">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="119fe-1031">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-1032">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-1032">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-1033"><c>source</c> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="119fe-1033">The character to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-1034">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-1034">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="119fe-1035">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-1035">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-1036"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-1036">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-1037"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1037"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-1038">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列の指定したインデックスで終了し、指定した数の要素を含んでいる範囲内で、その文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1038">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-1039">指定した比較オプションを使用して、<paramref name="startIndex" /> で終わり、<paramref name="count" /> で指定した数の要素を含んでいる <paramref name="source" /> の範囲内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1039">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-1040"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1040">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-1041">ソース文字列が検索された旧バージョンとを開始位置として`startIndex`で終わる`startIndex`  -  `count` + 1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1041">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="119fe-1042"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1042">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-1043">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1043">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-1044">文字が文字を表す Unicode 値である場合は、合字の「Æ」(U + 00 C 6) と見なすことが出現するすべてのコンポーネントが正しい順序で"AE"などのと同じ (u+0041、u+0045)、カルチャに依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1044">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-1045">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、序数に基づく (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1045">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="119fe-1046">文字は Unicode 値が同じ場合にのみ、他の文字を同等と見なされます。</span><span class="sxs-lookup"><span data-stu-id="119fe-1046">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="119fe-1047">オーバー ロードが<xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>その文字の検索をカルチャに依存した検索を実行文字列を検索するもの、序数に基づく検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1047">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-1048">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1048">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-1049">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1049">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-1050">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1050">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-1051"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1051"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-1052"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1052"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
 <span data-ttu-id="119fe-1053">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-1053">-or-</span></span>  
  
 <span data-ttu-id="119fe-1054"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1054"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-1055">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-1055">-or-</span></span>  
  
 <span data-ttu-id="119fe-1056"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="119fe-1056"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-1057"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-1057"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-1058">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-1058">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-1059">カルチャに依存した検索では場合、<paramref name="value" />に無視できる文字は、結果は検索その文字を削除したのと同じです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1059">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-1060">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-1060">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="119fe-1061">次の例で、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />を 2 つの文字列で最後の"m"の前にソフト ハイフン (U +0 00AD) を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1061">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="119fe-1062">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-1062">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="119fe-1063">どちらの場合もあるためソフト ハイフンは無視できる文字では、カルチャに依存した検索を返します、"m"、これは、値のインデックス位置の<paramref name="startIndex" />します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1063">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span> <span data-ttu-id="119fe-1064">ただし、序数に基づく検索を正常に 1 つの文字列ではソフト ハイフンを検索してが存在しないことをレポート 2 番目の文字列から。</span><span class="sxs-lookup"><span data-stu-id="119fe-1064">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>  
  
 [!code-csharp[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)]
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="119fe-1065">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-1065">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="119fe-1066"><c>source</c> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-1066">The string to locate within <c>source</c>.</span></span></param>
        <param name="startIndex"><span data-ttu-id="119fe-1067">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="119fe-1067">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="119fe-1068">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="119fe-1068">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="119fe-1069"><c>source</c> と <c>value</c> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="119fe-1069">A value that defines how <c>source</c> and <c>value</c> should be compared.</span></span> <span data-ttu-id="119fe-1070"><c>options</c> は列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" />、または、<see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1070"><c>options</c> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="119fe-1071">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列の指定したインデックスで終了し、指定した数の要素を含んでいる範囲内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1071">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="119fe-1072">指定した比較オプションを使用して、<paramref name="startIndex" /> で終わり、<paramref name="count" /> で指定した数の要素を含んでいる <paramref name="source" /> の範囲内で <paramref name="value" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1072">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="119fe-1073"><paramref name="value" /> が無視できる文字の場合は <paramref name="startIndex" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1073">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-1074">ソース文字列が検索された旧バージョンとを開始位置として`startIndex`で終わる`startIndex`  -  `count` + 1 です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1074">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>  
  
 <span data-ttu-id="119fe-1075"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>値がこのメソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1075">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>  
  
 <span data-ttu-id="119fe-1076">場合`options`を含まない、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1076">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="119fe-1077">構成済みなどの文字「Æ」合字 (U + 00 C 6) を表す Unicode 値と見なすことが正しい順序で"AE"などの文字のコンポーネントの検索 (u+0041、u+0045) のカルチャに応じて、します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1077">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="119fe-1078">場合`options`が含まれています、<xref:System.Globalization.CompareOptions.Ordinal>値、このオーバー ロード、序数に基づく (カルチャに依存しない) 検索を実行、Unicode 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1078">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="119fe-1079">文字列の型のパラメーターのある比較メソッドを呼び出す必要があります、可能であれば、<xref:System.Globalization.CompareOptions>予想比較の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1079">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="119fe-1080">一般的な規則として、ユーザー インターフェイスに表示される文字列を比較 (現在のカルチャを使用して) 言語のオプションを使用し、指定<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType>または<xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType>セキュリティ比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1080">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-1081">次の例では、最初と最後に出現する文字または文字列の一部内の部分文字列のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1081">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>  
  
 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="119fe-1082"><paramref name="source" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1082"><paramref name="source" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="119fe-1083">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-1083">-or-</span></span>  
  
 <span data-ttu-id="119fe-1084"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1084"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="119fe-1085"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1085"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>  
  
 <span data-ttu-id="119fe-1086">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-1086">-or-</span></span>  
  
 <span data-ttu-id="119fe-1087"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="119fe-1087"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="119fe-1088">- または -</span><span class="sxs-lookup"><span data-stu-id="119fe-1088">-or-</span></span>  
  
 <span data-ttu-id="119fe-1089"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="119fe-1089"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="119fe-1090"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="119fe-1090"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-1091">文字セットには、無視できる文字には、言語またはカルチャに依存した並べ替えを実行するときにないと見なされる文字が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-1091">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="119fe-1092">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="119fe-1092">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="119fe-1093">場合<paramref name="value" />1 つまたは複数の無視できる文字のみで構成されて、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />メソッドは常に返します<paramref name="startIndex" />、これは、検索を開始する文字位置。</span><span class="sxs-lookup"><span data-stu-id="119fe-1093">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>  
  
 <span data-ttu-id="119fe-1094">次の例で、 <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> 2 つの文字列内のすべてのページで、"m"を続けてにソフト ハイフン (U +0 00AD) の位置が、最終的な"m"の前に、最初の文字位置を検索するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1094">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in all but the first character position before the final "m" in two strings.</span></span> <span data-ttu-id="119fe-1095">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="119fe-1095">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="119fe-1096">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1096">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-1097">序数に基づく比較を実行するときにただし、その部分文字列のみで検索最初の文字列します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1097">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="119fe-1098">で、"m"の後にソフト ハイフンが含まれている最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すが失敗したが、代わりに、カルチャに依存した比較を実行するときに"m"のインデックスを返しますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="119fe-1098">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="119fe-1099">このメソッドは、序数に基づく比較を実行したときのみ、最初の文字列に含まれるソフト ハイフンのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1099">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>  
  
 [!code-vb[System.Globalization.CompareInfo.LastIndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</para>
        </block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="119fe-1100">現在の <see cref="T:System.Globalization.CompareInfo" /> に対して適切な形式のカルチャ識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1100">Gets the properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></summary>
        <value><span data-ttu-id="119fe-1101">現在の <see cref="T:System.Globalization.CompareInfo" /> に対して適切に書式指定されたカルチャ識別子。</span><span class="sxs-lookup"><span data-stu-id="119fe-1101">The properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="119fe-1102">次の例で、<xref:System.Globalization.CompareInfo.LCID%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1102">The following example demonstrates the <xref:System.Globalization.CompareInfo.LCID%2A> property.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="119fe-1103">この <see cref="T:System.Globalization.CompareInfo" /> による並べ替え操作に使用されるカルチャの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1103">Gets the name of the culture used for sorting operations by this <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="119fe-1104">カルチャの名前。</span><span class="sxs-lookup"><span data-stu-id="119fe-1104">The name of a culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-1105"><xref:System.Globalization.CompareInfo.Name%2A>と<xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType>プロパティが異なる値を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="119fe-1105">The <xref:System.Globalization.CompareInfo.Name%2A> and <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> properties can have different values.</span></span> <span data-ttu-id="119fe-1106">たとえば、 <xref:System.Globalization.CompareInfo.LCID%2A> 0x10407 の 16 進数のプロパティの値をドイツ語の電話帳に表示される可能性がありますに名前を 代替の並べ替え順序カルチャを識別します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1106">For example, an <xref:System.Globalization.CompareInfo.LCID%2A> property value of hexadecimal 0x10407 identifies an alternate sort culture that sorts names as they might appear in a German telephone book.</span></span> <span data-ttu-id="119fe-1107"><xref:System.Globalization.CompareInfo.Name%2A>一方、プロパティが"de-de_phoneb"の値を持つ、 <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> "DE-DE"の値を持つ、関連するドイツ語 (ドイツ) のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1107">The <xref:System.Globalization.CompareInfo.Name%2A> property has a value of "de-de_phoneb", whereas the <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> property of the associated German (Germany) culture has a value of "de-DE".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="119fe-1108">次の例では、FR-FR、JA-JP カルチャを使用して 3 つの文字列を比較します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1108">The following example compares three strings using the fr-FR and ja-JP cultures.</span></span> <span data-ttu-id="119fe-1109"><xref:System.Globalization.CultureInfo.Name%2A>プロパティの使用に各カルチャの名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1109">The <xref:System.Globalization.CultureInfo.Name%2A> property is used to display the name of each culture.</span></span>  
  
 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="119fe-1110">コールバックを開始したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-1110">The object that initiated the callback.</span></span></param>
        <summary><span data-ttu-id="119fe-1111">オブジェクト グラフ全体が逆シリアル化された時点で実行します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1111">Runs when the entire object graph has been deserialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-1112">このメンバーは、明示的なインターフェイス メンバーの実装の 使用できる場合にのみ、現在<xref:System.Globalization.CompareInfo>オブジェクトにキャスト、<xref:System.Runtime.Serialization.IDeserializationCallback>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1112">This member is an explicit interface member implementation that can be used only when the current <xref:System.Globalization.CompareInfo> object is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.</span></span> <span data-ttu-id="119fe-1113">詳細については、<xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="119fe-1113">For more information, see the <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="119fe-1114">現在の <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1114">Returns a string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="119fe-1115">現在の <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="119fe-1115">A string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-1116">このメソッドは、<xref:System.Object.ToString%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1116">This method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="119fe-1117">クラス名とインスタンスの値で構成される文字列を返します<xref:System.Globalization.CompareInfo.Name%2A>をハイフンで区切ってプロパティです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1117">It returns a string that consists of the class name and the value of the instance <xref:System.Globalization.CompareInfo.Name%2A> property, separated by a hyphen.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="119fe-1118">.NET Framework 4 から直接、<see cref="M:System.Globalization.CompareInfo.ToString" />メソッドがクラス名の後に、スペース、ハイフン、スペース、およびの値を返します、<see cref="P:System.Globalization.CompareInfo.Name" />プロパティです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1118">Staring with the .NET Framework 4, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.Name" /> property.</span></span> <span data-ttu-id="119fe-1119">たとえば、 <see cref="T:System.Globalization.CompareInfo" /> EN-US カルチャを表すオブジェクト、 <see cref="M:System.Globalization.CompareInfo.ToString" /> "CompareInfo - EN-US"を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1119">For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - en-US".</span></span> <span data-ttu-id="119fe-1120">.NET Framework の以前のバージョンで、クラス名の後に、スペース、ハイフン、スペース、およびの値を返します、<see cref="P:System.Globalization.CompareInfo.LCID" />プロパティです。</span><span class="sxs-lookup"><span data-stu-id="119fe-1120">In previous versions of the .NET Framework, it returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.LCID" /> property.</span></span> <span data-ttu-id="119fe-1121">たとえば、 <see cref="T:System.Globalization.CompareInfo" /> EN-US カルチャを表すオブジェクト、 <see cref="M:System.Globalization.CompareInfo.ToString" /> "CompareInfo - 1033"を返します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1121">For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - 1033".</span></span></para>
        </block>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public System.Globalization.SortVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.SortVersion Version" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As SortVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::SortVersion ^ Version { System::Globalization::SortVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.SortVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="119fe-1122">文字列の比較および並べ替えに使用される Unicode のバージョンに関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1122">Gets information about the version of Unicode used for comparing and sorting strings.</span></span></summary>
        <value><span data-ttu-id="119fe-1123">文字列を比較および並べ替えるために使用される Unicode のバージョンに関する情報を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-1123">An object that contains information about the Unicode version used for comparing and sorting strings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="119fe-1124">個々 の文字の重みとそのための特定の文字列を比較または並べ替え、方法は、.NET Framework の特定のバージョンを実装する Unicode 仕様のバージョンによって異なります。</span><span class="sxs-lookup"><span data-stu-id="119fe-1124">The weight of individual characters, and therefore the way in which particular strings are compared or ordered, depends on the version of the Unicode specification that a particular version of the .NET Framework implements.</span></span> <span data-ttu-id="119fe-1125">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]、次の表に示すよう、ホスト オペレーティング システムにも依存します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1125">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], this also depends on the host operating system, as the following table shows.</span></span> <span data-ttu-id="119fe-1126">サポートされている Unicode バージョンの一覧は、文字の比較と並べ替えに対してのみ適用されます。カテゴリ別での Unicode 文字の分類には適用されません。</span><span class="sxs-lookup"><span data-stu-id="119fe-1126">Note that this list of supported Unicode versions applies to character comparison and sorting only; it does not apply to classification of Unicode characters by category.</span></span>  
  
|<span data-ttu-id="119fe-1127">.NET Framework のバージョン</span><span class="sxs-lookup"><span data-stu-id="119fe-1127">.NET Framework version</span></span>|<span data-ttu-id="119fe-1128">オペレーティング システム</span><span class="sxs-lookup"><span data-stu-id="119fe-1128">Operating system</span></span>|<span data-ttu-id="119fe-1129">Unicode バージョン</span><span class="sxs-lookup"><span data-stu-id="119fe-1129">Unicode version</span></span>|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|<span data-ttu-id="119fe-1130">すべてのオペレーティング システム</span><span class="sxs-lookup"><span data-stu-id="119fe-1130">All operating systems</span></span>|<span data-ttu-id="119fe-1131">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="119fe-1131">Unicode 5.0</span></span>|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]<span data-ttu-id="119fe-1132"> 以降のバージョン</span><span class="sxs-lookup"><span data-stu-id="119fe-1132"> and later versions</span></span>|[!INCLUDE[win7](~/includes/win7-md.md)]|<span data-ttu-id="119fe-1133">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="119fe-1133">Unicode 5.0</span></span>|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]<span data-ttu-id="119fe-1134"> 以降のバージョン</span><span class="sxs-lookup"><span data-stu-id="119fe-1134"> and later versions</span></span>|[!INCLUDE[win8](~/includes/win8-md.md)]<span data-ttu-id="119fe-1135"> 以降の Windows オペレーティング システム バージョン</span><span class="sxs-lookup"><span data-stu-id="119fe-1135"> and later Windows operating system versions</span></span>|<span data-ttu-id="119fe-1136">Unicode 6.3</span><span class="sxs-lookup"><span data-stu-id="119fe-1136">Unicode 6.3</span></span>|  
  
 <span data-ttu-id="119fe-1137"><xref:System.Globalization.SortVersion>によって返されるオブジェクト、<xref:System.Globalization.CompareInfo.Version%2A>プロパティが文字列の比較に使用される正確な Unicode バージョンを識別します。</span><span class="sxs-lookup"><span data-stu-id="119fe-1137">The <xref:System.Globalization.SortVersion> object returned by the <xref:System.Globalization.CompareInfo.Version%2A> property doesn't identify the precise Unicode version used to compare strings.</span></span> <span data-ttu-id="119fe-1138">2 つを比較するときにのみ便利です<xref:System.Globalization.SortVersion>同じ Unicode バージョン、カルチャを使用する文字列を比較するかどうかを決定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="119fe-1138">It is useful only when comparing two <xref:System.Globalization.SortVersion> objects to determine whether they use the same Unicode version and culture to compare strings.</span></span> <span data-ttu-id="119fe-1139">例および詳細については、次を参照してください。、<xref:System.Globalization.SortVersion>リファレンス ページ。</span><span class="sxs-lookup"><span data-stu-id="119fe-1139">For more information and an example, see the <xref:System.Globalization.SortVersion> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortVersion" />
      </Docs>
    </Member>
  </Members>
</Type>