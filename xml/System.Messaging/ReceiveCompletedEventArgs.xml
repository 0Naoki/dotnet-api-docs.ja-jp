<Type Name="ReceiveCompletedEventArgs" FullName="System.Messaging.ReceiveCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40fb7c4c36e8a9ddbae569f24bf33f51c4c52063" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37479104" /></Metadata><TypeSignature Language="C#" Value="public class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReceiveCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ReceiveCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ReceiveCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3f213-101"><see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="3f213-101">Provides data for the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event.</span></span> <span data-ttu-id="3f213-102">非同期の受信操作がイベント ハンドラーを呼び出すと、このクラスのインスタンスがハンドラーに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3f213-102">When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f213-103">イベント通知を使用して、キューから非同期的にメッセージを受信するときにメッセージを処理するメソッドを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f213-103">When you use event notification to receive messages asynchronously from the queue, you must create a method that handles your message processing.</span></span> <span data-ttu-id="3f213-104">コードを呼び出す必要があります<xref:System.Messaging.MessageQueue.BeginReceive%2A>非同期処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="3f213-104">Your code must call <xref:System.Messaging.MessageQueue.BeginReceive%2A> to begin the asynchronous processing.</span></span> <span data-ttu-id="3f213-105">アプリケーションに通知メッセージが受信したときに、<xref:System.Messaging.MessageQueue.ReceiveCompleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="3f213-105">When a message is received, your application is notified through the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="3f213-106">インスタンス<xref:System.Messaging.ReceiveCompletedEventArgs>イベント デリゲートを呼び出すイベント ハンドラーに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3f213-106">An instance of <xref:System.Messaging.ReceiveCompletedEventArgs> is passed into the event delegate that calls your event handler.</span></span> <span data-ttu-id="3f213-107">関連付けられているデータ、<xref:System.Messaging.MessageQueue.ReceiveCompleted>デリゲートにイベントが含まれている<xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A>パラメーター。</span><span class="sxs-lookup"><span data-stu-id="3f213-107">The data associated with the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is contained in the delegate's <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parameter.</span></span>  
  
 <span data-ttu-id="3f213-108">イベントの完了通知を提供する 2 つの方法: イベント通知とコールバック。</span><span class="sxs-lookup"><span data-stu-id="3f213-108">There are two ways to provide notification of event completion: event notification and callbacks.</span></span> <span data-ttu-id="3f213-109"><xref:System.Messaging.ReceiveCompletedEventArgs> イベント通知でのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="3f213-109"><xref:System.Messaging.ReceiveCompletedEventArgs> is used only with event notification.</span></span> <span data-ttu-id="3f213-110">コールバックとイベント通知の比較については、"イベントとを参照してください。MSDN で"コールバック。</span><span class="sxs-lookup"><span data-stu-id="3f213-110">For information comparing callbacks and event notification, see "Events vs. Callbacks" on MSDN.</span></span>  
  
 <span data-ttu-id="3f213-111"><xref:System.Messaging.ReceiveCompletedEventArgs> アクセスを提供します。 非同期の終了を開始したメッセージの受信操作を通じて、<xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A>メンバー。</span><span class="sxs-lookup"><span data-stu-id="3f213-111"><xref:System.Messaging.ReceiveCompletedEventArgs> provides access to the message that initiated the end of the asynchronous receive operation, through the <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> member.</span></span> <span data-ttu-id="3f213-112">これは、メッセージへの代替であり、動作への呼び出しとほぼ同じ<xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="3f213-112">This is an alternate access to the message, and behaves much the same as a call to <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f213-113">次のコード例のイベント ハンドラーを作成する、<xref:System.Messaging.MessageQueue.ReceiveCompleted>イベントとイベントでの委任を使用して、<xref:System.Messaging.ReceiveCompletedEventHandler>します。</span><span class="sxs-lookup"><span data-stu-id="3f213-113">The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.ReceiveCompletedEventHandler>.</span></span> <span data-ttu-id="3f213-114">イベント ハンドラー、 `MyReceiveCompleted`、キューからメッセージを受信および画面に、本文を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3f213-114">The event handler, `MyReceiveCompleted`, receives a message from a queue and writes its body to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f213-115">要求された非同期操作の結果を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f213-115">Gets or sets the result of the asynchronous operation requested.</span></span></summary>
        <value><span data-ttu-id="3f213-116">受信操作に関連付けられたデータを格納している <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="3f213-116">A <see cref="T:System.IAsyncResult" /> that contains the data associated with the receive operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f213-117"><xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> 進行中または完了した非同期操作を識別します。</span><span class="sxs-lookup"><span data-stu-id="3f213-117"><xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> identifies ongoing or completed asynchronous operations.</span></span> <span data-ttu-id="3f213-118">プロパティには、いくつかの潜在的な非同期操作を完了するのかを判断できるデータが含まれています。 イベント ハンドラーに渡されると、有効と<xref:System.Messaging.MessageQueue.EndReceive%2A>完了した操作に関連付けられているメッセージにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="3f213-118">The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables <xref:System.Messaging.MessageQueue.EndReceive%2A> to access the message associated with the completed operation.</span></span>  
  
 <span data-ttu-id="3f213-119">呼び出すと<xref:System.Messaging.MessageQueue.BeginReceive%2A>、<xref:System.IAsyncResult>場合でも、メッセージを 1 つが存在する場合はまだ取得されていない操作が完了していないため、すぐに、返されます。</span><span class="sxs-lookup"><span data-stu-id="3f213-119">When you call <xref:System.Messaging.MessageQueue.BeginReceive%2A>, a <xref:System.IAsyncResult> is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed.</span></span> <span data-ttu-id="3f213-120"><xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A>非同期操作の状態を示します。</span><span class="sxs-lookup"><span data-stu-id="3f213-120">The <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> indicates the state of the asynchronous operation.</span></span> <span data-ttu-id="3f213-121"><xref:System.Messaging.MessageQueue.BeginReceive%2A> まで、操作全体で変更されると、オブジェクトを作成します<xref:System.Messaging.MessageQueue.EndReceive%2A>それを完了します。</span><span class="sxs-lookup"><span data-stu-id="3f213-121"><xref:System.Messaging.MessageQueue.BeginReceive%2A> creates the object, which is modified throughout the operation until <xref:System.Messaging.MessageQueue.EndReceive%2A> completes it.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f213-122">非同期の受信操作に関連付けられているメッセージを取得します。</span><span class="sxs-lookup"><span data-stu-id="3f213-122">Gets the message associated with the asynchronous receive operation.</span></span></summary>
        <value><span data-ttu-id="3f213-123">非同期の受信操作の最終結果を表す <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="3f213-123">A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous receive operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f213-124"><xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A>プロパティは、非同期の終了を開始したメッセージを取得するための手段を提供操作を受信します。</span><span class="sxs-lookup"><span data-stu-id="3f213-124">The <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> property provides a means for retrieving the message that initiated the end of the asynchronous receive operation.</span></span>  
  
 <span data-ttu-id="3f213-125"><xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> 初めてと呼びます、<xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A>を呼び出す必要はありませんので、プロパティは読み取り<xref:System.Messaging.MessageQueue.EndReceive%2A>前に、このプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3f213-125"><xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> is called the first time the <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> property is read, so it is not necessary to call <xref:System.Messaging.MessageQueue.EndReceive%2A> prior to getting the value of this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><span data-ttu-id="3f213-126"><see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> を取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="3f213-126">The <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> could not be retrieved.</span></span> <span data-ttu-id="3f213-127">非同期操作のタイムアウト時間が経過した可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3f213-127">The time-out on the asynchronous operation might have expired.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>