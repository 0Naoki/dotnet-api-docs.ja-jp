<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2eb6aa54811f33e7e5a6bb9e848def1f050d7706" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39726357" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type MessageQueueInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="82f03-101">アプリケーションの実行に必要なキューのインストールと構成ができます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="82f03-101">Allows you to install and configure a queue that your application needs in order to run.</span>
      </span>
      <span data-ttu-id="82f03-102">このクラスは、<see cref="T:System.Messaging.MessageQueue" /> をインストールするときに、InstallUtil.exe などのインストール ユーティリティによって呼び出されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="82f03-102">This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-103"><xref:System.Messaging.MessageQueueInstaller>インストール ユーティリティによって、キューに関連付けられているレジストリ値の書き込みに使用します。</span><span class="sxs-lookup"><span data-stu-id="82f03-103">The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue.</span></span> <span data-ttu-id="82f03-104">インストール ユーティリティの詳細については、次を参照してください。 [Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)します。</span><span class="sxs-lookup"><span data-stu-id="82f03-104">For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span>  
  
 <span data-ttu-id="82f03-105">継承されるプロジェクト インストーラー クラスを作成、キューをインストールする、 <xref:System.Configuration.Install.Installer>、設定、 <xref:System.ComponentModel.RunInstallerAttribute> 、クラスに対する`true`します。</span><span class="sxs-lookup"><span data-stu-id="82f03-105">To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`.</span></span> <span data-ttu-id="82f03-106">プロジェクト内に作成、<xref:System.Messaging.MessageQueueInstaller>インストールでは、各キューのインスタンスし、プロジェクト インストーラー クラスにインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="82f03-106">Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class.</span></span>  
  
 <span data-ttu-id="82f03-107">作成するときに、<xref:System.Messaging.MessageQueueInstaller>インスタンスを渡すことができます必要に応じて、既存<xref:System.Messaging.MessageQueue>(たとえばからテスト サーバー) に、<xref:System.Messaging.MessageQueueInstaller.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="82f03-107">When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor.</span></span> <span data-ttu-id="82f03-108">このアプローチに渡されるキューの設定をミラーリングすることにより、新しいキューの構成設定を自動的に行います。</span><span class="sxs-lookup"><span data-stu-id="82f03-108">This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in.</span></span> <span data-ttu-id="82f03-109">プロパティを手動で設定する代わりに、<xref:System.Messaging.MessageQueueInstaller>インスタンス状態を選択し、既定のコンス トラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="82f03-109">Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor.</span></span>  
  
 <span data-ttu-id="82f03-110">インストール ユーティリティが呼び出されると、検索、<xref:System.ComponentModel.RunInstallerAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="82f03-110">When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>.</span></span> <span data-ttu-id="82f03-111">場合は`true`、ユーティリティ内のすべてのキューのインストール、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーに関連付けられているコレクション。</span><span class="sxs-lookup"><span data-stu-id="82f03-111">If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="82f03-112">場合<xref:System.ComponentModel.RunInstallerAttribute>は`false`、プロジェクト インストーラーには無視されます。</span><span class="sxs-lookup"><span data-stu-id="82f03-112">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="82f03-113">他のプロパティを変更する、<xref:System.Messaging.MessageQueueInstaller>インスタンスの前に、または後にインスタンスを追加、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーのコレクション。</span><span class="sxs-lookup"><span data-stu-id="82f03-113">You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer.</span></span> <span data-ttu-id="82f03-114">たとえば、キューの<xref:System.Messaging.MessageQueue.Path%2A>インストール ユーティリティが実行される前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="82f03-114">For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.</span></span>  
  
 <span data-ttu-id="82f03-115">通常、呼び出すことはありませんのメソッド、<xref:System.Messaging.MessageQueueInstaller>からは、コード内で一般的に呼び出される installutil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="82f03-115">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="82f03-116">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドを呼び出し、インストール プロセス中に<xref:System.Messaging.MessageQueueInstaller.Commit%2A>インストールでは、例外をスローしなかった場合。</span><span class="sxs-lookup"><span data-stu-id="82f03-116">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception.</span></span> <span data-ttu-id="82f03-117">バックアップ実行の障害を必要に応じて、呼び出すことによって<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>例外を生成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82f03-117">It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.</span></span>  
  
 <span data-ttu-id="82f03-118">アプリケーションのインストールに使用して、プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="82f03-118">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="82f03-119">この状態情報が継続的に各更新<xref:System.Messaging.MessageQueueInstaller>ユーティリティによってインスタンスがインストールされています。</span><span class="sxs-lookup"><span data-stu-id="82f03-119">This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="82f03-120">状態情報を明示的に変更するコードを通常必要はありません。</span><span class="sxs-lookup"><span data-stu-id="82f03-120">It is not usually necessary for your code to explicitly modify the state information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-121">
            <see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-121">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="82f03-122">
            <see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-122">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          </span>
          <span data-ttu-id="82f03-123">インスタンス プロパティは設定しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-123">Does not set any instance properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueueInstaller : System.Messaging.MessageQueue -&gt; System.Messaging.MessageQueueInstaller" Usage="new System.Messaging.MessageQueueInstaller componentToCopy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">
          <span data-ttu-id="82f03-124">インストールされる新しいキューのプロパティ設定を決定する <see cref="T:System.Messaging.MessageQueue" /> コンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-124">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82f03-125">
            <see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化し、インストール設定を既存の <see cref="T:System.Messaging.MessageQueue" /> インスタンスの設定に初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-125">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticate : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-126">インストールされるキューが認証済みメッセージだけを受け入れるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-126">Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-127">キューが認証済みメッセージだけを受け入れる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-127">
              <see langword="true" /> if the queue accepts only authenticated messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="82f03-128">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-128">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-129">認証されていないメッセージが認証済みメッセージだけを受け入れるキューに送信されると、メッセージは拒否されます。</span><span class="sxs-lookup"><span data-stu-id="82f03-129">When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected.</span></span> <span data-ttu-id="82f03-130">送信元アプリケーションは設定して、メッセージが拒否の通知を要求することができます、<xref:System.Messaging.Message.AcknowledgeType%2A>メッセージ。</span><span class="sxs-lookup"><span data-stu-id="82f03-130">The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message.</span></span> <span data-ttu-id="82f03-131">それがないメッセージが拒否されたことを示す値ため、配信不能キューに送信する場合を除き、メッセージが失われることができます。</span><span class="sxs-lookup"><span data-stu-id="82f03-131">Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int16 with get, set" Usage="System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-132">ネットワーク上でパブリック キューのメッセージをルーティングするときに使用する基本優先順位を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-132">Gets or sets the base priority that is used to route a public queue's messages over the network.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-133">パブリック キューに送信されるすべてのメッセージに適用される単一の基本優先順位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-133">The single base priority for all messages sent to the public queue.</span>
          </span>
          <span data-ttu-id="82f03-134">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-134">The default is zero (0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-135"><xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>ネットワーク経由でキューのメッセージをルーティングするためです。</span><span class="sxs-lookup"><span data-stu-id="82f03-135">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network.</span></span> <span data-ttu-id="82f03-136">使用して、<xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>より高度なキューまたはその他のキューに送信されるメッセージの場合よりも優先順位の低いに送信されるメッセージを提供します。</span><span class="sxs-lookup"><span data-stu-id="82f03-136">Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues.</span></span> <span data-ttu-id="82f03-137">キューの基本優先順位が設定されている場合、送信されたすべてのメッセージには、基本優先順位の低いキューに送信されるメッセージの場合よりも高い優先順位が与えられます。</span><span class="sxs-lookup"><span data-stu-id="82f03-137">When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority.</span></span> <span data-ttu-id="82f03-138">キューまたはキューからメッセージを読み取る方法では、キューの基本優先順位を指定しても、メッセージの順序の影響はありません。</span><span class="sxs-lookup"><span data-stu-id="82f03-138">The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.</span></span>  
  
 <span data-ttu-id="82f03-139"><xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>ドメイン コント ローラーを使用してアクセスする唯一のパブリックにキューに適用されます (つまり、public 形式名を使用します)。</span><span class="sxs-lookup"><span data-stu-id="82f03-139">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name).</span></span> <span data-ttu-id="82f03-140">直接アクセスされるパブリック キューとプライベート キューの基本優先順位は常に 0 です。</span><span class="sxs-lookup"><span data-stu-id="82f03-140">The base priority of private queues and of directly accessed public queues is always zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueueInstaller.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-141">実装に固有のキューの種類を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-141">Gets or sets an implementation-specific queue type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-142">キュー カテゴリを表す <see cref="T:System.Guid" />、つまりメッセージ キュー型識別子。これによって、アプリケーションは、使用方法に従ってキューを分類できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-142">A <see cref="T:System.Guid" /> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used.</span>
          </span>
          <span data-ttu-id="82f03-143">既定値は、<see langword="Guid.empty" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-143">The default is <see langword="Guid.empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-144">キュー カテゴリでは、アプリケーションに従って使用する方法は、関連付けられているキューを分類できるようにします。</span><span class="sxs-lookup"><span data-stu-id="82f03-144">The queue category enables an application to categorize associated queues according to the way they are used.</span></span> <span data-ttu-id="82f03-145"><xref:System.Messaging.MessageQueue.Category%2A> Null 参照でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="82f03-145">The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference.</span></span> <span data-ttu-id="82f03-146">新しいカテゴリを定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="82f03-146">You can also define a new category.</span></span>  
  
 <span data-ttu-id="82f03-147"><xref:System.Messaging.MessageQueue.Category%2A>プロパティは、メッセージ キュー型識別子プロパティを特定のキューに関連付けられ、読み取り/書き込みへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="82f03-147">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write.</span></span> <span data-ttu-id="82f03-148">使用することができます、<xref:System.Guid.NewGuid%2A>全体で一意であることが保証されるカテゴリの値を作成するメソッドを<xref:System.Guid>値。</span><span class="sxs-lookup"><span data-stu-id="82f03-148">You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values.</span></span> <span data-ttu-id="82f03-149">ただし、カテゴリ値はありませんから他のすべての他のカテゴリ別にする必要があります<xref:System.Guid>値。</span><span class="sxs-lookup"><span data-stu-id="82f03-149">However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="82f03-150">たとえば、設定、<xref:System.Messaging.MessageQueue.Category%2A>するキューの一方のグループ{00000000-0000-0000-0000-000000000001}と<xref:System.Messaging.MessageQueue.Category%2A>別のグループの{00000000-0000-0000-0000-000000000002}します。</span><span class="sxs-lookup"><span data-stu-id="82f03-150">For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="82f03-151">インストール後のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-151">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82f03-152">
            <see cref="T:System.Messaging.MessageQueue" /> メソッドによってレジストリに書き込まれた <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> インストール情報をコミットして、インストール プロセスを完了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-152">Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry.</span>
          </span>
          <span data-ttu-id="82f03-153">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-153">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-154">通常、呼び出すことはありませんのメソッド、<xref:System.Messaging.MessageQueueInstaller>からは、コード内で一般的に呼び出される installutil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="82f03-154">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="82f03-155">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Install%2A>インストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="82f03-155">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="82f03-156">インストールはトランザクション キューですので、障害が発生したインストール プロジェクト コンポーネントのインストール中に、以前にインストールされたコンポーネントがすべてロールバックされますをインストール前の状態にします。</span><span class="sxs-lookup"><span data-stu-id="82f03-156">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="82f03-157">これは、各コンポーネントを呼び出すことによって実現<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="82f03-157">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="82f03-158">インストールのプロジェクトに関連付けられているすべてのコンポーネントのインストールの成功後が発生しました、インストール ユーティリティがインストールをコミットします。</span><span class="sxs-lookup"><span data-stu-id="82f03-158">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="82f03-159"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> インストールが完了したら、<xref:System.Messaging.MessageQueue>適切な初期状態をキューに設定します。</span><span class="sxs-lookup"><span data-stu-id="82f03-159"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="82f03-160">によって、キューが指定されている場合、<xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティは既に存在し、メッセージが表示されて<xref:System.Messaging.MessageQueueInstaller.Commit%2A>メッセージをクリアします。</span><span class="sxs-lookup"><span data-stu-id="82f03-160">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="82f03-161"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>、なく<xref:System.Messaging.MessageQueueInstaller.Install%2A>、、メッセージを削除する操作をロールバックできないため、メッセージを消去します。</span><span class="sxs-lookup"><span data-stu-id="82f03-161"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="82f03-162">アプリケーションのインストールに使用して、プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="82f03-162">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="82f03-163">渡される状態情報を取得するにはこの<xref:System.Messaging.MessageQueueInstaller.Commit%2A>として、`savedState`ユーティリティ コミットごとに、パラメーターは引き続き更新<xref:System.Messaging.MessageQueueInstaller>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="82f03-163">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="82f03-164">通常、この状態情報を明示的に変更するコードの必要はありません。</span><span class="sxs-lookup"><span data-stu-id="82f03-164">Usually, it is not necessary for your code to explicitly modify this state information.</span></span> <span data-ttu-id="82f03-165">キューがオフの場合は、<xref:System.Messaging.MessageQueueInstaller.Commit%2A>にログ エントリの投稿、`savedState`インストールに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="82f03-165">When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="messageQueueInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="82f03-166">
            <see cref="T:System.ComponentModel.IComponent" /> にテンプレートとして使用する <see cref="T:System.Messaging.MessageQueueInstaller" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-166">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82f03-167">インストールするときにメッセージ キューに必要な、<see cref="T:System.Messaging.MessageQueue" /> コンポーネントのプロパティ値をコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-167">Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-168">通常、呼び出すことはありませんのメソッド、<xref:System.Messaging.MessageQueueInstaller>からは、コード内で一般的に呼び出される installutil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="82f03-168">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="82f03-169"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> プロパティ値を設定するため、インストール ユーティリティによって、 <xref:System.Messaging.MessageQueueInstaller> 、既存の値に<xref:System.Messaging.MessageQueue>します。</span><span class="sxs-lookup"><span data-stu-id="82f03-169"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="82f03-170">場合、<xref:System.Messaging.MessageQueue.Path%2A>の<xref:System.Messaging.MessageQueue>は空の文字列は、渡された ("") を設定する必要があります、<xref:System.Messaging.MessageQueue.Path%2A>プロパティをインストーラーが実行される前に、空でない値にします。</span><span class="sxs-lookup"><span data-stu-id="82f03-170">If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (""), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="82f03-171">この <see cref="T:System.Messaging.MessageQueueInstaller" /> に関連付けられたコンポーネントは <see cref="T:System.Messaging.MessageQueue" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-171">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionRequired : System.Messaging.EncryptionRequired with get, set" Usage="System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-172">キューがプライベート メッセージ、つまり暗号化されたメッセージだけを受け入れるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-172">Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-173">キューに送信するメッセージに必要な暗号レベルを示す <see cref="T:System.Messaging.EncryptionRequired" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-173">One of the <see cref="T:System.Messaging.EncryptionRequired" /> values that indicates the encryption level required on messages sent to the queue.</span>
          </span>
          <span data-ttu-id="82f03-174">既定値は、<see langword="Optional" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-174">The default is <see langword="Optional" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-175">暗号化が指定されている場合、のみ、<xref:System.Messaging.Message.Body%2A>メッセージの暗号化します。</span><span class="sxs-lookup"><span data-stu-id="82f03-175">When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted.</span></span> <span data-ttu-id="82f03-176">その他のプロパティなど、<xref:System.Messaging.Message.Label%2A>は暗号化されません。</span><span class="sxs-lookup"><span data-stu-id="82f03-176">Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="82f03-177">コミット、ロールバック、またはアンインストール操作を実行するために必要な情報を保存するために使用する <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-177">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82f03-178">インストールを実行し、レジストリにメッセージ キュー情報を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-178">Performs the installation and writes message queue information to the registry.</span>
          </span>
          <span data-ttu-id="82f03-179">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-179">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-180"><xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドは、レジストリにメッセージ キュー情報を書き込み、関連付けます、<xref:System.Messaging.MessageQueue>インスタンスによって指定されたパスにあるキューを使った、<xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="82f03-180">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property.</span></span> <span data-ttu-id="82f03-181">キューが存在しない場合<xref:System.Messaging.MessageQueueInstaller.Install%2A>トランザクション キューを作成します。</span><span class="sxs-lookup"><span data-stu-id="82f03-181">If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue.</span></span> <span data-ttu-id="82f03-182"><xref:System.Messaging.MessageQueueInstaller.Install%2A> 指定したものに新規または既存のキューのプロパティを設定、<xref:System.Messaging.MessageQueueInstaller>します。</span><span class="sxs-lookup"><span data-stu-id="82f03-182"><xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="82f03-183">そのプロパティをリセットするキューが既に存在する場合、<xref:System.Messaging.MessageQueueInstaller>します。</span><span class="sxs-lookup"><span data-stu-id="82f03-183">If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="82f03-184">既存のキューがトランザクションではありませんが削除され、トランザクション キューとして再作成します。</span><span class="sxs-lookup"><span data-stu-id="82f03-184">If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="82f03-185">を、キューを再作成する必要がある場合は、キュー内のメッセージは失われます。</span><span class="sxs-lookup"><span data-stu-id="82f03-185">If it is necessary to recreate the queue, messages in the queue will be lost.</span></span>  
  
 <span data-ttu-id="82f03-186">通常、呼び出すことはありませんのメソッド、<xref:System.Messaging.MessageQueueInstaller>からは、コード内で一般的に呼び出される installutil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="82f03-186">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="82f03-187">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Install%2A>インストールされているメッセージ キューに関連付けられている情報をレジストリに書き込むインストール プロセス中にメソッド。</span><span class="sxs-lookup"><span data-stu-id="82f03-187">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed.</span></span> <span data-ttu-id="82f03-188">インストールはトランザクション キューですので、障害が発生したインストール プロジェクト コンポーネントのインストール中に、以前にインストールされたコンポーネントがすべてロールバックされますをインストール前の状態にします。</span><span class="sxs-lookup"><span data-stu-id="82f03-188">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="82f03-189">これは、各コンポーネントを呼び出すことによって実現<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="82f03-189">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="82f03-190">インストールのプロジェクトに関連付けられているすべてのコンポーネントのインストールの成功後が発生しました、インストール ユーティリティがインストールをコミットします。</span><span class="sxs-lookup"><span data-stu-id="82f03-190">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="82f03-191"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> インストールが完了したら、<xref:System.Messaging.MessageQueue>適切な初期状態をキューに設定します。</span><span class="sxs-lookup"><span data-stu-id="82f03-191"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="82f03-192">によって、キューが指定されている場合、<xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティは既に存在し、メッセージが表示されて<xref:System.Messaging.MessageQueueInstaller.Commit%2A>メッセージをクリアします。</span><span class="sxs-lookup"><span data-stu-id="82f03-192">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="82f03-193"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>、なく<xref:System.Messaging.MessageQueueInstaller.Install%2A>、、メッセージを削除する操作をロールバックできないため、メッセージを消去します。</span><span class="sxs-lookup"><span data-stu-id="82f03-193"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="82f03-194">アプリケーションのインストールに使用して、プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="82f03-194">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="82f03-195">渡される状態情報を取得するにはこの<xref:System.Messaging.MessageQueueInstaller.Install%2A>として、`stateSaver`各ユーティリティがインストールに、パラメーターは引き続き更新<xref:System.Messaging.MessageQueueInstaller>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="82f03-195">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="82f03-196">通常、この状態情報を明示的に変更するコードの必要はありません。</span><span class="sxs-lookup"><span data-stu-id="82f03-196">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="messageQueueInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">
          <span data-ttu-id="82f03-197">比較対象のインストーラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-197">The installer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82f03-198">指定したインストーラーがこのインストーラーと同じ種類のインストールを処理できるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-198">Determines whether the specified installer can handle the same kind of installation as this installer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82f03-199">このインストーラーと <paramref name="otherInstaller" /> パラメーターで指定したインストーラーが同じ種類のインストールを処理できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-199">
              <see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-200">通常、<xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A>返します`true`このインストーラーで指定された場合にのみ、`otherInstaller`パラメーターが同じ型。</span><span class="sxs-lookup"><span data-stu-id="82f03-200">Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter are of the same type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-201">キューの説明を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-201">Gets or sets a description of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-202">メッセージ キューを説明するラベル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-202">The label that describes the message queue.</span>
          </span>
          <span data-ttu-id="82f03-203">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-203">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-204"><xref:System.Messaging.MessageQueue.Label%2A>プロパティがキューで一意である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="82f03-204">The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="82f03-205">
            <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-205">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumJournalSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-206">キューに関連付けられたジャーナルの最大サイズを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-206">Gets or sets the maximum size of the journal that is associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-207">キューから削除されたメッセージを記録するジャーナル キューの最大サイズ。単位は KB です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-207">The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue.</span>
          </span>
          <span data-ttu-id="82f03-208">メッセージ キューの既定値は、制限なしです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-208">The Message Queuing default is no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-209">キューが作成されるときでは、新しいキューと同じ場所にキューのジャーナルを作成メッセージ キューに自動的に。</span><span class="sxs-lookup"><span data-stu-id="82f03-209">When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue.</span></span> <span data-ttu-id="82f03-210">キューのジャーナルを使用すると、キューから削除されたメッセージを追跡します。</span><span class="sxs-lookup"><span data-stu-id="82f03-210">The queue journal is used to track the messages that are removed from the queue.</span></span>  
  
 <span data-ttu-id="82f03-211">2 種類のメッセージは追跡されません。 その時間---受信するタイマーの期限が切れているため、キューから削除されると、キューから削除されます。</span><span class="sxs-lookup"><span data-stu-id="82f03-211">Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="82f03-212">アプリケーションは、ジャーナル キューにメッセージを送信することはできません。</span><span class="sxs-lookup"><span data-stu-id="82f03-212">Applications cannot send messages to the journal queue.</span></span> <span data-ttu-id="82f03-213">ただし、不要なメッセージを削除するキューを定期的に消去する必要があります。</span><span class="sxs-lookup"><span data-stu-id="82f03-213">However, you must periodically clear the queue to remove the messages that are no longer needed.</span></span> <span data-ttu-id="82f03-214">ジャーナル キューが存在するコンピューターのクォータのキューに格納されているメッセージ。</span><span class="sxs-lookup"><span data-stu-id="82f03-214">Messages stored in journal queues count toward the quota for the computer where the queues reside.</span></span> <span data-ttu-id="82f03-215">(コンピューターのクォータは、管理者によって設定されます)。</span><span class="sxs-lookup"><span data-stu-id="82f03-215">(The computer quota is set by the administrator.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumQueueSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-216">キューの最大サイズを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-216">Gets or sets the maximum size of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-217">キューの最大サイズ。単位は KB です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-217">The maximum size, in kilobytes, of the queue.</span>
          </span>
          <span data-ttu-id="82f03-218">メッセージ キューの既定値は、制限なしです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-218">The Message Queuing default is no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-219">キューの最大サイズを後でリセットできますが、通常のキューの作成時に設定されます。</span><span class="sxs-lookup"><span data-stu-id="82f03-219">The maximum queue size is typically set at the time of queue creation, although it can be reset later.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddress : string with get, set" Usage="System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-220">MSMQ 3.0 で導入されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-220">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="82f03-221">キューに関連付けられているマルチキャスト アドレスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-221">Gets or sets the multicast address associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-222">有効なマルチキャスト アドレス (次に示す形式) を格納している <see cref="T:System.String" />、またはキューがマルチキャスト アドレスに関連付けられていないことを示す <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-222">A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or <see langword="null" />, which indicates that the queue is not associated with a multicast address.</span>
          </span>  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="82f03-223">MSMQ 3.0 がインストールされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-223">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-224">このオブジェクトが参照するキューの場所を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-224">Gets or sets the location of the queue that is referenced by this object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-225">ネットワーク上でキューの場所を表すパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-225">The path that represents the location of the queue in the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-226">構文、<xref:System.Messaging.MessageQueue.Path%2A>プロパティに依存するキューの種類が参照します。</span><span class="sxs-lookup"><span data-stu-id="82f03-226">The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references.</span></span> <span data-ttu-id="82f03-227">次の表では、さまざまな種類のキューを使用する必要があります、構文を示します。</span><span class="sxs-lookup"><span data-stu-id="82f03-227">The following table shows the syntax you should use for queues of various types.</span></span>  
  
|<span data-ttu-id="82f03-228">キューの種類</span><span class="sxs-lookup"><span data-stu-id="82f03-228">Queue type</span></span>|<span data-ttu-id="82f03-229">構文</span><span class="sxs-lookup"><span data-stu-id="82f03-229">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="82f03-230">パブリック キュー</span><span class="sxs-lookup"><span data-stu-id="82f03-230">Public queue</span></span>|`machineName`\\`queueName`|  
|<span data-ttu-id="82f03-231">専用キュー</span><span class="sxs-lookup"><span data-stu-id="82f03-231">Private queue</span></span>|`machineName`\\`Private$`\\`queueName`|  
|<span data-ttu-id="82f03-232">ジャーナル キュー</span><span class="sxs-lookup"><span data-stu-id="82f03-232">Journal queue</span></span>|`machineName`\\`queueName`\\`Journal$`|  
|<span data-ttu-id="82f03-233">コンピューター ジャーナル キュー</span><span class="sxs-lookup"><span data-stu-id="82f03-233">Machine journal queue</span></span>|`machineName`\\`Journal$`|  
|<span data-ttu-id="82f03-234">コンピューター配信不能キュー</span><span class="sxs-lookup"><span data-stu-id="82f03-234">Machine dead-letter queue</span></span>|`machineName`\\`Deadletter$`|  
|<span data-ttu-id="82f03-235">コンピューター トランザクション配信不能キュー</span><span class="sxs-lookup"><span data-stu-id="82f03-235">Machine transactional dead-letter queue</span></span>|`machineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="82f03-236">使用して"."ローカル コンピューターの。</span><span class="sxs-lookup"><span data-stu-id="82f03-236">Use "." for the local computer.</span></span>  
  
 <span data-ttu-id="82f03-237">使用することも、<xref:System.Messaging.MessageQueue.FormatName%2A>または<xref:System.Messaging.MessageQueue.Label%2A>のメッセージ キュー アプリケーション キューのパスを記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82f03-237">You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path.</span></span> <span data-ttu-id="82f03-238">次の表では、参照の種類ごとに適切な構文を示します。</span><span class="sxs-lookup"><span data-stu-id="82f03-238">The following table shows the proper syntax for each type of reference.</span></span>  
  
|<span data-ttu-id="82f03-239">参照</span><span class="sxs-lookup"><span data-stu-id="82f03-239">Reference</span></span>|<span data-ttu-id="82f03-240">構文</span><span class="sxs-lookup"><span data-stu-id="82f03-240">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="82f03-241">形式名</span><span class="sxs-lookup"><span data-stu-id="82f03-241">Format name</span></span>|<span data-ttu-id="82f03-242">形式名: [*形式名*]</span><span class="sxs-lookup"><span data-stu-id="82f03-242">FormatName:[ *format name* ]</span></span>|  
|<span data-ttu-id="82f03-243">group1</span><span class="sxs-lookup"><span data-stu-id="82f03-243">Label</span></span>|<span data-ttu-id="82f03-244">ラベル: [*ラベル*]</span><span class="sxs-lookup"><span data-stu-id="82f03-244">Label:[ *label* ]</span></span>|  
  
 <span data-ttu-id="82f03-245">オフラインで作業する場合は、キューを定義する形式名を使用する必要があります<xref:System.Messaging.MessageQueue.Path%2A>します。</span><span class="sxs-lookup"><span data-stu-id="82f03-245">If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="82f03-246">プライマリ ドメイン コント ローラーが解決するのには使用できないために、アプリケーションは、例外をスローしないと場合、<xref:System.Messaging.MessageQueue.Path%2A>に、<xref:System.Messaging.MessageQueue.FormatName%2A>します。</span><span class="sxs-lookup"><span data-stu-id="82f03-246">If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="82f03-247">
            <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> に無効な値が設定されました。構文が無効である可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-247">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.</span>
          </span>
          <span data-ttu-id="82f03-248">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-248">-or-</span>
          </span>
          <span data-ttu-id="82f03-249">
            <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-249">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Permissions : System.Messaging.AccessControlList with get, set" Usage="System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-250">キューに関連付けられているアクセス許可を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-250">Gets or sets permissions associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-251">トラスティとキューに付与するアクセス許可を指定する 1 つ以上のアクセス制御エントリを含む <see cref="T:System.Messaging.AccessControlList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-251">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-252">既定では、パブリックまたはプライベート キューの作成者がフル コントロール、およびキューのプロパティを取得し、アクセス許可を取得し、キューへの書き込みアクセス許可を持つすべてのユーザー、ドメイン グループです。</span><span class="sxs-lookup"><span data-stu-id="82f03-252">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="82f03-253">メッセージ キュー、現在のユーザーと現在しようとした操作に適用されるものが見つかるまで、さらにアクセス許可リストの各エントリにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="82f03-253">Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action.</span></span> <span data-ttu-id="82f03-254">許可するようにオペレーティング システムのアクセス許可をユーザーに明示的に拒否する権限より優先されます。</span><span class="sxs-lookup"><span data-stu-id="82f03-254">As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.</span></span>  
  
 <span data-ttu-id="82f03-255">構築する際に、<xref:System.Messaging.MessageQueueInstaller.Permissions%2A>プロパティ追加<xref:System.Messaging.AccessControlEntry>インスタンスを<xref:System.Messaging.AccessControlList>コレクション。</span><span class="sxs-lookup"><span data-stu-id="82f03-255">When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection.</span></span> <span data-ttu-id="82f03-256">各アクセス制御エントリを作成する場合は、ジェネリック、または標準のアクセス権を指定できます。</span><span class="sxs-lookup"><span data-stu-id="82f03-256">When you construct each access control entry, you can specify generic or standard access rights.</span></span> <span data-ttu-id="82f03-257">キューの権限は、次の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="82f03-257">The rights to a queue can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="82f03-258">削除</span><span class="sxs-lookup"><span data-stu-id="82f03-258">Delete</span></span>  
  
-   <span data-ttu-id="82f03-259">セキュリティの読み取り</span><span class="sxs-lookup"><span data-stu-id="82f03-259">Read Security</span></span>  
  
-   <span data-ttu-id="82f03-260">セキュリティを書き込み</span><span class="sxs-lookup"><span data-stu-id="82f03-260">Write Security</span></span>  
  
-   <span data-ttu-id="82f03-261">同期</span><span class="sxs-lookup"><span data-stu-id="82f03-261">Synchronize</span></span>  
  
-   <span data-ttu-id="82f03-262">所有者を変更します。</span><span class="sxs-lookup"><span data-stu-id="82f03-262">Modify Owner</span></span>  
  
-   <span data-ttu-id="82f03-263">読み取り</span><span class="sxs-lookup"><span data-stu-id="82f03-263">Read</span></span>  
  
-   <span data-ttu-id="82f03-264">Write</span><span class="sxs-lookup"><span data-stu-id="82f03-264">Write</span></span>  
  
-   <span data-ttu-id="82f03-265">実行</span><span class="sxs-lookup"><span data-stu-id="82f03-265">Execute</span></span>  
  
-   <span data-ttu-id="82f03-266">必須</span><span class="sxs-lookup"><span data-stu-id="82f03-266">Required</span></span>  
  
-   <span data-ttu-id="82f03-267">すべて</span><span class="sxs-lookup"><span data-stu-id="82f03-267">All</span></span>  
  
-   <span data-ttu-id="82f03-268">なし</span><span class="sxs-lookup"><span data-stu-id="82f03-268">None</span></span>  
  
 <span data-ttu-id="82f03-269">これらの権限は、一連のビット フラグのビットごとの OR を使用して組み合わせることができます。</span><span class="sxs-lookup"><span data-stu-id="82f03-269">These rights are a set of bit flags that you can combine using the bitwise OR:</span></span>  
  
-   <span data-ttu-id="82f03-270">フル コントロール</span><span class="sxs-lookup"><span data-stu-id="82f03-270">Full Control</span></span>  
  
-   <span data-ttu-id="82f03-271">メッセージを削除します。</span><span class="sxs-lookup"><span data-stu-id="82f03-271">Delete Message</span></span>  
  
-   <span data-ttu-id="82f03-272">メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="82f03-272">Receive Message</span></span>  
  
-   <span data-ttu-id="82f03-273">メッセージをピークします。</span><span class="sxs-lookup"><span data-stu-id="82f03-273">Peek Message</span></span>  
  
-   <span data-ttu-id="82f03-274">ジャーナル メッセージを受信します。</span><span class="sxs-lookup"><span data-stu-id="82f03-274">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="82f03-275">キューのプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="82f03-275">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="82f03-276">キューのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="82f03-276">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="82f03-277">アクセス許可を取得します。</span><span class="sxs-lookup"><span data-stu-id="82f03-277">Get Permissions</span></span>  
  
-   <span data-ttu-id="82f03-278">アクセス許可を設定</span><span class="sxs-lookup"><span data-stu-id="82f03-278">Set Permissions</span></span>  
  
-   <span data-ttu-id="82f03-279">キューの所有権を取得します。</span><span class="sxs-lookup"><span data-stu-id="82f03-279">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="82f03-280">メッセージを書き込み</span><span class="sxs-lookup"><span data-stu-id="82f03-280">Write Message</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="82f03-281">インストール前のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-281">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82f03-282">インストール プロシージャによってレジストリに書き込まれたキュー情報をロールバックして、コンピューターをインストール前の状態に復元します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-282">Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry.</span>
          </span>
          <span data-ttu-id="82f03-283">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-283">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-284"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッドの効果を元に戻します、<xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="82f03-284">The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method.</span></span> <span data-ttu-id="82f03-285"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> インストールのプロジェクト内の任意コンポーネントのインストールが失敗した場合が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="82f03-285"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails.</span></span> <span data-ttu-id="82f03-286"><xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドを作成またはキューのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="82f03-286">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue.</span></span> <span data-ttu-id="82f03-287"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> キューを削除しますか、既存のキューのプロパティをインストール前の値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="82f03-287"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.</span></span>  
  
 <span data-ttu-id="82f03-288">通常、呼び出すことはありませんのメソッド、<xref:System.Messaging.MessageQueueInstaller>からは、コード内で一般的に呼び出される InstallUtil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="82f03-288">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility.</span></span> <span data-ttu-id="82f03-289">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>を取り消すには、インストールの失敗の変更後に、インストール プロセスが作成しました。</span><span class="sxs-lookup"><span data-stu-id="82f03-289">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.</span></span>  
  
 <span data-ttu-id="82f03-290">アプリケーションのインストールに使用して、プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="82f03-290">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="82f03-291">渡される状態情報を取得するにはこの<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>として、`savedState`ユーティリティが順番に継続的に、パラメーターが更新の各バックアップ<xref:System.Messaging.MessageQueueInstaller>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="82f03-291">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="82f03-292">通常、この状態情報を明示的に変更するコードの必要はありません。</span><span class="sxs-lookup"><span data-stu-id="82f03-292">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Transactional : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-293">キューがトランザクションの一部として送信されたメッセージだけを受け入れるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-293">Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-294">キューがトランザクションの一部として送信されるメッセージだけを受け入れる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-294">
              <see langword="true" /> if the queue can only accept messages sent as part of a transaction; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="82f03-295">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-295">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-296">メッセージは、トランザクションを使用せずに、ローカル トランザクション キューから取得できます。</span><span class="sxs-lookup"><span data-stu-id="82f03-296">Messages can be retrieved from a local transaction queue with or without using a transaction.</span></span> <span data-ttu-id="82f03-297">トランザクション コンテキストを指定しない場合を 1 つの内部トランザクションを作成するメッセージ キューします。</span><span class="sxs-lookup"><span data-stu-id="82f03-297">If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="82f03-298">インストール後のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-298">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82f03-299">レジストリからキュー情報を削除して、インストールされているキューを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-299">Removes an installation by removing queue information from the registry.</span>
          </span>
          <span data-ttu-id="82f03-300">このメソッドは、アンインストール ツールで使用されます。アンインストール ツールは適切なメソッドを自動的に呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-300">This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-301">場合、<xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A>は`Remove`、<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>に関連付けられているキューを削除することも、<xref:System.Messaging.MessageQueue>します。</span><span class="sxs-lookup"><span data-stu-id="82f03-301">If the <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> is `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> also deletes the queue associated with the <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="82f03-302">通常、呼び出すことはありませんのメソッド、<xref:System.Messaging.MessageQueueInstaller>からは、コード内で一般的に呼び出される InstallUtil.exe インストール ユーティリティによってのみ (アンインストール モード)。</span><span class="sxs-lookup"><span data-stu-id="82f03-302">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode).</span></span> <span data-ttu-id="82f03-303">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>をシステムのインストールをインストール前の状態に影響を受けた部分を復元します。</span><span class="sxs-lookup"><span data-stu-id="82f03-303">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states.</span></span> <span data-ttu-id="82f03-304">これをアンインストールして MessageQueue に関連付けられているレジストリ情報の削除が含まれます。</span><span class="sxs-lookup"><span data-stu-id="82f03-304">This includes deleting registry information that is associated with the MessageQueue being uninstalled.</span></span>  
  
 <span data-ttu-id="82f03-305">アプリケーションのアンインストールは日常的なプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>既にアンインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="82f03-305">An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been uninstalled.</span></span> <span data-ttu-id="82f03-306">渡される状態情報を取得するにはこの<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>として、`savedState`ユーティリティをアンインストールしますそれぞれにパラメーターは引き続き更新<xref:System.Messaging.MessageQueueInstaller>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="82f03-306">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="82f03-307">通常、この状態情報を明示的に変更するコードの必要はありません。</span><span class="sxs-lookup"><span data-stu-id="82f03-307">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-308">アンインストールするときにインストーラーがキューに対して実行する操作を示す値を取得または設定します。実行できる操作には、削除、インストール前の状態への復元、現在のインストールされた状態の維持があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-308">Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-309">
            <see cref="T:System.Configuration.Install.UninstallAction" /> がアンインストールされるときにキューをどの状態にするか示す <see cref="T:System.Messaging.MessageQueue" /> 値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-309">One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the queue in when the <see cref="T:System.Messaging.MessageQueue" /> is uninstalled.</span>
          </span>
          <span data-ttu-id="82f03-310">既定値は、<see langword="Remove" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-310">The default is <see langword="Remove" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-311">キューをインストールするときに、既存のキューも使用できます。</span><span class="sxs-lookup"><span data-stu-id="82f03-311">When you install a queue, you can optionally use an existing queue.</span></span> <span data-ttu-id="82f03-312">これを行う場合は、キューがインストール前の状態に戻る必要があるかどうか、または、現在のインストール後の状態に残すかどうかを決める必要があります。</span><span class="sxs-lookup"><span data-stu-id="82f03-312">If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state.</span></span> <span data-ttu-id="82f03-313">キューをインストール前の状態に戻るように選択した場合、インストール時に、キューから削除されたメッセージは復元されません。</span><span class="sxs-lookup"><span data-stu-id="82f03-313">If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored.</span></span> <span data-ttu-id="82f03-314">関連付けられているキューのプロパティのみをリセットすることができます、<xref:System.Messaging.MessageQueueInstaller>インストール前の値にします。</span><span class="sxs-lookup"><span data-stu-id="82f03-314">You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82f03-315">キューから取得したメッセージを関連付けられたジャーナル キューにもコピーするかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-315">Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82f03-316">キューから取得したメッセージをジャーナル キューにコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-316">
              <see langword="true" /> to copy messages that are retrieved from the queue to the journal queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="82f03-317">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="82f03-317">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82f03-318">ジャーナル キューを使用しての追跡メッセージをキューから取得した後にもできます。</span><span class="sxs-lookup"><span data-stu-id="82f03-318">A journal queue lets you keep track of messages even after they have been retrieved from the queue.</span></span> <span data-ttu-id="82f03-319">ただし、2 種類のメッセージは追跡されません。 その時間---受信するタイマーの期限が切れると、キューから削除されると、キューから削除されます。</span><span class="sxs-lookup"><span data-stu-id="82f03-319">However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="82f03-320">不要なメッセージを削除するジャーナル キューを定期的に消去する必要があります。</span><span class="sxs-lookup"><span data-stu-id="82f03-320">A journal queue should be cleared periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="82f03-321">ジャーナル キューの数、journal が配置されているコンピューターのクォータに格納されたメッセージ。</span><span class="sxs-lookup"><span data-stu-id="82f03-321">Messages stored in the journal queue count toward the quota for the computer on which the journal is located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>