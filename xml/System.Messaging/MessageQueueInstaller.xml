<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2169da977692b3e7ae0fe99175aa7991d83a31df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460836" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>アプリケーションの実行に必要なキューのインストールと構成ができます。 このクラスは、<see cref="T:System.Messaging.MessageQueue" /> をインストールするときに、InstallUtil.exe などのインストール ユーティリティによって呼び出されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller>インストール ユーティリティによって、キューに関連付けられているレジストリ値の書き込みに使用します。 インストール ユーティリティの詳細については、次を参照してください。 [Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)です。  
  
 継承されるプロジェクト インストーラー クラスを作成、キューをインストールするには<xref:System.Configuration.Install.Installer>、設定と、<xref:System.ComponentModel.RunInstallerAttribute>クラスを`true`です。 プロジェクト内に作成、<xref:System.Messaging.MessageQueueInstaller>インストールでは、各キューのインスタンスし、インスタンス プロジェクト インストーラー クラスに追加します。  
  
 作成するときに、<xref:System.Messaging.MessageQueueInstaller>インスタンスを渡すことができます必要に応じて、既存<xref:System.Messaging.MessageQueue>(たとえばからテスト サーバー) に、<xref:System.Messaging.MessageQueueInstaller.%23ctor%2A>コンス トラクターです。 この方法に渡されたキューの設定を反映して自動的に新しいキューの構成設定を提供します。 プロパティを手動で設定する代わりに、<xref:System.Messaging.MessageQueueInstaller>インスタンスを選択して、既定のコンス トラクターを呼び出す、状態にします。  
  
 インストール ユーティリティが呼び出されると、検索、<xref:System.ComponentModel.RunInstallerAttribute>です。 場合は`true`、ユーティリティ内のすべてのキューのインストール、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーに関連付けられているコレクション。 場合<xref:System.ComponentModel.RunInstallerAttribute>は`false`、プロジェクト インストーラーは無視されます。  
  
 他のプロパティを変更する、<xref:System.Messaging.MessageQueueInstaller>インスタンスの前に、または後にインスタンスを追加する、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーのコレクション。 たとえば、キューの<xref:System.Messaging.MessageQueue.Path%2A>インストール ユーティリティが実行される前に設定する必要があります。  
  
 メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが installutil.exe インストール ユーティリティによってのみです。 ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドの呼び出し、インストール プロセス中に<xref:System.Messaging.MessageQueueInstaller.Commit%2A>場合は、インストールは、例外をスローしませんでした。 バックアップ障害、out、必要に応じて呼び出すことによって<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>の例外を生成したオブジェクト。  
  
 アプリケーションのインストールに使用してプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。 この状態が継続的に情報として各<xref:System.Messaging.MessageQueueInstaller>ユーティリティによってインスタンスがインストールされています。 通常、コードの状態情報を明示的に変更する必要はありません。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化します。 インスタンス プロパティは設定しません。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">インストールされる新しいキューのプロパティ設定を決定する <see cref="T:System.Messaging.MessageQueue" /> コンポーネント。</param>
        <summary>
          <see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化し、インストール設定を既存の <see cref="T:System.Messaging.MessageQueue" /> インスタンスの設定に初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インストールされるキューが認証済みメッセージだけを受け入れるかどうかを示す値を取得または設定します。</summary>
        <value>
          キューが認証済みメッセージだけを受け入れる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 認証されていないメッセージが認証されたメッセージだけを受け取るキューに送信されると、メッセージは拒否されます。 送信元のアプリケーションは設定してメッセージ却下の通知を要求することができます、<xref:System.Messaging.Message.AcknowledgeType%2A>メッセージ。 それ以外の場合がないメッセージが拒否されたことを示す値ため、配信不能キューに送信する場合を除き、メッセージが失われることができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ネットワーク上でパブリック キューのメッセージをルーティングするときに使用する基本優先順位を取得または設定します。</summary>
        <value>パブリック キューに送信されるすべてのメッセージに適用される単一の基本優先順位。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>ネットワーク経由でキューのメッセージをルーティングのために使用します。 使用して、<xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>高いキューまたは他のキューに送信されたメッセージをより低い優先順位にメッセージを送信するためです。 キューの基本優先順位が設定されている場合に送信されたすべてのメッセージには、基本優先度の低いキューにメッセージを送信する場合よりも高い優先度が与えられます。 キューまたはキューからメッセージを読み取る方法では、キューの基本優先順位を指定しても、メッセージの順序の効果はありません。  
  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>にパブリック キューのみには、ドメイン コント ローラーからアクセスするには適用されます (つまり、public 形式名を使用します)。 直接アクセスされるパブリック キューとプライベート キューの基本の優先順位は常に 0 です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実装に固有のキューの種類を取得または設定します。</summary>
        <value>キュー カテゴリを表す <see cref="T:System.Guid" />、つまりメッセージ キュー型識別子。これによって、アプリケーションは、使用方法に従ってキューを分類できます。 既定値は、<see langword="Guid.empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キューのカテゴリにより、アプリケーションをその使用方法によって関連付けられているキューを分類します。 <xref:System.Messaging.MessageQueue.Category%2A> Null 参照でもかまいません。 新しいカテゴリを定義することもできます。  
  
 <xref:System.Messaging.MessageQueue.Category%2A>プロパティは、メッセージ キューの種類の識別子プロパティは、特定のキューに関連付けられ、読み取り/書き込みへのアクセスを提供します。 使用することができます、<xref:System.Guid.NewGuid%2A>すべてにわたって一意であることが保証される、カテゴリの値を作成するメソッド<xref:System.Guid>値。 ただし、必要があるからではなく他のすべての他のカテゴリを異なるカテゴリの値に対してのみ<xref:System.Guid>値。 たとえば、設定することができます、<xref:System.Messaging.MessageQueue.Category%2A>キュー} の 1 つのグループと<xref:System.Messaging.MessageQueue.Category%2A>{00000000-0000-0000-0000-000000000002} を別のグループです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">インストール後のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>
          <see cref="T:System.Messaging.MessageQueue" /> メソッドによってレジストリに書き込まれた <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> インストール情報をコミットして、インストール プロセスを完了します。 このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが installutil.exe インストール ユーティリティによってのみです。 ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Install%2A>インストール プロセス中にメソッドです。 インストールは、トランザクションが失敗したインストール プロジェクト コンポーネントのインストール中に、以前にインストールされたすべてのコンポーネントがロールバックをインストール前の状態にします。 これは、各コンポーネントを呼び出すことによって実現<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッドです。  
  
 インストールのプロジェクトに関連付けられているすべてのコンポーネントのインストールの成功後が発生したインストール ユーティリティは、インストールをコミットします。 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> インストールが完了したら、<xref:System.Messaging.MessageQueue>キューを適切な初期状態に設定します。 によって、キューが指定されている場合、<xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティは既に存在し、メッセージが表示されて<xref:System.Messaging.MessageQueueInstaller.Commit%2A>メッセージをクリアします。 <xref:System.Messaging.MessageQueueInstaller.Commit%2A>、なく<xref:System.Messaging.MessageQueueInstaller.Install%2A>、、メッセージを削除する操作はロールバックできないため、メッセージを消去します。  
  
 アプリケーションのインストールに使用してプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。 渡される、この状態情報<xref:System.Messaging.MessageQueueInstaller.Commit%2A>として、`savedState`ユーティリティがコミットされるごとに、パラメーターは引き続き更新<xref:System.Messaging.MessageQueueInstaller>インスタンス。 通常、コードのこの状態情報を明示的に変更する必要はありません。 キューがオフの場合は、<xref:System.Messaging.MessageQueueInstaller.Commit%2A>ログのエントリを投稿、`savedState`インストールに関連付けられています。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.ComponentModel.IComponent" /> にテンプレートとして使用する <see cref="T:System.Messaging.MessageQueueInstaller" />。</param>
        <summary>インストールするときにメッセージ キューに必要な、<see cref="T:System.Messaging.MessageQueue" /> コンポーネントのプロパティ値をコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが installutil.exe インストール ユーティリティによってのみです。 <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> プロパティの値の設定にインストール ユーティリティによって使用される、 <xref:System.Messaging.MessageQueueInstaller> 、既存の値に<xref:System.Messaging.MessageQueue>です。  
  
 場合、<xref:System.Messaging.MessageQueue.Path%2A>の<xref:System.Messaging.MessageQueue>は、空の文字列は、渡された ("") を設定する必要があります、<xref:System.Messaging.MessageQueue.Path%2A>プロパティをインストーラーが実行される前に、空でない値にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">この <see cref="T:System.Messaging.MessageQueueInstaller" /> に関連付けられたコンポーネントは <see cref="T:System.Messaging.MessageQueue" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューがプライベート メッセージ、つまり暗号化されたメッセージだけを受け入れるかどうかを示す値を取得または設定します。</summary>
        <value>キューに送信するメッセージに必要な暗号レベルを示す <see cref="T:System.Messaging.EncryptionRequired" /> 値のいずれか。 既定値は、<see langword="Optional" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 暗号化が指定されている場合、のみ、<xref:System.Messaging.Message.Body%2A>のメッセージを暗号化します。 その他のプロパティなど、 <xref:System.Messaging.Message.Label%2A>、暗号化されていません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">コミット、ロールバック、またはアンインストール操作を実行するために必要な情報を保存するために使用する <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>インストールを実行し、レジストリにメッセージ キュー情報を書き込みます。 このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドを選択し、メッセージ キュー情報をレジストリに書き込みます関連付けます、<xref:System.Messaging.MessageQueue>によって指定されたパスに配置されているキューのインスタンス、<xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティです。 キューが既に存在しない場合<xref:System.Messaging.MessageQueueInstaller.Install%2A>トランザクション キューを作成します。 <xref:System.Messaging.MessageQueueInstaller.Install%2A> 指定したものに新規または既存のキューのプロパティを設定、<xref:System.Messaging.MessageQueueInstaller>です。 そのプロパティをリセットするキューが既に存在する場合、<xref:System.Messaging.MessageQueueInstaller>です。 既存のキューがトランザクションでない場合は、削除またはトランザクション キューとして再作成します。  
  
> [!CAUTION]
>  キューを再作成する必要がある場合は、キュー内のメッセージが失われます。  
  
 メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが installutil.exe インストール ユーティリティによってのみです。 ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Install%2A>インストール中にインストールされているメッセージ キューに関連付けられているレジストリ情報を書き込むためのメソッドです。 インストールは、トランザクションが失敗したインストール プロジェクト コンポーネントのインストール中に、以前にインストールされたすべてのコンポーネントがロールバックをインストール前の状態にします。 これは、各コンポーネントを呼び出すことによって実現<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッドです。  
  
 インストールのプロジェクトに関連付けられているすべてのコンポーネントのインストールの成功後が発生したインストール ユーティリティは、インストールをコミットします。 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> インストールが完了したら、<xref:System.Messaging.MessageQueue>キューを適切な初期状態に設定します。 によって、キューが指定されている場合、<xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティは既に存在し、メッセージが表示されて<xref:System.Messaging.MessageQueueInstaller.Commit%2A>メッセージをクリアします。 <xref:System.Messaging.MessageQueueInstaller.Commit%2A>、なく<xref:System.Messaging.MessageQueueInstaller.Install%2A>、、メッセージを削除する操作はロールバックできないため、メッセージを消去します。  
  
 アプリケーションのインストールに使用してプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。 渡される、この状態情報<xref:System.Messaging.MessageQueueInstaller.Install%2A>として、`stateSaver`ユーティリティでは、それぞれがインストールされますに、パラメーターは引き続き更新<xref:System.Messaging.MessageQueueInstaller>インスタンス。 通常、コードのこの状態情報を明示的に変更する必要はありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">比較対象のインストーラー。</param>
        <summary>指定したインストーラーがこのインストーラーと同じ種類のインストールを処理できるかどうかを判断します。</summary>
        <returns>
          このインストーラーと <paramref name="otherInstaller" /> パラメーターで指定したインストーラーが同じ種類のインストールを処理できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、<xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A>返します`true`このインストーラーとで指定された場合にのみ、`otherInstaller`パラメーターが同じ型です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューの説明を取得または設定します。</summary>
        <value>メッセージ キューを説明するラベル。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueue.Label%2A>プロパティはキューで一意である必要はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューに関連付けられたジャーナルの最大サイズを取得または設定します。</summary>
        <value>キューから削除されたメッセージを記録するジャーナル キューの最大サイズ。単位は KB です。 メッセージ キューの既定値は、制限なしです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キューが作成されると、メッセージ キューに自動的に作成キューのジャーナル、新しいキューと同じ場所です。 キュー ジャーナルは、キューから削除されたメッセージを追跡するために使用されます。  
  
 2 種類のメッセージは追跡されません。 その時に、受信タイマーの期限が切れたため、キューから削除されると、キューから削除します。  
  
 アプリケーションは、ジャーナル キューにメッセージを送信することはできません。 ただし、不要になったメッセージを削除するキューを定期的に消去する必要があります。 キューが存在するコンピューターのクォータ ジャーナル キューに格納されているメッセージです。 (コンピューターのクォータは、管理者によって設定します。)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューの最大サイズを取得または設定します。</summary>
        <value>キューの最大サイズ。単位は KB です。 メッセージ キューの既定値は、制限なしです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、キューの最大サイズはキューの作成時に設定されますが、後でリセットできます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>MSMQ 3.0 で導入されました。 キューに関連付けられているマルチキャスト アドレスを取得または設定します。</summary>
        <value>有効なマルチキャスト アドレス (次に示す形式) を格納している <see cref="T:System.String" />、またはキューがマルチキャスト アドレスに関連付けられていないことを示す <see langword="null" />。  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">MSMQ 3.0 がインストールされていません。</exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このオブジェクトが参照するキューの場所を取得または設定します。</summary>
        <value>ネットワーク上でキューの場所を表すパス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構文、<xref:System.Messaging.MessageQueue.Path%2A>プロパティに依存するキューの種類が参照されます。 さまざまな種類のキューを使用する構文を次の表に示します。  
  
|キューの種類|構文|  
|----------------|------------|  
|パブリック キュー|`machineName`\\`queueName`|  
|プライベート キュー|`machineName`\\`Private$`\\`queueName`|  
|ジャーナル キュー|`machineName`\\`queueName`\\`Journal$`|  
|コンピューター ジャーナル キュー|`machineName`\\`Journal$`|  
|コンピューターの配信不能キュー|`machineName`\\`Deadletter$`|  
|コンピューター トランザクション配信不能キュー|`machineName`\\`XactDeadletter$`|  
  
 使用して"です。"ローカル コンピューター用です。  
  
 使用することも、<xref:System.Messaging.MessageQueue.FormatName%2A>または<xref:System.Messaging.MessageQueue.Label%2A>メッセージ キュー アプリケーション オブジェクトのキューのパスを記述します。 次の表は、参照の種類ごとに適切な構文を示します。  
  
|参照|構文|  
|---------------|------------|  
|形式名|FormatName: [*形式名*]|  
|group1|ラベル: [*ラベル*]|  
  
 オフラインで作業する場合は、キューを定義する形式名を使用する必要があります<xref:System.Messaging.MessageQueue.Path%2A>です。 プライマリ ドメイン コント ローラーを解決するのには使用できないために、アプリケーションは、例外をスローしない場合、<xref:System.Messaging.MessageQueue.Path%2A>に、<xref:System.Messaging.MessageQueue.FormatName%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> に無効な値が設定されました。構文が無効である可能性があります。  
  
 - または -  
  
 <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューに関連付けられているアクセス許可を取得または設定します。</summary>
        <value>トラスティとキューに付与するアクセス許可を指定する 1 つ以上のアクセス制御エントリを含む <see cref="T:System.Messaging.AccessControlList" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、パブリックまたはプライベート キューの作成者がフル コントロール、およびキューのプロパティを取得し、アクセス許可を取得し、キューへの書き込みアクセス許可を持つすべてのユーザー、ドメイン グループです。 メッセージ キューが見つかるまで、現在のユーザーと現在のしようとした操作に適用されるアクセス許可リストの各エントリにさらにアクセスします。 許可するように、オペレーティング システム権限を持つユーザーに明示的に拒否する権限よりも優先されます。  
  
 構築する場合、<xref:System.Messaging.MessageQueueInstaller.Permissions%2A>プロパティ、追加<xref:System.Messaging.AccessControlEntry>インスタンスを<xref:System.Messaging.AccessControlList>コレクション。 各アクセス制御エントリを作成する場合は、ジェネリック、または標準のアクセス権を指定できます。 キューの権限は、次の任意の組み合わせを指定できます。  
  
-   削除  
  
-   セキュリティの読み取り  
  
-   セキュリティを書き込み  
  
-   同期  
  
-   所有者を変更します。  
  
-   読み取り  
  
-   書き込み  
  
-   実行  
  
-   必須  
  
-   すべて  
  
-   なし  
  
 これらの権限は、一連のビット フラグ ビットごとの OR を使用して組み合わせることができます。  
  
-   フル コントロール  
  
-   メッセージを削除します。  
  
-   メッセージが表示されます。  
  
-   メッセージをピークします。  
  
-   ジャーナル メッセージを受信します。  
  
-   キューのプロパティを取得します。  
  
-   キューのプロパティを設定します。  
  
-   アクセス許可を取得します。  
  
-   アクセス許可を設定します。  
  
-   キューを所有権します。  
  
-   メッセージを作成します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">インストール前のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>インストール プロシージャによってレジストリに書き込まれたキュー情報をロールバックして、コンピューターをインストール前の状態に復元します。 このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッドの効果を元に戻します、<xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドです。 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> インストールのプロジェクトの任意のコンポーネントのインストールが失敗した場合と呼びます。 <xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドを作成またはキューのプロパティを設定します。 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> キューを削除するか、既存のキューのプロパティをインストール前の値にリセットします。  
  
 メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが InstallUtil.exe インストール ユーティリティによってのみです。 ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>を取り消すには、インストールの失敗の変更後に、インストール プロセスが既に行わします。  
  
 アプリケーションのインストールに使用してプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。 渡される、この状態情報<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>として、`savedState`ユーティリティをロールに、パラメーターは引き続き更新バックアップ<xref:System.Messaging.MessageQueueInstaller>インスタンス。 通常、コードのこの状態情報を明示的に変更する必要はありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューがトランザクションの一部として送信されたメッセージだけを受け入れるかどうかを示す値を取得または設定します。</summary>
        <value>
          キューがトランザクションの一部として送信されるメッセージだけを受け入れる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メッセージは、トランザクションを使用せずに、ローカル トランザクション キューから取得できます。 場合は、トランザクション コンテキストを指定しないと、メッセージ キューの 1 つの内部トランザクションを作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">インストール後のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>レジストリからキュー情報を削除して、インストールされているキューを削除します。 このメソッドは、アンインストール ツールで使用されます。アンインストール ツールは適切なメソッドを自動的に呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A>は`Remove`、<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>も、関連付けられたキューを削除、<xref:System.Messaging.MessageQueue>です。  
  
 メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが InstallUtil.exe インストール ユーティリティによってのみ (アンインストール モードで)。 ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>のインストールで、インストール前の状態に影響を受けた、システムの部分を復元します。 これには、アンインストールされる MessageQueue に関連付けられているレジストリ情報の削除が含まれます。  
  
 アプリケーションのアンインストール ルーチン プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>既にアンインストールされているコンポーネントに関する情報を自動的に維持します。 渡される、この状態情報<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>として、`savedState`ユーティリティをアンインストールそれぞれに、パラメーターは引き続き更新<xref:System.Messaging.MessageQueueInstaller>インスタンス。 通常、コードのこの状態情報を明示的に変更する必要はありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アンインストールするときにインストーラーがキューに対して実行する操作を示す値を取得または設定します。実行できる操作には、削除、インストール前の状態への復元、現在のインストールされた状態の維持があります。</summary>
        <value>
          <see cref="T:System.Configuration.Install.UninstallAction" /> がアンインストールされるときにキューをどの状態にするか示す <see cref="T:System.Messaging.MessageQueue" /> 値のいずれか。 既定値は、<see langword="Remove" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キューをインストールするときに、必要に応じて既存のキューを使用することができます。 これを行う場合は、キューをインストール前の状態に戻るか、現在のインストール後の状態のままにかどうかを決定する必要があります。 キューをインストール前の状態に戻るオプションを選択する場合は、インストール時に、キューから削除されたメッセージは復元されません。 関連付けられているキューのプロパティのみをリセットすることができます、<xref:System.Messaging.MessageQueueInstaller>インストール前の値にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューから取得したメッセージを関連付けられたジャーナル キューにもコピーするかどうかを示す値を取得または設定します。</summary>
        <value>
          キューから取得したメッセージをジャーナル キューにコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ジャーナル キューを使用しての追跡メッセージをキューから取得した後にもできます。 ただし、2 種類のメッセージは追跡されません。 その時間に-受信タイマーの期限が切れると、キューから削除されると、キューから削除します。  
  
 不要になったメッセージを削除するジャーナル キューを定期的に消去する必要があります。 ジャーナル キューの数、journal が配置されているコンピューターのクォータに格納されたメッセージ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>