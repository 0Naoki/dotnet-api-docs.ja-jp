<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fc87874d380b94cda9d24cf45f80842dec7b4c24" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36476879" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type MessageQueueInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dcae3-101">Allows you to install and configure a queue that your application needs in order to run.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcae3-101">Allows you to install and configure a queue that your application needs in order to run.</span>
      </span>
      <span data-ttu-id="dcae3-102">This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcae3-102">This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-103"><xref:System.Messaging.MessageQueueInstaller>インストール ユーティリティによって、キューに関連付けられているレジストリ値の書き込みに使用します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-103">The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue.</span></span> <span data-ttu-id="dcae3-104">インストール ユーティリティの詳細については、次を参照してください。 [Installutil.exe (インストーラー ツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-104">For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span>  
  
 <span data-ttu-id="dcae3-105">継承されるプロジェクト インストーラー クラスを作成、キューをインストールするには<xref:System.Configuration.Install.Installer>、設定と、<xref:System.ComponentModel.RunInstallerAttribute>クラスを`true`です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-105">To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`.</span></span> <span data-ttu-id="dcae3-106">プロジェクト内に作成、<xref:System.Messaging.MessageQueueInstaller>インストールでは、各キューのインスタンスし、インスタンス プロジェクト インストーラー クラスに追加します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-106">Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class.</span></span>  
  
 <span data-ttu-id="dcae3-107">作成するときに、<xref:System.Messaging.MessageQueueInstaller>インスタンスを渡すことができます必要に応じて、既存<xref:System.Messaging.MessageQueue>(たとえばからテスト サーバー) に、<xref:System.Messaging.MessageQueueInstaller.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-107">When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor.</span></span> <span data-ttu-id="dcae3-108">この方法に渡されたキューの設定を反映して自動的に新しいキューの構成設定を提供します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-108">This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in.</span></span> <span data-ttu-id="dcae3-109">プロパティを手動で設定する代わりに、<xref:System.Messaging.MessageQueueInstaller>インスタンスを選択して、既定のコンス トラクターを呼び出す、状態にします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-109">Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor.</span></span>  
  
 <span data-ttu-id="dcae3-110">インストール ユーティリティが呼び出されると、検索、<xref:System.ComponentModel.RunInstallerAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-110">When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>.</span></span> <span data-ttu-id="dcae3-111">場合は`true`、ユーティリティ内のすべてのキューのインストール、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーに関連付けられているコレクション。</span><span class="sxs-lookup"><span data-stu-id="dcae3-111">If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="dcae3-112">場合<xref:System.ComponentModel.RunInstallerAttribute>は`false`、プロジェクト インストーラーは無視されます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-112">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="dcae3-113">他のプロパティを変更する、<xref:System.Messaging.MessageQueueInstaller>インスタンスの前に、または後にインスタンスを追加する、<xref:System.Configuration.Install.Installer.Installers%2A>プロジェクト インストーラーのコレクション。</span><span class="sxs-lookup"><span data-stu-id="dcae3-113">You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer.</span></span> <span data-ttu-id="dcae3-114">たとえば、キューの<xref:System.Messaging.MessageQueue.Path%2A>インストール ユーティリティが実行される前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dcae3-114">For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.</span></span>  
  
 <span data-ttu-id="dcae3-115">メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが installutil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-115">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="dcae3-116">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドの呼び出し、インストール プロセス中に<xref:System.Messaging.MessageQueueInstaller.Commit%2A>場合は、インストールは、例外をスローしませんでした。</span><span class="sxs-lookup"><span data-stu-id="dcae3-116">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception.</span></span> <span data-ttu-id="dcae3-117">バックアップ障害、out、必要に応じて呼び出すことによって<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>の例外を生成したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="dcae3-117">It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.</span></span>  
  
 <span data-ttu-id="dcae3-118">アプリケーションのインストールに使用してプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-118">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="dcae3-119">この状態が継続的に情報として各<xref:System.Messaging.MessageQueueInstaller>ユーティリティによってインスタンスがインストールされています。</span><span class="sxs-lookup"><span data-stu-id="dcae3-119">This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="dcae3-120">通常、コードの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-120">It is not usually necessary for your code to explicitly modify the state information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-121">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-121">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-122">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-122">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          </span>
          <span data-ttu-id="dcae3-123">Does not set any instance properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-123">Does not set any instance properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueueInstaller : System.Messaging.MessageQueue -&gt; System.Messaging.MessageQueueInstaller" Usage="new System.Messaging.MessageQueueInstaller componentToCopy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">
          <span data-ttu-id="dcae3-124">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-124">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcae3-125">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-125">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticate : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-126">Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-126">Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-127">
            <see langword="true" /> キューが認証されたメッセージのみを受け入れる場合それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-127">
              <see langword="true" /> if the queue accepts only authenticated messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dcae3-128">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-128">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-129">認証されていないメッセージが認証されたメッセージだけを受け取るキューに送信されると、メッセージは拒否されます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-129">When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected.</span></span> <span data-ttu-id="dcae3-130">送信元のアプリケーションは設定してメッセージ却下の通知を要求することができます、<xref:System.Messaging.Message.AcknowledgeType%2A>メッセージ。</span><span class="sxs-lookup"><span data-stu-id="dcae3-130">The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message.</span></span> <span data-ttu-id="dcae3-131">それ以外の場合がないメッセージが拒否されたことを示す値ため、配信不能キューに送信する場合を除き、メッセージが失われることができます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-131">Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int16 with get, set" Usage="System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-132">Gets or sets the base priority that is used to route a public queue's messages over the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-132">Gets or sets the base priority that is used to route a public queue's messages over the network.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-133">パブリック キューに送信されるすべてのメッセージの 1 つの基本優先順位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-133">The single base priority for all messages sent to the public queue.</span>
          </span>
          <span data-ttu-id="dcae3-134">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-134">The default is zero (0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-135"><xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>ネットワーク経由でキューのメッセージをルーティングのために使用します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-135">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network.</span></span> <span data-ttu-id="dcae3-136">使用して、<xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>高いキューまたは他のキューに送信されたメッセージをより低い優先順位にメッセージを送信するためです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-136">Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues.</span></span> <span data-ttu-id="dcae3-137">キューの基本優先順位が設定されている場合に送信されたすべてのメッセージには、基本優先度の低いキューにメッセージを送信する場合よりも高い優先度が与えられます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-137">When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority.</span></span> <span data-ttu-id="dcae3-138">キューまたはキューからメッセージを読み取る方法では、キューの基本優先順位を指定しても、メッセージの順序の効果はありません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-138">The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.</span></span>  
  
 <span data-ttu-id="dcae3-139"><xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>にパブリック キューのみには、ドメイン コント ローラーからアクセスするには適用されます (つまり、public 形式名を使用します)。</span><span class="sxs-lookup"><span data-stu-id="dcae3-139">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name).</span></span> <span data-ttu-id="dcae3-140">直接アクセスされるパブリック キューとプライベート キューの基本の優先順位は常に 0 です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-140">The base priority of private queues and of directly accessed public queues is always zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueueInstaller.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-141">Gets or sets an implementation-specific queue type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-141">Gets or sets an implementation-specific queue type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-142">A<see cref="T:System.Guid" />キューのカテゴリ (またはメッセージ キューの種類の id) を表すアプリケーションの使用方法に応じて、キューを分類できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-142">A <see cref="T:System.Guid" /> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used.</span>
          </span>
          <span data-ttu-id="dcae3-143">既定値は <see langword="Guid.empty" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-143">The default is <see langword="Guid.empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-144">キューのカテゴリにより、アプリケーションをその使用方法によって関連付けられているキューを分類します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-144">The queue category enables an application to categorize associated queues according to the way they are used.</span></span> <span data-ttu-id="dcae3-145"><xref:System.Messaging.MessageQueue.Category%2A> Null 参照でもかまいません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-145">The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference.</span></span> <span data-ttu-id="dcae3-146">新しいカテゴリを定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-146">You can also define a new category.</span></span>  
  
 <span data-ttu-id="dcae3-147"><xref:System.Messaging.MessageQueue.Category%2A>プロパティは、メッセージ キューの種類の識別子プロパティは、特定のキューに関連付けられ、読み取り/書き込みへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-147">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write.</span></span> <span data-ttu-id="dcae3-148">使用することができます、<xref:System.Guid.NewGuid%2A>すべてにわたって一意であることが保証される、カテゴリの値を作成するメソッド<xref:System.Guid>値。</span><span class="sxs-lookup"><span data-stu-id="dcae3-148">You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values.</span></span> <span data-ttu-id="dcae3-149">ただし、必要があるからではなく他のすべての他のカテゴリを異なるカテゴリの値に対してのみ<xref:System.Guid>値。</span><span class="sxs-lookup"><span data-stu-id="dcae3-149">However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="dcae3-150">たとえば、設定することができます、<xref:System.Messaging.MessageQueue.Category%2A>キューの 1 つのグループ{00000000-0000-0000-0000-000000000001}と<xref:System.Messaging.MessageQueue.Category%2A>を別のグループの{00000000-0000-0000-0000-000000000002}します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-150">For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="dcae3-151">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-151">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcae3-152">Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-152">Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry.</span>
          </span>
          <span data-ttu-id="dcae3-153">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-153">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-154">メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが installutil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-154">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="dcae3-155">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Install%2A>インストール プロセス中にメソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-155">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="dcae3-156">インストールは、トランザクションが失敗したインストール プロジェクト コンポーネントのインストール中に、以前にインストールされたすべてのコンポーネントがロールバックをインストール前の状態にします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-156">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="dcae3-157">これは、各コンポーネントを呼び出すことによって実現<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-157">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="dcae3-158">インストールのプロジェクトに関連付けられているすべてのコンポーネントのインストールの成功後が発生したインストール ユーティリティは、インストールをコミットします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-158">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="dcae3-159"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> インストールが完了したら、<xref:System.Messaging.MessageQueue>キューを適切な初期状態に設定します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-159"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="dcae3-160">によって、キューが指定されている場合、<xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティは既に存在し、メッセージが表示されて<xref:System.Messaging.MessageQueueInstaller.Commit%2A>メッセージをクリアします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-160">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="dcae3-161"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>、なく<xref:System.Messaging.MessageQueueInstaller.Install%2A>、、メッセージを削除する操作はロールバックできないため、メッセージを消去します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-161"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="dcae3-162">アプリケーションのインストールに使用してプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-162">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="dcae3-163">渡される、この状態情報<xref:System.Messaging.MessageQueueInstaller.Commit%2A>として、`savedState`ユーティリティがコミットされるごとに、パラメーターは引き続き更新<xref:System.Messaging.MessageQueueInstaller>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="dcae3-163">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="dcae3-164">通常、コードのこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-164">Usually, it is not necessary for your code to explicitly modify this state information.</span></span> <span data-ttu-id="dcae3-165">キューがオフの場合は、<xref:System.Messaging.MessageQueueInstaller.Commit%2A>ログのエントリを投稿、`savedState`インストールに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="dcae3-165">When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="messageQueueInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="dcae3-166">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-166">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcae3-167">Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-167">Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-168">メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが installutil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-168">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="dcae3-169"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> プロパティの値の設定にインストール ユーティリティによって使用される、 <xref:System.Messaging.MessageQueueInstaller> 、既存の値に<xref:System.Messaging.MessageQueue>です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-169"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="dcae3-170">場合、<xref:System.Messaging.MessageQueue.Path%2A>の<xref:System.Messaging.MessageQueue>は、空の文字列は、渡された ("") を設定する必要があります、<xref:System.Messaging.MessageQueue.Path%2A>プロパティをインストーラーが実行される前に、空でない値にします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-170">If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (""), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dcae3-171">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-171">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionRequired : System.Messaging.EncryptionRequired with get, set" Usage="System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-172">Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-172">Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-173">1 つ、<see cref="T:System.Messaging.EncryptionRequired" />をキューに送信されたメッセージに必要なレベルの暗号化を示す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-173">One of the <see cref="T:System.Messaging.EncryptionRequired" /> values that indicates the encryption level required on messages sent to the queue.</span>
          </span>
          <span data-ttu-id="dcae3-174">既定値は <see langword="Optional" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-174">The default is <see langword="Optional" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-175">暗号化が指定されている場合、のみ、<xref:System.Messaging.Message.Body%2A>のメッセージを暗号化します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-175">When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted.</span></span> <span data-ttu-id="dcae3-176">その他のプロパティなど、 <xref:System.Messaging.Message.Label%2A>、暗号化されていません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-176">Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="dcae3-177">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-177">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcae3-178">Performs the installation and writes message queue information to the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-178">Performs the installation and writes message queue information to the registry.</span>
          </span>
          <span data-ttu-id="dcae3-179">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-179">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-180"><xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドを選択し、メッセージ キュー情報をレジストリに書き込みます関連付けます、<xref:System.Messaging.MessageQueue>によって指定されたパスに配置されているキューのインスタンス、<xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-180">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property.</span></span> <span data-ttu-id="dcae3-181">キューが既に存在しない場合<xref:System.Messaging.MessageQueueInstaller.Install%2A>トランザクション キューを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-181">If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue.</span></span> <span data-ttu-id="dcae3-182"><xref:System.Messaging.MessageQueueInstaller.Install%2A> 指定したものに新規または既存のキューのプロパティを設定、<xref:System.Messaging.MessageQueueInstaller>です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-182"><xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="dcae3-183">そのプロパティをリセットするキューが既に存在する場合、<xref:System.Messaging.MessageQueueInstaller>です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-183">If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="dcae3-184">既存のキューがトランザクションでない場合は、削除またはトランザクション キューとして再作成します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-184">If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="dcae3-185">キューを再作成する必要がある場合は、キュー内のメッセージが失われます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-185">If it is necessary to recreate the queue, messages in the queue will be lost.</span></span>  
  
 <span data-ttu-id="dcae3-186">メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが installutil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-186">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="dcae3-187">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Install%2A>インストール中にインストールされているメッセージ キューに関連付けられているレジストリ情報を書き込むためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-187">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed.</span></span> <span data-ttu-id="dcae3-188">インストールは、トランザクションが失敗したインストール プロジェクト コンポーネントのインストール中に、以前にインストールされたすべてのコンポーネントがロールバックをインストール前の状態にします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-188">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="dcae3-189">これは、各コンポーネントを呼び出すことによって実現<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-189">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="dcae3-190">インストールのプロジェクトに関連付けられているすべてのコンポーネントのインストールの成功後が発生したインストール ユーティリティは、インストールをコミットします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-190">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="dcae3-191"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> インストールが完了したら、<xref:System.Messaging.MessageQueue>キューを適切な初期状態に設定します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-191"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="dcae3-192">によって、キューが指定されている場合、<xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティは既に存在し、メッセージが表示されて<xref:System.Messaging.MessageQueueInstaller.Commit%2A>メッセージをクリアします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-192">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="dcae3-193"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>、なく<xref:System.Messaging.MessageQueueInstaller.Install%2A>、、メッセージを削除する操作はロールバックできないため、メッセージを消去します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-193"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="dcae3-194">アプリケーションのインストールに使用してプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-194">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="dcae3-195">渡される、この状態情報<xref:System.Messaging.MessageQueueInstaller.Install%2A>として、`stateSaver`ユーティリティでは、それぞれがインストールされますに、パラメーターは引き続き更新<xref:System.Messaging.MessageQueueInstaller>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="dcae3-195">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="dcae3-196">通常、コードのこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-196">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="messageQueueInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">
          <span data-ttu-id="dcae3-197">The installer to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-197">The installer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcae3-198">Determines whether the specified installer can handle the same kind of installation as this installer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-198">Determines whether the specified installer can handle the same kind of installation as this installer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dcae3-199">
            <see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-199">
              <see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-200">通常、<xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A>返します`true`このインストーラーとで指定された場合にのみ、`otherInstaller`パラメーターが同じ型です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-200">Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter are of the same type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-201">Gets or sets a description of the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-201">Gets or sets a description of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-202">メッセージ キューを説明するラベルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-202">The label that describes the message queue.</span>
          </span>
          <span data-ttu-id="dcae3-203">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-203">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-204"><xref:System.Messaging.MessageQueue.Label%2A>プロパティはキューで一意である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-204">The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dcae3-205">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-205">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumJournalSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-206">Gets or sets the maximum size of the journal that is associated with the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-206">Gets or sets the maximum size of the journal that is associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-207">キューから削除されたメッセージを記録するジャーナル キューの最大サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-207">The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue.</span>
          </span>
          <span data-ttu-id="dcae3-208">メッセージ キューの既定値に制限はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-208">The Message Queuing default is no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-209">キューが作成されると、メッセージ キューに自動的に作成キューのジャーナル、新しいキューと同じ場所です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-209">When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue.</span></span> <span data-ttu-id="dcae3-210">キュー ジャーナルは、キューから削除されたメッセージを追跡するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-210">The queue journal is used to track the messages that are removed from the queue.</span></span>  
  
 <span data-ttu-id="dcae3-211">2 種類のメッセージは追跡されません。 その時に、受信タイマーの期限が切れたため、キューから削除されると、キューから削除します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-211">Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="dcae3-212">アプリケーションは、ジャーナル キューにメッセージを送信することはできません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-212">Applications cannot send messages to the journal queue.</span></span> <span data-ttu-id="dcae3-213">ただし、不要になったメッセージを削除するキューを定期的に消去する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dcae3-213">However, you must periodically clear the queue to remove the messages that are no longer needed.</span></span> <span data-ttu-id="dcae3-214">キューが存在するコンピューターのクォータ ジャーナル キューに格納されているメッセージです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-214">Messages stored in journal queues count toward the quota for the computer where the queues reside.</span></span> <span data-ttu-id="dcae3-215">(コンピューターのクォータは、管理者によって設定します。)</span><span class="sxs-lookup"><span data-stu-id="dcae3-215">(The computer quota is set by the administrator.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumQueueSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-216">Gets or sets the maximum size of the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-216">Gets or sets the maximum size of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-217">キューの最大サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-217">The maximum size, in kilobytes, of the queue.</span>
          </span>
          <span data-ttu-id="dcae3-218">メッセージ キューの既定値に制限はありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-218">The Message Queuing default is no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-219">通常、キューの最大サイズはキューの作成時に設定されますが、後でリセットできます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-219">The maximum queue size is typically set at the time of queue creation, although it can be reset later.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddress : string with get, set" Usage="System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-220">Introduced in MSMQ 3.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-220">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="dcae3-221">Gets or sets the multicast address associated with the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-221">Gets or sets the multicast address associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-222">A <see cref="T:System.String" /> (次に示す形式) で有効なマルチキャスト アドレスを格納しているか、<see langword="null" />キューのマルチキャスト アドレスに関連付けられていないことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-222">A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or <see langword="null" />, which indicates that the queue is not associated with a multicast address.</span>
          </span>
          <span data-ttu-id="dcae3-223">  
  
```  
&lt;アドレス&gt;:&lt;ポート&gt;  
```</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-223">  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="dcae3-224">MSMQ 3.0 is not installed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-224">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-225">Gets or sets the location of the queue that is referenced by this object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-225">Gets or sets the location of the queue that is referenced by this object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-226">ネットワーク上でキューの場所を表すパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-226">The path that represents the location of the queue in the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-227">構文、<xref:System.Messaging.MessageQueue.Path%2A>プロパティに依存するキューの種類が参照されます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-227">The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references.</span></span> <span data-ttu-id="dcae3-228">さまざまな種類のキューを使用する構文を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-228">The following table shows the syntax you should use for queues of various types.</span></span>  
  
|<span data-ttu-id="dcae3-229">キューの種類</span><span class="sxs-lookup"><span data-stu-id="dcae3-229">Queue type</span></span>|<span data-ttu-id="dcae3-230">構文</span><span class="sxs-lookup"><span data-stu-id="dcae3-230">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="dcae3-231">パブリック キュー</span><span class="sxs-lookup"><span data-stu-id="dcae3-231">Public queue</span></span>|`machineName`\\`queueName`|  
|<span data-ttu-id="dcae3-232">プライベート キュー</span><span class="sxs-lookup"><span data-stu-id="dcae3-232">Private queue</span></span>|`machineName`\\`Private$`\\`queueName`|  
|<span data-ttu-id="dcae3-233">ジャーナル キュー</span><span class="sxs-lookup"><span data-stu-id="dcae3-233">Journal queue</span></span>|`machineName`\\`queueName`\\`Journal$`|  
|<span data-ttu-id="dcae3-234">コンピューター ジャーナル キュー</span><span class="sxs-lookup"><span data-stu-id="dcae3-234">Machine journal queue</span></span>|`machineName`\\`Journal$`|  
|<span data-ttu-id="dcae3-235">コンピューターの配信不能キュー</span><span class="sxs-lookup"><span data-stu-id="dcae3-235">Machine dead-letter queue</span></span>|`machineName`\\`Deadletter$`|  
|<span data-ttu-id="dcae3-236">コンピューター トランザクション配信不能キュー</span><span class="sxs-lookup"><span data-stu-id="dcae3-236">Machine transactional dead-letter queue</span></span>|`machineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="dcae3-237">使用して"です。"ローカル コンピューター用です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-237">Use "." for the local computer.</span></span>  
  
 <span data-ttu-id="dcae3-238">使用することも、<xref:System.Messaging.MessageQueue.FormatName%2A>または<xref:System.Messaging.MessageQueue.Label%2A>メッセージ キュー アプリケーション オブジェクトのキューのパスを記述します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-238">You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path.</span></span> <span data-ttu-id="dcae3-239">次の表は、参照の種類ごとに適切な構文を示します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-239">The following table shows the proper syntax for each type of reference.</span></span>  
  
|<span data-ttu-id="dcae3-240">参照</span><span class="sxs-lookup"><span data-stu-id="dcae3-240">Reference</span></span>|<span data-ttu-id="dcae3-241">構文</span><span class="sxs-lookup"><span data-stu-id="dcae3-241">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="dcae3-242">形式名</span><span class="sxs-lookup"><span data-stu-id="dcae3-242">Format name</span></span>|<span data-ttu-id="dcae3-243">FormatName: [*形式名*]</span><span class="sxs-lookup"><span data-stu-id="dcae3-243">FormatName:[ *format name* ]</span></span>|  
|<span data-ttu-id="dcae3-244">group1</span><span class="sxs-lookup"><span data-stu-id="dcae3-244">Label</span></span>|<span data-ttu-id="dcae3-245">ラベル: [*ラベル*]</span><span class="sxs-lookup"><span data-stu-id="dcae3-245">Label:[ *label* ]</span></span>|  
  
 <span data-ttu-id="dcae3-246">オフラインで作業する場合は、キューを定義する形式名を使用する必要があります<xref:System.Messaging.MessageQueue.Path%2A>です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-246">If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="dcae3-247">プライマリ ドメイン コント ローラーを解決するのには使用できないために、アプリケーションは、例外をスローしない場合、<xref:System.Messaging.MessageQueue.Path%2A>に、<xref:System.Messaging.MessageQueue.FormatName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-247">If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dcae3-248">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-248">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.</span>
          </span>
          <span data-ttu-id="dcae3-249">-or-  The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-249">-or-  The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Permissions : System.Messaging.AccessControlList with get, set" Usage="System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-250">Gets or sets permissions associated with the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-250">Gets or sets permissions associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-251">A<see cref="T:System.Messaging.AccessControlList" />トラスティおよびキューを付与するアクセス許可を指定する 1 つまたは複数のアクセス制御エントリを格納しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-251">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-252">既定では、パブリックまたはプライベート キューの作成者がフル コントロール、およびキューのプロパティを取得し、アクセス許可を取得し、キューへの書き込みアクセス許可を持つすべてのユーザー、ドメイン グループです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-252">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="dcae3-253">メッセージ キューが見つかるまで、現在のユーザーと現在のしようとした操作に適用されるアクセス許可リストの各エントリにさらにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-253">Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action.</span></span> <span data-ttu-id="dcae3-254">許可するように、オペレーティング システム権限を持つユーザーに明示的に拒否する権限よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-254">As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.</span></span>  
  
 <span data-ttu-id="dcae3-255">構築する場合、<xref:System.Messaging.MessageQueueInstaller.Permissions%2A>プロパティ、追加<xref:System.Messaging.AccessControlEntry>インスタンスを<xref:System.Messaging.AccessControlList>コレクション。</span><span class="sxs-lookup"><span data-stu-id="dcae3-255">When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection.</span></span> <span data-ttu-id="dcae3-256">各アクセス制御エントリを作成する場合は、ジェネリック、または標準のアクセス権を指定できます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-256">When you construct each access control entry, you can specify generic or standard access rights.</span></span> <span data-ttu-id="dcae3-257">キューの権限は、次の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-257">The rights to a queue can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="dcae3-258">削除</span><span class="sxs-lookup"><span data-stu-id="dcae3-258">Delete</span></span>  
  
-   <span data-ttu-id="dcae3-259">セキュリティの読み取り</span><span class="sxs-lookup"><span data-stu-id="dcae3-259">Read Security</span></span>  
  
-   <span data-ttu-id="dcae3-260">セキュリティを書き込み</span><span class="sxs-lookup"><span data-stu-id="dcae3-260">Write Security</span></span>  
  
-   <span data-ttu-id="dcae3-261">同期</span><span class="sxs-lookup"><span data-stu-id="dcae3-261">Synchronize</span></span>  
  
-   <span data-ttu-id="dcae3-262">所有者を変更します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-262">Modify Owner</span></span>  
  
-   <span data-ttu-id="dcae3-263">読み取り</span><span class="sxs-lookup"><span data-stu-id="dcae3-263">Read</span></span>  
  
-   <span data-ttu-id="dcae3-264">書き込み</span><span class="sxs-lookup"><span data-stu-id="dcae3-264">Write</span></span>  
  
-   <span data-ttu-id="dcae3-265">実行</span><span class="sxs-lookup"><span data-stu-id="dcae3-265">Execute</span></span>  
  
-   <span data-ttu-id="dcae3-266">必須</span><span class="sxs-lookup"><span data-stu-id="dcae3-266">Required</span></span>  
  
-   <span data-ttu-id="dcae3-267">すべて</span><span class="sxs-lookup"><span data-stu-id="dcae3-267">All</span></span>  
  
-   <span data-ttu-id="dcae3-268">なし</span><span class="sxs-lookup"><span data-stu-id="dcae3-268">None</span></span>  
  
 <span data-ttu-id="dcae3-269">これらの権限は、一連のビット フラグ ビットごとの OR を使用して組み合わせることができます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-269">These rights are a set of bit flags that you can combine using the bitwise OR:</span></span>  
  
-   <span data-ttu-id="dcae3-270">フル コントロール</span><span class="sxs-lookup"><span data-stu-id="dcae3-270">Full Control</span></span>  
  
-   <span data-ttu-id="dcae3-271">メッセージを削除します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-271">Delete Message</span></span>  
  
-   <span data-ttu-id="dcae3-272">メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-272">Receive Message</span></span>  
  
-   <span data-ttu-id="dcae3-273">メッセージをピークします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-273">Peek Message</span></span>  
  
-   <span data-ttu-id="dcae3-274">ジャーナル メッセージを受信します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-274">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="dcae3-275">キューのプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-275">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="dcae3-276">キューのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-276">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="dcae3-277">アクセス許可を取得します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-277">Get Permissions</span></span>  
  
-   <span data-ttu-id="dcae3-278">アクセス許可を設定します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-278">Set Permissions</span></span>  
  
-   <span data-ttu-id="dcae3-279">キューを所有権します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-279">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="dcae3-280">メッセージを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-280">Write Message</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="dcae3-281">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-281">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcae3-282">Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-282">Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry.</span>
          </span>
          <span data-ttu-id="dcae3-283">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-283">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-284"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッドの効果を元に戻します、<xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-284">The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method.</span></span> <span data-ttu-id="dcae3-285"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> インストールのプロジェクトの任意のコンポーネントのインストールが失敗した場合と呼びます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-285"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails.</span></span> <span data-ttu-id="dcae3-286"><xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドを作成またはキューのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-286">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue.</span></span> <span data-ttu-id="dcae3-287"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> キューを削除するか、既存のキューのプロパティをインストール前の値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-287"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.</span></span>  
  
 <span data-ttu-id="dcae3-288">メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが InstallUtil.exe インストール ユーティリティによってのみです。</span><span class="sxs-lookup"><span data-stu-id="dcae3-288">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility.</span></span> <span data-ttu-id="dcae3-289">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>を取り消すには、インストールの失敗の変更後に、インストール プロセスが既に行わします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-289">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.</span></span>  
  
 <span data-ttu-id="dcae3-290">アプリケーションのインストールに使用してプロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>が既にインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-290">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="dcae3-291">渡される、この状態情報<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>として、`savedState`ユーティリティをロールに、パラメーターは引き続き更新バックアップ<xref:System.Messaging.MessageQueueInstaller>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="dcae3-291">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="dcae3-292">通常、コードのこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-292">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Transactional : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-293">Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-293">Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-294">
            <see langword="true" /> キューはトランザクションの一部として送信されたメッセージだけを受け入れることができる場合それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-294">
              <see langword="true" /> if the queue can only accept messages sent as part of a transaction; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dcae3-295">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-295">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-296">メッセージは、トランザクションを使用せずに、ローカル トランザクション キューから取得できます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-296">Messages can be retrieved from a local transaction queue with or without using a transaction.</span></span> <span data-ttu-id="dcae3-297">場合は、トランザクション コンテキストを指定しないと、メッセージ キューの 1 つの内部トランザクションを作成します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-297">If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="dcae3-298">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-298">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcae3-299">Removes an installation by removing queue information from the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-299">Removes an installation by removing queue information from the registry.</span>
          </span>
          <span data-ttu-id="dcae3-300">This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-300">This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-301">場合、<xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A>は`Remove`、<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>も、関連付けられたキューを削除、<xref:System.Messaging.MessageQueue>です。</span><span class="sxs-lookup"><span data-stu-id="dcae3-301">If the <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> is `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> also deletes the queue associated with the <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="dcae3-302">メソッドを呼び出すこと、通常は、<xref:System.Messaging.MessageQueueInstaller>から、コード内では一般に呼び出すことが InstallUtil.exe インストール ユーティリティによってのみ (アンインストール モードで)。</span><span class="sxs-lookup"><span data-stu-id="dcae3-302">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode).</span></span> <span data-ttu-id="dcae3-303">ユーティリティは、<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>のインストールで、インストール前の状態に影響を受けた、システムの部分を復元します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-303">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states.</span></span> <span data-ttu-id="dcae3-304">これには、アンインストールされる MessageQueue に関連付けられているレジストリ情報の削除が含まれます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-304">This includes deleting registry information that is associated with the MessageQueue being uninstalled.</span></span>  
  
 <span data-ttu-id="dcae3-305">アプリケーションのアンインストール ルーチン プロジェクト インストーラーの<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>既にアンインストールされているコンポーネントに関する情報を自動的に維持します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-305">An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been uninstalled.</span></span> <span data-ttu-id="dcae3-306">渡される、この状態情報<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>として、`savedState`ユーティリティをアンインストールそれぞれに、パラメーターは引き続き更新<xref:System.Messaging.MessageQueueInstaller>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="dcae3-306">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="dcae3-307">通常、コードのこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-307">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-308">Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-308">Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-309">1 つ、<see cref="T:System.Configuration.Install.UninstallAction" />した場合に、キューのままにする状態を示す値、<see cref="T:System.Messaging.MessageQueue" />をアンインストールします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-309">One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the queue in when the <see cref="T:System.Messaging.MessageQueue" /> is uninstalled.</span>
          </span>
          <span data-ttu-id="dcae3-310">既定値は <see langword="Remove" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-310">The default is <see langword="Remove" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-311">キューをインストールするときに、必要に応じて既存のキューを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-311">When you install a queue, you can optionally use an existing queue.</span></span> <span data-ttu-id="dcae3-312">これを行う場合は、キューをインストール前の状態に戻るか、現在のインストール後の状態のままにかどうかを決定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dcae3-312">If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state.</span></span> <span data-ttu-id="dcae3-313">キューをインストール前の状態に戻るオプションを選択する場合は、インストール時に、キューから削除されたメッセージは復元されません。</span><span class="sxs-lookup"><span data-stu-id="dcae3-313">If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored.</span></span> <span data-ttu-id="dcae3-314">関連付けられているキューのプロパティのみをリセットすることができます、<xref:System.Messaging.MessageQueueInstaller>インストール前の値にします。</span><span class="sxs-lookup"><span data-stu-id="dcae3-314">You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcae3-315">Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-315">Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcae3-316">
            <see langword="true" /> ジャーナル キューにキューから取得されるメッセージをコピーするにはそれ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-316">
              <see langword="true" /> to copy messages that are retrieved from the queue to the journal queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dcae3-317">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcae3-317">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcae3-318">ジャーナル キューを使用しての追跡メッセージをキューから取得した後にもできます。</span><span class="sxs-lookup"><span data-stu-id="dcae3-318">A journal queue lets you keep track of messages even after they have been retrieved from the queue.</span></span> <span data-ttu-id="dcae3-319">ただし、2 種類のメッセージは追跡されません。 その時間に-受信タイマーの期限が切れると、キューから削除されると、キューから削除します。</span><span class="sxs-lookup"><span data-stu-id="dcae3-319">However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="dcae3-320">不要になったメッセージを削除するジャーナル キューを定期的に消去する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dcae3-320">A journal queue should be cleared periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="dcae3-321">ジャーナル キューの数、journal が配置されているコンピューターのクォータに格納されたメッセージ。</span><span class="sxs-lookup"><span data-stu-id="dcae3-321">Messages stored in the journal queue count toward the quota for the computer on which the journal is located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>