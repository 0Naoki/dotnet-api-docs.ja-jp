<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30b389866677927f8124e00a5e92e5389eea50f2" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68397277" /></Metadata><TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type MessageQueueInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0911b-101">アプリケーションの実行に必要なキューのインストールと構成ができます。</span><span class="sxs-lookup"><span data-stu-id="0911b-101">Allows you to install and configure a queue that your application needs in order to run.</span></span> <span data-ttu-id="0911b-102">このクラスは、<see cref="T:System.Messaging.MessageQueue" /> をインストールするときに、InstallUtil.exe などのインストール ユーティリティによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-102">This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-103">は<xref:System.Messaging.MessageQueueInstaller> 、インストールユーティリティがキューに関連付けられているレジストリ値を書き込むために使用されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-103">The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue.</span></span> <span data-ttu-id="0911b-104">インストールユーティリティの詳細については、「 [installutil.exe (インストーラーツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0911b-104">For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span>  
  
 <span data-ttu-id="0911b-105">キューをインストールするには<xref:System.Configuration.Install.Installer>、を継承するプロジェクトインストーラークラスを作成し、クラス<xref:System.ComponentModel.RunInstallerAttribute>のをに`true`設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-105">To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`.</span></span> <span data-ttu-id="0911b-106">プロジェクト内で、インストールの<xref:System.Messaging.MessageQueueInstaller>キューごとにインスタンスを作成し、そのインスタンスをプロジェクトインストーラークラスに追加します。</span><span class="sxs-lookup"><span data-stu-id="0911b-106">Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class.</span></span>  
  
 <span data-ttu-id="0911b-107"><xref:System.Messaging.MessageQueueInstaller>インスタンスを作成するときに、必要に応じて<xref:System.Messaging.MessageQueue> 、既存の (たとえば、 <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A>テストサーバーから) をコンストラクターに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="0911b-107">When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor.</span></span> <span data-ttu-id="0911b-108">この方法では、渡されたキューの設定をミラーリングすることによって、新しいキューの構成設定が自動的に提供されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-108">This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in.</span></span> <span data-ttu-id="0911b-109">または、 <xref:System.Messaging.MessageQueueInstaller>インスタンスのプロパティを必要な状態に手動で設定し、パラメーターなしのコンストラクターを呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="0911b-109">Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the parameterless constructor.</span></span>  
  
 <span data-ttu-id="0911b-110">インストールユーティリティが呼び出されると、が検索<xref:System.ComponentModel.RunInstallerAttribute>されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-110">When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>.</span></span> <span data-ttu-id="0911b-111">存在する<xref:System.Configuration.Install.Installer.Installers%2A>場合、ユーティリティは、プロジェクトのインストーラーに関連付けられているコレクション内のすべてのキューを`true`インストールします。</span><span class="sxs-lookup"><span data-stu-id="0911b-111">If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="0911b-112"><xref:System.ComponentModel.RunInstallerAttribute> が`false`の場合、ユーティリティはプロジェクトインストーラーを無視します。</span><span class="sxs-lookup"><span data-stu-id="0911b-112">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="0911b-113">インスタンスの<xref:System.Messaging.MessageQueueInstaller>その他のプロパティは、プロジェクトインストーラーの<xref:System.Configuration.Install.Installer.Installers%2A>コレクションにインスタンスを追加する前または後に変更します。</span><span class="sxs-lookup"><span data-stu-id="0911b-113">You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer.</span></span> <span data-ttu-id="0911b-114">たとえば、インストールユーティリティを実行<xref:System.Messaging.MessageQueue.Path%2A>する前に、キューのを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0911b-114">For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.</span></span>  
  
 <span data-ttu-id="0911b-115">通常は、コード内<xref:System.Messaging.MessageQueueInstaller>からのメソッドを呼び出さず、通常は installutil.exe インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-115">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="0911b-116">ユーティリティは、インストールプロセス<xref:System.Messaging.MessageQueueInstaller.Install%2A>中に自動的にメソッドを呼び出し<xref:System.Messaging.MessageQueueInstaller.Commit%2A> 、インストールで例外がスローされなかった場合はを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0911b-116">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception.</span></span> <span data-ttu-id="0911b-117">必要に応じて、例外を生成した<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>オブジェクトに対してを呼び出すことによって、エラーをバックアップします。</span><span class="sxs-lookup"><span data-stu-id="0911b-117">It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.</span></span>  
  
 <span data-ttu-id="0911b-118">アプリケーションのインストールルーチンでは、プロジェクトインストーラー <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="0911b-118">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="0911b-119">この状態情報は、各<xref:System.Messaging.MessageQueueInstaller>インスタンスがユーティリティによってインストールされると継続的に更新されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-119">This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="0911b-120">通常、コードで状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0911b-120">It is not usually necessary for your code to explicitly modify the state information.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/tools/installutil-exe-installer-tool.md"><span data-ttu-id="0911b-121">Installutil.exe (インストーラー ツール)</span><span class="sxs-lookup"><span data-stu-id="0911b-121">Installutil.exe (Installer Tool)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0911b-122"><see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0911b-122">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0911b-123"><see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0911b-123">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span></span> <span data-ttu-id="0911b-124">インスタンス プロパティは設定しません。</span><span class="sxs-lookup"><span data-stu-id="0911b-124">Does not set any instance properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueueInstaller : System.Messaging.MessageQueue -&gt; System.Messaging.MessageQueueInstaller" Usage="new System.Messaging.MessageQueueInstaller componentToCopy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy"><span data-ttu-id="0911b-125">インストールされる新しいキューのプロパティ設定を決定する <see cref="T:System.Messaging.MessageQueue" /> コンポーネント。</span><span class="sxs-lookup"><span data-stu-id="0911b-125">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed.</span></span></param>
        <summary><span data-ttu-id="0911b-126"><see cref="T:System.Messaging.MessageQueueInstaller" /> クラスの新しいインスタンスを初期化し、インストール設定を既存の <see cref="T:System.Messaging.MessageQueue" /> インスタンスの設定に初期化します。</span><span class="sxs-lookup"><span data-stu-id="0911b-126">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticate : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-127">インストールされるキューが認証済みメッセージだけを受け入れるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-127">Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</span></span></summary>
        <value><span data-ttu-id="0911b-128">キューが認証済みメッセージだけを受け入れる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-128"><see langword="true" /> if the queue accepts only authenticated messages; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0911b-129">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="0911b-129">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-130">認証されていないメッセージのみを受け入れるキューに送信された場合、メッセージは拒否されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-130">When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected.</span></span> <span data-ttu-id="0911b-131">送信元アプリケーションは、メッセージのを設定することによっ<xref:System.Messaging.Message.AcknowledgeType%2A>て、メッセージの拒否通知を要求できます。</span><span class="sxs-lookup"><span data-stu-id="0911b-131">The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message.</span></span> <span data-ttu-id="0911b-132">それ以外の場合、メッセージが拒否されたことは通知されないため、配信不能キューに送信しない限り、メッセージは失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0911b-132">Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int16 with get, set" Usage="System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-133">ネットワーク上でパブリック キューのメッセージをルーティングするときに使用する基本優先順位を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-133">Gets or sets the base priority that is used to route a public queue's messages over the network.</span></span></summary>
        <value><span data-ttu-id="0911b-134">パブリック キューに送信されるすべてのメッセージに適用される単一の基本優先順位。</span><span class="sxs-lookup"><span data-stu-id="0911b-134">The single base priority for all messages sent to the public queue.</span></span> <span data-ttu-id="0911b-135">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="0911b-135">The default is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-136">は<xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> 、ネットワーク経由でキューのメッセージをルーティングするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-136">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network.</span></span> <span data-ttu-id="0911b-137"><xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>を使用して、他のキューに送信されるメッセージの優先度より高いまたは低い優先順位でキューに送信されるメッセージを指定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-137">Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues.</span></span> <span data-ttu-id="0911b-138">キューの基本優先順位が設定されている場合、そのキューに送信されるすべてのメッセージは、基本優先順位が低いキューに送信されるメッセージよりも優先度が高くなります。</span><span class="sxs-lookup"><span data-stu-id="0911b-138">When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority.</span></span> <span data-ttu-id="0911b-139">キューの基本優先順位は、キュー内のメッセージの順序、またはキューからのメッセージの読み取り方法には影響しません。</span><span class="sxs-lookup"><span data-stu-id="0911b-139">The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.</span></span>  
  
 <span data-ttu-id="0911b-140">は<xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> 、ドメインコントローラーを介してアクセスされるパブリックキュー (つまり、パブリック形式名を使用) にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-140">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name).</span></span> <span data-ttu-id="0911b-141">プライベートキューおよび直接アクセスされるパブリックキューの基本優先順位は常に0です。</span><span class="sxs-lookup"><span data-stu-id="0911b-141">The base priority of private queues and of directly accessed public queues is always zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueueInstaller.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.GuidConverter, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-142">実装に固有のキューの種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-142">Gets or sets an implementation-specific queue type.</span></span></summary>
        <value><span data-ttu-id="0911b-143">キュー カテゴリを表す <see cref="T:System.Guid" />、つまりメッセージ キュー型識別子。これによって、アプリケーションは、使用方法に従ってキューを分類できます。</span><span class="sxs-lookup"><span data-stu-id="0911b-143">A <see cref="T:System.Guid" /> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used.</span></span> <span data-ttu-id="0911b-144">既定値は、<see langword="Guid.empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="0911b-144">The default is <see langword="Guid.empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-145">キューカテゴリを使用すると、アプリケーションは、使用方法に応じて、関連付けられたキューを分類できます。</span><span class="sxs-lookup"><span data-stu-id="0911b-145">The queue category enables an application to categorize associated queues according to the way they are used.</span></span> <span data-ttu-id="0911b-146">は null 参照にすることができます。<xref:System.Messaging.MessageQueue.Category%2A></span><span class="sxs-lookup"><span data-stu-id="0911b-146">The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference.</span></span> <span data-ttu-id="0911b-147">新しいカテゴリを定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="0911b-147">You can also define a new category.</span></span>  
  
 <span data-ttu-id="0911b-148">プロパティ<xref:System.Messaging.MessageQueue.Category%2A>は、特定のキューに関連付けられ、読み取り/書き込み可能な "メッセージキューの種類識別子" プロパティへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="0911b-148">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write.</span></span> <span data-ttu-id="0911b-149"><xref:System.Guid.NewGuid%2A>メソッドを使用して、すべて<xref:System.Guid>の値で一意であることが保証されるカテゴリ値を作成できます。</span><span class="sxs-lookup"><span data-stu-id="0911b-149">You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values.</span></span> <span data-ttu-id="0911b-150">ただし、カテゴリ値を他のカテゴリと区別するためにのみ必要です。他<xref:System.Guid>のすべての値からは使用できません。</span><span class="sxs-lookup"><span data-stu-id="0911b-150">However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="0911b-151">たとえば、1つのキューグループ<xref:System.Messaging.MessageQueue.Category%2A>のをに{00000000-0000-0000-0000-000000000001} <xref:System.Messaging.MessageQueue.Category%2A>設定し、別のグループのをに{00000000-0000-0000-0000-000000000002}設定することができます。</span><span class="sxs-lookup"><span data-stu-id="0911b-151">For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="0911b-152">インストール後のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-152">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span></span></param>
        <summary><span data-ttu-id="0911b-153"><see cref="T:System.Messaging.MessageQueue" /> メソッドによってレジストリに書き込まれた <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> インストール情報をコミットして、インストール プロセスを完了します。</span><span class="sxs-lookup"><span data-stu-id="0911b-153">Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry.</span></span> <span data-ttu-id="0911b-154">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0911b-154">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-155">通常は、コード内<xref:System.Messaging.MessageQueueInstaller>からのメソッドを呼び出さず、通常は installutil.exe インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-155">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="0911b-156">ユーティリティは、インストールプロセス<xref:System.Messaging.MessageQueueInstaller.Install%2A>中にメソッドを自動的に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0911b-156">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="0911b-157">インストールはトランザクションであるため、インストール中にインストールプロジェクトコンポーネントでエラーが発生した場合は、以前にインストールされたすべてのコンポーネントがインストール前の状態にロールバックされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-157">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="0911b-158">これは、各コンポーネントの<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッドを呼び出すことによって実現されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-158">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="0911b-159">インストールプロジェクトに関連付けられているすべてのコンポーネントが正常にインストールされると、インストールユーティリティによってインストールがコミットされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-159">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="0911b-160"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>キューを適切な初期<xref:System.Messaging.MessageQueue>状態に設定することによって、のインストールを完了します。</span><span class="sxs-lookup"><span data-stu-id="0911b-160"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="0911b-161"><xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティによって指定されたキューが既に存在<xref:System.Messaging.MessageQueueInstaller.Commit%2A>し、メッセージが含まれている場合、はメッセージをクリアします。</span><span class="sxs-lookup"><span data-stu-id="0911b-161">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="0911b-162"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>では、 <xref:System.Messaging.MessageQueueInstaller.Install%2A>メッセージを削除する操作はロールバックできないため、ではなく、メッセージがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-162"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="0911b-163">アプリケーションのインストールルーチンでは、プロジェクトインストーラー <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="0911b-163">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="0911b-164">この状態情報は、 <xref:System.Messaging.MessageQueueInstaller.Commit%2A> `savedState`パラメーターとしてに渡され、ユーティリティが各<xref:System.Messaging.MessageQueueInstaller>インスタンスをコミットすると継続的に更新されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-164">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="0911b-165">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0911b-165">Usually, it is not necessary for your code to explicitly modify this state information.</span></span> <span data-ttu-id="0911b-166">キューがクリアされると、 <xref:System.Messaging.MessageQueueInstaller.Commit%2A>によって、インストールに`savedState`関連付けられているにログエントリがポストされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-166">When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="messageQueueInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="0911b-167"><see cref="T:System.ComponentModel.IComponent" /> にテンプレートとして使用する <see cref="T:System.Messaging.MessageQueueInstaller" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-167">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />.</span></span></param>
        <summary><span data-ttu-id="0911b-168">インストールするときにメッセージ キューに必要な、<see cref="T:System.Messaging.MessageQueue" /> コンポーネントのプロパティ値をコピーします。</span><span class="sxs-lookup"><span data-stu-id="0911b-168">Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-169">通常は、コード内<xref:System.Messaging.MessageQueueInstaller>からのメソッドを呼び出さず、通常は installutil.exe インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-169">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="0911b-170"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A>は、 <xref:System.Messaging.MessageQueueInstaller>のプロパティ値を既存<xref:System.Messaging.MessageQueue>のの値に設定するために、インストールユーティリティによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-170"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="0911b-171">渡されたのが空の文字列 ("") である場合は、インストーラーを実行する<xref:System.Messaging.MessageQueue.Path%2A>前に、プロパティを空でない値に設定する必要があります。 <xref:System.Messaging.MessageQueue> <xref:System.Messaging.MessageQueue.Path%2A></span><span class="sxs-lookup"><span data-stu-id="0911b-171">If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (""), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0911b-172">この <see cref="T:System.Messaging.MessageQueueInstaller" /> に関連付けられたコンポーネントは <see cref="T:System.Messaging.MessageQueue" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="0911b-172">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionRequired : System.Messaging.EncryptionRequired with get, set" Usage="System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-173">キューがプライベート メッセージ、つまり暗号化されたメッセージだけを受け入れるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-173">Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</span></span></summary>
        <value><span data-ttu-id="0911b-174">キューに送信するメッセージに必要な暗号レベルを示す <see cref="T:System.Messaging.EncryptionRequired" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="0911b-174">One of the <see cref="T:System.Messaging.EncryptionRequired" /> values that indicates the encryption level required on messages sent to the queue.</span></span> <span data-ttu-id="0911b-175">既定値は、<see langword="Optional" /> です。</span><span class="sxs-lookup"><span data-stu-id="0911b-175">The default is <see langword="Optional" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-176">暗号化を指定すると、メッセージ<xref:System.Messaging.Message.Body%2A>ののみが暗号化されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-176">When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted.</span></span> <span data-ttu-id="0911b-177">などの他のプロパティ<xref:System.Messaging.Message.Label%2A>は暗号化されません。</span><span class="sxs-lookup"><span data-stu-id="0911b-177">Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><span data-ttu-id="0911b-178">コミット、ロールバック、またはアンインストール操作を実行するために必要な情報を保存するために使用する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-178">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation.</span></span></param>
        <summary><span data-ttu-id="0911b-179">インストールを実行し、レジストリにメッセージ キュー情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0911b-179">Performs the installation and writes message queue information to the registry.</span></span> <span data-ttu-id="0911b-180">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0911b-180">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-181">メソッド<xref:System.Messaging.MessageQueueInstaller.Install%2A>は、メッセージキュー情報をレジストリに書き込み、その<xref:System.Messaging.MessageQueue>インスタンスを、 <xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティで指定されたパスにあるキューに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="0911b-181">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property.</span></span> <span data-ttu-id="0911b-182">キューが存在しない場合は、 <xref:System.Messaging.MessageQueueInstaller.Install%2A>によってトランザクションキューが作成されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-182">If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue.</span></span> <span data-ttu-id="0911b-183"><xref:System.Messaging.MessageQueueInstaller.Install%2A>新規または既存のキューのプロパティを、 <xref:System.Messaging.MessageQueueInstaller>で指定したものに設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-183"><xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="0911b-184">キューが既に存在する場合、そのプロパティはのプロパティに<xref:System.Messaging.MessageQueueInstaller>リセットされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-184">If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="0911b-185">既存のキューがトランザクションではない場合は、削除された後、トランザクションキューとして再作成されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-185">If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0911b-186">キューを再作成する必要がある場合、キュー内のメッセージは失われます。</span><span class="sxs-lookup"><span data-stu-id="0911b-186">If it is necessary to recreate the queue, messages in the queue will be lost.</span></span>  
  
 <span data-ttu-id="0911b-187">通常は、コード内<xref:System.Messaging.MessageQueueInstaller>からのメソッドを呼び出さず、通常は installutil.exe インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-187">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="0911b-188">インストールプロセス中に自動的<xref:System.Messaging.MessageQueueInstaller.Install%2A>にメソッドが呼び出され、インストールされているメッセージキューに関連付けられているレジストリ情報が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0911b-188">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed.</span></span> <span data-ttu-id="0911b-189">インストールはトランザクションであるため、インストール中にインストールプロジェクトコンポーネントでエラーが発生した場合は、以前にインストールされたすべてのコンポーネントがインストール前の状態にロールバックされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-189">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="0911b-190">これは、各コンポーネントの<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>メソッドを呼び出すことによって実現されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-190">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="0911b-191">インストールプロジェクトに関連付けられているすべてのコンポーネントが正常にインストールされると、インストールユーティリティによってインストールがコミットされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-191">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="0911b-192"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>キューを適切な初期<xref:System.Messaging.MessageQueue>状態に設定することによって、のインストールを完了します。</span><span class="sxs-lookup"><span data-stu-id="0911b-192"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="0911b-193"><xref:System.Messaging.MessageQueueInstaller.Path%2A>プロパティによって指定されたキューが既に存在<xref:System.Messaging.MessageQueueInstaller.Commit%2A>し、メッセージが含まれている場合、はメッセージをクリアします。</span><span class="sxs-lookup"><span data-stu-id="0911b-193">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="0911b-194"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>では、 <xref:System.Messaging.MessageQueueInstaller.Install%2A>メッセージを削除する操作はロールバックできないため、ではなく、メッセージがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-194"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="0911b-195">アプリケーションのインストールルーチンでは、プロジェクトインストーラー <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="0911b-195">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="0911b-196">この状態情報は、 <xref:System.Messaging.MessageQueueInstaller.Install%2A> `stateSaver`パラメーターとしてに渡され、ユーティリティが各<xref:System.Messaging.MessageQueueInstaller>インスタンスをインストールすると継続的に更新されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-196">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="0911b-197">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0911b-197">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="messageQueueInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller"><span data-ttu-id="0911b-198">比較対象のインストーラー。</span><span class="sxs-lookup"><span data-stu-id="0911b-198">The installer to compare.</span></span></param>
        <summary><span data-ttu-id="0911b-199">指定したインストーラーがこのインストーラーと同じ種類のインストールを処理できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="0911b-199">Determines whether the specified installer can handle the same kind of installation as this installer.</span></span></summary>
        <returns><span data-ttu-id="0911b-200">このインストーラーと <paramref name="otherInstaller" /> パラメーターで指定したインストーラーが同じ種類のインストールを処理できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-200"><see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-201">通常、 <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A>は`true` 、このインストーラーと`otherInstaller`パラメーターで指定したインストーラーが同じ型である場合にのみ、を返します。</span><span class="sxs-lookup"><span data-stu-id="0911b-201">Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter are of the same type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-202">キューの説明を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-202">Gets or sets a description of the queue.</span></span></summary>
        <value><span data-ttu-id="0911b-203">メッセージ キューを説明するラベル。</span><span class="sxs-lookup"><span data-stu-id="0911b-203">The label that describes the message queue.</span></span> <span data-ttu-id="0911b-204">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="0911b-204">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-205">プロパティ<xref:System.Messaging.MessageQueue.Label%2A>は、キュー間で一意である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0911b-205">The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0911b-206"><see cref="P:System.Messaging.MessageQueueInstaller.Label" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0911b-206">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumJournalSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-207">キューに関連付けられたジャーナルの最大サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-207">Gets or sets the maximum size of the journal that is associated with the queue.</span></span></summary>
        <value><span data-ttu-id="0911b-208">キューから削除されたメッセージを記録するジャーナル キューの最大サイズ。単位は KB です。</span><span class="sxs-lookup"><span data-stu-id="0911b-208">The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue.</span></span> <span data-ttu-id="0911b-209">メッセージ キューの既定値は、制限なしです。</span><span class="sxs-lookup"><span data-stu-id="0911b-209">The Message Queuing default is no limit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-210">キューが作成されると、メッセージキューによって、新しいキューと同じ場所にキュージャーナルが自動的に作成されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-210">When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue.</span></span> <span data-ttu-id="0911b-211">キュージャーナルは、キューから削除されたメッセージを追跡するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-211">The queue journal is used to track the messages that are removed from the queue.</span></span>  
  
 <span data-ttu-id="0911b-212">2種類のメッセージは追跡されません。有効期限が切れたタイマーが期限切れになったためにキューから削除されるメッセージと、キューから削除されるメッセージです。</span><span class="sxs-lookup"><span data-stu-id="0911b-212">Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="0911b-213">アプリケーションは、ジャーナルキューにメッセージを送信できません。</span><span class="sxs-lookup"><span data-stu-id="0911b-213">Applications cannot send messages to the journal queue.</span></span> <span data-ttu-id="0911b-214">ただし、不要になったメッセージを削除するには、定期的にキューをクリアする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0911b-214">However, you must periodically clear the queue to remove the messages that are no longer needed.</span></span> <span data-ttu-id="0911b-215">ジャーナルキューに格納されているメッセージは、キューが存在するコンピューターのクォータにカウントされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-215">Messages stored in journal queues count toward the quota for the computer where the queues reside.</span></span> <span data-ttu-id="0911b-216">(コンピューターのクォータは管理者によって設定されます)。</span><span class="sxs-lookup"><span data-stu-id="0911b-216">(The computer quota is set by the administrator.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumQueueSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.SizeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-217">キューの最大サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-217">Gets or sets the maximum size of the queue.</span></span></summary>
        <value><span data-ttu-id="0911b-218">キューの最大サイズ。単位は KB です。</span><span class="sxs-lookup"><span data-stu-id="0911b-218">The maximum size, in kilobytes, of the queue.</span></span> <span data-ttu-id="0911b-219">メッセージ キューの既定値は、制限なしです。</span><span class="sxs-lookup"><span data-stu-id="0911b-219">The Message Queuing default is no limit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-220">キューの最大サイズは、通常、キューの作成時に設定されますが、後でリセットすることもできます。</span><span class="sxs-lookup"><span data-stu-id="0911b-220">The maximum queue size is typically set at the time of queue creation, although it can be reset later.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddress : string with get, set" Usage="System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-221">MSMQ 3.0 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="0911b-221">Introduced in MSMQ 3.0.</span></span> <span data-ttu-id="0911b-222">キューに関連付けられているマルチキャスト アドレスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-222">Gets or sets the multicast address associated with the queue.</span></span></summary>
        <value><span data-ttu-id="0911b-223">有効なマルチキャスト アドレス (次に示す形式) を格納している <see cref="T:System.String" />、またはキューがマルチキャスト アドレスに関連付けられていないことを示す <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-223">A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or <see langword="null" />, which indicates that the queue is not associated with a multicast address.</span></span>  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0911b-224">MSMQ 3.0 がインストールされていません。</span><span class="sxs-lookup"><span data-stu-id="0911b-224">MSMQ 3.0 is not installed.</span></span></exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-225">このオブジェクトが参照するキューの場所を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-225">Gets or sets the location of the queue that is referenced by this object.</span></span></summary>
        <value><span data-ttu-id="0911b-226">ネットワーク上でキューの場所を表すパス。</span><span class="sxs-lookup"><span data-stu-id="0911b-226">The path that represents the location of the queue in the network.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-227"><xref:System.Messaging.MessageQueue.Path%2A>プロパティの構文は、参照するキューの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="0911b-227">The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references.</span></span> <span data-ttu-id="0911b-228">次の表は、さまざまな種類のキューに使用する構文を示しています。</span><span class="sxs-lookup"><span data-stu-id="0911b-228">The following table shows the syntax you should use for queues of various types.</span></span>  
  
|<span data-ttu-id="0911b-229">キューの種類</span><span class="sxs-lookup"><span data-stu-id="0911b-229">Queue type</span></span>|<span data-ttu-id="0911b-230">構文</span><span class="sxs-lookup"><span data-stu-id="0911b-230">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="0911b-231">パブリックキュー</span><span class="sxs-lookup"><span data-stu-id="0911b-231">Public queue</span></span>|`machineName`\\`queueName`|  
|<span data-ttu-id="0911b-232">専用キュー</span><span class="sxs-lookup"><span data-stu-id="0911b-232">Private queue</span></span>|`machineName`\\`Private$`\\`queueName`|  
|<span data-ttu-id="0911b-233">ジャーナルキュー</span><span class="sxs-lookup"><span data-stu-id="0911b-233">Journal queue</span></span>|`machineName`\\`queueName`\\`Journal$`|  
|<span data-ttu-id="0911b-234">マシンジャーナルキュー</span><span class="sxs-lookup"><span data-stu-id="0911b-234">Machine journal queue</span></span>|`machineName`\\`Journal$`|  
|<span data-ttu-id="0911b-235">コンピューターの配信不能キュー</span><span class="sxs-lookup"><span data-stu-id="0911b-235">Machine dead-letter queue</span></span>|`machineName`\\`Deadletter$`|  
|<span data-ttu-id="0911b-236">コンピュータートランザクション配信不能キュー</span><span class="sxs-lookup"><span data-stu-id="0911b-236">Machine transactional dead-letter queue</span></span>|`machineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="0911b-237">ローカルコンピューターには "." を使用します。</span><span class="sxs-lookup"><span data-stu-id="0911b-237">Use "." for the local computer.</span></span>  
  
 <span data-ttu-id="0911b-238">また、 <xref:System.Messaging.MessageQueue.FormatName%2A>メッセージキューアプリケーションオブジェクト<xref:System.Messaging.MessageQueue.Label%2A>のまたはを使用して、キューのパスを記述することもできます。</span><span class="sxs-lookup"><span data-stu-id="0911b-238">You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path.</span></span> <span data-ttu-id="0911b-239">次の表は、参照の種類ごとに適切な構文を示しています。</span><span class="sxs-lookup"><span data-stu-id="0911b-239">The following table shows the proper syntax for each type of reference.</span></span>  
  
|<span data-ttu-id="0911b-240">関連項目</span><span class="sxs-lookup"><span data-stu-id="0911b-240">Reference</span></span>|<span data-ttu-id="0911b-241">構文</span><span class="sxs-lookup"><span data-stu-id="0911b-241">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="0911b-242">形式名</span><span class="sxs-lookup"><span data-stu-id="0911b-242">Format name</span></span>|<span data-ttu-id="0911b-243">FormatName: [*形式名*]</span><span class="sxs-lookup"><span data-stu-id="0911b-243">FormatName:[ *format name* ]</span></span>|  
|<span data-ttu-id="0911b-244">group1</span><span class="sxs-lookup"><span data-stu-id="0911b-244">Label</span></span>|<span data-ttu-id="0911b-245">ラベル: [*ラベル*]</span><span class="sxs-lookup"><span data-stu-id="0911b-245">Label:[ *label* ]</span></span>|  
  
 <span data-ttu-id="0911b-246">オフラインで作業している場合は、形式名を使用してキュー <xref:System.Messaging.MessageQueue.Path%2A>を定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0911b-246">If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="0911b-247">そうしないと、アプリケーションは例外をスローし<xref:System.Messaging.MessageQueue.Path%2A> <xref:System.Messaging.MessageQueue.FormatName%2A>ます。これは、プライマリドメインコントローラーがに解決することができないためです。</span><span class="sxs-lookup"><span data-stu-id="0911b-247">If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0911b-248"><see cref="P:System.Messaging.MessageQueueInstaller.Path" /> に無効な値が設定されました。構文が無効である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0911b-248">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.</span></span>  
  
<span data-ttu-id="0911b-249">- または -</span><span class="sxs-lookup"><span data-stu-id="0911b-249">-or-</span></span> 
<span data-ttu-id="0911b-250"><see cref="P:System.Messaging.MessageQueueInstaller.Path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0911b-250">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Permissions : System.Messaging.AccessControlList with get, set" Usage="System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-251">キューに関連付けられているアクセス許可を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-251">Gets or sets permissions associated with the queue.</span></span></summary>
        <value><span data-ttu-id="0911b-252">トラスティとキューに付与するアクセス許可を指定する 1 つ以上のアクセス制御エントリを含む <see cref="T:System.Messaging.AccessControlList" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-252">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-253">既定では、パブリックキューまたは専用キューの作成者にはフルコントロールがあり、ドメイングループのすべてのユーザーは、キュープロパティの取得、アクセス許可の取得、およびキューへの書き込みを行う権限を持っています。</span><span class="sxs-lookup"><span data-stu-id="0911b-253">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="0911b-254">メッセージキューは、現在のユーザーと現在試行されているアクションに適用されるアクセス許可リストのエントリが見つかるまで、各アクセス許可一覧のエントリにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="0911b-254">Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action.</span></span> <span data-ttu-id="0911b-255">オペレーティングシステムのアクセス許可と同様に、ユーザーに対して明示的に拒否する権限は、許可する権限よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-255">As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.</span></span>  
  
 <span data-ttu-id="0911b-256"><xref:System.Messaging.MessageQueueInstaller.Permissions%2A>プロパティを構築するときに、 <xref:System.Messaging.AccessControlEntry> <xref:System.Messaging.AccessControlList>コレクションにインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="0911b-256">When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection.</span></span> <span data-ttu-id="0911b-257">各アクセス制御エントリを作成するときに、汎用または標準のアクセス権を指定できます。</span><span class="sxs-lookup"><span data-stu-id="0911b-257">When you construct each access control entry, you can specify generic or standard access rights.</span></span> <span data-ttu-id="0911b-258">キューに対する権限は、次の任意の組み合わせにすることができます。</span><span class="sxs-lookup"><span data-stu-id="0911b-258">The rights to a queue can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="0911b-259">削除</span><span class="sxs-lookup"><span data-stu-id="0911b-259">Delete</span></span>  
  
-   <span data-ttu-id="0911b-260">セキュリティの読み取り</span><span class="sxs-lookup"><span data-stu-id="0911b-260">Read Security</span></span>  
  
-   <span data-ttu-id="0911b-261">書き込みセキュリティ</span><span class="sxs-lookup"><span data-stu-id="0911b-261">Write Security</span></span>  
  
-   <span data-ttu-id="0911b-262">同期</span><span class="sxs-lookup"><span data-stu-id="0911b-262">Synchronize</span></span>  
  
-   <span data-ttu-id="0911b-263">所有者の変更</span><span class="sxs-lookup"><span data-stu-id="0911b-263">Modify Owner</span></span>  
  
-   <span data-ttu-id="0911b-264">読み取り</span><span class="sxs-lookup"><span data-stu-id="0911b-264">Read</span></span>  
  
-   <span data-ttu-id="0911b-265">Write</span><span class="sxs-lookup"><span data-stu-id="0911b-265">Write</span></span>  
  
-   <span data-ttu-id="0911b-266">実行</span><span class="sxs-lookup"><span data-stu-id="0911b-266">Execute</span></span>  
  
-   <span data-ttu-id="0911b-267">必須</span><span class="sxs-lookup"><span data-stu-id="0911b-267">Required</span></span>  
  
-   <span data-ttu-id="0911b-268">すべて</span><span class="sxs-lookup"><span data-stu-id="0911b-268">All</span></span>  
  
-   <span data-ttu-id="0911b-269">None</span><span class="sxs-lookup"><span data-stu-id="0911b-269">None</span></span>  
  
 <span data-ttu-id="0911b-270">これらの権限はビットフラグのセットで、ビットごとの OR を使用して組み合わせることができます。</span><span class="sxs-lookup"><span data-stu-id="0911b-270">These rights are a set of bit flags that you can combine using the bitwise OR:</span></span>  
  
-   <span data-ttu-id="0911b-271">フル コントロール</span><span class="sxs-lookup"><span data-stu-id="0911b-271">Full Control</span></span>  
  
-   <span data-ttu-id="0911b-272">メッセージの削除</span><span class="sxs-lookup"><span data-stu-id="0911b-272">Delete Message</span></span>  
  
-   <span data-ttu-id="0911b-273">メッセージの受信</span><span class="sxs-lookup"><span data-stu-id="0911b-273">Receive Message</span></span>  
  
-   <span data-ttu-id="0911b-274">メッセージのピーク</span><span class="sxs-lookup"><span data-stu-id="0911b-274">Peek Message</span></span>  
  
-   <span data-ttu-id="0911b-275">ジャーナルメッセージの受信</span><span class="sxs-lookup"><span data-stu-id="0911b-275">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="0911b-276">キューのプロパティを取得する</span><span class="sxs-lookup"><span data-stu-id="0911b-276">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="0911b-277">キューのプロパティの設定</span><span class="sxs-lookup"><span data-stu-id="0911b-277">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="0911b-278">アクセス許可の取得</span><span class="sxs-lookup"><span data-stu-id="0911b-278">Get Permissions</span></span>  
  
-   <span data-ttu-id="0911b-279">アクセス許可を設定する</span><span class="sxs-lookup"><span data-stu-id="0911b-279">Set Permissions</span></span>  
  
-   <span data-ttu-id="0911b-280">キューの所有権を取得する</span><span class="sxs-lookup"><span data-stu-id="0911b-280">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="0911b-281">メッセージの書き込み</span><span class="sxs-lookup"><span data-stu-id="0911b-281">Write Message</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="0911b-282">インストール前のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-282">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span></span></param>
        <summary><span data-ttu-id="0911b-283">インストール プロシージャによってレジストリに書き込まれたキュー情報をロールバックして、コンピューターをインストール前の状態に復元します。</span><span class="sxs-lookup"><span data-stu-id="0911b-283">Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry.</span></span> <span data-ttu-id="0911b-284">このメソッドは、セットアップ ツールで使用されます。セットアップ ツールは適切なメソッドを自動的に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0911b-284">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-285">メソッド<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>は、 <xref:System.Messaging.MessageQueueInstaller.Install%2A>メソッドの効果を元に戻します。</span><span class="sxs-lookup"><span data-stu-id="0911b-285">The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method.</span></span> <span data-ttu-id="0911b-286"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A>は、インストールプロジェクトのコンポーネントのインストールが失敗した場合に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-286"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails.</span></span> <span data-ttu-id="0911b-287">メソッド<xref:System.Messaging.MessageQueueInstaller.Install%2A>は、キューのプロパティを作成または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-287">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue.</span></span> <span data-ttu-id="0911b-288"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A>キューを削除するか、既存のキューのプロパティをインストール前の値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="0911b-288"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.</span></span>  
  
 <span data-ttu-id="0911b-289">通常は、コード内<xref:System.Messaging.MessageQueueInstaller>からのメソッドを呼び出さず、通常は installutil.exe インストールユーティリティによってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-289">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility.</span></span> <span data-ttu-id="0911b-290">インストールが失敗した<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>後、インストールプロセスによって既に行われた変更を元に戻すために、ユーティリティは自動的にメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0911b-290">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.</span></span>  
  
 <span data-ttu-id="0911b-291">アプリケーションのインストールルーチンでは、プロジェクトインストーラー <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="0911b-291">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="0911b-292">この状態情報は、 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> `savedState`パラメーターとしてに渡され、ユーティリティが各<xref:System.Messaging.MessageQueueInstaller>インスタンスをロールバックすると継続的に更新されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-292">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="0911b-293">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0911b-293">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Transactional : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-294">キューがトランザクションの一部として送信されたメッセージだけを受け入れるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-294">Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</span></span></summary>
        <value><span data-ttu-id="0911b-295">キューがトランザクションの一部として送信されるメッセージだけを受け入れる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-295"><see langword="true" /> if the queue can only accept messages sent as part of a transaction; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0911b-296">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="0911b-296">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-297">メッセージは、トランザクションを使用して、または使用せずに、ローカルトランザクションキューから取得できます。</span><span class="sxs-lookup"><span data-stu-id="0911b-297">Messages can be retrieved from a local transaction queue with or without using a transaction.</span></span> <span data-ttu-id="0911b-298">トランザクションコンテキストを指定しない場合、メッセージキューによって1つの内部トランザクションが作成されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-298">If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="0911b-299">インストール後のコンピューターの状態を格納している <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-299">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span></span></param>
        <summary><span data-ttu-id="0911b-300">レジストリからキュー情報を削除して、インストールされているキューを削除します。</span><span class="sxs-lookup"><span data-stu-id="0911b-300">Removes an installation by removing queue information from the registry.</span></span> <span data-ttu-id="0911b-301">このメソッドは、アンインストール ツールで使用されます。アンインストール ツールは適切なメソッドを自動的に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0911b-301">This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-302">がの場合`Remove`は、に関連付けられて<xref:System.Messaging.MessageQueue>いるキューも削除されます。<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A></span><span class="sxs-lookup"><span data-stu-id="0911b-302">If the <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> is `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> also deletes the queue associated with the <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="0911b-303">通常、コード内からのメソッドは呼び出さない<xref:System.Messaging.MessageQueueInstaller>でください。通常は、installutil.exe インストールユーティリティ (アンインストールモード) によってのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-303">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode).</span></span> <span data-ttu-id="0911b-304">ユーティリティは、自動的に<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>メソッドを呼び出して、インストールの影響を受けたシステムの部分をインストール前の状態に復元します。</span><span class="sxs-lookup"><span data-stu-id="0911b-304">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states.</span></span> <span data-ttu-id="0911b-305">これには、アンインストールする MessageQueue に関連付けられているレジストリ情報の削除が含まれます。</span><span class="sxs-lookup"><span data-stu-id="0911b-305">This includes deleting registry information that is associated with the MessageQueue being uninstalled.</span></span>  
  
 <span data-ttu-id="0911b-306">アプリケーションのアンインストールルーチンは、プロジェクトインストーラー <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>を使用して、既にアンインストールされているコンポーネントに関する情報を自動的に管理します。</span><span class="sxs-lookup"><span data-stu-id="0911b-306">An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been uninstalled.</span></span> <span data-ttu-id="0911b-307">この状態情報は、 <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> `savedState`パラメーターとしてに渡され、ユーティリティが各<xref:System.Messaging.MessageQueueInstaller>インスタンスをアンインストールすると継続的に更新されます。</span><span class="sxs-lookup"><span data-stu-id="0911b-307">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="0911b-308">通常、コードでこの状態情報を明示的に変更する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0911b-308">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-309">アンインストールするときにインストーラーがキューに対して実行する操作を示す値を取得または設定します。実行できる操作には、削除、インストール前の状態への復元、現在のインストールされた状態の維持があります。</span><span class="sxs-lookup"><span data-stu-id="0911b-309">Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</span></span></summary>
        <value><span data-ttu-id="0911b-310"><see cref="T:System.Configuration.Install.UninstallAction" /> がアンインストールされるときにキューをどの状態にするか示す <see cref="T:System.Messaging.MessageQueue" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="0911b-310">One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the queue in when the <see cref="T:System.Messaging.MessageQueue" /> is uninstalled.</span></span> <span data-ttu-id="0911b-311">既定値は、<see langword="Remove" /> です。</span><span class="sxs-lookup"><span data-stu-id="0911b-311">The default is <see langword="Remove" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-312">キューをインストールするときに、必要に応じて既存のキューを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="0911b-312">When you install a queue, you can optionally use an existing queue.</span></span> <span data-ttu-id="0911b-313">その場合は、キューをインストール前の状態に戻すか、現在のインストール後の状態のままにするかを決定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0911b-313">If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state.</span></span> <span data-ttu-id="0911b-314">キューをインストール前の状態に戻すことを選択した場合、インストール時にキューから削除されたメッセージは復元されません。</span><span class="sxs-lookup"><span data-stu-id="0911b-314">If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored.</span></span> <span data-ttu-id="0911b-315">に関連付けられているキューのプロパティのみ<xref:System.Messaging.MessageQueueInstaller>を、インストール前の値にリセットできます。</span><span class="sxs-lookup"><span data-stu-id="0911b-315">You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0911b-316">キューから取得したメッセージを関連付けられたジャーナル キューにもコピーするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0911b-316">Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</span></span></summary>
        <value><span data-ttu-id="0911b-317">キューから取得したメッセージをジャーナル キューにコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0911b-317"><see langword="true" /> to copy messages that are retrieved from the queue to the journal queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0911b-318">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="0911b-318">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0911b-319">ジャーナルキューを使用すると、キューからメッセージが取得された後でもメッセージを追跡できます。</span><span class="sxs-lookup"><span data-stu-id="0911b-319">A journal queue lets you keep track of messages even after they have been retrieved from the queue.</span></span> <span data-ttu-id="0911b-320">ただし、次の2種類のメッセージは追跡されません。有効期限が切れたタイマーが期限切れになったときにキューから削除されるメッセージと、キューから削除されるメッセージです。</span><span class="sxs-lookup"><span data-stu-id="0911b-320">However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="0911b-321">不要になったメッセージを削除するには、ジャーナルキューを定期的に消去する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0911b-321">A journal queue should be cleared periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="0911b-322">ジャーナルキューに格納されているメッセージは、ジャーナルが配置されているコンピューターのクォータにカウントされます。</span><span class="sxs-lookup"><span data-stu-id="0911b-322">Messages stored in the journal queue count toward the quota for the computer on which the journal is located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>