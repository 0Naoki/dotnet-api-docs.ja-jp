<Type Name="SecurityContext" FullName="System.Messaging.SecurityContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbe952ec1491fedd917992bf3d66dc1f76373f08" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36553189" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecurityContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="41133-101">キュー内のメッセージのセキュリティ コンテキストを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="41133-101">Represents the security context for a message in a queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41133-102">セキュリティ コンテキストには、内部の証明書、ユーザーの SID では、対応する秘密キー、証明書と送信者の id は、認証を要求するときに、メッセージに添付するために必要などのキャッシュされたセキュリティ情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="41133-102">The security context contains cached security information such as an internal certificate, the corresponding private key, the user's SID, needed to attach a certificate and the sender identifier to a message when requesting authentication.</span></span>  
  
 <span data-ttu-id="41133-103">ASP.NET アプリケーションなどのクライアントは、キューにメッセージを送信するユーザーを偽装する、キューにアクセスするユーザーの id が使用されます。</span><span class="sxs-lookup"><span data-stu-id="41133-103">If a client, such as an ASP.NET application, impersonates a user to send a message to a queue, the identity of the user is used to access the queue.</span></span> <span data-ttu-id="41133-104">キューがリモートの場合は、これらの資格情報がキャッシュされ、その後、キューに送信されるメッセージに使用します。</span><span class="sxs-lookup"><span data-stu-id="41133-104">If the queue is remote, these credentials are cached and used for messages that are subsequently sent to the queue.</span></span> <span data-ttu-id="41133-105">そのため、後続のメッセージで SID は、最初に、キューにメッセージを送信したユーザーのキャッシュされた id になります。</span><span class="sxs-lookup"><span data-stu-id="41133-105">Therefore, the SID in subsequent messages will be the cached identity of the first user that sent a message to the queue.</span></span> <span data-ttu-id="41133-106">最初に、キューにメッセージを送信したユーザーのキャッシュされた id は、後続のユーザーに使用されます。</span><span class="sxs-lookup"><span data-stu-id="41133-106">The cached identity of the first user that sent a message to the queue will be used for subsequent users.</span></span>  
  
 <span data-ttu-id="41133-107">この問題を解決するには、設定のセキュリティ コンテキストを使用して、<xref:System.Messaging.Message.SecurityContext%2A>を現在のユーザーの資格情報がキューにアクセスするために使用されるようにするリモート キューにメッセージを送信する前にします。</span><span class="sxs-lookup"><span data-stu-id="41133-107">To overcome this problem, set the security context using <xref:System.Messaging.Message.SecurityContext%2A> before sending a message to a remote queue to ensure that the current user's credentials are used to gain access to the queue.</span></span> <span data-ttu-id="41133-108">ただし、推奨されるベスト プラクティスには。</span><span class="sxs-lookup"><span data-stu-id="41133-108">However, the suggested best practice is to:</span></span>  
  
1.  <span data-ttu-id="41133-109">認証されているキューのキューを作成します。</span><span class="sxs-lookup"><span data-stu-id="41133-109">Make the queue an authenticated queue.</span></span>  
  
2.  <span data-ttu-id="41133-110">ドメインの id として、ASP.NET アプリケーションを実行し、そのキューへの書き込みアプリケーションを承認します。</span><span class="sxs-lookup"><span data-stu-id="41133-110">Run the ASP.NET application as a domain identity and authorize that application to write to the queue.</span></span>  
  
3.  <span data-ttu-id="41133-111">キューの使用時にユーザーを偽装しません。</span><span class="sxs-lookup"><span data-stu-id="41133-111">Do not impersonate the user when using the queue.</span></span> <span data-ttu-id="41133-112">代わりに、呼び出し元の id を取得し、ASP.NET アプリケーションの承認チェックを実行またはメッセージの一部として、呼び出し元の id を含めるし、受信側アプリケーションの承認チェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="41133-112">Instead, get the caller’s identity and either perform authorization checking in the ASP.NET application or include the caller’s identity as part of the message and perform authorization checking in the receiver application.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="securityContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="41133-113">
            <see cref="T:System.Messaging.SecurityContext" /> によって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="41133-113">Releases all resources used by the <see cref="T:System.Messaging.SecurityContext" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>