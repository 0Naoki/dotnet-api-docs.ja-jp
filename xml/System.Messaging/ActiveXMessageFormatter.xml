<Type Name="ActiveXMessageFormatter" FullName="System.Messaging.ActiveXMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7cac9bffd5e2bdbb33bde6249a98a0594dbcad5f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36477207" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveXMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ActiveXMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveXMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveXMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type ActiveXMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>MSMQ ActiveX コンポーネントと互換性のある形式を使用して、メッセージ キュー メッセージの本文との間でプリミティブ データ型と他のオブジェクトのシリアル化または逆シリアル化を行います。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.ActiveXMessageFormatter> MSMQ COM コントロールを使用するアプリケーションとの相互運用性をできるように、メッセージ キューの COM コンポーネントを使用して送信されたメッセージとの互換性ができます。  
  
 <xref:System.Messaging.ActiveXMessageFormatter>ほとんどのプリミティブとして実装するオブジェクトをシリアル化できる、 `IPersistStream` OLE インターフェイスです。 同じプリミティブのセットを逆シリアル化できるがを実装する COM オブジェクト (たとえば、Visual Basic 6.0 を使用して作成されたオブジェクト) を逆シリアル化時に、作業がさらに`IPersistStream`です。 逆シリアル化するオブジェクトは、.NET Framework アプリケーションにオブジェクトをインポートしてメモリ内でなければなりません。  
  
 アプリケーションがのインスタンスを使用してキューにメッセージを送信すると、<xref:System.Messaging.MessageQueue>クラス、フォーマッタ オブジェクトをストリームにシリアル化し、メッセージ本文に挿入します。 使用してキューから読み取るときに、 <xref:System.Messaging.MessageQueue>、フォーマッタにメッセージ データを逆シリアル化、<xref:System.Messaging.Message.Body%2A>のプロパティ、<xref:System.Messaging.Message>です。  
  
 これを使用して ActiveX のシリアル化が非常にコンパクト、<xref:System.Messaging.ActiveXMessageFormatter>および MSMQ COM がシリアル化の非常に高速メソッドを制御します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveXMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveXMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Messaging.ActiveXMessageFormatter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="activeXMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">検査対象の <see cref="T:System.Messaging.Message" />。</param>
        <summary>フォーマッタがメッセージのコンテンツを逆シリアル化できるかどうかを判断します。</summary>
        <returns>
          <see cref="T:System.Messaging.ActiveXMessageFormatter" /> がメッセージを逆シリアル化できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> 返します`false`を実装していない場合、メッセージ本文が、メッセージ キューの ActiveX コントロールの逆シリアル化できるプリミティブではない場合や、`IPersistStream`インターフェイスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="activeXMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Messaging.ActiveXMessageFormatter" /> と同一の <see cref="T:System.Messaging.ActiveXMessageFormatter" /> クラスのインスタンスを作成します。</summary>
        <returns>この <see cref="T:System.Messaging.ActiveXMessageFormatter" /> のものと同一のプロパティを持つオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、<xref:System.Messaging.MessageQueue>クラス (たとえば、アプリケーションが非同期的に受信して) 場合は、同時に複数のメッセージを受信するためにします。 通常は、アプリケーション コードでこのメソッドを呼び出す必要はありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="InitStreamedObject">
      <MemberSignature Language="C#" Value="public static void InitStreamedObject (object streamedObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitStreamedObject(object streamedObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitStreamedObject (streamedObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitStreamedObject(System::Object ^ streamedObject);" />
      <MemberSignature Language="F#" Value="static member InitStreamedObject : obj -&gt; unit" Usage="System.Messaging.ActiveXMessageFormatter.InitStreamedObject streamedObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamedObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamedObject">
          <see langword="IPersistStreamInit" /> を実装する OLE オブジェクト。</param>
        <summary>
          <see langword="IPersistStream" /> を実装し、<see langword="IPersistStreamInit" /> の呼び出しを要求する COM オブジェクトのシリアル化を支援するユーティリティを提供します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="activeXMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">逆シリアル化する、MSMQ ActiveX コントロール形式の <see cref="T:System.Messaging.Message" />。</param>
        <summary>指定されたメッセージからコンテンツを読み取り、逆シリアル化されたメッセージを含むオブジェクトを作成します。</summary>
        <returns>逆シリアル化されたメッセージ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メッセージの本文がプリミティブ型、メッセージを表すかどうか<xref:System.Messaging.Message.BodyType%2A>プロパティは、次の表で、マネージ型のいずれかを指定する必要があります。  
  
|BodyType 値|マネージ型|  
|--------------------|------------------|  
|VT_LPSTR|<xref:System.Char> 配列 (ASCII エンコーディングを使用して逆シリアル化)|  
|VT_BSTR、VT_LPWSTR|<xref:System.String> (Unicode エンコーディングを使用して逆シリアル化)|  
|VT_VECTOR &AMP;#124; VT_UI1|<xref:System.Byte> 配列|  
|VT_BOOL|<xref:System.Boolean>|  
|VT_CLSID|<xref:System.Guid>|  
|VT_CY|<xref:System.Decimal>|  
|VT_DATE|<xref:System.DateTime>|  
|VT_I1、VT_UI1|<xref:System.Byte>|  
|VT_I2|<xref:System.Int16>|  
|VT_UI2|<xref:System.UInt16>|  
|VT_I4|<xref:System.Int32>|  
|VT_UI4|<xref:System.UInt32>|  
|VT_I8|<xref:System.Int64>|  
|VT_UI8|<xref:System.UInt64>|  
|VT_R4|<xref:System.Single>|  
|VT_R8|<xref:System.Double>|  
|VT_NULL|`null`|  
|VT_STREAMED_OBJECT|<xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パラメーターとして渡された <paramref name="message" /> の <see cref="P:System.Messaging.Message.BodyType" /> プロパティをプリミティブ型に割り当てることができません。また、このプロパティはストリーム化されたオブジェクトを表しません。</exception>
        <exception cref="T:System.NotSupportedException">本文は格納されているオブジェクトを表します。 <see cref="T:System.Messaging.ActiveXMessageFormatter" /> は、格納されているオブジェクトの逆シリアル化をサポートしていません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="activeXMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <see cref="P:System.Messaging.Message.Body" /> プロパティにシリアル化されたオブジェクトが含まれる <see cref="T:System.Messaging.Message" />。</param>
        <param name="obj">メッセージ本文にシリアル化されるオブジェクト。</param>
        <summary>メッセージ本文にオブジェクトをシリアル化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表は、マネージ型の関係を示しています。 および<xref:System.Messaging.Message.BodyType%2A>プロパティです。 シリアル化するオブジェクトがこれらのマネージ型のいずれかを指定する必要がありますまたは OLE を実装する必要があります`IPersistStream`インターフェイスです。  
  
|BodyType 値|マネージ型|  
|--------------------|------------------|  
|VT_LPSTR|<xref:System.Char>|  
|VT_BSTR、VT_LPWSTR|<xref:System.String>|  
|VT_VECTOR &AMP;#124; VT_UI1|<xref:System.Byte>|  
|VT_BOOL|<xref:System.Boolean>|  
|VT_CLSID|<xref:System.Guid>|  
|VT_CY|<xref:System.Decimal>|  
|VT_DATE|<xref:System.DateTime>|  
|VT_I1、VT_UI1|<xref:System.Byte>|  
|VT_I2|<xref:System.Int16>|  
|VT_UI2|<xref:System.UInt16>|  
|VT_I4|<xref:System.Int32>|  
|VT_UI4|<xref:System.UInt32>|  
|VT_I8|<xref:System.Int64>|  
|VT_UI8|<xref:System.UInt64>|  
|VT_R4|<xref:System.Single>|  
|VT_R8|<xref:System.Double>|  
|VT_NULL|`null`|  
|VT_STREAMED_OBJECT|`IPersistStream` (OLE) <xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">シリアル化するオブジェクトがプリミティブではなく、また OLE <see langword="IPersistStream" /> インターフェイスを実装するストリーム化オブジェクトでもありません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>