<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BinaryMessageFormatter.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f9220f5130f7d9cf8c72cc71ccc34de42e5e8ede.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9220f5130f7d9cf8c72cc71ccc34de42e5e8ede</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</source>
          <target state="translated">バイナリ形式を使用して、メッセージ キューのメッセージの本文との間でオブジェクトまたは関連付けられたオブジェクトのグラフ全体のシリアル化または逆シリアル化を行います。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> is very efficient and can be used to serialize most objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>非常に効率的にして、ほとんどのオブジェクトをシリアル化に使用できます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> does.</source>
          <target state="translated">結果は非常にコンパクトで高速で、解析は疎結合としてメッセージングを許可しません、<ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>はします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>Loosely coupled means that the client and the server can independently version the type that is sent and received.</source>
          <target state="translated">疎結合とは、クライアントとサーバーできるいない個別に送受信型のバージョンを意味します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>When the application sends a message to the queue using an instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class, the formatter serializes the object into a stream and inserts it into the message body.</source>
          <target state="translated">アプリケーションがのインスタンスを使用してキューにメッセージを送信すると、<ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>クラス、フォーマッタ オブジェクトをストリームにシリアル化し、メッセージ本文に挿入します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>When reading from a queue using a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, the formatter deserializes the message data into the <ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated">使用してキューから読み取るときに、 <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>、フォーマッタにメッセージ データを逆シリアル化、<ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> provides faster throughput than the <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> 高速なスループット、<ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>Use the <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> when pure speed rather than loosely coupled messaging is desired.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>と純粋な速度の疎結合メッセージングではなくが必要です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> class without specifying a type style or top object assembly style.</source>
          <target state="translated">型スタイルまたはトップ オブジェクト アセンブリのスタイルを指定せずに、<ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.#ctor">
          <source>You must specify values for the <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt;</ph> property (which defines how the root object in a graph is laid out) and the <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt;</ph> property (which defines how object type descriptions are laid out) before using an instance of the <ph id="ph3">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> class to serialize and send a message.</source>
          <target state="translated">値を指定する必要があります、<ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt;</ph>プロパティ (グラフのルート オブジェクトを配置する方法を定義します)、および<ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt;</ph>プロパティ (オブジェクトの種類の説明のレイアウトを定義します) のインスタンスを使用する前に、<ph id="ph3">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>クラスをシリアル化およびメッセージを送信します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
          <source>Determines how the top (root) object of a graph is laid out in the serialized stream.</source>
          <target state="translated">シリアル化されたストリームで、グラフのトップ (ルート) オブジェクトをどのようにレイアウトするかを指定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
          <source>Determines how type descriptions are laid out in the serialized stream.</source>
          <target state="translated">シリアル化されたストリームで、どのように型の記述をレイアウトするかを指定します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> class, specifying the formats of the root object and the type descriptions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> クラスの新しいインスタンスを初期化し、ルート オブジェクトと型の記述の形式を指定します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> to inspect.</source>
          <target state="translated">検査対象の <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>Determines whether the formatter can deserialize the contents of the message.</source>
          <target state="translated">フォーマッタがメッセージのコンテンツを逆シリアル化できるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary message formatter can deserialize the message; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">バイナリ メッセージ フォーマッタがメッセージを逆シリアル化できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.CanRead%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if the message body is not a binary object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.CanRead%2A&gt;</ph> 返します<ph id="ph2">`false`</ph>場合は、メッセージ本文がバイナリ オブジェクトではありません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>On the receiving computer, <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.CanRead%2A&gt;</ph> returns <ph id="ph2">`true`</ph> if the assembly for the class to be deserialized exists locally.</source>
          <target state="translated">受信側のコンピューターで<ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.CanRead%2A&gt;</ph>返します<ph id="ph2">`true`</ph>逆シリアル化するクラスのアセンブリがローカルに存在する場合。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).</source>
          <target state="translated">アセンブリは、グローバル アセンブリ キャッシュ内にあるか、(たとえば、オブジェクトは、カスタム クラスを表す) 場合、アプリケーションにリンクします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Clone">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> class whose read/write properties (the root object and type description formats) are the same as the current <ph id="ph2">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> と同じ読み取り/書き込みプロパティ (ルート オブジェクト形式と型の記述形式) を持っている <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> クラスのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Clone">
          <source>An object whose properties are identical to those of this <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph>, but whose metadata does not specify it to be a formatter class instance.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> とプロパティが同一だが、メタデータによってフォーマッタ クラス インスタンスであることが指定されていないオブジェクト。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Clone">
          <source>This method creates a copy of the formatter and initializes all its properties to the values of this <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>.</source>
          <target state="translated">このメソッドはフォーマッタのコピーを作成し、この値に、すべてのプロパティを初期化<ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Clone">
          <source>It is used for scalability, but does not guarantee read or write thread safety.</source>
          <target state="translated">スケーラビリティに使用されますが、読み取りを保証やしませんスレッド セーフの記述。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, in binary format, to deserialize.</source>
          <target state="translated">逆シリアル化するバイナリ形式の <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>Reads the contents from the given message and creates an object that contains the deserialized message.</source>
          <target state="translated">指定されたメッセージからコンテンツを読み取り、逆シリアル化されたメッセージを含むオブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The deserialized message.</source>
          <target state="translated">逆シリアル化されたメッセージ。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">信頼できないデータをこのメソッドを呼び出すと、セキュリティ上のリスクです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">このメソッドでは、信頼されたデータだけです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>データ検証<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it.</source>
          <target state="translated">メッセージの本文は、バイナリ形式である必要があり、最初にシリアル化したときにメッセージを逆シリアル化に同じのシリアライザーを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>If the body represents a custom class, the assembly for that class must exist locally.</source>
          <target state="translated">本文は、カスタム クラスを表している場合、そのクラスのアセンブリがローカルに存在する必要があります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The message's <ph id="ph1">&lt;see cref="P:System.Messaging.Message.BodyType" /&gt;</ph> property does not indicate a binary object.</source>
          <target state="translated">メッセージの <ph id="ph1">&lt;see cref="P:System.Messaging.Message.BodyType" /&gt;</ph> プロパティがバイナリ オブジェクトを示していません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
          <source>Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</source>
          <target state="translated">アセンブリの検索および読み込みについて、グラフのトップ (ルート) オブジェクトをどのように逆シリアル化するかを定義する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> values that defines the deserialization behavior.</source>
          <target state="translated">逆シリアル化の動作を定義する <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
          <source>Currently, you should accept the default value, <ph id="ph1">`AssemblyStyle`</ph>.</source>
          <target state="translated">現時点では、既定値を受け入れる必要があります<ph id="ph1">`AssemblyStyle`</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
          <source>Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</source>
          <target state="translated">型の記述を、シリアル化されたストリームにどのようにレイアウトするかを定義する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /&gt;</ph> that defines the type description format.</source>
          <target state="translated">型の記述の形式を定義する <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
          <source>Currently, you should accept the default value, <ph id="ph1">`TypesWhenNeeded`</ph>.</source>
          <target state="translated">現時点では、既定値を受け入れる必要があります<ph id="ph1">`TypesWhenNeeded`</ph>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> property will contain the serialized object.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> プロパティにシリアル化されたオブジェクトが含まれる <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The object to be serialized into the message body.</source>
          <target state="translated">メッセージ本文にシリアル化されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>Serializes an object into the body of the message.</source>
          <target state="translated">メッセージ本文にオブジェクトをシリアル化します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The top object format and type format need not be specified to write to the queue as they must be when reading.</source>
          <target state="translated">キューに書き込む必要がある読み取り時に、最上位のオブジェクトの形式と型の形式を指定する必要ありません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt;</ph> properties are used by the formatter only when deserializing a message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt;</ph>プロパティは、メッセージを逆シリアル化時にのみ、フォーマッタで使用されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> can serialize most objects, but the result is not loosely coupled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>ほとんどのオブジェクトをシリアル化できますが、結果は疎結合されていません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>However, it is compact, so the formatter is efficient for large objects.</source>
          <target state="translated">ただしは、コンパクトなので、フォーマッタは、ラージ オブジェクトが効率的です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>