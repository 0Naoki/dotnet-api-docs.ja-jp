<Type Name="BinaryMessageFormatter" FullName="System.Messaging.BinaryMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e10a52fc29a480a4d626cc03f43198b0e711ce77" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70670144" /></Metadata><TypeSignature Language="C#" Value="public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.BinaryMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type BinaryMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="19c3c-101">バイナリ形式を使用して、メッセージ キューのメッセージの本文との間でオブジェクトまたは関連付けられたオブジェクトのグラフ全体のシリアル化または逆シリアル化を行います。</span><span class="sxs-lookup"><span data-stu-id="19c3c-101">Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="19c3c-102">は<xref:System.Messaging.BinaryMessageFormatter>非常に効率的であり、ほとんどのオブジェクトをシリアル化するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="19c3c-102">The <xref:System.Messaging.BinaryMessageFormatter> is very efficient and can be used to serialize most objects.</span></span> <span data-ttu-id="19c3c-103">結果は非常にコンパクトで、解析が高速ですが、 <xref:System.Messaging.XmlMessageFormatter>と同様に疎結合メッセージングを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="19c3c-103">The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does.</span></span> <span data-ttu-id="19c3c-104">疎結合では、クライアントとサーバーは、送受信される型を個別にバージョンを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="19c3c-104">Loosely coupled means that the client and the server can independently version the type that is sent and received.</span></span>  
  
 <span data-ttu-id="19c3c-105">アプリケーションが<xref:System.Messaging.MessageQueue>クラスのインスタンスを使用してメッセージをキューに送信すると、フォーマッタはオブジェクトをストリームにシリアル化し、メッセージ本文に挿入します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-105">When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="19c3c-106">を使用して<xref:System.Messaging.MessageQueue>キューから読み取る場合、フォーマッタはメッセージデータをの<xref:System.Messaging.Message.Body%2A> <xref:System.Messaging.Message>プロパティに逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-106">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="19c3c-107"><xref:System.Messaging.BinaryMessageFormatter>よりも高速なスループット<xref:System.Messaging.XmlMessageFormatter>を提供します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-107"><xref:System.Messaging.BinaryMessageFormatter> provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="19c3c-108">疎結合<xref:System.Messaging.BinaryMessageFormatter>メッセージングではなく、純粋な速度を使用する場合は、を使用します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-108">Use the <xref:System.Messaging.BinaryMessageFormatter> when pure speed rather than loosely coupled messaging is desired.</span></span>  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.XmlMessageFormatter" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="P:System.Messaging.Message.Formatter" />
    <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="19c3c-109"><see cref="T:System.Messaging.BinaryMessageFormatter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-109">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19c3c-110">型スタイルまたはトップ オブジェクト アセンブリのスタイルを指定せずに、<see cref="T:System.Messaging.BinaryMessageFormatter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-110">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class without specifying a type style or top object assembly style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19c3c-111">クラスのインスタンスを<xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A>使用する前に、プロパティ (グラフのルートオブジェクトのレイアウト方法を定義する) とプロパティ (オブジェクトの型の説明をレイアウトする方法を定義します) の値を指定する必要があります。 <xref:System.Messaging.BinaryMessageFormatter>メッセージをシリアル化して送信します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-111">You must specify values for the <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> property (which defines how the root object in a graph is laid out) and the <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> property (which defines how object type descriptions are laid out) before using an instance of the <xref:System.Messaging.BinaryMessageFormatter> class to serialize and send a message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topObjectFormat As FormatterAssemblyStyle, typeFormat As FormatterTypeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle topObjectFormat, System::Runtime::Serialization::Formatters::FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="F#" Value="new System.Messaging.BinaryMessageFormatter : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle * System.Runtime.Serialization.Formatters.FormatterTypeStyle -&gt; System.Messaging.BinaryMessageFormatter" Usage="new System.Messaging.BinaryMessageFormatter (topObjectFormat, typeFormat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topObjectFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="typeFormat" Type="System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Parameters>
      <Docs>
        <param name="topObjectFormat"><span data-ttu-id="19c3c-112">シリアル化されたストリームで、グラフのトップ (ルート) オブジェクトをどのようにレイアウトするかを指定します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-112">Determines how the top (root) object of a graph is laid out in the serialized stream.</span></span></param>
        <param name="typeFormat"><span data-ttu-id="19c3c-113">シリアル化されたストリームで、どのように型の記述をレイアウトするかを指定します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-113">Determines how type descriptions are laid out in the serialized stream.</span></span></param>
        <summary><span data-ttu-id="19c3c-114"><see cref="T:System.Messaging.BinaryMessageFormatter" /> クラスの新しいインスタンスを初期化し、ルート オブジェクトと型の記述の形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-114">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class, specifying the formats of the root object and the type descriptions.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="binaryMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="19c3c-115">検査対象の <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="19c3c-115">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="19c3c-116">フォーマッタがメッセージのコンテンツを逆シリアル化できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-116">Determines whether the formatter can deserialize the contents of the message.</span></span></summary>
        <returns><span data-ttu-id="19c3c-117">バイナリ メッセージ フォーマッタがメッセージを逆シリアル化できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="19c3c-117"><see langword="true" /> if the binary message formatter can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="19c3c-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A>メッセージ`false`本文がバイナリオブジェクトでない場合は、を返します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `false` if the message body is not a binary object.</span></span>  
  
 <span data-ttu-id="19c3c-119">受信側のコンピューターで<xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> 、 `true`逆シリアル化されるクラスのアセンブリがローカルに存在する場合は、を返します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-119">On the receiving computer, <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `true` if the assembly for the class to be deserialized exists locally.</span></span> <span data-ttu-id="19c3c-120">アセンブリは、グローバルアセンブリキャッシュ内に存在するか、アプリケーションにリンクされている必要があります (たとえば、オブジェクトがカスタムクラスを表している場合)。</span><span class="sxs-lookup"><span data-stu-id="19c3c-120">The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19c3c-121"><paramref name="message" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="19c3c-121">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="binaryMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="19c3c-122">現在の <see cref="T:System.Messaging.BinaryMessageFormatter" /> と同じ読み取り/書き込みプロパティ (ルート オブジェクト形式と型の記述形式) を持っている <see cref="T:System.Messaging.BinaryMessageFormatter" /> クラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-122">Creates an instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class whose read/write properties (the root object and type description formats) are the same as the current <see cref="T:System.Messaging.BinaryMessageFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="19c3c-123">この <see cref="T:System.Messaging.BinaryMessageFormatter" /> とプロパティが同一だが、メタデータによってフォーマッタ クラス インスタンスであることが指定されていないオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="19c3c-123">An object whose properties are identical to those of this <see cref="T:System.Messaging.BinaryMessageFormatter" />, but whose metadata does not specify it to be a formatter class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]
 
<span data-ttu-id="19c3c-124">このメソッドは、フォーマッタのコピーを作成し、そのすべてのプロパティをこの<xref:System.Messaging.BinaryMessageFormatter>の値に初期化します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-124">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>.</span></span> <span data-ttu-id="19c3c-125">スケーラビリティのために使用されますが、読み取りまたは書き込みのスレッドセーフは保証されません。</span><span class="sxs-lookup"><span data-stu-id="19c3c-125">It is used for scalability, but does not guarantee read or write thread safety.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="binaryMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="19c3c-126">逆シリアル化するバイナリ形式の <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="19c3c-126">The <see cref="T:System.Messaging.Message" />, in binary format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="19c3c-127">指定されたメッセージからコンテンツを読み取り、逆シリアル化されたメッセージを含むオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-127">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="19c3c-128">逆シリアル化されたメッセージ。</span><span class="sxs-lookup"><span data-stu-id="19c3c-128">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 <span data-ttu-id="19c3c-129">メッセージの本文はバイナリ形式である必要があります。また、メッセージを最初にシリアル化したときと同じシリアライザーを使用して、メッセージを逆シリアル化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="19c3c-129">The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it.</span></span> <span data-ttu-id="19c3c-130">本文がカスタムクラスを表す場合は、そのクラスのアセンブリがローカルに存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="19c3c-130">If the body represents a custom class, the assembly for that class must exist locally.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="19c3c-131">メッセージの <see cref="P:System.Messaging.Message.BodyType" /> プロパティがバイナリ オブジェクトを示していません。</span><span class="sxs-lookup"><span data-stu-id="19c3c-131">The message's <see cref="P:System.Messaging.Message.BodyType" /> property does not indicate a binary object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19c3c-132"><paramref name="message" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="19c3c-132">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TopObjectFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObjectFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle TopObjectFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TopObjectFormat : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle with get, set" Usage="System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTopObjectFormat")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19c3c-133">アセンブリの検索および読み込みについて、グラフのトップ (ルート) オブジェクトをどのように逆シリアル化するかを定義する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-133">Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</span></span></summary>
        <value><span data-ttu-id="19c3c-134">逆シリアル化動作を定義する列挙値の1つ。</span><span class="sxs-lookup"><span data-stu-id="19c3c-134">One of the enumeration values that defines the deserialization behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

<span data-ttu-id="19c3c-135">現時点では、既定値のを`AssemblyStyle`そのまま使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="19c3c-135">Currently, you should accept the default value, `AssemblyStyle`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFormat : System.Runtime.Serialization.Formatters.FormatterTypeStyle with get, set" Usage="System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTypeFormat")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="19c3c-136">型の記述を、シリアル化されたストリームにどのようにレイアウトするかを定義する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-136">Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</span></span></summary>
        <value><span data-ttu-id="19c3c-137">型の説明の形式を定義する列挙値の1つ。</span><span class="sxs-lookup"><span data-stu-id="19c3c-137">One of the enumeration values that defines the type description format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="19c3c-138">現時点では、既定値のを`TypesWhenNeeded`そのまま使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="19c3c-138">Currently, you should accept the default value, `TypesWhenNeeded`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="binaryMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="19c3c-139"><see cref="P:System.Messaging.Message.Body" /> プロパティにシリアル化されたオブジェクトが含まれる <see cref="T:System.Messaging.Message" />。</span><span class="sxs-lookup"><span data-stu-id="19c3c-139">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="19c3c-140">メッセージ本文にシリアル化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="19c3c-140">The object to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="19c3c-141">メッセージ本文にオブジェクトをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="19c3c-141">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 <span data-ttu-id="19c3c-142">上位のオブジェクト形式と型形式は、読み取り時にキューに書き込む必要があるため、指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="19c3c-142">The top object format and type format need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="19c3c-143">プロパティ<xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> と <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> プロパティは、メッセージを逆シリアル化するときにのみ、フォーマッタによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="19c3c-143">The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="19c3c-144">は<xref:System.Messaging.BinaryMessageFormatter>ほとんどのオブジェクトをシリアル化できますが、結果は疎結合されていません。</span><span class="sxs-lookup"><span data-stu-id="19c3c-144">The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled.</span></span> <span data-ttu-id="19c3c-145">ただし、これはコンパクトであるため、フォーマッタは大きなオブジェクトに対して効率的です。</span><span class="sxs-lookup"><span data-stu-id="19c3c-145">However, it is compact, so the formatter is efficient for large objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="19c3c-146"><paramref name="message" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="19c3c-146">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>
