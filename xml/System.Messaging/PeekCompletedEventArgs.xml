<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06d7d0e11493b9c6ffec8fc3198ba8fa4a7120ba" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70696044" /></Metadata><TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type PeekCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> イベントのデータを提供します。 非同期のピーク操作がイベント ハンドラーを呼び出すと、そのクラスのインスタンスがハンドラーに渡されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント通知を使用してキューから非同期的にメッセージをピーク (削除せずに) する場合、メッセージの処理を処理するメソッドを作成する必要があります。 非同期処理を開始<xref:System.Messaging.MessageQueue.BeginPeek%2A>するには、コードでを呼び出す必要があります。 メッセージがピークされると、アプリケーションは<xref:System.Messaging.MessageQueue.PeekCompleted>イベントを介して通知されます。 の<xref:System.Messaging.PeekCompletedEventArgs>インスタンスは、イベントハンドラーを呼び出すイベントデリゲートに渡されます。 <xref:System.Messaging.MessageQueue.PeekCompleted>イベントに関連付けられたデータは、デリゲートの<xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A>パラメーターに格納されます。  
  
 イベントの完了通知を提供するには、イベント通知とコールバックの2つの方法があります。 <xref:System.Messaging.PeekCompletedEventArgs>は、イベント通知と共にのみ使用されます。 コールバックとイベント通知の比較の詳細については、MSDN の「イベントとコールバック」を参照してください。  
  
 <xref:System.Messaging.PeekCompletedEventArgs><xref:System.Messaging.PeekCompletedEventArgs.Message%2A>メンバーを介して、非同期のピーク操作の終了を開始したメッセージへのアクセスを提供します。 これは、メッセージへの代替アクセスで<xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>あり、の呼び出しとほとんど同じように動作します。  
  
   
  
## Examples  
 次のコード例では、 <xref:System.Messaging.MessageQueue.PeekCompleted>イベントのイベントハンドラーを作成し、 <xref:System.Messaging.PeekCompletedEventHandler>を使用してイベントデリゲートに関連付けます。 イベントハンドラー `MyPeekCompleted`は、メッセージをピークし、そのラベルを画面に書き込みます。  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求された非同期操作の結果を取得または設定します。</summary>
        <value>ピーク操作に関連付けられたデータを格納している <see cref="T:System.IAsyncResult" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A>実行中または完了した非同期操作を識別します。 プロパティには、完了する可能性のあるいくつかの非同期操作を決定するのに役立つデータが含まれて<xref:System.Messaging.MessageQueue.EndPeek%2A>います。また、イベントハンドラーに渡されると、は、完了した操作に関連付けられているメッセージにアクセスできるようにします。  
  
 を呼び出す<xref:System.Messaging.MessageQueue.BeginPeek%2A> <xref:System.IAsyncResult>と、操作が完了していないためにメッセージ (存在する場合) がまだ取得されていない場合でも、が直ちに返されます。 は<xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> 、非同期操作の状態を示します。 <xref:System.Messaging.MessageQueue.BeginPeek%2A>オブジェクトを作成します。このオブジェクトは、完了<xref:System.Messaging.MessageQueue.EndPeek%2A>するまで操作全体で変更されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非同期のピーク操作に関連付けられているメッセージを取得します。</summary>
        <value>非同期のピーク操作の最終結果を表す <see cref="T:System.Messaging.Message" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Messaging.PeekCompletedEventArgs.Message%2A>は、非同期のピーク操作の終了を開始したメッセージを取得するための手段を提供します。  
  
 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>は、 <xref:System.Messaging.PeekCompletedEventArgs.Message%2A>プロパティが初めて読み取られるときに呼び出されるため、このプロパティの<xref:System.Messaging.MessageQueue.EndPeek%2A>値を取得する前にを呼び出す必要はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException"><see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> を取得できませんでした。 非同期操作のタイムアウト時間が経過した可能性があります。</exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>
