<Type Name="DefaultPropertiesToSend" FullName="System.Messaging.DefaultPropertiesToSend">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df8693ac81212cc7a750047058bbf2693834f38d" /><Meta Name="ms.sourcegitcommit" Value="43c8e74d92c78325492baf27e41b400443f0dfbf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/08/2019" /><Meta Name="ms.locfileid" Value="68858851" /></Metadata><TypeSignature Language="C#" Value="public class DefaultPropertiesToSend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultPropertiesToSend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.DefaultPropertiesToSend" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultPropertiesToSend" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultPropertiesToSend" />
  <TypeSignature Language="F#" Value="type DefaultPropertiesToSend = class" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0c0ce-101"><see cref="T:System.Messaging.Message" /> インスタンス以外のオブジェクトをメッセージ キューに送信するときに使われるプロパティの既定値を指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-101">Specifies the default property values that will be used when sending objects other than <see cref="T:System.Messaging.Message" /> instances to a message queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-102">に送信されるメッセージに対して、 <xref:System.Messaging.MessageQueue>選択したプロパティの既定値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-102">You can set default values on selected properties for messages sent to a <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="0c0ce-103"><xref:System.Messaging.DefaultPropertiesToSend>は、インスタンス以外<xref:System.Messaging.Message>のオブジェクトがキューに送信されるときに送信されるメッセージの既定のプロパティ値を指定するために使用され`myMessageQueue.Send("hello")`ます<xref:System.Messaging.MessageQueue.Send%2A> 。たとえば、コードフラグメントのメソッドに渡される文字列引数などです。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-103"><xref:System.Messaging.DefaultPropertiesToSend> is used to specify default property values of the message being sent when objects other than <xref:System.Messaging.Message> instances are sent to a queue, for example, the string argument passed into the <xref:System.Messaging.MessageQueue.Send%2A> method in the code fragment, `myMessageQueue.Send("hello")`.</span></span> <span data-ttu-id="0c0ce-104">クラスには、インスタンスを<xref:System.Messaging.Message>明示的に送信する<xref:System.Messaging.DefaultPropertiesToSend>ときに値を提供するのと同じ名前のプロパティがあります。 <xref:System.Messaging.Message></span><span class="sxs-lookup"><span data-stu-id="0c0ce-104">The <xref:System.Messaging.Message> class has corresponding, identically named properties to those in <xref:System.Messaging.DefaultPropertiesToSend> that provide the values when sending a <xref:System.Messaging.Message> instance specifically.</span></span> <span data-ttu-id="0c0ce-105">キューに対してを<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType>指定した場合でも<xref:System.Messaging.Message> 、そのキューにオブジェクトを送信すると、同じ名前<xref:System.Messaging.Message>を持つプロパティの値が<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>キューの値よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-105">Even if you have specified <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> for a queue, sending a <xref:System.Messaging.Message> object to that queue will cause the values for the identically named <xref:System.Messaging.Message> properties to override the queue's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> values.</span></span>  
  
 <span data-ttu-id="0c0ce-106">明示的に設定していないプロパティは、コンストラクター <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A>で指定された値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-106">Properties that you do not set explicitly default to the values specified by the constructor, <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="0c0ce-107">の<xref:System.Messaging.DefaultPropertiesToSend>インスタンスの初期プロパティ値の一覧につい<xref:System.Messaging.DefaultPropertiesToSend>ては、コンストラクターを参照してください。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-107">For a list of initial property values for an instance of <xref:System.Messaging.DefaultPropertiesToSend>, see the <xref:System.Messaging.DefaultPropertiesToSend> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c0ce-108">次のコード例では、メッセージの優先度を使用して、メッセージに対して送信する既定のプロパティを決定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-108">The following code example uses the priority of a message to determine default properties to send for the message.</span></span>  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultPropertiesToSend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.DefaultPropertiesToSend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultPropertiesToSend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c0ce-109"><see cref="T:System.Messaging.DefaultPropertiesToSend" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-109">Initializes a new instance of the <see cref="T:System.Messaging.DefaultPropertiesToSend" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-110">の新しいインスタンスを作成して<xref:System.Messaging.DefaultPropertiesToSend> 、型<xref:System.Messaging.Message>ではないキューに送信されるオブジェクトに関連付ける既定のプロパティ値を定義できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-110">You can create a new instance of <xref:System.Messaging.DefaultPropertiesToSend> to define default property values to associate with objects sent to a queue that are not of type <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="0c0ce-111">オブジェクトを操作<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> <xref:System.Messaging.MessageQueue>するときに、インスタンスが作成され、のメンバーに関連付けられます。<xref:System.Messaging.DefaultPropertiesToSend> <xref:System.Messaging.MessageQueue></span><span class="sxs-lookup"><span data-stu-id="0c0ce-111">When working with <xref:System.Messaging.MessageQueue> objects, a <xref:System.Messaging.DefaultPropertiesToSend> instance is created for you and associated with the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> member of the <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="0c0ce-112">次のコードに示すように、送信するキューの既定のプロパティを定義するにC#は、次の2つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-112">There are two ways to define a queue's default properties to send, as shown in the following C# code.</span></span> <span data-ttu-id="0c0ce-113">このインスタンス<xref:System.Messaging.DefaultPropertiesToSend>の値を設定し、キューの<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType>プロパティに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-113">You can set values for this instance of <xref:System.Messaging.DefaultPropertiesToSend> and associate it with the queue's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> property:</span></span>  
  
```  
DefaultPropertiesToSend myDefaultProperties = new DefaultPropertiesToSend();  
  // Set default values for the properties.  
  myDefaultProperties.Label = "myLabel";  
  myDefaultProperties.Recoverable = false;  
 ...  
  myMessageQueue.DefaultPropertiesToSend = myDefaultProperties;  
  myMessageQueue.Send("hello");  
```  
  
 <span data-ttu-id="0c0ce-114">または、個別に<xref:System.Messaging.MessageQueue>インスタンスの<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>プロパティに値を直接割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-114">Or, you can individually assign values to the <xref:System.Messaging.MessageQueue> instance's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property directly:</span></span>  
  
```  
myMessageQueue.DefaultPropertiesToSend.Label = "myLabel";  
  myMessageQueue.DefaultPropertiesToSend.Recoverable = false;  
...  
  myMessageQueue.Send("hello");  
```  
  
 <span data-ttu-id="0c0ce-115">これらのオプションの2つ目を選択した場合は、 <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A>コンストラクターを明示的に呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-115">If you choose the second of these options, you do not need to call the <xref:System.Messaging.DefaultPropertiesToSend.%23ctor%2A> constructor explicitly.</span></span> <span data-ttu-id="0c0ce-116">たとえば、プロパティの既定値が<xref:System.Messaging.DefaultPropertiesToSend>送信されるメッセージの基準によって異なる場合など、のインスタンスを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-116">You might want to create instances of <xref:System.Messaging.DefaultPropertiesToSend>, for example, if the properties' default values depend on some criterion of the message being sent.</span></span> <span data-ttu-id="0c0ce-117">メッセージをキューに<xref:System.Messaging.DefaultPropertiesToSend>送信する前に、複数のインスタンス<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType>を作成し、1つのインスタンスをキューのプロパティに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-117">You can create multiple <xref:System.Messaging.DefaultPropertiesToSend> instances and assign one to the queue's <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=nameWithType> property before sending the message to the queue.</span></span>  
  
 <span data-ttu-id="0c0ce-118">次の表に、の<xref:System.Messaging.DefaultPropertiesToSend>インスタンスのプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-118">The following table shows initial property values for an instance of <xref:System.Messaging.DefaultPropertiesToSend>.</span></span>  
  
|<span data-ttu-id="0c0ce-119">プロパティ</span><span class="sxs-lookup"><span data-stu-id="0c0ce-119">Property</span></span>|<span data-ttu-id="0c0ce-120">初期値</span><span class="sxs-lookup"><span data-stu-id="0c0ce-120">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeTypes.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|<span data-ttu-id="0c0ce-121">0</span><span class="sxs-lookup"><span data-stu-id="0c0ce-121">0</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|<span data-ttu-id="0c0ce-122">長さ0のバイト配列</span><span class="sxs-lookup"><span data-stu-id="0c0ce-122">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|<span data-ttu-id="0c0ce-123">空の文字列 ("")</span><span class="sxs-lookup"><span data-stu-id="0c0ce-123">An empty string ("")</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="T:System.Messaging.MessagePriority" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeType">
      <MemberSignature Language="C#" Value="public System.Messaging.AcknowledgeTypes AcknowledgeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.AcknowledgeTypes AcknowledgeType" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
      <MemberSignature Language="VB.NET" Value="Public Property AcknowledgeType As AcknowledgeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AcknowledgeTypes AcknowledgeType { System::Messaging::AcknowledgeTypes get(); void set(System::Messaging::AcknowledgeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.AcknowledgeType : System.Messaging.AcknowledgeTypes with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAcknowledgeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AcknowledgeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-124">送信元アプリケーションに返す受信確認メッセージのタイプを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-124">Gets or sets the type of acknowledgement message to be returned to the sending application.</span></span></summary>
        <value><span data-ttu-id="0c0ce-125"><see cref="T:System.Messaging.AcknowledgeTypes" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-125">One of the <see cref="T:System.Messaging.AcknowledgeTypes" /> enumeration values.</span></span> <span data-ttu-id="0c0ce-126">この値を使用して、システムによって管理キューの中にポストされる受信確認メッセージのタイプを決定します。また、受信確認を送信元アプリケーションにいつ返すのかも決定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-126">This value is used to determine the type of acknowledgment messages the system posts in the administration queue and when acknowledgments are returned to the sending application.</span></span> <span data-ttu-id="0c0ce-127">既定値は、<see langword="AcknowledgeTypes.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-127">The default is <see langword="AcknowledgeTypes.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-128">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>は、送信元アプリケーションに返す受信確認メッセージの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-128">The <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property specifies the type of acknowledgment messages to return to the sending application.</span></span> <span data-ttu-id="0c0ce-129">たとえば、メッセージが送信先<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>に到達したとき、取得されたとき、またはタイムアウトによってメッセージが送信先キューから取得または取得されなかった場合に、通知を要求するようにプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-129">For example, set the <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property to request notification when a message reaches its destination, when it is retrieved, or whether a time-out has prevented the message from reaching or being retrieved from the destination queue.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
      </Docs>
    </Member>
    <Member MemberName="AdministrationQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue AdministrationQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue AdministrationQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property AdministrationQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ AdministrationQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdministrationQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AdministrationQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAdministrationQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-130">メッセージ キューによって生成される受信確認メッセージを受け取るキューを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-130">Gets or sets the queue that receives acknowledgement messages generated by Message Queuing.</span></span></summary>
        <value><span data-ttu-id="0c0ce-131">システムによって生成される受信確認メッセージ用の管理キューを指定する <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-131">The <see cref="T:System.Messaging.MessageQueue" /> that specifies the administration queue used for system-generated acknowledgment messages.</span></span> <span data-ttu-id="0c0ce-132">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-132">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-133"><xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>プロパティで指定されたキューは、非トランザクションキューにすることができます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-133">The queue specified in the <xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A> property can be any non-transactional queue.</span></span> <span data-ttu-id="0c0ce-134">管理キューに送信される受信確認メッセージは、元のメッセージが送信先キューに到達したかどうか、およびキューから削除されたかどうかを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-134">The acknowledgment messages sent to the administration queue can indicate whether or not the original message reached its destination queue, and whether or not it was removed from the queue.</span></span>  
  
 <span data-ttu-id="0c0ce-135">プロパティの<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>値が以外`None`の場合、送信側アプリケーションでは、管理キューとして使用するキューを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-135">When the <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property has any value other than `None`, the sending application must specify the queue to be used as the administration queue.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.AdministrationQueue" />
      </Docs>
    </Member>
    <Member MemberName="AppSpecific">
      <MemberSignature Language="C#" Value="public int AppSpecific { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppSpecific" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
      <MemberSignature Language="VB.NET" Value="Public Property AppSpecific As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AppSpecific { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AppSpecific : int with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AppSpecific" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAppSpecific")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-136">アプリケーション固有の追加情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-136">Gets or sets additional, application-specific information.</span></span></summary>
        <value><span data-ttu-id="0c0ce-137">アプリケーション固有の情報。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-137">Information specific to the application.</span></span> <span data-ttu-id="0c0ce-138">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-138">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-139">この<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>プロパティには、アプリケーション固有のインデックスを使用するなど、さまざまな種類のメッセージを整理するために使用できる、アプリケーション固有の追加情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-139">The <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> property contains additional, application-specific information that can be used to organize different types of messages, for example, using application-specific indexes.</span></span> <span data-ttu-id="0c0ce-140">情報を解釈<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>するのは、アプリケーションの役割です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-140">It is the responsibility of the application to interpret <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> information.</span></span>  
  
 <span data-ttu-id="0c0ce-141">可能であれば、メッセージデータは、 <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>プロパティではなく、メッセージの本文に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-141">Where possible, message data should be included in the body of the message rather than in the <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A> property.</span></span>  
  
 <span data-ttu-id="0c0ce-142">外部キューを使用する場合は、 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>プロパティを使用して、メッセージキュー以外のメッセージのプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-142">When working with foreign queues, use the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property to specify non-Message Queuing message properties.</span></span> <span data-ttu-id="0c0ce-143">と<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>同様に、 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>プロパティの内容を理解するのはアプリケーションの役割です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-143">As with <xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>, it is the responsibility of the application to understand the content of the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.Extension" />
        <altmember cref="P:System.Messaging.Message.AppSpecific" />
      </Docs>
    </Member>
    <Member MemberName="AttachSenderId">
      <MemberSignature Language="C#" Value="public bool AttachSenderId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AttachSenderId" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
      <MemberSignature Language="VB.NET" Value="Public Property AttachSenderId As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AttachSenderId { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AttachSenderId : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgAttachSenderId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-144">メッセージに送信者 ID を結び付ける必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-144">Gets or sets a value that indicates whether the sender ID should be attached to the message.</span></span></summary>
        <value><span data-ttu-id="0c0ce-145">差出人 ID をメッセージに結び付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-145"><see langword="true" /> if sender ID should be attached to the message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0c0ce-146">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-146">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-147">Sender ID は、送信ユーザーの識別子を表すバイトの配列です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-147">The sender ID is an array of bytes that represents the identifier of the sending user.</span></span> <span data-ttu-id="0c0ce-148">送信者 ID はメッセージキューによって設定され、受信側キューマネージャーがキューへのアクセス権を持っているかどうかを確認するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-148">The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.</span></span> <span data-ttu-id="0c0ce-149">送信者 ID は、メッセージが送信先キューに到達したときに認証された場合にのみ信頼できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-149">The sender ID is only trustworthy if the message was authenticated when it reached the destination queue.</span></span>  
  
 <span data-ttu-id="0c0ce-150">送信側 ID がメッセージに添付されていない場合、送信元アプリケーションは、メッセージが送信先キューに送信されたときに、メッセージキューがメッセージの送信者を検証しないことを示します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-150">When the sender ID is not attached to the message, the sending application is indicating that Message Queuing should not validate the message's sender when the message is sent to the destination queue.</span></span> <span data-ttu-id="0c0ce-151">送信先キューで認証済みのメッセージのみが受け入れら<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>れ<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> 、 `false`またはがのいずれかである場合、メッセージはキューに到達すると拒否されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-151">If the destination queue only accepts authenticated messages, and either <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> or <xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A> is `false`, the message will be rejected when it reaches the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
        <altmember cref="P:System.Messaging.Message.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.SenderId" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionAlgorithm EncryptionAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionAlgorithm EncryptionAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionAlgorithm As EncryptionAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionAlgorithm EncryptionAlgorithm { System::Messaging::EncryptionAlgorithm get(); void set(System::Messaging::EncryptionAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionAlgorithm : System.Messaging.EncryptionAlgorithm with get, set" Usage="System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgEncryptionAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-152">プライベート メッセージの本文を暗号化するのに使われる暗号化アルゴリズムを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-152">Gets or sets the encryption algorithm used to encrypt the body of a private message.</span></span></summary>
        <value><span data-ttu-id="0c0ce-153"><see cref="T:System.Messaging.EncryptionAlgorithm" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-153">One of the <see cref="T:System.Messaging.EncryptionAlgorithm" /> enumeration values.</span></span> <span data-ttu-id="0c0ce-154">既定値は、<see langword="RC2" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-154">The default is <see langword="RC2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-155">メッセージがプライベートである場合は、メッセージが送信される前に暗号化され、受信時に暗号化が解除されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-155">If a message is private, it is encrypted before it is sent and is decrypted when it is received.</span></span> <span data-ttu-id="0c0ce-156">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>は、プライベートメッセージのメッセージ本文を暗号化するために使用されるアルゴリズムを指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-156">The <xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A> property specifies the algorithm used to encrypt the message body of a private message.</span></span>  
  
 <span data-ttu-id="0c0ce-157">キューでは、受信メッセージを暗号化することが必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-157">A queue can require that incoming messages be encrypted.</span></span> <span data-ttu-id="0c0ce-158">暗号化されていない (非公開の) メッセージが、プライベートメッセージのみを受け入れるキューに送信された場合、またはプライベートメッセージが非プライベートメッセージのみを受け入れるキューに送信された場合、メッセージはキューによって拒否されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-158">If a non-encrypted (non-private) message is sent to a queue that only accepts private messages, or if a private message is sent to a queue that only accepts non-private messages, the message is rejected by the queue.</span></span> <span data-ttu-id="0c0ce-159">送信元アプリケーションは、メッセージが拒否された場合に、送信元アプリケーションに否定受信確認メッセージを返すように要求できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-159">The sending application can request a negative acknowledgment message be returned to the sending application if a message was rejected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.Message.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Extension">
      <MemberSignature Language="C#" Value="public byte[] Extension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Extension" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Extension" />
      <MemberSignature Language="VB.NET" Value="Public Property Extension As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Extension { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Extension : byte[] with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Extension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgExtension")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.ArrayEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-160">メッセージに関連付けられている追加情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-160">Gets or sets additional information associated with the message.</span></span></summary>
        <value><span data-ttu-id="0c0ce-161">メッセージに関連付けられているアプリケーション定義の追加情報を提供するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-161">An array of bytes that provides additional, application-defined information associated with the message.</span></span> <span data-ttu-id="0c0ce-162">既定値は長さ 0 の配列です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-162">The default is a zero-length array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-163">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>は、ラージバイナリオブジェクトなど、メッセージに関連付けられているアプリケーション定義の追加情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-163">The <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property provides for additional application-defined information that is associated with the message, such as a large binary object.</span></span> <span data-ttu-id="0c0ce-164">の内容を解釈するのは、受信側のアプリケーションの役割<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-164">It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>.</span></span>  
  
 <span data-ttu-id="0c0ce-165">可能であれば、メッセージデータは、拡張ではなくメッセージの本文に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-165">Where possible, message data should be included in the body of the message rather than in the extension.</span></span>  
  
 <span data-ttu-id="0c0ce-166">外部キューを使用する場合は、 <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>プロパティを使用して、メッセージキュー以外のメッセージのプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-166">When working with foreign queues, use the <xref:System.Messaging.DefaultPropertiesToSend.Extension%2A> property to specify non-Message Queuing message properties.</span></span>  
  
 <span data-ttu-id="0c0ce-167">外部キューが Microsoft Message Queuing 以外のキューシステムに存在します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-167">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="0c0ce-168">Microsoft Message Queuing は、コネクタアプリケーションを使用して、このようなキューと通信します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-168">Microsoft Message Queuing communicates with such queues through a connector application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AppSpecific" />
        <altmember cref="P:System.Messaging.Message.Extension" />
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Messaging.HashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.HashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As HashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::HashAlgorithm HashAlgorithm { System::Messaging::HashAlgorithm get(); void set(System::Messaging::HashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Messaging.HashAlgorithm with get, set" Usage="System.Messaging.DefaultPropertiesToSend.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgHashAlgorithm")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.HashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-169">メッセージを認証するとき、またはメッセージのデジタル署名を作成するときに使うハッシュ アルゴリズムを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-169">Gets or sets the hashing algorithm used when authenticating messages or creating a digital signature for a message.</span></span></summary>
        <value><span data-ttu-id="0c0ce-170"><see cref="T:System.Messaging.HashAlgorithm" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-170">One of the <see cref="T:System.Messaging.HashAlgorithm" /> enumeration values.</span></span> <span data-ttu-id="0c0ce-171">既定値は、<see langword="MD5" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-171">The default is <see langword="MD5" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-172">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>は、メッセージを認証するとき、またはメッセージのデジタル署名を作成するときに、メッセージキューが使用するハッシュアルゴリズムを識別します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-172">The <xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A> property identifies the hashing algorithm Message Queuing uses when authenticating messages or when creating a digital signature for a message.</span></span>  
  
 <span data-ttu-id="0c0ce-173">送信元コンピューター上のメッセージキューは、メッセージのデジタル署名を作成するときにハッシュアルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-173">Message Queuing on the source computer uses the hashing algorithm when creating a digital signature for a message.</span></span> <span data-ttu-id="0c0ce-174">その後、ターゲットキューマネージャーは、受信時にメッセージを認証するために同じハッシュアルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-174">The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.</span></span>  

 <span data-ttu-id="0c0ce-175">MD5 の衝突の問題により、Microsoft は SHA256 を推奨しています。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-175">Due to collision problems with MD5, Microsoft recommends SHA256.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.Message.HashAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgLabel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-176">メッセージを記述するアプリケーション定義の文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-176">Gets or sets an application-defined string that describes the message.</span></span></summary>
        <value><span data-ttu-id="0c0ce-177">メッセージのラベル。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-177">The label of the message.</span></span> <span data-ttu-id="0c0ce-178">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-178">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-179">メッセージラベルは、表示目的で使用したり、ラベル値に基づいてメッセージを選択的に処理したりするために使用できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-179">A message label can be used for display purposes, for example, or to selectively process messages based on the label value.</span></span> <span data-ttu-id="0c0ce-180">メッセージラベルの最大長は 249 Unicode 文字です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-180">The maximum length for a message label is 249 Unicode characters.</span></span> <span data-ttu-id="0c0ce-181">ラベルは、メッセージ全体で一意である必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-181">The label does not need to be unique across messages.</span></span>  
  
 <span data-ttu-id="0c0ce-182">メッセージキューとメッセージラベルは、アプリケーション定義の値を表します。この値は、人間が判読できる用語でキューまたはメッセージを識別するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-182">Message queue and message labels represent an application-defined value that can help to identify the queue or message in human-readable terms.</span></span> <span data-ttu-id="0c0ce-183">ラベルの内容を解釈するのは、アプリケーションの役割です。メッセージキューアプリケーションに固有の意味はありません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-183">It is the responsibility of the application to interpret label contents; they have no intrinsic meaning to the Message Queuing application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessagePriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As MessagePriority" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePriority Priority { System::Messaging::MessagePriority get(); void set(System::Messaging::MessagePriority value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : System.Messaging.MessagePriority with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgPriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-184">キュー内でのメッセージの格納位置の確認に使用される、メッセージの優先順位を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-184">Gets or sets the message priority, which is used to determine where the message is placed in the queue.</span></span></summary>
        <value><span data-ttu-id="0c0ce-185">非トランザクション メッセージの優先順位を表す <see cref="T:System.Messaging.MessagePriority" /> 列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-185">One of the <see cref="T:System.Messaging.MessagePriority" /> enumeration values that represents the priority level of a non-transactional message.</span></span> <span data-ttu-id="0c0ce-186">既定値は、<see langword="Normal" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-186">The default is <see langword="Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-187">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>は、メッセージキューがルーティングされている間にメッセージを処理する方法、およびメッセージが送信先に到達したときにキューに格納される場所に影響します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-187">The <xref:System.Messaging.DefaultPropertiesToSend.Priority%2A> property affects how Message Queuing handles the message while it is en route, as well as where the message is placed in the queue when it reaches its destination.</span></span> <span data-ttu-id="0c0ce-188">優先順位の高いメッセージは、ルーティング中に優先され、キューの先頭に向かって挿入されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-188">Higher priority messages are given preference during routing and inserted toward the front of the queue.</span></span> <span data-ttu-id="0c0ce-189">優先順位の同じメッセージは、到達時刻に応じてキュー内に配置されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-189">Messages with the same priority are placed in the queue according to their arrival time.</span></span>  
  
 <span data-ttu-id="0c0ce-190">メッセージの優先度は、非トランザクションメッセージに対してのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-190">Message priority can only be set meaningfully for non-transactional messages.</span></span> <span data-ttu-id="0c0ce-191">トランザクションメッセージの優先度は、自動的に`Lowest`に設定されます。これにより、トランザクションメッセージの優先度が無視されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-191">The priority for transactional messages is automatically set to `Lowest`, which causes transactional message priority to be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.BasePriority" />
        <altmember cref="P:System.Messaging.Message.Priority" />
        <altmember cref="T:System.Messaging.MessagePriority" />
      </Docs>
    </Member>
    <Member MemberName="Recoverable">
      <MemberSignature Language="C#" Value="public bool Recoverable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Recoverable" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.Recoverable" />
      <MemberSignature Language="VB.NET" Value="Public Property Recoverable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Recoverable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Recoverable : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.Recoverable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgRecoverable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-192">コンピューターの障害やネットワークの問題が発生したときにメッセージの配信が保証されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-192">Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</span></span></summary>
        <value><span data-ttu-id="0c0ce-193">送信中にメッセージをディスクに保存することによって配信が保証される場合は <see langword="true" />、配信が保証されない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-193"><see langword="true" /> if the message is guaranteed delivery by saving it to disk while en route; <see langword="false" /> if delivery is not assured.</span></span> <span data-ttu-id="0c0ce-194">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-194">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-195">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>は、メッセージが送信先キューに到達している間にコンピューターがクラッシュした場合でも、メッセージの配信を保証するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-195">The <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> property indicates whether delivery of a message is guaranteed, even if a computer crashes while the message is en route to the destination queue.</span></span>  
  
 <span data-ttu-id="0c0ce-196">メッセージの配信が保証される場合、メッセージは、次のコンピューターに正常に転送されるまで、経路に沿ってすべての手順でローカルに保存されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-196">If delivery of a message is guaranteed, the message is stored locally at every step along the route until the message is successfully forwarded to the next computer.</span></span> <span data-ttu-id="0c0ce-197">を on `true` <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> に設定すると、スループットに影響する可能性があります。<xref:System.Messaging.DefaultPropertiesToSend></span><span class="sxs-lookup"><span data-stu-id="0c0ce-197">Setting <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> to `true` on <xref:System.Messaging.DefaultPropertiesToSend> could affect the throughput.</span></span>  
  
 <span data-ttu-id="0c0ce-198">メッセージがトランザクションである場合、メッセージキューは、がに<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> `true`設定されているかどうかに関係なく、メッセージを回復可能として自動的に処理します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-198">If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of whether <xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.Recoverable" />
      </Docs>
    </Member>
    <Member MemberName="ResponseQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue ResponseQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue ResponseQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ ResponseQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.DefaultPropertiesToSend.ResponseQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgResponseQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-199">アプリケーションによって生成される応答メッセージを受け取るキューを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-199">Gets or sets the queue that receives application-generated response messages.</span></span></summary>
        <value><span data-ttu-id="0c0ce-200">アプリケーションによって生成される応答メッセージが返される <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-200">The <see cref="T:System.Messaging.MessageQueue" /> to which application-generated response messages are returned.</span></span> <span data-ttu-id="0c0ce-201">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-201">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-202">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>は、アプリケーションによって生成される応答メッセージを受信するキューを識別します。このキューは、受信側アプリケーションによって送信元アプリケーションに返されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-202">The <xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A> property identifies the queue that receives application-generated response messages that are returned to the sending application by the receiving application.</span></span> <span data-ttu-id="0c0ce-203">応答キューは、アプリケーションがメッセージを送信するときに、送信元アプリケーションによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-203">Response queues are specified by the sending application when the application sends its messages.</span></span> <span data-ttu-id="0c0ce-204">使用できる任意のキューを応答キューとして指定できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-204">Any available queue can be specified as a response queue.</span></span>  
  
 <span data-ttu-id="0c0ce-205">応答キューに対して返されるメッセージは、アプリケーション固有です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-205">Messages returned to the response queue are application-specific.</span></span> <span data-ttu-id="0c0ce-206">アプリケーションでは、メッセージの内容だけでなく、メッセージを受信したときに実行される処理を定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-206">The application must define what is in the messages as well as what is to be done when a message is received.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.Message.ResponseQueue" />
      </Docs>
    </Member>
    <Member MemberName="TimeToBeReceived">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToBeReceived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToBeReceived" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToBeReceived As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToBeReceived { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToBeReceived : TimeSpan with get, set" Usage="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToBeReceived")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.TimeoutConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-207">メッセージが送信先キューから取得されるまでのタイム リミットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-207">Gets or sets the time limit for the message to be retrieved from the destination queue.</span></span></summary>
        <value><span data-ttu-id="0c0ce-208">送信されたメッセージが送信先キューから受信されるまでの合計時間 (秒)。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-208">The total time, in seconds, for a sent message to be received from the destination queue.</span></span> <span data-ttu-id="0c0ce-209">既定値は、<see cref="F:System.Messaging.Message.InfiniteTimeout" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-209">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-210">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>は、送信されたメッセージが送信先キューから受信されるまでの合計時間を秒単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-210">The <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> property specifies the total time in seconds for a sent message to be received from the destination queue.</span></span> <span data-ttu-id="0c0ce-211">この制限時間には、送信先のキューへの到達に要した時間に加えて、アプリケーションによってメッセージが取得される前にキューで待機する時間も含まれます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-211">This time limit includes the time spent getting to the destination queue, plus the time spent waiting in the queue before the message is retrieved by an application.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0c0ce-212">依存クライアントコンピューターを使用している場合は、クライアントコンピューターの時計を、メッセージキューを実行しているサーバーのクロックと同期します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-212">When using dependent client computers, synchronize the clock on the client computer with the clock on the server running Message Queuing.</span></span> <span data-ttu-id="0c0ce-213">2つのクロックが同期されていない場合、がではない<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>ときに<xref:System.Messaging.Message.InfiniteTimeout>メッセージを送信すると、予期しない動作が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-213">If the two clocks are not synchronized, you might see unpredictable behavior when sending messages when <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> is not <xref:System.Messaging.Message.InfiniteTimeout>.</span></span>  
  
 <span data-ttu-id="0c0ce-214">メッセージが<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>キューから削除される前に期間が経過すると、メッセージキューアプリケーションはメッセージを破棄します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-214">If the <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> interval expires before the message is removed from the queue, the Message Queuing application discards the message.</span></span> <span data-ttu-id="0c0ce-215">メッセージの<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>プロパティがに`true`設定されている場合、メッセージは配信不能キューに送信されるか、が`false`の<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-215">The message is either sent to the dead-letter queue, if the message's <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> property is set to `true`, or ignored, if <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> is `false`.</span></span> <span data-ttu-id="0c0ce-216">が<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>より<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>小さい場合は<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> 、が優先されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-216">If <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> is less than <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="0c0ce-217">メッセージの<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>プロパティを設定して、タイマーの有効期限が切れる前にメッセージが取得されない場合、メッセージキューが送信元アプリケーションに否定受信確認メッセージを返すように要求することができます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-217">The message's <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property can be set to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0c0ce-218">否定受信確認を受信<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>するように指定した場合は、の<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>値がの<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>値未満の場合は、受信確認を受け取りません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-218">If you have specified to receive <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> negative acknowledgments, you will not receive them when the value of <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> is less than the value of <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>.</span></span>  
  
 <span data-ttu-id="0c0ce-219">トランザクションで複数のメッセージが送信されると、メッセージキューは、最初のメッセージの<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>プロパティの値を使用します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-219">When several messages are sent in a transaction, Message Queuing uses the value of the first message's <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToBeReceived" />
      </Docs>
    </Member>
    <Member MemberName="TimeToReachQueue">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToReachQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToReachQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToReachQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToReachQueue { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToReachQueue : TimeSpan with get, set" Usage="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.TimeoutConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTimeToReachQueue")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.TimeoutConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-220">メッセージがキューに到達するまでのタイム リミットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-220">Gets or sets the time limit for the message to reach the queue.</span></span></summary>
        <value><span data-ttu-id="0c0ce-221">メッセージが送信されてから送信先キューに到達するまでのタイム リミット (秒)。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-221">The time limit in seconds for a message to reach the destination queue, from the time the message is sent.</span></span> <span data-ttu-id="0c0ce-222">既定値は、<see cref="F:System.Messaging.Message.InfiniteTimeout" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-222">The default is <see cref="F:System.Messaging.Message.InfiniteTimeout" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-223">メッセージが<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>送信先に到達する前に期間が経過すると、メッセージキューアプリケーションはメッセージを破棄します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-223">If the <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> interval expires before the message reaches its destination, the Message Queuing application discards the message.</span></span> <span data-ttu-id="0c0ce-224">メッセージの<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>プロパティがに`true`設定されている場合、メッセージは配信不能キューに送信されるか、が`false`の<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-224">The message is either sent to the dead-letter queue, if the message's <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> property is set to `true`, or ignored, if <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> is `false`.</span></span> <span data-ttu-id="0c0ce-225">が<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>より<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>大きい場合は<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> 、が優先されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-225">If <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> is greater than <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>, <xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A> takes precedence.</span></span>  
  
 <span data-ttu-id="0c0ce-226">メッセージの<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>プロパティは、タイマーの有効期限が切れる前にメッセージが到着しなかった場合に、メッセージキューが送信元アプリケーションに否定受信確認メッセージを返すように要求するように設定できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-226">The message's <xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A> property can be set to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.</span></span>  
  
 <span data-ttu-id="0c0ce-227">が<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> 0 秒の場合、メッセージキューがメッセージを待機している場合、メッセージキューはメッセージを送信先に送信しようとします。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-227">If <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> is 0 seconds, Message Queuing tries once to send the message to its destination if the queue is waiting for the message.</span></span> <span data-ttu-id="0c0ce-228">キューがローカルの場合、メッセージは常にキューに到達します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-228">If the queue is local, the message always reaches the queue.</span></span>  
  
 <span data-ttu-id="0c0ce-229">トランザクションで複数のメッセージが送信されると、メッセージキューは、最初のメッセージの<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>プロパティの値を使用します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-229">When several messages are sent in a transaction, Message Queuing uses the value of the first message's <xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.TimeToReachQueue" />
      </Docs>
    </Member>
    <Member MemberName="TransactionStatusQueue">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueue TransactionStatusQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessageQueue TransactionStatusQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionStatusQueue As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueue ^ TransactionStatusQueue { System::Messaging::MessageQueue ^ get(); void set(System::Messaging::MessageQueue ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionStatusQueue : System.Messaging.MessageQueue with get, set" Usage="System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgTransactionStatusQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-230">送信元コンピューター上のトランザクション ステータス キューを取得します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-230">Gets the transaction status queue on the source computer.</span></span></summary>
        <value><span data-ttu-id="0c0ce-231">送信元コンピューター上のトランザクション ステータス キュー。送信元アプリケーションに受信確認メッセージを返すときに使われます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-231">The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application.</span></span> <span data-ttu-id="0c0ce-232">既定値は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-232">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-233">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>は、ソースコンピューター上のトランザクションステータスキューを識別します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-233">The <xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A> property identifies the transaction status queue on the source computer.</span></span> <span data-ttu-id="0c0ce-234">プロパティはメッセージキューによって設定され、外部キューに送信されるトランザクションメッセージを取得するときにコネクタアプリケーションによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-234">The property is set by Message Queuing, and is used by connector applications when retrieving transactional messages sent to a foreign queue.</span></span>  
  
 <span data-ttu-id="0c0ce-235">外部キューが Microsoft Message Queuing 以外のキューシステムに存在します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-235">A foreign queue exists in a queuing system other than Microsoft Message Queuing.</span></span> <span data-ttu-id="0c0ce-236">Microsoft Message Queuing は、コネクタアプリケーションを使用して、このようなキューと通信します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-236">Microsoft Message Queuing communicates with such queues through a connector application.</span></span>  
  
 <span data-ttu-id="0c0ce-237">コネクタアプリケーションは、トランザクションステータスキューを使用して、送信側アプリケーションに受信確認メッセージを返信できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-237">The connector application can use the transaction status queue to send acknowledgment messages back to the sending application.</span></span> <span data-ttu-id="0c0ce-238">送信元アプリケーションが他の確認を要求しない場合でも、トランザクションステータスキューはこれらの受信確認を受信する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-238">The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="P:System.Messaging.Message.TransactionStatusQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseAuthentication">
      <MemberSignature Language="C#" Value="public bool UseAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAuthentication : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseAuthentication")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-239">メッセージが送信前に認証される必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-239">Gets or sets a value that indicates whether the message must be authenticated before being sent.</span></span></summary>
        <value><span data-ttu-id="0c0ce-240">送信元アプリケーションがメッセージの認証を要求した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-240"><see langword="true" /> if the sending application requested authentication for the message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0c0ce-241">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-241">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-242">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>は、メッセージを認証する必要があるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-242">The <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> property specifies whether the message needs to be authenticated.</span></span> <span data-ttu-id="0c0ce-243">送信元のアプリケーションが認証を要求する場合、メッセージキューはデジタル署名を作成し、メッセージの送信時にメッセージの署名に使用し、メッセージの受信時にメッセージを認証します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-243">If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and to authenticate the message when it is received.</span></span>  
  
 <span data-ttu-id="0c0ce-244">認証済みメッセージのみを受け入れるキューにメッセージが送信された場合、がに<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> `false`設定されていると、メッセージはキューに到達すると拒否されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-244">If a message is sent to a queue that only accepts authenticated messages, the message will be rejected when it reaches the queue if <xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A> is set to `false`.</span></span>  
  
 <span data-ttu-id="0c0ce-245">メッセージのプロパティを確認し、メッセージの認証に失敗したかどうかを判断することはできません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-245">It is not possible to look at the properties of a message and determine whether a message failed authentication.</span></span> <span data-ttu-id="0c0ce-246">認証に失敗したメッセージは破棄され、キューに配信されません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-246">Messages that fail authentication are discarded and are not delivered to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Authenticate" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId" />
        <altmember cref="P:System.Messaging.Message.UseAuthentication" />
      </Docs>
    </Member>
    <Member MemberName="UseDeadLetterQueue">
      <MemberSignature Language="C#" Value="public bool UseDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDeadLetterQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDeadLetterQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDeadLetterQueue : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseDeadLetterQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-247">配信できなかったメッセージのコピーを配信不能キューに送信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-247">Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</span></span></summary>
        <value><span data-ttu-id="0c0ce-248">メッセージが配信できなかったときにそのメッセージのコピーを配信不能キューに送信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-248"><see langword="true" /> if message delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0c0ce-249">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-249">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-250"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>メッセージ<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>キューがメッセージを追跡する方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-250"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> and <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> specify how Message Queuing will track a message.</span></span> <span data-ttu-id="0c0ce-251"><xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> が`true`の場合、配信に失敗した場合 (非トランザクションメッセージの場合) は、メッセージを配信できなかったコンピューター上の非トランザクション配信不能キューにメッセージが送信されます (メッセージタイマーの有効期限が切れた場合など)。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-251">If <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> is `true`, then in case of delivery failure (for non-transactional messages), the message is sent to the non-transactional dead-letter queue on the computer that could not deliver the message (for example, if a message timer expires).</span></span>  
  
 <span data-ttu-id="0c0ce-252">トランザクションメッセージの配信エラーが発生した場合、メッセージは、すべての負のケースと未確定のケースで、ソースコンピューターのトランザクション配信不能キューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-252">In the case of delivery failure for transactional messages, the message is sent to the transactional dead-letter queue on the source computer in all negative and in-doubt cases.</span></span>  
  
 <span data-ttu-id="0c0ce-253">配信不能キューにメッセージを格納する場合は、不要になったメッセージを削除するために、キューを定期的に空にします。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-253">When you store messages in a dead-letter queue, empty the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="0c0ce-254">配信不能キューに格納されているメッセージは、キューが存在するコンピューターのサイズクォータに対してカウントされます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-254">Messages stored in dead-letter queues count against the size quota for the computer where the queue resides.</span></span> <span data-ttu-id="0c0ce-255">コンピューターのクォータは、管理者によって設定され、1つのキューだけではなく、コンピューターにメッセージを格納するために割り当てられる合計サイズを示します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-255">The computer quota is set by the administrator and refers to the total size allocated for storing messages on a computer, not just in a single queue.</span></span>  
  
 <span data-ttu-id="0c0ce-256">ジャーナルや配信不能キューは作成しません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-256">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="0c0ce-257">これらは両方とも、メッセージキューによって生成されるシステムキューです。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-257">These are both system queues that are generated by Message Queuing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseEncryption">
      <MemberSignature Language="C#" Value="public bool UseEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property UseEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseEncryption : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseEncryption")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-258">メッセージをプライベートにするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-258">Gets or sets a value that indicates whether to make the message private.</span></span></summary>
        <value><span data-ttu-id="0c0ce-259">メッセージ キューにメッセージを暗号化するように要求する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-259"><see langword="true" /> to require Message Queuing to encrypt the message; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0c0ce-260">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-260">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-261">メッセージがプライベートである場合、メッセージの本文は送信前に暗号化され、受信時に暗号化が解除されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-261">If a message is private, its body is encrypted before it is sent and is decrypted when it is received.</span></span> <span data-ttu-id="0c0ce-262">プライベートメッセージを送信するには、送信アプリケーションで暗号化を使用するように指定し、必要に応じて適用する暗号化アルゴリズムを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-262">To send a private message, the sending application must specify that encryption be used and, optionally, which encryption algorithm to apply.</span></span>  
  
 <span data-ttu-id="0c0ce-263">プライベートメッセージを送信する場合、アプリケーションでメッセージの暗号化を実行する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-263">When sending private messages, it is not necessary that your application perform the message encryption.</span></span> <span data-ttu-id="0c0ce-264">メッセージキューは、ディレクトリサービスへのアクセスがある Microsoft Windows 2000 enterprise 内でアプリケーションがメッセージを送信するときに、メッセージ本文を暗号化できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-264">Message Queuing can encrypt the message body for you when your application sends messages within a Microsoft Windows 2000 enterprise where there is access to the directory service.</span></span> <span data-ttu-id="0c0ce-265">プライベートメッセージを受信すると、メッセージ本文の暗号化を解除する受信側キューマネージャーになります。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-265">When receiving private messages, it is always the receiving Queue Manager that decrypts the message body.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm" />
        <altmember cref="P:System.Messaging.MessageQueue.EncryptionRequired" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseJournalQueue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-266">送信元のコンピューターの履歴にメッセージのコピーを保持するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-266">Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</span></span></summary>
        <value><span data-ttu-id="0c0ce-267">送信元のコンピューターの履歴から次のステップにメッセージが正常に送信された後に送信元コンピューターの履歴にメッセージのコピーを保持するように要求する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-267"><see langword="true" /> to require that a copy of a message be kept in the originating computer's machine journal after it has been successfully transmitted from the originating computer to the next step; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0c0ce-268">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-268">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-269"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>メッセージ<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>キューがメッセージを追跡する方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-269"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> and <xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A> specify how Message Queuing will track a message.</span></span> <span data-ttu-id="0c0ce-270"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> が`true`の場合、メッセージが送信されるたびに、コピーは元のコンピューターのコンピュータージャーナルに保持されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-270">If <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A> is `true`, then at each step that a message is transmitted, a copy is kept in the computer journal on the originating computer.</span></span>  
  
 <span data-ttu-id="0c0ce-271">送信されたメッセージは、送信先キューがリモートコンピューター上にある場合にのみ、ジャーナルキューにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-271">The sent message will only be copied to the journal queue if the destination queue is on a remote computer.</span></span> <span data-ttu-id="0c0ce-272">転送先がローカルコンピューター上にある場合、メッセージはキューに直接送信されます。ジャーナリングを必要とする中間手順はありません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-272">If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.</span></span>  
  
 <span data-ttu-id="0c0ce-273">メッセージをジャーナルキューに格納する場合は、不要になったメッセージを削除するために、キューを定期的に空にします。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-273">When you store messages in a journal queue, empty the queue periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="0c0ce-274">ジャーナルキューに格納されているメッセージは、キューが存在するコンピューターのクォータに対してカウントされます (コンピューターのクォータは管理者によって設定されます)。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-274">Messages stored in journal queues count against the quota for the computer where the queue resides (the computer quota is set by the administrator).</span></span>  
  
 <span data-ttu-id="0c0ce-275">ジャーナルや配信不能キューは作成しません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-275">You do not create a journal or dead-letter queue.</span></span> <span data-ttu-id="0c0ce-276">これらは両方とも、メッセージキューによって生成されるシステムキューです。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-276">These are both system queues that are generated by Message Queuing.</span></span>  
  
 <span data-ttu-id="0c0ce-277">ジャーナルは、メッセージとキューの両方で指定できます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-277">Journaling can be specified by both the message and the queue.</span></span> <span data-ttu-id="0c0ce-278"><xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A?displayProperty=nameWithType> が`true`の場合、メッセージは送信時にジャーナルされます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-278">When <xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A?displayProperty=nameWithType> is `true`, the message is journaled when it is sent.</span></span> <span data-ttu-id="0c0ce-279"><xref:System.Messaging.MessageQueue.UseJournalQueue%2A?displayProperty=nameWithType> が`true`の場合、メッセージは受信時にジャーナルされます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-279">When <xref:System.Messaging.MessageQueue.UseJournalQueue%2A?displayProperty=nameWithType> is `true`, the message is journaled when it is received.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.Message.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="UseTracing">
      <MemberSignature Language="C#" Value="public bool UseTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseTracing" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.DefaultPropertiesToSend.UseTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseTracing : bool with get, set" Usage="System.Messaging.DefaultPropertiesToSend.UseTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("MsgUseTracing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0ce-280">メッセージが送信先キューに移動していく途中でメッセージをトレースするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-280">Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</span></span></summary>
        <value><span data-ttu-id="0c0ce-281">元のメッセージが送信先キューに到達するまでに発生する各中間ステップごとにレポートを生成して、システムのレポート キューに送信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-281"><see langword="true" /> if each intermediate step made by the original message en route to the destination queue will generate a report to be sent to the system's report queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0c0ce-282">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-282">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0ce-283">プロパティ<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>は、メッセージが送信先キューに移動するときに、そのルートを追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-283">The <xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A> property specifies whether to track the route of a message as it moves toward its destination queue.</span></span> <span data-ttu-id="0c0ce-284">の`true`場合、メッセージキューによって生成されたレポートメッセージは、メッセージキュールーティングサーバーを通過するたびに、レポートキューに送信されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-284">If `true`, a Message Queuing-generated report message is sent to a report queue each time the message passes through a Message Queuing routing server.</span></span> <span data-ttu-id="0c0ce-285">レポートキューは、送信元のキューマネージャーによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-285">The report queue is specified by the source Queue Manager.</span></span> <span data-ttu-id="0c0ce-286">レポートキューは、メッセージキューによって生成されたレポートメッセージに限定されません。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-286">Report queues are not limited to Message Queuing-generated report messages.</span></span> <span data-ttu-id="0c0ce-287">アプリケーションで生成されたメッセージをレポートキューに送信することもできます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-287">Your application-generated messages can be sent to report queues as well.</span></span>  
  
 <span data-ttu-id="0c0ce-288">トレースを使用するには、Active Directory を設定し、メッセージキューエンタープライズのレポートキューを指定します。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-288">Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise.</span></span> <span data-ttu-id="0c0ce-289">これらの設定は、管理者によって構成されます。</span><span class="sxs-lookup"><span data-stu-id="0c0ce-289">These settings are configured by the administrator.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue" />
        <altmember cref="P:System.Messaging.Message.UseTracing" />
      </Docs>
    </Member>
  </Members>
</Type>