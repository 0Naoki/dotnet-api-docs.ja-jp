<Type Name="AccessControlList" FullName="System.Messaging.AccessControlList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01ffde1604460666304fbb631aa4b380cf5e2b0f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70607594" /></Metadata><TypeSignature Language="C#" Value="public class AccessControlList : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessControlList extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.AccessControlList" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessControlList&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessControlList : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type AccessControlList = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>1 つ以上のトラスティのアクセス権を指定したアクセス制御エントリのリストを格納しています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラスを<xref:System.Messaging.AccessControlList>使用して、アクセス許可を設定するときに1回の呼び出しで追加する複数のトラスティおよびアクセス権を指定します。 トラスティとアクセス権の組み合わせごとにアクセス制御エントリを追加して、アクセス制御リストを構築します。  
  
 は<xref:System.Messaging.AccessControlList> 、セキュリティ保護可能なオブジェクトへのアクセスが許可または拒否されているトラスティを識別します。 プロセスがセキュリティ保護可能なオブジェクトにアクセスしようとすると、システムはオブジェクトのアクセス制御リスト内のアクセス制御エントリをチェックして、アクセスを許可するかどうかを判断します。 オブジェクトにアクセス制御リストがない場合、システムはすべてに対してフルアクセスを許可します。 オブジェクトのアクセス制御リストにエントリがない場合、そのオブジェクトへのアクセスの試行はすべて拒否されます。  
  
 システムは、要求されたすべてのアクセス権を許可するか、要求されたアクセス権が拒否されるまで、アクセス制御エントリを順番に確認します。  
  
 システムは、次<xref:System.Messaging.AccessControlEntry>のいずれかのイベントが発生するまで、各を順番に調べます。  
  
-   アクセス拒否<xref:System.Messaging.AccessControlEntry>は、スレッドのアクセストークンに示されているいずれかのトラスティに対して、要求されたアクセス権を明示的に拒否します。  
  
-   スレッドのアクセストークンに一覧<xref:System.Messaging.AccessControlEntry>表示されているトラスティの1つまたは複数のアクセス許可項目は、要求されたすべてのアクセス権を明示的に付与します。  
  
-   すべて<xref:System.Messaging.AccessControlEntry>の項目がチェックされており、明示的に許可されていないアクセス権が少なくとも1つは存在します。この場合、アクセスは暗黙的に拒否されます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.AccessControlEntry" />
    <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Messaging.AccessControlList" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (entry As AccessControlEntry) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Messaging.AccessControlEntry -&gt; int" Usage="accessControlList.Add entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">アクセス制御リストの末尾に追加する <see cref="T:System.Messaging.AccessControlEntry" />。</param>
        <summary>アクセス制御リストにアクセス制御エントリを追加します。</summary>
        <returns>新しいアクセス制御エントリが挿入された位置。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entry" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (entry As AccessControlEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Messaging.AccessControlEntry -&gt; bool" Usage="accessControlList.Contains entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">アクセス制御リスト内で検索する <see cref="T:System.Messaging.AccessControlEntry" />。</param>
        <summary>アクセス制御リストに特定のアクセス制御エントリが含まれているかどうかを判断します。</summary>
        <returns>アクセス制御エントリがアクセス制御リストに存在する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Messaging.AccessControlEntry[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Messaging.AccessControlEntry[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As AccessControlEntry(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Messaging::AccessControlEntry ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Messaging.AccessControlEntry[] * int -&gt; unit" Usage="accessControlList.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Messaging.AccessControlEntry[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">アクセス制御リストのエントリのコピー先の <see cref="T:System.Messaging.AccessControlEntry" /> 型の配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
        <param name="index">アクセス制御リストのエントリのコピーを開始する位置を示す配列のインデックス。</param>
        <summary>互換性のある 1 次元のアクセス制御エントリ配列に、その配列内の指定したインデックスを開始位置として、アクセス制御リスト全体をコピーします。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="array" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> パラメーターが 0 未満。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="index" /> パラメーターが <paramref name="array" /> パラメーターの長さ以上です。  
  
- または - 
コピー元のアクセス制御リストの要素数が、<paramref name="index" /> からコピー先のアクセス制御エントリの配列の末尾までに格納できる数を超えています。</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="T:System.Messaging.AccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (entry As AccessControlEntry) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Messaging.AccessControlEntry -&gt; int" Usage="accessControlList.IndexOf entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">アクセス制御リスト内で検索する <see cref="T:System.Messaging.AccessControlEntry" />。</param>
        <summary>アクセス制御リスト内のアクセス制御エントリの特定のインデックスを確認します。</summary>
        <returns>エントリのインデックスがリスト内に見つかった場合はそのインデックス、それ以外の場合は -1。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, entry As AccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Messaging.AccessControlEntry -&gt; unit" Usage="accessControlList.Insert (index, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="index">アクセス制御エントリを挿入する位置の、0 から始まるインデックス番号。</param>
        <param name="entry">アクセス制御リストに挿入する <see cref="T:System.Messaging.AccessControlEntry" />。</param>
        <summary>アクセス制御エントリをアクセス制御リスト内の指定した位置に挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `index`パラメーターがアクセス制御リスト内の項目数と等しい場合は、エントリが末尾に追加されます。 それ以外の場合は、挿入位置の後のエントリが、リスト内の新しい項目に合わせて下に移動します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> パラメーターがアクセス制御リスト内の有効なインデックスではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entry" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (entry As AccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Messaging.AccessControlEntry -&gt; unit" Usage="accessControlList.Remove entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">アクセス制御リストから削除する <see cref="T:System.Messaging.AccessControlEntry" />。</param>
        <summary>アクセス制御リスト内にある特定のアクセス制御エントリのうち、最初に出現するアクセス制御エントリを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 削除された項目の後に続くアクセス制御エントリは、空いている場所を占有するように上に移動します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="entry" /> パラメーターが <see langword="null" /> です。</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
  </Members>
</Type>
