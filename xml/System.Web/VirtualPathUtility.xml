<Type Name="VirtualPathUtility" FullName="System.Web.VirtualPathUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7fb2fe63eb33b8c4b97e66c105cee6d7087af4aa" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70721517" /></Metadata><TypeSignature Language="C#" Value="public static class VirtualPathUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VirtualPathUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.VirtualPathUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class VirtualPathUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type VirtualPathUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>共通仮想パス操作に使用するユーティリティ メソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.VirtualPathUtility>は、仮想パスに関連する一般的な操作のためのユーティリティメソッドを提供します。 ASP.NET サーバーコントロールとサーバーコードの場合、Web アプリケーションルート演算子を使用した仮想パスは、通常、相対パスと絶対パスではなく、チルダ (~) で使用されます。 詳細については、「 [ASP.NET Web プロジェクト Paths](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd)」を参照してください。  
  
 アプリケーション相対パスを絶対仮想パスに変換する必要がある場合は、クラスを使用します。これは、カスタム Web サービスハンドラーを開発する場合と同様です。 <xref:System.Web.VirtualPathUtility>  
  
 絶対仮想パスは、リテラルスラッシュ記号 (/) で始まります。 相対仮想パスは、アプリケーションのルートディレクトリに対する相対パスです。これがチルダ (\~) であるか、チルダと二重の円記号\~(\\\\)、またはチルダとスラッシュ (\~/) で始まります。 仮想パスを相対的に作成すると、パスがアプリケーションに依存しなくなります。  
  
 アプリケーションの仮想ディレクトリは、プロパティ<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>と<xref:System.Web.HttpRequest.ApplicationPath%2A>プロパティから取得できます。  
  
> [!NOTE]
>  クラス<xref:System.Web.VirtualPathUtility>は、セキュリティや正規化の目的ではありません。 Web アプリケーションのセキュリティの詳細については、「 [Web アプリケーションのセキュリティの脅威の概要](https://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a)」を参照してください。 一般的な URL 処理機能につい<xref:System.Uri>ては、「」を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.VirtualPathUtility>クラスとそのメソッドの一部を使用する方法を示しています。 最初に、 <xref:System.Web.HttpRequest.FilePath%2A>プロパティによって Web ページへの仮想パスが生成されます。 、 <xref:System.Web.VirtualPathUtility.GetFileName%2A>、 <xref:System.Web.VirtualPathUtility.GetExtension%2A>および <xref:System.Web.VirtualPathUtility.GetDirectory%2A> の各メソッドは、仮想パスに関する情報を返します。 次に、 <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> <xref:System.Web.HttpResponse.Redirect%2A>メソッドが呼び出された場合、プロパティは現在の要求の仮想パスを<xref:System.Web.HttpRequest.FilePath%2A>生成します。これは、プロパティとは異なる場合があります。 、 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>および <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> の各メソッドは、仮想パスに関する情報を返します。  
  
 [!code-aspx-csharp[System.Web.VirtualPathUtility#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#1)]
 [!code-aspx-vb[System.Web.VirtualPathUtility#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpRequest" />
    <related type="Article" href="https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd">ASP.NET Web サイトのパス</related>
  </Docs>
  <Members>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public static string AppendTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AppendTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppendTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AppendTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member AppendTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.AppendTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">スラッシュ記号を追加する仮想パス。</param>
        <summary>リテラル スラッシュ記号 (/) が仮想パスの末尾になかった場合は追加します。</summary>
        <returns>変更された仮想パス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リテラルスラッシュ記号 (/) が仮想パスの末尾に存在する場合、仮想パスは変更されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.Combine (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">基本パス。</param>
        <param name="relativePath">相対パス。</param>
        <summary>基本パスと相対パスを連結します。</summary>
        <returns><paramref name="basePath" /> と <paramref name="relativePath" /> が連結された結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 相対<xref:System.Web.VirtualPathUtility.Combine%2A>パスが完全にチルダ ( <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> ~) の場合、メソッドはプロパティの値を返します。  
  
 相対<xref:System.Web.VirtualPathUtility.Combine%2A>パスがチルダ<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>とスラッシュ記号 (~/) で始まる場合、メソッドは基本パスではなくプロパティ値を使用します。それ以外の<xref:System.Web.VirtualPathUtility.Combine%2A>場合、メソッドは基本パスを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="relativePath" /> は物理パスです。  
  
- または - 
 <paramref name="relativePath" /> に 1 つ以上のコロンが含まれています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relativePath" /> は、<see langword="null" /> または空の文字列です。  
  
- または - 
 <paramref name="basePath" /> は、<see langword="null" /> または空の文字列です。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
        <altmember cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public static string GetDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectory(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectory (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetDirectory : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetDirectory virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">仮想パス。</param>
        <summary>仮想パスのディレクトリ部分を返します。</summary>
        <returns>仮想パスで参照されているディレクトリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 が`virtualPath` root 化されていない場合、つまり、ルート演算子 (チルダ [\~]) と等しくない場合は、チルダ (\~) で始まっていません。たとえば、チルダとスラッシュ\~記号 (/)、チルダと二重の円\~記号 (//)、スラッシュ記号 (/) で始まらない場合は、 <xref:System.ArgumentException>例外がスローされます。  
  
 <xref:System.Web.VirtualPathUtility.GetDirectory%2A>メソッドに渡される仮想パスが`"/images/image1.gif"`の場合、返されるディレクトリは`"/images"`です。  
  
   
  
## Examples  
 、 <xref:System.Web.VirtualPathUtility.GetFileName%2A> 、 <xref:System.Web.VirtualPathUtility.GetExtension%2A> およびの各メソッドの使用方法を次のコード例 <xref:System.Web.VirtualPathUtility.GetDirectory%2A> に示します。  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> にルートが指定されていません。  
  
- または - 
 <paramref name="virtualPath" /> は、<see langword="null" /> または空の文字列です。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetExtension virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">仮想パス。</param>
        <summary>仮想パスで参照されているファイルの拡張子を取得します。</summary>
        <returns>ピリオド (.) を含むファイル名の拡張子の文字列リテラル、<see langword="null" />、または空の文字列 ("")。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.GetExtension%2A>メソッドに渡される仮想パスが`"/images/image1.gif"`の場合、返される拡張機能は`".gif"`です。  
  
   
  
## Examples  
 、 <xref:System.Web.VirtualPathUtility.GetFileName%2A> 、 <xref:System.Web.VirtualPathUtility.GetExtension%2A> およびの各メソッドの使用方法を次のコード例 <xref:System.Web.VirtualPathUtility.GetDirectory%2A> に示します。  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> に、<see cref="F:System.IO.Path.InvalidPathChars" /> で定義されている無効な文字が 1 つ以上含まれています。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
        <altmember cref="M:System.IO.Path.GetExtension(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetFileName virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">仮想パス。</param>
        <summary>仮想パスで参照されているファイルの名前を取得します。</summary>
        <returns><paramref name="virtualPath" /> の最後のディレクトリ文字の後のファイル名リテラル。<paramref name="virtualPath" /> の最後の文字がディレクトリまたはボリュームの区切り記号の場合は、最後のディレクトリ名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.GetFileName%2A>メソッドに渡される仮想パスが`"/images/image1.gif"`の場合、返されるファイル名`"image1.gif"`はです。  
  
   
  
## Examples  
 、 <xref:System.Web.VirtualPathUtility.GetFileName%2A> 、 <xref:System.Web.VirtualPathUtility.GetExtension%2A> およびの各メソッドの使用方法を次のコード例 <xref:System.Web.VirtualPathUtility.GetDirectory%2A> に示します。  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> に、<see cref="F:System.IO.Path.InvalidPathChars" /> で定義されている無効な文字が 1 つ以上含まれています。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.IO.Path.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public static bool IsAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAbsolute (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAbsolute : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">調べる仮想パス。</param>
        <summary>指定された仮想パスが絶対かどうか、つまりリテラル スラッシュ記号 (/) で始まるかどうかを示すブール値を返します。</summary>
        <returns><paramref name="virtualPath" /> が絶対パスであり、<see langword="null" /> または空の文字列 ("") でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想パスは、リテラルスラッシュ記号 (/) で始まる場合は絶対です。 たとえば、プロパティは<xref:System.Web.HttpRequest.Path%2A>絶対仮想パスを返します。  
  
   
  
## Examples  
 、 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A> 、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> およびの各メソッドの使用方法を次のコード例 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> に示します。  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> は <see langword="null" />です。</exception>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAppRelative">
      <MemberSignature Language="C#" Value="public static bool IsAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAppRelative (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAppRelative : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">調べる仮想パス。</param>
        <summary>指定された仮想パスがアプリケーションに対する相対かどうかを示すブール値を返します。</summary>
        <returns><paramref name="virtualPath" /> がアプリケーション相対の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仮想パスは、ルート演算子 (ティルダ [~]) のいずれかにすることも、root 演算子で開始することもできます。 <xref:System.ArgumentNullException>が`virtualPath` の場合は、例外が発生します。 `null` が`virtualPath`空の文字列 ("") の場合、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>メソッドは`false`を返します。  
  
> [!NOTE]
>  `"~`が有効`false`な仮想パスではありません。メソッドに対してを返します。 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>  `filename` `"`  
  
   
  
## Examples  
 、 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A> 、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> およびの各メソッドの使用方法を次のコード例 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> に示します。  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> は <see langword="null" />です。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public static string MakeRelative (string fromPath, string toPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeRelative(string fromPath, string toPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeRelative (fromPath As String, toPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeRelative(System::String ^ fromPath, System::String ^ toPath);" />
      <MemberSignature Language="F#" Value="static member MakeRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.MakeRelative (fromPath, toPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPath" Type="System.String" />
        <Parameter Name="toPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromPath">返される相対仮想パスの起点となる仮想パス。</param>
        <param name="toPath">返される相対仮想パスの終点となる仮想パス。</param>
        <summary>ルート演算子 (ティルダ [~]) を含む仮想パスから別の仮想パスへの相対仮想パスを返します。</summary>
        <returns><paramref name="fromPath" /> から <paramref name="toPath" /> への相対仮想パス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 \~\~\~パラメーターと`fromPath` `toPath`パラメーターがルート化されていない場合、つまり、ルート演算子 (チルダ []) と等しくない場合は、チルダ () で始まらないようにします (チルダとスラッシュ記号 (/)、チルダ、および二重)円記号\~(//)、またはスラッシュ記号 (/) <xref:System.ArgumentException>で始まらない場合、例外がスローされます。  
  
 URI で使用されるクエリ文字列パラメーターと HTML アンカーは、相対パスの決定には使用されません。  
  
 `fromPath` `"../directory2/file2.aspx"`がで、 `"/directory2/file2.aspx"` がの場合<xref:System.Web.VirtualPathUtility.MakeRelative%2A> 、メソッドはを返します。 `toPath` `"/directory1/file1.aspx"`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="fromPath" /> にルートが指定されていません。  
  
または 
 <paramref name="toPath" /> にルートが指定されていません。</exception>
        <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTrailingSlash">
      <MemberSignature Language="C#" Value="public static string RemoveTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RemoveTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member RemoveTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.RemoveTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">末尾のスラッシュ記号を削除する仮想パス。</param>
        <summary>末尾のスラッシュ記号 (/) を仮想パスから削除します。</summary>
        <returns>仮想パスがルート ディレクトリ ("/") ではない場合は、末尾にスラッシュ記号がない仮想パス。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A>は、仮想パスの末尾からスラッシュ記号 (/) を削除します。 仮想パスが既にルートディレクトリ (`"/"`) の場合、アクションは実行されません。 仮想パスが`null`または空の文字列 ("") の場合、 <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A>メソッドは`null`を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAbsolute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>仮想パスをアプリケーション絶対パスに変換します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">アプリケーション相対パスに変換する仮想パス。</param>
        <summary>仮想パスをアプリケーション絶対パスに変換します。</summary>
        <returns>指定した仮想パスの絶対パス表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション絶対パスとは、ルート演算子 (ティルダ [~]) の代わりにアプリケーションパスが使用されるパスです。  
  
 が`virtualPath`の場合:  
  
-   Absolute,、 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>メソッドは、仮想パスを変更せずに返します。  
  
-   アプリケーション相対。メソッド<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>は、 `virtualPath`現在のアプリケーションの仮想ディレクトリパスをの先頭に追加します。 たとえば、現在のアプリケーションの仮想ディレクトリパスには、 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>プロパティからアクセスできます。  
  
-   ルートがない場合<xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 、メソッドは<xref:System.ArgumentOutOfRangeException>例外を発生させます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="virtualPath" /> にルートが指定されていません。</exception>
        <exception cref="T:System.Web.HttpException">先頭の二重ピリオド (..) は、最上位ディレクトリから出るために使用されます。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">アプリケーション相対パスに変換する仮想パス。</param>
        <param name="applicationPath"><paramref name="virtualPath" /> を相対パスに変換するために使用するアプリケーション パス。</param>
        <summary>指定されたアプリケーション パスを使用して、仮想パスをアプリケーション絶対パスに変換します。</summary>
        <returns><paramref name="virtualPath" /> の絶対仮想パス表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドのオーバーロードは<xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 、現在のアプリケーションパスではなく、指定されたアプリケーションパスを使用します。 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>  
  
 が`virtualPath`の場合:  
  
-   絶対に、 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>メソッドは、仮想パスを変更せずに返します。  
  
-   アプリケーション相対。メソッド<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>は、 `applicationPath`仮想パスの先頭にを追加します。  
  
-   ルートがない場合<xref:System.Web.VirtualPathUtility.ToAbsolute%2A> 、メソッドは<xref:System.ArgumentOutOfRangeException>例外を発生させます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="applicationPath" /> にルートが指定されていません。</exception>
        <exception cref="T:System.Web.HttpException">アプリケーション パスの先頭の二重ピリオド (..) は、最上位ディレクトリから出るために使用されます。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAppRelative">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>仮想パスをアプリケーション相対パスに変換します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">アプリケーション相対パスに変換する仮想パス。</param>
        <summary><see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" /> プロパティに格納されているアプリケーション仮想パスを使用して、仮想パスをアプリケーション相対パスに変換します。</summary>
        <returns><paramref name="virtualPath" /> のアプリケーション相対パス表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションの仮想パス`"myapp"`がで、仮想パス`"/myApp/sub/default.asp"`が<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>メソッドに渡された場合、結果として得られるアプリケーション`"~/sub/default.aspx"`の相対パスはになります。  
  
 が`virtualPath`現在のアプリケーションパスで始まらない場合、メソッド<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>は仮想パスを変更せずに返します。  
  
 が`virtualPath`アプリケーションパスと同じ場合は、ルート演算子 (ティルダ [~]) が返されます。 たとえば、現在のアプリケーションの仮想ディレクトリパスには、 <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>プロパティからアクセスできます。  
  
   
  
## Examples  
 、 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A> 、 <xref:System.Web.VirtualPathUtility.IsAppRelative%2A> およびの各メソッドの使用方法を次のコード例 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> に示します。  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> が <see langword="null" /> です。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">アプリケーション相対パスに変換する仮想パス。</param>
        <param name="applicationPath"><paramref name="virtualPath" /> を相対パスに変換するために使用するアプリケーション パス。</param>
        <summary>指定されたアプリケーション パスを使用して、仮想パスをアプリケーション相対パスに変換します。</summary>
        <returns><paramref name="virtualPath" /> のアプリケーション相対パス表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドのオーバーロードは<xref:System.Web.VirtualPathUtility.ToAppRelative%2A> 、現在`applicationPath`のアプリケーションパスではなくを使用します。 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> が`virtualPath`で`applicationPath`始まらない場合、メソッド<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>は仮想パスを変更せずに返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
