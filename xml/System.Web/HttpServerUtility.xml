<Type Name="HttpServerUtility" FullName="System.Web.HttpServerUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="054c4563886aece9ca7154233d1e1bd38fb005f0" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53392602" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpServerUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpServerUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpServerUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpServerUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpServerUtility sealed" />
  <TypeSignature Language="F#" Value="type HttpServerUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3f666-101">Web 要求を処理するヘルパー メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="3f666-101">Provides helper methods for processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-102">メソッドとプロパティの<xref:System.Web.HttpServerUtility>クラスは、組み込みを通じて公開される<xref:System.Web.HttpContext.Server%2A>ASP.NET が提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f666-102">The methods and properties of the <xref:System.Web.HttpServerUtility> class are exposed through the intrinsic <xref:System.Web.HttpContext.Server%2A> object provided by ASP.NET.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-103">Visual Studio の Web サイトのプロジェクトとソース コードにこのトピックで提供されています。[ダウンロード](https://go.microsoft.com/fwlink/?LinkId=192870)します。</span><span class="sxs-lookup"><span data-stu-id="3f666-103">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkId=192870).</span></span>  
  
 <span data-ttu-id="3f666-104">次の例では、使用する方法、<xref:System.Web.HttpServerUtility.HtmlEncode%2A>メソッドと<xref:System.Web.HttpServerUtility.UrlEncode%2A>のメソッド、<xref:System.Web.HttpServerUtility>クラス。</span><span class="sxs-lookup"><span data-stu-id="3f666-104">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method and the <xref:System.Web.HttpServerUtility.UrlEncode%2A> method of the <xref:System.Web.HttpServerUtility> class.</span></span> <span data-ttu-id="3f666-105"><xref:System.Web.HttpServerUtility.HtmlEncode%2A>メソッドにより、スクリプトの実行可能ファイルまたは HTML 要素ではなくブラウザーで静的なテキストとして表示する任意のユーザーが指定した文字列を入力することを確認します。</span><span class="sxs-lookup"><span data-stu-id="3f666-105">The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements.</span></span> <span data-ttu-id="3f666-106"><xref:System.Web.HttpServerUtility.UrlEncode%2A>メソッドが HTTP ストリームで正しく送信されるように、Url をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-106">The <xref:System.Web.HttpServerUtility.UrlEncode%2A> method encodes URLs so that they are correctly transmitted in the HTTP stream.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpServerUtility1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpServerUtility1/cs/HttpServerUtilityCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpServerUtility1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpServerUtility1/vb/HttpServerUtilityVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpContext" />
  </Docs>
  <Members>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearError();" />
      <MemberSignature Language="F#" Value="member this.ClearError : unit -&gt; unit" Usage="httpServerUtility.ClearError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f666-107">前回の例外を削除します。</span><span class="sxs-lookup"><span data-stu-id="3f666-107">Clears the previous exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f666-108">次の例では、最後にスローされた例外をクリアします。</span><span class="sxs-lookup"><span data-stu-id="3f666-108">The following example clears the last exception that was thrown.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.GetLastError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f666-109">COM オブジェクトのサーバー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3f666-109">Creates a server instance of a COM object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string -&gt; obj" Usage="httpServerUtility.CreateObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID"><span data-ttu-id="3f666-110">インスタンスを作成するオブジェクトのクラスまたは型。</span><span class="sxs-lookup"><span data-stu-id="3f666-110">The class or type of object to create an instance of.</span></span></param>
        <summary><span data-ttu-id="3f666-111">オブジェクトのプログラム ID (ProgID) で識別されている COM オブジェクトのサーバー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3f666-111">Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</span></span></summary>
        <returns><span data-ttu-id="3f666-112">新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f666-112">The new object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f666-113">次の例では、オブジェクトの ProgID を使用してオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="3f666-113">The following example creates an object by using the object's ProgID.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-114">オブジェクトのインスタンスを作成できませんでした。</span><span class="sxs-lookup"><span data-stu-id="3f666-114">An instance of the object could not be created.</span></span></exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Type -&gt; obj" Usage="httpServerUtility.CreateObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="3f666-115">作成するオブジェクトを表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-115">A <see cref="T:System.Type" /> representing the object to create.</span></span></param>
        <summary><span data-ttu-id="3f666-116">オブジェクトの型で識別されている COM オブジェクトのサーバー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3f666-116">Creates a server instance of a COM object identified by the object's type.</span></span></summary>
        <returns><span data-ttu-id="3f666-117">新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f666-117">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectFromClsid">
      <MemberSignature Language="C#" Value="public object CreateObjectFromClsid (string clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObjectFromClsid(string clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObjectFromClsid (clsid As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObjectFromClsid(System::String ^ clsid);" />
      <MemberSignature Language="F#" Value="member this.CreateObjectFromClsid : string -&gt; obj" Usage="httpServerUtility.CreateObjectFromClsid clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clsid"><span data-ttu-id="3f666-118">インスタンスを作成するオブジェクトのクラス ID。</span><span class="sxs-lookup"><span data-stu-id="3f666-118">The class identifier of the object to create an instance of.</span></span></param>
        <summary><span data-ttu-id="3f666-119">オブジェクトのクラス ID (CLSID) で識別されている COM オブジェクトのサーバー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3f666-119">Creates a server instance of a COM object identified by the object's class identifier (CLSID).</span></span></summary>
        <returns><span data-ttu-id="3f666-120">新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f666-120">The new object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f666-121">次の例では、使用する方法、 <xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A> COM オブジェクトのサーバー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="3f666-121">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A> method to create a server instance of a COM object.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-122">オブジェクトのインスタンスを作成できませんでした。</span><span class="sxs-lookup"><span data-stu-id="3f666-122">An instance of the object could not be created.</span></span></exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f666-123">指定したリソースのハンドラーを現在の要求のコンテキストで実行し、そのハンドラーを起動したページに実行を戻します。</span><span class="sxs-lookup"><span data-stu-id="3f666-123">Executes the handler for a specified resource in the context of the current request and returns execution to the page that invoked it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Execute : string -&gt; unit" Usage="httpServerUtility.Execute path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-124">実行する URL パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-124">The URL path to execute.</span></span></param>
        <summary><span data-ttu-id="3f666-125">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-125">Executes the handler for the specified virtual path in the context of the current request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-126"><xref:System.Web.HttpServerUtility.Execute%2A>メソッドは、新しいページの実行が完了した後に元のページの実行を継続します。</span><span class="sxs-lookup"><span data-stu-id="3f666-126">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original page after execution of the new page is completed.</span></span> <span data-ttu-id="3f666-127"><xref:System.Web.HttpServerUtility.Transfer%2A>メソッドが別のハンドラーの実行を無条件で転送します。</span><span class="sxs-lookup"><span data-stu-id="3f666-127">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="3f666-128">ASP.NET では、現在のユーザーは、によって提供されるリソースを表示する権限が検証されません、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-128">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="3f666-129">ASP.NET がで示されたハンドラーを直接呼び出しますが、ASP.NET の承認と認証ロジックの実行元のリソースのハンドラーが呼び出される前に、<xref:System.Web.HttpServerUtility.Execute%2A>メソッドと、新しい認証および承認ロジックを再実行されませんリソースです。</span><span class="sxs-lookup"><span data-stu-id="3f666-129">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="3f666-130">アプリケーションのセキュリティ ポリシーには、クライアントがリソースにアクセスする適切な承認が必要とする場合は、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="3f666-130">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="3f666-131">使用して強制することができます、<xref:System.Web.HttpResponse.Redirect%2A>メソッドの代わりに、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-131">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="3f666-132"><xref:System.Web.HttpResponse.Redirect%2A> ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-132"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="3f666-133">このリダイレクトは、システムへの新しい要求であるために、インターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認ロジックをそれが加わっています。</span><span class="sxs-lookup"><span data-stu-id="3f666-133">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="3f666-134">ユーザーが使用するカスタム承認方式を組み込むことにより、リソースを表示するアクセス許可を持っていることを確認できる、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>メソッド アプリケーション呼び出しの前に、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-134">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-135">次の例では、現在のディレクトリに"Updateinfo.aspx".aspx ページが表示されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-135">The following example displays the .aspx page "Updateinfo.aspx" in the current directory.</span></span> <span data-ttu-id="3f666-136">Updateinfo.aspx ページが表示された後、プログラムの実行は開始ページを返します。</span><span class="sxs-lookup"><span data-stu-id="3f666-136">Program execution returns to the starting page after the Updateinfo.aspx page is displayed.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-137">現在の <see cref="T:System.Web.HttpContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-137">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3f666-138">または</span><span class="sxs-lookup"><span data-stu-id="3f666-138">-or-</span></span> 
<span data-ttu-id="3f666-139"><paramref name="path" /> によって指定されているハンドラーの実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3f666-139">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-140"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-140"><paramref name="path" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3f666-141">- または -</span><span class="sxs-lookup"><span data-stu-id="3f666-141">-or-</span></span> 
 <span data-ttu-id="3f666-142"><paramref name="path" /> は仮想パスではありません。</span><span class="sxs-lookup"><span data-stu-id="3f666-142"><paramref name="path" /> is not a virtual path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * bool -&gt; unit" Usage="httpServerUtility.Execute (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-143">実行する URL パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-143">The URL path to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="3f666-144"><see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションを保持する場合は、<see langword="true" />。<see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションをクリアする場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-144"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="3f666-145">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行し、<see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションをクリアするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3f666-145">Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f666-146">次の例は、.aspx ページを実行する方法を示します`Updateinfo.aspx`で、現在の要求と保持、<xref:System.Web.HttpRequest.QueryString%2A>と<xref:System.Web.HttpRequest.Form%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="3f666-146">The following example shows how to execute the .aspx page `Updateinfo.aspx` in the current request and preserve the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span> <span data-ttu-id="3f666-147">プログラム実行後の最初のページに戻ります`Updateinfo.aspx`が表示されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-147">Program execution returns to the starting page after `Updateinfo.aspx` is displayed.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute/CS/httpserverutility.execute_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute/VB/httpserverutility.execute_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-148">現在の <see cref="T:System.Web.HttpContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-148">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3f666-149">または</span><span class="sxs-lookup"><span data-stu-id="3f666-149">-or-</span></span> 
<span data-ttu-id="3f666-150"><paramref name="path" /> によって指定されているハンドラーの実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3f666-150">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-151"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-151"><paramref name="path" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3f666-152">または</span><span class="sxs-lookup"><span data-stu-id="3f666-152">-or-</span></span> 
 <span data-ttu-id="3f666-153"><paramref name="path" /> は仮想パスではありません。</span><span class="sxs-lookup"><span data-stu-id="3f666-153"><paramref name="path" /> is not a virtual path.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.Execute (path, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-154">実行する URL パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-154">The URL path to execute.</span></span></param>
        <param name="writer"><span data-ttu-id="3f666-155">出力を取り込む <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-155">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span></span></param>
        <summary><span data-ttu-id="3f666-156">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-156">Executes the handler for the specified virtual path in the context of the current request.</span></span> <span data-ttu-id="3f666-157"><see cref="T:System.IO.TextWriter" /> は、実行されたハンドラーからの出力を取り込みます。</span><span class="sxs-lookup"><span data-stu-id="3f666-157">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-158"><xref:System.Web.HttpServerUtility.Execute%2A>メソッドは、指定した仮想パスの実行が完了した後に元の要求の実行を継続します。</span><span class="sxs-lookup"><span data-stu-id="3f666-158">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the virtual path specified is completed.</span></span> <span data-ttu-id="3f666-159"><xref:System.Web.HttpServerUtility.Transfer%2A>メソッドが別のハンドラーの実行を無条件で転送します。</span><span class="sxs-lookup"><span data-stu-id="3f666-159">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="3f666-160">ASP.NET では、現在のユーザーは、によって提供されるリソースを表示する権限が検証されません、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-160">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="3f666-161">ASP.NET がで示されたハンドラーを直接呼び出しますが、ASP.NET の承認と認証ロジックの実行元のリソースのハンドラーが呼び出される前に、<xref:System.Web.HttpServerUtility.Execute%2A>メソッドと、新しい認証および承認ロジックを再実行されませんリソースです。</span><span class="sxs-lookup"><span data-stu-id="3f666-161">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="3f666-162">アプリケーションのセキュリティ ポリシーには、クライアントがリソースにアクセスする適切な承認が必要とする場合は、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="3f666-162">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="3f666-163">使用して強制することができます、<xref:System.Web.HttpResponse.Redirect%2A>メソッドの代わりに、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-163">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="3f666-164"><xref:System.Web.HttpResponse.Redirect%2A> ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-164"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="3f666-165">このリダイレクトは、システムへの新しい要求であるために、インターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認ロジックをそれが加わっています。</span><span class="sxs-lookup"><span data-stu-id="3f666-165">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="3f666-166">ユーザーが使用するカスタム承認方式を組み込むことにより、リソースを表示するアクセス許可を持っていることを確認できる、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>メソッド アプリケーション呼び出しの前に、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-166">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-167">次の例では、実行、`Login.aspx`ページで、現在のディレクトリ内のサーバーとを使用してページから、出力を受け取って、<xref:System.IO.StringWriter>オブジェクト`writer`します。</span><span class="sxs-lookup"><span data-stu-id="3f666-167">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="3f666-168">受信した HTML ストリームを書き込みます`writer`を HTTP 出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="3f666-168">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-169">現在の <see cref="T:System.Web.HttpContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-169">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3f666-170">- または -</span><span class="sxs-lookup"><span data-stu-id="3f666-170">-or-</span></span> 
<span data-ttu-id="3f666-171"><paramref name="path" /> によって指定されているハンドラーの実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3f666-171">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-172"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-172"><paramref name="path" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="3f666-173">- または -</span><span class="sxs-lookup"><span data-stu-id="3f666-173">-or-</span></span> 
 <span data-ttu-id="3f666-174"><paramref name="path" /> は仮想パスではありません。</span><span class="sxs-lookup"><span data-stu-id="3f666-174"><paramref name="path" /> is not a virtual path.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : string * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtility.Execute (path, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-175">実行する URL パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-175">The URL path to execute.</span></span></param>
        <param name="writer"><span data-ttu-id="3f666-176">出力を取り込む <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-176">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="3f666-177"><see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションを保持する場合は、<see langword="true" />。<see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションをクリアする場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-177"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="3f666-178">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-178">Executes the handler for the specified virtual path in the context of the current request.</span></span> <span data-ttu-id="3f666-179"><see cref="T:System.IO.TextWriter" /> はページからの出力を取り込み、<see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションをクリアするかどうかをブール型のパラメーターで指定します。</span><span class="sxs-lookup"><span data-stu-id="3f666-179">A <see cref="T:System.IO.TextWriter" /> captures output from the page and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-180"><xref:System.Web.HttpServerUtility.Execute%2A>メソッドは、指定された仮想パスの実行が完了した後に元の要求の実行を継続します。</span><span class="sxs-lookup"><span data-stu-id="3f666-180">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the specified virtual path is completed.</span></span> <span data-ttu-id="3f666-181"><xref:System.Web.HttpServerUtility.Transfer%2A>メソッドが別のハンドラーの実行を無条件で転送します。</span><span class="sxs-lookup"><span data-stu-id="3f666-181">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="3f666-182">ASP.NET では、現在のユーザーは、によって提供されるリソースを表示する権限が検証されません、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-182">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="3f666-183">ASP.NET がで示されたハンドラーを直接呼び出しますが、ASP.NET の承認と認証ロジックの実行元のリソースのハンドラーが呼び出される前に、<xref:System.Web.HttpServerUtility.Execute%2A>メソッドと、新しい認証および承認ロジックを再実行されませんリソースです。</span><span class="sxs-lookup"><span data-stu-id="3f666-183">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="3f666-184">アプリケーションのセキュリティ ポリシーには、クライアントがリソースにアクセスする適切な承認が必要とする場合は、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="3f666-184">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="3f666-185">使用して強制することができます、<xref:System.Web.HttpResponse.Redirect%2A>メソッドの代わりに、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-185">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="3f666-186"><xref:System.Web.HttpResponse.Redirect%2A> ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-186"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="3f666-187">このリダイレクトは、システムへの新しい要求であるために、インターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認ロジックをそれが加わっています。</span><span class="sxs-lookup"><span data-stu-id="3f666-187">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="3f666-188">ユーザーが使用するカスタム承認方式を組み込むことにより、リソースを表示するアクセス許可を持っていることを確認できる、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>メソッド アプリケーション呼び出しの前に、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-188">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-189">次の例では、実行、`Login.aspx`ページで、現在のディレクトリ内のサーバーとを使用してページから、出力を受け取って、<xref:System.IO.StringWriter>オブジェクト`writer`します。</span><span class="sxs-lookup"><span data-stu-id="3f666-189">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="3f666-190">受信した HTML ストリームを書き込みます`writer`を HTTP 出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="3f666-190">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span> <span data-ttu-id="3f666-191">内容、<xref:System.Web.HttpRequest.Form%2A>と<xref:System.Web.HttpRequest.QueryString%2A>コレクションが保持されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-191">The contents of the <xref:System.Web.HttpRequest.Form%2A> and <xref:System.Web.HttpRequest.QueryString%2A> collections are preserved.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute02#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute02/CS/httpserverutility.execute02_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute02#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute02/VB/httpserverutility.execute02_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-192">現在の <see cref="T:System.Web.HttpContext" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3f666-192">The current <see cref="T:System.Web.HttpContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>  
  
<span data-ttu-id="3f666-193">または</span><span class="sxs-lookup"><span data-stu-id="3f666-193">-or-</span></span> 
 <span data-ttu-id="3f666-194"><paramref name="path" /> がピリオド (.) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="3f666-194"><paramref name="path" /> ends with a period (.).</span></span>  
  
<span data-ttu-id="3f666-195">- または -</span><span class="sxs-lookup"><span data-stu-id="3f666-195">-or-</span></span> 
<span data-ttu-id="3f666-196"><paramref name="path" /> によって指定されているハンドラーの実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3f666-196">An error occurred while executing the handler specified by <paramref name="path" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-197"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-197"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f666-198"><paramref name="path" /> は仮想パスではありません。</span><span class="sxs-lookup"><span data-stu-id="3f666-198"><paramref name="path" /> is not a virtual path.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Web.IHttpHandler handler, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (handler As IHttpHandler, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Web::IHttpHandler ^ handler, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Web.IHttpHandler * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtility.Execute (handler, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="3f666-199">現在の要求の転送先となる <see cref="T:System.Web.IHttpHandler" /> を実装する HTTP ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="3f666-199">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span></span></param>
        <param name="writer"><span data-ttu-id="3f666-200">出力を取り込む <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-200">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="3f666-201"><see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションを保持する場合は、<see langword="true" />。<see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションをクリアする場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-201"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="3f666-202">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-202">Executes the handler for the specified virtual path in the context of the current request.</span></span> <span data-ttu-id="3f666-203"><see cref="T:System.IO.TextWriter" /> は実行されたハンドラーからの出力を取り込み、<see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションをクリアするかどうかをブール型のパラメーターで指定します。</span><span class="sxs-lookup"><span data-stu-id="3f666-203">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-204">共通言語仕様 (CLS) に準拠した任意の言語で HTTP 要求の特定、定義済みの型を処理するカスタム HTTP ハンドラーを記述できます。</span><span class="sxs-lookup"><span data-stu-id="3f666-204">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="3f666-205">従来の ASP (従来の ASP とも呼ばれます) ページまたは ASP.NET ページではなく HTTP ハンドラー クラスで定義されている実行可能コードは、これらの特定の要求に応答します。</span><span class="sxs-lookup"><span data-stu-id="3f666-205">Executable code that is defined in the HTTP handler classes instead of  conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="3f666-206">低レベルの要求とインターネット インフォメーション サービス (IIS) を実行している Web サーバーの応答サービスを操作する HTTP ハンドラーを使用して、次のような機能を提供する ISAPI 拡張機能がより単純なプログラミング モデル。</span><span class="sxs-lookup"><span data-stu-id="3f666-206">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="3f666-207">ASP.NET では、現在のユーザーは、によって配信されるリソースを表示する権限が検証されません、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-207">ASP.NET does not verify that the current user is authorized to view the resource that is delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="3f666-208">ASP.NET がで示されたハンドラーを直接呼び出しますが、ASP.NET の承認と認証ロジックの実行元のリソースのハンドラーが呼び出される前に、<xref:System.Web.HttpServerUtility.Execute%2A>メソッドの認証および承認ロジックを再実行されませんし、新しいリソース。</span><span class="sxs-lookup"><span data-stu-id="3f666-208">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler that is indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="3f666-209">アプリケーションのセキュリティ ポリシーには、クライアントがリソースにアクセスする適切な承認が必要とする場合は、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="3f666-209">If the security policy for your application requires clients to have appropriate authorization to gain access to the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="3f666-210">使用して強制することができます、<xref:System.Web.HttpResponse.Redirect%2A>メソッドの代わりに、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-210">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="3f666-211"><xref:System.Web.HttpResponse.Redirect%2A>ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-211">The <xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="3f666-212">このリダイレクトは、システムへの新しい要求であるために、IIS と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認ロジックをそれが加わっています。</span><span class="sxs-lookup"><span data-stu-id="3f666-212">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="3f666-213">ユーザーが使用するカスタム承認方式を組み込むことにより、リソースを表示するアクセス許可を持っていることを確認できる、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>メソッド アプリケーション呼び出しの前に、<xref:System.Web.HttpServerUtility.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-213">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-214"><paramref name="handler" /> によって指定されているハンドラーの実行中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="3f666-214">An error occurred while executing the handler specified by <paramref name="handler" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-215"><paramref name="handler" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-215">The <paramref name="handler" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="GetLastError">
      <MemberSignature Language="C#" Value="public Exception GetLastError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception GetLastError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.GetLastError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastError () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetLastError();" />
      <MemberSignature Language="F#" Value="member this.GetLastError : unit -&gt; Exception" Usage="httpServerUtility.GetLastError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f666-216">前回の例外を返します。</span><span class="sxs-lookup"><span data-stu-id="3f666-216">Returns the previous exception.</span></span></summary>
        <returns><span data-ttu-id="3f666-217">スローされた前回の例外。</span><span class="sxs-lookup"><span data-stu-id="3f666-217">The previous exception that was thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f666-218">次の例では、HTTP 出力ストリームに、アプリケーションの最後のエラーの説明を出力します。</span><span class="sxs-lookup"><span data-stu-id="3f666-218">The following example prints a description of the application's last error to the HTTP output stream.</span></span> <span data-ttu-id="3f666-219">エラーが発生しなかった場合は、「エラーなし」を出力します。</span><span class="sxs-lookup"><span data-stu-id="3f666-219">It prints "No Errors" if no errors have been encountered.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.ClearError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f666-220">エンコードされた文字列をデコードして、無効な HTML 文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="3f666-220">Decodes a string that has been encoded to eliminate invalid HTML characters.</span></span>  
  
<span data-ttu-id="3f666-221"><see cref="T:System.Net.WebUtility" /> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-221">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.HtmlDecode : string -&gt; string" Usage="httpServerUtility.HtmlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3f666-222">デコードする HTML 文字列。</span><span class="sxs-lookup"><span data-stu-id="3f666-222">The HTML string to decode.</span></span></param>
        <summary><span data-ttu-id="3f666-223">HTML エンコードされた文字列をデコードし、デコードした文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3f666-223">Decodes an HTML-encoded string and returns the decoded string.</span></span></summary>
        <returns><span data-ttu-id="3f666-224">デコードされたテキスト。</span><span class="sxs-lookup"><span data-stu-id="3f666-224">The decoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-225">HTML エンコードは、テキストが、ブラウザーに正しく表示され、ブラウザーで HTML として解釈されないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3f666-225">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="3f666-226">たとえば、テキスト文字列には、小なり記号が含まれている場合 (\<) 以上、ブラウザーで開くまたは HTML タグの右角かっことこれらの文字は解釈不等号 (>)、します。</span><span class="sxs-lookup"><span data-stu-id="3f666-226">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="3f666-227">文字列への変換の文字が HTML エンコードの場合は、`&lt;`と`&gt;`、それが原因で、不等号以降より小記号として正しく表示するブラウザー。</span><span class="sxs-lookup"><span data-stu-id="3f666-227">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span> <span data-ttu-id="3f666-228"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> サーバーに転送されているテキストをデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-228"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="3f666-229">このメソッドは、アクセスする便利な方法、<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>実行時に ASP.NET アプリケーションからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-229">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3f666-230">このメソッドを使用して内部的には、<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>文字列をデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-230">Internally, this method uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="3f666-231">ASP.NET web ページの分離コード ファイルでのインスタンスにアクセス、<xref:System.Web.HttpServerUtility>クラスを通じて、`Server`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3f666-231">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="3f666-232">分離コード ファイルに含まれていないクラスで使用`HttpContext.Current.Server`のインスタンスにアクセスする、<xref:System.Web.HttpServerUtility>クラス。</span><span class="sxs-lookup"><span data-stu-id="3f666-232">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="3f666-233">Web アプリケーションでは、外部で使用して、<xref:System.Net.WebUtility>エンコードまたはデコード値クラス。</span><span class="sxs-lookup"><span data-stu-id="3f666-233">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-234">次の例は、関数を含む`LoadDecodedFile`、ファイルからデータをデコードして、1 つの文字列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="3f666-234">The following example contains the function `LoadDecodedFile`, which decodes the data from a file and copies it into one string.</span></span>  
  
 [!code-aspx-csharp[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.HtmlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3f666-235">デコードする HTML 文字列。</span><span class="sxs-lookup"><span data-stu-id="3f666-235">The HTML string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="3f666-236">デコードされた文字列を格納する <see cref="T:System.IO.TextWriter" /> 出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="3f666-236">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span></span></param>
        <summary><span data-ttu-id="3f666-237">HTML エンコードされた文字列をデコードし、その結果の出力を <see cref="T:System.IO.TextWriter" /> 出力ストリームに送信します。</span><span class="sxs-lookup"><span data-stu-id="3f666-237">Decodes an HTML-encoded string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-238">HTML エンコードは、テキストが、ブラウザーに正しく表示され、ブラウザーで HTML として解釈されないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3f666-238">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="3f666-239">たとえば、テキスト文字列には、小なり記号が含まれている場合 (\<) 以上、ブラウザーで開くまたは HTML タグの右角かっことこれらの文字は解釈不等号 (>)、します。</span><span class="sxs-lookup"><span data-stu-id="3f666-239">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="3f666-240">文字列への変換の文字が HTML エンコードの場合は、`&lt;`と`&gt;`、それが原因で、不等号以降より小記号として正しく表示するブラウザー。</span><span class="sxs-lookup"><span data-stu-id="3f666-240">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="3f666-241"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> サーバーに転送されているテキストをデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-241"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="3f666-242"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> アクセスする便利な方法は、<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>実行時に ASP.NET アプリケーションからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-242"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3f666-243">内部的には、<xref:System.Web.HttpServerUtility.HtmlDecode%2A>使用<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>文字列をデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-243">Internally, <xref:System.Web.HttpServerUtility.HtmlDecode%2A> uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="3f666-244"><xref:System.Net.WebUtility> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-244">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-245">次の例では、HTML エンコードされた送信用 HTTP 経由で文字列をデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-245">The following example decodes a string that has been HTML-encoded for transmission over HTTP.</span></span> <span data-ttu-id="3f666-246">という名前の指定された文字列をデコード`EncodedString`テキストが含まれています"これは、&lt;テスト文字列&gt;."、という名前の文字列にコピーして`DecodedString`として"これは、\<テスト文字列 >."です。</span><span class="sxs-lookup"><span data-stu-id="3f666-246">It decodes the supplied string named `EncodedString` which contains the text "This is a &lt;Test String&gt;.", and copies it into the string named `DecodedString` as "This is a \<Test String>.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f666-247">ブラウザーに表示される文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-247">Encodes a string to be displayed in a browser.</span></span>  
  
<span data-ttu-id="3f666-248"><see cref="T:System.Net.WebUtility" /> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-248">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : string -&gt; string" Usage="httpServerUtility.HtmlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3f666-249">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="3f666-249">The text string to encode.</span></span></param>
        <summary><span data-ttu-id="3f666-250">文字列を HTML エンコードし、エンコードされた文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3f666-250">HTML-encodes a string and returns the encoded string.</span></span></summary>
        <returns><span data-ttu-id="3f666-251">HTML エンコードされたテキスト。</span><span class="sxs-lookup"><span data-stu-id="3f666-251">The HTML-encoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-252">HTML エンコードは、テキストが、ブラウザーに正しく表示され、ブラウザーで HTML として解釈されないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="3f666-252">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="3f666-253">たとえば、テキスト文字列には、小なり記号が含まれている場合 (\<) 以上、ブラウザーで開くまたは HTML タグの右角かっことこれらの文字は解釈不等号 (>)、します。</span><span class="sxs-lookup"><span data-stu-id="3f666-253">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="3f666-254">文字列への変換の文字が HTML エンコードの場合は、`&lt;`と`&gt;`、それが原因で、不等号以降より小記号として正しく表示するブラウザー。</span><span class="sxs-lookup"><span data-stu-id="3f666-254">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="3f666-255">このメソッドは、アクセスする便利な方法、<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>実行時に ASP.NET アプリケーションからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-255">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3f666-256">このメソッドを使用して内部的には、<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-256">Internally, this method uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="3f666-257">ASP.NET web ページの分離コード ファイルでのインスタンスにアクセス、<xref:System.Web.HttpServerUtility>クラスを通じて、`Server`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3f666-257">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="3f666-258">分離コード ファイルに含まれていないクラスで使用`HttpContext.Current.Server`のインスタンスにアクセスする、<xref:System.Web.HttpServerUtility>クラス。</span><span class="sxs-lookup"><span data-stu-id="3f666-258">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="3f666-259">Web アプリケーションでは、外部で使用して、<xref:System.Net.WebUtility>エンコードまたはデコード値クラス。</span><span class="sxs-lookup"><span data-stu-id="3f666-259">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-260">次の例では、どの値を HTML エンコードする可能性のあるコード アンセーフ コードを示します。</span><span class="sxs-lookup"><span data-stu-id="3f666-260">The following example shows how to HTML-encode a value that potentially codes unsafe code.</span></span> <span data-ttu-id="3f666-261">コードは、web ページの分離コード ファイルに存在します。</span><span class="sxs-lookup"><span data-stu-id="3f666-261">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="3f666-262">エンコードする値は、のみを例を簡略化し、HTML エンコードする場合があります値の型を表示するには、この例では、ハードコーディングします。</span><span class="sxs-lookup"><span data-stu-id="3f666-262">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode.</span></span> <span data-ttu-id="3f666-263">通常と HTML エンコード、ユーザーまたは要求から受信した値。</span><span class="sxs-lookup"><span data-stu-id="3f666-263">Typically, you would HTML-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="3f666-264">`Result` 指す、`Literal`コントロール。</span><span class="sxs-lookup"><span data-stu-id="3f666-264">`Result` refers to a `Literal` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="3f666-265">表示されますが、次の例は前の例のような方法を HTML エンコードするクラス内の値でない分離コード ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="3f666-265">The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.HtmlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3f666-266">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="3f666-266">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="3f666-267">エンコードされた文字列を格納している <see cref="T:System.IO.TextWriter" /> 出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="3f666-267">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span></span></param>
        <summary><span data-ttu-id="3f666-268">文字列を HTML エンコードし、その結果の出力を <see cref="T:System.IO.TextWriter" /> 出力ストリームに送信します。</span><span class="sxs-lookup"><span data-stu-id="3f666-268">HTML-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-269">ブラウザーで HTML として解釈されない、ブラウザーでテキストが正しく表示されることにより、HTML エンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-269">HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML.</span></span> <span data-ttu-id="3f666-270">たとえば、テキスト文字列には、小なり記号が含まれている場合 (\<) 以上不等号 (>)、ブラウザーではこれらの文字として解釈タグまたは HTML タグの右角かっこです。</span><span class="sxs-lookup"><span data-stu-id="3f666-270">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as an opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="3f666-271">これら 2 つの文字の HTML エンコードでは`&lt;`と`&gt;`、それぞれ、それが原因で、不等号以降より小記号として正しく表示するブラウザー。</span><span class="sxs-lookup"><span data-stu-id="3f666-271">The HTML encoding of these two characters is `&lt;` and `&gt;`, respectively, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="3f666-272"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> アクセスする便利な方法は、<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>実行時に ASP.NET アプリケーションからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-272"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3f666-273">内部的には、<xref:System.Web.HttpServerUtility.HtmlEncode%2A>使用<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-273">Internally, <xref:System.Web.HttpServerUtility.HtmlEncode%2A> uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="3f666-274"><xref:System.Net.WebUtility> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-274">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-275">次の例では、HTTP で伝送用の文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-275">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="3f666-276">という名前の文字列をエンコード`TestString`、テキストが含まれています"これは、\<テスト文字列 >."、という名前の文字列にコピーして`EncodedString`として"これは、&lt;テスト文字列&gt;。"です。</span><span class="sxs-lookup"><span data-stu-id="3f666-276">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This is a &lt;Test String&gt;.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Web.HttpServerUtility.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f666-277">サーバーのコンピューター名を取得します。</span><span class="sxs-lookup"><span data-stu-id="3f666-277">Gets the server's computer name.</span></span></summary>
        <value><span data-ttu-id="3f666-278">ローカル コンピューターの名前。</span><span class="sxs-lookup"><span data-stu-id="3f666-278">The name of the local computer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3f666-279">次の例では、文字列変数として、サーバーのコンピューター名を格納します。</span><span class="sxs-lookup"><span data-stu-id="3f666-279">The following example stores the server's computer name as a string variable.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-280">コンピューター名が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="3f666-280">The computer name cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpServerUtility.MapPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-281">Web アプリケーション内の仮想パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-281">The virtual path in the Web application.</span></span></param>
        <summary><span data-ttu-id="3f666-282">指定した仮想パスに対応する物理ファイル パスを返します。</span><span class="sxs-lookup"><span data-stu-id="3f666-282">Returns the physical file path that corresponds to the specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="3f666-283"><paramref name="path" /> に対応する、Web サーバー上の物理ファイル パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-283">The physical file path on the Web server that corresponds to <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-284">場合`path`は`null`、<xref:System.Web.HttpServerUtility.MapPath%2A>メソッドは、パスの現在の要求を含むディレクトリの完全な物理パスを返します。</span><span class="sxs-lookup"><span data-stu-id="3f666-284">If `path` is `null`, the <xref:System.Web.HttpServerUtility.MapPath%2A> method returns the full physical path of the directory that contains the current request for the path.</span></span> <span data-ttu-id="3f666-285">相対パスは、既存のファイルまたはフォルダーの値を返すには、このメソッドを指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="3f666-285">The relative path does not need to specify an existing file or folder for this method to return a value.</span></span> <span data-ttu-id="3f666-286">ただし、Web アプリケーションの外部でパスを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="3f666-286">However, you cannot specify a path outside of the Web application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3f666-287"><xref:System.Web.HttpServerUtility.MapPath%2A>メソッドに可能性のあるホスティング環境に関する機密情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3f666-287">The <xref:System.Web.HttpServerUtility.MapPath%2A> method potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="3f666-288">戻り値は、ユーザーには表示されません。</span><span class="sxs-lookup"><span data-stu-id="3f666-288">The return value should not be displayed to users.</span></span>  
  
 <span data-ttu-id="3f666-289">Web アプリケーションに配置されている`C:\ExampleSites\TestMapPath`次の結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-289">A Web application that resides at `C:\ExampleSites\TestMapPath` would return the following results:</span></span>  
  
|<span data-ttu-id="3f666-290">要求します。</span><span class="sxs-lookup"><span data-stu-id="3f666-290">Request from</span></span>|`path`|<span data-ttu-id="3f666-291">戻り値</span><span class="sxs-lookup"><span data-stu-id="3f666-291">Returned value</span></span>|  
|------------------|------------|--------------------|  
|<span data-ttu-id="3f666-292">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="3f666-292">RootLevelPage.aspx</span></span>|`null`|<span data-ttu-id="3f666-293">C:\ExampleSites\TestMapPath</span><span class="sxs-lookup"><span data-stu-id="3f666-293">C:\ExampleSites\TestMapPath</span></span>|  
|<span data-ttu-id="3f666-294">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="3f666-294">RootLevelPage.aspx</span></span>|<span data-ttu-id="3f666-295">"/DownOneLevel/DownLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="3f666-295">"/DownOneLevel/DownLevelPage.aspx"</span></span>|<span data-ttu-id="3f666-296">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="3f666-296">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span></span>|  
|<span data-ttu-id="3f666-297">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="3f666-297">RootLevelPage.aspx</span></span>|<span data-ttu-id="3f666-298">"/NotRealFolder"</span><span class="sxs-lookup"><span data-stu-id="3f666-298">"/NotRealFolder"</span></span>|<span data-ttu-id="3f666-299">C:\ExampleSites\TestMapPath\NotRealFolder</span><span class="sxs-lookup"><span data-stu-id="3f666-299">C:\ExampleSites\TestMapPath\NotRealFolder</span></span>|  
|<span data-ttu-id="3f666-300">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="3f666-300">RootLevelPage.aspx</span></span>|<span data-ttu-id="3f666-301">"../OutsideApplication"</span><span class="sxs-lookup"><span data-stu-id="3f666-301">"../OutsideApplication"</span></span>|<xref:System.Web.HttpException>|  
|<span data-ttu-id="3f666-302">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="3f666-302">/DownOneLevel/DownLevelPage.aspx</span></span>|`null`|<span data-ttu-id="3f666-303">C:\ExampleSites\TestMapPath\DownOneLevel</span><span class="sxs-lookup"><span data-stu-id="3f666-303">C:\ExampleSites\TestMapPath\DownOneLevel</span></span>|  
|<span data-ttu-id="3f666-304">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="3f666-304">/DownOneLevel/DownLevelPage.aspx</span></span>|<span data-ttu-id="3f666-305">"../RootLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="3f666-305">"../RootLevelPage.aspx"</span></span>|<span data-ttu-id="3f666-306">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="3f666-306">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3f666-307">次の例では、物理ファイルの相対仮想パスを取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3f666-307">The following example shows how to retrieve the physical file of a relative virtual path.</span></span> <span data-ttu-id="3f666-308">コードは、web ページの分離コード ファイル内に存在し、既定値を利用して`Server`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f666-308">The code resides in the code-behind file for a web page and utilizes the default `Server` object.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="3f666-309">次の例は、点を除いて、分離コード ファイルに含まれていないクラス内からの物理パスを取得する方法を示します、前の例に似ています。</span><span class="sxs-lookup"><span data-stu-id="3f666-309">The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-310">現在の <see cref="T:System.Web.HttpContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-310">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span>
        
<span data-ttu-id="3f666-311">- または -</span><span class="sxs-lookup"><span data-stu-id="3f666-311">-or-</span></span> 
<span data-ttu-id="3f666-312"><paramref name="path" /> は物理パスです。仮想パスを指定してください。</span><span class="sxs-lookup"><span data-stu-id="3f666-312"><paramref name="path" /> is a physical path, but a virtual path was expected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTimeout">
      <MemberSignature Language="C#" Value="public int ScriptTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScriptTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.ScriptTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScriptTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTimeout : int with get, set" Usage="System.Web.HttpServerUtility.ScriptTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f666-313">要求タイムアウト値を秒単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3f666-313">Gets or sets the request time-out value in seconds.</span></span></summary>
        <value><span data-ttu-id="3f666-314">要求のタイムアウト値設定。</span><span class="sxs-lookup"><span data-stu-id="3f666-314">The time-out value setting for requests.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-315"><xref:System.Web.HttpServerUtility.ScriptTimeout%2A>を設定して、Web.config ファイルでプロパティを設定できる、`executionTimeout`要素の属性。</span><span class="sxs-lookup"><span data-stu-id="3f666-315">The <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property can be set in the Web.config file by setting the `executionTimeout` attribute of the  element.</span></span> <span data-ttu-id="3f666-316">プログラムでタイムアウトの設定、<xref:System.Web.HttpServerUtility.ScriptTimeout%2A>プロパティは、Web.config 設定よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-316">Setting the time-out programmatically with the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property takes precedence over the Web.config setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3f666-317">設定した場合、`debug`する要素の属性`true`Web.config ファイルの値で<xref:System.Web.HttpServerUtility.ScriptTimeout%2A>は無視されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-317">If you set the `debug` attribute of the  element to `true` in the Web.config file, the value of <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> will be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-318">次の例では、要求のタイムアウト時間を 60 秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="3f666-318">The following example sets the request time-out period to 60 seconds.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-319">現在の <see cref="T:System.Web.HttpContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-319">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3f666-320">タイムアウト時間が <see langword="null" /> です。または、それ以外の設定ができませんでした。</span><span class="sxs-lookup"><span data-stu-id="3f666-320">The time-out period is <see langword="null" /> or otherwise could not be set.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transfer">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f666-321">現在のページの実行を終了し、現在の要求に対して新しいページの実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="3f666-321">Terminates execution of the current page and starts execution of a new page for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Transfer : string -&gt; unit" Usage="httpServerUtility.Transfer path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-322">サーバー上にある、実行する新しいページの URL パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-322">The URL path of the new page on the server to execute.</span></span></param>
        <summary><span data-ttu-id="3f666-323">現在の要求に対して、現在のページの実行を終了し、指定された URL パスを使用して新しいページの実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="3f666-323">For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-324">転送先のページは、別の .aspx ページにあります。</span><span class="sxs-lookup"><span data-stu-id="3f666-324">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="3f666-325">たとえば、.asp、または .asmx ページへの転送が無効です。</span><span class="sxs-lookup"><span data-stu-id="3f666-325">For instance, a transfer to an .asp or .asmx page is not valid.</span></span> <span data-ttu-id="3f666-326"><xref:System.Web.HttpServerUtility.Transfer%2A>メソッドが保持されます、<xref:System.Web.HttpRequest.QueryString%2A>と<xref:System.Web.HttpRequest.Form%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="3f666-326">The <xref:System.Web.HttpServerUtility.Transfer%2A> method preserves the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span>  
  
 <span data-ttu-id="3f666-327"><xref:System.Web.HttpServerUtility.Transfer%2A> 呼び出し<xref:System.Web.HttpResponse.End%2A>、どのがスローされます、<xref:System.Threading.ThreadAbortException>完了時に例外。</span><span class="sxs-lookup"><span data-stu-id="3f666-327"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="3f666-328">ASP.NET では、現在のユーザーは、によって提供されるリソースを表示する権限が検証されません、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-328">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="3f666-329">ASP.NET がで示されたハンドラーを直接呼び出しますが、ASP.NET の承認と認証ロジックの実行元のリソースのハンドラーが呼び出される前に、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッドと、新しい認証および承認ロジックを再実行されませんリソースです。</span><span class="sxs-lookup"><span data-stu-id="3f666-329">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="3f666-330">アプリケーションのセキュリティ ポリシーには、クライアントがリソースにアクセスする適切な承認が必要とする場合は、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="3f666-330">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="3f666-331">使用して強制することができます、<xref:System.Web.HttpResponse.Redirect%2A>メソッドの代わりに、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-331">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="3f666-332"><xref:System.Web.HttpResponse.Redirect%2A>メソッドは、ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-332">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="3f666-333">このリダイレクトは、システムへの新しい要求であるために、インターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認ロジックをそれが加わっています。</span><span class="sxs-lookup"><span data-stu-id="3f666-333">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="3f666-334">ユーザーが使用するカスタム承認方式を組み込むことにより、リソースを表示するアクセス許可を持っていることを確認できる、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>メソッド アプリケーション呼び出しの前に、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-334">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Transfer : string * bool -&gt; unit" Usage="httpServerUtility.Transfer (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-335">サーバー上にある、実行する新しいページの URL パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-335">The URL path of the new page on the server to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="3f666-336"><see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションを保持する場合は、<see langword="true" />。<see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションをクリアする場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-336"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="3f666-337">現在のページの実行を終了し、指定された URL パスを使用して新しいページの実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="3f666-337">Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span></span> <span data-ttu-id="3f666-338"><see cref="P:System.Web.HttpRequest.QueryString" /> コレクションと <see cref="P:System.Web.HttpRequest.Form" /> コレクションを削除するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3f666-338">Specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-339">転送先のページは、別の .aspx ページにあります。</span><span class="sxs-lookup"><span data-stu-id="3f666-339">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="3f666-340">たとえば、.asp、または .asmx ページへの転送が無効です。</span><span class="sxs-lookup"><span data-stu-id="3f666-340">For instance, a transfer to an .asp or .asmx page is not valid.</span></span>  
  
 <span data-ttu-id="3f666-341"><xref:System.Web.HttpServerUtility.Transfer%2A> 呼び出し<xref:System.Web.HttpResponse.End%2A>、どのがスローされます、<xref:System.Threading.ThreadAbortException>完了時に例外。</span><span class="sxs-lookup"><span data-stu-id="3f666-341"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="3f666-342">設定した場合、`preserveForm`パラメーターを`true`、移動先のページを使用して、前のページのビュー ステートにアクセスできる、<xref:System.Web.UI.Page.PreviousPage%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3f666-342">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="3f666-343">セキュリティのために、おく必要があります、`enableViewStateMac`属性に設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="3f666-343">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="3f666-344">ASP.NET では、現在のユーザーは、によって提供されるリソースを表示する権限が検証されません、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-344">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="3f666-345">ASP.NET がで示されたハンドラーを直接呼び出しますが、ASP.NET の承認と認証ロジックの実行元のリソースのハンドラーが呼び出される前に、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッドと、新しい認証および承認ロジックを再実行されませんリソースです。</span><span class="sxs-lookup"><span data-stu-id="3f666-345">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="3f666-346">アプリケーションのセキュリティ ポリシーには、クライアントがリソースにアクセスする適切な承認が必要とする場合は、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="3f666-346">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="3f666-347">使用して強制することができます、<xref:System.Web.HttpResponse.Redirect%2A>メソッドの代わりに、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-347">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="3f666-348"><xref:System.Web.HttpResponse.Redirect%2A>メソッドは、ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-348">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="3f666-349">このリダイレクトは、システムへの新しい要求であるために、インターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認ロジックをそれが加わっています。</span><span class="sxs-lookup"><span data-stu-id="3f666-349">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="3f666-350">ユーザーが使用するカスタム承認方式を組み込むことにより、リソースを表示するアクセス許可を持っていることを確認できる、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>メソッド アプリケーション呼び出しの前に、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-350">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-351">次の例では、現在のページと同じディレクトリに新しいページを実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-351">The following example executes a new page in the same directory as the current page.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="3f666-352">現在のページ要求がコールバックです。</span><span class="sxs-lookup"><span data-stu-id="3f666-352">The current page request is a callback.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (System.Web.IHttpHandler handler, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(class System.Web.IHttpHandler handler, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (handler As IHttpHandler, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::Web::IHttpHandler ^ handler, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.Transfer : System.Web.IHttpHandler * bool -&gt; unit" Usage="httpServerUtility.Transfer (handler, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="3f666-353">現在の要求の転送先となる <see cref="T:System.Web.IHttpHandler" /> を実装する HTTP ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="3f666-353">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="3f666-354"><see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションを保持する場合は、<see langword="true" />。<see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションをクリアする場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-354"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></param>
        <summary><span data-ttu-id="3f666-355">現在のページの実行を終了し、カスタム HTTP ハンドラーを使用して新しい要求の実行を開始します。このハンドラーは、<see cref="T:System.Web.IHttpHandler" /> インターフェイスを実装し、<see cref="P:System.Web.HttpRequest.QueryString" /> コレクションおよび <see cref="P:System.Web.HttpRequest.Form" /> コレクションをクリアするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="3f666-355">Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-356">共通言語仕様 (CLS) に準拠した任意の言語で HTTP 要求の特定、定義済みの型を処理するカスタム HTTP ハンドラーを記述できます。</span><span class="sxs-lookup"><span data-stu-id="3f666-356">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="3f666-357">従来の ASP (従来の ASP とも呼ばれます) ページまたは ASP.NET ページではなく HTTP ハンドラー クラスで定義されている実行可能コードは、これらの特定の要求に応答します。</span><span class="sxs-lookup"><span data-stu-id="3f666-357">Executable code that is defined in the HTTP handler classes instead of conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="3f666-358">低レベルの要求とインターネット インフォメーション サービス (IIS) を実行している Web サーバーの応答サービスを操作する HTTP ハンドラーを使用して、次のような機能を提供する ISAPI 拡張機能がより単純なプログラミング モデル。</span><span class="sxs-lookup"><span data-stu-id="3f666-358">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="3f666-359">設定した場合、`preserveForm`パラメーターを`true`、移動先のページを使用して、前のページのビュー ステートにアクセスできる、<xref:System.Web.UI.Page.PreviousPage%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3f666-359">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="3f666-360">セキュリティのために、おく必要があります、`enableViewStateMac`属性に設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="3f666-360">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="3f666-361">ASP.NET では、現在のユーザーは、によって提供されるリソースを表示する権限が検証されません、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-361">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="3f666-362">ASP.NET がで示されたハンドラーを直接呼び出しますが、ASP.NET の承認と認証ロジックの実行元のリソースのハンドラーが呼び出される前に、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド、および新しいは再実行は認証と承認ロジックリソースです。</span><span class="sxs-lookup"><span data-stu-id="3f666-362">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method, and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="3f666-363">アプリケーションのセキュリティ ポリシーには、クライアントがリソースにアクセスする適切な承認が必要とする場合は、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="3f666-363">If the security policy for your application requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="3f666-364">使用して強制することができます、<xref:System.Web.HttpResponse.Redirect%2A>メソッドの代わりに、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-364">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="3f666-365"><xref:System.Web.HttpResponse.Redirect%2A>メソッドは、ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-365">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="3f666-366">このリダイレクトは、システムへの新しい要求であるために、IIS と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認ロジックをそれが加わっています。</span><span class="sxs-lookup"><span data-stu-id="3f666-366">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="3f666-367">ユーザーが使用するカスタム承認方式を組み込むことにより、リソースを表示するアクセス許可を持っていることを確認できる、<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>メソッド アプリケーション呼び出しの前に、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-367">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="3f666-368">現在のページ要求がコールバックです。</span><span class="sxs-lookup"><span data-stu-id="3f666-368">The current page request is a callback.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransferRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f666-369">指定した URL の非同期実行を行います。</span><span class="sxs-lookup"><span data-stu-id="3f666-369">Performs an asynchronous execution of the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-370"><xref:System.Web.HttpServerUtility.TransferRequest%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="3f666-370"><xref:System.Web.HttpServerUtility.TransferRequest%2A> was introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="3f666-371">.NET Framework の概要については、次を参照してください。[バージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)します。</span><span class="sxs-lookup"><span data-stu-id="3f666-371">For summary information about the .NET Framework, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string -&gt; unit" Usage="httpServerUtility.TransferRequest path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-372">サーバー上にある、実行する新しいページの URL パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-372">The URL path of the new page on the server to execute.</span></span></param>
        <summary><span data-ttu-id="3f666-373">指定した URL の非同期実行を行います。</span><span class="sxs-lookup"><span data-stu-id="3f666-373">Performs an asynchronous execution of the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-374">このメソッドのオーバー ロードを呼び出す、<xref:System.Web.HttpServerUtility.TransferRequest%2A>オーバー ロード、`preserveForm`パラメーターに設定`false`、`method`パラメーターに設定`null`、`headers`パラメーターに設定`null`、および`preserveUser`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="3f666-374">This method overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to `false`, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="3f666-375">詳細については、「解説」セクションを参照してください。<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-375">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3f666-376">この要求には、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプライン モードが必要です。</span><span class="sxs-lookup"><span data-stu-id="3f666-376">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-377">要求を処理するサーバーが使用できません。</span><span class="sxs-lookup"><span data-stu-id="3f666-377">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-378"><paramref name="path" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-378">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f666-379"><paramref name="path" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3f666-379">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-380">サーバー上にある、実行する新しいページの URL パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-380">The URL path of the new page on the server to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="3f666-381"><see cref="P:System.Web.HttpRequest.Form" /> コレクションを保持する場合は <see langword="true" />、<see cref="P:System.Web.HttpRequest.Form" /> コレクションを消去する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-381"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span></span></param>
        <summary><span data-ttu-id="3f666-382">指定した URL の非同期実行を行い、クエリ文字列パラメーターを保持します。</span><span class="sxs-lookup"><span data-stu-id="3f666-382">Performs an asynchronous execution of the specified URL and preserves query string parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-383">このオーバー ロードを呼び出す、<xref:System.Web.HttpServerUtility.TransferRequest%2A>オーバー ロード、`preserveForm`パラメーターに渡される値を設定、`method`パラメーターに設定`null`、`headers`パラメーターに設定`null`、および`preserveUser`パラメーター セット`true`します。</span><span class="sxs-lookup"><span data-stu-id="3f666-383">This overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to the value passed in, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="3f666-384">詳細については、「解説」セクションを参照してください。<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>します。</span><span class="sxs-lookup"><span data-stu-id="3f666-384">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 <span data-ttu-id="3f666-385"><xref:System.Web.HttpServerUtility.TransferRequest%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="3f666-385"><xref:System.Web.HttpServerUtility.TransferRequest%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="3f666-386">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3f666-386">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3f666-387">この要求には、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプライン モードが必要です。</span><span class="sxs-lookup"><span data-stu-id="3f666-387">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-388">要求を処理するサーバーが使用できません。</span><span class="sxs-lookup"><span data-stu-id="3f666-388">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-389"><paramref name="path" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-389">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f666-390"><paramref name="path" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3f666-390">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm, method, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-391">サーバー上にある、実行する新しいページの URL パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-391">The URL path of the new page on the server to execute.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="3f666-392"><see cref="P:System.Web.HttpRequest.Form" /> コレクションを保持する場合は <see langword="true" />、<see cref="P:System.Web.HttpRequest.Form" /> コレクションを消去する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-392"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span></span></param>
        <param name="method"><span data-ttu-id="3f666-393">新しい要求の実行で使用する HTTP メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-393">The HTTP method to use in the execution of the new request.</span></span></param>
        <param name="headers"><span data-ttu-id="3f666-394">新しい要求の要求ヘッダーの <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-394">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of request headers for the new request.</span></span></param>
        <summary><span data-ttu-id="3f666-395">指定した HTTP メソッドおよびヘッダーを使用して、指定した URL の非同期実行を行います。</span><span class="sxs-lookup"><span data-stu-id="3f666-395">Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-396">統合パイプライン モードで実行するときにこのメソッドが使用される[!INCLUDE[iisver](~/includes/iisver-md.md)]正しい要求コンテキストを持つ対象の要求の実行中に 1 つのリソースの種類から別に転送する要求の処理を許可します。</span><span class="sxs-lookup"><span data-stu-id="3f666-396">This method is used when running with the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] to allow request processing to be transferred from one resource type to another while executing the target request with the correct request context.</span></span> <span data-ttu-id="3f666-397">たとえば、使用することができます、 <xref:System.Web.HttpServerUtility.TransferRequest%2A> XML ページに対する要求に ASPX ページの要求を転送する方法。</span><span class="sxs-lookup"><span data-stu-id="3f666-397">For example, you can use the <xref:System.Web.HttpServerUtility.TransferRequest%2A> method to transfer a request for an ASPX page to a request for an XML page.</span></span>  
  
 <span data-ttu-id="3f666-398"><xref:System.Web.HttpServerUtility.TransferRequest%2A>メソッドは、次の条件を指定した URL の子の非同期実行を実行します。</span><span class="sxs-lookup"><span data-stu-id="3f666-398">The <xref:System.Web.HttpServerUtility.TransferRequest%2A> method performs an asynchronous child execution of the specified URL with the following conditions:</span></span>  
  
-   <span data-ttu-id="3f666-399">場合、`path`パラメーターは、クエリ文字列を指定します、これは、新しいクエリ文字列として使用します。</span><span class="sxs-lookup"><span data-stu-id="3f666-399">If the `path` parameter specifies a query string, it will be used as the new query string.</span></span> <span data-ttu-id="3f666-400">クエリ文字列が含まれていない場合は、要求のクエリ文字列が再利用になります。</span><span class="sxs-lookup"><span data-stu-id="3f666-400">If no query string is included, the query string of the request will be re-used.</span></span>  
  
-   <span data-ttu-id="3f666-401">場合、`method`パラメーターを指定すると、それが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-401">If the `method` parameter is specified, it will be used.</span></span> <span data-ttu-id="3f666-402">場合は`null`、元の要求の HTTP メソッドが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-402">If it is `null`, the HTTP method of the original request will be used.</span></span>  
  
-   <span data-ttu-id="3f666-403">場合、`preserveForm`パラメーターが`true`要求の現在のエンティティ ボディが使用可能、対象の要求になります。</span><span class="sxs-lookup"><span data-stu-id="3f666-403">If the `preserveForm` parameter is `true`, the current entity body of the request will be available to the target request.</span></span> <span data-ttu-id="3f666-404">これにより、フォーム ポストし、転送にアップロードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-404">This allows form posts and uploads to be transferred.</span></span>  
  
-   <span data-ttu-id="3f666-405">ユーザー id が元の要求に設定されている場合、id は、新しい要求に転送されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-405">If the user identity is currently set on the original request, the identity will be transferred to the new request.</span></span> <span data-ttu-id="3f666-406">これにより、認証済みの要求で新しい要求の認証の結果を再利用できます。</span><span class="sxs-lookup"><span data-stu-id="3f666-406">This allows authenticated requests to re-use the result of the authentication for the new request.</span></span> <span data-ttu-id="3f666-407">転送するユーザーにしたくない場合に、ユーザーを設定`null`転送する前に元の要求にします。</span><span class="sxs-lookup"><span data-stu-id="3f666-407">If you do not want the user to be transferred, set the user to `null` on the original request before transferring.</span></span>  
  
-   <span data-ttu-id="3f666-408">場合、`headers`パラメーターを指定すると、指定したヘッダーで、新しい要求が実行されます。</span><span class="sxs-lookup"><span data-stu-id="3f666-408">If the `headers` parameter is specified, the new request will execute with the specified headers.</span></span> <span data-ttu-id="3f666-409">これにより、要求ヘッダーと、新しい要求の cookie を変更するために使用するか、元の要求の受信場所を指定する特殊なヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="3f666-409">This can be used to modify the request headers and cookies for the new request, or add a special header that specifies where the original request was received.</span></span>  
  
     <span data-ttu-id="3f666-410">このメソッドは、<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>メソッドのオーバー ロードで、`preserveUser`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="3f666-410">This method calls the <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29> method overload with the `preserveUser` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3f666-411">この要求を実行するには、統合モードで実行している [!INCLUDE[iisver](~/includes/iisver-md.md)] が必要です。</span><span class="sxs-lookup"><span data-stu-id="3f666-411">The request requires [!INCLUDE[iisver](~/includes/iisver-md.md)] running in integrated mode.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-412">要求を処理するサーバーが使用できません。</span><span class="sxs-lookup"><span data-stu-id="3f666-412">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-413"><paramref name="path" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-413">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f666-414"><paramref name="path" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3f666-414">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers, bool preserveUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection, preserveUser As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers, bool preserveUser);" />
      <MemberSignature Language="F#" Value="member this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection * bool -&gt; unit" Usage="httpServerUtility.TransferRequest (path, preserveForm, method, headers, preserveUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="preserveUser" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3f666-415">パス。</span><span class="sxs-lookup"><span data-stu-id="3f666-415">The path.</span></span></param>
        <param name="preserveForm"><span data-ttu-id="3f666-416"><see cref="P:System.Web.HttpRequest.Form" /> コレクションを保持する場合は <see langword="true" />、<see cref="P:System.Web.HttpRequest.Form" /> コレクションを消去する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-416"><see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span></span></param>
        <param name="method"><span data-ttu-id="3f666-417">新しい要求で使用する HTTP メソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-417">The HTTP method to use in the new request.</span></span></param>
        <param name="headers"><span data-ttu-id="3f666-418">新しい要求の要求ヘッダーを含む <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3f666-418">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains request headers for the new request.</span></span></param>
        <param name="preserveUser"><span data-ttu-id="3f666-419">ユーザー id を保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f666-419"><see langword="true" /> to preserve the user identity; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3f666-420">このメソッドの他のメソッド オーバーロードは、このパラメーターが <see langword="true" /> に設定された状態でこのオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3f666-420">The other method overloads of this method call this overload with this parameter set to <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="3f666-421">指定した HTTP メソッド、ヘッダー、およびパスを使用して、指定した URL の非同期実行を実行します。また、任意でユーザー id とフォーム値を保持します。</span><span class="sxs-lookup"><span data-stu-id="3f666-421">Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-422">詳細については、「解説」セクションを参照してください。<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>します。</span><span class="sxs-lookup"><span data-stu-id="3f666-422">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3f666-423">この要求には、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプライン モードが必要です。</span><span class="sxs-lookup"><span data-stu-id="3f666-423">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3f666-424">要求を処理するサーバーが使用できません。</span><span class="sxs-lookup"><span data-stu-id="3f666-424">The server is not available to handle the request.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-425"><paramref name="path" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-425">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3f666-426"><paramref name="path" /> パラメーターが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="3f666-426">The <paramref name="path" /> parameter is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f666-427">HTTP 伝送用にエンコードされた文字列をデコードし、URL の形でサーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="3f666-427">Decodes a string that was encoded for HTTP transmission and then sent to the server in a URL.</span></span>  
  
<span data-ttu-id="3f666-428"><see cref="T:System.Net.WebUtility" /> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-428">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public string UrlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlDecode : string -&gt; string" Usage="httpServerUtility.UrlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3f666-429">デコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="3f666-429">The text string to decode.</span></span></param>
        <summary><span data-ttu-id="3f666-430">文字列を URL デコードし、デコードされた文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3f666-430">URL-decodes a string and returns the decoded string.</span></span></summary>
        <returns><span data-ttu-id="3f666-431">デコードされたテキスト。</span><span class="sxs-lookup"><span data-stu-id="3f666-431">The decoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-432">すべてのブラウザーは正しく URL 文字列のテキストを送信することにより、URL エンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-432">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="3f666-433">質問などの文字 (?) をマークする、アンパサンド (&)、スラッシュ記号 (/)、および空白の切り捨てやブラウザーによっては、破損している可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3f666-433">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="3f666-434">この結果、これらの文字をエンコードする必要があります`<a>`タグまたはでクエリ文字列、文字列が再送信できる要求文字列内のブラウザー。</span><span class="sxs-lookup"><span data-stu-id="3f666-434">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="3f666-435">このメソッドは、アクセスする便利な方法、<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>実行時に ASP.NET アプリケーションからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-435">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3f666-436">このメソッドを使用して内部的には、<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>文字列をデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-436">Internally, this method uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="3f666-437">ASP.NET web ページの分離コード ファイルでのインスタンスにアクセス、<xref:System.Web.HttpServerUtility>クラスを通じて、`Server`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3f666-437">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="3f666-438">分離コード ファイルに含まれていないクラスで使用`HttpContext.Current.Server`のインスタンスにアクセスする、<xref:System.Web.HttpServerUtility>クラス。</span><span class="sxs-lookup"><span data-stu-id="3f666-438">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="3f666-439">Web アプリケーションでは、外部で使用して、<xref:System.Net.WebUtility>エンコードまたはデコード値クラス。</span><span class="sxs-lookup"><span data-stu-id="3f666-439">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-440">どの値を URL デコードに取得されるクエリ文字列から次の例は。</span><span class="sxs-lookup"><span data-stu-id="3f666-440">The following example shows how to URL-decode a value that is retrieved from the query string.</span></span> <span data-ttu-id="3f666-441">コードは、web ページの分離コード ファイルに存在します。</span><span class="sxs-lookup"><span data-stu-id="3f666-441">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="3f666-442">`ReturnPage` 指す、`HyperLink`コントロール。</span><span class="sxs-lookup"><span data-stu-id="3f666-442">`ReturnPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="3f666-443">表示されますが、次の例は前の例のような方法を URL デコード クラス内の値でない分離コード ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="3f666-443">The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public void UrlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.UrlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.UrlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3f666-444">デコードする HTML 文字列。</span><span class="sxs-lookup"><span data-stu-id="3f666-444">The HTML string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="3f666-445">デコードされた文字列を格納する <see cref="T:System.IO.TextWriter" /> 出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="3f666-445">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span></span></param>
        <summary><span data-ttu-id="3f666-446">URL 形式で受け取った HTML 文字列をデコードし、その結果の出力を <see cref="T:System.IO.TextWriter" /> 出力ストリームへ送信します。</span><span class="sxs-lookup"><span data-stu-id="3f666-446">Decodes an HTML string received in a URL and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-447">すべてのブラウザーは正しく URL 文字列のテキストを送信することにより、URL エンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-447">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="3f666-448">質問などの文字 (?) をマークする、アンパサンド (&)、スラッシュ記号 (/)、および空白の切り捨てやブラウザーによっては、破損している可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3f666-448">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="3f666-449">この結果、これらの文字をエンコードする必要があります`<a>`タグまたはでクエリ文字列、文字列が再送信できる要求文字列内のブラウザー。</span><span class="sxs-lookup"><span data-stu-id="3f666-449">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="3f666-450"><xref:System.Web.HttpServerUtility.UrlDecode%2A> アクセスする便利な方法は、<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>実行時に ASP.NET アプリケーションからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-450"><xref:System.Web.HttpServerUtility.UrlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3f666-451">内部的には、<xref:System.Web.HttpServerUtility.UrlDecode%2A>使用<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>文字列をデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-451">Internally, <xref:System.Web.HttpServerUtility.UrlDecode%2A> uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="3f666-452"><xref:System.Net.WebUtility> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-452">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-453">次の例は、という名前の文字列をデコード`EncodedString`(URL で受信済み) という名前の文字列に`DecodedString`します。</span><span class="sxs-lookup"><span data-stu-id="3f666-453">The following example decodes the string named `EncodedString` (received in a URL) into the string named `DecodedString`.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3f666-454">URL を使用して Web サーバーからクライアントへ信頼性のある HTTP 伝送を行うために、文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-454">Encodes a string for reliable HTTP transmission from the Web server to a client through the URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-455"><xref:System.Web.HttpServerUtility.UrlEncode%2A> アクセスする便利な方法は、<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>実行時に ASP.NET アプリケーションからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-455"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3f666-456">内部的には、<xref:System.Web.HttpServerUtility.UrlEncode%2A>使用<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-456">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="3f666-457"><xref:System.Net.WebUtility> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-457">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public string UrlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlEncode : string -&gt; string" Usage="httpServerUtility.UrlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3f666-458">URL エンコードするテキスト。</span><span class="sxs-lookup"><span data-stu-id="3f666-458">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="3f666-459">文字列を URL エンコードし、エンコードされた文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3f666-459">URL-encodes a string and returns the encoded string.</span></span></summary>
        <returns><span data-ttu-id="3f666-460">URL エンコードされたテキスト。</span><span class="sxs-lookup"><span data-stu-id="3f666-460">The URL-encoded text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-461">すべてのブラウザーは正しく URL 文字列のテキストを送信することにより、URL エンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-461">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="3f666-462">質問などの文字 (?) をマークする、アンパサンド (&)、スラッシュ記号 (/)、および空白の切り捨てやブラウザーによっては、破損している可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3f666-462">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="3f666-463">この結果、これらの文字をエンコードする必要があります`<a>`タグまたはでクエリ文字列、文字列が再送信できる要求文字列内のブラウザー。</span><span class="sxs-lookup"><span data-stu-id="3f666-463">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="3f666-464">このメソッドは、アクセスする便利な方法、<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>実行時に ASP.NET アプリケーションからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-464">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3f666-465">このメソッドを使用して内部的には、<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-465">Internally, this method uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="3f666-466">ASP.NET web ページの分離コード ファイルでのインスタンスにアクセス、<xref:System.Web.HttpServerUtility>クラスを通じて、`Server`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3f666-466">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="3f666-467">分離コード ファイルに含まれていないクラスで使用`HttpContext.Current.Server`のインスタンスにアクセスする、<xref:System.Web.HttpServerUtility>クラス。</span><span class="sxs-lookup"><span data-stu-id="3f666-467">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="3f666-468">Web アプリケーションでは、外部で使用して、<xref:System.Net.WebUtility>エンコードまたはデコード値クラス。</span><span class="sxs-lookup"><span data-stu-id="3f666-468">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-469">どの値を URL エンコードするために使用されるハイパーリンクのクエリ文字列値として次の例を示します。</span><span class="sxs-lookup"><span data-stu-id="3f666-469">The following example shows how to URL-encode a value that is used as a query string value of a hyperlink.</span></span> <span data-ttu-id="3f666-470">コードは、web ページの分離コード ファイルに存在します。</span><span class="sxs-lookup"><span data-stu-id="3f666-470">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="3f666-471">エンコードする値は、のみを例を簡略化し、URL エンコードする場合があります値の型を表示するには、この例では、ハードコーディングします。</span><span class="sxs-lookup"><span data-stu-id="3f666-471">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode.</span></span> <span data-ttu-id="3f666-472">通常、するは URL エンコード、ユーザーまたは要求から受信した値。</span><span class="sxs-lookup"><span data-stu-id="3f666-472">Typically, you would URL-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="3f666-473">`NextPage` 指す、`HyperLink`コントロール。</span><span class="sxs-lookup"><span data-stu-id="3f666-473">`NextPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="3f666-474">表示されますが、次の例は前の例のような方法を URL エンコードするクラス内の値でない分離コード ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="3f666-474">The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public void UrlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.UrlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtility.UrlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3f666-475">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="3f666-475">The text string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="3f666-476">エンコードされた文字列を格納している <see cref="T:System.IO.TextWriter" /> 出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="3f666-476">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span></span></param>
        <summary><span data-ttu-id="3f666-477">文字列を URL エンコードし、その結果の出力を <see cref="T:System.IO.TextWriter" /> 出力ストリームに送信します。</span><span class="sxs-lookup"><span data-stu-id="3f666-477">URL-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-478">すべてのブラウザーは正しく URL 文字列のテキストを送信することにより、URL エンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-478">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="3f666-479">質問などの文字 (?) をマークする、アンパサンド (&)、スラッシュ記号 (/)、および空白の切り捨てやブラウザーによっては、破損している可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3f666-479">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="3f666-480">この結果、これらの文字をエンコードする必要があります`<a>`タグまたはでクエリ文字列、文字列が再送信できる要求文字列内のブラウザー。</span><span class="sxs-lookup"><span data-stu-id="3f666-480">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="3f666-481"><xref:System.Web.HttpServerUtility.UrlEncode%2A> アクセスする便利な方法は、<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>実行時に ASP.NET アプリケーションからのメソッド。</span><span class="sxs-lookup"><span data-stu-id="3f666-481"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="3f666-482">内部的には、<xref:System.Web.HttpServerUtility.UrlEncode%2A>使用<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-482">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="3f666-483"><xref:System.Net.WebUtility> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-483">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f666-484">次の例では、HTTP で伝送用の文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3f666-484">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="3f666-485">という名前の文字列をエンコード`TestString`、テキストが含まれています"これは、\<テスト文字列 >."、という名前の文字列にコピーして`EncodedString`として"この + は + %3ctest + 文字列 %3e。"です。</span><span class="sxs-lookup"><span data-stu-id="3f666-485">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This+is+a+%3cTest+String%3e.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public string UrlPathEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlPathEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlPathEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlPathEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.UrlPathEncode : string -&gt; string" Usage="httpServerUtility.UrlPathEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3f666-486">URL エンコードするテキスト。</span><span class="sxs-lookup"><span data-stu-id="3f666-486">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="3f666-487">使用しないでください。ブラウザーの互換性のためだけのものです。</span><span class="sxs-lookup"><span data-stu-id="3f666-487">Do not use; intended only for browser compatibility.</span></span> <span data-ttu-id="3f666-488"><see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" /> を使用してください。</span><span class="sxs-lookup"><span data-stu-id="3f666-488">Use <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="3f666-489">URL エンコードされたテキスト。</span><span class="sxs-lookup"><span data-stu-id="3f666-489">The URL encoded text.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenDecode">
      <MemberSignature Language="C#" Value="public static byte[] UrlTokenDecode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlTokenDecode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenDecode (input As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlTokenDecode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlTokenDecode : string -&gt; byte[]" Usage="System.Web.HttpServerUtility.UrlTokenDecode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3f666-490">デコードする URL 文字列トークン。</span><span class="sxs-lookup"><span data-stu-id="3f666-490">The URL string token to decode.</span></span></param>
        <summary><span data-ttu-id="3f666-491">URL 文字列トークンをデコードし、base 64 を使用して等価なバイト配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="3f666-491">Decodes a URL string token to its equivalent byte array using base 64 digits.</span></span></summary>
        <returns><span data-ttu-id="3f666-492">デコードされた URL 文字列トークンが格納されたバイト配列。</span><span class="sxs-lookup"><span data-stu-id="3f666-492">The byte array containing the decoded URL string token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-493"><xref:System.Web.HttpServerUtility.UrlTokenDecode%2A>メソッドが、バイナリ データを base 64 でエンコード、URL 文字列トークンを等価なバイト配列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="3f666-493">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method converts a URL string token, which encodes binary data as base 64 digits, to its equivalent byte array representation.</span></span> <span data-ttu-id="3f666-494">使用して、<xref:System.Web.HttpServerUtility.UrlTokenDecode%2A>トークンをデコードするメソッドは、URL で送信しを使用してエンコード、<xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3f666-494">Use the <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method to decode tokens transmitted on the URL and encoded by using the <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>.</span></span>  
  
 <span data-ttu-id="3f666-495"><xref:System.Web.HttpServerUtility.UrlTokenDecode%2A>場合、メソッドは空のバイト配列を返しますが、`input`パラメーターが 1 未満の長さ。</span><span class="sxs-lookup"><span data-stu-id="3f666-495">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method will return an empty byte array if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-496"><paramref name="input" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-496">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="UrlTokenEncode">
      <MemberSignature Language="C#" Value="public static string UrlTokenEncode (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlTokenEncode(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenEncode (input As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlTokenEncode(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberSignature Language="F#" Value="static member UrlTokenEncode : byte[] -&gt; string" Usage="System.Web.HttpServerUtility.UrlTokenEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="3f666-497">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="3f666-497">The byte array to encode.</span></span></param>
        <summary><span data-ttu-id="3f666-498">Base64 形式の文字を使用して、バイト配列を等価の文字列表現にエンコードします。この文字列表現は、URL での送信で使用できます。</span><span class="sxs-lookup"><span data-stu-id="3f666-498">Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</span></span></summary>
        <returns><span data-ttu-id="3f666-499">バイト配列の *length* が 2 以上の場合はエンコードされたトークンを格納している文字列。それ以外の場合は空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="3f666-499">The string containing the encoded token if the byte array *length* is greater than one; otherwise, an empty string ("").</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f666-500"><xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>メソッドが、base 64 でエンコードされた等価の文字列形式にバイト配列を変換します。</span><span class="sxs-lookup"><span data-stu-id="3f666-500">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> method converts a byte array into an equivalent string representation encoded with base 64 digits.</span></span> <span data-ttu-id="3f666-501">結果の文字列トークンは、URL で送信できます。</span><span class="sxs-lookup"><span data-stu-id="3f666-501">The resulting string token can be transmitted on the URL.</span></span>  
  
 <span data-ttu-id="3f666-502"><xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>場合、空の文字列を返しますが、`input`パラメーターが 1 未満の長さ。</span><span class="sxs-lookup"><span data-stu-id="3f666-502">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> will return an empty string if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3f666-503"><paramref name="input" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="3f666-503">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>