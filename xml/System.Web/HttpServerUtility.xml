<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpServerUtility.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5af79683dbebba2bc232c66a7a70dd0748a5935a9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af79683dbebba2bc232c66a7a70dd0748a5935a9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Provides helper methods for processing Web requests.</source>
          <target state="translated">Web 要求を処理するヘルパー メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class are exposed through the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Server%2A&gt;</ph> object provided by ASP.NET.</source>
          <target state="translated">メソッドとプロパティの<ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスは、組み込みを通じて公開される<ph id="ph2">&lt;xref:System.Web.HttpContext.Server%2A&gt;</ph>ASP.NET によって提供されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>A Visual Studio Web site project with source code is available to accompany this topic: <bpt id="p1">[</bpt>Download<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=192870)</ept>.</source>
          <target state="translated">Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:<bpt id="p1">[</bpt>ダウンロード<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=192870)</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph>のメソッド、<ph id="ph3">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph>メソッドにより、任意のユーザーが指定した文字列入力は実行可能なスクリプトまたは HTML 要素の代わりにブラウザーで静的なテキストとしてレンダリングされますにすることを確認してください。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> method encodes URLs so that they are correctly transmitted in the HTTP stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph>正しく HTTP ストリームで送信されるように、メソッドは Url をエンコードします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.ClearError">
          <source>Clears the previous exception.</source>
          <target state="translated">前回の例外を削除します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.ClearError">
          <source>The following example clears the last exception that was thrown.</source>
          <target state="translated">次の例では、スローされた最後の例外をクリアします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Creates a server instance of a COM object.</source>
          <target state="translated">COM オブジェクトのサーバー インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>The class or type of object to create an instance of.</source>
          <target state="translated">インスタンスを作成するオブジェクトのクラスまたは型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</source>
          <target state="translated">オブジェクトのプログラム ID (ProgID) で識別されている COM オブジェクトのサーバー インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>The new object.</source>
          <target state="translated">新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>The following example creates an object by using the object's ProgID.</source>
          <target state="translated">次の例では、オブジェクトの ProgID を使用してオブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.String)">
          <source>An instance of the object could not be created.</source>
          <target state="translated">オブジェクトのインスタンスを作成できませんでした。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the object to create.</source>
          <target state="translated">作成するオブジェクトを表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.Type)">
          <source>Creates a server instance of a COM object identified by the object's type.</source>
          <target state="translated">オブジェクトの型で識別されている COM オブジェクトのサーバー インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObject(System.Type)">
          <source>The new object.</source>
          <target state="translated">新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>The class identifier of the object to create an instance of.</source>
          <target state="translated">インスタンスを作成するオブジェクトのクラス ID。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>Creates a server instance of a COM object identified by the object's class identifier (CLSID).</source>
          <target state="translated">オブジェクトのクラス ID (CLSID) で識別されている COM オブジェクトのサーバー インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>The new object.</source>
          <target state="translated">新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A&gt;</ph> method to create a server instance of a COM object.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A&gt;</ph>メソッドを COM オブジェクトのサーバー インスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)">
          <source>An instance of the object could not be created.</source>
          <target state="translated">オブジェクトのインスタンスを作成できませんでした。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Executes the handler for a specified resource in the context of the current request and returns execution to the page that invoked it.</source>
          <target state="translated">指定したリソースのハンドラーを現在の要求のコンテキストで実行し、そのハンドラーを起動したページに実行を戻します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The URL path to execute.</source>
          <target state="translated">実行する URL パス。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method continues execution of the original page after execution of the new page is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドは、新しいページの実行が完了した後に、元のページの実行を継続します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method unconditionally transfers execution to another handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドが別のハンドラーの実行を無条件で転送します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET を検証しないによって配信されるリソースを表示する現在のユーザーが許可されている、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET が直接によって示されるハンドラーを呼び出しますが、元のリソースのハンドラーが呼び出される前に、ASP.NET 認証と承認ロジックを実行、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドとは、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">使用して強制することができます、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドの代わりに、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、<ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph>アプリケーション呼び出される前にメソッド、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The following example displays the .aspx page "Updateinfo.aspx" in the current directory.</source>
          <target state="translated">次の例では、現在のディレクトリに"Updateinfo.aspx".aspx ページが表示されます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>Program execution returns to the starting page after the Updateinfo.aspx page is displayed.</source>
          <target state="translated">Updateinfo.aspx ページが表示された後、プログラムの実行は開始ページを返します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> によって指定されているハンドラーの実行中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not a virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は仮想パスではありません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>The URL path to execute.</source>
          <target state="translated">実行する URL パス。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを保持する場合は、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。<ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションをクリアする場合は、<ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行し、<ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションをクリアするかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>The following example shows how to execute the .aspx page <ph id="ph1">`Updateinfo.aspx`</ph> in the current request and preserve the <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> collections.</source>
          <target state="translated">次の例は、.aspx ページを実行する方法を示します<ph id="ph1">`Updateinfo.aspx`</ph>、現在の要求と保持で、<ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>Program execution returns to the starting page after <ph id="ph1">`Updateinfo.aspx`</ph> is displayed.</source>
          <target state="translated">プログラム実行後に開始ページに戻ります<ph id="ph1">`Updateinfo.aspx`</ph>が表示されます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> によって指定されているハンドラーの実行中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not a virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は仮想パスではありません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The URL path to execute.</source>
          <target state="translated">実行する URL パス。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to capture the output.</source>
          <target state="translated">出力を取り込む <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> captures output from the executed handler.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> は、実行されたハンドラーからの出力を取り込みます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method continues execution of the original request after execution of the virtual path specified is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドは、指定された仮想パスの実行が完了した後に、元の要求の実行を継続します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method unconditionally transfers execution to another handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドが別のハンドラーの実行を無条件で転送します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET を検証しないによって配信されるリソースを表示する現在のユーザーが許可されている、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET が直接によって示されるハンドラーを呼び出しますが、元のリソースのハンドラーが呼び出される前に、ASP.NET 認証と承認ロジックを実行、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドとは、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">使用して強制することができます、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドの代わりに、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、<ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph>アプリケーション呼び出される前にメソッド、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The following example executes the <ph id="ph1">`Login.aspx`</ph> page on the server in the current directory and receives the output from the page through the <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> object <ph id="ph3">`writer`</ph>.</source>
          <target state="translated">次の例を実行、 <ph id="ph1">`Login.aspx`</ph> 、サーバーの現在のディレクトリに ページし、ページを介してから出力を受け取る、<ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>オブジェクト<ph id="ph3">`writer`</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>It writes the HTML stream received from <ph id="ph1">`writer`</ph> to the HTTP output stream.</source>
          <target state="translated">受信した HTML ストリームを書き込みます<ph id="ph1">`writer`</ph>http 出力ストリーム。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> によって指定されているハンドラーの実行中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not a virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は仮想パスではありません。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The URL path to execute.</source>
          <target state="translated">実行する URL パス。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to capture the output.</source>
          <target state="translated">出力を取り込む <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを保持する場合は、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。<ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションをクリアする場合は、<ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> captures output from the page and a Boolean parameter specifies whether to clear the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> はページからの出力を取り込み、<ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションをクリアするかどうかをブール型のパラメーターで指定します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method continues execution of the original request after execution of the specified virtual path is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドは、指定した仮想パスの実行が完了した後に、元の要求の実行を継続します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method unconditionally transfers execution to another handler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドが別のハンドラーの実行を無条件で転送します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET を検証しないによって配信されるリソースを表示する現在のユーザーが許可されている、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET が直接によって示されるハンドラーを呼び出しますが、元のリソースのハンドラーが呼び出される前に、ASP.NET 認証と承認ロジックを実行、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドとは、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">使用して強制することができます、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドの代わりに、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、<ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph>アプリケーション呼び出される前にメソッド、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The following example executes the <ph id="ph1">`Login.aspx`</ph> page on the server in the current directory and receives the output from the page through the <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph> object <ph id="ph3">`writer`</ph>.</source>
          <target state="translated">次の例を実行、 <ph id="ph1">`Login.aspx`</ph> 、サーバーの現在のディレクトリに ページし、ページを介してから出力を受け取る、<ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>オブジェクト<ph id="ph3">`writer`</ph>です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>It writes the HTML stream received from <ph id="ph1">`writer`</ph> to the HTTP output stream.</source>
          <target state="translated">受信した HTML ストリームを書き込みます<ph id="ph1">`writer`</ph>http 出力ストリーム。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The contents of the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> collections are preserved.</source>
          <target state="translated">内容、<ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph>コレクションが保持されます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> が null 参照 (Visual Basic の場合は <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>) です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> ends with a period (.).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> がピリオド (.) で終わっています。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> によって指定されているハンドラーの実行中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not a virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は仮想パスではありません。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>The HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> to transfer the current request to.</source>
          <target state="translated">現在の要求の転送先となる <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> を実装する HTTP ハンドラー。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to capture the output.</source>
          <target state="translated">出力を取り込む <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを保持する場合は、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。<ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションをクリアする場合は、<ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>Executes the handler for the specified virtual path in the context of the current request.</source>
          <target state="translated">指定した仮想パスのハンドラーを現在の要求のコンテキストで実行します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> captures output from the executed handler and a Boolean parameter specifies whether to clear the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> は実行されたハンドラーからの出力を取り込み、<ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションをクリアするかどうかをブール型のパラメーターで指定します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</source>
          <target state="translated">事前定義された、特定の種類の共通言語仕様 (CLS) に準拠した任意の言語での HTTP 要求を処理するカスタム HTTP ハンドラーを記述することができます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>Executable code that is defined in the HTTP handler classes instead of  conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</source>
          <target state="translated">従来の ASP (従来の ASP とも呼ばれます) のページまたは ASP.NET ページではなく HTTP ハンドラーのクラスで定義されている実行可能コードは、これらの特定の要求に応答します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">低レベルの要求とインターネット インフォメーション サービス (IIS) を実行している Web サーバーの応答サービスと対話する HTTP ハンドラーを使用して、機能が類似している ISAPI 拡張機能には、プログラミング モデルがより単純です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource that is delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET を検証しないによって配信されるリソースを表示する現在のユーザーが許可されている、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler that is indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET が直接で示されているハンドラーを呼び出しますが、元のリソースのハンドラーが呼び出される前に、ASP.NET 認証と承認ロジックを実行、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドとは、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>If the security policy for your application requires clients to have appropriate authorization to gain access to the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアント リソースにアクセスするために適切な承認を許可する必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">使用して強制することができます、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドの代わりに、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるため、IIS と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックにそれが加わっています。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、<ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph>アプリケーション呼び出される前にメソッド、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>An error occurred while executing the handler specified by <ph id="ph1">&lt;paramref name="handler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> によって指定されているハンドラーの実行中にエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="handler" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.GetLastError">
          <source>Returns the previous exception.</source>
          <target state="translated">前回の例外を返します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.GetLastError">
          <source>The previous exception that was thrown.</source>
          <target state="translated">スローされた前回の例外。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.GetLastError">
          <source>The following example prints a description of the application's last error to the HTTP output stream.</source>
          <target state="translated">次の例では、HTTP 出力ストリームに、アプリケーションの最後のエラーの説明を出力します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.GetLastError">
          <source>It prints "No Errors" if no errors have been encountered.</source>
          <target state="translated">エラーが発生しなかった場合は、「エラーなし」を出力します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Decodes a string that has been encoded to eliminate invalid HTML characters.</source>
          <target state="translated">エンコードされた文字列をデコードして、無効な HTML 文字を削除します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>The HTML string to decode.</source>
          <target state="translated">デコードする HTML 文字列。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>Decodes an HTML-encoded string and returns the decoded string.</source>
          <target state="translated">HTML エンコードされた文字列をデコードし、デコードした文字列を返します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>The decoded text.</source>
          <target state="translated">デコードされたテキスト。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</source>
          <target state="translated">HTML エンコードは、テキストがブラウザーに正しく表示され、ブラウザーで HTML として解釈されないことを確認します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</source>
          <target state="translated">たとえば、テキスト文字列には、小なり記号が含まれている場合 (<ph id="ph1">\&lt;</ph>) またはそれ以上不等号 (&gt;)、ブラウザーではこれらの文字として解釈開始タグまたは HTML タグの終わりかっこです。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>When the characters are HTML encoded, they are converted to the strings <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, which causes the browser to display the less than sign and greater than sign correctly.</source>
          <target state="translated">文字がエンコードされた HTML の場合は、文字列に変換されます<ph id="ph1">`&amp;lt;`</ph>と<ph id="ph2">`&amp;gt;`</ph>、それが原因で、ブラウザーで、不等号記号値を超えて正しくを表示します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> decodes text that has been transmitted to the server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> サーバーに転送されたテキストをデコードします。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated">このメソッドは、アクセスする便利な手段、<ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph>実行時に ASP.NET アプリケーションからのメソッドです。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> to decode strings.</source>
          <target state="translated">このメソッドを使用して内部的には、<ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph>文字列をデコードします。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
          <target state="translated">ASP.NET web ページの分離コード ファイル内のインスタンスにアクセス、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスを通じて、<ph id="ph2">`Server`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">分離コード ファイルに含まれていないクラスで使用<ph id="ph1">`HttpContext.Current.Server`</ph>のインスタンスにアクセスする、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
          <target state="translated">外部では、web アプリケーションを使用、<ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph>クラス値をエンコードまたはデコードします。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String)">
          <source>The following example contains the function <ph id="ph1">`LoadDecodedFile`</ph>, which decodes the data from a file and copies it into one string.</source>
          <target state="translated">次の例には、関数が含まれています。 <ph id="ph1">`LoadDecodedFile`</ph>、ファイルからデータをデコードすると、1 つの文字列にコピーします。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>The HTML string to decode.</source>
          <target state="translated">デコードする HTML 文字列。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream that contains the decoded string.</source>
          <target state="translated">デコードされた文字列を格納する <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 出力ストリーム。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>Decodes an HTML-encoded string and sends the resulting output to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated">HTML エンコードされた文字列をデコードし、その結果の出力を <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 出力ストリームに送信します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</source>
          <target state="translated">HTML エンコードは、テキストがブラウザーに正しく表示され、ブラウザーで HTML として解釈されないことを確認します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</source>
          <target state="translated">たとえば、テキスト文字列には、小なり記号が含まれている場合 (<ph id="ph1">\&lt;</ph>) またはそれ以上不等号 (&gt;)、ブラウザーではこれらの文字として解釈開始タグまたは HTML タグの終わりかっこです。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>When the characters are HTML encoded, they are converted to the strings <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, which causes the browser to display the less than sign and greater than sign correctly.</source>
          <target state="translated">文字がエンコードされた HTML の場合は、文字列に変換されます<ph id="ph1">`&amp;lt;`</ph>と<ph id="ph2">`&amp;gt;`</ph>、それが原因で、ブラウザーで、不等号記号値を超えて正しくを表示します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> decodes text that has been transmitted to the server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> サーバーに転送されたテキストをデコードします。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> アクセスする便利な方法は、<ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph>実行時に ASP.NET アプリケーションからのメソッドです。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph> to decode strings.</source>
          <target state="translated">内部的には、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlDecode%2A&gt;</ph>使用<ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType&gt;</ph>に文字列をデコードします。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>The following example decodes a string that has been HTML-encoded for transmission over HTTP.</source>
          <target state="translated">次の例では、HTML エンコードされた送信用 HTTP 経由で文字列をデコードします。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)">
          <source>It decodes the supplied string named <ph id="ph1">`EncodedString`</ph> which contains the text "This is a <ph id="ph2">&amp;lt;</ph>Test String<ph id="ph3">&amp;gt;</ph>.", and copies it into the string named <ph id="ph4">`DecodedString`</ph> as "This is a <ph id="ph5">\&lt;</ph>Test String&gt;.".</source>
          <target state="translated">という名前の指定された文字列をデコード<ph id="ph1">`EncodedString`</ph>テキストが含まれています"これは、<ph id="ph2">&amp;lt;</ph>テスト文字列<ph id="ph3">&amp;gt;</ph>."、という名前の文字列にコピーして<ph id="ph4">`DecodedString`</ph>として"これは、<ph id="ph5">\&lt;</ph>テスト文字列 &gt; です。"です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Encodes a string to be displayed in a browser.</source>
          <target state="translated">ブラウザーに表示される文字列をエンコードします。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The text string to encode.</source>
          <target state="translated">エンコードする文字列。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>HTML-encodes a string and returns the encoded string.</source>
          <target state="translated">文字列を HTML エンコードし、エンコードされた文字列を返します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The HTML-encoded text.</source>
          <target state="translated">HTML エンコードされたテキスト。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</source>
          <target state="translated">HTML エンコードは、テキストがブラウザーに正しく表示され、ブラウザーで HTML として解釈されないことを確認します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</source>
          <target state="translated">たとえば、テキスト文字列には、小なり記号が含まれている場合 (<ph id="ph1">\&lt;</ph>) またはそれ以上不等号 (&gt;)、ブラウザーではこれらの文字として解釈開始タグまたは HTML タグの終わりかっこです。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>When the characters are HTML encoded, they are converted to the strings <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, which causes the browser to display the less than sign and greater than sign correctly.</source>
          <target state="translated">文字がエンコードされた HTML の場合は、文字列に変換されます<ph id="ph1">`&amp;lt;`</ph>と<ph id="ph2">`&amp;gt;`</ph>、それが原因で、ブラウザーで、不等号記号値を超えて正しくを表示します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated">このメソッドは、アクセスする便利な手段、<ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph>実行時に ASP.NET アプリケーションからのメソッドです。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">このメソッドを使用して内部的には、<ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph>文字列をエンコードします。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
          <target state="translated">ASP.NET web ページの分離コード ファイル内のインスタンスにアクセス、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスを通じて、<ph id="ph2">`Server`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">分離コード ファイルに含まれていないクラスで使用<ph id="ph1">`HttpContext.Current.Server`</ph>のインスタンスにアクセスする、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
          <target state="translated">外部では、web アプリケーションを使用、<ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph>クラス値をエンコードまたはデコードします。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The following example shows how to HTML-encode a value that potentially codes unsafe code.</source>
          <target state="translated">次の例では、方法に値を HTML エンコードする可能性のあるコードのアンセーフ コードを示します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The code resides in the code-behind file for a web page.</source>
          <target state="translated">コードは、web ページの分離コード ファイルに存在します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode.</source>
          <target state="translated">エンコードする値は、のみを例を簡略化し、HTML エンコードする場合があります値の型を表示するには、この例では、ハードコーディングです。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>Typically, you would HTML-encode a value that you received from the user or the request.</source>
          <target state="translated">通常は HTML エンコードをユーザーまたは要求から受信した値です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source><ph id="ph1">`Result`</ph> refers to a <ph id="ph2">`Literal`</ph> control.</source>
          <target state="translated"><ph id="ph1">`Result`</ph> 指す、<ph id="ph2">`Literal`</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String)">
          <source>The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.</source>
          <target state="translated">次の例は似ていますが、前の例を示して 方法を HTML エンコードするクラス内の値されていないこと、分離コード ファイル。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The string to encode.</source>
          <target state="translated">エンコードする文字列。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream that contains the encoded string.</source>
          <target state="translated">エンコードされた文字列を格納している <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 出力ストリーム。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>HTML-encodes a string and sends the resulting output to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated">文字列を HTML エンコードし、その結果の出力を <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 出力ストリームに送信します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML.</source>
          <target state="translated">HTML エンコーディングとは、ブラウザーで、ブラウザーで HTML として解釈されないテキストが正しく表示されることすることを確認します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>For example, if a text string contains a less than sign (<ph id="ph1">\&lt;</ph>) or greater than sign (&gt;), the browser would interpret these characters as an opening or closing bracket of an HTML tag.</source>
          <target state="translated">たとえば、テキスト文字列には、小なり記号が含まれている場合 (<ph id="ph1">\&lt;</ph>) またはそれ以上不等号 (&gt;)、ブラウザーではこれらの文字として解釈開始タグまたは HTML タグの終わりかっこです。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The HTML encoding of these two characters is <ph id="ph1">`&amp;lt;`</ph> and <ph id="ph2">`&amp;gt;`</ph>, respectively, which causes the browser to display the less than sign and greater than sign correctly.</source>
          <target state="translated">これら 2 つの文字の HTML エンコードでは<ph id="ph1">`&amp;lt;`</ph>と<ph id="ph2">`&amp;gt;`</ph>、それぞれ、それが原因で、ブラウザーで、不等号記号値を超えて正しくを表示します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> アクセスする便利な方法は、<ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph>実行時に ASP.NET アプリケーションからのメソッドです。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">内部的には、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph>使用<ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType&gt;</ph>文字列をエンコードします。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>The following example encodes a string for transmission by HTTP.</source>
          <target state="translated">次の例では、http 伝送用の文字列をエンコードします。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)">
          <source>It encodes the string named <ph id="ph1">`TestString`</ph>, which contains the text "This is a <ph id="ph2">\&lt;</ph>Test String&gt;.", and copies it into the string named <ph id="ph3">`EncodedString`</ph> as "This is a <ph id="ph4">&amp;lt;</ph>Test String<ph id="ph5">&amp;gt;</ph>.".</source>
          <target state="translated">という名前の文字列をエンコード<ph id="ph1">`TestString`</ph>、テキストが含まれています"これは、<ph id="ph2">\&lt;</ph>テスト文字列 &gt; です。"、という名前の文字列にコピーすると<ph id="ph3">`EncodedString`</ph>として"これは、<ph id="ph4">&amp;lt;</ph>テスト文字列<ph id="ph5">&amp;gt;</ph>。"です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.MachineName">
          <source>Gets the server's computer name.</source>
          <target state="translated">サーバーのコンピューター名を取得します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.MachineName">
          <source>The name of the local computer.</source>
          <target state="translated">ローカル コンピューターの名前。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.MachineName">
          <source>The following example stores the server's computer name as a string variable.</source>
          <target state="translated">次の例では、文字列変数として、サーバーのコンピューター名を格納します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.MachineName">
          <source>The computer name cannot be found.</source>
          <target state="translated">コンピューター名が見つかりません。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The virtual path in the Web application.</source>
          <target state="translated">Web アプリケーション内の仮想パス。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>Returns the physical file path that corresponds to the specified virtual path.</source>
          <target state="translated">指定した仮想パスに対応する物理ファイル パスを返します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The physical file path on the Web server that corresponds to <ph id="ph1">&lt;paramref name="path" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> に対応する、Web サーバー上の物理ファイル パス。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>If <ph id="ph1">`path`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph> method returns the full physical path of the directory that contains the current request for the path.</source>
          <target state="translated">場合<ph id="ph1">`path`</ph>は<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph>メソッド パスの現在の要求を格納するディレクトリの完全な物理パスを返します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The relative path does not need to specify an existing file or folder for this method to return a value.</source>
          <target state="translated">相対パスは、既存のファイルまたはフォルダーの値を返すには、このメソッドを指定する必要はありません。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>However, you cannot specify a path outside of the Web application.</source>
          <target state="translated">ただし、Web アプリケーションの外部でパスを指定することはできません。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph> method potentially contains sensitive information about the hosting environment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.MapPath%2A&gt;</ph>メソッドに可能性のあるホスティング環境に関する機密情報が含まれています。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The return value should not be displayed to users.</source>
          <target state="translated">戻り値をユーザーに表示されません必要があります。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>A Web application that resides at <ph id="ph1">`C:\ExampleSites\TestMapPath`</ph> would return the following results:</source>
          <target state="translated">Web アプリケーションに存在する<ph id="ph1">`C:\ExampleSites\TestMapPath`</ph>は、次の結果を返します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>Request from</source>
          <target state="translated">要求します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>Returned value</source>
          <target state="translated">戻り値</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>RootLevelPage.aspx</source>
          <target state="translated">RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath</source>
          <target state="translated">C:\ExampleSites\TestMapPath</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>RootLevelPage.aspx</source>
          <target state="translated">RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>"/DownOneLevel/DownLevelPage.aspx"</source>
          <target state="translated">"/DownOneLevel/DownLevelPage.aspx"</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</source>
          <target state="translated">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>RootLevelPage.aspx</source>
          <target state="translated">RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>"/NotRealFolder"</source>
          <target state="translated">"/NotRealFolder"</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath\NotRealFolder</source>
          <target state="translated">C:\ExampleSites\TestMapPath\NotRealFolder</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>RootLevelPage.aspx</source>
          <target state="translated">RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>"../OutsideApplication"</source>
          <target state="translated">"../OutsideApplication"</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>/DownOneLevel/DownLevelPage.aspx</source>
          <target state="translated">/DownOneLevel/DownLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath\DownOneLevel</source>
          <target state="translated">C:\ExampleSites\TestMapPath\DownOneLevel</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>/DownOneLevel/DownLevelPage.aspx</source>
          <target state="translated">/DownOneLevel/DownLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>"../RootLevelPage.aspx"</source>
          <target state="translated">"../RootLevelPage.aspx"</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>C:\ExampleSites\TestMapPath\RootLevelPage.aspx</source>
          <target state="translated">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The following example shows how to retrieve the physical file of a relative virtual path.</source>
          <target state="translated">次の例では、相対仮想パスの物理ファイルを取得する方法を示します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The code resides in the code-behind file for a web page and utilizes the default <ph id="ph1">`Server`</ph> object.</source>
          <target state="translated">コードは、web ページの分離コード ファイル内に存在し、既定値を利用して<ph id="ph1">`Server`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.</source>
          <target state="translated">次の例は似ていますが、前の例に、分離コード ファイルに含まれていないクラス内からの物理パスを取得する方法を示します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.MapPath(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a physical path, but a virtual path was expected.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は物理パスです。仮想パスを指定してください。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>Gets and sets the request time-out value in seconds.</source>
          <target state="translated">要求タイムアウト値を秒単位で取得し、設定します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The time-out value setting for requests.</source>
          <target state="translated">要求のタイムアウト値設定。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> property can be set in the Web.config file by setting the <ph id="ph2">`executionTimeout`</ph> attribute of the  element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph>プロパティは、設定を Web.config ファイルで設定できる、<ph id="ph2">`executionTimeout`</ph>要素の属性です。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>Setting the time-out programmatically with the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> property takes precedence over the Web.config setting.</source>
          <target state="translated">使用したプログラムによるタイムアウトの設定、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph>プロパティがこの Web.config 設定より優先されます。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>If you set the <ph id="ph1">`debug`</ph> attribute of the  element to <ph id="ph2">`true`</ph> in the Web.config file, the value of <ph id="ph3">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph> will be ignored.</source>
          <target state="translated">設定した場合、<ph id="ph1">`debug`</ph>する要素の属性<ph id="ph2">`true`</ph>Web.config ファイルの値で<ph id="ph3">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A&gt;</ph>は無視されます。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The following example sets the request time-out period to 60 seconds.</source>
          <target state="translated">次の例では、60 秒を要求のタイムアウト時間を設定します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Web.HttpServerUtility.ScriptTimeout">
          <source>The time-out period is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or otherwise could not be set.</source>
          <target state="translated">タイムアウト時間が <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。または、それ以外の設定ができませんでした。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Terminates execution of the current page and starts execution of a new page for the current request.</source>
          <target state="translated">現在のページの実行を終了し、現在の要求に対して新しいページの実行を開始します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">サーバー上にある、実行する新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</source>
          <target state="translated">現在の要求に対して、現在のページの実行を終了し、指定された URL パスを使用して新しいページの実行を開始します。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>The page transferred to should be another .aspx page.</source>
          <target state="translated">転送先のページには、別の .aspx ページをする必要があります。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>For instance, a transfer to an .asp or .asmx page is not valid.</source>
          <target state="translated">たとえば、.asp ファイルまたは .asmx ページへの転送が正しくありません。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method preserves the <ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドが保持されます、<ph id="ph2">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>, which throws a <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception upon completion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 呼び出し<ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>、どのがスローされます、<ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>完了時に例外です。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET を検証しないによって配信されるリソースを表示する現在のユーザーが許可されている、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET が直接によって示されるハンドラーを呼び出しますが、元のリソースのハンドラーが呼び出される前に、ASP.NET 認証と承認ロジックを実行、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドとは、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">使用して強制することができます、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドの代わりに、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドは、ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、<ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph>アプリケーション呼び出される前にメソッド、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">サーバー上にある、実行する新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを保持する場合は、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。<ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションをクリアする場合は、<ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</source>
          <target state="translated">現在のページの実行を終了し、指定された URL パスを使用して新しいページの実行を開始します。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>Specifies whether to clear the <ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションと <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを削除するかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The page transferred to should be another .aspx page.</source>
          <target state="translated">転送先のページには、別の .aspx ページをする必要があります。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>For instance, a transfer to an .asp or .asmx page is not valid.</source>
          <target state="translated">たとえば、.asp ファイルまたは .asmx ページへの転送が正しくありません。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>, which throws a <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception upon completion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> 呼び出し<ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>、どのがスローされます、<ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>完了時に例外です。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>If you set the <ph id="ph1">`preserveForm`</ph> parameter to <ph id="ph2">`true`</ph>, the target page will be able to access the view state of the previous page by using the <ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph> property.</source>
          <target state="translated">設定した場合、<ph id="ph1">`preserveForm`</ph>パラメーターを<ph id="ph2">`true`</ph>、対象のページは、前のページのビュー ステートを使用してアクセスするようになります、<ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>For security purposes, you should keep the <ph id="ph1">`enableViewStateMac`</ph> attribute set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">セキュリティのために、おく必要があります、<ph id="ph1">`enableViewStateMac`</ph>属性に設定<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET を検証しないによって配信されるリソースを表示する現在のユーザーが許可されている、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET が直接によって示されるハンドラーを呼び出しますが、元のリソースのハンドラーが呼び出される前に、ASP.NET 認証と承認ロジックを実行、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドとは、新しいリソースの認証と承認のロジックを再実行されません。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">使用して強制することができます、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドの代わりに、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドは、ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるために、これがインターネット インフォメーション サービス (IIS) と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックに加わっています。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、<ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph>アプリケーション呼び出される前にメソッド、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The following example executes a new page in the same directory as the current page.</source>
          <target state="translated">次の例では、現在のページと同じディレクトリに新しいページを実行します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)">
          <source>The current page request is a callback.</source>
          <target state="translated">現在のページ要求がコールバックです。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>The HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> to transfer the current request to.</source>
          <target state="translated">現在の要求の転送先となる <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> を実装する HTTP ハンドラー。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections; <ph id="ph4">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを保持する場合は、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。<ph id="ph5">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph6">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションをクリアする場合は、<ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> interface and specifies whether to clear the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collections.</source>
          <target state="translated">現在のページの実行を終了し、カスタム HTTP ハンドラーを使用して新しい要求の実行を開始します。このハンドラーは、<ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> インターフェイスを実装し、<ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.QueryString" /&gt;</ph> コレクションおよび <ph id="ph3">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションをクリアするかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</source>
          <target state="translated">事前定義された、特定の種類の共通言語仕様 (CLS) に準拠した任意の言語での HTTP 要求を処理するカスタム HTTP ハンドラーを記述することができます。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>Executable code that is defined in the HTTP handler classes instead of conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</source>
          <target state="translated">従来の ASP (従来の ASP とも呼ばれます) のページまたは ASP.NET ページではなく HTTP ハンドラーのクラスで定義されている実行可能コードは、これらの特定の要求に応答します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</source>
          <target state="translated">低レベルの要求とインターネット インフォメーション サービス (IIS) を実行している Web サーバーの応答サービスと対話する HTTP ハンドラーを使用して、機能が類似している ISAPI 拡張機能には、プログラミング モデルがより単純です。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>If you set the <ph id="ph1">`preserveForm`</ph> parameter to <ph id="ph2">`true`</ph>, the target page will be able to access the view state of the previous page by using the <ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph> property.</source>
          <target state="translated">設定した場合、<ph id="ph1">`preserveForm`</ph>パラメーターを<ph id="ph2">`true`</ph>、対象のページは、前のページのビュー ステートを使用してアクセスするようになります、<ph id="ph3">&lt;xref:System.Web.UI.Page.PreviousPage%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>For security purposes, you should keep the <ph id="ph1">`enableViewStateMac`</ph> attribute set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">セキュリティのために、おく必要があります、<ph id="ph1">`enableViewStateMac`</ph>属性に設定<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>ASP.NET does not verify that the current user is authorized to view the resource delivered by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">ASP.NET を検証しないによって配信されるリソースを表示する現在のユーザーが許可されている、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method, and does not rerun authentication and authorization logic for the new resource.</source>
          <target state="translated">ASP.NET が直接によって示されるハンドラーを呼び出しますが、元のリソースのハンドラーが呼び出される前に、ASP.NET 認証と承認ロジックを実行、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッド、および新しいリソースの再実行されませんが認証および承認ロジック。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>If the security policy for your application requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</source>
          <target state="translated">アプリケーションのセキュリティ ポリシーでは、クライアントが適切なリソースへのアクセス許可を得ている必要がある場合、アプリケーションを強制またはカスタムのアクセス制御メカニズムを提供します。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>You can force reauthorization by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">使用して強制することができます、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドの代わりに、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method performs a client-side redirect in which the browser requests the new resource.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッドは、ブラウザーが、新しいリソースを要求するクライアント側リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</source>
          <target state="translated">このリダイレクトは、システムへの新しい要求であるため、IIS と ASP.NET の両方のセキュリティ ポリシーのすべての認証と承認のロジックにそれが加わっています。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph> method before the application calls the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">ユーザーが使用するカスタム承認メソッドを組み込むことにより、リソースを表示するアクセス許可を持っていることを確認することができます、<ph id="ph1">&lt;xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A&gt;</ph>アプリケーション呼び出される前にメソッド、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)">
          <source>The current page request is a callback.</source>
          <target state="translated">現在のページ要求がコールバックです。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Performs an asynchronous execution of the specified URL.</source>
          <target state="translated">指定した URL の非同期実行を行います。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> was introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>For summary information about the .NET Framework, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">.NET Framework の概要については、次を参照してください。<bpt id="p1">[</bpt>バージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">サーバー上にある、実行する新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>Performs an asynchronous execution of the specified URL.</source>
          <target state="translated">指定した URL の非同期実行を行います。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>This method overload calls the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> overload with the <ph id="ph2">`preserveForm`</ph> parameter set to <ph id="ph3">`false`</ph>, the <ph id="ph4">`method`</ph> parameter set to <ph id="ph5">`null`</ph>, the <ph id="ph6">`headers`</ph> parameter set to <ph id="ph7">`null`</ph>, and the <ph id="ph8">`preserveUser`</ph> parameter set to <ph id="ph9">`true`</ph>.</source>
          <target state="translated">このメソッドのオーバー ロードを呼び出す、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph>を持つオーバー ロード、<ph id="ph2">`preserveForm`</ph>パラメーターに設定<ph id="ph3">`false`</ph>、<ph id="ph4">`method`</ph>パラメーターに設定<ph id="ph5">`null`</ph>、<ph id="ph6">`headers`</ph>パラメーターに設定<ph id="ph7">`null`</ph>、および<ph id="ph8">`preserveUser`</ph>パラメーターに設定<ph id="ph9">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>For more information, see the "Remarks" section in <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph> overload.</source>
          <target state="translated">詳細については、「解説」セクションを参照してください。<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>.</source>
          <target state="translated">この要求を実行するには、<ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> の統合パイプライン モードが必要です。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The server is not available to handle the request.</source>
          <target state="translated">要求を処理するサーバーが使用できません。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">サーバー上にある、実行する新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを保持する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、<ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを消去する場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>Performs an asynchronous execution of the specified URL and preserves query string parameters.</source>
          <target state="translated">指定した URL の非同期実行を行い、クエリ文字列パラメーターを保持します。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>This overload calls the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> overload with the <ph id="ph2">`preserveForm`</ph> parameter set to the value passed in, the <ph id="ph3">`method`</ph> parameter set to <ph id="ph4">`null`</ph>, the <ph id="ph5">`headers`</ph> parameter set to <ph id="ph6">`null`</ph>, and the <ph id="ph7">`preserveUser`</ph> parameter set to <ph id="ph8">`true`</ph>.</source>
          <target state="translated">このオーバー ロードを呼び出す、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph>を持つオーバー ロード、<ph id="ph2">`preserveForm`</ph>パラメーターに、渡された値を設定、<ph id="ph3">`method`</ph>パラメーターに設定<ph id="ph4">`null`</ph>、<ph id="ph5">`headers`</ph>パラメーターに設定<ph id="ph6">`null`</ph>、および<ph id="ph7">`preserveUser`</ph>パラメーターに設定<ph id="ph8">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>For more information, see the "Remarks" section in <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>.</source>
          <target state="translated">詳細については、「解説」セクションを参照してください。<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>.</source>
          <target state="translated">この要求を実行するには、<ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> の統合パイプライン モードが必要です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The server is not available to handle the request.</source>
          <target state="translated">要求を処理するサーバーが使用できません。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The URL path of the new page on the server to execute.</source>
          <target state="translated">サーバー上にある、実行する新しいページの URL パス。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを保持する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、<ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを消去する場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The HTTP method to use in the execution of the new request.</source>
          <target state="translated">新しい要求の実行で使用する HTTP メソッド。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> of request headers for the new request.</source>
          <target state="translated">新しい要求の要求ヘッダーの <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</source>
          <target state="translated">指定した HTTP メソッドおよびヘッダーを使用して、指定した URL の非同期実行を行います。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This method is used when running with the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> to allow request processing to be transferred from one resource type to another while executing the target request with the correct request context.</source>
          <target state="translated">このメソッドは、統合パイプライン モードでを実行するときは使用<ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>正しい要求コンテキストを持つ対象の要求の実行中に 1 つのリソースの種類から別に転送する要求の処理を許可します。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> method to transfer a request for an ASPX page to a request for an XML page.</source>
          <target state="translated">たとえば、使用することができます、 <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> XML ページに対する要求に ASPX ページの要求を転送する方法です。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph> method performs an asynchronous child execution of the specified URL with the following conditions:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%2A&gt;</ph>メソッドは、指定された URL は次の条件の実行を非同期の子を実行します。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the <ph id="ph1">`path`</ph> parameter specifies a query string, it will be used as the new query string.</source>
          <target state="translated">場合、<ph id="ph1">`path`</ph>パラメーター クエリ文字列を指定する、新しいクエリ文字列として使用されます。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If no query string is included, the query string of the request will be re-used.</source>
          <target state="translated">クエリ文字列が含まれていない場合、要求のクエリ文字列は再利用されます。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the <ph id="ph1">`method`</ph> parameter is specified, it will be used.</source>
          <target state="translated">場合、<ph id="ph1">`method`</ph>パラメーターを指定すると、それが使用されます。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If it is <ph id="ph1">`null`</ph>, the HTTP method of the original request will be used.</source>
          <target state="translated">場合は<ph id="ph1">`null`</ph>、元の要求の HTTP メソッドが使用されます。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the <ph id="ph1">`preserveForm`</ph> parameter is <ph id="ph2">`true`</ph>, the current entity body of the request will be available to the target request.</source>
          <target state="translated">場合、<ph id="ph1">`preserveForm`</ph>パラメーターは<ph id="ph2">`true`</ph>要求の現在のエンティティ ボディが対象の要求を使用できます。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This allows form posts and uploads to be transferred.</source>
          <target state="translated">これにより、により、フォーム ポストし、転送にアップロードします。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the user identity is currently set on the original request, the identity will be transferred to the new request.</source>
          <target state="translated">ユーザー id が元の要求に設定されている場合、id は、新しい要求に転送されます。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This allows authenticated requests to re-use the result of the authentication for the new request.</source>
          <target state="translated">これにより、認証済みの要求で新しい要求の認証の結果を再利用できます。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If you do not want the user to be transferred, set the user to <ph id="ph1">`null`</ph> on the original request before transferring.</source>
          <target state="translated">ユーザーを転送するしたくない場合は、ユーザーを設定<ph id="ph1">`null`</ph>転送する前に元の要求にします。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>If the <ph id="ph1">`headers`</ph> parameter is specified, the new request will execute with the specified headers.</source>
          <target state="translated">場合、<ph id="ph1">`headers`</ph>パラメーターを指定すると、新しい要求が、指定したヘッダーで実行されます。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This can be used to modify the request headers and cookies for the new request, or add a special header that specifies where the original request was received.</source>
          <target state="translated">これにより、要求ヘッダーと、新しい要求の cookie を変更するために使用するか、元の要求の受信場所を指定する特殊なヘッダーを追加します。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29&gt;</ph> method overload with the <ph id="ph2">`preserveUser`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29&gt;</ph>メソッドのオーバー ロードで、<ph id="ph2">`preserveUser`</ph>パラメーターに設定<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The request requires <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> running in integrated mode.</source>
          <target state="translated">この要求を実行するには、統合モードで実行している <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> が必要です。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The server is not available to handle the request.</source>
          <target state="translated">要求を処理するサーバーが使用できません。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The path.</source>
          <target state="translated">パス。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the <ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to clear the <ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを保持する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、<ph id="ph4">&lt;see cref="P:System.Web.HttpRequest.Form" /&gt;</ph> コレクションを消去する場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The HTTP method to use in the new request.</source>
          <target state="translated">新しい要求で使用する HTTP メソッド。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> object that contains request headers for the new request.</source>
          <target state="translated">新しい要求の要求ヘッダーを含む <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve the user identity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ユーザー id を保持する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The other method overloads of this method call this overload with this parameter set to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">このメソッドの他のメソッド オーバーロードは、このパラメーターが <ph id="ph1">&lt;see langword="true" /&gt;</ph> に設定された状態でこのオーバーロードを呼び出します。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</source>
          <target state="translated">指定した HTTP メソッド、ヘッダー、およびパスを使用して、指定した URL の非同期実行を実行します。また、任意でユーザー id とフォーム値を保持します。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>For more information, see the "Remarks" section in <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>.</source>
          <target state="translated">詳細については、「解説」セクションを参照してください。<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The request requires the integrated pipeline mode of <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>.</source>
          <target state="translated">この要求を実行するには、<ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> の統合パイプライン モードが必要です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The server is not available to handle the request.</source>
          <target state="translated">要求を処理するサーバーが使用できません。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> parameter is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> パラメーターが無効です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Decodes a string that was encoded for HTTP transmission and then sent to the server in a URL.</source>
          <target state="translated">HTTP 伝送用にエンコードされた文字列をデコードし、URL の形でサーバーに送信します。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.WebUtility" /&gt;</ph> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The text string to decode.</source>
          <target state="translated">デコードする文字列。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>URL-decodes a string and returns the decoded string.</source>
          <target state="translated">文字列を URL デコードし、デコードされた文字列を返します。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The decoded text.</source>
          <target state="translated">デコードされたテキスト。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL エンコードにより、すべてのブラウザーが URL 文字列のテキストを正しく送信されます。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">質問などの文字 (?) をマークする、アンパサンド (&amp;)、スラッシュ記号 (/)、および空白の切り捨てやブラウザーによっては、破損している可能性があります。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">この結果、これらの文字をエンコードする必要があります<ph id="ph1">`&lt;a&gt;`</ph>タグまたはクエリ文字列を文字列再で送信できる要求文字列内のブラウザー。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated">このメソッドは、アクセスする便利な手段、<ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph>実行時に ASP.NET アプリケーションからのメソッドです。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> to decode strings.</source>
          <target state="translated">このメソッドを使用して内部的には、<ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph>文字列をデコードします。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
          <target state="translated">ASP.NET web ページの分離コード ファイル内のインスタンスにアクセス、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスを通じて、<ph id="ph2">`Server`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">分離コード ファイルに含まれていないクラスで使用<ph id="ph1">`HttpContext.Current.Server`</ph>のインスタンスにアクセスする、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
          <target state="translated">外部では、web アプリケーションを使用、<ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph>クラス値をエンコードまたはデコードします。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The following example shows how to URL-decode a value that is retrieved from the query string.</source>
          <target state="translated">例を次にどのように値を URL デコードをから取得するクエリ文字列。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The code resides in the code-behind file for a web page.</source>
          <target state="translated">コードは、web ページの分離コード ファイルに存在します。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source><ph id="ph1">`ReturnPage`</ph> refers to a <ph id="ph2">`HyperLink`</ph> control.</source>
          <target state="translated"><ph id="ph1">`ReturnPage`</ph> 指す、<ph id="ph2">`HyperLink`</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String)">
          <source>The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.</source>
          <target state="translated">次の例は似ていますが、前の例を示して 方法を URL デコード クラス内の値されていないこと、分離コード ファイル。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>The HTML string to decode.</source>
          <target state="translated">デコードする HTML 文字列。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream that contains the decoded string.</source>
          <target state="translated">デコードされた文字列を格納する <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 出力ストリーム。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>Decodes an HTML string received in a URL and sends the resulting output to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated">URL 形式で受け取った HTML 文字列をデコードし、その結果の出力を <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 出力ストリームへ送信します。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL エンコードにより、すべてのブラウザーが URL 文字列のテキストを正しく送信されます。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">質問などの文字 (?) をマークする、アンパサンド (&amp;)、スラッシュ記号 (/)、および空白の切り捨てやブラウザーによっては、破損している可能性があります。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">この結果、これらの文字をエンコードする必要があります<ph id="ph1">`&lt;a&gt;`</ph>タグまたはクエリ文字列を文字列再で送信できる要求文字列内のブラウザー。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph> アクセスする便利な方法は、<ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph>実行時に ASP.NET アプリケーションからのメソッドです。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph> to decode strings.</source>
          <target state="translated">内部的には、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlDecode%2A&gt;</ph>使用<ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType&gt;</ph>に文字列をデコードします。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)">
          <source>The following example decodes the string named <ph id="ph1">`EncodedString`</ph> (received in a URL) into the string named <ph id="ph2">`DecodedString`</ph>.</source>
          <target state="translated">次の例は、という名前の文字列をデコード<ph id="ph1">`EncodedString`</ph>(URL で受信した) という名前の文字列に<ph id="ph2">`DecodedString`</ph>です。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="T:System.Web.HttpServerUtility">
          <source>Encodes a string for reliable HTTP transmission from the Web server to a client through the URL.</source>
          <target state="translated">URL を使用して Web サーバーからクライアントへ信頼性のある HTTP 伝送を行うために、文字列をエンコードします。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> アクセスする便利な方法は、<ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph>実行時に ASP.NET アプリケーションからのメソッドです。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">内部的には、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph>使用<ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph>文字列をエンコードします。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpServerUtility">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The text to URL-encode.</source>
          <target state="translated">URL エンコードするテキスト。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>URL-encodes a string and returns the encoded string.</source>
          <target state="translated">文字列を URL エンコードし、エンコードされた文字列を返します。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The URL-encoded text.</source>
          <target state="translated">URL エンコードされたテキスト。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL エンコードにより、すべてのブラウザーが URL 文字列のテキストを正しく送信されます。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">質問などの文字 (?) をマークする、アンパサンド (&amp;)、スラッシュ記号 (/)、および空白の切り捨てやブラウザーによっては、破損している可能性があります。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">この結果、これらの文字をエンコードする必要があります<ph id="ph1">`&lt;a&gt;`</ph>タグまたはクエリ文字列を文字列再で送信できる要求文字列内のブラウザー。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>This method is a convenient way to access the <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated">このメソッドは、アクセスする便利な手段、<ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph>実行時に ASP.NET アプリケーションからのメソッドです。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>Internally, this method uses <ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">このメソッドを使用して内部的には、<ph id="ph1">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph>文字列をエンコードします。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>In the code-behind file for an ASP.NET web page, access an instance of the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class through the <ph id="ph2">`Server`</ph> property.</source>
          <target state="translated">ASP.NET web ページの分離コード ファイル内のインスタンスにアクセス、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスを通じて、<ph id="ph2">`Server`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>In a class that is not in a code-behind file, use <ph id="ph1">`HttpContext.Current.Server`</ph> to access an instance of the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph> class.</source>
          <target state="translated">分離コード ファイルに含まれていないクラスで使用<ph id="ph1">`HttpContext.Current.Server`</ph>のインスタンスにアクセスする、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>Outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class to encode or decode values.</source>
          <target state="translated">外部では、web アプリケーションを使用、<ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph>クラス値をエンコードまたはデコードします。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The following example shows how to URL-encode a value that is used as a query string value of a hyperlink.</source>
          <target state="translated">例を次にどのように値を URL エンコードするとして使用されているハイパーリンクのクエリ文字列値です。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The code resides in the code-behind file for a web page.</source>
          <target state="translated">コードは、web ページの分離コード ファイルに存在します。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode.</source>
          <target state="translated">エンコードする値は、のみを例を簡略化し、URL エンコードする場合があります値の型を表示するには、この例では、ハードコーディングです。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>Typically, you would URL-encode a value that you received from the user or the request.</source>
          <target state="translated">通常は URL エンコードをユーザーまたは要求から受信した値です。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source><ph id="ph1">`NextPage`</ph> refers to a <ph id="ph2">`HyperLink`</ph> control.</source>
          <target state="translated"><ph id="ph1">`NextPage`</ph> 指す、<ph id="ph2">`HyperLink`</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String)">
          <source>The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.</source>
          <target state="translated">次の例は似ていますが、前の例を示して 方法 URL エンコードするクラス内の値されていないこと、分離コード ファイル。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>The text string to encode.</source>
          <target state="translated">エンコードする文字列。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream that contains the encoded string.</source>
          <target state="translated">エンコードされた文字列を格納している <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 出力ストリーム。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>URL-encodes a string and sends the resulting output to a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> output stream.</source>
          <target state="translated">文字列を URL エンコードし、その結果の出力を <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 出力ストリームに送信します。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>URL encoding ensures that all browsers will correctly transmit text in URL strings.</source>
          <target state="translated">URL エンコードにより、すべてのブラウザーが URL 文字列のテキストを正しく送信されます。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>Characters such as a question mark (?), ampersand (&amp;), slash mark (/), and spaces might be truncated or corrupted by some browsers.</source>
          <target state="translated">質問などの文字 (?) をマークする、アンパサンド (&amp;)、スラッシュ記号 (/)、および空白の切り捨てやブラウザーによっては、破損している可能性があります。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>As a result, these characters must be encoded in <ph id="ph1">`&lt;a&gt;`</ph> tags or in query strings where the strings can be re-sent by a browser in a request string.</source>
          <target state="translated">この結果、これらの文字をエンコードする必要があります<ph id="ph1">`&lt;a&gt;`</ph>タグまたはクエリ文字列を文字列再で送信できる要求文字列内のブラウザー。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> is a convenient way to access the <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> method at run time from an ASP.NET application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> アクセスする便利な方法は、<ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph>実行時に ASP.NET アプリケーションからのメソッドです。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>Internally, <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> uses <ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph> to encode strings.</source>
          <target state="translated">内部的には、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph>使用<ph id="ph2">&lt;xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType&gt;</ph>文字列をエンコードします。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>To encode or decode values outside of a web application, use the <ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.WebUtility&gt;</ph> クラスを使用して、web アプリケーションの外部の値をエンコード、またはデコードします。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>The following example encodes a string for transmission by HTTP.</source>
          <target state="translated">次の例では、http 伝送用の文字列をエンコードします。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)">
          <source>It encodes the string named <ph id="ph1">`TestString`</ph>, which contains the text "This is a <ph id="ph2">\&lt;</ph>Test String&gt;.", and copies it into the string named <ph id="ph3">`EncodedString`</ph> as "This+is+a+%3cTest+String%3e.".</source>
          <target state="translated">という名前の文字列をエンコード<ph id="ph1">`TestString`</ph>、テキストが含まれています"これは、<ph id="ph2">\&lt;</ph>テスト文字列 &gt; です。"、という名前の文字列にコピーすると<ph id="ph3">`EncodedString`</ph>として"この + は + + % 3cTest + 文字列 % 3e。"です。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)">
          <source>The text to URL-encode.</source>
          <target state="translated">URL エンコードするテキスト。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)">
          <source>Do not use; intended only for browser compatibility.</source>
          <target state="translated">使用しないでください。ブラウザーの互換性のためだけのものです。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)">
          <source>Use <ph id="ph1">&lt;see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" /&gt;</ph> を使用してください。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)">
          <source>The URL encoded text.</source>
          <target state="translated">URL エンコードされたテキスト。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The URL string token to decode.</source>
          <target state="translated">デコードする URL 文字列トークン。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>Decodes a URL string token to its equivalent byte array using base 64 digits.</source>
          <target state="translated">URL 文字列トークンをデコードし、base 64 を使用して等価なバイト配列を作成します。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The byte array containing the decoded URL string token.</source>
          <target state="translated">デコードされた URL 文字列トークンが格納されたバイト配列。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> method converts a URL string token, which encodes binary data as base 64 digits, to its equivalent byte array representation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph>メソッドは、base64 の数字としてバイナリ データをエンコード、URL 文字列トークンを等価のバイト配列形式に変換します。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> method to decode tokens transmitted on the URL and encoded by using the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph>.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph>トークンをデコードするメソッドは、URL で送信しを使用してエンコードされた、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph> method will return an empty byte array if the <ph id="ph2">`input`</ph> parameter has a length of less than one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenDecode%2A&gt;</ph>場合、メソッドは空のバイト配列を返しますが、<ph id="ph2">`input`</ph>パラメーターが 1 未満の長さ。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)">
          <source>The value of the <ph id="ph1">&lt;paramref name="input" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> パラメーターの値が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The byte array to encode.</source>
          <target state="translated">エンコードするバイト配列。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</source>
          <target state="translated">Base64 形式の文字を使用して、バイト配列を等価の文字列表現にエンコードします。この文字列表現は、URL での送信で使用できます。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The string containing the encoded token if the byte array <bpt id="p1">*</bpt>length<ept id="p1">*</ept> is greater than one; otherwise, an empty string ("").</source>
          <target state="translated">バイト配列の <bpt id="p1">*</bpt>length<ept id="p1">*</ept> が 2 以上の場合はエンコードされたトークンを格納している文字列。それ以外の場合は空の文字列 ("")。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph> method converts a byte array into an equivalent string representation encoded with base 64 digits.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph>メソッドがバイト配列を base 64 でエンコードされた等価の文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The resulting string token can be transmitted on the URL.</source>
          <target state="translated">生成される文字列トークンは、URL に送信できます。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph> will return an empty string if the <ph id="ph2">`input`</ph> parameter has a length of less than one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.UrlTokenEncode%2A&gt;</ph>場合に、空の文字列を返す、<ph id="ph2">`input`</ph>パラメーターが 1 未満の長さ。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])">
          <source>The value of the <ph id="ph1">&lt;paramref name="input" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> パラメーターの値が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>