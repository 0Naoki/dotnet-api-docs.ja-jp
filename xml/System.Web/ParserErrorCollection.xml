<Type Name="ParserErrorCollection" FullName="System.Web.ParserErrorCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a5441c22354ea2b14f62227b26c4d68994b78af" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69385452" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParserErrorCollection : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ParserErrorCollection extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.ParserErrorCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParserErrorCollection&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParserErrorCollection sealed : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type ParserErrorCollection = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>解析中に検出された一連のパーサー エラーを管理します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.ParserErrorCollection>には、オブジェクトの<xref:System.Web.ParserError>コレクションを管理するために使用できるメソッドとプロパティが用意されています。 たとえば、解析時に一連のパーサーエラーをコレクションに追加し、カスタム<xref:System.Web.Compilation.BuildProvider>オブジェクトを使用して解析中にキャッチされたすべての解析例外を報告することができます。  
  
 パーサーエラーをに追加したり、コレクションから削除したりするには、次のように指定します。  
  
-   コレクションに1つ<xref:System.Web.ParserError>のオブジェクトを追加するメソッド。<xref:System.Web.ParserErrorCollection.Add%2A>  
  
-   コレクション<xref:System.Web.ParserErrorCollection.AddRange%2A>に複数<xref:System.Web.ParserError>のオブジェクトを追加するメソッド。  
  
-   コレクション内の指定し<xref:System.Web.ParserErrorCollection.Item%2A>たインデックス位置に 1 <xref:System.Web.ParserErrorCollection>つ<xref:System.Web.ParserError>のオブジェクトを追加するための、インデクサーであるメソッドとプロパティの両方。<xref:System.Web.ParserErrorCollection.Insert%2A>  
  
 また、 <xref:System.Web.ParserErrorCollection>クラスを使用して次の操作を行うこともできます。  
  
-   メソッドを使用してオブジェクトを削除<xref:System.Web.ParserError>します。 <xref:System.Web.ParserErrorCollection.Remove%2A>  
  
-   メソッドを使用し<xref:System.Web.ParserError>て、特定のがコレクション内に存在するかどうかを確認します。 <xref:System.Web.ParserErrorCollection.Contains%2A>  
  
-   メソッドを使用<xref:System.Web.ParserError>して、コレクション内のオブジェクトがある場所を検索します。 <xref:System.Web.ParserErrorCollection.IndexOf%2A>  
  
   
  
## Examples  
 次のコード例は、メソッドの<xref:System.Web.ParserErrorCollection>使用方法を示しています。  
  
 [!code-csharp[System.Web.ParserErrorCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#1)]
 [!code-vb[System.Web.ParserErrorCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.HttpException" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.ParserErrorCollection" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.ParserErrorCollection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Web.ParserErrorCollection>クラスのインスタンスを初期化する方法を次のコード例に示します。  
  
 [!code-csharp[System.Web.ParserErrorCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#2)]
 [!code-vb[System.Web.ParserErrorCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserErrorCollection (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.#ctor(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserErrorCollection(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.ParserErrorCollection : System.Web.ParserError[] -&gt; System.Web.ParserErrorCollection" Usage="new System.Web.ParserErrorCollection value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">コレクションに追加するエラーを指定する <see cref="T:System.Web.ParserError" /> 型の配列。</param>
        <summary><see cref="T:System.Web.ParserErrorCollection" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンストラクター <xref:System.Web.ParserErrorCollection.%23ctor%2A?displayProperty=nameWithType>は、オブジェクトの<xref:System.Web.ParserError>配列をコレクションに追加します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Add(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">コレクションに追加する <see cref="T:System.Web.ParserError" /> 値。</param>
        <summary>値をコレクションに追加します。</summary>
        <returns>追加した値のコレクション内のインデックス。同じ値が既にコレクション内にある場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを使用して、既存<xref:System.Web.ParserError>のオブジェクトをコレクションに追加します。 <xref:System.Web.ParserErrorCollection.Add%2A> コレクションに同じ<xref:System.Web.ParserError>オブジェクトを複数回追加することはできません。 コレクション内に既<xref:System.Web.ParserErrorCollection.Add%2A>に存在する<xref:System.Web.ParserError>オブジェクトを使用してメソッドを呼び出すと、加算は失敗し、-1 が返されます。  
  
 コレクションに複数のオブジェクトを追加するには<xref:System.Web.ParserErrorCollection.AddRange%2A> 、メソッドを使用します。  
  
   
  
## Examples  
 オブジェクトを<xref:System.Web.ParserError> <xref:System.Web.ParserErrorCollection>オブジェクトに追加する方法を次のコード例に示します。  
  
 [!code-csharp[System.Web.ParserErrorCollection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#3)]
 [!code-vb[System.Web.ParserErrorCollection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.ParserError" /> オブジェクトをコレクションに追加します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserError[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserError[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserError[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserError())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Web::ParserError ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserError[] -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError[]" />
      </Parameters>
      <Docs>
        <param name="value">コレクションに追加する値を指定する <see cref="T:System.Web.ParserError" /> 型の配列。</param>
        <summary>コレクションに <see cref="T:System.Web.ParserError" /> オブジェクトの配列を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクトの<xref:System.Web.ParserErrorCollection.AddRange%2A> <xref:System.Web.ParserError>配列をコレクションに追加するには、メソッドを使用します。 メソッド<xref:System.Web.ParserErrorCollection.AddRange%2A>は、複数<xref:System.Web.ParserError>のオブジェクトを作成し、1つのメソッド呼び出しでコレクションに追加する場合に便利です。 コレクションに個々<xref:System.Web.ParserError>のオブジェクトを追加するには<xref:System.Web.ParserErrorCollection.Add%2A> 、メソッドを使用します。  
  
   
  
## Examples  
 <xref:System.Web.ParserError> オブジェクト<xref:System.Web.ParserErrorCollection>にオブジェクトの範囲を追加する方法を次のコード例に示します。  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.ParserErrorCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.ParserErrorCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.AddRange(System.Web.ParserErrorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ParserErrorCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Web::ParserErrorCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Web.ParserErrorCollection -&gt; unit" Usage="parserErrorCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserErrorCollection" />
      </Parameters>
      <Docs>
        <param name="value">コレクションに追加する <see cref="T:System.Web.ParserErrorCollection" /> オブジェクトを格納している <see cref="T:System.Web.ParserError" />。</param>
        <summary>既存の <see cref="T:System.Web.ParserErrorCollection" /> 内のオブジェクトをコレクションに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドとは異なり<xref:System.Web.ParserErrorCollection.AddRange%2A> 、メソッドには、追加する<xref:System.Web.ParserError>オブジェクトが既にコレクション内に存在するかどうかを判断するために使用できる戻り値はありません。 <xref:System.Web.ParserErrorCollection.Add%2A> この情報が必要な場合は、 <xref:System.Web.ParserErrorCollection.Contains%2A>を使用する<xref:System.Web.ParserErrorCollection.AddRange%2A>前にメソッドを使用してください。  
  
   
  
## Examples  
 <xref:System.Web.ParserError> オブジェクト<xref:System.Web.ParserErrorCollection>にオブジェクトの範囲を追加する方法を次のコード例に示します。  
  
 [!code-csharp[System.Web.ParserErrorCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#4)]
 [!code-vb[System.Web.ParserErrorCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Web.ParserError" /> 値は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Contains(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ParserError) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.ParserError -&gt; bool" Usage="parserErrorCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">コレクション内で検索する <see cref="T:System.Web.ParserError" />。</param>
        <summary><see cref="T:System.Web.ParserError" /> オブジェクトがコレクション内にあるかどうかを判断します。</summary>
        <returns><see cref="T:System.Web.ParserError" /> がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションに同じ<xref:System.Web.ParserError>オブジェクトを複数回追加することはできません。 ただし、オブジェクトを<xref:System.Web.ParserError>複数回追加しようとしても、例外はスローされません。 代わりに、追加は失敗します。 この場合、 <xref:System.Web.ParserErrorCollection.Add%2A>メソッドは値-1 を返します。 ただし、メソッド<xref:System.Web.ParserErrorCollection.AddRange%2A>と<xref:System.Web.ParserErrorCollection.Insert%2A>メソッドには戻り値がありません。 これらの<xref:System.Web.ParserError>メソッドのいずれかを使用してオブジェクトを<xref:System.Web.ParserErrorCollection.Contains%2A>追加する場合は、メソッド<xref:System.Web.ParserError>を使用して、特定のオブジェクトが既にコレクション内に存在するかどうかを確認します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.ParserError> <xref:System.Web.ParserErrorCollection>オブジェクト内の指定されたオブジェクトのインスタンスを検索する方法を示しています。  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.ParserError[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.ParserError[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.CopyTo(System.Web.ParserError[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ParserError(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::ParserError ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.ParserError[] * int -&gt; unit" Usage="parserErrorCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.ParserError[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">コレクション内のパーサー エラーのコピー先となる <see cref="T:System.Web.ParserError" /> 型の配列。</param>
        <param name="index"><see cref="T:System.Web.ParserError" /> のコピー先の配列内の最初のインデックス。</param>
        <summary>コピー先配列の指定されたインデックスを開始位置として、コレクション内の <see cref="T:System.Web.ParserError" /> オブジェクトを互換性がある 1 次元配列にコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを使用して、 <xref:System.Web.ParserError>指定したインデックスを開始位置として、コレクション内のオブジェクト (含まれている項目参照を含む) を互換性のある配列にコピーします。 <xref:System.Web.ParserErrorCollection.CopyTo%2A> これは、 <xref:System.Array.Sort%2A>メソッドを使用してコレクション<xref:System.Web.ParserError>内のオブジェクトを並べ替える場合に便利です。 この操作を行うには、次の手順を実行します。  
  
1.  <xref:System.Web.ParserError>オブジェクトを互換性のある配列にコピーします。  
  
2.  配列を並べ替えます。  
  
3.  コレクションからすべての<xref:System.Web.ParserError>オブジェクトを削除するには、メソッドを使用します。<xref:System.Web.ParserErrorCollection.Remove%2A>  
  
4.  並べ替えら<xref:System.Web.ParserErrorCollection.AddRange%2A>れた配列をコレクションに追加するには、メソッドを使用します。  
  
   
  
## Examples  
 次のコード例は、指定された<xref:System.Web.ParserErrorCollection> <xref:System.Web.ParserError>配列にオブジェクトの内容をコピーする方法を示しています。  
  
 [!code-csharp[System.Web.ParserErrorCollection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#6)]
 [!code-vb[System.Web.ParserErrorCollection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.IndexOf(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ParserError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.ParserError -&gt; int" Usage="parserErrorCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">コレクション内で検索する <see cref="T:System.Web.ParserError" />。</param>
        <summary>コレクション内の指定した <see cref="T:System.Web.ParserError" /> オブジェクトのインデックスを取得します。</summary>
        <returns>コレクション内の <see cref="T:System.Web.ParserError" /> オブジェクトの 0 から始まるインデックス。<see cref="T:System.Web.ParserError" /> がコレクションに存在しない場合は 1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクション内の<xref:System.Web.ParserError>オブジェクトのインデックスを確認するには、メソッドを使用します。<xref:System.Web.ParserErrorCollection.IndexOf%2A> これは、 <xref:System.Web.ParserError> <xref:System.Collections.CollectionBase.GetEnumerator%2A>メソッドによって返される<xref:System.Collections.IEnumerator>オブジェクトを使用してコレクションを反復処理するときに、各のインデックスを決定するのに役立ちます。  
  
   
  
## Examples  
 コレクション内の指定したインデックス位置にある<xref:System.Web.ParserError>オブジェクトのインデックスを検索する方法を次のコード例に示します。 <xref:System.Web.ParserErrorCollection>  
  
 [!code-csharp[System.Web.ParserErrorCollection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#5)]
 [!code-vb[System.Web.ParserErrorCollection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Insert(System.Int32,System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.Web.ParserError" /> の挿入位置となる、コレクション内のインデックス。</param>
        <param name="value">コレクションに挿入する <see cref="T:System.Web.ParserError" /> オブジェクト。</param>
        <summary>このコレクション内の指定したインデックス位置に、指定した <see cref="T:System.Web.ParserError" /> オブジェクトを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを使用して、コレクション<xref:System.Web.ParserError>内の特定のインデックスに既存のオブジェクトを挿入します。 <xref:System.Web.ParserErrorCollection.Insert%2A>  
  
 コレクションに同じ<xref:System.Web.ParserError>オブジェクトを複数回追加することはできません。 コレクション内に既<xref:System.Web.ParserErrorCollection.Insert%2A>に存在するを<xref:System.Web.ParserError>使用してメソッドを呼び出すと、挿入は失敗します。 挿入の前に<xref:System.Web.ParserError> メソッドを使用して、特定のがコレクション内に既に存在するかどうかを確認します。<xref:System.Web.ParserErrorCollection.Contains%2A> コレクション内の<xref:System.Web.ParserError>の位置を変更するには、最初に<xref:System.Web.ParserErrorCollection.Remove%2A>メソッドを使用して削除してから、を使用<xref:System.Web.ParserErrorCollection.Insert%2A>して目的のインデックスに挿入する必要があります。  
  
   
  
## Examples  
 コレクション内の指定したインデックス位置に<xref:System.Web.ParserError>オブジェクトを挿入する方法を次のコード例に示します。 <xref:System.Web.ParserErrorCollection>  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.ParserError this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ParserError Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.ParserErrorCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ParserError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ParserError ^ default[int] { System::Web::ParserError ^ get(int index); void set(int index, System::Web::ParserError ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.ParserError with get, set" Usage="System.Web.ParserErrorCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ParserError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">取得または設定する <see cref="T:System.Web.ParserError" /> オブジェクトのコレクション内のインデックス。</param>
        <summary>コレクション内の指定したインデックス位置にある <see cref="T:System.Web.ParserError" /> オブジェクトを取得または設定します。</summary>
        <value>コレクション内の指定したインデックス位置の <see cref="T:System.Web.ParserError" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを使用して、 <xref:System.Web.ParserError>コレクション内の指定したインデックス位置にあるオブジェクトを取得します。 <xref:System.Web.ParserErrorCollection.Item%2A> <xref:System.Web.ParserError>オブジェクトへの参照があり、インデックスが必要な場合は、 <xref:System.Web.ParserErrorCollection.IndexOf%2A>メソッドを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.ParserError value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.ParserError value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ParserErrorCollection.Remove(System.Web.ParserError)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As ParserError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::ParserError ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.ParserError -&gt; unit" Usage="parserErrorCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.ParserError" />
      </Parameters>
      <Docs>
        <param name="value">コレクションから削除する <see cref="T:System.Web.ParserError" />。</param>
        <summary>指定した <see cref="T:System.Web.ParserError" /> オブジェクトをコレクションから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 への<xref:System.Web.ParserError> <xref:System.Web.ParserErrorCollection.Remove%2A> 参照がある場合は、メソッドを使用して<xref:System.Web.ParserError>コレクションからオブジェクトを削除します。  
  
   
  
## Examples  
 オブジェクトの指定したインデックス<xref:System.Web.ParserError>からを削除する方法を次のコード例に示します。 <xref:System.Web.ParserErrorCollection>  
  
 [!code-csharp[System.Web.ParserErrorCollection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.ParserErrorCollection/CS/ParserErrorCollection_CS.aspx#8)]
 [!code-vb[System.Web.ParserErrorCollection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.ParserErrorCollection/VB/ParserErrorCollection_VB.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
