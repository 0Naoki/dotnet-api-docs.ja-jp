<Type Name="HttpContext" FullName="System.Web.HttpContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1380b73e239eede307b3451b5801cd3ec766853" />
    <Meta Name="ms.sourcegitcommit" Value="c902e847cd05ac37d93eca981b0fb009aae0a790" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/28/2018" />
    <Meta Name="ms.locfileid" Value="52454836" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpContext extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContext sealed : IServiceProvider" />
  <TypeSignature Language="F#" Value="type HttpContext = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="cea3a-101">それぞれの HTTP 要求に関する HTTP 固有のすべての情報をカプセル化します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cea3a-101">Encapsulates all HTTP-specific information about an individual HTTP request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-102">継承するクラス、<xref:System.Web.IHttpModule>と<xref:System.Web.IHttpHandler>への参照を提供するインターフェイス、<xref:System.Web.HttpContext>の現在の HTTP 要求オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cea3a-102">Classes that inherit the <xref:System.Web.IHttpModule> and <xref:System.Web.IHttpHandler> interfaces are provided a reference to an <xref:System.Web.HttpContext> object for the current HTTP request.</span></span> <span data-ttu-id="cea3a-103">オブジェクトは、組み込みへのアクセスを提供します。 <xref:System.Web.HttpContext.Request%2A>、 <xref:System.Web.HttpContext.Response%2A>、および<xref:System.Web.HttpContext.Server%2A>要求のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cea3a-103">The object provides access to the intrinsic <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A>, and <xref:System.Web.HttpContext.Server%2A> properties for the request.</span></span>  
  
> [!IMPORTANT] 
> <span data-ttu-id="cea3a-104">このオブジェクトはガベージ コレクションの準備がときに、<xref:System.Web.HttpRequest>が完了します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-104">This object is ready for garbage collection when the <xref:System.Web.HttpRequest> is completed.</span></span> <span data-ttu-id="cea3a-105">要求が完了したら、その使用になる可能性が未定義の動作など、<xref:System.NullReferenceException>します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-105">Its usage after the request completes could lead to undefined behavior, such as a <xref:System.NullReferenceException>.</span></span>
>
> <span data-ttu-id="cea3a-106">このオブジェクトは、ASP.NET によって制御されるスレッドにできるだけです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-106">This object is only available in the thread controlled by ASP.NET.</span></span> <span data-ttu-id="cea3a-107">バック グラウンド スレッドでの使用状況は、未定義の動作をする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="cea3a-107">Usage in background threads could lead to undefined behavior.</span></span>

## Examples  
 <span data-ttu-id="cea3a-108">次の例では、アクセスのプロパティを表示する方法、<xref:System.Web.HttpContext>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cea3a-108">The following example demonstrates how to access and display properties of the <xref:System.Web.HttpContext> object.</span></span> <span data-ttu-id="cea3a-109">現在の HTTP 要求のコンテキストを使用してアクセス、<xref:System.Web.UI.Page.Context%2A>のプロパティ、<xref:System.Web.UI.Page>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cea3a-109">The context of the current HTTP request is accessed by using the <xref:System.Web.UI.Page.Context%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpContext#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpContext/cs/httpcontextcs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpContext#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpContext/vb/httpcontextvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpModule" />
    <altmember cref="T:System.Web.IHttpHandler" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=196730">
      <span data-ttu-id="cea3a-110">コンテキストの問題</span>
      <span class="sxs-lookup">
        <span data-stu-id="cea3a-110">A Matter of Context</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-111">
            <see cref="T:System.Web.HttpContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-111">Initializes a new instance of the <see cref="T:System.Web.HttpContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpContext (System.Web.HttpWorkerRequest wr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpWorkerRequest wr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (wr As HttpWorkerRequest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpContext(System::Web::HttpWorkerRequest ^ wr);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpContext : System.Web.HttpWorkerRequest -&gt; System.Web.HttpContext" Usage="new System.Web.HttpContext wr" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wr" Type="System.Web.HttpWorkerRequest" />
      </Parameters>
      <Docs>
        <param name="wr">
          <span data-ttu-id="cea3a-112">現在の HTTP 要求に対する <see cref="T:System.Web.HttpWorkerRequest" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-112">The <see cref="T:System.Web.HttpWorkerRequest" /> object for the current HTTP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-113">指定したワーカー要求オブジェクトを使用する <see cref="T:System.Web.HttpContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-113">Initializes a new instance of the <see cref="T:System.Web.HttpContext" /> class that uses the specified worker-request object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpContext (System.Web.HttpRequest request, System.Web.HttpResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.HttpRequest request, class System.Web.HttpResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (request As HttpRequest, response As HttpResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpContext(System::Web::HttpRequest ^ request, System::Web::HttpResponse ^ response);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpContext : System.Web.HttpRequest * System.Web.HttpResponse -&gt; System.Web.HttpContext" Usage="new System.Web.HttpContext (request, response)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequest" />
        <Parameter Name="response" Type="System.Web.HttpResponse" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="cea3a-114">現在の HTTP 要求に対する <see cref="T:System.Web.HttpRequest" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-114">The <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</span>
          </span>
        </param>
        <param name="response">
          <span data-ttu-id="cea3a-115">現在の HTTP 要求に対する <see cref="T:System.Web.HttpResponse" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-115">The <see cref="T:System.Web.HttpResponse" /> object for the current HTTP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-116">指定した要求オブジェクトと応答オブジェクトを使用して、<see cref="T:System.Web.HttpContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-116">Initializes a new instance of the <see cref="T:System.Web.HttpContext" /> class by using the specified request and response objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AcceptWebSocketRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-117">
            <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求を受け入れます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-117">Accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; -&gt; unit" Usage="httpContext.AcceptWebSocketRequest userFunc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="userFunc">
          <span data-ttu-id="cea3a-118">ユーザー関数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-118">The user function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-119">指定されたユーザー関数を使用して <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求を受け入れます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-119">Accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-120">このメソッドを呼び出すことは、呼び出しに相当、<xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>メソッドのオーバー ロードを渡して`null`の`options`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="cea3a-120">Calling this method is equivalent to calling the <xref:System.Web.HttpContext.AcceptWebSocketRequest%2A> method overload and passing `null` for the `options` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cea3a-121">
            <paramref name="userFunc" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-121">The <paramref name="userFunc" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cea3a-122">この要求は <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-122">The request is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc, class System.Web.WebSockets.AspNetWebSocketOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task), options As AspNetWebSocketOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc, System::Web::WebSockets::AspNetWebSocketOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; * System.Web.WebSockets.AspNetWebSocketOptions -&gt; unit" Usage="httpContext.AcceptWebSocketRequest (userFunc, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="options" Type="System.Web.WebSockets.AspNetWebSocketOptions" />
      </Parameters>
      <Docs>
        <param name="userFunc">
          <span data-ttu-id="cea3a-123">ユーザー関数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-123">The user function.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="cea3a-124">オプションのオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-124">The options object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-125">指定されたユーザー関数とオプション オブジェクトを使用して <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求を受け入れます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-125">Accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function and options object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cea3a-126">
            <paramref name="userFunc" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-126">The <paramref name="userFunc" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cea3a-127">この要求は <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-127">The request is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddError">
      <MemberSignature Language="C#" Value="public void AddError (Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddError(class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.AddError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddError (errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddError(Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="member this.AddError : Exception -&gt; unit" Usage="httpContext.AddError errorInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorInfo">
          <span data-ttu-id="cea3a-128">例外コレクションに追加する <see cref="T:System.Exception" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-128">The <see cref="T:System.Exception" /> to add to the exception collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-129">現在の HTTP 要求に対する例外コレクションに例外を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-129">Adds an exception to the exception collection for the current HTTP request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnRequestCompleted">
      <MemberSignature Language="C#" Value="public System.Web.ISubscriptionToken AddOnRequestCompleted (Action&lt;System.Web.HttpContext&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.ISubscriptionToken AddOnRequestCompleted(class System.Action`1&lt;class System.Web.HttpContext&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOnRequestCompleted (callback As Action(Of HttpContext)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::ISubscriptionToken ^ AddOnRequestCompleted(Action&lt;System::Web::HttpContext ^&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.AddOnRequestCompleted : Action&lt;System.Web.HttpContext&gt; -&gt; System.Web.ISubscriptionToken" Usage="httpContext.AddOnRequestCompleted callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContext&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="cea3a-130">HTTP コンテキスト オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-130">The HTTP context object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-131">要求の HTTP 部分が終了するときに発生する仮想イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-131">Raises a virtual event that occurs when the HTTP part of the request is ending.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-132">サブスクリプション トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-132">The subscription token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-133">このイベントが発生する前に、<xref:System.Web.WebSockets.AspNetWebSocket>接続を開始します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-133">This event occurs before the <xref:System.Web.WebSockets.AspNetWebSocket> connection begins.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cea3a-134">
            <paramref name="callback" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-134">The <paramref name="callback" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllErrors">
      <MemberSignature Language="C#" Value="public Exception[] AllErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception[] AllErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.AllErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllErrors As Exception()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Exception ^&gt; ^ AllErrors { cli::array &lt;Exception ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllErrors : Exception[]" Usage="System.Web.HttpContext.AllErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-135">HTTP 要求の処理中に蓄積されたエラーの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-135">Gets an array of errors accumulated while processing an HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-136">現在の HTTP 要求に対する <see cref="T:System.Exception" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-136">An array of <see cref="T:System.Exception" /> objects for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAsyncDuringSyncStages">
      <MemberSignature Language="C#" Value="public bool AllowAsyncDuringSyncStages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAsyncDuringSyncStages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.AllowAsyncDuringSyncStages" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAsyncDuringSyncStages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAsyncDuringSyncStages { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAsyncDuringSyncStages : bool with get, set" Usage="System.Web.HttpContext.AllowAsyncDuringSyncStages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-137">ASP.NET 要求の一部の処理中に、それが予期されていない場合、非同期操作が許可されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-137">Gets or sets a value that indicates whether asynchronous operations are allowed during parts of ASP.NET request processing when they are not expected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-138">予期しない時期に非同期 API が使用されると ASP.NET が例外をスローする場合は <see langword="false" />、それ以外の場合は <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-138">
              <see langword="false" /> if ASP.NET will throw an exception when the asynchronous API is used at a time when it is not expected; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="cea3a-139">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-139">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-140">このフラグは設定されていない場合`true`ASP.NET、非同期 API を悪用してアプリケーションを検出した場合に例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-140">If this flag is not set to `true`, ASP.NET will throw an exception when it detects the application misusing the async API.</span></span> <span data-ttu-id="cea3a-141">これは、処理パイプラインでの非同期操作は必要ありません、要求の一部の中に、非同期メソッドを呼び出すしようとする場合、または、非同期のモジュールとハンドラー完了を通知するときにまだ保留中の非同期操作がある場合に発生することができます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-141">This can occur if you try to call an asynchronous method during a part of the request processing pipeline where asynchronous operations are not expected, or if there is still outstanding asynchronous work when an asynchronous module or handler signals completion.</span></span> <span data-ttu-id="cea3a-142">この動作は、セーフティ ネットとしてものでは収まらない非同期コード パターンを予想し、悪影響が出る場合がありますを記述しているかどうかを早い段階で確認できます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-142">This behavior is meant as a safety net to let you know early on if you're writing async code that doesn't fit expected patterns and might have negative side effects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.HttpContext.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-143">現在の HTTP 要求に対する <see cref="T:System.Web.HttpApplicationState" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-143">Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-144">現在の HTTP 要求に対する <see cref="T:System.Web.HttpApplicationState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-144">The <see cref="T:System.Web.HttpApplicationState" /> for the current HTTP request.</span>
          </span>
          <span data-ttu-id="cea3a-145">現在の HTTP 要求に対する <see cref="T:System.Web.HttpApplication" /> オブジェクトを取得するには、<see cref="P:System.Web.HttpContext.ApplicationInstance" /> を使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-145">To get the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request, use <see cref="P:System.Web.HttpContext.ApplicationInstance" />.</span>
          </span>
          <span data-ttu-id="cea3a-146">(ASP.NET と従来の ASP との混同を避けるために、ASP.NET は <see langword="Application" /> の代わりに <see langword="ApplicationInstance" /> をプロパティ名として使用して、現在の <see cref="T:System.Web.HttpApplication" /> インスタンスを参照します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-146">(ASP.NET uses <see langword="ApplicationInstance" /> instead of <see langword="Application" /> as a property name to refer to the current <see cref="T:System.Web.HttpApplication" /> instance in order to avoid confusion between ASP.NET and classic ASP.</span>
          </span>
          <span data-ttu-id="cea3a-147">従来の ASP では、<see langword="Application" /> はグローバル アプリケーション状態のディクショナリを参照します)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-147">In classic ASP, <see langword="Application" /> refers to the global application state dictionary.)</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpContext.ApplicationInstance" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstance">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplication ApplicationInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplication ApplicationInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.ApplicationInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationInstance As HttpApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplication ^ ApplicationInstance { System::Web::HttpApplication ^ get(); void set(System::Web::HttpApplication ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationInstance : System.Web.HttpApplication with get, set" Usage="System.Web.HttpContext.ApplicationInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-148">現在の HTTP 要求に対する <see cref="T:System.Web.HttpApplication" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-148">Gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-149">現在の HTTP 要求に対する <see cref="T:System.Web.HttpApplication" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-149">The <see cref="T:System.Web.HttpApplication" /> for the current HTTP request.</span>
          </span>
          <span data-ttu-id="cea3a-150">ASP.NET と従来の ASP との混同を避けるために、ASP.NET は <see langword="Application" /> の代わりに <see langword="ApplicationInstance" /> をプロパティ名として使用して、現在の <see cref="T:System.Web.HttpApplication" /> インスタンスを参照します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-150">ASP.NET uses <see langword="ApplicationInstance" /> instead of <see langword="Application" /> as a property name to refer to the current <see cref="T:System.Web.HttpApplication" /> instance in order to avoid confusion between ASP.NET and classic ASP.</span>
          </span>
          <span data-ttu-id="cea3a-151">従来の ASP では、<see langword="Application" /> はグローバル アプリケーション状態のディクショナリを参照します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-151">In classic ASP, <see langword="Application" /> refers to the global application state dictionary.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cea3a-152">Web アプリケーションを IIS 7.0 の統合モードで実行しており、プロパティの値を、null 以外の値から　<see langword="null" /> に変更しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-152">The Web application is running under IIS 7.0 in Integrated mode, and an attempt was made to change the property value from a non-null value to <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.HttpContext.Application" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPreloadMode : System.Web.Configuration.AsyncPreloadModeFlags with get, set" Usage="System.Web.HttpContext.AsyncPreloadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-153">非同期プリロード モードに関係するフラグを含むオブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-153">Gets or sets an object that contains flags that pertain to asynchronous preload mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-154">非同期プリロード モードに関係するフラグを含むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-154">An object that contains flags that pertain to asynchronous preload mode.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-155">このプロパティにアクセスすると、初めて非同期プリロード モードのフラグを格納しているオブジェクトはから読み込まれた、<xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>構成ファイルで設定します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-155">The first time this property is accessed, the object that contains flags for asynchronous preload mode is loaded from the <xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A> setting in the configuration file.</span></span>  
  
 <span data-ttu-id="cea3a-156">このプロパティはプログラムで設定できますが、プロパティ値の変更が有効なのは、ASP.NET の要求パイプラインの `ExecuteRequestHandler` の手順の前にプロパティが設定されている場合のみです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-156">Although this property can be set programmatically, changing the property value only has effect if the property is set before the `ExecuteRequestHandler` step in the ASP.NET request pipeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.Caching.Cache" Usage="System.Web.HttpContext.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-157">現在のアプリケーション ドメインに対する <see cref="T:System.Web.Caching.Cache" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-157">Gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-158">現在のアプリケーション ドメインに対する <see cref="T:System.Web.Caching.Cache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-158">The <see cref="T:System.Web.Caching.Cache" /> for the current application domain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-159">インスタンスは 1 つ、<xref:System.Web.Caching.Cache>アプリケーション ドメインごとにクラス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-159">There is one instance of the <xref:System.Web.Caching.Cache> class per application domain.</span></span> <span data-ttu-id="cea3a-160">結果として、<xref:System.Web.Caching.Cache>によって返されるオブジェクト、<xref:System.Web.HttpContext.Cache%2A>プロパティは、<xref:System.Web.Caching.Cache>アプリケーション ドメイン内のすべての要求オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cea3a-160">As a result, the <xref:System.Web.Caching.Cache> object that is returned by the <xref:System.Web.HttpContext.Cache%2A> property is the <xref:System.Web.Caching.Cache> object for all requests in the application domain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearError();" />
      <MemberSignature Language="F#" Value="member this.ClearError : unit -&gt; unit" Usage="httpContext.ClearError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-161">現在の HTTP 要求に対するすべてのエラーをクリアします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-161">Clears all errors for the current HTTP request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpContext.Error" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.HttpContext Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.HttpContext Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::HttpContext ^ Current { System::Web::HttpContext ^ get(); void set(System::Web::HttpContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Web.HttpContext with get, set" Usage="System.Web.HttpContext.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-162">現在の HTTP 要求に対する <see cref="T:System.Web.HttpContext" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-162">Gets or sets the <see cref="T:System.Web.HttpContext" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-163">現在の HTTP リクエストに対する <see cref="T:System.Web.HttpContext" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-163">The <see cref="T:System.Web.HttpContext" /> instance for the current HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-164">このプロパティは、静的プロパティの<xref:System.Web.HttpContext>クラス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-164">This property is a static property of the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="cea3a-165">プロパティ ストア、<xref:System.Web.HttpContext>インスタンスを現在の要求に適用されます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-165">The property stores the <xref:System.Web.HttpContext> instance that applies to the current request.</span></span> <span data-ttu-id="cea3a-166">このインスタンスのプロパティは次の非静的プロパティ、<xref:System.Web.HttpContext>クラス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-166">The properties of this instance are the non-static properties of the <xref:System.Web.HttpContext> class.</span></span>  
  
 <span data-ttu-id="cea3a-167">使用することも、<xref:System.Web.UI.Page.Context%2A?displayProperty=nameWithType>プロパティにアクセスする、<xref:System.Web.HttpContext>の現在の HTTP 要求オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cea3a-167">You can also use the <xref:System.Web.UI.Page.Context%2A?displayProperty=nameWithType> property to access the <xref:System.Web.HttpContext> object for the current HTTP request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea3a-168">次のコード例では、<xref:System.Web.HttpContext.Current%2A>プロパティにアクセスする、<xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType>と<xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType>メソッドと<xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cea3a-168">The following code example uses the <xref:System.Web.HttpContext.Current%2A> property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cea3a-169">例を使用して 3 つのカスタム例外を作成する、<xref:System.Web.HttpContext.AddError%2A>メソッドを使用して、<xref:System.Web.HttpContext.AllErrors%2A>プロパティを配列にこれらの例外を読み込めません。</span><span class="sxs-lookup"><span data-stu-id="cea3a-169">The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array.</span></span> <span data-ttu-id="cea3a-170">次に、配列を含むページを書き込み、を使用して、<xref:System.Web.HttpContext.ClearError%2A>からすべてのエラーをクリアする方法、<xref:System.Web.UI.Page.Context%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cea3a-170">It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.</span></span>  
  
```csharp  
protected void Page_Load(object sender, EventArgs e)  
{  
    HttpContext context = HttpContext.Current;  
    Response.Write("<p>HttpContext.Current Example:</p>");  
  
    // Add three custom exceptions.  
    context.AddError(new Exception("New Exception #1"));  
    context.AddError(new Exception("New Exception #2"));  
    context.AddError(new Exception("New Exception #3"));  
  
    // Capture all the new Exceptions in an array.  
    Exception[] errs = context.AllErrors;  
  
    foreach (Exception ex in errs)  
    {  
        Response.Write("<p>" + Server.HtmlEncode(ex.ToString()) + "</p>");  
    }  
  
    // Clear the exceptions so ASP.NET won't handle them.  
    context.ClearError();  
}  
```  
  
```vb  
Protected Sub Page_Load(sender As Object, e As EventArgs)  
Dim context As HttpContext = HttpContext.Current  
Response.Write("<p>HttpContext.Current Example:</p>")  
  
' Add three custom exceptions.  
context.AddError(New Exception("New Exception #1"))  
context.AddError(New Exception("New Exception #2"))  
context.AddError(New Exception("New Exception #3"))  
  
' Capture all the new Exceptions in an array.  
Dim errs As Exception() = context.AllErrors  
  
For Each ex As Exception In errs  
Response.Write("<p>" & Server.HtmlEncode(ex.ToString()) & "</p>")  
Next  
  
' Clear the exceptions so ASP.NET won't handle them.  
context.ClearError()  
End Sub  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.Response" />
        <altmember cref="P:System.Web.HttpContext.Request" />
      </Docs>
    </Member>
    <Member MemberName="CurrentHandler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler CurrentHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler CurrentHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.CurrentHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::IHttpHandler ^ CurrentHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentHandler : System.Web.IHttpHandler" Usage="System.Web.HttpContext.CurrentHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-171">現在実行中のハンドラーを表す <see cref="T:System.Web.IHttpHandler" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-171">Gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the currently executing handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-172">現在実行中のハンドラーを表す <see cref="T:System.Web.IHttpHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-172">An <see cref="T:System.Web.IHttpHandler" /> that represents the currently executing handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-173">現在実行中のハンドラーによって参照される、<xref:System.Web.HttpContext.CurrentHandler%2A>プロパティによって参照されているハンドラーとは異なる場合があります、<xref:System.Web.HttpContext.Handler%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cea3a-173">The currently executing handler that is referenced by the <xref:System.Web.HttpContext.CurrentHandler%2A> property might be different than the handler that is referenced by the <xref:System.Web.HttpContext.Handler%2A> property.</span></span> <span data-ttu-id="cea3a-174">これを使用して別のハンドラーが要求されたときに発生することができます、<xref:System.Web.HttpServerUtility.Execute%2A>メソッドまたは<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="cea3a-174">This can occur when another handler was requested by using the <xref:System.Web.HttpServerUtility.Execute%2A> method or the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="cea3a-175">現在実行中のハンドラーには、処理が完了すると、事前に決定されたハンドラーが復元されます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-175">When the currently executing handler finishes processing, the previously determined handler is restored.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.Handler" />
        <altmember cref="P:System.Web.HttpContext.PreviousHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b">
          <span data-ttu-id="cea3a-176">HTTP ハンドラーと HTTP モジュールの概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-176">HTTP Handlers and HTTP Modules Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CurrentNotification">
      <MemberSignature Language="C#" Value="public System.Web.RequestNotification CurrentNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.RequestNotification CurrentNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.CurrentNotification" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentNotification As RequestNotification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::RequestNotification CurrentNotification { System::Web::RequestNotification get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentNotification : System.Web.RequestNotification" Usage="System.Web.HttpContext.CurrentNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.RequestNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-177">処理中の現在の <see cref="T:System.Web.HttpApplication" /> イベントを示す <see cref="T:System.Web.RequestNotification" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-177">Gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the current <see cref="T:System.Web.HttpApplication" /> event that is processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-178">
            <see cref="T:System.Web.RequestNotification" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-178">One of the <see cref="T:System.Web.RequestNotification" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-179"><xref:System.Web.HttpContext.CurrentNotification%2A>プロパティには、統合パイプライン モードが必要です。[!INCLUDE[iisver](~/includes/iisver-md.md)]と、少なくとも .NET Framework バージョン 3.0。</span><span class="sxs-lookup"><span data-stu-id="cea3a-179">The <xref:System.Web.HttpContext.CurrentNotification%2A> property requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span> <span data-ttu-id="cea3a-180">プロパティを返す、使用可能な場合、<xref:System.Web.RequestNotification>値。</span><span class="sxs-lookup"><span data-stu-id="cea3a-180">When available, the property returns a <xref:System.Web.RequestNotification> value.</span></span> <span data-ttu-id="cea3a-181">値、<xref:System.Web.HttpContext.CurrentNotification%2A>プロパティでイベントを示す、<xref:System.Web.HttpApplication>インスタンスが現在の要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-181">The value of the <xref:System.Web.HttpContext.CurrentNotification%2A> property indicates which event in the <xref:System.Web.HttpApplication> instance is currently processing the request.</span></span>  
  
 <span data-ttu-id="cea3a-182"><xref:System.Web.HttpContext.CurrentNotification%2A>プロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cea3a-182">The <xref:System.Web.HttpContext.CurrentNotification%2A> property is not intended to be set.</span></span> <span data-ttu-id="cea3a-183">代わりに、によって設定された[!INCLUDE[iisver](~/includes/iisver-md.md)]ASP.NET パイプラインで要求を処理中にします。</span><span class="sxs-lookup"><span data-stu-id="cea3a-183">Instead, it is set by [!INCLUDE[iisver](~/includes/iisver-md.md)] during the processing of the request in the ASP.NET pipeline.</span></span> <span data-ttu-id="cea3a-184">設定、<xref:System.Web.HttpContext.CurrentNotification%2A>プロパティは、コンパイル エラーになります。</span><span class="sxs-lookup"><span data-stu-id="cea3a-184">Setting the <xref:System.Web.HttpContext.CurrentNotification%2A> property will result in a compilation error.</span></span>  
  
 <span data-ttu-id="cea3a-185"><xref:System.Web.HttpContext.CurrentNotification%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="cea3a-185"><xref:System.Web.HttpContext.CurrentNotification%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="cea3a-186">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cea3a-186">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea3a-187">次の例では、使用する方法、<xref:System.Web.HttpContext.CurrentNotification%2A>のどのようなイベントを決定するプロパティ、<xref:System.Web.HttpApplication>現在の要求を処理しているオブジェクトが処理されています。</span><span class="sxs-lookup"><span data-stu-id="cea3a-187">The following example demonstrates how to use the <xref:System.Web.HttpContext.CurrentNotification%2A> property to determine what event of the <xref:System.Web.HttpApplication> object that is handling the current request is being processed.</span></span> <span data-ttu-id="cea3a-188">複数のイベントを処理するイベント ハンドラーの例で、<xref:System.Web.HttpApplication>オブジェクト、および<xref:System.Web.HttpContext.CurrentNotification%2A>プロパティは、どのようなコードが処理される各イベントに対して呼び出されるを決定します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-188">In the example, the event handler handles several events of the <xref:System.Web.HttpApplication> object, and the <xref:System.Web.HttpContext.CurrentNotification%2A> property determines what code is invoked for each event being handled.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cea3a-189">この操作を実行するには、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプライン モードおよび .NET Framework Version 3.0 以降が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-189">The operation requires integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.HttpContext.IsPostNotification" />
        <altmember cref="T:System.Web.RequestNotification" />
      </Docs>
    </Member>
    <Member MemberName="DisposeOnPipelineCompleted">
      <MemberSignature Language="C#" Value="public System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.ISubscriptionToken DisposeOnPipelineCompleted(class System.IDisposable target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeOnPipelineCompleted (target As IDisposable) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::ISubscriptionToken ^ DisposeOnPipelineCompleted(IDisposable ^ target);" />
      <MemberSignature Language="F#" Value="member this.DisposeOnPipelineCompleted : IDisposable -&gt; System.Web.ISubscriptionToken" Usage="httpContext.DisposeOnPipelineCompleted target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="cea3a-190">要求の <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 接続部分が完了したときに、<see cref="M:System.IDisposable.Dispose" /> メソッドを呼び出す必要のあるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-190">The object whose <see cref="M:System.IDisposable.Dispose" /> method must be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of the request is completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-191">この要求の <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 接続部分が完了したときに、オブジェクトの <see cref="M:System.IDisposable.Dispose" /> メソッドを呼び出すことができるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-191">Enables an object's <see cref="M:System.IDisposable.Dispose" /> method to be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of this request is completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-192">サブスクリプション トークン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-192">The subscription token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-193"><xref:System.IDisposable.Dispose%2A>要求の HTTP 部分後、ターゲット オブジェクトのメソッドが呼び出された、<xref:System.Web.WebSockets.AspNetWebSocket>の接続が終了しました。</span><span class="sxs-lookup"><span data-stu-id="cea3a-193">The <xref:System.IDisposable.Dispose%2A> method of the target object is called after both the HTTP part of the request and the <xref:System.Web.WebSockets.AspNetWebSocket> connection have ended.</span></span> <span data-ttu-id="cea3a-194"><xref:System.Web.HttpContext>オブジェクトは検査のために使用できません。</span><span class="sxs-lookup"><span data-stu-id="cea3a-194">The <xref:System.Web.HttpContext> object is not available for inspection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Error { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : Exception" Usage="System.Web.HttpContext.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-195">HTTP 要求の処理中にエラーが蓄積された場合は、その最初のエラーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-195">Gets the first error (if any) accumulated during HTTP request processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-196">現在の HTTP 要求または HTTP 応答の処理に対する最初の <see cref="T:System.Exception" />。HTTP 要求処理中にエラーが 1 つも蓄積されなかった場合は、<see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-196">The first <see cref="T:System.Exception" /> for the current HTTP request/response process; otherwise, <see langword="null" /> if no errors were accumulated during the HTTP request processing.</span>
          </span>
          <span data-ttu-id="cea3a-197">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-197">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpContext.ClearError" />
      </Docs>
    </Member>
    <Member MemberName="GetAppConfig">
      <MemberSignature Language="C#" Value="public static object GetAppConfig (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAppConfig(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetAppConfig(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAppConfig (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAppConfig(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetAppConfig : string -&gt; obj" Usage="System.Web.HttpContext.GetAppConfig name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection in System.Web.dll. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cea3a-198">情報が要求されたアプリケーションの構成タグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-198">The application configuration tag for which information is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-199">現在のアプリケーションに対して要求された構成情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-199">Returns requested configuration information for the current application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-200">構成情報を格納するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-200">An object containing configuration information.</span>
          </span>
          <span data-ttu-id="cea3a-201">(返された構成セクションは、適切な構成型にキャストしてから使用してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-201">(Cast the returned configuration section to the appropriate configuration type before use.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-202"><xref:System.Web.HttpContext.GetAppConfig%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="cea3a-202">The <xref:System.Web.HttpContext.GetAppConfig%2A> method has been deprecated.</span></span> <span data-ttu-id="cea3a-203">使用して、<xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>のメソッド、<xref:System.Web.Configuration.WebConfigurationManager>クラスは、現在のアプリケーションの構成情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-203">Use the <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A> method of the <xref:System.Web.Configuration.WebConfigurationManager> class to get configuration information for the current application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
      </Docs>
    </Member>
    <Member MemberName="GetConfig">
      <MemberSignature Language="C#" Value="public object GetConfig (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetConfig(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetConfig(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfig (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetConfig(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetConfig : string -&gt; obj" Usage="httpContext.GetConfig name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is System.Web.HttpContext.GetSection in System.Web.dll. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="cea3a-204">情報が要求された構成タグ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-204">The configuration tag for which information is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-205">現在の HTTP 要求に対して要求された構成情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-205">Returns requested configuration information for the current HTTP request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-206">指定した <see cref="T:System.Configuration.ConfigurationSection" />。このセクションが存在しない場合は <see langword="null" />。このセクションに実行時にアクセスできない場合は内部オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-206">The specified <see cref="T:System.Configuration.ConfigurationSection" />, <see langword="null" /> if the section does not exist, or an internal object if the section is not accessible at run time.</span>
          </span>
          <span data-ttu-id="cea3a-207">(返されたオブジェクトは、適切な構成型にキャストしてから使用してください。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-207">(Cast the returned object to the appropriate configuration type before use.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-208"><xref:System.Web.HttpContext.GetConfig%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="cea3a-208">The <xref:System.Web.HttpContext.GetConfig%2A> method has been deprecated.</span></span> <span data-ttu-id="cea3a-209">使用して、<xref:System.Web.HttpContext.GetSection%2A>現在の HTTP 要求の構成情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-209">Use the <xref:System.Web.HttpContext.GetSection%2A> method to get configuration information for the current HTTP request.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.GetSection(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGlobalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-210">アプリケーション レベル リソースを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-210">Gets an application-level resource.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">
          <span data-ttu-id="cea3a-211">アプリケーションのリソース</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-211">Resources in Applications</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/345e86a7-3851-4cdc-8309-a77bdb0d0a97">
          <span data-ttu-id="cea3a-212">ASP.NET Web サイトのレイアウト</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-212">ASP.NET Web Site Layout</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public static object GetGlobalResourceObject (string classKey, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetGlobalResourceObject(string classKey, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGlobalResourceObject (classKey As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey);" />
      <MemberSignature Language="F#" Value="static member GetGlobalResourceObject : string * string -&gt; obj" Usage="System.Web.HttpContext.GetGlobalResourceObject (classKey, resourceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classKey">
          <span data-ttu-id="cea3a-213">要求されたリソース オブジェクトの <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> プロパティを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-213">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="cea3a-214">要求されたリソース オブジェクトの <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> プロパティを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-214">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-215">アプリケーション レベル リソース オブジェクトを、指定した <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> プロパティおよび <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> プロパティに基づいて取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-215">Gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-216">要求されたアプリケーション レベル リソース オブジェクトを表す <see cref="T:System.Object" />。リソース オブジェクトが見つからない場合、またはリソース オブジェクトが見つかってもそれが要求されたプロパティを持っていない場合は null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-216">An <see cref="T:System.Object" /> that represents the requested application-level resource object; otherwise, null if a resource object is not found or if a resource object is found but it does not have the requested property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-217"><xref:System.Web.HttpContext.GetGlobalResourceObject%2A>メソッドで指定されているカルチャを使用してグローバル リソースを返します、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cea3a-217">The <xref:System.Web.HttpContext.GetGlobalResourceObject%2A> method returns a global resource by using the culture that is specified in the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cea3a-218">編集環境などのいくつか[!INCLUDE[vwprvw](~/includes/vwprvw-md.md)]、デザイン時エディターをスローする可能性<xref:System.Resources.MissingManifestResourceException>グローバルのリソース キー名にピリオド (.) を使用する場合は例外です。</span><span class="sxs-lookup"><span data-stu-id="cea3a-218">In some editing environments, such as [!INCLUDE[vwprvw](~/includes/vwprvw-md.md)], the editor might throw a design-time <xref:System.Resources.MissingManifestResourceException> exception if you use a period (.) in the global resource-key name.</span></span> <span data-ttu-id="cea3a-219">ただし、これには影響しません編集したり、ファイルを保存できると、エラーを無視することができます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-219">However, this does not affect your ability to edit or save the file, and you can ignore the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="cea3a-220">指定した <paramref name="classKey" /> パラメーターのリソース オブジェクトが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-220">A resource object with the specified <paramref name="classKey" /> parameter was not found.</span>
          </span>
          <span data-ttu-id="cea3a-221">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-221">\- or -</span>
          </span>
          <span data-ttu-id="cea3a-222">メイン アセンブリにニュートラル カルチャのリソースが含まれていません。適切なサテライト アセンブリが見つからないためこれらのリソースが必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-222">The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">
          <span data-ttu-id="cea3a-223">アプリケーションのリソース</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-223">Resources in Applications</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/345e86a7-3851-4cdc-8309-a77bdb0d0a97">
          <span data-ttu-id="cea3a-224">ASP.NET Web サイトのレイアウト</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-224">ASP.NET Web Site Layout</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">
          <span data-ttu-id="cea3a-225">リソースのパッケージ化と配置</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-225">Packaging and Deploying Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public static object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetGlobalResourceObject(string classKey, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetGlobalResourceObject (classKey As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member GetGlobalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj" Usage="System.Web.HttpContext.GetGlobalResourceObject (classKey, resourceKey, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="classKey">
          <span data-ttu-id="cea3a-226">要求されたリソース オブジェクトの <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> プロパティを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-226">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="cea3a-227">要求されたリソース オブジェクトの <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> プロパティを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-227">A string that represents a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="cea3a-228">要求されたリソースの <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-228">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-229">アプリケーション レベル リソース オブジェクトを、指定した <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> プロパティおよび <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> プロパティ、および <see cref="T:System.Globalization.CultureInfo" /> オブジェクトに基づいて取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-229">Gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-230">要求されたアプリケーション レベル リソース オブジェクトを表す <see cref="T:System.Object" />。これは、特定のカルチャにローカライズされます。リソース オブジェクトが見つからない場合、またはリソース オブジェクトが見つかってもそれが要求されたプロパティを持っていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-230">An <see cref="T:System.Object" /> that represents the requested application-level resource object, which is localized for the specified culture; otherwise, <see langword="null" /> if a resource object is not found or if a resource object is found but it does not have the requested property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-231"><xref:System.Globalization.CultureInfo>オブジェクトは、リソースのローカライズ対象のカルチャを表します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-231">The <xref:System.Globalization.CultureInfo> object represents the culture for which the resource was localized.</span></span> <span data-ttu-id="cea3a-232">リソースがこのカルチャのローカライズされていない場合、検索には、適切なリソースを検索するフォールバック プロセスに従います。</span><span class="sxs-lookup"><span data-stu-id="cea3a-232">If the resource is not localized for this culture, the lookup will follow a fallback process to locate an appropriate resource.</span></span> <span data-ttu-id="cea3a-233">詳細については、「[リソースのパッケージ化と配置](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cea3a-233">For more information, see [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cea3a-234">Visual Web Developer など、一部の編集環境で、エディターのデザイン時がスロー<xref:System.Resources.MissingManifestResourceException>グローバルのリソース キー名にピリオド (.) を使用する場合は例外です。</span><span class="sxs-lookup"><span data-stu-id="cea3a-234">In some editing environments, such as Visual Web Developer, the editor might throw a design-time <xref:System.Resources.MissingManifestResourceException> exception if you use a period (.) in the global resource-key name.</span></span> <span data-ttu-id="cea3a-235">ただし、これには影響しません編集したり、ファイルを保存できると、エラーを無視することができます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-235">However, this does not affect your ability to edit or save the file, and you can ignore the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="cea3a-236">指定した <paramref name="classKey" /> パラメーターが見つからなかったリソース オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-236">A resource object for which the specified <paramref name="classKey" /> parameter was not found.</span>
          </span>
          <span data-ttu-id="cea3a-237">\- または</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-237">\- or -</span>
          </span>
          <span data-ttu-id="cea3a-238">メイン アセンブリにニュートラル カルチャのリソースが含まれていません。適切なサテライト アセンブリが見つからないためこれらのリソースが必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-238">The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">
          <span data-ttu-id="cea3a-239">アプリケーションのリソース</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-239">Resources in Applications</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">
          <span data-ttu-id="cea3a-240">リソースのパッケージ化と配置</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-240">Packaging and Deploying Resources</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-241">ページ レベル リソースを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-241">Gets a page-level resource.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">
          <span data-ttu-id="cea3a-242">アプリケーションのリソース</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-242">Resources in Applications</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/345e86a7-3851-4cdc-8309-a77bdb0d0a97">
          <span data-ttu-id="cea3a-243">ASP.NET Web サイトのレイアウト</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-243">ASP.NET Web Site Layout</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">
          <span data-ttu-id="cea3a-244">リソースのパッケージ化と配置</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-244">Packaging and Deploying Resources</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public static object GetLocalResourceObject (string virtualPath, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetLocalResourceObject(string virtualPath, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalResourceObject (virtualPath As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey);" />
      <MemberSignature Language="F#" Value="static member GetLocalResourceObject : string * string -&gt; obj" Usage="System.Web.HttpContext.GetLocalResourceObject (virtualPath, resourceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="cea3a-245">ローカル リソース オブジェクトのための <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-245">The <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property for the local resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="cea3a-246">要求されたリソース オブジェクトの <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> プロパティを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-246">A string that represents a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-247">ページ レベル リソース オブジェクトを、指定した <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> プロパティおよび <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> プロパティに基づいて取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-247">Gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-248">要求されたページ レベル リソース オブジェクトを表す <see cref="T:System.Object" />。一致するリソース オブジェクトが見つかっても <paramref name="resourceKey" /> パラメーターではない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-248">An <see cref="T:System.Object" /> that represents the requested page-level resource object; otherwise, <see langword="null" /> if a matching resource object is found but not a <paramref name="resourceKey" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-249"><xref:System.Web.HttpContext.GetLocalResourceObject%2A>メソッドで指定されているカルチャを使用してローカル リソースを返します、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cea3a-249">The <xref:System.Web.HttpContext.GetLocalResourceObject%2A> method returns a local resource by using the culture that is specified in the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="cea3a-250">指定した <paramref name="virtualPath" /> パラメーターのリソース オブジェクトが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-250">A resource object was not found for the specified <paramref name="virtualPath" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cea3a-251">指定した <paramref name="virtualPath" /> パラメーターが、現在のアプリケーションのルート ディレクトリ内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-251">The specified <paramref name="virtualPath" /> parameter is not in the current application's root directory.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cea3a-252">目的のページのリソース クラスが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-252">The resource class for the page was not found.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">
          <span data-ttu-id="cea3a-253">アプリケーションのリソース</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-253">Resources in Applications</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/345e86a7-3851-4cdc-8309-a77bdb0d0a97">
          <span data-ttu-id="cea3a-254">ASP.NET Web サイトのレイアウト</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-254">ASP.NET Web Site Layout</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">
          <span data-ttu-id="cea3a-255">リソースのパッケージ化と配置</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-255">Packaging and Deploying Resources</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/7a06d512-6fc3-40ca-9cb6-7f41d1a9fa28">
          <span data-ttu-id="cea3a-256">方法: プログラムによってリソースの値を取得</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-256">How to: Retrieve Resource Values Programmatically</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public static object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetLocalResourceObject(string virtualPath, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalResourceObject (virtualPath As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member GetLocalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj" Usage="System.Web.HttpContext.GetLocalResourceObject (virtualPath, resourceKey, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="cea3a-257">ローカル リソース オブジェクトのための <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> プロパティ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-257">The <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property for the local resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="cea3a-258">要求されたリソース オブジェクトの <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> プロパティを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-258">A string that represents a <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="cea3a-259">要求されたリソース オブジェクトの <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-259">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-260">ページ レベル リソース オブジェクトを、指定した <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> プロパティおよび <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> プロパティ、および <see cref="T:System.Globalization.CultureInfo" /> オブジェクトに基づいて取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-260">Gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-261">要求されたローカル リソース オブジェクトを表す <see cref="T:System.Object" />。これは、特定のカルチャにローカライズされます。一致するリソース オブジェクトが見つかっても <paramref name="resourceKey" /> パラメーターではない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-261">An <see cref="T:System.Object" /> that represents the requested local resource object, which is localized for the specified culture; otherwise <see langword="null" /> if a matching resource object is found but not a <paramref name="resourceKey" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-262">リソースがこのカルチャのローカライズされていない場合、検索には、適切なリソースを検索するフォールバック プロセスに従います。</span><span class="sxs-lookup"><span data-stu-id="cea3a-262">If the resource is not localized for this culture, the lookup will follow a fallback process to locate an appropriate resource.</span></span> <span data-ttu-id="cea3a-263">詳細については、「[リソースのパッケージ化と配置](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cea3a-263">For more information, see [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Resources.MissingManifestResourceException">
          <span data-ttu-id="cea3a-264">指定した <paramref name="virtualPath" /> パラメーターのリソース オブジェクトが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-264">A resource object was not found for the specified <paramref name="virtualPath" /> Parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cea3a-265">指定した <paramref name="virtualPath" /> パラメーターが、現在のアプリケーションのルート ディレクトリ内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-265">The specified <paramref name="virtualPath" /> parameter is not in the current application's root directory.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cea3a-266">目的のページのリソース クラスが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-266">The resource class for the page was not found.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ad495d4-2941-40cf-bf64-e82e85825890">
          <span data-ttu-id="cea3a-267">アプリケーションのリソース</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-267">Resources in Applications</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/345e86a7-3851-4cdc-8309-a77bdb0d0a97">
          <span data-ttu-id="cea3a-268">ASP.NET Web サイトのレイアウト</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-268">ASP.NET Web Site Layout</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md">
          <span data-ttu-id="cea3a-269">リソースのパッケージ化と配置</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-269">Packaging and Deploying Resources</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/7a06d512-6fc3-40ca-9cb6-7f41d1a9fa28">
          <span data-ttu-id="cea3a-270">方法: プログラムによってリソースの値を取得</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-270">How to: Retrieve Resource Values Programmatically</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="member this.GetSection : string -&gt; obj" Usage="httpContext.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="cea3a-271">構成セクション パス (XPath 形式) および構成要素名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-271">The configuration section path (in XPath format) and the configuration element name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-272">現在のアプリケーションの既定構成の、指定した構成セクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-272">Gets a specified configuration section for the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-273">指定した <see cref="T:System.Configuration.ConfigurationSection" />。このセクションが存在しない場合は <see langword="null" />。このセクションに実行時にアクセスできない場合は内部オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-273">The specified <see cref="T:System.Configuration.ConfigurationSection" />, <see langword="null" /> if the section does not exist, or an internal object if the section is not accessible at run time.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler Handler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::IHttpHandler ^ Handler { System::Web::IHttpHandler ^ get(); void set(System::Web::IHttpHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Handler : System.Web.IHttpHandler with get, set" Usage="System.Web.HttpContext.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-274">HTTP 要求の処理を実行する <see cref="T:System.Web.IHttpHandler" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-274">Gets or sets the <see cref="T:System.Web.IHttpHandler" /> object responsible for processing the HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-275">HTTP 要求の処理を実行する <see cref="T:System.Web.IHttpHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-275">An <see cref="T:System.Web.IHttpHandler" /> responsible for processing the HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-276"><xref:System.Web.HttpContext.Handler%2A>プロパティには、HTTP 要求を処理するハンドラーへの参照が含まれています。</span><span class="sxs-lookup"><span data-stu-id="cea3a-276">The <xref:System.Web.HttpContext.Handler%2A> property contains a reference to the handler that processes the HTTP request.</span></span> <span data-ttu-id="cea3a-277">ハンドラーは、要素を使用して、またはユーザー コードで定義されているカスタム ハンドラーを使用して指定できます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-277">The handler can be specified by using the  element, or by using a custom handler defined in user code.</span></span> <span data-ttu-id="cea3a-278">ハンドラーの詳細については、次を参照してください。 [HTTP ハンドラーと HTTP モジュールの概要](https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b)します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-278">For more information about handlers, see [HTTP Handlers and HTTP Modules Overview](https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span></span>  
  
 <span data-ttu-id="cea3a-279">参照、<xref:System.Web.HttpContext.Handler%2A>プロパティは同じままでは、サーバー側のメソッドでは、現在のページがなどに変更後も、<xref:System.Web.HttpServerUtility.Execute%2A>メソッドまたは<xref:System.Web.HttpServerUtility.Transfer%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="cea3a-279">The reference to the <xref:System.Web.HttpContext.Handler%2A> property will remain the same even after the current page has been changed by a server-side method, such as the <xref:System.Web.HttpServerUtility.Execute%2A> method or the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.CurrentHandler" />
        <altmember cref="P:System.Web.HttpContext.PreviousHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b">
          <span data-ttu-id="cea3a-280">HTTP ハンドラーと HTTP モジュールの概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-280">HTTP Handlers and HTTP Modules Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsCustomErrorEnabled">
      <MemberSignature Language="C#" Value="public bool IsCustomErrorEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomErrorEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsCustomErrorEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomErrorEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomErrorEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomErrorEnabled : bool" Usage="System.Web.HttpContext.IsCustomErrorEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-281">現在の HTTP 要求に対してカスタム エラーが有効かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-281">Gets a value indicating whether custom errors are enabled for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-282">カスタム エラーが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-282">
              <see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebuggingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDebuggingEnabled : bool" Usage="System.Web.HttpContext.IsDebuggingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-283">現在の HTTP 要求がデバッグ モードかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-283">Gets a value indicating whether the current HTTP request is in debug mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-284">要求がデバッグ モードである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-284">
              <see langword="true" /> if the request is in debug mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPostNotification">
      <MemberSignature Language="C#" Value="public bool IsPostNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsPostNotification" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostNotification { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPostNotification : bool" Usage="System.Web.HttpContext.IsPostNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-285">
            <see cref="T:System.Web.HttpApplication" /> イベントが処理を終了した直後の ASP.NET パイプライン内の現在の処理ポイントである値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-285">Gets a value that is the current processing point in the ASP.NET pipeline just after an <see cref="T:System.Web.HttpApplication" /> event has finished processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-286">カスタム エラーが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-286">
              <see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-287"><xref:System.Web.HttpContext.IsPostNotification%2A>プロパティは、統合モードでのみサポート[!INCLUDE[iisver](~/includes/iisver-md.md)]と、少なくとも .NET Framework 3.0。</span><span class="sxs-lookup"><span data-stu-id="cea3a-287">The <xref:System.Web.HttpContext.IsPostNotification%2A> property is only supported with the integrated mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework 3.0.</span></span> <span data-ttu-id="cea3a-288">示すブール値を返します、使用可能な場合、イベントであるかどうか、<xref:System.Web.HttpApplication>オブジェクトの処理が完了します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-288">When available, the property returns a Boolean value that indicates whether an event in the <xref:System.Web.HttpApplication> object has finished processing.</span></span>  
  
 <span data-ttu-id="cea3a-289"><xref:System.Web.HttpContext.IsPostNotification%2A>プロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cea3a-289">The <xref:System.Web.HttpContext.IsPostNotification%2A> property is not intended to be set.</span></span> <span data-ttu-id="cea3a-290">によって提供される代わりに、[!INCLUDE[iisver](~/includes/iisver-md.md)]通知ごとに、ASP.NET ランタイムにします。</span><span class="sxs-lookup"><span data-stu-id="cea3a-290">Instead, it is provided by [!INCLUDE[iisver](~/includes/iisver-md.md)] to the ASP.NET runtime for each notification.</span></span> <span data-ttu-id="cea3a-291">設定、<xref:System.Web.HttpContext.IsPostNotification%2A>プロパティは、コンパイル エラーになります。</span><span class="sxs-lookup"><span data-stu-id="cea3a-291">Setting the <xref:System.Web.HttpContext.IsPostNotification%2A> property will result in a compilation error.</span></span>  
  
 <span data-ttu-id="cea3a-292">シナリオの複数のイベント、<xref:System.Web.HttpApplication>オブジェクトが 1 つのイベント ハンドラーによって処理される、使用することができます、<xref:System.Web.HttpContext.IsPostNotification%2A>プロパティと組み合わせて、<xref:System.Web.RequestNotification>現在のアプリケーション ライフ サイクルのどこを正確に決める列挙型要求は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-292">In scenarios where multiple events of the <xref:System.Web.HttpApplication> object are handled by one event handler, you can use the <xref:System.Web.HttpContext.IsPostNotification%2A> property in combination with the <xref:System.Web.RequestNotification> enumeration to precisely determine where in the application lifecycle the current request is.</span></span>  
  
 <span data-ttu-id="cea3a-293"><xref:System.Web.HttpContext.IsPostNotification%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="cea3a-293"><xref:System.Web.HttpContext.IsPostNotification%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="cea3a-294">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cea3a-294">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea3a-295">次の例を使用する方法を示します、<xref:System.Web.HttpContext.IsPostNotification%2A>ときのイベントを決定するプロパティ、<xref:System.Web.HttpApplication>オブジェクトには、すべての関連するイベント ハンドラーの処理が完了しました。</span><span class="sxs-lookup"><span data-stu-id="cea3a-295">The following example demonstrates how to use the <xref:System.Web.HttpContext.IsPostNotification%2A> property to determine when an event of the <xref:System.Web.HttpApplication> object has finished processing all the associated event handlers.</span></span> <span data-ttu-id="cea3a-296">この例では、カスタム イベント ハンドラーの複数のイベントを処理する、<xref:System.Web.HttpApplication>オブジェクト、および<xref:System.Web.HttpContext.IsPostNotification%2A>プロパティを使用して、どのようなコードが呼び出されるかを判断、特定のイベントが処理された後です。</span><span class="sxs-lookup"><span data-stu-id="cea3a-296">The custom event handler in this example handles several events of the <xref:System.Web.HttpApplication> object, and the <xref:System.Web.HttpContext.IsPostNotification%2A> property is used to determine what code is invoked after a specific event is handled.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="cea3a-297">この操作を実行するには、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプライン モードおよび .NET Framework 3.0 以降が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-297">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework 3.0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.HttpContext.CurrentNotification" />
        <altmember cref="T:System.Web.RequestNotification" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Web.HttpContext.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-298">要求が <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-298">Gets a value that indicates whether the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-299">要求が <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求である場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-299">
              <see langword="true" /> if the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-300">このメソッドが戻る`true`初期が要求に含まれている場合<xref:System.Web.WebSockets.AspNetWebSocket>ハンドシェイクと`WebSocket`IIS のモジュールがアクティブです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-300">This method returns `true` if the request contains the initial <xref:System.Web.WebSockets.AspNetWebSocket> handshake and the `WebSocket` module of IIS is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequestUpgrading">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequestUpgrading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequestUpgrading" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.IsWebSocketRequestUpgrading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequestUpgrading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequestUpgrading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequestUpgrading : bool" Usage="System.Web.HttpContext.IsWebSocketRequestUpgrading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-301">接続が HTTP 接続から <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 接続にアップグレードされるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-301">Gets a value that indicates whether the connection is upgrading from an HTTP connection to an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-302">接続がアップグレード中の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-302">
              <see langword="true" /> if the connection is upgrading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IDictionary" Usage="System.Web.HttpContext.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-303">HTTP 要求時に <see cref="T:System.Web.IHttpModule" /> インターフェイスと <see cref="T:System.Web.IHttpHandler" /> インターフェイスとの間でデータを編成および共有するために使用できるキー/値のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-303">Gets a key/value collection that can be used to organize and share data between an <see cref="T:System.Web.IHttpModule" /> interface and an <see cref="T:System.Web.IHttpHandler" /> interface during an HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-304">キーの指定によるコレクションの個々の値へのアクセスを実現する <see cref="T:System.Collections.IDictionary" /> キー/値のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-304">An <see cref="T:System.Collections.IDictionary" /> key/value collection that provides access to an individual value in the collection by a specified key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/ms972109.aspx">
          <span data-ttu-id="cea3a-305">コンテキストの問題</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-305">A Matter of Context</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="PageInstrumentation">
      <MemberSignature Language="C#" Value="public System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Instrumentation.PageInstrumentationService PageInstrumentation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.PageInstrumentation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageInstrumentation As PageInstrumentationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Instrumentation::PageInstrumentationService ^ PageInstrumentation { System::Web::Instrumentation::PageInstrumentationService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PageInstrumentation : System.Web.Instrumentation.PageInstrumentationService" Usage="System.Web.HttpContext.PageInstrumentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Instrumentation.PageInstrumentationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-306">この要求のページ インストルメンテーション サービス インスタンスへの参照を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-306">Gets a reference to the page-instrumentation service instance for this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-307">この要求のページ インストルメンテーション サービス インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-307">The page-instrumentation service instance for this request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousHandler">
      <MemberSignature Language="C#" Value="public System.Web.IHttpHandler PreviousHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler PreviousHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.PreviousHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::IHttpHandler ^ PreviousHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousHandler : System.Web.IHttpHandler" Usage="System.Web.HttpContext.PreviousHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-308">親ハンドラーの <see cref="T:System.Web.IHttpHandler" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-308">Gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-309">
            <see cref="T:System.Web.IHttpHandler" /> インスタンス。以前のハンドラーが見つからなかった場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-309">An <see cref="T:System.Web.IHttpHandler" /> instance, or <see langword="null" /> if no previous handler was found.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-310"><xref:System.Web.HttpContext.PreviousHandler%2A>プロパティは、対応最後のハンドラーが、現在の要求の実行前にします。</span><span class="sxs-lookup"><span data-stu-id="cea3a-310">The <xref:System.Web.HttpContext.PreviousHandler%2A> property corresponds to the last handler before the current request was executed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.Handler" />
        <altmember cref="P:System.Web.HttpContext.CurrentHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b">
          <span data-ttu-id="cea3a-311">HTTP ハンドラーと HTTP モジュールの概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-311">HTTP Handlers and HTTP Modules Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Profile">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileBase Profile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Profile.ProfileBase Profile" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Profile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Profile As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Profile::ProfileBase ^ Profile { System::Web::Profile::ProfileBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Profile : System.Web.Profile.ProfileBase" Usage="System.Web.HttpContext.Profile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-312">現在のユーザー プロファイルの <see cref="T:System.Web.Profile.ProfileBase" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-312">Gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-313">アプリケーションの構成ファイルにプロファイルのプロパティが定義されている場合は <see cref="T:System.Web.Profile.ProfileBase" />。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-313">A <see cref="T:System.Web.Profile.ProfileBase" /> if the application configuration file contains a definition for the profile's properties; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-314">A<xref:System.Web.HttpContext.Profile%2A>プロパティがタイプ セーフな API を使用して構造化データの永続的ストレージに使用します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-314">A <xref:System.Web.HttpContext.Profile%2A> property is used for persistent storage of structured data using a type-safe API.</span></span> <span data-ttu-id="cea3a-315">ときに、<xref:System.Web.HttpContext.Profile%2A>プロパティにアクセスしますが、値が存在しない、空のインスタンスが返されます。`null`は返されません。</span><span class="sxs-lookup"><span data-stu-id="cea3a-315">When a <xref:System.Web.HttpContext.Profile%2A> property is accessed but no value is present, an empty instance is returned; `null` is not returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Web.Profile" />
      </Docs>
    </Member>
    <Member MemberName="RemapHandler">
      <MemberSignature Language="C#" Value="public void RemapHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemapHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemapHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemapHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberSignature Language="F#" Value="member this.RemapHandler : System.Web.IHttpHandler -&gt; unit" Usage="httpContext.RemapHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="cea3a-316">要求を処理するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-316">The object that should process the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-317">要求のハンドラーを指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-317">Enables you to specify a handler for the request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-318">設定した場合`handler`に`null`既定のハンドラーは要求を処理するために使用します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-318">If you set `handler` to `null`, the default handler is used to process the request.</span></span> <span data-ttu-id="cea3a-319">設定できる`handler`非同期ハンドラーまたは同期のハンドラー。</span><span class="sxs-lookup"><span data-stu-id="cea3a-319">You can set `handler` to either an asynchronous handler or to an synchronous handler.</span></span> <span data-ttu-id="cea3a-320">ハンドラーを実装する必要があります、<xref:System.Web.IHttpHandler>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-320">The handler must implement the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cea3a-321">
            <see cref="M:System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)" /> メソッドが、<see cref="E:System.Web.HttpApplication.MapRequestHandler" /> イベントの発生後に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-321">The <see cref="M:System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)" /> method was called after the <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Web.HttpRequest" Usage="System.Web.HttpContext.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-322">現在の HTTP 要求に対する <see cref="T:System.Web.HttpRequest" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-322">Gets the <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-323">現在の HTTP 要求に対する <see cref="T:System.Web.HttpRequest" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-323">The <see cref="T:System.Web.HttpRequest" /> for the current HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-324"><xref:System.Web.HttpContext.Request%2A>プロパティのメソッドとプロパティにプログラムでアクセスを提供する、<xref:System.Web.HttpRequest>クラス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-324">The <xref:System.Web.HttpContext.Request%2A> property provides programmatic access to the properties and methods of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="cea3a-325">ASP.NET ページには、既定値への参照が含まれているため、<xref:System.Web>名前空間 (が含まれています、<xref:System.Web.HttpContext>クラス) のメンバーを参照する<xref:System.Web.HttpRequest>.aspx ページへの参照を完全修飾クラスを使用せずに<xref:System.Web.HttpContext>します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-325">Because ASP.NET pages contain a default reference to the <xref:System.Web> namespace (which contains the <xref:System.Web.HttpContext> class), you can reference the members of <xref:System.Web.HttpRequest> on an .aspx page without using the fully qualified class reference to <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="cea3a-326">たとえば、使用することができます`Request.Browser`クライアントのブラウザーの機能を取得します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-326">For example, you can use `Request.Browser` to get the capabilities of the client browser.</span></span> <span data-ttu-id="cea3a-327">ただしのメンバーを使用する場合<xref:System.Web.HttpRequest>ASP.NET 分離コード モジュールからへの参照を含める必要があります、<xref:System.Web>モジュールで現在アクティブな要求/応答コンテキストへの参照を完全修飾名前空間およびクラスの<xref:System.Web>を使用します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-327">However, if you want to use the members of <xref:System.Web.HttpRequest> from an ASP.NET code-behind module, you must include a reference to the <xref:System.Web> namespace in the module and a fully qualified reference to both the currently active request/response context and the class in <xref:System.Web> that you want to use.</span></span> <span data-ttu-id="cea3a-328">たとえば、分離コード ページにする必要があります名を指定する、完全修飾`HttpContext.Current.Request.Browser`します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-328">For example, in a code-behind page you must specify the fully qualified name `HttpContext.Current.Request.Browser`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cea3a-329">このプロパティを使用しようとする場合に ASP.NET が例外をスロー時に、<xref:System.Web.HttpRequest>オブジェクトは使用できません。</span><span class="sxs-lookup"><span data-stu-id="cea3a-329">ASP.NET will throw an exception if you try to use this property when the <xref:System.Web.HttpRequest> object is not available.</span></span> <span data-ttu-id="cea3a-330">たとえば、global.asax の Application_Start メソッドまたは Application_Start メソッドから呼び出されるメソッドは true。 これになります。</span><span class="sxs-lookup"><span data-stu-id="cea3a-330">For example, this would be true in the Application_Start method of the Global.asax file, or in a method that is called from the Application_Start method.</span></span> <span data-ttu-id="cea3a-331">その時点で HTTP 要求がまだ作成されていません。</span><span class="sxs-lookup"><span data-stu-id="cea3a-331">At that time no HTTP request has been created yet.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="cea3a-332">Web アプリケーションは IIS 7 の統合モードで実行されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-332">The Web application is running under IIS 7 in Integrated mode.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Web.HttpResponse" Usage="System.Web.HttpContext.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-333">現在の HTTP 応答に対する <see cref="T:System.Web.HttpResponse" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-333">Gets the <see cref="T:System.Web.HttpResponse" /> object for the current HTTP response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-334">現在の HTTP 応答の <see cref="T:System.Web.HttpResponse" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-334">The <see cref="T:System.Web.HttpResponse" /> for the current HTTP response.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-335"><xref:System.Web.HttpContext.Response%2A>プロパティのメソッドとプロパティにプログラムでアクセスを提供する、<xref:System.Web.HttpResponse>クラス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-335">The <xref:System.Web.HttpContext.Response%2A> property provides programmatic access to the properties and methods of the <xref:System.Web.HttpResponse> class.</span></span> <span data-ttu-id="cea3a-336">ASP.NET ページには、既定値への参照が含まれているため、<xref:System.Web>名前空間 (が含まれています、<xref:System.Web.HttpContext>クラス) のメンバーを参照する<xref:System.Web.HttpContext>.aspx ページへの参照を完全修飾クラスを使用せずに<xref:System.Web.HttpContext>します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-336">Because ASP.NET pages contain a default reference to the <xref:System.Web> namespace (which contains the <xref:System.Web.HttpContext> class), you can reference the members of <xref:System.Web.HttpContext> on an .aspx page without using the fully qualified class reference to <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="cea3a-337">たとえば、使用することができます`Response.Write("some output")`HTTP 出力ストリームに出力を書き込む。</span><span class="sxs-lookup"><span data-stu-id="cea3a-337">For example, you can use `Response.Write("some output")` to write output to an HTTP output stream.</span></span> <span data-ttu-id="cea3a-338">ただしのメンバーを使用する場合<xref:System.Web.HttpResponse>ASP.NET 分離コード モジュールからへの参照を含める必要があります、<xref:System.Web>モジュールと、現在アクティブな要求/応答コンテキストと内のクラスへの参照を完全修飾名前空間<xref:System.Web>を使用します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-338">However, if you want to use the members of <xref:System.Web.HttpResponse> from an ASP.NET code-behind module, you must include a reference to the <xref:System.Web> namespace in the module and a fully qualified reference to the currently active request/response context and the class in <xref:System.Web> that you want to use.</span></span> <span data-ttu-id="cea3a-339">たとえば、分離コード ページにする必要があります名を指定する、完全修飾`HttpContext.Current.Response.Write("some output")`します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-339">For example, in a code-behind page you must specify the fully qualified name `HttpContext.Current.Response.Write("some output")`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="cea3a-340">Web アプリケーションは IIS 7 の統合モードで実行されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-340">The Web application is running under IIS 7 in Integrated mode.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RewritePath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-341">リソースの要求を、要求された URL で示されているものとは別のパスにリダイレクトします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-341">Redirects a request for a resource to a different path than the one that is indicated by the requested URL.</span>
          </span>
          <span data-ttu-id="cea3a-342">
            <see cref="Overload:System.Web.HttpContext.RewritePath" /> は、Cookie を使用しないセッション状態において、URL からセッション ID を取り除くために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-342">
              <see cref="Overload:System.Web.HttpContext.RewritePath" /> is used in cookieless session state to strip session IDs from URLs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public void RewritePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RewritePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RewritePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RewritePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RewritePath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.RewritePath : string -&gt; unit" Usage="httpContext.RewritePath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="cea3a-343">内部リライト パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-343">The internal rewrite path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-344">指定されたパスを使用して URL をリライトします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-344">Rewrites the URL using the given path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-345"><xref:System.Web.HttpContext.RewritePath%28System.String%29>メソッドは、要求された URL で示される 1 つは異なるパスにリソースへの要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="cea3a-345">The <xref:System.Web.HttpContext.RewritePath%28System.String%29> method redirects a request for a resource to a different path than the one that is indicated by the requested URL.</span></span> <span data-ttu-id="cea3a-346">受け取るこのメソッドのオーバー ロードを使用して、サーバー リソースのクライアントからの要求が正しく解決されるように、仮想パスをリセットした場合、`rebaseClientPath`パラメーター、パラメーターを設定および`false`します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-346">If you have to reset the virtual path so that requests from the client for server resources resolve correctly, use the overload of this method that takes the `rebaseClientPath` parameter and set the parameter to `false`.</span></span>  
  
 <span data-ttu-id="cea3a-347">URL リライトは、Web アプリケーションでページを再構築して、古い Url をブックマークしている人ように使用できますのページに移動した後かどうかを確認する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-347">URL rewriting is useful when you want to restructure the pages in your Web application, and you want to make sure that people who have bookmarked old URLs can still use them after you have moved pages.</span></span> <span data-ttu-id="cea3a-348">URL の書き換えには、新しいページの場所への要求を透過的に転送することができます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-348">URL rewriting enables you to transparently forward requests to the new page location.</span></span>  
  
 <span data-ttu-id="cea3a-349">検索エンジン用に最適化されたよりユーザー フレンドリな Url を使用するサイトを有効にする場合は、ASP.NET ルーティングを使用するより堅牢な代替ことです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-349">If you want to enable a site to use URLs that are more user-friendly and are optimized for search engines, a more robust alternative is to use ASP.NET routing.</span></span> <span data-ttu-id="cea3a-350">詳細については、次を参照してください。 [ASP.NET ルーティング](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-350">For more information, see [ASP.NET Routing](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea3a-351">次の例は、使用する方法を示します、 <xref:System.Web.HttpContext.RewritePath%2A> Web サイトのファイル構造を反映しない Url に応答する Web サイトを有効にするメソッド。</span><span class="sxs-lookup"><span data-stu-id="cea3a-351">The following example shows how to use the <xref:System.Web.HttpContext.RewritePath%2A> method to enable a Web site to respond to URLs that do not reflect the file structure in the Web site.</span></span> <span data-ttu-id="cea3a-352">コードの最初のブロックは、RewritePath.aspx という ASP.NET Web ページです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-352">The first block of code is an ASP.NET Web page that is named RewritePath.aspx.</span></span> <span data-ttu-id="cea3a-353">クエリ文字列が必要です。</span><span class="sxs-lookup"><span data-stu-id="cea3a-353">It requires a query string.</span></span> <span data-ttu-id="cea3a-354">かどうか、サイトの名前には、URL、WebSite1`http://localhost/WebSite1/RewritePath.aspx?page=1`ブラウザーに「ページ 1」が表示されます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-354">If the name of your site is WebSite1, the URL `http://localhost/WebSite1/RewritePath.aspx?page=1` displays "Page 1" in the browser.</span></span> <span data-ttu-id="cea3a-355">Web ページを次のコード ブロックは、 `Application_BeginRequest` Global.asax ファイル内のイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="cea3a-355">The block of code that follows the Web page is the `Application_BeginRequest` event handler in the Global.asax file.</span></span> <span data-ttu-id="cea3a-356">このコードは要求をインターセプトの Url など`http://localhost/WebSite1/page1`され処理されるまで RewritePath.aspx 必要な形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-356">This code intercepts requests for URLs such as `http://localhost/WebSite1/page1` and converts them to the form that is required for RewritePath.aspx before they are processed.</span></span> <span data-ttu-id="cea3a-357">そのため、URL `http://localhost/WebSite1/page1` 「ページ 1」をブラウザーで表示するクエリ文字列パラメーターを持つ RewritePath.aspx を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-357">Therefore, the URL `http://localhost/WebSite1/page1` invokes RewritePath.aspx with the query-string parameter that displays "Page 1" in the browser.</span></span> <span data-ttu-id="cea3a-358">URL など場合、`http://localhost/WebSite1/page1`受信されるのオーバー ロード<xref:System.Web.HttpContext.RewritePath%2A>が呼び出されるの値を指定することができます、<xref:System.Web.HttpRequest.PathInfo%2A>プロパティだけでなく、クエリ文字列パラメーター。</span><span class="sxs-lookup"><span data-stu-id="cea3a-358">If a URL such as `http://localhost/WebSite1/page1` is received, an overload of <xref:System.Web.HttpContext.RewritePath%2A> is invoked that enables you to provide a value for the <xref:System.Web.HttpRequest.PathInfo%2A> property as well as a query string parameter.</span></span>  
  
 [!code-aspx-csharp[HttpContext_RewritePath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpContext_ReWritePath/CS/rewritepath.aspx#2)]
 [!code-aspx-vb[HttpContext_RewritePath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpContext_ReWritePath/VB/rewritepath.aspx#2)]  
  
 [!code-csharp[HttpContext_RewritePath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpContext_ReWritePath/CS/global.asax#1)]
 [!code-vb[HttpContext_RewritePath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpContext_ReWritePath/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cea3a-359">
            <paramref name="path" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-359">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="cea3a-360">
            <paramref name="path" /> パラメーターが現在のアプリケーションのルート ディレクトリ内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-360">The <paramref name="path" /> parameter is not in the current application's root directory.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">
          <span data-ttu-id="cea3a-361">ASP.NET ルーティング</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-361">ASP.NET Routing</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">
          <span data-ttu-id="cea3a-362">チュートリアル: ASP.NET Web フォーム アプリケーションでルーティングを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-362">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public void RewritePath (string path, bool rebaseClientPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RewritePath(string path, bool rebaseClientPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RewritePath(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RewritePath (path As String, rebaseClientPath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RewritePath(System::String ^ path, bool rebaseClientPath);" />
      <MemberSignature Language="F#" Value="member this.RewritePath : string * bool -&gt; unit" Usage="httpContext.RewritePath (path, rebaseClientPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rebaseClientPath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="cea3a-363">内部リライト パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-363">The internal rewrite path.</span>
          </span>
        </param>
        <param name="rebaseClientPath">
          <span data-ttu-id="cea3a-364">仮想パスをリセットする場合は <see langword="true" />。仮想パスを変更しない場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-364">
              <see langword="true" /> to reset the virtual path; <see langword="false" /> to keep the virtual path unchanged.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-365">指定したパスおよびサーバー リソースの仮想パスが変更されるかどうかを指定するブール値を使用して、URL をリライトします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-365">Rewrites the URL using the given path and a Boolean value that specifies whether the virtual path for server resources is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-366"><xref:System.Web.HttpContext.RewritePath%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>メソッドを呼び出して、<xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=nameWithType>メソッドを`rebaseClientPath`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-366">The <xref:System.Web.HttpContext.RewritePath%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> method is called by the <xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=nameWithType> method with the `rebaseClientPath` parameter set to `true`.</span></span> <span data-ttu-id="cea3a-367">リソースへのパスを構築するために使用される仮想パスが変更されていないようにするには、設定、`rebaseClientPath`パラメーター`false`します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-367">To ensure that the virtual path that is used to construct paths to resources is not modified, set the `rebaseClientPath` parameter to `false`.</span></span> <span data-ttu-id="cea3a-368">設定する一般的なシナリオ`rebaseClientPath`に`false`URL を書き換える必要があり、テーマを使用して、要求されたリソースよりも、別のフォルダーにあるリソースへの URL をリダイレクトする場合します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-368">A common scenario in which you might want to set `rebaseClientPath` to `false` is when you need to rewrite the URL, and you are using themes and redirecting the URL to a resource located in a different folder than the requested resource.</span></span>  
  
 <span data-ttu-id="cea3a-369">URL リライトは、Web アプリケーションでページを再構築して、古い Url をブックマークしている人ように使用できますのページに移動した後かどうかを確認する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-369">URL rewriting is useful when you want to restructure the pages in your Web application, and you want to make sure that people who have bookmarked old URLs can still use them after you have moved pages.</span></span> <span data-ttu-id="cea3a-370">URL の書き換えには、新しいページの場所への要求を透過的に転送することができます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-370">URL rewriting enables you to transparently forward requests to the new page location.</span></span>  
  
 <span data-ttu-id="cea3a-371">検索エンジン用に最適化されたよりユーザー フレンドリな Url を使用するサイトを有効にする場合は、ASP.NET ルーティングを使用するより堅牢な代替ことです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-371">If you want to enable a site to use URLs that are more user-friendly and are optimized for search engines, a more robust alternative is to use ASP.NET routing.</span></span> <span data-ttu-id="cea3a-372">詳細については、次を参照してください。 [ASP.NET ルーティング](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-372">For more information, see [ASP.NET Routing](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea3a-373">コード例では、次を参照してください。、<xref:System.Web.HttpContext.RewritePath%28System.String%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="cea3a-373">For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cea3a-374">
            <paramref name="path" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-374">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="cea3a-375">
            <paramref name="path" /> パラメーターが現在のアプリケーションのルート ディレクトリ内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-375">The <paramref name="path" /> parameter is not in the current application's root directory.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">
          <span data-ttu-id="cea3a-376">ASP.NET ルーティング</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-376">ASP.NET Routing</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">
          <span data-ttu-id="cea3a-377">チュートリアル: ASP.NET Web フォーム アプリケーションでルーティングを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-377">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public void RewritePath (string filePath, string pathInfo, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RewritePath(string filePath, string pathInfo, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RewritePath(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RewritePath (filePath As String, pathInfo As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="member this.RewritePath : string * string * string -&gt; unit" Usage="httpContext.RewritePath (filePath, pathInfo, queryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="cea3a-378">内部リライト パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-378">The internal rewrite path.</span>
          </span>
        </param>
        <param name="pathInfo">
          <span data-ttu-id="cea3a-379">リソースの追加パス情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-379">Additional path information for a resource.</span>
          </span>
          <span data-ttu-id="cea3a-380">詳細については、「<see cref="P:System.Web.HttpRequest.PathInfo" />」を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-380">For more information, see <see cref="P:System.Web.HttpRequest.PathInfo" />.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="cea3a-381">要求クエリ文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-381">The request query string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-382">指定されたパス、パス情報、およびクエリ文字列情報を使用して、URL をリライトします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-382">Rewrites the URL by using the given path, path information, and query string information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-383"><xref:System.Web.HttpContext.RewritePath%2A>メソッドは、URL を変更することがなく別のリソースにリソースへの要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="cea3a-383">The <xref:System.Web.HttpContext.RewritePath%2A> method redirects a request for a resource to another resource without changing the URL.</span></span>  
  
 <span data-ttu-id="cea3a-384">`filePath`パラメーターは含まれません、`pathInfo`パラメーター コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="cea3a-384">The `filePath` parameter does not include the `pathInfo` parameter content.</span></span> <span data-ttu-id="cea3a-385">URL のhttp://www.microsoft.com/virdir/page.html/tail、`filePath`パラメーターがhttp://www.microsoft.com/virdir/page.html、および`pathInfo`パラメーターは、末尾。</span><span class="sxs-lookup"><span data-stu-id="cea3a-385">For the URL http://www.microsoft.com/virdir/page.html/tail, the `filePath` parameter is http://www.microsoft.com/virdir/page.html, and the `pathInfo` parameter is tail.</span></span>  
  
 <span data-ttu-id="cea3a-386">URL リライトは、Web アプリケーションでページを再構築して、古い Url をブックマークしている人ように使用できますのページに移動した後かどうかを確認する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-386">URL rewriting is useful when you want to restructure the pages in your Web application, and you want to make sure that people who have bookmarked old URLs can still use them after you have moved pages.</span></span> <span data-ttu-id="cea3a-387">URL の書き換えには、新しいページの場所への要求を透過的に転送することができます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-387">URL rewriting enables you to transparently forward requests to the new page location.</span></span>  
  
 <span data-ttu-id="cea3a-388">検索エンジン用に最適化されたよりユーザー フレンドリな Url を使用するサイトを有効にする場合は、ASP.NET ルーティングを使用するより堅牢な代替ことです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-388">If you want to enable a site to use URLs that are more user-friendly and are optimized for search engines, a more robust alternative is to use ASP.NET routing.</span></span> <span data-ttu-id="cea3a-389">詳細については、次を参照してください。 [ASP.NET ルーティング](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-389">For more information, see [ASP.NET Routing](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea3a-390">このメソッドのオーバー ロードの例を含む、コード例については、次を参照してください。、<xref:System.Web.HttpContext.RewritePath%28System.String%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="cea3a-390">For a code example, including an example of this method overload, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cea3a-391">
            <paramref name="path" /> パラメーターが現在のアプリケーションのルート ディレクトリ内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-391">The <paramref name="path" /> parameter is not in the current application's root directory.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="cea3a-392">
            <paramref name="filePath" /> パラメーターが現在のアプリケーションのルート ディレクトリ内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-392">The <paramref name="filePath" /> parameter is not in the current application's root directory.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">
          <span data-ttu-id="cea3a-393">ASP.NET ルーティング</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-393">ASP.NET Routing</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">
          <span data-ttu-id="cea3a-394">チュートリアル: ASP.NET Web フォーム アプリケーションでルーティングを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-394">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RewritePath (filePath As String, pathInfo As String, queryString As String, setClientFilePath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString, bool setClientFilePath);" />
      <MemberSignature Language="F#" Value="member this.RewritePath : string * string * string * bool -&gt; unit" Usage="httpContext.RewritePath (filePath, pathInfo, queryString, setClientFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="setClientFilePath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="cea3a-395">要求を処理するリソースへの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-395">The virtual path to the resource that services the request.</span>
          </span>
        </param>
        <param name="pathInfo">
          <span data-ttu-id="cea3a-396">URL リダイレクトで使用する追加のパス情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-396">Additional path information to use for the URL redirect.</span>
          </span>
          <span data-ttu-id="cea3a-397">詳細については、「<see cref="P:System.Web.HttpRequest.PathInfo" />」を参照してください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-397">For more information, see <see cref="P:System.Web.HttpRequest.PathInfo" />.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="cea3a-398">URL リダイレクトで使用する要求クエリ文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-398">The request query string to use for the URL redirect.</span>
          </span>
        </param>
        <param name="setClientFilePath">
          <span data-ttu-id="cea3a-399">クライアント リソースで使用されるファイル パスを <paramref name="filePath" /> パラメーターの値に設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-399">
              <see langword="true" /> to set the file path used for client resources to the value of the <paramref name="filePath" /> parameter; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-400">指定した仮想パス、パス情報、クエリ文字列、およびクライアント ファイル パスをリライト パスに設定するかどうかを指定するブール値を使用して、URL をリライトします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-400">Rewrites the URL using the given virtual path, path information, query string information, and a Boolean value that specifies whether the client file path is set to the rewrite path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-401">`filePath`パラメーターの内容を含まない、`pathInfo`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="cea3a-401">The `filePath` parameter does not include the content of the `pathInfo` parameter.</span></span> <span data-ttu-id="cea3a-402">URL のhttp://www.microsoft.com/virdir/page.html/tail、`filePath`パラメーターがhttp://www.microsoft.com/virdir/page.html、および`pathInfo`パラメーターは、末尾。</span><span class="sxs-lookup"><span data-stu-id="cea3a-402">For the URL http://www.microsoft.com/virdir/page.html/tail, the `filePath` parameter is http://www.microsoft.com/virdir/page.html, and the `pathInfo` parameter is tail.</span></span>  
  
 <span data-ttu-id="cea3a-403">リソースへのパスを構築するために使用される仮想パスが変更されていないようにするには、設定、`setClientFilePath`パラメーター`false`します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-403">To ensure that the virtual path that is used to construct paths to resources is not modified, set the `setClientFilePath` parameter to `false`.</span></span> <span data-ttu-id="cea3a-404">設定する一般的なシナリオ`setClientFilePath`に`false`URL を書き換える必要があり、テーマを使用して、要求されたリソースよりも、別のフォルダーにあるリソースへの URL をリダイレクトする場合します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-404">A common scenario in which you might want to set `setClientFilePath` to `false` is when you need to rewrite the URL, and you are using themes and redirecting the URL to a resource located in a different folder than the requested resource.</span></span>  
  
 <span data-ttu-id="cea3a-405">URL リライトは、Web アプリケーションでページを再構築して、古い Url をブックマークしている人ように使用できますのページに移動した後かどうかを確認する場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-405">URL rewriting is useful when you want to restructure the pages in your Web application, and you want to make sure that people who have bookmarked old URLs can still use them after you have moved pages.</span></span> <span data-ttu-id="cea3a-406">URL の書き換えには、新しいページの場所への要求を透過的に転送することができます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-406">URL rewriting enables you to transparently forward requests to the new page location.</span></span>  
  
 <span data-ttu-id="cea3a-407">検索エンジン用に最適化されたよりユーザー フレンドリな Url を使用するサイトを有効にする場合は、ASP.NET ルーティングを使用するより堅牢な代替ことです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-407">If you want to enable a site to use URLs that are more user-friendly and are optimized for search engines, a more robust alternative is to use ASP.NET routing.</span></span> <span data-ttu-id="cea3a-408">詳細については、次を参照してください。 [ASP.NET ルーティング](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-408">For more information, see [ASP.NET Routing](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea3a-409">コード例では、次を参照してください。、<xref:System.Web.HttpContext.RewritePath%28System.String%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="cea3a-409">For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cea3a-410">
            <paramref name="path" /> パラメーターが現在のアプリケーションのルート ディレクトリ内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-410">The <paramref name="path" /> parameter is not in the current application's root directory.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="cea3a-411">
            <paramref name="filePath" /> パラメーターが現在のアプリケーションのルート ディレクトリ内にありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-411">The <paramref name="filePath" /> parameter is not in the current application's root directory.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">
          <span data-ttu-id="cea3a-412">ASP.NET ルーティング</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-412">ASP.NET Routing</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">
          <span data-ttu-id="cea3a-413">チュートリアル: ASP.NET Web フォーム アプリケーションでルーティングを使用します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-413">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.HttpContext.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-414">Web 要求の処理で使用されるメソッドを提供する <see cref="T:System.Web.HttpServerUtility" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-414">Gets the <see cref="T:System.Web.HttpServerUtility" /> object that provides methods used in processing Web requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-415">現在の HTTP 要求に対する <see cref="T:System.Web.HttpServerUtility" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-415">The <see cref="T:System.Web.HttpServerUtility" /> for the current HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-416"><xref:System.Web.HttpContext.Server%2A>プロパティのメソッドとプロパティにプログラムでアクセスを提供する、<xref:System.Web.HttpServerUtility>クラス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-416">The <xref:System.Web.HttpContext.Server%2A> property provides programmatic access to the properties and methods of the <xref:System.Web.HttpServerUtility> class.</span></span> <span data-ttu-id="cea3a-417">ASP.NET ページには、既定値への参照が含まれているため、<xref:System.Web>名前空間 (が含まれています、<xref:System.Web.HttpContext>クラス) のメンバーを参照する<xref:System.Web.HttpContext>.aspx ページへの参照を完全修飾クラスを使用せずに<xref:System.Web.HttpContext>します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-417">Because ASP.NET pages contain a default reference to the <xref:System.Web> namespace (which contains the <xref:System.Web.HttpContext> class), you can reference the members of <xref:System.Web.HttpContext> on an .aspx page without using the fully qualified class reference to <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="cea3a-418">たとえば、使用することができます`Server.CreateObject("MyCOMComponent")`サーバー上の COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-418">For example, you can use `Server.CreateObject("MyCOMComponent")` to create an instance of a COM object on the server.</span></span> <span data-ttu-id="cea3a-419">ただしのメンバーを使用する場合<xref:System.Web.HttpServerUtility>ASP.NET 分離コード モジュールからへの参照を含める必要があります、<xref:System.Web>モジュールで現在アクティブな要求/応答コンテキストへの参照を完全修飾名前空間およびクラスの<xref:System.Web>を使用します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-419">However, if you want to use the members of <xref:System.Web.HttpServerUtility> from an ASP.NET code-behind module, you must include a reference to the <xref:System.Web> namespace in the module and a fully qualified reference to both the currently active request/response context and the class in <xref:System.Web> that you want to use.</span></span> <span data-ttu-id="cea3a-420">たとえば、分離コード ページにする必要があります名を指定する、完全修飾`HttpContext.Current.Server.CreateObject("MyCOMComponent")`します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-420">For example, in a code-behind page you must specify the fully qualified name `HttpContext.Current.Server.CreateObject("MyCOMComponent")`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.HttpContext.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-421">現在の HTTP 要求に対する <see cref="T:System.Web.SessionState.HttpSessionState" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-421">Gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-422">現在の HTTP 要求に対する <see cref="T:System.Web.SessionState.HttpSessionState" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-422">The <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-423"><xref:System.Web.HttpContext.Session%2A>プロパティのメソッドとプロパティにプログラムでアクセスを提供する、<xref:System.Web.SessionState.HttpSessionState>クラス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-423">The <xref:System.Web.HttpContext.Session%2A> property provides programmatic access to the properties and methods of the <xref:System.Web.SessionState.HttpSessionState> class.</span></span>  
  
 <span data-ttu-id="cea3a-424">セッション状態を使用するためには、これを有効にする必要です。</span><span class="sxs-lookup"><span data-stu-id="cea3a-424">In order to use session state you have to enable it.</span></span> <span data-ttu-id="cea3a-425">セッション状態を有効にする方法については、次を参照してください。**構成セッション状態**で[ASP.NET セッション状態の概要](https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-425">For information about how to enable session state, see **Configuring Session State** in [ASP.NET Session State Overview](https://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).</span></span>  
  
 <span data-ttu-id="cea3a-426">セッション状態の値を保存する方法については、次を参照してください。[方法: セッション状態の値を保存](https://msdn.microsoft.com/library/a6cb2e3a-df49-4b12-9d9a-eed45541c165)します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-426">For information about how to save values in session state, see [How to: Save Values in Session State](https://msdn.microsoft.com/library/a6cb2e3a-df49-4b12-9d9a-eed45541c165).</span></span> <span data-ttu-id="cea3a-427">セッション状態から値を読み取る方法については、次を参照してください。[方法: セッションの状態からの読み取り値](https://msdn.microsoft.com/library/2ef449bc-5c17-4785-b7cf-378c601af8f5)します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-427">For information about how to read values from session state, see [How to: Read Values from Session State](https://msdn.microsoft.com/library/2ef449bc-5c17-4785-b7cf-378c601af8f5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea3a-428">次の例では、セッション状態の値を保存する方法とセッション状態から値を読み取る方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-428">The following examples show how to save values in session state and how to read values from session state.</span></span>  
  
 <span data-ttu-id="cea3a-429">これらの例には次の項目が必要です。</span><span class="sxs-lookup"><span data-stu-id="cea3a-429">These examples require:</span></span>  
  
-   <span data-ttu-id="cea3a-430">有効になっているセッション状態を持つ ASP.NET アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="cea3a-430">An ASP.NET application that has session state enabled.</span></span>  
  
-   <span data-ttu-id="cea3a-431">Web フォーム ページ クラスにアクセスできる、<xref:System.Web.UI.Page.Session%2A?displayProperty=nameWithType>プロパティ、または任意のクラスにアクセスできる、<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cea3a-431">A Web Forms page class that has access to the <xref:System.Web.UI.Page.Session%2A?displayProperty=nameWithType> property, or any class that has access to the <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
```csharp  
string firstName = "Jeff";  
string lastName = "Smith";  
string city = "Seattle";  
  
// Save to session state in a Web Forms page class.  
Session["FirstName"] = firstName;  
Session["LastName"] = lastName;  
Session["City"] = city;  
  
// Read from session state in a Web Forms page class.  
firstName = (string)(Session["FirstName"]);  
lastName = (string)(Session["LastName"]);  
city = (string)(Session["City"]);  
  
// Outside of Web Forms page class, use HttpContext.Current.  
HttpContext context = HttpContext.Current;  
context.Session["FirstName"] = firstName;  
firstName = (string)(context.Session["FirstName"]);  
  
```  
  
```vb  
Dim firstName As String = "Jeff"  
Dim lastName As String = "Smith"  
Dim city As String = "Seattle"  
  
' Save to session state in a Web Forms page class.  
Session("FirstName") = firstName  
Session("LastName") = lastName  
Session("City") = city  
  
' Read from session state in a Web Forms page class.  
firstName = DirectCast(Session("FirstName"), String)  
lastName = DirectCast(Session("LastName"), String)  
city = DirectCast(Session("City"), String)  
  
' Outside of Web Forms page class, use HttpContext.Current.  
Dim context As HttpContext = HttpContext.Current  
context.Session("FirstName") = firstName  
firstName = DirectCast(context.Session("FirstName"), String)  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSessionStateBehavior">
      <MemberSignature Language="C#" Value="public void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSessionStateBehavior(valuetype System.Web.SessionState.SessionStateBehavior sessionStateBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSessionStateBehavior(System::Web::SessionState::SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="F#" Value="member this.SetSessionStateBehavior : System.Web.SessionState.SessionStateBehavior -&gt; unit" Usage="httpContext.SetSessionStateBehavior sessionStateBehavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionStateBehavior" Type="System.Web.SessionState.SessionStateBehavior" />
      </Parameters>
      <Docs>
        <param name="sessionStateBehavior">
          <span data-ttu-id="cea3a-432">必要なセッション状態の動作の種類を指定する列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-432">One of the enumeration values that specifies what type of session state behavior is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-433">HTTP 要求をサポートするために必要なセッション状態の動作の種類を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-433">Sets the type of session state behavior that is required in order to support an HTTP request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-434">要求の HTTP ハンドラーが実装することでセッション状態が必要とするかどうかを示す ASP.NET の既定の実装で、<xref:System.Web.SessionState.IRequiresSessionState>インターフェイスまたは<xref:System.Web.SessionState.IReadOnlySessionState>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-434">In the ASP.NET default implementation, an HTTP request handler indicates whether it requires session state by implementing the <xref:System.Web.SessionState.IRequiresSessionState> interface or the <xref:System.Web.SessionState.IReadOnlySessionState> interface.</span></span> <span data-ttu-id="cea3a-435"><xref:System.Web.HttpContext.SetSessionStateBehavior%2A>メソッドと<xref:System.Web.SessionState.SessionStateBehavior>列挙型を使用して、要求を処理するために必要なセッション状態のサポートの種類の詳細を提供できます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-435">The <xref:System.Web.HttpContext.SetSessionStateBehavior%2A> method and the <xref:System.Web.SessionState.SessionStateBehavior> enumeration let you provide more detail about what type of session state support is required in order to handle a request.</span></span> <span data-ttu-id="cea3a-436">詳細については、<xref:System.Web.SessionState.SessionStateBehavior> 列挙型のページをご覧ください。</span><span class="sxs-lookup"><span data-stu-id="cea3a-436">For more information, see the <xref:System.Web.SessionState.SessionStateBehavior> enumeration.</span></span>  
  
 <span data-ttu-id="cea3a-437"><xref:System.Web.HttpContext.SetSessionStateBehavior%2A>メソッドは、前に呼び出す必要があります、<xref:System.Web.HttpApplication.AcquireRequestState>パイプライン イベント。</span><span class="sxs-lookup"><span data-stu-id="cea3a-437">The <xref:System.Web.HttpContext.SetSessionStateBehavior%2A> method must be called before the <xref:System.Web.HttpApplication.AcquireRequestState> pipeline event.</span></span> <span data-ttu-id="cea3a-438">呼び出し中に、またはこのイベントの後に発生すると、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="cea3a-438">Calls that occur during or after this event will cause an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cea3a-439">メソッドは、<see cref="E:System.Web.HttpApplication.AcquireRequestState" /> イベントの発生後に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-439">The method was called after the <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event was raised.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.SessionState.SessionStateBehavior" />
      </Docs>
    </Member>
    <Member MemberName="SkipAuthorization">
      <MemberSignature Language="C#" Value="public bool SkipAuthorization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipAuthorization" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.SkipAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipAuthorization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipAuthorization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipAuthorization : bool with get, set" Usage="System.Web.HttpContext.SkipAuthorization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-440">
            <see cref="T:System.Web.Security.UrlAuthorizationModule" /> オブジェクトが現在の要求に対する承認チェックをスキップするかどうかを指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-440">Gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-441">
            <see cref="T:System.Web.Security.UrlAuthorizationModule" /> が承認チェックをスキップする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-441">
              <see langword="true" /> if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="cea3a-442">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-442">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-443"><xref:System.Web.HttpContext.SkipAuthorization%2A>匿名接続を許可するページにリダイレクトする必要がある認証モジュールで高度な用途のプロパティが対象としています。</span><span class="sxs-lookup"><span data-stu-id="cea3a-443">The <xref:System.Web.HttpContext.SkipAuthorization%2A> property is intended for advanced use by authentication modules that need to redirect to a page that allows anonymous connections.</span></span> <span data-ttu-id="cea3a-444">両方の設定フォーム認証モジュールと Passport 認証モジュール<xref:System.Web.HttpContext.SkipAuthorization%2A>構成済みのログオン ページにリダイレクトしたときにします。</span><span class="sxs-lookup"><span data-stu-id="cea3a-444">The Forms authentication module and Passport authentication module both set <xref:System.Web.HttpContext.SkipAuthorization%2A> when redirecting to a configured logon page.</span></span> <span data-ttu-id="cea3a-445">設定<xref:System.Web.HttpContext.SkipAuthorization%2A>が必要です、`ControlPrincipal`フラグを設定します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-445">Setting <xref:System.Web.HttpContext.SkipAuthorization%2A> requires the `ControlPrincipal` flag to be set.</span></span> <span data-ttu-id="cea3a-446">については、`ControlPrincipal`フラグは、「<xref:System.Security.Permissions.SecurityPermissionFlag>します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-446">For information about the `ControlPrincipal` flag, see <xref:System.Security.Permissions.SecurityPermissionFlag>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type service);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (service As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ service) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service">
          <span data-ttu-id="cea3a-447">
            <see cref="T:System.Web.HttpContext" /> サービスの型。サービス プロバイダーをこの型に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-447">A type of <see cref="T:System.Web.HttpContext" /> service to set the service provider to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cea3a-448">現在のサービス型のオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-448">Returns an object for the current service type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cea3a-449">
            <see cref="T:System.Web.HttpContext" />。サービスが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-449">A <see cref="T:System.Web.HttpContext" />; otherwise, <see langword="null" /> if no service is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-450">このメソッドは、基になるにアクセスする便利な<xref:System.Web.HttpWorkerRequest>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cea3a-450">This method is useful to gain access to the underlying <xref:System.Web.HttpWorkerRequest> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadAbortOnTimeout">
      <MemberSignature Language="C#" Value="public bool ThreadAbortOnTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreadAbortOnTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.ThreadAbortOnTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreadAbortOnTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThreadAbortOnTimeout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThreadAbortOnTimeout : bool with get, set" Usage="System.Web.HttpContext.ThreadAbortOnTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-451">要求がタイムアウトしたときにこの要求に対処していたスレッド上で ASP.NET ランタイムが <see cref="M:System.Threading.Thread.Abort" /> を呼び出す必要があるかどうかを指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-451">Gets or sets a value that specifies whether the ASP.NET runtime should call <see cref="M:System.Threading.Thread.Abort" /> on the thread that is servicing this request when the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-452">スレッドのタイムアウト時に <see cref="M:System.Threading.Thread.Abort" /> が呼び出される場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-452">
              <see langword="true" /> if <see cref="M:System.Threading.Thread.Abort" /> will be called when the thread times out; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="cea3a-453">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-453">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-454">ハンドラーとモジュールを使用しているので、<xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=nameWithType>協調のキャンセルを実装するプロパティを無効にすることがあります、 <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType> ASP.NET は要求がタイムアウトしたときに既定で実行する動作です。このプロパティを設定`false`ASP.NET によって中断されずにキャンセル機能とクリーンアップ ルーチンを実行するかどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-454">In handlers and modules that are using the <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=nameWithType> property to implement cooperative cancellation, you might wish to disable the <xref:System.Threading.Thread.Abort%2A?displayProperty=nameWithType> behavior that ASP.NET performs by default when a request times out. Setting this property to `false` can help you make sure that cancellation and cleanup routines will run without being interrupted by ASP.NET.</span></span>  
  
 <span data-ttu-id="cea3a-455">このプロパティを設定する場合`false`ASP.NET は自動的に表示されない、「要求がタイムアウトしました」エラー ページ、タイムアウトが発生した場合。</span><span class="sxs-lookup"><span data-stu-id="cea3a-455">If you set this property to `false`, ASP.NET will not automatically display a "Request timed out" error page when a timeout occurs.</span></span> <span data-ttu-id="cea3a-456">アプリケーションは、応答の内容を適切に設定します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-456">The application is responsible for setting the response content appropriately.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public DateTime Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Timestamp { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : DateTime" Usage="System.Web.HttpContext.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-457">現在の HTTP 要求の初期タイムスタンプを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-457">Gets the initial timestamp of the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-458">現在の HTTP 要求のタイムスタンプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-458">The timestamp of the current HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-459">返されるタイムスタンプ、<xref:System.Web.HttpContext.Timestamp%2A>プロパティは、サーバーのローカル時刻でありのインスタンス化中に設定されます、<xref:System.Web.HttpContext>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cea3a-459">The timestamp returned from the <xref:System.Web.HttpContext.Timestamp%2A> property is the local time of the server and is set during the instantiation of the <xref:System.Web.HttpContext> object.</span></span> <span data-ttu-id="cea3a-460">ローカル時刻は UTC 時刻と UTC オフセットです。</span><span class="sxs-lookup"><span data-stu-id="cea3a-460">The local time is equal to the UTC time plus the UTC offset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.Trace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Trace : System.Web.TraceContext" Usage="System.Web.HttpContext.Trace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-461">現在の HTTP 応答に対する <see cref="T:System.Web.TraceContext" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-461">Gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-462">現在の HTTP 応答の <see cref="T:System.Web.TraceContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-462">The <see cref="T:System.Web.TraceContext" /> for the current HTTP response.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.User" />
      <MemberSignature Language="VB.NET" Value="Public Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal with get, set" Usage="System.Web.HttpContext.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-463">現在の HTTP 要求のセキュリティ情報を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-463">Gets or sets security information for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-464">現在の HTTP 要求のセキュリティ情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-464">Security information for the current HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cea3a-465"><xref:System.Web.HttpContext.User%2A>プロパティのメソッドとプロパティにプログラムでアクセスを提供する、<xref:System.Security.Principal.IPrincipal>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="cea3a-465">The <xref:System.Web.HttpContext.User%2A> property provides programmatic access to the properties and methods of the <xref:System.Security.Principal.IPrincipal> interface.</span></span>  
  
 <span data-ttu-id="cea3a-466">ASP.NET ページには、既定値への参照が含まれているため、<xref:System.Web>名前空間 (が含まれています、<xref:System.Web.HttpContext>クラス) のメンバーを参照する<xref:System.Web.HttpContext>.aspx ページへの参照を完全修飾クラスを使用せずに<xref:System.Web.HttpContext>します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-466">Because ASP.NET pages contain a default reference to the <xref:System.Web> namespace (which contains the <xref:System.Web.HttpContext> class), you can reference the members of <xref:System.Web.HttpContext> on an .aspx page without using the fully qualified class reference to <xref:System.Web.HttpContext>.</span></span> <span data-ttu-id="cea3a-467">たとえば、使用することができます`User.Identity.Name`実行するには、現在のプロセスの代わりに、ユーザーの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-467">For example, you can use `User.Identity.Name` to get the name of the user on whose behalf the current process is running.</span></span> <span data-ttu-id="cea3a-468">ただしのメンバーを使用する場合<xref:System.Security.Principal.IPrincipal>ASP.NET 分離コード モジュールからへの参照を含める必要があります、<xref:System.Web>モジュールで現在アクティブな要求/応答コンテキストへの参照を完全修飾名前空間およびクラスの<xref:System.Web>を使用します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-468">However, if you want to use the members of <xref:System.Security.Principal.IPrincipal> from an ASP.NET code-behind module, you must include a reference to the <xref:System.Web> namespace in the module and a fully qualified reference to both the currently active request/response context and the class in <xref:System.Web> that you want to use.</span></span> <span data-ttu-id="cea3a-469">たとえば、分離コード ページにする必要があります名を指定する、完全修飾`HttpContext.Current.User.Identity.Name`します。</span><span class="sxs-lookup"><span data-stu-id="cea3a-469">For example, in a code-behind page you must specify the fully qualified name `HttpContext.Current.User.Identity.Name`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cea3a-470">次の例では、現在のユーザーのプロパティにアクセスする方法を示しています、<xref:System.Web.HttpContext.User%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cea3a-470">The following example shows how to access properties of the current user through the <xref:System.Web.HttpContext.User%2A> property.</span></span> <span data-ttu-id="cea3a-471">これらのプロパティは、Web ページのタイトルを設定に使用されます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-471">Those properties are used to set the title of the Web page.</span></span>  
  
 <span data-ttu-id="cea3a-472">アプリケーションでは、Windows 認証を使用する場合、ユーザー名には、ドメインが含まれます。</span><span class="sxs-lookup"><span data-stu-id="cea3a-472">If the application uses Windows authentication, the user name includes the domain.</span></span> <span data-ttu-id="cea3a-473">たとえば、ページのタイトルは「domain \username のホーム ページ」になります。</span><span class="sxs-lookup"><span data-stu-id="cea3a-473">For example, the page title would be "Home page for DOMAIN\username".</span></span>  
  
 [!code-csharp[System.Web.HttpContext.User#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpContext.User/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.HttpContext.User#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpContext.User/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="/aspnet/mvc/overview/older-versions/using-oauth-providers-with-mvc">
          <span data-ttu-id="cea3a-474">MVC 4 で OAuth プロバイダーを使用</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-474">Using OAuth Providers with MVC 4</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="/aspnet/web-forms/overview/getting-started/getting-started-with-aspnet-45-web-forms/checkout-and-payment-with-paypal">
          <span data-ttu-id="cea3a-475">ASP.NET 4.5 Web フォームの精算と PayPal による支払いの概要</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-475">Getting Started with ASP.NET 4.5 Web Forms - Checkout and Payment with PayPal</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="/aspnet/mvc/overview/older-versions-1/nerddinner/secure-applications-using-authentication-and-authorization">
          <span data-ttu-id="cea3a-476">NerdDinner、認証と承認を使用してセキュリティで保護されたアプリケーション</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-476">NerdDinner - Secure Applications Using Authentication and Authorization</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WebSocketNegotiatedProtocol">
      <MemberSignature Language="C#" Value="public string WebSocketNegotiatedProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebSocketNegotiatedProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.WebSocketNegotiatedProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebSocketNegotiatedProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WebSocketNegotiatedProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebSocketNegotiatedProtocol : string" Usage="System.Web.HttpContext.WebSocketNegotiatedProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-477">サーバーからクライアントに <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 接続のために送信されたネゴシエートされたプロトコルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-477">Gets the negotiated protocol that was sent from the server to the client for an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-478">ネゴシエートされたプロトコル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-478">The negotiated protocol.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketRequestedProtocols">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; WebSocketRequestedProtocols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WebSocketRequestedProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContext.WebSocketRequestedProtocols" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebSocketRequestedProtocols As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ WebSocketRequestedProtocols { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebSocketRequestedProtocols : System.Collections.Generic.IList&lt;string&gt;" Usage="System.Web.HttpContext.WebSocketRequestedProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cea3a-479">クライアントから要求されたプロトコルの順序付きリストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-479">Gets the ordered list of protocols requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cea3a-480">要求されたプロトコル。<see cref="T:System.Web.WebSockets.AspNetWebSocket" /> の要求でないか、リストがない場合は、<see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cea3a-480">The requested protocols, or <see langword="null" /> if this is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request or if no list is present.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>