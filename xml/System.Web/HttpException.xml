<Type Name="HttpException" FullName="System.Web.HttpException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df6fe840d50f7343f95c8c18cb2511fa5b276141" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70452388" /></Metadata><TypeSignature Language="C#" Value="public class HttpException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HttpException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpException" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type HttpException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8f481-101">HTTP 要求の処理中に発生した例外を説明します。</span><span class="sxs-lookup"><span data-stu-id="8f481-101">Describes an exception that occurred during the processing of HTTP requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f481-102"><xref:System.Web.HttpException>クラスは、ASP.NET が例外情報を生成できるようにする HTTP 固有の例外クラスです。</span><span class="sxs-lookup"><span data-stu-id="8f481-102">The <xref:System.Web.HttpException> class is an HTTP-specific exception class that enables ASP.NET to generate exception information.</span></span> <span data-ttu-id="8f481-103">例外のスローと処理の詳細については、「[例外](~/docs/standard/exceptions/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-103">For more information about throwing and handling exceptions, see [Exceptions](~/docs/standard/exceptions/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f481-104">クラスを使用して<xref:System.Web.HttpException>カスタマイズされた例外を発生させる方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="8f481-104">The following code example demonstrates how to use the <xref:System.Web.HttpException> class to raise customized exceptions.</span></span> <span data-ttu-id="8f481-105">メソッドは、どのボタンがクリックされたかを判断`CheckNumber`し`CheckBoolean` 、メソッドまたはメソッドを呼び出します。 `Button_Click`</span><span class="sxs-lookup"><span data-stu-id="8f481-105">The `Button_Click` method determines which button was clicked, and then calls either the `CheckNumber` or `CheckBoolean` method.</span></span> <span data-ttu-id="8f481-106">テキストボックス内のユーザーが入力した値が必要な<xref:System.Web.HttpException>型に対応していない場合は、エラーの種類に基づいて、カスタマイズされたメッセージと共に例外が作成されてスローされます。</span><span class="sxs-lookup"><span data-stu-id="8f481-106">If the user-entered value in the text box does not correspond to the expected type, an <xref:System.Web.HttpException> exception is created and thrown with a customized message based on the error type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f481-107">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8f481-107">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="8f481-108">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-108">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="8f481-109">詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-109">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException/cs/httpexceptioncs.aspx#1)]
 [!code-aspx-vb[HttpException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException/vb/httpexceptionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="8f481-110">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="8f481-110">Handling and Throwing Exceptions</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07"><span data-ttu-id="8f481-111">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="8f481-111">Script Exploits Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f481-112"><see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f481-112">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f481-113"><see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化し、空の <see cref="T:System.Web.HttpException" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8f481-113">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class and creates an empty <see cref="T:System.Web.HttpException" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f481-114">例外を処理する場合は、内部例外への応答としてスローされる外側の例外を使用して、一連の関連する例外をキャプチャすると便利です。</span><span class="sxs-lookup"><span data-stu-id="8f481-114">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="8f481-115">外側の例外の原因となった内部例外への参照は、 <xref:System.Exception.InnerException%2A>外側の例外のプロパティから取得できます。</span><span class="sxs-lookup"><span data-stu-id="8f481-115">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="8f481-116">このメカニズムでは、元の例外を含む、以前の例外によって発生したエラー情報を保持しながら、より意味のある外部例外を作成することができます。</span><span class="sxs-lookup"><span data-stu-id="8f481-116">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="8f481-117">詳細については、「<xref:System.Exception.InnerException%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-117">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f481-118">次のコード例は、 <xref:System.Web.HttpException.%23ctor%2A> <xref:System.Web.HttpException>クラスのコンストラクターを示しています。</span><span class="sxs-lookup"><span data-stu-id="8f481-118">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="8f481-119">メソッド`CheckNumber`は、テキストボックスを使用してユーザーが入力した値を受け取り、それが整数かどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="8f481-119">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="8f481-120">値が整数でない場合は、例外がスローされ、新しい<xref:System.Web.HttpException>オブジェクトが作成されてスローされます。</span><span class="sxs-lookup"><span data-stu-id="8f481-120">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="8f481-121">この例外は`Button_Click`イベントハンドラーでキャッチされ、エラーメッセージがブラウザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-121">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f481-122">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8f481-122">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="8f481-123">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-123">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="8f481-124">詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-124">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor1/CS/httpexception_constructor1.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor1/VB/httpexception_constructor1.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07"><span data-ttu-id="8f481-125">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="8f481-125">Script Exploits Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : string -&gt; System.Web.HttpException" Usage="new System.Web.HttpException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f481-126">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f481-126">The error message displayed to the client when the exception is thrown.</span></span></param>
        <summary><span data-ttu-id="8f481-127">指定したエラー メッセージを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f481-127">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using a supplied error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f481-128">次のコード例は、 <xref:System.Web.HttpException.%23ctor%2A> <xref:System.Web.HttpException>クラスのコンストラクターを示しています。</span><span class="sxs-lookup"><span data-stu-id="8f481-128">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="8f481-129">ユーザー <xref:System.Web.HttpException>が入力した値が0の場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8f481-129">An <xref:System.Web.HttpException> is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f481-130">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8f481-130">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="8f481-131">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-131">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="8f481-132">詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-132">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07"><span data-ttu-id="8f481-133">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="8f481-133">Script Exploits Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : int * string -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (httpCode, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="httpCode"><span data-ttu-id="8f481-134">エラーに対応するクライアントに送信された HTTP 応答ステータス コード。</span><span class="sxs-lookup"><span data-stu-id="8f481-134">The HTTP response status code sent to the client corresponding to this error.</span></span></param>
        <param name="message"><span data-ttu-id="8f481-135">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f481-135">The error message displayed to the client when the exception is thrown.</span></span></param>
        <summary><span data-ttu-id="8f481-136">HTTP 応答ステータス コードとエラー メッセージを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f481-136">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code and an error message.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8f481-137">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="8f481-137">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="8f481-138">転送元または転送先に関するコンテキスト情報を保持している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="8f481-138">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="8f481-139">シリアル化したデータを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f481-139">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f481-140">この<xref:System.Web.HttpException.%23ctor%2A>コンストラクターは、逆シリアル化中に、ストリームで送信される例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-140">The <xref:System.Web.HttpException.%23ctor%2A> constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span> <span data-ttu-id="8f481-141">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="8f481-141">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="8f481-142">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="8f481-142">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : string * Exception -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f481-143">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f481-143">The error message displayed to the client when the exception is thrown.</span></span></param>
        <param name="innerException"><span data-ttu-id="8f481-144">現在の例外をスローした <see cref="P:System.Exception.InnerException" /> (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="8f481-144">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span></span></param>
        <summary><span data-ttu-id="8f481-145">エラー メッセージと <see cref="T:System.Web.HttpException" /> プロパティを使用して、<see cref="P:System.Exception.InnerException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f481-145">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and the <see cref="P:System.Exception.InnerException" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f481-146">例外を処理する場合は、内部例外への応答としてスローされる外側の例外を使用して、一連の関連する例外をキャプチャすると便利です。</span><span class="sxs-lookup"><span data-stu-id="8f481-146">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="8f481-147">外側の例外の原因となった内部例外への参照は、 <xref:System.Exception.InnerException%2A>外側の例外のプロパティから取得できます。</span><span class="sxs-lookup"><span data-stu-id="8f481-147">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="8f481-148">このメカニズムでは、元の例外を含む、以前の例外によって発生したエラー情報を保持しながら、より意味のある外部例外を作成することができます。</span><span class="sxs-lookup"><span data-stu-id="8f481-148">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="8f481-149">詳細については、「<xref:System.Exception.InnerException%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-149">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f481-150">次のコード例は、 <xref:System.Web.HttpException.%23ctor%2A> <xref:System.Web.HttpException>クラスのコンストラクターを示しています。</span><span class="sxs-lookup"><span data-stu-id="8f481-150">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="8f481-151">メソッド`CheckNumber`は、テキストボックスを使用してユーザーが入力した値を受け取り、それが整数かどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="8f481-151">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="8f481-152">値が整数でない場合は、例外がスローされ、その後 catch ブロックで、新しい<xref:System.Web.HttpException>オブジェクトが作成されてスローされます。</span><span class="sxs-lookup"><span data-stu-id="8f481-152">If the value is not an integer, an exception is thrown, and then in the catch block, a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="8f481-153">この例外は`Button_Click`イベントハンドラーでキャッチされ、エラーメッセージがブラウザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-153">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f481-154">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8f481-154">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="8f481-155">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-155">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="8f481-156">詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-156">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor2/CS/httpexception_constructor2.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor2/VB/httpexception_constructor2.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07"><span data-ttu-id="8f481-157">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="8f481-157">Script Exploits Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, int hr);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : string * int -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (message, hr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f481-158">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f481-158">The error message displayed to the client when the exception is thrown.</span></span></param>
        <param name="hr"><span data-ttu-id="8f481-159">エラーを定義する例外コード。</span><span class="sxs-lookup"><span data-stu-id="8f481-159">The exception code that defines the error.</span></span></param>
        <summary><span data-ttu-id="8f481-160">エラー メッセージと例外コードを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f481-160">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and an exception code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f481-161">次のコード例は、 <xref:System.Web.HttpException.%23ctor%2A> <xref:System.Web.HttpException>クラスのコンストラクターを示しています。</span><span class="sxs-lookup"><span data-stu-id="8f481-161">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="8f481-162">ユーザー <xref:System.Web.HttpException>が入力した値が0の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8f481-162">An <xref:System.Web.HttpException> exception is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f481-163">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8f481-163">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="8f481-164">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-164">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="8f481-165">詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-165">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07"><span data-ttu-id="8f481-166">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="8f481-166">Script Exploits Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : int * string * Exception -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (httpCode, message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="httpCode"><span data-ttu-id="8f481-167">クライアントに表示する HTTP 応答ステータス コード。</span><span class="sxs-lookup"><span data-stu-id="8f481-167">The HTTP response status code displayed on the client.</span></span></param>
        <param name="message"><span data-ttu-id="8f481-168">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f481-168">The error message displayed to the client when the exception is thrown.</span></span></param>
        <param name="innerException"><span data-ttu-id="8f481-169">現在の例外をスローした <see cref="P:System.Exception.InnerException" /> (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="8f481-169">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span></span></param>
        <summary><span data-ttu-id="8f481-170">HTTP 応答ステータス コード、エラー メッセージ、および <see cref="T:System.Web.HttpException" /> プロパティを使用して、<see cref="P:System.Exception.InnerException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f481-170">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and the <see cref="P:System.Exception.InnerException" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f481-171">例外を処理する場合は、内部例外への応答としてスローされる外側の例外を使用して、一連の関連する例外をキャプチャすると便利です。</span><span class="sxs-lookup"><span data-stu-id="8f481-171">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="8f481-172">外側の例外の原因となった内部例外への参照は、 <xref:System.Exception.InnerException%2A>外側の例外のプロパティから取得できます。</span><span class="sxs-lookup"><span data-stu-id="8f481-172">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="8f481-173">このメカニズムでは、元の例外を含む、以前の例外によって発生したエラー情報を保持しながら、より意味のある外部例外を作成することができます。</span><span class="sxs-lookup"><span data-stu-id="8f481-173">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="8f481-174">詳細については、「<xref:System.Exception.InnerException%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-174">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f481-175">次のコード例は、 <xref:System.Web.HttpException.%23ctor%2A> <xref:System.Web.HttpException>クラスのコンストラクターを示しています。</span><span class="sxs-lookup"><span data-stu-id="8f481-175">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="8f481-176">メソッド`CheckNumber`は、ユーザーが入力した値を受け取り、整数かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8f481-176">The `CheckNumber` method accepts a user-entered value and checks whether it is an integer.</span></span> <span data-ttu-id="8f481-177">値が整数でない場合は、例外がスローされます。その後<xref:System.Web.HttpException> 、HTTP 応答ステータスコード、例外のメッセージ、および内部例外を含む新しいオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-177">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object containing the HTTP response status code, the exception's message, and any inner exception is created.</span></span> <span data-ttu-id="8f481-178">この例外は`Button_Click`イベントハンドラーでキャッチされ、エラーメッセージ、エラーコード、および内部例外が表示されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-178">That exception is caught in the `Button_Click` event handler and the error message, error code, and inner exception are displayed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f481-179">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8f481-179">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="8f481-180">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-180">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="8f481-181">詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-181">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor3/CS/httpexception_constructor3.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor3/VB/httpexception_constructor3.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07"><span data-ttu-id="8f481-182">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="8f481-182">Script Exploits Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, int hr);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpException : int * string * int -&gt; System.Web.HttpException" Usage="new System.Web.HttpException (httpCode, message, hr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="httpCode"><span data-ttu-id="8f481-183">クライアントに表示する HTTP 応答ステータス コード。</span><span class="sxs-lookup"><span data-stu-id="8f481-183">The HTTP response status code displayed on the client.</span></span></param>
        <param name="message"><span data-ttu-id="8f481-184">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f481-184">The error message displayed to the client when the exception is thrown.</span></span></param>
        <param name="hr"><span data-ttu-id="8f481-185">エラーを定義する例外コード。</span><span class="sxs-lookup"><span data-stu-id="8f481-185">The exception code that defines the error.</span></span></param>
        <summary><span data-ttu-id="8f481-186">HTTP 応答ステータス コード、エラー メッセージ、および例外コードを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f481-186">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and an exception code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f481-187">次のコード例は、 <xref:System.Web.HttpException.%23ctor%2A> <xref:System.Web.HttpException>クラスのコンストラクターを示しています。</span><span class="sxs-lookup"><span data-stu-id="8f481-187">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="8f481-188">ユーザー名と電子メール情報は、ユーザーが指定したテキストボックスに入力します。</span><span class="sxs-lookup"><span data-stu-id="8f481-188">The user name and email information are entered by the user in the provided text boxes.</span></span> <span data-ttu-id="8f481-189">いずれかのテキストボックスが空白のままになっ<xref:System.Web.HttpException>ている場合は、オブジェクトが作成され、スローされます。</span><span class="sxs-lookup"><span data-stu-id="8f481-189">If any of the text boxes are left blank, an <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="8f481-190">の<xref:System.Web.HttpException>エラーコードは、 <xref:System.Web.HttpException.GetHttpCode%2A>メソッドによって取得され、Web ページに表示されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-190">The error code of the <xref:System.Web.HttpException> is obtained by the <xref:System.Web.HttpException.GetHttpCode%2A> method and displayed on the Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f481-191">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8f481-191">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="8f481-192">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-192">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="8f481-193">詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-193">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor/CS/httpexception_constructor5.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor/VB/httpexception_constructor5.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
        <related type="Article" href="https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07"><span data-ttu-id="8f481-194">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="8f481-194">Script Exploits Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromLastError">
      <MemberSignature Language="C#" Value="public static System.Web.HttpException CreateFromLastError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpException CreateFromLastError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.CreateFromLastError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLastError (message As String) As HttpException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpException ^ CreateFromLastError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member CreateFromLastError : string -&gt; System.Web.HttpException" Usage="System.Web.HttpException.CreateFromLastError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpException</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8f481-195">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8f481-195">The error message displayed to the client when the exception is thrown.</span></span></param>
        <summary><span data-ttu-id="8f481-196">Windows API <see langword="GetLastError()" /> メソッドから返されるエラー コードに基づいて、新しい <see cref="T:System.Web.HttpException" /> 例外を作成します。</span><span class="sxs-lookup"><span data-stu-id="8f481-196">Creates a new <see cref="T:System.Web.HttpException" /> exception based on the error code that is returned from the Windows API <see langword="GetLastError()" /> method.</span></span></summary>
        <returns><span data-ttu-id="8f481-197">Windows API <see langword="GetLastError()" /> メソッドを呼び出して返されるエラー コードに基づく <see cref="T:System.Web.HttpException" />。</span><span class="sxs-lookup"><span data-stu-id="8f481-197">An <see cref="T:System.Web.HttpException" /> based on the error code that is returned from a call to the Windows API <see langword="GetLastError()" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHtmlErrorMessage">
      <MemberSignature Language="C#" Value="public string GetHtmlErrorMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetHtmlErrorMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHtmlErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHtmlErrorMessage () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetHtmlErrorMessage();" />
      <MemberSignature Language="F#" Value="member this.GetHtmlErrorMessage : unit -&gt; string" Usage="httpException.GetHtmlErrorMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f481-198">クライアントに返す HTML エラー メッセージを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f481-198">Gets the HTML error message to return to the client.</span></span></summary>
        <returns><span data-ttu-id="8f481-199">HTML エラー メッセージ</span><span class="sxs-lookup"><span data-stu-id="8f481-199">The HTML error message.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpCode">
      <MemberSignature Language="C#" Value="public int GetHttpCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHttpCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHttpCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHttpCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHttpCode();" />
      <MemberSignature Language="F#" Value="member this.GetHttpCode : unit -&gt; int" Usage="httpException.GetHttpCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f481-200">クライアントに返す HTTP 応答ステータス コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f481-200">Gets the HTTP response status code to return to the client.</span></span></summary>
        <returns><span data-ttu-id="8f481-201">例外または <see cref="P:System.Exception.InnerException" /> コードを表す 0 以外の HTTP コード。それ以外の場合、HTTP 応答ステータス コード 500。</span><span class="sxs-lookup"><span data-stu-id="8f481-201">A non-zero HTTP code representing the exception or the <see cref="P:System.Exception.InnerException" /> code; otherwise, HTTP response status code 500.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f481-202">0以外の HTTP コードがある場合は、それが返されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-202">If there is a non-zero HTTP code, it is returned.</span></span> <span data-ttu-id="8f481-203">それ以外の<xref:System.Exception.InnerException%2A>場合は、コードが返されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-203">Otherwise, the <xref:System.Exception.InnerException%2A> code is returned.</span></span> <span data-ttu-id="8f481-204"><xref:System.Exception.InnerException%2A>コードもゼロ以外の http コードも使用できない場合は、http 応答ステータスコード500が返されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-204">If neither an <xref:System.Exception.InnerException%2A> code nor a non-zero HTTP code is available, the HTTP response status code 500 is returned.</span></span> <span data-ttu-id="8f481-205">HTTP 応答の状態コードの詳細については、World [Wide Web コンソーシアム (W3C) の web サイト](https://go.microsoft.com/fwlink/?linkid=37125)にあるハイパーテキスト転送プロトコル http/1.1 の状態コードの定義を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f481-205">For more information on HTTP response status codes, see the Status Code Definitions of the Hypertext Transfer Protocol - HTTP/1.1 on the World [Wide Web Consortium (W3C) Web site](https://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="httpException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8f481-206">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span><span class="sxs-lookup"><span data-stu-id="8f481-206">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="8f481-207">転送元または転送先に関するコンテキスト情報を保持している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span><span class="sxs-lookup"><span data-stu-id="8f481-207">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="8f481-208">例外に関する情報を取得して、<see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="8f481-208">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f481-209">メソッド<xref:System.Web.HttpException.GetObjectData%2A>は、シリアル化の対象となる<xref:System.Runtime.Serialization.SerializationInfo>オブジェクトに例外に関する情報を追加します。</span><span class="sxs-lookup"><span data-stu-id="8f481-209">The <xref:System.Web.HttpException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="8f481-210">逆シリアル化中に、ストリームで転送<xref:System.Runtime.Serialization.SerializationInfo>されたから例外が再構成されます。</span><span class="sxs-lookup"><span data-stu-id="8f481-210">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="8f481-211">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="8f481-211">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WebEventCode">
      <MemberSignature Language="C#" Value="public int WebEventCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WebEventCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpException.WebEventCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebEventCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WebEventCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.WebEventCode : int" Usage="System.Web.HttpException.WebEventCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f481-212">HTTP 例外に関連付けられているイベント コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f481-212">Gets the event codes that are associated with the HTTP exception.</span></span></summary>
        <value><span data-ttu-id="8f481-213">Web イベント コードを表す整数。</span><span class="sxs-lookup"><span data-stu-id="8f481-213">An integer representing a Web event code.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
