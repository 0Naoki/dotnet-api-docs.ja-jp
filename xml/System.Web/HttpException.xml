<Type Name="HttpException" FullName="System.Web.HttpException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1864e8fe52f0eb87b7c23fbfe505d15cf9681ede" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HttpException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpException" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpException : System::Runtime::InteropServices::ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="55916-101">HTTP 要求の処理中に発生した例外を説明します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="55916-101">Describes an exception that occurred during the processing of HTTP requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55916-102"><xref:System.Web.HttpException>クラスは ASP.NET 例外情報を生成できるようにする HTTP 固有の例外クラスです。</span><span class="sxs-lookup"><span data-stu-id="55916-102">The <xref:System.Web.HttpException> class is an HTTP-specific exception class that enables ASP.NET to generate exception information.</span></span> <span data-ttu-id="55916-103">スローして、例外の処理の詳細については、次を参照してください。[例外](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735)です。</span><span class="sxs-lookup"><span data-stu-id="55916-103">For more information about throwing and handling exceptions, see [Exceptions](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55916-104">次のコード例を使用する方法を示しています、<xref:System.Web.HttpException>クラスをカスタマイズした例外を発生させます。</span><span class="sxs-lookup"><span data-stu-id="55916-104">The following code example demonstrates how to use the <xref:System.Web.HttpException> class to raise customized exceptions.</span></span> <span data-ttu-id="55916-105">`Button_Click`メソッドを調べ、どのボタンがクリックされたいずれかを呼び出し、`CheckNumber`または`CheckBoolean`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="55916-105">The `Button_Click` method determines which button was clicked, and then calls either the `CheckNumber` or `CheckBoolean` method.</span></span> <span data-ttu-id="55916-106">テキスト ボックスにユーザーが入力した値が必要な型に対応していない場合、<xref:System.Web.HttpException>例外が作成され、エラーの種類に基づいてカスタマイズされたメッセージと共にスローされます。</span><span class="sxs-lookup"><span data-stu-id="55916-106">If the user-entered value in the text box does not correspond to the expected type, an <xref:System.Web.HttpException> exception is created and thrown with a customized message based on the error type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55916-107">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="55916-107">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="55916-108">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="55916-108">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="55916-109">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-109">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException/cs/httpexceptioncs.aspx#1)]
 [!code-aspx-vb[HttpException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException/vb/httpexceptionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="55916-110">
            <see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-110">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55916-111">
            <see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化し、空の <see cref="T:System.Web.HttpException" /> オブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-111">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class and creates an empty <see cref="T:System.Web.HttpException" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55916-112">例外を処理する場合は、一連の内部例外への応答でスローされた外側の例外に関連する例外をキャプチャすると便利ですができます。</span><span class="sxs-lookup"><span data-stu-id="55916-112">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="55916-113">外側の例外の原因となった内部例外への参照がから利用可能な<xref:System.Exception.InnerException%2A>外側の例外のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="55916-113">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="55916-114">このメカニズムでは、意味のある例外を作成するときに元の例外を含む、以前の例外で示されているエラー情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="55916-114">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="55916-115">詳細については、「<xref:System.Exception.InnerException%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-115">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55916-116">次のコード例を示しています、<xref:System.Web.HttpException.%23ctor%2A>のコンス トラクター、<xref:System.Web.HttpException>クラスです。</span><span class="sxs-lookup"><span data-stu-id="55916-116">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="55916-117">`CheckNumber`メソッドは、テキスト ボックスでユーザーが入力した値を受け取り、これは、整数であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="55916-117">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="55916-118">値が整数でない場合、例外がスローされますとし、新しい<xref:System.Web.HttpException>オブジェクトが作成され、スローされます。</span><span class="sxs-lookup"><span data-stu-id="55916-118">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="55916-119">例外がキャッチされたこと、`Button_Click`イベント ハンドラーと、エラー メッセージは、ブラウザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="55916-119">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55916-120">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="55916-120">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="55916-121">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="55916-121">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="55916-122">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-122">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor1/CS/httpexception_constructor1.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor1/VB/httpexception_constructor1.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="55916-123">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-123">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55916-124">指定したエラー メッセージを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-124">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using a supplied error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55916-125">次のコード例を示しています、<xref:System.Web.HttpException.%23ctor%2A>のコンス トラクター、<xref:System.Web.HttpException>クラスです。</span><span class="sxs-lookup"><span data-stu-id="55916-125">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="55916-126"><xref:System.Web.HttpException>が、ユーザーが入力した値が 0 の場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="55916-126">An <xref:System.Web.HttpException> is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55916-127">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="55916-127">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="55916-128">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="55916-128">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="55916-129">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-129">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="55916-130">エラーに対応するクライアントに送信された HTTP 応答ステータス コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-130">The HTTP response status code sent to the client corresponding to this error.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="55916-131">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-131">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55916-132">HTTP 応答ステータス コードとエラー メッセージを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-132">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code and an error message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="55916-133">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-133">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="55916-134">転送元または転送先に関するコンテキスト情報を保持している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-134">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55916-135">シリアル化したデータを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-135">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55916-136"><xref:System.Web.HttpException.%23ctor%2A>コンス トラクターは、ストリームを介して送信される例外オブジェクトを再構成する逆シリアル化中に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="55916-136">The <xref:System.Web.HttpException.%23ctor%2A> constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span> <span data-ttu-id="55916-137">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)です。</span><span class="sxs-lookup"><span data-stu-id="55916-137">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="55916-138">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-138">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="55916-139">現在の例外をスローした <see cref="P:System.Exception.InnerException" /> (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-139">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55916-140">エラー メッセージと <see cref="T:System.Web.HttpException" /> プロパティを使用して、<see cref="P:System.Exception.InnerException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-140">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55916-141">例外を処理する場合は、一連の内部例外への応答でスローされた外側の例外に関連する例外をキャプチャすると便利ですができます。</span><span class="sxs-lookup"><span data-stu-id="55916-141">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="55916-142">外側の例外の原因となった内部例外への参照がから利用可能な<xref:System.Exception.InnerException%2A>外側の例外のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="55916-142">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="55916-143">このメカニズムでは、意味のある例外を作成するときに元の例外を含む、以前の例外で示されているエラー情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="55916-143">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="55916-144">詳細については、「<xref:System.Exception.InnerException%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-144">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55916-145">次のコード例を示しています、<xref:System.Web.HttpException.%23ctor%2A>のコンス トラクター、<xref:System.Web.HttpException>クラスです。</span><span class="sxs-lookup"><span data-stu-id="55916-145">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="55916-146">`CheckNumber`メソッドは、テキスト ボックスでユーザーが入力した値を受け取り、これは、整数であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="55916-146">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="55916-147">値が整数でない場合、例外がスローされます、しの catch ブロックで新しい<xref:System.Web.HttpException>オブジェクトが作成され、スローされます。</span><span class="sxs-lookup"><span data-stu-id="55916-147">If the value is not an integer, an exception is thrown, and then in the catch block, a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="55916-148">例外がキャッチされたこと、`Button_Click`イベント ハンドラーと、エラー メッセージは、ブラウザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="55916-148">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55916-149">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="55916-149">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="55916-150">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="55916-150">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="55916-151">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-151">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor2/CS/httpexception_constructor2.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor2/VB/httpexception_constructor2.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, int hr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="55916-152">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-152">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="hr">
          <span data-ttu-id="55916-153">エラーを定義する例外コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-153">The exception code that defines the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55916-154">エラー メッセージと例外コードを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-154">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and an exception code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55916-155">次のコード例を示しています、<xref:System.Web.HttpException.%23ctor%2A>のコンス トラクター、<xref:System.Web.HttpException>クラスです。</span><span class="sxs-lookup"><span data-stu-id="55916-155">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="55916-156"><xref:System.Web.HttpException>ユーザーが入力した値が 0 の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="55916-156">An <xref:System.Web.HttpException> exception is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55916-157">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="55916-157">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="55916-158">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="55916-158">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="55916-159">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-159">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="55916-160">クライアントに表示する HTTP 応答ステータス コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-160">The HTTP response status code displayed on the client.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="55916-161">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-161">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="55916-162">現在の例外をスローした <see cref="P:System.Exception.InnerException" /> (存在する場合)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-162">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55916-163">HTTP 応答ステータス コード、エラー メッセージ、および <see cref="T:System.Web.HttpException" /> プロパティを使用して、<see cref="P:System.Exception.InnerException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-163">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55916-164">例外を処理する場合は、一連の内部例外への応答でスローされた外側の例外に関連する例外をキャプチャすると便利ですができます。</span><span class="sxs-lookup"><span data-stu-id="55916-164">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="55916-165">外側の例外の原因となった内部例外への参照がから利用可能な<xref:System.Exception.InnerException%2A>外側の例外のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="55916-165">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="55916-166">このメカニズムでは、意味のある例外を作成するときに元の例外を含む、以前の例外で示されているエラー情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="55916-166">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="55916-167">詳細については、「<xref:System.Exception.InnerException%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-167">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55916-168">次のコード例を示しています、<xref:System.Web.HttpException.%23ctor%2A>のコンス トラクター、<xref:System.Web.HttpException>クラスです。</span><span class="sxs-lookup"><span data-stu-id="55916-168">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="55916-169">`CheckNumber`メソッドは、ユーザーが入力した値を受け取り、これは、整数であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="55916-169">The `CheckNumber` method accepts a user-entered value and checks whether it is an integer.</span></span> <span data-ttu-id="55916-170">値が整数でない場合、例外がスローされますとし、新しい<xref:System.Web.HttpException>HTTP 応答のステータス コード、例外のメッセージと内部例外を含むオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="55916-170">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object containing the HTTP response status code, the exception's message, and any inner exception is created.</span></span> <span data-ttu-id="55916-171">例外がキャッチされたこと、`Button_Click`イベント ハンドラーと、エラー メッセージ、エラー コード、および内部例外が表示されます。</span><span class="sxs-lookup"><span data-stu-id="55916-171">That exception is caught in the `Button_Click` event handler and the error message, error code, and inner exception are displayed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55916-172">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="55916-172">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="55916-173">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="55916-173">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="55916-174">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-174">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor3/CS/httpexception_constructor3.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor3/VB/httpexception_constructor3.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, int hr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="55916-175">クライアントに表示する HTTP 応答ステータス コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-175">The HTTP response status code displayed on the client.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="55916-176">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-176">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="hr">
          <span data-ttu-id="55916-177">エラーを定義する例外コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-177">The exception code that defines the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55916-178">HTTP 応答ステータス コード、エラー メッセージ、および例外コードを使用して、<see cref="T:System.Web.HttpException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-178">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and an exception code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="55916-179">次のコード例を示しています、<xref:System.Web.HttpException.%23ctor%2A>のコンス トラクター、<xref:System.Web.HttpException>クラスです。</span><span class="sxs-lookup"><span data-stu-id="55916-179">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="55916-180">ユーザー名と電子メールの情報は、指定されたテキスト ボックスにユーザーが入力しました。</span><span class="sxs-lookup"><span data-stu-id="55916-180">The user name and email information are entered by the user in the provided text boxes.</span></span> <span data-ttu-id="55916-181">任意のテキスト ボックスは空白のまま場合、<xref:System.Web.HttpException>オブジェクトが作成され、スローされます。</span><span class="sxs-lookup"><span data-stu-id="55916-181">If any of the text boxes are left blank, an <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="55916-182">エラー コード、<xref:System.Web.HttpException>によって取得された、<xref:System.Web.HttpException.GetHttpCode%2A>メソッドされ、Web ページに表示されます。</span><span class="sxs-lookup"><span data-stu-id="55916-182">The error code of the <xref:System.Web.HttpException> is obtained by the <xref:System.Web.HttpException.GetHttpCode%2A> method and displayed on the Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55916-183">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="55916-183">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="55916-184">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="55916-184">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="55916-185">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="55916-185">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor/CS/httpexception_constructor5.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor/VB/httpexception_constructor5.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromLastError">
      <MemberSignature Language="C#" Value="public static System.Web.HttpException CreateFromLastError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpException CreateFromLastError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.CreateFromLastError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLastError (message As String) As HttpException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpException ^ CreateFromLastError(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpException</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="55916-186">例外がスローされたときに、クライアントに表示するエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-186">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55916-187">Win32 API <see langword="GetLastError()" /> メソッドから返されるエラー コードに基づいて、新しい <see cref="T:System.Web.HttpException" /> 例外を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-187">Creates a new <see cref="T:System.Web.HttpException" /> exception based on the error code that is returned from the Win32 API <see langword="GetLastError()" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55916-188">Win32 API <see langword="GetLastError()" /> メソッドを呼び出して返されるエラー コードに基づく <see cref="T:System.Web.HttpException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-188">An <see cref="T:System.Web.HttpException" /> based on the error code that is returned from a call to the Win32 API <see langword="GetLastError()" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHtmlErrorMessage">
      <MemberSignature Language="C#" Value="public string GetHtmlErrorMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetHtmlErrorMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHtmlErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHtmlErrorMessage () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetHtmlErrorMessage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55916-189">クライアントに返す HTML エラー メッセージを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-189">Gets the HTML error message to return to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55916-190">HTML エラー メッセージ</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-190">The HTML error message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpCode">
      <MemberSignature Language="C#" Value="public int GetHttpCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHttpCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHttpCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHttpCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHttpCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55916-191">クライアントに返す HTTP 応答ステータス コードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-191">Gets the HTTP response status code to return to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55916-192">例外または <see cref="P:System.Exception.InnerException" /> コードを表す 0 以外の HTTP コード。それ以外の場合、HTTP 応答ステータス コード 500。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-192">A non-zero HTTP code representing the exception or the <see cref="P:System.Exception.InnerException" /> code; otherwise, HTTP response status code 500.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55916-193">ゼロ以外の HTTP コードがある場合が返されます。</span><span class="sxs-lookup"><span data-stu-id="55916-193">If there is a non-zero HTTP code, it is returned.</span></span> <span data-ttu-id="55916-194">それ以外の場合、<xref:System.Exception.InnerException%2A>コードが返されます。</span><span class="sxs-lookup"><span data-stu-id="55916-194">Otherwise, the <xref:System.Exception.InnerException%2A> code is returned.</span></span> <span data-ttu-id="55916-195">どちらの場合、<xref:System.Exception.InnerException%2A>コードも 0 以外の HTTP コードは、使用できますが、HTTP 応答状態コード 500 が返されます。</span><span class="sxs-lookup"><span data-stu-id="55916-195">If neither an <xref:System.Exception.InnerException%2A> code nor a non-zero HTTP code is available, the HTTP response status code 500 is returned.</span></span> <span data-ttu-id="55916-196">HTTP 応答のステータス コードの詳細については、ハイパー テキスト転送のプロトコルの世界では、http/1.1 の状態コードの定義を参照してください。 [Wide Web Consortium (W3C) の Web サイト](http://go.microsoft.com/fwlink/?linkid=37125)です。</span><span class="sxs-lookup"><span data-stu-id="55916-196">For more information on HTTP response status codes, see the Status Code Definitions of the Hypertext Transfer Protocol - HTTP/1.1 on the World [Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="55916-197">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-197">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="55916-198">転送元または転送先に関するコンテキスト情報を保持している <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-198">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55916-199">例外に関する情報を取得して、<see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-199">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55916-200"><xref:System.Web.HttpException.GetObjectData%2A>メソッドを追加する例外に関する情報、<xref:System.Runtime.Serialization.SerializationInfo>シリアル化の対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="55916-200">The <xref:System.Web.HttpException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="55916-201">逆シリアル化中に例外が再構成されて、<xref:System.Runtime.Serialization.SerializationInfo>ストリームで送信されます。</span><span class="sxs-lookup"><span data-stu-id="55916-201">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="WebEventCode">
      <MemberSignature Language="C#" Value="public int WebEventCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WebEventCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpException.WebEventCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebEventCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WebEventCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="55916-202">HTTP 例外に関連付けられているイベント コードを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-202">Gets the event codes that are associated with the HTTP exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="55916-203">Web イベント コードを表す整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55916-203">An integer representing a Web event code.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>