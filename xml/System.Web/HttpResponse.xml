<Type Name="HttpResponse" FullName="System.Web.HttpResponse">
  <TypeSignature Language="C#" Value="public sealed class HttpResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpResponse" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpResponse" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpResponse sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b3e7c-101">ASP.NET 操作からの HTTP 応答情報をカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-101">Encapsulates HTTP-response information from an ASP.NET operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-102">メソッドとプロパティの<xref:System.Web.HttpResponse>を通じてクラスが公開される、<xref:System.Web.HttpApplication.Response%2A>のプロパティ、 <xref:System.Web.HttpApplication>、 <xref:System.Web.HttpContext>、 <xref:System.Web.UI.Page>、および<xref:System.Web.UI.UserControl>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-102">The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the <xref:System.Web.HttpApplication.Response%2A> property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="b3e7c-103">次のメソッド、<xref:System.Web.HttpResponse>クラス ポスト バックのシナリオでのみサポートされているし、非同期の投稿ではなくバックアップ シナリオ。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-103">The following methods of the <xref:System.Web.HttpResponse> class are supported only in post back scenarios and not in asynchronous post back scenarios:</span></span>  
  
-   <xref:System.Web.HttpResponse.BinaryWrite%2A>  
  
-   <xref:System.Web.HttpResponse.Clear%2A>  
  
-   <xref:System.Web.HttpResponse.ClearContent%2A>  
  
-   <xref:System.Web.HttpResponse.ClearHeaders%2A>  
  
-   <xref:System.Web.HttpResponse.Close%2A>  
  
-   <xref:System.Web.HttpResponse.End%2A>  
  
-   <xref:System.Web.HttpResponse.Flush%2A>  
  
-   <xref:System.Web.HttpResponse.TransmitFile%2A>  
  
-   <xref:System.Web.HttpResponse.Write%2A>  
  
-   <xref:System.Web.HttpResponse.WriteFile%2A>  
  
-   <xref:System.Web.HttpResponse.WriteSubstitution%2A>  
  
 <span data-ttu-id="b3e7c-104">使用するときに、部分ページ更新が有効になっている<xref:System.Web.UI.UpdatePanel>ポスト バックにページ全体が更新ではなく、ページの選択した地域を更新するコントロール。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-104">Partial-page updates are enabled when you use <xref:System.Web.UI.UpdatePanel> controls to update selected regions of a page instead of updating the whole page with a post back.</span></span> <span data-ttu-id="b3e7c-105">詳細については、次を参照してください。 [UpdatePanel コントロールの概要](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)と[部分ページ レンダリング概要](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-105">For more information, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) and [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-106">次の例は、ページが要求されたときに、重複する 3 つの四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-106">The following example draws three overlapping rectangles when the page is requested.</span></span> <span data-ttu-id="b3e7c-107">設定して、コードの開始、 <xref:System.Web.HttpResponse.ContentType%2A> image/jpeg、プロパティ ページ全体は JPEG 画像としてレンダリングするようにします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-107">The code begins by setting the <xref:System.Web.HttpResponse.ContentType%2A> property to image/jpeg, so that the entire page will be rendered as a JPEG image.</span></span> <span data-ttu-id="b3e7c-108">コードを呼び出すし、<xref:System.Web.HttpResponse.Clear%2A>メソッドをこの応答に不要なコンテンツが送信されなかったことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-108">The code then calls the <xref:System.Web.HttpResponse.Clear%2A> method to ensure that no extraneous content is sent with this response.</span></span> <span data-ttu-id="b3e7c-109">コードを次に、設定、<xref:System.Web.HttpResponse.BufferOutput%2A>プロパティを要求するクライアントに送信される前に、ページが完全に処理できるようにを true にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-109">Next, the code sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the page is completely processed before it is sent to the requesting client.</span></span> <span data-ttu-id="b3e7c-110">四角形の描画に使用する 2 つのオブジェクトが作成されます。<xref:System.Drawing.Bitmap>と<xref:System.Drawing.Graphics>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-110">Two objects used to draw the rectangles are then created: a <xref:System.Drawing.Bitmap> and a <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="b3e7c-111">ページで作成された変数は、四角形と最大の四角形内に表示される文字列を描画する座標として使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-111">The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.</span></span>  
  
 <span data-ttu-id="b3e7c-112">次の 3 つの四角形とその内部に表示される文字列が描画されると、<xref:System.Drawing.Bitmap>に保存される、<xref:System.IO.Stream>オブジェクトに関連付けられている、<xref:System.Web.HttpResponse.OutputStream%2A>プロパティとその形式は jpeg 形式に設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-112">When the three rectangles and the string that appears inside them are drawn, the <xref:System.Drawing.Bitmap> is saved to the <xref:System.IO.Stream> object that is associated with the <xref:System.Web.HttpResponse.OutputStream%2A> property and its format is set to JPEG.</span></span> <span data-ttu-id="b3e7c-113">コードの呼び出し、<xref:System.Drawing.Image.Dispose%2A>と<xref:System.Drawing.Graphics.Dispose%2A>メソッドを 2 つの描画オブジェクトによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-113">The code calls the <xref:System.Drawing.Image.Dispose%2A> and <xref:System.Drawing.Graphics.Dispose%2A> methods to release the resources used by the two drawing objects.</span></span> <span data-ttu-id="b3e7c-114">最後に、コードを呼び出し、<xref:System.Web.HttpResponse.Flush%2A>要求元のクライアントにバッファーされた応答を送信する方法です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-114">Lastly, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the buffered response to the requesting client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3e7c-115">コードでは、<xref:System.Web.HttpResponse>オブジェクトは、キーワードで参照`Response`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-115">In code, the <xref:System.Web.HttpResponse> object is referred to by the keyword `Response`.</span></span> <span data-ttu-id="b3e7c-116">たとえば、`Response.Clear()`を指す、<xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-116">For example, `Response.Clear()` refers to the <xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b3e7c-117"><xref:System.Web.UI.Page>クラス プロパティが含まれるという<xref:System.Web.UI.Page.Response%2A>の現在のインスタンスを公開する<xref:System.Web.HttpResponse>です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-117">The <xref:System.Web.UI.Page> class has a property that is named <xref:System.Web.UI.Page.Response%2A> that exposes the current instance of <xref:System.Web.HttpResponse>.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpResponse (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpResponse(System::IO::TextWriter ^ writer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b3e7c-118">カスタム HTTP 出力を有効にする <see cref="T:System.IO.TextWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-118">A <see cref="T:System.IO.TextWriter" /> object that enables custom HTTP output.</span></span></param>
        <summary><span data-ttu-id="b3e7c-119"><see cref="T:System.Web.HttpResponse" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-119">Initializes a new instance of the <see cref="T:System.Web.HttpResponse" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-120">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-120">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="b3e7c-121">メソッドとプロパティの<xref:System.Web.HttpResponse>クラスは、組み込みを通じて公開される<xref:System.Web.HttpContext.Response%2A>ASP.NET 内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-121">The methods and properties of the <xref:System.Web.HttpResponse> class are exposed through the intrinsic <xref:System.Web.HttpContext.Response%2A> object in ASP.NET.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCacheDependency">
      <MemberSignature Language="C#" Value="public void AddCacheDependency (params System.Web.Caching.CacheDependency[] dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheDependency(class System.Web.Caching.CacheDependency[] dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheDependency (ParamArray dependencies As CacheDependency())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheDependency(... cli::array &lt;System::Web::Caching::CacheDependency ^&gt; ^ dependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dependencies"><span data-ttu-id="b3e7c-122">アプリケーション依存関係のリストに追加するファイル、キャッシュ キー、または <see cref="T:System.Web.Caching.CacheDependency" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-122">A file, cache key, or <see cref="T:System.Web.Caching.CacheDependency" /> to add to the list of application dependencies.</span></span></param>
        <summary><span data-ttu-id="b3e7c-123">応答が出力キャッシュに格納されていて、指定した依存関係が変化した場合、キャッシュ依存関係のセットを応答に関連付け、応答を効率的に無効化します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-123">Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-124"><xref:System.Web.HttpResponse.AddCacheDependency%2A>メソッドにより、キャッシュされた応答の間で作成する依存関係と<xref:System.Web.Caching.CacheDependency>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-124">The <xref:System.Web.HttpResponse.AddCacheDependency%2A> method allows dependencies to be created between cached responses and a <xref:System.Web.Caching.CacheDependency> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-125">次の例を使用してキャッシュの依存関係を作成する方法を示します、<xref:System.Web.HttpResponse.AddCacheDependency%2A>メソッドおよび<xref:System.Web.Caching.CacheDependency>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-125">The following example demonstrates how to create a cache dependency by using the <xref:System.Web.HttpResponse.AddCacheDependency%2A> method and a <xref:System.Web.Caching.CacheDependency> object.</span></span>  
  
 [!code-aspx-csharp[HttpResponse.AddCacheDependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpResponse.AddCacheDependency/CS/httpresponse.addcachedependency_cs.aspx#1)]
 [!code-aspx-vb[HttpResponse.AddCacheDependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpResponse.AddCacheDependency/VB/httpresponse.addcachedependency_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3e7c-126"><paramref name="dependencies" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-126">The <paramref name="dependencies" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-127">キャッシュされた応答が既に作成された後、キャッシュ処理パイプラインでこのメソッドが呼び出されたのが遅すぎました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-127">This method was called too late in the cache processing pipeline, after the cached response was already created.</span></span></exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCacheItemDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-128">キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-128">Makes the validity of a cached response dependent on other items in the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependencies(class System.Collections.ArrayList cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependencies (cacheKeys As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependencies(System::Collections::ArrayList ^ cacheKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="cacheKeys"><span data-ttu-id="b3e7c-129">現在のキャッシュされた応答が依存しているアイテムのキーを格納する <see cref="T:System.Collections.ArrayList" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-129">The <see cref="T:System.Collections.ArrayList" /> that contains the keys of the items that the current cached response is dependent upon.</span></span></param>
        <summary><span data-ttu-id="b3e7c-130">キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-130">Makes the validity of a cached response dependent on other items in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-131">項目が参照されるときに、`cacheKeys`パラメーターは、キャッシュから削除され、現在のアイテムのキャッシュされた応答が無効です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-131">When the items referred to in the `cacheKeys` parameter are removed from the cache, the cached response of the current item is not valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-132">次の例では、ASP.NET ページ出力キャッシュされたを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-132">The following example demonstrates how to use an ASP.NET page that is output cached.</span></span> <span data-ttu-id="b3e7c-133">ページのコードを作成、<xref:System.Collections.ArrayList>に格納されている項目に関連付けられているキーのオブジェクト、<xref:System.Web.Caching.Cache>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-133">The code for the page creates an <xref:System.Collections.ArrayList> object of keys that are associated with items that are stored in the <xref:System.Web.Caching.Cache> object.</span></span> <span data-ttu-id="b3e7c-134">次に、コードを渡します、<xref:System.Collections.ArrayList>への呼び出しでパラメーターとして、<xref:System.Web.HttpResponse.AddCacheItemDependencies%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-134">Next, the code passes the <xref:System.Collections.ArrayList> as the parameter in a call to the <xref:System.Web.HttpResponse.AddCacheItemDependencies%2A> method.</span></span> <span data-ttu-id="b3e7c-135">これにより、出力キャッシュされた応答、有効ではありませんで指定されたファイルのいずれかの場合、<xref:System.Collections.ArrayList>を変更します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-135">This makes the output cached response not valid, if any of the files specified in the <xref:System.Collections.ArrayList> change.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/cacheitemsdepscs.aspx#5)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/cacheitemsdepsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependencies">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependencies (string[] cacheKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependencies(string[] cacheKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependencies (cacheKeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependencies(cli::array &lt;System::String ^&gt; ^ cacheKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="cacheKeys"><span data-ttu-id="b3e7c-136">キャッシュされた応答が依存するアイテム キーの配列。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-136">An array of item keys that the cached response is dependent upon.</span></span></param>
        <summary><span data-ttu-id="b3e7c-137">キャッシュ内の他のアイテムに依存するキャッシュされたアイテムを有効にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-137">Makes the validity of a cached item dependent on another item in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-138">任意のときに、 `cacheKey`s がキャッシュから削除され、現在のアイテムのキャッシュされた応答が無効です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-138">When any of the `cacheKey`s are removed from the cache, the cached response of the current item is invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="AddCacheItemDependency">
      <MemberSignature Language="C#" Value="public void AddCacheItemDependency (string cacheKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCacheItemDependency(string cacheKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCacheItemDependency (cacheKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCacheItemDependency(System::String ^ cacheKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cacheKey"><span data-ttu-id="b3e7c-139">キャッシュされた応答が依存するアイテムのキー。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-139">The key of the item that the cached response is dependent upon.</span></span></param>
        <summary><span data-ttu-id="b3e7c-140">キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-140">Makes the validity of a cached response dependent on another item in the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-141">ときに対応する項目、`cacheKey`パラメーターがキャッシュから削除された、現在のアイテムのキャッシュされた応答が無効です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-141">When the item corresponding to the `cacheKey` parameter is removed from the cache, the cached response of the current item is invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-142">次の例は、出力キャッシュされた ASP.NET ユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-142">The following example is an ASP.NET user control that is output cached.</span></span> <span data-ttu-id="b3e7c-143">コントロールの呼び出しのため、コード、<xref:System.Web.HttpResponse.AddCacheItemDependency%2A>に格納されているアイテムのキーを持つメソッド、<xref:System.Web.Caching.Cache>オブジェクトのパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-143">The code for the control calls the <xref:System.Web.HttpResponse.AddCacheItemDependency%2A> method with the key of an item stored in the <xref:System.Web.Caching.Cache> object passed as its parameter.</span></span> <span data-ttu-id="b3e7c-144">項目がキャッシュに存在しない場合、出力キャッシュに保存されているコントロールの応答が無効になります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-144">If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated.</span></span> <span data-ttu-id="b3e7c-145">これは、後続の要求では、コントロールの応答の新しいバージョンに追加されます、出力キャッシュを意味します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-145">This means that on the subsequent request, a new version of the control's response will be added to the output cache.</span></span>  
  
 <span data-ttu-id="b3e7c-146">次に、このコードは項目に関連付けられているかどうかをチェックする`bookData`にキーが格納されている、`Cache`オブジェクト、および 2 つの行の結果に依存してテキストのいずれかが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-146">Next, the code checks whether an item associated with a `bookData` key is stored in the `Cache` object, and displays one of two lines of text dependent upon the result.</span></span> <span data-ttu-id="b3e7c-147">コードを設定し、<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>のプロパティ、<xref:System.Web.UI.WebControls.DataGrid>と呼ばれるコントロール`dgBooks`、カスタムへの呼び出しに`DataHelper`クラスの共有`GetBookData`メソッドを取り込んで、<xref:System.Web.UI.WebControls.DataGrid>で、<xref:System.Web.UI.Control.DataBind%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-147">Then, the code sets the <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property of a <xref:System.Web.UI.WebControls.DataGrid> control, which is named `dgBooks`, with a call to a custom `DataHelper` class' shared `GetBookData` method, and populates the <xref:System.Web.UI.WebControls.DataGrid> with the <xref:System.Web.UI.Control.DataBind%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/bookscs.ascx#3)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/booksvb.ascx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddFileDependencies">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-148">ファイル名のグループを、現在の応答が依存しているファイル名のコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-148">Adds a group of file names to the collection of file names on which the current response is dependent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public void AddFileDependencies (System.Collections.ArrayList filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependencies(class System.Collections.ArrayList filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependencies (filenames As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependencies(System::Collections::ArrayList ^ filenames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="b3e7c-149">追加するファイルのコレクション。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-149">The collection of files to add.</span></span></param>
        <summary><span data-ttu-id="b3e7c-150">ファイル名のグループを、現在の応答が依存しているファイル名のコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-150">Adds a group of file names to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-151">次の例は、出力キャッシュされた ASP.NET ページです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-151">The following example is an ASP.NET page that is output cached.</span></span> <span data-ttu-id="b3e7c-152">ページのコードを作成、<xref:System.Collections.ArrayList>ファイル パス、パスの<xref:System.Collections.ArrayList>への呼び出しでパラメーターとして、<xref:System.Web.HttpResponse.AddFileDependencies%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-152">The code for the page creates an <xref:System.Collections.ArrayList> of file paths, and then passes the <xref:System.Collections.ArrayList> as the parameter in a call to the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method.</span></span> <span data-ttu-id="b3e7c-153">これにより、出力キャッシュされた無効な場合に、応答で指定されたファイルのいずれか、<xref:System.Collections.ArrayList>変更します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-153">This makes the output cached response invalid if any of the files specified in the <xref:System.Collections.ArrayList> changes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/CS/responsefiledepscs.aspx#6)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples2/VB/responsefiledepsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="AddFileDependencies">
      <MemberSignature Language="C#" Value="public void AddFileDependencies (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependencies(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependencies (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependencies(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames"><span data-ttu-id="b3e7c-154">追加するファイルの配列。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-154">An array of files to add.</span></span></param>
        <summary><span data-ttu-id="b3e7c-155">ファイル名の配列を、現在の応答が依存しているファイル名のコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-155">Adds an array of file names to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-156">次の例では、ファイル名の配列、<xref:System.Web.HttpResponse.AddFileDependencies%2A>ファイル依存関係の一覧です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-156">The following example adds an array of file names to the <xref:System.Web.HttpResponse.AddFileDependencies%2A> file dependency list.</span></span> <span data-ttu-id="b3e7c-157">ファイルが変更された場合、キャッシュされた応答が無効になります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-157">If the files changes, the cached response is invalidated.</span></span>  
  
 [!code-aspx-csharp[Response.AddFileDependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Response.AddFileDependency/CS/addfiledependency_cs.aspx#1)]
 [!code-aspx-vb[Response.AddFileDependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Response.AddFileDependency/VB/addfiledependency_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFileDependency">
      <MemberSignature Language="C#" Value="public void AddFileDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFileDependency(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddFileDependency(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFileDependency (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFileDependency(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b3e7c-158">追加するファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-158">The name of the file to add.</span></span></param>
        <summary><span data-ttu-id="b3e7c-159">現在の応答が依存しているファイル名のコレクションに、ファイル名を 1 つ追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-159">Adds a single file name to the collection of file names on which the current response is dependent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-160">使用すると、<xref:System.Web.HttpResponse.AddFileDependency%2A>ファイルの依存関係を追加するメソッドを出力キャッシュをプログラムから、または宣言によって指定することも必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-160">When you use the <xref:System.Web.HttpResponse.AddFileDependency%2A> method to add a file dependency, you must also specify output caching programmatically or declaratively.</span></span> <span data-ttu-id="b3e7c-161">たとえば、宣言によって出力キャッシュを指定するには、ディレクティブを使用します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-161">For example, to specify output caching declaratively, use the  directive.</span></span> <span data-ttu-id="b3e7c-162">詳細については、次を参照してください。[する方法: キャッシュ ページの出力ファイルの依存関係を持つ](http://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db)します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-162">For more information, see [How to: Cache Page Output with File Dependencies](http://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-163">次の例は、1 つのファイル名を追加する方法を示します、<xref:System.Web.HttpResponse.AddFileDependency%2A>ファイル依存関係の一覧です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-163">The following example shows how to add a single file name to the <xref:System.Web.HttpResponse.AddFileDependency%2A> file dependency list.</span></span> <span data-ttu-id="b3e7c-164">ファイルが変更された場合、キャッシュされた応答が無効になります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-164">If the file changes, the cached response is invalidated.</span></span>  
  
 [!code-csharp[Classic HttpResponse.AddFileDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AddFileDependency Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AddFileDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AddFileDependency Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHeader">
      <MemberSignature Language="C#" Value="public void AddHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHeader(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b3e7c-165"><c>value</c> を追加する対象となる HTTP ヘッダーの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-165">The name of the HTTP header to add <c>value</c> to.</span></span></param>
        <param name="value"><span data-ttu-id="b3e7c-166">ヘッダーに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-166">The string to add to the header.</span></span></param>
        <summary><span data-ttu-id="b3e7c-167">HTTP ヘッダーを出力ストリームに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-167">Adds an HTTP header to the output stream.</span></span> <span data-ttu-id="b3e7c-168"><see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /> は、ASP の旧バージョンとの互換性のために提供されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-168"><see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /> is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-169"><xref:System.Web.HttpResponse.AddHeader%2A> 同じ<xref:System.Web.HttpResponse.AppendHeader%2A>ASP の旧バージョンと互換性のためだけに提供されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-169"><xref:System.Web.HttpResponse.AddHeader%2A> is the same as <xref:System.Web.HttpResponse.AppendHeader%2A> and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="b3e7c-170">ASP.NET を使用して<xref:System.Web.HttpResponse.AppendHeader%2A>です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-170">With ASP.NET, use <xref:System.Web.HttpResponse.AppendHeader%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnSendingHeaders">
      <MemberSignature Language="C#" Value="public System.Web.ISubscriptionToken AddOnSendingHeaders (Action&lt;System.Web.HttpContext&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.ISubscriptionToken AddOnSendingHeaders(class System.Action`1&lt;class System.Web.HttpContext&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOnSendingHeaders (callback As Action(Of HttpContext)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::ISubscriptionToken ^ AddOnSendingHeaders(Action&lt;System::Web::HttpContext ^&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContext&gt;" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b3e7c-171">コールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-171">The callback method.</span></span></param>
        <summary><span data-ttu-id="b3e7c-172">[.NET Framework 4.5.2 以降のバージョンでのみでサポート]</span><span class="sxs-lookup"><span data-stu-id="b3e7c-172">[Supported in the .NET Framework 4.5.2 and later versions]</span></span>  
  
 <span data-ttu-id="b3e7c-173">この要求に対応する応答ヘッダーを送信する直前に、ASP.NET ランタイムが呼び出すコールバックを登録します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-173">Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</span></span></summary>
        <returns><span data-ttu-id="b3e7c-174">OnSendingHeaders 疑似イベントへのサブスクリプションを表す <see cref="T:System.Web.ISubscriptionToken" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-174">An <see cref="T:System.Web.ISubscriptionToken" /> object that represents the subscription to the OnSendingHeaders pseudo-event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="b3e7c-175">ネイティブ モジュールは最初の応答をフラッシュする場合、AddOnSendingHeaders メソッドは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-175">The AddOnSendingHeaders method is not invoked if the native module flushes the response first.</span></span>  
  
 <span data-ttu-id="b3e7c-176">アプリケーションごとのサブスクリプションではなく、要求ごとのサブスクリプションがあるという点で、擬似イベント OnSendingHeaders は IHttpModule レベル パイプライン イベントとは異なります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-176">The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription.</span></span> <span data-ttu-id="b3e7c-177">意図は、コールバックが応答状態コードを変更することがありますか、応答のクッキーまたはヘッダーを設定することがあります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-177">The intent is that the callback may modify the response status code or may set a response cookie or header.</span></span> <span data-ttu-id="b3e7c-178">その他の使用上の注意と注意事項:</span><span class="sxs-lookup"><span data-stu-id="b3e7c-178">Other usage notes and caveats:</span></span>  
  
-   <span data-ttu-id="b3e7c-179">このメソッドは、IIS 統合パイプライン モード パイプラインで実行時にのみ、および応答ヘッダーは、現在の要求に対するまだ送信されていない場合にのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-179">This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.</span></span>  
  
-   <span data-ttu-id="b3e7c-180">ASP.NET ランタイムでは、スレッドでコールバックが呼び出されるに関して何も保証はされません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-180">The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on.</span></span> <span data-ttu-id="b3e7c-181">たとえば、コールバックが呼び出された同期的にバック グラウンド スレッドでフラッシュのバック グラウンドで実行される場合。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-181">For example, the callback may be invoked synchronously in a background thread if a background flush is being performed.</span></span> <span data-ttu-id="b3e7c-182"><xref:System.Web.HttpContext.Current%2A> このようなスレッドで使用できるは保証されません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-182"><xref:System.Web.HttpContext.Current%2A> is not guaranteed to be available in such a thread.</span></span>  
  
-   <span data-ttu-id="b3e7c-183">コールバックは、または結果をフラッシュが応答エンティティ ボディを処理したり、任意のメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-183">The callback must not call any method that manipulates the response entity body or that results in a flush.</span></span> <span data-ttu-id="b3e7c-184">コールバックを呼び出してはならないなど<xref:System.Web.HttpResponse.Redirect%2A>、そのメソッドが応答エンティティ ボディを操作します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-184">For example, the callback must not call <xref:System.Web.HttpResponse.Redirect%2A>, as that method may manipulate the response entity body.</span></span>  
  
-   <span data-ttu-id="b3e7c-185">コールバックは、実行時間が短い同期コードのみを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-185">The callback must contain only short-running synchronous code.</span></span> <span data-ttu-id="b3e7c-186">非同期操作を呼び出すか、このような操作を待機すると、デッドロック可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-186">Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.</span></span>  
  
-   <span data-ttu-id="b3e7c-187">コールバックが例外をスローする必要がありますいません。それ以外の場合の動作は定義されません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-187">The callback must not throw an exception; otherwise behavior is undefined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendCookie">
      <MemberSignature Language="C#" Value="public void AppendCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="b3e7c-188">出力ストリームに追加する <see cref="T:System.Web.HttpCookie" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-188">The <see cref="T:System.Web.HttpCookie" /> to add to the output stream.</span></span></param>
        <summary><span data-ttu-id="b3e7c-189">HTTP クッキーを組み込みクッキー コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-189">Adds an HTTP cookie to the intrinsic cookie collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-190">次の例では、という名前の新しい cookie`LastVisit`を現在の日付と時刻、cookie の値を設定し、cookie を現在のクッキー コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-190">The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection.</span></span> <span data-ttu-id="b3e7c-191">クッキー コレクションのすべての cookie がクライアントに送信される、`Set-Cookie`の HTTP ヘッダー出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-191">All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.AppendCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AppendCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AppendCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AppendCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-192">HTTP ヘッダーが送信された後にクッキーが追加されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-192">A cookie is appended after the HTTP headers have been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendHeader">
      <MemberSignature Language="C#" Value="public void AppendHeader (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendHeader(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendHeader (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendHeader(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b3e7c-193">出力ストリームに追加する HTTP ヘッダーの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-193">The name of the HTTP header to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="b3e7c-194">ヘッダーに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-194">The string to append to the header.</span></span></param>
        <summary><span data-ttu-id="b3e7c-195">HTTP ヘッダーを出力ストリームに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-195">Adds an HTTP header to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-196">使用する場合、<xref:System.Web.HttpResponse.AppendHeader%2A>キャッシュ固有のヘッダーを送信し、同時にキャッシュ オブジェクト モデルを使用する方法 (<xref:System.Web.HttpResponse.Cache%2A>) をキャッシュに関連する HTTP 応答ヘッダーのキャッシュ ポリシーを設定する (`Cache-Control`、 `Expires`、 `Last-Modified`、 `Pragma`、および`Vary`)、キャッシュのオブジェクト モデルを使用すると、削除された可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-196">If you use the <xref:System.Web.HttpResponse.AppendHeader%2A> method to send cache-specific headers and at the same time use the cache object model (<xref:System.Web.HttpResponse.Cache%2A>) to set cache policy, HTTP response headers that pertain to caching (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, and `Vary`) might be deleted when the cache object model is used.</span></span> <span data-ttu-id="b3e7c-197">この動作は、最も制限の厳しい設定を維持するために ASP.NET を有効します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-197">This behavior enables ASP.NET to maintain the most restrictive settings.</span></span> <span data-ttu-id="b3e7c-198">たとえば、ユーザー コントロールを含むページがあるとします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-198">For example, consider a page that includes user controls.</span></span> <span data-ttu-id="b3e7c-199">これらのコントロールには、キャッシュの競合するポリシーがある、最も制限の厳しいキャッシュ ポリシーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-199">If those controls have conflicting cache policies, the most restrictive cache policy will be used.</span></span> <span data-ttu-id="b3e7c-200">1 つのユーザー コントロールがヘッダーを設定する場合"`Cache-Control: Public`「より制限の厳しいヘッダーを設定して別のユーザー コントロール」`Cache-Control: Private`"への呼び出しを使用して<xref:System.Web.HttpCachePolicy.SetCacheability%2A>、次に、"`Cache-Control: Private`"ヘッダーを応答に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-200">If one user control sets the header "`Cache-Control: Public`" and another user control sets the more restrictive header "`Cache-Control: Private`" via calls to <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, then the "`Cache-Control: Private`" header will be sent with the response.</span></span>  
  
 <span data-ttu-id="b3e7c-201">標準 http/1.1 ヘッダーの一覧で 14、「Header Field Definitions」セクションを参照して、[ハイパー テキスト転送プロトコル--http/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) World Wide Web Consortium (W3C) の Web サイトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-201">For a list of standard HTTP/1.1 headers, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-202">次の例では、<xref:System.Web.HttpResponse.AppendHeader%2A>にカスタム ヘッダーを追加するメソッドを<xref:System.Web.HttpResponse>要求元のクライアントに送信されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-202">The following example calls the <xref:System.Web.HttpResponse.AppendHeader%2A> method to add a custom header to the <xref:System.Web.HttpResponse> object sent to the requesting client.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.AppendHeader_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.AppendHeader_Example/CS/responseappendheader.cs.aspx#1)]
 [!code-vb[System.Web.HttpResponse.AppendHeader_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.AppendHeader_Example/VB/responseappendheader.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-203">HTTP ヘッダーが送信された後にヘッダーが追加されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-203">The header is appended after the HTTP headers have been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendToLog">
      <MemberSignature Language="C#" Value="public void AppendToLog (string param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendToLog(string param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.AppendToLog(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendToLog (param As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendToLog(System::String ^ param);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="param"><span data-ttu-id="b3e7c-204">ログ ファイルに追加するテキスト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-204">The text to add to the log file.</span></span></param>
        <summary><span data-ttu-id="b3e7c-205">カスタム ログ情報をインターネット インフォメーション サービス (IIS: Internet Information Services) ログ ファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-205">Adds custom log information to the Internet Information Services (IIS) log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-206">使用できるように、ログ ファイルに記録する指定した文字列を最初にする必要がありますを有効にした、 **URI クエリ**のオプション、**拡張ログ プロパティ**IIS でのアクティビティ ログに記録する、サイトのダイアログ ボックス。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-206">To allow for the specified string to be recorded in the log file, you first must enable the **URI Query** option of the **Extended Logging Properties** dialog box for the site that you want to log activity for in IIS.</span></span>  
  
 <span data-ttu-id="b3e7c-207">IIS 6.0 で拡張ログをカスタマイズするには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-207">To customize extended logging in IIS 6.0, follow these steps:</span></span>  
  
1.  <span data-ttu-id="b3e7c-208">IIS マネージャーで、ローカル コンピューターのノードを展開し、Web または FTP サイトのフォルダーを展開、Web または FTP サイトを右クリックし、をクリックして**プロパティ**です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-208">In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click **Properties**.</span></span>  
  
2.  <span data-ttu-id="b3e7c-209">クリックして、 **Web または FTP サイト**、タブをクリックし、**ログ記録を有効にする**(既に選択されていない) 場合はチェック ボックスです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-209">Click the **Web or FTP Site** tab, and then select the **Enable logging** check box (if it is not already selected).</span></span>  
  
3.  <span data-ttu-id="b3e7c-210">**アクティブなログ形式**ボックスで、クリックして**W3C 拡張ログ ファイル形式**です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-210">In the **Active log format** box, click **W3C Extended Log File Format**.</span></span>  
  
4.  <span data-ttu-id="b3e7c-211">をクリックして**プロパティ**です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-211">Click **Properties**.</span></span>  
  
5.  <span data-ttu-id="b3e7c-212">をクリックして、 **詳細設定**  タブで、ログ、およびをクリックするプロパティを選択して**OK**です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-212">Click the **Advanced** tab, select the properties that you want to log, and then click **OK**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-213">次の例では、ログに文字列を追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-213">The following example shows how to append a string to the log.</span></span>  
  
 [!code-csharp[Classic HttpResponse.AppendToLog Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.AppendToLog Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.AppendToLog Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.AppendToLog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAppPathModifier">
      <MemberSignature Language="C#" Value="public string ApplyAppPathModifier (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ApplyAppPathModifier(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyAppPathModifier (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ApplyAppPathModifier(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="b3e7c-214">リソースへの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-214">The virtual path to a resource.</span></span></param>
        <summary><span data-ttu-id="b3e7c-215">セッションが <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> セッション状態を使用している場合に、セッション ID を仮想パスに追加し、その ID を組み合わせたパスを返します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-215">Adds a session ID to the virtual path if the session is using <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state and returns the combined path.</span></span> <span data-ttu-id="b3e7c-216"><see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> セッション状態が使用されていない場合、<see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> は元の仮想パスを返します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-216">If <see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /> session state is not used, <see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /> returns the original virtual path.</span></span></summary>
        <returns><span data-ttu-id="b3e7c-217">セッション ID が挿入された <paramref name="virtualPath" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-217">The <paramref name="virtualPath" /> with the session ID inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-218"><xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> 絶対 HREFs を構築するために cookie なしのセッションでのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-218"><xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> is used only with cookieless sessions to construct absolute HREFs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-219">次の例は、という名前の文字列変数を宣言`urlConverted`の結果に設定し、<xref:System.Web.HttpResponse.ApplyAppPathModifier%2A>メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-219">The following example declares a string variable named `urlConverted`, and sets it to the result of an <xref:System.Web.HttpResponse.ApplyAppPathModifier%2A> method call.</span></span> <span data-ttu-id="b3e7c-220">変数の値を渡しますコード、<xref:System.Web.UI.WebControls.HyperLink>コントロールの<xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-220">The code then passes the variable's value to a <xref:System.Web.UI.WebControls.HyperLink> control's <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/responseapppathmodifiercs.aspx#5)]
 [!code-vb[System.Web.HttpResponse_Sample5#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/responseapppathmodifiervb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginFlush(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginFlush (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginFlush(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b3e7c-221">コールバック オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-221">The callback object.</span></span></param>
        <param name="state"><span data-ttu-id="b3e7c-222">応答状態。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-222">The response state.</span></span></param>
        <summary><span data-ttu-id="b3e7c-223">現在バッファリングされているすべての応答をクライアントへ送信します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-223">Sends the currently buffered response to the client.</span></span></summary>
        <returns><span data-ttu-id="b3e7c-224">非同期の結果オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-224">The asynchronous result object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-225">場合、基になる<xref:System.Web.HttpWorkerRequest>オブジェクトが非同期フラッシュ操作をサポートしていると非同期モジュール イベントとは、非同期ハンドラーからこのメソッドを呼び出すのフラッシュ操作を非同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-225">If the underlying <xref:System.Web.HttpWorkerRequest> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously.</span></span> <span data-ttu-id="b3e7c-226">それ以外の場合のフラッシュ操作は同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-226">Otherwise, the flush operation is performed synchronously.</span></span> <span data-ttu-id="b3e7c-227">IIS 6.0 以降の非同期フラッシュはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-227">Asynchronous flush is supported for IIS 6.0 and later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-228">この応答は既に完了しています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-228">The response is already completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinaryWrite">
      <MemberSignature Language="C#" Value="public void BinaryWrite (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BinaryWrite(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub BinaryWrite (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BinaryWrite(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b3e7c-229">出力ストリームに書き込むバイト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-229">The bytes to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="b3e7c-230">HTTP 出力ストリームにバイナリ文字の文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-230">Writes a string of binary characters to the HTTP output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-231">次の例では、バッファーにテキスト ファイルを読み取ってし、バッファー、HTTP 出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-231">The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.BinaryWrite Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.BinaryWrite Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.BinaryWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.BinaryWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-232">応答全体の処理が完了した後に、出力をバッファリングしてから送信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-232">Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-233">クライアントへの出力をバッファリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-233"><see langword="true" /> if the output to client is buffered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-234"><xref:System.Web.HttpResponse.Buffer%2A>時に優先プロパティは廃止されて、<xref:System.Web.HttpResponse.BufferOutput%2A>プロパティ ASP の旧バージョンと互換性のためだけに提供されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-234">The <xref:System.Web.HttpResponse.Buffer%2A> property has been deprecated in favor of the <xref:System.Web.HttpResponse.BufferOutput%2A> property and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="b3e7c-235">ASP.NET を使用して<xref:System.Web.HttpResponse.BufferOutput%2A>です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-235">With ASP.NET, use <xref:System.Web.HttpResponse.BufferOutput%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferOutput">
      <MemberSignature Language="C#" Value="public bool BufferOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BufferOutput" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.BufferOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BufferOutput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-236">ページ全体の処理が完了した後に、出力をバッファリングしてから送信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-236">Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-237">クライアントへの出力をバッファリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-237"><see langword="true" /> if the output to client is buffered; otherwise <see langword="false" />.</span></span> <span data-ttu-id="b3e7c-238">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-238">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-239">次の例のセット、 <xref:System.Web.HttpResponse.ContentType%2A> image/jpeg への応答のプロパティを呼び出し、<xref:System.Web.HttpResponse.Clear%2A>応答に添付し、設定をその他のコンテンツを削除する方法、<xref:System.Web.HttpResponse.BufferOutput%2A>ページ全体ができるように、true にプロパティ任意のコンテンツは、要求するクライアントに送信する前に処理されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-239">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the entire page will be processed before any content is sent to the requesting client.</span></span>  
  
 <span data-ttu-id="b3e7c-240">完全な例では、次を参照してください。、<xref:System.Web.HttpResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-240">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.HttpCachePolicy Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCachePolicy Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As HttpCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCachePolicy ^ Cache { System::Web::HttpCachePolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-241">Web ページのキャッシュ ポリシー (expiration time 句、privacy settings 句、および vary 句) を取得します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-241">Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.</span></span></summary>
        <value><span data-ttu-id="b3e7c-242">現在の応答のキャッシュ ポリシーに関する情報を格納する <see cref="T:System.Web.HttpCachePolicy" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-242">An <see cref="T:System.Web.HttpCachePolicy" /> object that contains information about the caching policy of the current response.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-243">次の例では、現在のキャッシュ ポリシーのプロパティを HTTP 出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-243">The following example writes properties of the current cache policy to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Cache Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cache Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cache Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cache Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheControl">
      <MemberSignature Language="C#" Value="public string CacheControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.CacheControl" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CacheControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-244"><see cref="T:System.Web.HttpCacheability" /> 列挙値の 1 つに一致する <see langword="Cache-Control" /> HTTP ヘッダーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-244">Gets or sets the <see langword="Cache-Control" /> HTTP header that matches one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</span></span></summary>
        <value><span data-ttu-id="b3e7c-245"><see cref="T:System.Web.HttpCacheability" /> 列挙値の文字列表現。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-245">A string representation of the <see cref="T:System.Web.HttpCacheability" /> enumeration value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-246">値は、 `Private`、 `Public`、および`No-Cache`文字列は、引用符で囲む必要があります ("") です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-246">The values for `Private`, `Public`, and `No-Cache` are strings and must be enclosed in quotation marks (" ").</span></span> <span data-ttu-id="b3e7c-247">場合、<xref:System.Web.HttpResponse.CacheControl%2A>のいずれかに一致しない値に設定されて、<xref:System.Web.HttpCacheability>列挙値、<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-247">If the <xref:System.Web.HttpResponse.CacheControl%2A> property is set to a value that does not match one of the <xref:System.Web.HttpCacheability> enumeration values, then an <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="b3e7c-248">場合、<xref:System.Web.HttpResponse.CacheControl%2A>プロパティが設定されていない、応答のキャッシュの設定が に設定されている<xref:System.Web.HttpCacheability.NoCache>です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-248">If the <xref:System.Web.HttpResponse.CacheControl%2A> property is not set, the cacheability of the response is set to <xref:System.Web.HttpCacheability.NoCache>.</span></span>  
  
 <span data-ttu-id="b3e7c-249">`CacheControl`、 <xref:System.Web.HttpResponse.Expires%2A>、および<xref:System.Web.HttpResponse.ExpiresAbsolute%2A>プロパティは推奨されません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-249">The `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> properties have been deprecated.</span></span> <span data-ttu-id="b3e7c-250">代わりのメソッド、<xref:System.Web.HttpCachePolicy>で使用可能なクラス、<xref:System.Web.HttpResponse.Cache%2A>インターネット インフォメーション サービス (IIS) を制御する組み込みのオブジェクトがキャッシュとクライアントのキャッシュを出力します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-250">Instead, the methods of the <xref:System.Web.HttpCachePolicy> class are available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b3e7c-251">文字列値セットが、<see cref="T:System.Web.HttpCacheability" /> 列挙値の 1 つに一致しません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-251">The string value set does not match one of the <see cref="T:System.Web.HttpCacheability" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public string Charset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Charset" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Charset" />
      <MemberSignature Language="VB.NET" Value="Public Property Charset As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Charset { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-252">出力ストリームの HTTP 文字セットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-252">Gets or sets the HTTP character set of the output stream.</span></span></summary>
        <value><span data-ttu-id="b3e7c-253">出力ストリームの HTTP 文字セット。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-253">The HTTP character set of the output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-254">`Charset`プロパティに設定することができます`null`を抑制する状況、HTTP`Content-Type`ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-254">The `Charset` property can be set to `null` to suppress the HTTP `Content-Type` header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-255">次の例では、出力ストリームの文字セットが中央ヨーロッパ言語 (ISO) であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-255">The following example checks whether the character set of the output stream is Central European (ISO).</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.Charset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Charset/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.Charset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Charset/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-256">ヘッダーが送信された後に <see langword="Charset" /> プロパティが設定されました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-256">The <see langword="Charset" /> property was set after headers were sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e7c-257">すべての内容出力をバッファー ストリームから削除します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-257">Clears all content output from the buffer stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-258"><xref:System.Web.HttpResponse.Clear%2A>メソッドでは、ヘッダー情報は消去されません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-258">The <xref:System.Web.HttpResponse.Clear%2A> method does not clear header information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-259">次の例のセット、 <xref:System.Web.HttpResponse.ContentType%2A> image/jpeg への応答のプロパティを呼び出し、<xref:System.Web.HttpResponse.Clear%2A>応答に添付し、設定をその他のコンテンツを削除する方法、<xref:System.Web.HttpResponse.BufferOutput%2A>できるように、[完了] ページは、true にプロパティ任意のコンテンツは、要求するクライアントに送信する前に処理されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-259">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.</span></span>  
  
 <span data-ttu-id="b3e7c-260">完全な例では、次を参照してください。、<xref:System.Web.HttpResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-260">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.ClearHeaders" />
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e7c-261">すべての内容出力をバッファー ストリームから削除します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-261">Clears all content output from the buffer stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-262"><xref:System.Web.HttpResponse.ClearContent%2A>メソッドでは、ヘッダー情報は消去されません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-262">The <xref:System.Web.HttpResponse.ClearContent%2A> method does not clear header information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-263">次の例では、バッファー ストリームからすべてのコンテンツを消去します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-263">The following example clears all content from the buffer stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.ClearContent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.ClearContent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.ClearContent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.ClearContent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpResponse.ClearHeaders" />
      </Docs>
    </Member>
    <Member MemberName="ClearHeaders">
      <MemberSignature Language="C#" Value="public void ClearHeaders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearHeaders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.ClearHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearHeaders ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearHeaders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e7c-264">バッファー ストリームからすべてのヘッダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-264">Clears all headers from the buffer stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-265">次の例では、<xref:System.Web.HttpResponse.ClearHeaders%2A>メソッドを現在の応答のヘッダーが送信されないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-265">The following example calls the <xref:System.Web.HttpResponse.ClearHeaders%2A> method to ensure that no headers are sent with the current response.</span></span> <span data-ttu-id="b3e7c-266">この方法は、ASP.NET の応答には、JPEG ファイルなどの画像が生成する場合に特に重要です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-266">This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file.</span></span> <span data-ttu-id="b3e7c-267">この例では、<xref:System.Web.HttpResponse.ContentType%2A>イメージ/jpeg 形式に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-267">In this example the <xref:System.Web.HttpResponse.ContentType%2A> property is set to image/jpeg.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponseclearheaderscs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Sample5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponseclearheadersvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-268">HTTP ヘッダーが送信された後にヘッダーが削除されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-268">Headers are cleared after the HTTP headers have been sent.</span></span></exception>
        <altmember cref="M:System.Web.HttpResponse.ClearContent" />
      </Docs>
    </Member>
    <Member MemberName="ClientDisconnectedToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken ClientDisconnectedToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken ClientDisconnectedToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ClientDisconnectedToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientDisconnectedToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken ClientDisconnectedToken { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-269">クライアントの接続が切断されるとトリップされる <see cref="T:System.Threading.CancellationToken" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-269">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when the client disconnects.</span></span></summary>
        <value><span data-ttu-id="b3e7c-270">キャンセル トークン。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-270">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-271">この API は、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-271">This API is thread-safe.</span></span> <span data-ttu-id="b3e7c-272">ただし、キャンセル トークンの使用方法のいくつかの制限があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-272">However, there are some restrictions on how the cancellation token should be used.</span></span> <span data-ttu-id="b3e7c-273">不適切な使用には、競合状態、デッドロック、またはその他の予期しない動作をする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-273">Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior.</span></span> <span data-ttu-id="b3e7c-274">次のガイドラインに留意してください。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-274">Keep in mind the following guidelines:</span></span>  
  
-   <span data-ttu-id="b3e7c-275">ASP.NET は、最後の要求のキャンセル トークンの破棄するために 1 つの要求の境界の外側には、この API を呼び出すしないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-275">Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request.</span></span> <span data-ttu-id="b3e7c-276">破棄される前に、トークンは取り消された状態に移行ことの保証はありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-276">There is no guarantee that the token will ever transition to a canceled state before it is disposed.</span></span> <span data-ttu-id="b3e7c-277">たとえば、切断を持つクライアントを使用せず、要求が完了すると場合、最初取り消されたことがなく、トークンが破棄されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-277">For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.</span></span>  
  
-   <span data-ttu-id="b3e7c-278">待機しない、<xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType>ように、この非同期通知の目的を達成できないし、デッドロックが発生することができます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-278">Do not wait on the <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.</span></span>  
  
-   <span data-ttu-id="b3e7c-279">呼び出す必要はありません、<xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType>呼び出し元にコールバックするオーバー ロード<xref:System.Threading.SynchronizationContext>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-279">Do not call the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> overloads which invoke the callback on the original <xref:System.Threading.SynchronizationContext> object.</span></span>  
  
-   <span data-ttu-id="b3e7c-280">使用しないで、<xref:System.Web.HttpContext>オブジェクトまたはその他の非スレッド セーフな ASP.NET 組み込みのオブジェクトからに提供されるコールバック内で、<xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-280">Do not use the <xref:System.Web.HttpContext> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b3e7c-281">その他の ASP.NET と同時に、コールバックが実行されている可能性がありますまたはアプリケーション コードです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-281">The callback may be running concurrently with other ASP.NET or application code.</span></span>  
  
-   <span data-ttu-id="b3e7c-282">コールバック メソッドの実行時間が短いと非ブロッキングを保持します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-282">Keep the callback methods short-running and non-blocking.</span></span>  
  
-   <span data-ttu-id="b3e7c-283">コールバック メソッド内から例外がスローされないようにするには、あらゆる努力を確認します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-283">Make every effort to avoid throwing exceptions from within the callback methods.</span></span>  
  
 <span data-ttu-id="b3e7c-284">このプロパティは統合モードでのみインターネット インフォメーション サービス (IIS) 7.5 を適用します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-284">This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode.</span></span> <span data-ttu-id="b3e7c-285">右側の IIS バージョンまたはパイプライン モードを使用せずに実行する場合、<xref:System.PlatformNotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-285">If you invoke it without the right IIS version or pipeline mode, a <xref:System.PlatformNotSupportedException> is thrown.</span></span> <span data-ttu-id="b3e7c-286">IIS のバージョンを確認するに<xref:System.Web.HttpRuntime.IISVersion%2A>です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-286">To determine the IIS version, use <xref:System.Web.HttpRuntime.IISVersion%2A>.</span></span> <span data-ttu-id="b3e7c-287">パイプライン モードを確認するに<xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-287">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e7c-288">クライアントへのソケット接続を閉じます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-288">Closes the socket connection to a client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-289">このメソッドは、急激な方法でクライアントへの接続を終了し、通常の HTTP 要求処理のためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-289">This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing.</span></span> <span data-ttu-id="b3e7c-290">メソッドは、サーバー、クライアント、または削除する間に別の場所で応答データがバッファーに保存される可能性がありますクライアントに、リセット パケットを送信します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-290">The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.</span></span>  
  
 <span data-ttu-id="b3e7c-291">ただし、通常を呼び出す必要があります<xref:System.Web.HttpApplication.CompleteRequest%2A>代わりに身にする場合、<xref:System.Web.HttpApplication.EndRequest>イベントと、クライアントへの応答を送信します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-291">However, typically you should call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead if you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-292">出力ストリームの HTTP 文字セットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-292">Gets or sets the HTTP character set of the output stream.</span></span></summary>
        <value><span data-ttu-id="b3e7c-293">現在の応答の文字セットに関する情報を格納している <see cref="T:System.Text.Encoding" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-293">A <see cref="T:System.Text.Encoding" /> object that contains information about the character set of the current response.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-294">既定の`ContentEncoding`ASP.NET 構成ファイル内に指定することができます、[グローバリゼーション要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)セクションです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-294">Default `ContentEncoding` can be specified in an ASP.NET configuration file in the [globalization Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) section.</span></span> <span data-ttu-id="b3e7c-295">場合<xref:System.Web.HttpResponse.ContentEncoding%2A>が指定されて、クライアントによって既定の構成設定が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-295">If <xref:System.Web.HttpResponse.ContentEncoding%2A> is specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-296">次の例では、文字セットを出力ストリームのエンコーディングの人間が判読できる説明を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-296">The following example writes a human-readable description of the character set encoding to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3e7c-297"><see cref="P:System.Web.HttpResponse.ContentEncoding" /> を <see langword="null" /> に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-297">Attempted to set <see cref="P:System.Web.HttpResponse.ContentEncoding" /> to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-298">出力ストリームの HTTP MIME タイプを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-298">Gets or sets the HTTP MIME type of the output stream.</span></span></summary>
        <value><span data-ttu-id="b3e7c-299">出力ストリームの HTTP MIME タイプ。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-299">The HTTP MIME type of the output stream.</span></span> <span data-ttu-id="b3e7c-300">既定値は "<see langword="text/html" />" です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-300">The default value is "<see langword="text/html" />".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-301">次の例のセット、 <xref:System.Web.HttpResponse.ContentType%2A> image/jpeg への応答のプロパティを呼び出し、<xref:System.Web.HttpResponse.Clear%2A>応答に添付し、設定をその他のコンテンツを削除する方法、<xref:System.Web.HttpResponse.BufferOutput%2A>できるように、[完了] ページは、true にプロパティ任意のコンテンツは、要求するクライアントに送信する前に処理されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-301">The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.</span></span>  
  
 <span data-ttu-id="b3e7c-302">完全な例では、次を参照してください。、<xref:System.Web.HttpResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-302">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#2)]
 [!code-vb[System.Web.HttpResponse_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-303"><see cref="P:System.Web.HttpResponse.ContentType" /> プロパティが <see langword="null" /> に設定されている。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-303">The <see cref="P:System.Web.HttpResponse.ContentType" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-304">応答のクッキー コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-304">Gets the response cookie collection.</span></span></summary>
        <value><span data-ttu-id="b3e7c-305">応答のクッキー コレクション。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-305">The response cookie collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-306">ASP.NET には、2 つの組み込みクッキー コレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-306">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="b3e7c-307">使用してアクセスするコレクション、<xref:System.Web.HttpRequest.Cookies%2A>のコレクション<xref:System.Web.HttpRequest>内のサーバーにクライアントによって送信された cookie が含まれています、`Cookie`ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-307">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="b3e7c-308">使用してアクセスするコレクション、<xref:System.Web.HttpResponse.Cookies%2A>のコレクション<xref:System.Web.HttpResponse>、サーバー上に作成され、クライアントに送信された cookie が含まれています、`Set-Cookie`ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-308">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
 <span data-ttu-id="b3e7c-309">使用して cookie を追加した後、<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType>コレクション、cookie がですぐに使用できる、<xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType>応答がクライアントに送信されていない場合でも、コレクション。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-309">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-310">次の例では、という名前の新しい cookie `LastVisit`、現在の日付と時刻に cookie の値を設定し、cookie を現在のクッキー コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-310">The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection.</span></span> <span data-ttu-id="b3e7c-311">クッキー コレクションのすべての cookie がクライアントに送信される、`Set-Cookie`の HTTP ヘッダー出力ストリーム。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-311">All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableKernelCache">
      <MemberSignature Language="C#" Value="public void DisableKernelCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableKernelCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.DisableKernelCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableKernelCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableKernelCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e7c-312">現在の応答に対するカーネル キャッシュを無効にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-312">Disables kernel caching for the current response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-313">カーネル キャッシュがサポートされていない場合は、このメソッドに効果がありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-313">If kernel caching is not supported, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableUserCache">
      <MemberSignature Language="C#" Value="public void DisableUserCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableUserCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.DisableUserCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableUserCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableUserCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e7c-314">この応答に対する IIS ユーザー モードのキャッシュを無効にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-314">Disables IIS user-mode caching for this response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-315">IIS ユーザー モードのキャッシュがサポートされていない場合、このメソッドは、アクションを実行しないで返します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-315">If IIS user-mode caching is not supported, this method returns without performing any action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void End() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.End" />
      <MemberSignature Language="VB.NET" Value="Public Sub End ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void End();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e7c-316">現在バッファリングされているすべての出力をクライアントへ送信し、ページの実行を停止して、<see cref="E:System.Web.HttpApplication.EndRequest" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-316">Sends all currently buffered output to the client, stops execution of the page, and raises the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-317">このメソッドは ASP との互換性のためだけに提供: は、ASP.NET の前に COM ベースの Web プログラミング テクノロジとの互換性。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-317">This method is provided only for compatibility with ASP—that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET.</span></span> <span data-ttu-id="b3e7c-318">身にする場合、<xref:System.Web.HttpApplication.EndRequest>イベントと、クライアントへの応答の送信、勧めを呼び出す<xref:System.Web.HttpApplication.CompleteRequest%2A>代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-318">If you want to jump ahead to the <xref:System.Web.HttpApplication.EndRequest> event and send a response to the client, it is usually preferable to call <xref:System.Web.HttpApplication.CompleteRequest%2A> instead.</span></span>  
  
 <span data-ttu-id="b3e7c-319">動作を模倣するために、`End`メソッドの ASP では、このメソッドは、生成を試みます、<xref:System.Threading.ThreadAbortException>例外。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-319">To mimic the behavior of the `End` method in ASP, this method tries to raise a <xref:System.Threading.ThreadAbortException> exception.</span></span> <span data-ttu-id="b3e7c-320">この試行が成功した場合は、呼び出し元のスレッドが中止されました、これは、サイトのパフォーマンスを低下させます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-320">If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance.</span></span> <span data-ttu-id="b3e7c-321">その場合、呼び出しの後にコードなしで、<xref:System.Web.HttpResponse.End%2A>メソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-321">In that case, no code after the call to the <xref:System.Web.HttpResponse.End%2A> method is executed.</span></span>  
  
 <span data-ttu-id="b3e7c-322">場合、<xref:System.Web.HttpResponse.End%2A>メソッドを上げることはありません、<xref:System.Threading.ThreadAbortException>に代わりに、応答のバイト数をクライアントにフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-322">If the <xref:System.Web.HttpResponse.End%2A> method is not able to raise a <xref:System.Threading.ThreadAbortException>, it instead flushes the response bytes to the client.</span></span> <span data-ttu-id="b3e7c-323">これは、同期的に、サイトのパフォーマンスに悪影響を及ぼすすることができます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-323">It does this synchronously, which can also be detrimental to your site's performance.</span></span>  
  
 <span data-ttu-id="b3e7c-324">どちらの場合 (かどうか、<xref:System.Threading.ThreadAbortException>例外が発生しました)、応答パイプライン ジャンプ、<xref:System.Web.HttpApplication.EndRequest>イベント。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-324">In either case (whether or not a <xref:System.Threading.ThreadAbortException> exception is successfully raised), the response pipeline jumps ahead to the <xref:System.Web.HttpApplication.EndRequest> event.</span></span>  
  
 <span data-ttu-id="b3e7c-325"><xref:System.Web.HttpApplication.CompleteRequest%2A>メソッドは、例外を発生させるされず、コードの呼び出しの後に、<xref:System.Web.HttpApplication.CompleteRequest%2A>メソッドを実行する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-325">The <xref:System.Web.HttpApplication.CompleteRequest%2A> method does not raise an exception, and code after the call to the <xref:System.Web.HttpApplication.CompleteRequest%2A> method might be executed.</span></span> <span data-ttu-id="b3e7c-326">後続のコードの実行を回避するのには、場合のパフォーマンスの低下<xref:System.Web.HttpResponse.End%2A>は呼び出すことができます、許容<xref:System.Web.HttpResponse.End%2A>の代わりに<xref:System.Web.HttpApplication.CompleteRequest%2A>です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-326">If your intention is to avoid execution of subsequent code, and if the performance penalty of <xref:System.Web.HttpResponse.End%2A> is acceptable, you can call <xref:System.Web.HttpResponse.End%2A> instead of <xref:System.Web.HttpApplication.CompleteRequest%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadAbortException"><span data-ttu-id="b3e7c-327"><see cref="M:System.Web.HttpResponse.End" /> の呼び出しは、現在の要求を終了しました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-327">The call to <see cref="M:System.Web.HttpResponse.End" /> has terminated the current request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public void EndFlush (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndFlush(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndFlush (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndFlush(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b3e7c-328">非同期の結果オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-328">The asynchronous result object.</span></span></param>
        <summary><span data-ttu-id="b3e7c-329">非同期のフラッシュ操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-329">Completes an asynchronous flush operation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3e7c-330">非同期フラッシュはサポートされていません。<paramref name="asyncResult" /> パラメーターは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-330">Asynchronous flush is not supported and the <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b3e7c-331">非同期フラッシュはサポートされていません。<paramref name="asyncResult" /> パラメーターは <c>FlushAsyncResult</c> オブジェクトにキャストできません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-331">Asynchronous flush is not supported and the <paramref name="asyncResult" /> parameter cannot be cast to a <c>FlushAsyncResult</c> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public int Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Expires { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-332">ブラウザーでキャッシュされたページの有効期限が切れるまでの時間を分単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-332">Gets or sets the number of minutes before a page cached on a browser expires.</span></span> <span data-ttu-id="b3e7c-333">有効期限が切れる前にユーザーが同じページに戻った場合、キャッシュされたバージョンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-333">If the user returns to the same page before it expires, the cached version is displayed.</span></span> <span data-ttu-id="b3e7c-334"><see cref="P:System.Web.HttpResponse.Expires" /> は、ASP の旧バージョンとの互換性のために提供されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-334"><see cref="P:System.Web.HttpResponse.Expires" /> is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <value><span data-ttu-id="b3e7c-335">ページの有効期限が切れるまでの分単位の時間。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-335">The number of minutes before the page expires.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-336">`Expires`、<xref:System.Web.HttpResponse.ExpiresAbsolute%2A>と<xref:System.Web.HttpResponse.CacheControl%2A>のメソッドを優先するためのプロパティは推奨されません、<xref:System.Web.HttpCachePolicy>クラスを通じて利用可能な<xref:System.Web.HttpResponse.Cache%2A>インターネット インフォメーション サービス (IIS) を制御する組み込みのオブジェクトがキャッシュとクライアントのキャッシュを出力します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-336">The `Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A> and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresAbsolute">
      <MemberSignature Language="C#" Value="public DateTime ExpiresAbsolute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpiresAbsolute" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.ExpiresAbsolute" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpiresAbsolute As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpiresAbsolute { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-337">キャッシュされた情報をキャッシュから削除する絶対日時を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-337">Gets or sets the absolute date and time at which to remove cached information from the cache.</span></span> <span data-ttu-id="b3e7c-338"><see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /> は、ASP の旧バージョンとの互換性のために提供されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-338"><see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /> is provided for compatibility with earlier versions of ASP.</span></span></summary>
        <value><span data-ttu-id="b3e7c-339">ページの有効期限が切れる日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-339">The date and time at which the page expires.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-340">`ExpiresAbsolute`、 <xref:System.Web.HttpResponse.Expires%2A>、および<xref:System.Web.HttpResponse.CacheControl%2A>のメソッドを優先するためのプロパティは推奨されません、<xref:System.Web.HttpCachePolicy>クラスを通じて利用可能な<xref:System.Web.HttpResponse.Cache%2A>インターネット インフォメーション サービス (IIS) を制御する組み込みのオブジェクトがキャッシュとクライアントのキャッシュを出力します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-340">The `ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, and <xref:System.Web.HttpResponse.CacheControl%2A> properties have been deprecated in favor of the methods of the <xref:System.Web.HttpCachePolicy> class available through the <xref:System.Web.HttpResponse.Cache%2A> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-341">伝送する前に HTTP エンティティ本体を変更するために使用される、ラッピング フィルター オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-341">Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.</span></span></summary>
        <value><span data-ttu-id="b3e7c-342">出力フィルターとして機能する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-342">The <see cref="T:System.IO.Stream" /> object that acts as the output filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-343">作成するときに、`Stream`オブジェクトし、設定、<xref:System.Web.HttpResponse.Filter%2A>プロパティを`Stream`オブジェクト、すべての HTTP によって送信される出力<xref:System.Web.HttpResponse.Write%2A>フィルターを通過します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-343">When you create a `Stream` object and set the <xref:System.Web.HttpResponse.Filter%2A> property to the `Stream` object, all HTTP output sent by <xref:System.Web.HttpResponse.Write%2A> passes through the filter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-344">次の例は、ASP.NET ページを設定する、<xref:System.Web.HttpResponse.Filter%2A>プロパティの新しいインスタンスを`UpperCaseFilter`クラス、カスタム<xref:System.IO.Stream>を大文字に通過するすべてのテキストに変換するクラス。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-344">The following example is an ASP.NET page that sets the <xref:System.Web.HttpResponse.Filter%2A> property to a new instance of the `UpperCaseFilter` class, a custom <xref:System.IO.Stream> class that converts all text that passes through it to uppercase.</span></span> <span data-ttu-id="b3e7c-345">要求に関する情報が、テキスト ファイルに保存し、<xref:System.Web.HttpResponse.Filter%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-345">The information about the request is saved to a text file, and then the <xref:System.Web.HttpResponse.Filter%2A> property is set.</span></span> <span data-ttu-id="b3e7c-346">応答フィルターを配置した後、コードを呼び出し、<xref:System.Web.HttpRequest.MapPath%2A>という名前のテキスト ファイルへの絶対パスを取得するメソッド`TestFile.txt`応答のコンテンツのソースとして機能します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-346">After the response filter is in place, the code calls the <xref:System.Web.HttpRequest.MapPath%2A> method to get the absolute path to a text file named `TestFile.txt` that serves as the source for the content of the response.</span></span> <span data-ttu-id="b3e7c-347">コードは、作成し、新しい<xref:System.IO.StreamReader>を終了するには最初の呼び出しからテキスト ファイルを読み込むため、<xref:System.Web.HttpResponse.Write%2A>ページ上のファイルの内容を表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-347">The code then creates a new <xref:System.IO.StreamReader> object to read the text file from beginning to end, and then calls the <xref:System.Web.HttpResponse.Write%2A> method to display the content of the file on the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-348">このエンティティではフィルター処理を実行できません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-348">Filtering is not allowed with the entity.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e7c-349">現在バッファリングされているすべての出力をクライアントへ送信します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-349">Sends all currently buffered output to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-350">強制的に実行は、クライアントに送信される出力中のすべてをバッファーします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-350">Forces all currently buffered output to be sent to the client.</span></span> <span data-ttu-id="b3e7c-351"><xref:System.Web.HttpResponse.Flush%2A>メソッドは、要求の処理中に複数回呼び出すことがあります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-351">The <xref:System.Web.HttpResponse.Flush%2A> method can be called multiple times during request processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-352">次の例では、<xref:System.Drawing.Graphics.Save%2A>を保存する方法、<xref:System.Drawing.Bitmap>オブジェクトを<xref:System.Web.HttpResponse.OutputStream%2A>プロパティに変換し、イメージ、jpeg 形式に書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-352">The following example calls the <xref:System.Drawing.Graphics.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property and converts the image to the JPEG format.</span></span> <span data-ttu-id="b3e7c-353">コードで、`Dispose`メソッドを<xref:System.Drawing.Bitmap>オブジェクトおよび<xref:System.Drawing.Graphics>使用されていたリソースを解放するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-353">The code then calls the `Dispose` method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using.</span></span> <span data-ttu-id="b3e7c-354">呼び出して、<xref:System.Web.HttpResponse.Flush%2A>要求元のクライアントへの応答のコンテンツを送信するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-354">It then calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.</span></span>  
  
 <span data-ttu-id="b3e7c-355">完全な例では、次を参照してください。、<xref:System.Web.HttpResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-355">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-356">応答が送信された後にキャッシュがフラッシュされています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-356">The cache is flushed after the response has been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b3e7c-357">現在バッファリングされているすべての出力をクライアントへ非同期的に送信します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-357">Asynchronously sends all currently buffered output to the client.</span></span></summary>
        <returns><span data-ttu-id="b3e7c-358">非同期操作を表す <see cref="T:System.Threading.Tasks.Task" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-358">A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeaderEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeaderEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.HeaderEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ HeaderEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-359">現在のヘッダー出力ストリームのエンコーディングを表す <see cref="T:System.Text.Encoding" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-359">Gets or sets an <see cref="T:System.Text.Encoding" /> object that represents the encoding for the current header output stream.</span></span></summary>
        <value><span data-ttu-id="b3e7c-360">現在のヘッダーの文字セットに関する情報が格納されている <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-360">An <see cref="T:System.Text.Encoding" /> that contains information about the character set for the current header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-361"><xref:System.Web.HttpResponse.HeaderEncoding%2A>プロパティは、無効化または変更する機能を提供、<xref:System.Text.Encoding>応答ヘッダーを使用して上のオブジェクト、 <xref:System.Text.ASCIIEncoding>、 <xref:System.Text.UnicodeEncoding>、 <xref:System.Text.UTF7Encoding>、または<xref:System.Text.UTF8Encoding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-361">The <xref:System.Web.HttpResponse.HeaderEncoding%2A> property gives you the ability to disable or change the <xref:System.Text.Encoding> object on a response header by using the <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, or <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="b3e7c-362">既定のエンコーディング値は、<xref:System.Text.UTF8Encoding>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-362">The default encoding value is the <xref:System.Text.UTF8Encoding> class.</span></span>  
  
 <span data-ttu-id="b3e7c-363">型を変更することによって、<xref:System.Web.HttpResponse.HeaderEncoding%2A>プロパティ、する可能性のあるリスクが大きく特定の悪意のある攻撃や、応答ヘッダーを使用して送信する機密性の高いデータの原因です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-363">By changing the type of the <xref:System.Web.HttpResponse.HeaderEncoding%2A> property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header.</span></span> <span data-ttu-id="b3e7c-364">ヘッダー インジェクション攻撃を回避するの一部にすることで、<xref:System.Web.HttpResponse.HeaderEncoding%2A>既定の設定への応答のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-364">Header injection attacks can be avoided, in part, by leaving the <xref:System.Web.HttpResponse.HeaderEncoding%2A> property of a response to the default setting.</span></span> <span data-ttu-id="b3e7c-365">影響を受けるアプリケーションに対する攻撃は、信頼された応答ヘッダーの一部としてデータをエコーでしたです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-365">An attack against a vulnerable application could echo back entrusted data as part of a response header.</span></span> <span data-ttu-id="b3e7c-366">場合、<xref:System.Web.HttpResponse.HeaderEncoding%2A>ヘッダー内の行を継続するか、応答ストリームに送信する前に、ヘッダー データを検証する必要があります任意のヘッダーが信頼されていないデータの結果に基づいて構築される場合に、要件のため無効にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-366">If the <xref:System.Web.HttpResponse.HeaderEncoding%2A> is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3e7c-367">エンコーディング値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-367">The encoding value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-368">エンコーディング値は <see cref="P:System.Text.Encoding.Unicode" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-368">The encoding value is <see cref="P:System.Text.Encoding.Unicode" />.</span></span>  
  
 <span data-ttu-id="b3e7c-369">\- または</span><span class="sxs-lookup"><span data-stu-id="b3e7c-369">\- or -</span></span>  
  
 <span data-ttu-id="b3e7c-370">ヘッダーは既に送信されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-370">The headers have already been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-371">応答ヘッダーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-371">Gets the collection of response headers.</span></span></summary>
        <value><span data-ttu-id="b3e7c-372">応答ヘッダーの <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-372">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of response headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-373"><xref:System.Web.HttpResponse.Headers%2A>プロパティでのみサポートされます、[!INCLUDE[iisver](~/includes/iisver-md.md)]統合パイプライン モードと、少なくとも .NET Framework 3.0。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-373">The <xref:System.Web.HttpResponse.Headers%2A> property is only supported with the [!INCLUDE[iisver](~/includes/iisver-md.md)] integrated pipeline mode and at least the .NET Framework 3.0.</span></span> <span data-ttu-id="b3e7c-374">アクセスしようとすると、<xref:System.Web.HttpResponse.Headers%2A>プロパティと、これら 2 つの条件のいずれかが満たされない、<xref:System.PlatformNotSupportedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-374">When you try to access the <xref:System.Web.HttpResponse.Headers%2A> property and either of these two conditions is not met, a <xref:System.PlatformNotSupportedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b3e7c-375">操作には、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプライン モードと、少なくとも .NET Framework バージョン 3.0 が必要です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-375">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HeadersWritten">
      <MemberSignature Language="C#" Value="public bool HeadersWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HeadersWritten" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.HeadersWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeadersWritten As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HeadersWritten { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-376">[.NET Framework 4.5.2 以降のバージョンでのみでサポート]</span><span class="sxs-lookup"><span data-stu-id="b3e7c-376">[Supported in the .NET Framework 4.5.2 and later versions]</span></span>  
  
 <span data-ttu-id="b3e7c-377">応答ヘッダーが既に作成されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-377">Gets a value indicating whether the response headers have been written.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-378">応答ヘッダーが書き込まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-378"><see langword="true" /> if the response headers have been written; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public bool IsClientConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClientConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.IsClientConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClientConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClientConnected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-379">クライアントがサーバーにまだ接続されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-379">Gets a value indicating whether the client is still connected to the server.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-380">クライアントが現在接続されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-380"><see langword="true" /> if the client is currently connected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-381"><xref:System.Web.HttpResponse.IsClientConnected%2A>プロパティから返される`false`次の条件が当てはまる場合。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-381">The <xref:System.Web.HttpResponse.IsClientConnected%2A> property returns `false` when the following conditions are true:</span></span>  
  
-   <span data-ttu-id="b3e7c-382">クライアントへの接続が終了しました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-382">The connection to the client was terminated.</span></span> <span data-ttu-id="b3e7c-383">これは、場合に発生することができます、<xref:System.Web.HttpResponse.Close%2A>メソッドが呼び出されたか、クライアントが Web ページの実行を停止しているか、別のページを参照します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-383">This can occur if the <xref:System.Web.HttpResponse.Close%2A> method was invoked, or if the client stopped execution of the Web page or browsed to another page.</span></span>  
  
-   <span data-ttu-id="b3e7c-384"><xref:System.Web.HttpWorkerRequest>要求を処理しているオブジェクトが`null`または<xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType>メソッドを返します。`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-384">The <xref:System.Web.HttpWorkerRequest> object that is handling the request is `null` or the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> method returns `false`.</span></span> <span data-ttu-id="b3e7c-385">場合、カスタム<xref:System.Web.HttpWorkerRequest>オブジェクトは、要求を処理し、<xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType>メソッドに設定できるに基づいてカスタム条件。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-385">If a custom <xref:System.Web.HttpWorkerRequest> object handles the request, then the <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType> method might be set based on custom criteria.</span></span> <span data-ttu-id="b3e7c-386">たとえば、カスタム ワーカー要求は、一定時間のタイムアウトを強制する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-386">For example, the custom worker request might force a time-out after a period of time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-387">次の例では、<xref:System.Web.HttpResponse.IsClientConnected%2A>ページを要求しているクライアントがサーバーに接続されているかどうかを確認するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-387">The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server.</span></span> <span data-ttu-id="b3e7c-388">場合<xref:System.Web.HttpResponse.IsClientConnected%2A>が true の場合、コードの呼び出し、<xref:System.Web.HttpResponse.Redirect%2A>メソッド、およびクライアントが別のページに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-388">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page.</span></span> <span data-ttu-id="b3e7c-389">場合<xref:System.Web.HttpResponse.IsClientConnected%2A>が false で、コードを呼び出し、<xref:System.Web.HttpResponse.End%2A>メソッドとページのすべての処理を終了します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-389">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page1cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequestBeingRedirected">
      <MemberSignature Language="C#" Value="public bool IsRequestBeingRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequestBeingRedirected" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.IsRequestBeingRedirected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequestBeingRedirected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequestBeingRedirected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-390">クライアントが新しい場所へ転送されている最中かどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-390">Gets a Boolean value indicating whether the client is being transferred to a new location.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-391">Location 応答ヘッダーの値が現在の場所と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-391"><see langword="true" /> if the value of the location response header is different than the current location; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-392">使用して、<xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A>を持つプロパティ、<xref:System.Web.HttpResponse.RedirectLocation%2A>をテストし、確認するかどうかの絶対 URI であるプロパティ、HTTP でクライアントに送信され`Location`ヘッダーは現在の URI となる新しい意図された URI に転送されるよりも異なります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-392">Use the <xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A> property with the <xref:System.Web.HttpResponse.RedirectLocation%2A> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP `Location` header is different than the current URI and what the new intended URI that is being transferred to will be.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Output">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Output { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Output" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Output" />
      <MemberSignature Language="VB.NET" Value="Public Property Output As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Output { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-393">発信 HTTP 応答ストリームへのテキストの出力を有効にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-393">Enables output of text to the outgoing HTTP response stream.</span></span></summary>
        <value><span data-ttu-id="b3e7c-394">クライアントへのカスタム出力を有効にする <see cref="T:System.IO.TextWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-394">A <see cref="T:System.IO.TextWriter" /> object that enables custom output to the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-395">次の例は、ASP.NET ページが含まれていますが、<xref:System.Web.UI.WebControls.TextBox>を持つコントロールをその<xref:System.Web.UI.WebControls.TextBox.TextMode%2A>プロパティに設定<xref:System.Web.UI.WebControls.TextBoxMode.MultiLine>です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-395">The following example is an ASP.NET page that contains a <xref:System.Web.UI.WebControls.TextBox> control that has its <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> property set to <xref:System.Web.UI.WebControls.TextBoxMode.MultiLine>.</span></span> <span data-ttu-id="b3e7c-396">ページのコードでユーザーが入力したテキストでは、<xref:System.Web.UI.WebControls.TextBox.TextMode%2A>を使用して、<xref:System.Web.HttpServerUtility.HtmlEncode%2A>メソッドを HTML エンコードして、および<xref:System.Web.HttpResponse.Output%2A>ページに、エンコードされた文字列を表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-396">The page's code takes the text that a user enters in the <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>, uses the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method to HTML encode it, and the <xref:System.Web.HttpResponse.Output%2A> property to display the encoded string to the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse.Output_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Output_Sample/CS/responseoutputcs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse.Output_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Output_Sample/VB/responseoutputvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.OutputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ OutputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-397">発信 HTTP コンテンツ本体へのバイナリ出力を有効にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-397">Enables binary output to the outgoing HTTP content body.</span></span></summary>
        <value><span data-ttu-id="b3e7c-398">発信 HTTP コンテンツ本体の生の内容を表す IO <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-398">An IO <see cref="T:System.IO.Stream" /> representing the raw contents of the outgoing HTTP content body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-399">以降、.NET Framework version 2.0 では、使用する場合、<xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>メソッドによって返される IO ストリームのメソッド、<xref:System.Web.HttpResponse.OutputStream%2A>プロパティ、次の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-399">Starting with the .NET Framework version 2.0, when you use the <xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method of the IO stream returned by the <xref:System.Web.HttpResponse.OutputStream%2A> property, the following exceptions might be thrown:</span></span>  
  
-   <span data-ttu-id="b3e7c-400"><xref:System.ArgumentOutOfRangeException>、場合、`offset`または`count`パラメーターが負の値と、`buffer`引いたパラメーターの長さ、`offset`パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-400"><xref:System.ArgumentOutOfRangeException>, if the `offset` or `count` parameter is negative or if the `buffer` parameter's length minus the `offset` parameter is less than or equal to zero.</span></span>  
  
-   <span data-ttu-id="b3e7c-401"><xref:System.ArgumentNullException>、場合、`buffer`パラメーターは`null`します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-401"><xref:System.ArgumentNullException>, if the `buffer` parameter is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-402">次の例では、<xref:System.Drawing.Image.Save%2A>を保存する方法、<xref:System.Drawing.Bitmap>オブジェクトを<xref:System.Web.HttpResponse.OutputStream%2A>プロパティ、および画像を JPEG 形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-402">The following example calls the <xref:System.Drawing.Image.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property, and converts the image to the JPEG format.</span></span> <span data-ttu-id="b3e7c-403">コードは、の Dispose メソッドを呼び出し、<xref:System.Drawing.Bitmap>オブジェクトと<xref:System.Drawing.Graphics>オブジェクト、使用されていたリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-403">The code then calls the Dispose method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using.</span></span> <span data-ttu-id="b3e7c-404">最後に、コードが呼び出され、<xref:System.Web.HttpResponse.Flush%2A>要求元のクライアントへの応答のコンテンツを送信するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-404">Finally, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.</span></span>  
  
 <span data-ttu-id="b3e7c-405">完全な例では、次を参照してください。、<xref:System.Web.HttpResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-405">For a complete example, see the <xref:System.Web.HttpResponse> class.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/CS/responsesamplescs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Samples1/VB/responsesamplesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b3e7c-406"><paramref name="OutputStream" /> が使用できません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-406"><paramref name="OutputStream" /> is not available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Pics">
      <MemberSignature Language="C#" Value="public void Pics (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pics(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Pics(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pics (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pics(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b3e7c-407"><see langword="PICS-Label" /> ヘッダーに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-407">The string to add to the <see langword="PICS-Label" /> header.</span></span></param>
        <summary><span data-ttu-id="b3e7c-408">HTTP <see langword="PICS-Label" /> ヘッダーを出力ストリームに追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-408">Appends a HTTP <see langword="PICS-Label" /> header to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-409">プラットフォームのインターネット コンテンツの選択 (写真) は、コンテンツのラベル付けの World Wide Web Consortium (W3C) 標準です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-409">Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling.</span></span> <span data-ttu-id="b3e7c-410">写真は基本的に、言語規制システムを作成するためです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-410">PICS is essentially a language for creating a ratings system.</span></span>  
  
 <span data-ttu-id="b3e7c-411">任意の値は、写真のラベルを指定できます。ASP.NET では、ラベルは検証しません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-411">Any value can be a PICS label; ASP.NET does not validate the label.</span></span> <span data-ttu-id="b3e7c-412">文字列の最大長は、255 文字です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-412">The maximum length of the string is 255 characters.</span></span> <span data-ttu-id="b3e7c-413">写真の標準と構文の詳細については、次を参照してください。、 [World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) Web サイトです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-413">For more information about PICS standards and syntax, see the [World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-414">次の例は、イメージを表示する ASP.NET ページです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-414">The following example is an ASP.NET page that displays an image.</span></span> <span data-ttu-id="b3e7c-415">ページのコードの呼び出し、 <xref:System.Web.HttpResponse.Pics%2A> HTTP を設定するメソッドを`PICS-Label`応答のヘッダー。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-415">The page code calls the <xref:System.Web.HttpResponse.Pics%2A> method to set the HTTP `PICS-Label` header for the response.</span></span> <span data-ttu-id="b3e7c-416">パラメーターとして渡された文字列、<xref:System.Web.HttpResponse.Pics%2A>メソッドは、インターネット コンテンツ評価サイトを参照) の Web サイトから生成された評価ラベルを表します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-416">The string that is passed as the parameter to the <xref:System.Web.HttpResponse.Pics%2A> method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page2cs.aspx#2)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PushPromise">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-417">promise オブジェクトを昇格させます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-417">Promotes a promised object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public void PushPromise (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushPromise(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.PushPromise(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushPromise (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushPromise(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b3e7c-418">プッシュ要求の URL です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-418">The URL of the push request.</span></span> <span data-ttu-id="b3e7c-419">サーバーがクライアントにプッシュする相対リソースの仮想パスになります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-419">It should be the virtual path of the relative resource that the server wants to push to the client.</span></span></param>
        <summary><span data-ttu-id="b3e7c-420">この API は、プッシュ promise を HTTP 2.0 クライアントに送信する アプリケーションをサポートするためのものです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-420">This API is to support applications sending push promises to HTTP 2.0 clients.</span></span> <span data-ttu-id="b3e7c-421">Http2 サーバー プッシュに関する詳細は、「[HTTP/2 Specification Section 8.2: Server Push (HTTP/2 仕様セクション 8.2: サーバー プッシュ)](https://http2.github.io/http2-spec/#PushResources)」にあります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-421">You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](https://http2.github.io/http2-spec/#PushResources).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-422">PushPromise は非決定的であると、アプリケーションがそれに依存するロジックを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-422">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="b3e7c-423">唯一の目的は、場合によってはパフォーマンスが得られます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-423">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="b3e7c-424">プッシュ要求を完全に無視する原因となる多くの条件 (プロトコルと実装) があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-424">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="b3e7c-425">期待値が、火災忘れたに基づいています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-425">The expectation is based on fire-and-forget.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PushPromise">
      <MemberSignature Language="C#" Value="public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushPromise(string path, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushPromise (path As String, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushPromise(System::String ^ path, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b3e7c-426">プッシュ要求の URL です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-426">The URL of the push request.</span></span> <span data-ttu-id="b3e7c-427">サーバーがクライアントにプッシュする相対リソースの仮想パスになります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-427">It should be the virtual path of the relative resource that the server wants to push to the client.</span></span></param>
        <param name="method"><span data-ttu-id="b3e7c-428">プッシュ要求で使用される http 要求メソッド。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-428">Http request method that would be used by the push request.</span></span></param>
        <param name="headers"><span data-ttu-id="b3e7c-429">プッシュ要求で使用される http 要求ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-429">Http request header that would be used by the push request.</span></span></param>
        <summary><span data-ttu-id="b3e7c-430">この API は、プッシュ promise を HTTP 2.0 クライアントに送信する アプリケーションをサポートするためのものです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-430">This API is to support applications sending push promises to HTTP 2.0 clients.</span></span> <span data-ttu-id="b3e7c-431">Http2 サーバー プッシュに関する詳細は、「[HTTP/2 Specification Section 8.2: Server Push (HTTP/2 仕様セクション 8.2: サーバー プッシュ)](https://http2.github.io/http2-spec/#PushResources)」にあります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-431">You can find more details regarding to Http2 server push at [HTTP/2 Specification Section 8.2: Server Push](https://http2.github.io/http2-spec/#PushResources).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-432">PushPromise は非決定的であると、アプリケーションがそれに依存するロジックを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-432">PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</span></span> <span data-ttu-id="b3e7c-433">唯一の目的は、場合によってはパフォーマンスが得られます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-433">Its only purpose is performance advantage in some cases.</span></span> <span data-ttu-id="b3e7c-434">プッシュ要求を完全に無視する原因となる多くの条件 (プロトコルと実装) があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-434">There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</span></span> <span data-ttu-id="b3e7c-435">期待値が、火災忘れたに基づいています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-435">The expectation is based on fire-and-forget.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Redirect">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-436">クライアントを新しい URL にリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-436">Redirects a client to a new URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Redirect(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redirect (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redirect(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="b3e7c-437">対象となる位置。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-437">The target location.</span></span> <span data-ttu-id="b3e7c-438">アプリケーションの相対仮想パスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-438">This may be an application-relative virtual path.</span></span></param>
        <summary><span data-ttu-id="b3e7c-439">新しい URL に要求をリダイレクトして、新しい URL を指定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-439">Redirects a request to a new URL and specifies the new URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-440">呼び出す<xref:System.Web.HttpResponse.Redirect%2A>は呼び出すことと同じ<xref:System.Web.HttpResponse.Redirect%2A>2 番目のパラメーターを設定して`true`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-440">Calling <xref:System.Web.HttpResponse.Redirect%2A> is equivalent to calling <xref:System.Web.HttpResponse.Redirect%2A> with the second parameter set to `true`.</span></span>  
  
 <span data-ttu-id="b3e7c-441"><xref:System.Web.HttpResponse.Redirect%2A> 呼び出し<xref:System.Web.HttpResponse.End%2A>どのスロー、<xref:System.Threading.ThreadAbortException>完了時に例外です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-441"><xref:System.Web.HttpResponse.Redirect%2A> calls <xref:System.Web.HttpResponse.End%2A> which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span> <span data-ttu-id="b3e7c-442">この例外は、Web アプリケーションのパフォーマンスに悪影響を与えます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-442">This exception has a detrimental effect on Web application performance.</span></span> <span data-ttu-id="b3e7c-443">そのため、ことをお勧めこのオーバー ロードではなくを使用すること、<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>オーバー ロードして渡す`false`の`endResponse`パラメーター、およびを呼び出します、<xref:System.Web.HttpApplication.CompleteRequest%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-443">Therefore, we recommend that instead of this overload you use the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> overload and pass `false` for the `endResponse` parameter, and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method.</span></span> <span data-ttu-id="b3e7c-444">詳細については、<xref:System.Web.HttpResponse.End%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-444">For more information, see the <xref:System.Web.HttpResponse.End%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3e7c-445">モバイル ページに対してのみ場合、アプリケーションが cookie なしのセッションに依存または cookie なしのセッションを必要とするモバイル デバイスから要求を受信する可能性がありますパスにティルダ (~) を使用可能性新しいセッションが作成され、セッション データが失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-445">For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data.</span></span> <span data-ttu-id="b3e7c-446">など、パスを持つモバイル コントロールのプロパティを設定する"~/パス"を使用してパスを解決する<xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>"~/パス"プロパティに割り当てる前にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-446">To set a property on a mobile control with a path such as "~/path", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "~/path" before assigning it to the property.</span></span>  
  
 <span data-ttu-id="b3e7c-447">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-447">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span> <span data-ttu-id="b3e7c-448">別のページにコントロールを転送することも、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-448">An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="b3e7c-449"><xref:System.Web.HttpServerUtility.Transfer%2A>メソッドでは通常より効率的なクライアントのラウンド トリップが発生しません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-449">The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client.</span></span> <span data-ttu-id="b3e7c-450">詳細については、次を参照してください。[する方法: 別のページにユーザーをリダイレクト](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-450">For more information, see [How to: Redirect Users to Another Page](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-451">次の例では、別の Web サイトへのリダイレクトを無条件を強制します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-451">The following example forces an unconditional redirection to another Web site.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Redirect Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Redirect Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Redirect Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Redirect Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-452">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-452">A redirection is attempted after the HTTP headers have been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public void Redirect (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Redirect(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Redirect (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Redirect(System::String ^ url, bool endResponse);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="b3e7c-453">リダイレクト先の場所。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-453">The location of the target.</span></span></param>
        <param name="endResponse"><span data-ttu-id="b3e7c-454">現在のページの実行を終了するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-454">Indicates whether execution of the current page should terminate.</span></span></param>
        <summary><span data-ttu-id="b3e7c-455">クライアントを新しい URL にリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-455">Redirects a client to a new URL.</span></span> <span data-ttu-id="b3e7c-456">新しい URL を指定し、さらに現在のページの実行を終了するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-456">Specifies the new URL and whether execution of the current page should terminate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-457">絶対 URL (たとえば、http://www.contoso.com/default.aspx)またはターゲットの場所の相対 URL (たとえば、Default.aspx) を指定することができますが、一部のブラウザーは相対 URL を拒否することがあります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-457">An absolute URL (for example, http://www.contoso.com/default.aspx) or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.</span></span>  
  
 <span data-ttu-id="b3e7c-458">ときにこのメソッドを使用するページのハンドラーのセットを 1 つのページし、他のページの新しい要求の開始の要求を終了`endResponse`に`false`を呼び出すと、<xref:System.Web.HttpApplication.CompleteRequest%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-458">When you use this method in a page handler to terminate a request for one page and start a new request for another page, set `endResponse` to `false` and then call the <xref:System.Web.HttpApplication.CompleteRequest%2A> method.</span></span> <span data-ttu-id="b3e7c-459">指定する場合`true`の`endResponse`パラメーターでは、このメソッドは、<xref:System.Web.HttpResponse.End%2A>メソッドをスロー、元の要求を<xref:System.Threading.ThreadAbortException>完了時に例外です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-459">If you specify `true` for the `endResponse` parameter, this method calls the <xref:System.Web.HttpResponse.End%2A> method for the original request, which throws a <xref:System.Threading.ThreadAbortException> exception when it completes.</span></span> <span data-ttu-id="b3e7c-460">この例外は渡す理由は、Web アプリケーションのパフォーマンスに悪影響を与えます`false`の`endResponse`パラメーターをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-460">This exception has a detrimental effect on Web application performance, which is why passing `false` for the `endResponse` parameter is recommended.</span></span> <span data-ttu-id="b3e7c-461">詳細については、<xref:System.Web.HttpResponse.End%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-461">For more information, see the <xref:System.Web.HttpResponse.End%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3e7c-462">モバイル ページは、場合は、アプリケーションが cookie なしのセッションに依存または cookie なしのセッションを必要とするモバイル デバイスから要求を受信する可能性がありますを新しいセッションを作成し、セッション データが失われる可能性があることができますパスにティルダ (~) を使用します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-462">For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data.</span></span> <span data-ttu-id="b3e7c-463">など、パスを持つモバイル コントロールのプロパティを設定する"~/パス"を使用してパスを解決する<xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>"~/パス"プロパティに割り当てる前にします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-463">To set a property on a mobile control with a path such as "~/path", resolve the path using <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> "~/path" before assigning it to the property.</span></span>  
  
 <span data-ttu-id="b3e7c-464">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-464">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span> <span data-ttu-id="b3e7c-465">別のページにコントロールを転送することも、<xref:System.Web.HttpServerUtility.Transfer%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-465">An alternative way to transfer control to another page is the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="b3e7c-466"><xref:System.Web.HttpServerUtility.Transfer%2A>メソッドでは通常より効率的なクライアントのラウンド トリップが発生しません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-466">The <xref:System.Web.HttpServerUtility.Transfer%2A> method is typically more efficient because it does not cause a round trip to the client.</span></span> <span data-ttu-id="b3e7c-467">詳細については、次を参照してください。[する方法: 別のページにユーザーをリダイレクト](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-467">For more information, see [How to: Redirect Users to Another Page](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-468">次の例では、<xref:System.Web.HttpResponse.IsClientConnected%2A>ページを要求しているクライアントがサーバーに接続されているかどうかを確認するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-468">The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server.</span></span> <span data-ttu-id="b3e7c-469">場合<xref:System.Web.HttpResponse.IsClientConnected%2A>が true の場合、コードの呼び出し、<xref:System.Web.HttpResponse.Redirect%2A>メソッド、およびクライアントが別のページに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-469">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page.</span></span> <span data-ttu-id="b3e7c-470">場合<xref:System.Web.HttpResponse.IsClientConnected%2A>が false で、コードを呼び出し、<xref:System.Web.HttpResponse.End%2A>メソッドとページのすべての処理を終了します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-470">If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/CS/page1cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample4/VB/page1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b3e7c-471"><paramref name="url" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-471"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b3e7c-472"><paramref name="url" /> に改行文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-472"><paramref name="url" /> contains a newline character.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-473">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-473">A redirection is attempted after the HTTP headers have been sent.</span></span></exception>
        <exception cref="T:System.ApplicationException"><span data-ttu-id="b3e7c-474">ページ要求がコールバックの結果となっています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-474">The page request is the result of a callback.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectLocation">
      <MemberSignature Language="C#" Value="public string RedirectLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RedirectLocation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.RedirectLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RedirectLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-475">HTTP <see langword="Location" /> ヘッダーの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-475">Gets or sets the value of the HTTP <see langword="Location" /> header.</span></span></summary>
        <value><span data-ttu-id="b3e7c-476">HTTP <see langword="Location" /> ヘッダーのクライアントに送信される絶対 URI。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-476">The absolute URI that is transmitted to the client in the HTTP <see langword="Location" /> header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-477">次の例では、このプロパティを使用して HTTP 301 応答コードを使用して永続的なリダイレクトをコーディングする場合、リダイレクト URL を指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-477">The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.</span></span>  
  
```csharp  
Response.StatusCode = 301;  
Response.Status = "301 Moved Permanently";  
Response.RedirectLocation = "http://www.newurl.com ";  
Response.End();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-478">HTTP ヘッダーは既に書き込まれています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-478">The HTTP headers have already been written.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectPermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-479">要求された URL から指定された URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-479">Performs a permanent redirection from a requested URL to a specified URL.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public void RedirectPermanent (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectPermanent(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectPermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectPermanent (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectPermanent(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="b3e7c-480">要求のリダイレクト先の場所。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-480">The location to redirect the request to.</span></span></param>
        <summary><span data-ttu-id="b3e7c-481">要求された URL から指定された URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-481">Performs a permanent redirection from the requested URL to the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-482"><xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29>メソッドのオーバー ロードが応答で 301 HTTP ステータス コードを提供し、要求をリダイレクトする URL を備えています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-482">The <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="b3e7c-483">301 の HTTP ステータス コードとは、HTTP 応答で標準的なコードです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-483">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="b3e7c-484">示して永続的なリダイレクトが存在する場合、リダイレクトの場所が提供されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-484">It indicates that a permanent redirection exists, and it provides the redirection location.</span></span>  
  
 <span data-ttu-id="b3e7c-485">呼び出す、<xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29>メソッドのオーバー ロードは、応答を終了します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-485">Calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29> method overload terminates the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b3e7c-486"><paramref name="url" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-486"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b3e7c-487"><paramref name="url" /> に改行文字 (<c>\n</c>) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-487"><paramref name="url" /> includes a newline character (<c>\n</c>).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public void RedirectPermanent (string url, bool endResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectPermanent(string url, bool endResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectPermanent (url As String, endResponse As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectPermanent(System::String ^ url, bool endResponse);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="endResponse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="b3e7c-488">要求のリダイレクト先の場所。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-488">The location to redirect the request to.</span></span></param>
        <param name="endResponse">
          <span data-ttu-id="b3e7c-489">応答を終了する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-489"><see langword="true" /> to terminate the response; otherwise <see langword="false" />.</span></span> <span data-ttu-id="b3e7c-490">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-490">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b3e7c-491">要求された URL から指定された URL への永続的なリダイレクトを実行し、応答を完了するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-491">Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-492"><xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>メソッドのオーバー ロードが応答で 301 HTTP ステータス コードを提供し、要求をリダイレクトする URL を備えています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-492">The <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</span></span> <span data-ttu-id="b3e7c-493">このメソッドのオーバー ロードには、終了するのか、リダイレクトが行われた後に、応答を完了するかを指定するオプションも用意されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-493">This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed.</span></span> <span data-ttu-id="b3e7c-494">301 の HTTP ステータス コードとは、HTTP 応答で標準的なコードです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-494">A 301 HTTP status code is a standard code in an HTTP response.</span></span> <span data-ttu-id="b3e7c-495">示して永続的なリダイレクトが存在する場合、リダイレクトの場所が提供されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-495">It indicates that a permanent redirection exists, and it provides the redirection location.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b3e7c-496"><paramref name="url" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-496"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b3e7c-497"><paramref name="url" /> に改行文字 (<c>\n</c>) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-497"><paramref name="url" /> includes a newline character (<c>\n</c>).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-498">ルートのパラメーター値とルート名の両方またはいずれかを使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-498">Redirects a request to a new URL by using route parameter values, a route name, or both.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::Object ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="b3e7c-499">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-499">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="b3e7c-500">ルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-500">Redirects a request to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-501">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-501">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-502">呼び出すことと等価である、<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-502">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-503">このメソッドに渡されるオブジェクトは変換`routeValues`を<xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType>オブジェクトを使用して、<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-503">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="b3e7c-504"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> URL を確認するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-504">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="b3e7c-505">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-505">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-506">次の例は名前付きパラメーターを持つルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`productid`と`category`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-506">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoute(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-507">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-507">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-508">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-508">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="b3e7c-509">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-509">The name of the route.</span></span></param>
        <summary><span data-ttu-id="b3e7c-510">ルート名を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-510">Redirects a request to a new URL by using a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-511">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-511">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-512">呼び出すことと等価である、<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-512">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-513">このメソッドは変換されたルート名は、渡された`routeName`を使用して URL を<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-513">This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b3e7c-514">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-514">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-515">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`Products`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-515">The following example shows how to call this method to redirect to a route that is named `Products`.</span></span>  
  
```vb  
Response.RedirectToRoute("Products")  
```  
  
```csharp  
Response.RedirectToRoute("Products");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-516">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-516">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-517">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-517">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="b3e7c-518">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-518">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="b3e7c-519">ルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-519">Redirects a request to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-520">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-520">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-521">呼び出すことと等価である、<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-521">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-522">このメソッドは、 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> URL を確認します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-522">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>  
  
 <span data-ttu-id="b3e7c-523">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-523">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-524">次の例は名前付きパラメーターを持つルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`productid`と`category`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-524">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoute(  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-525">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-525">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-526">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-526">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="b3e7c-527">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-527">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="b3e7c-528">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-528">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="b3e7c-529">ルートのパラメーター値とルート名を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-529">Redirects a request to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-530">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-530">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-531">呼び出すことと等価である、<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-531">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-532">このメソッドに渡されるオブジェクトは変換`routeValues`を<xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType>オブジェクトを使用して、<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-532">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="b3e7c-533"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> URL を確認するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-533">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="b3e7c-534">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-534">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-535">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`Product`は名前付きパラメーターを持つと`productid`と`category`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-535">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoute("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-536">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-536">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-537">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-537">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoute(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoute (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoute(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="b3e7c-538">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-538">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="b3e7c-539">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-539">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="b3e7c-540">ルートのパラメーター値とルート名を使用して、新しい URL に要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-540">Redirects a request to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-541">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-541">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-542">呼び出すことと等価である、<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-542">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-543"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> URL を確認するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-543">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is called to determine the URL.</span></span>  
  
 <span data-ttu-id="b3e7c-544">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-544">ASP.NET performs the redirection by returning a 302 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-545">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`Product`は名前付きパラメーターを持つと`productid`と`category`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-545">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoute("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoute("Product",  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-546">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-546">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-547">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-547">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToRoutePermanent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-548">ルートのパラメーター値とルート名の両方またはいずれかを使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-548">Performs a permanent redirection from a requested URL to a new URL by using route parameter values, a route name, or both.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::Object ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="b3e7c-549">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-549">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="b3e7c-550">ルートのパラメーター値を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-550">Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-551">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-551">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-552">呼び出すことと等価である、<xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-552">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-553">このメソッドに渡されるオブジェクトは変換`routeValues`を<xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType>オブジェクトを使用して、<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-553">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="b3e7c-554"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> URL を確認するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-554">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="b3e7c-555">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-555">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-556">次の例は名前付きパラメーターを持つルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`productid`と`category`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-556">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-557">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-557">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-558">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-558">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="b3e7c-559">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-559">The name of the route.</span></span></param>
        <summary><span data-ttu-id="b3e7c-560">ルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-560">Performs a permanent redirection from a requested URL to a new URL by using a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-561">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-561">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-562">呼び出すことと等価である、<xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-562">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-563">このメソッドは変換されたルート名は、渡された`routeName`を使用して URL を<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-563">This method converts the route name that is passed in `routeName` to a URL by using the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b3e7c-564">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-564">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-565">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`Products`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-565">The following example shows how to call this method to redirect to a route that is named `Products`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent("Products")  
```  
  
```csharp  
Response.RedirectToRoutePermanent("Products");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-566">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-566">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-567">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-567">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeValues"><span data-ttu-id="b3e7c-568">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-568">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="b3e7c-569">ルートのパラメーター値を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-569">Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-570">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-570">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-571">呼び出すことと等価である、<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-571">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-572">このメソッドは、 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> URL を確認します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-572">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>  
  
 <span data-ttu-id="b3e7c-573">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-573">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-574">次の例は名前付きパラメーターを持つルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`productid`と`category`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-574">The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent(  
  new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-575">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-575">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-576">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-576">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String, routeValues As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="b3e7c-577">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-577">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="b3e7c-578">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-578">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="b3e7c-579">新しい URL に対応するルートのパラメーター値とルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-579">Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-580">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-580">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-581">呼び出すことと等価である、<xref:System.Web.HttpResponse.RedirectPermanent%2A>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-581">It is equivalent to calling the <xref:System.Web.HttpResponse.RedirectPermanent%2A> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-582">このメソッドに渡されるオブジェクトは変換`routeValues`を<xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType>オブジェクトを使用して、<xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-582">This method converts the object that is passed in `routeValues` to a <xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType> object by using the <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="b3e7c-583"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> URL を確認するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-583">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method is then called to determine the URL.</span></span>  
  
 <span data-ttu-id="b3e7c-584">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-584">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-585">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`Product`は名前付きパラメーターを持つと`productid`と`category`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-585">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-586">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-586">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-587">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-587">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedirectToRoutePermanent(string routeName, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedirectToRoutePermanent (routeName As String, routeValues As RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedirectToRoutePermanent(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName"><span data-ttu-id="b3e7c-588">ルートの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-588">The name of the route.</span></span></param>
        <param name="routeValues"><span data-ttu-id="b3e7c-589">ルートのパラメーター値。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-589">The route parameter values.</span></span></param>
        <summary><span data-ttu-id="b3e7c-590">ルートのパラメーター値とルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-590">Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-591">このメソッドは、コーディングの利便性を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-591">This method is provided for coding convenience.</span></span> <span data-ttu-id="b3e7c-592">呼び出すことと等価である、<xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>に設定する 2 番目のパラメーターを持つメソッド`false`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-592">It is equivalent to calling the <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29> method with the second parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b3e7c-593">このメソッドは、 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> URL を確認します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-593">This method calls the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> method to determine the URL.</span></span>  
  
 <span data-ttu-id="b3e7c-594">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-594">ASP.NET performs the redirection by returning a 301 HTTP status code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-595">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。`Product`は名前付きパラメーターを持つと`productid`と`category`です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-595">The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.</span></span>  
  
```vb  
Response.RedirectToRoutePermanent("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
Response.RedirectToRoutePermanent("Product",  
  new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b3e7c-596">指定されたルート パラメーターに対応するルートがありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-596">No route corresponds to the specified route parameters.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-597">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-597">Redirection was attempted after the HTTP headers had been sent.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveOutputCacheItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-598">既定の出力キャッシュ プロバイダーを使用して、出力キャッシュからキャッシュされたアイテムを削除します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-598">Removes cached items from the output cache by using the default output-cache provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public static void RemoveOutputCacheItem (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveOutputCacheItem(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveOutputCacheItem (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveOutputCacheItem(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b3e7c-599">キャッシュから削除されるアイテムへの仮想絶対パス。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-599">The virtual absolute path to the items that are removed from the cache.</span></span></param>
        <summary><span data-ttu-id="b3e7c-600">既定の出力キャッシュ プロバイダーに関連付けられているキャッシュされたアイテムをすべてキャッシュから削除します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-600">Removes from the cache all cached items that are associated with the default output-cache provider.</span></span> <span data-ttu-id="b3e7c-601">これは静的メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-601">This method is static.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-602">既定の出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-602">Call this method to remove output-cache items that are associated with the default output-cache provider.</span></span> <span data-ttu-id="b3e7c-603">呼び出す、 <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> Web サイトの構成ファイルで指定されているカスタムの出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除する方法です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-603">Call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b3e7c-604"><paramref name="path" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-604"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b3e7c-605"><paramref name="path" /> が絶対仮想パスではありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-605"><paramref name="path" /> is not an absolute virtual path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveOutputCacheItem">
      <MemberSignature Language="C#" Value="public static void RemoveOutputCacheItem (string path, string providerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveOutputCacheItem(string path, string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveOutputCacheItem (path As String, providerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveOutputCacheItem(System::String ^ path, System::String ^ providerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b3e7c-606">キャッシュから削除されるアイテムへの絶対仮想パス。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-606">The virtual absolute path of the items that are removed from the cache.</span></span></param>
        <param name="providerName"><span data-ttu-id="b3e7c-607">指定されたパスに関連付けられている出力キャッシュの成果物を削除するのに使用されるプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-607">The provider that is used to remove the output-cache artifacts that are associated with the specified path.</span></span></param>
        <summary><span data-ttu-id="b3e7c-608">指定された出力キャッシュ プロバイダーを使用して、指定されたパスに関連付けられている出力キャッシュ アイテムをすべて削除します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-608">Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-609">Web サイトの構成ファイルで指定されているカスタム出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-609">Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file.</span></span> <span data-ttu-id="b3e7c-610">既定の出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除するには、呼び出し、<xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-610">To remove output-cache items that are associated with the default output-cache provider, call the <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b3e7c-611"><paramref name="path" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-611"><paramref name="path" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b3e7c-612"><paramref name="path" /> に無効なパスが指定されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-612"><paramref name="path" /> is an invalid path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCookie">
      <MemberSignature Language="C#" Value="public void SetCookie (System.Web.HttpCookie cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCookie(class System.Web.HttpCookie cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCookie (cookie As HttpCookie)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCookie(System::Web::HttpCookie ^ cookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Web.HttpCookie" />
      </Parameters>
      <Docs>
        <param name="cookie"><span data-ttu-id="b3e7c-613">更新するコレクションに存在するクッキー。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-613">The cookie in the collection to be updated.</span></span></param>
        <summary><span data-ttu-id="b3e7c-614"><b>HttpResponse.SetCookie</b> メソッドは内部でのみ使用されるため、コードで呼び出すべきではありません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-614">Because the <b>HttpResponse.SetCookie</b> method is intended for internal use only, you should not call it in your code.</span></span> <span data-ttu-id="b3e7c-615">代わりに、次の例に示すように <b>HttpResponse.Cookies.Set</b> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-615">Instead, you can call the <b>HttpResponse.Cookies.Set</b> method, as the following example shows.</span></span><br /> <span data-ttu-id="b3e7c-616">クッキー コレクションの既存のクッキーを更新します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-616">Updates an existing cookie in the cookie collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-617">次の例では、既存のクッキーの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-617">The following example updates the value of an existing cookie.</span></span>  
  
 [!code-csharp[Classic HttpResponse.SetCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.SetCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.SetCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.SetCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-618">HTTP ヘッダーが送信された後にクッキーの設定が試みられました。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-618">Attempted to set the cookie after the HTTP headers were sent.</span></span></exception>
        <altmember cref="F:System.Net.HttpRequestHeader.Cookie" />
        <altmember cref="T:System.Web.HttpCookie" />
        <altmember cref="T:System.Web.HttpCookieMode" />
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public string Status { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Status" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.Status" />
      <MemberSignature Language="VB.NET" Value="Public Property Status As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Status { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-619">クライアントに返される <see langword="Status" /> ラインを設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-619">Sets the <see langword="Status" /> line that is returned to the client.</span></span></summary>
        <value><span data-ttu-id="b3e7c-620">ステータス コードを設定すると、HTTP 出力のステータスを記述する文字列がクライアントへ返されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-620">Setting the status code causes a string describing the status of the HTTP output to be returned to the client.</span></span> <span data-ttu-id="b3e7c-621">既定値は 200 (OK) です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-621">The default value is 200 (OK).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-622"><xref:System.Web.HttpResponse.Status%2A> 代わりには廃止されて<xref:System.Web.HttpResponse.StatusDescription%2A>ASP の旧バージョンと互換性のためだけに提供されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-622"><xref:System.Web.HttpResponse.Status%2A> has been deprecated in favor of <xref:System.Web.HttpResponse.StatusDescription%2A> and is provided only for compatibility with earlier versions of ASP.</span></span> <span data-ttu-id="b3e7c-623">ASP.NET を使用して<xref:System.Web.HttpResponse.StatusDescription%2A>代わりにします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-623">With ASP.NET, use <xref:System.Web.HttpResponse.StatusDescription%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-624">ステータスが、無効なステータス コードに設定されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-624">Status is set to an invalid status code.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public int StatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.StatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StatusCode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-625">クライアントへ返される出力の HTTP ステータス コードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-625">Gets or sets the HTTP status code of the output returned to the client.</span></span></summary>
        <value><span data-ttu-id="b3e7c-626">クライアントへ返される HTTP 出力のステータスを表す整数。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-626">An Integer representing the status of the HTTP output returned to the client.</span></span> <span data-ttu-id="b3e7c-627">既定値は 200 (OK) です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-627">The default value is 200 (OK).</span></span> <span data-ttu-id="b3e7c-628">有効なステータス コードの一覧については、次を参照してください。 [Http ステータス コード](http://go.microsoft.com/fwlink/?LinkId=73157)です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-628">For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-629">次の例では、出力ストリームの状態コードを確認します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-629">The following example checks the status code of the output stream.</span></span> <span data-ttu-id="b3e7c-630">ステータス コードが 200 と等しくない場合は、追加のコードが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-630">If the status code is not equal to 200, additional code is executed.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.StatusCode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.StatusCode/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.StatusCode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.StatusCode/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b3e7c-631">HTTP ヘッダーが送信された後に、<see cref="P:System.Web.HttpResponse.StatusCode" /> が設定されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-631"><see cref="P:System.Web.HttpResponse.StatusCode" /> is set after the HTTP headers have been sent.</span></span></exception>
        <altmember cref="P:System.Web.HttpResponse.SubStatusCode" />
      </Docs>
    </Member>
    <Member MemberName="StatusDescription">
      <MemberSignature Language="C#" Value="public string StatusDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.StatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property StatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StatusDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-632">クライアントへ返される出力の HTTP ステータス文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-632">Gets or sets the HTTP status string of the output returned to the client.</span></span></summary>
        <value><span data-ttu-id="b3e7c-633">クライアントへ返される HTTP 出力のステータスを記述する文字列。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-633">A string that describes the status of the HTTP output returned to the client.</span></span> <span data-ttu-id="b3e7c-634">既定値は "OK" です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-634">The default value is "OK".</span></span> <span data-ttu-id="b3e7c-635">有効なステータス コードの一覧については、次を参照してください。 [Http ステータス コード](http://go.microsoft.com/fwlink/?LinkId=73157)です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-635">For a listing of valid status codes, see [Http Status Codes](http://go.microsoft.com/fwlink/?LinkId=73157).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-636">次の例では、出力ストリームのステータス文字列を確認します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-636">The following example checks the status string of the output stream.</span></span> <span data-ttu-id="b3e7c-637">状態が"ok"と等しくない場合は、追加のコードが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-637">If the status is not equal to "OK", additional code is executed.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.StatusDescription#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.StatusDescription/cs/default.aspx#1)]
 [!code-vb[System.Web.HttpResponse.StatusDescription#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.StatusDescription/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b3e7c-638">HTTP ヘッダーが送信された後に、<paramref name="StatusDescription" /> が設定されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-638"><paramref name="StatusDescription" /> is set after the HTTP headers have been sent.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b3e7c-639">選択した値の長さが 512 を超えています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-639">The selected value has a length greater than 512.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubStatusCode">
      <MemberSignature Language="C#" Value="public int SubStatusCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubStatusCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SubStatusCode" />
      <MemberSignature Language="VB.NET" Value="Public Property SubStatusCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubStatusCode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-640">応答のステータス コードを修飾する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-640">Gets or sets a value qualifying the status code of the response.</span></span></summary>
        <value><span data-ttu-id="b3e7c-641">[!INCLUDE[iisver](~/includes/iisver-md.md)] のサブステータス コードを表す整数の値。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-641">An integer value that represents the [!INCLUDE[iisver](~/includes/iisver-md.md)] sub status code.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-642"><xref:System.Web.HttpResponse.SubStatusCode%2A>プロパティは、統合パイプライン モードでのみサポートされます[!INCLUDE[iisver](~/includes/iisver-md.md)]と、少なくとも .NET Framework バージョン 3.0。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-642">The <xref:System.Web.HttpResponse.SubStatusCode%2A> property is only supported with the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span> <span data-ttu-id="b3e7c-643">設定すると、<xref:System.Web.HttpResponse.SubStatusCode%2A>プロパティ、状態がログオンして[!INCLUDE[iisver](~/includes/iisver-md.md)]失敗した要求トレースが構成されている場合。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-643">When you set the <xref:System.Web.HttpResponse.SubStatusCode%2A> property, the status is logged on [!INCLUDE[iisver](~/includes/iisver-md.md)] if failed-request tracing is configured.</span></span> <span data-ttu-id="b3e7c-644">トレースを構成するかどうかに関係なく、コードは、要求に最後の応答の一部としては送信されません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-644">Independent of whether tracing is configured, the code is never sent as part of the final response to the request.</span></span> <span data-ttu-id="b3e7c-645">詳細については、次を参照してください。[のトラブルシューティングに失敗しました要求を使用して失敗した要求トレース IIS 7.0 で](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1)です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-645">For more information, see [Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-646">次の例のセット、<xref:System.Web.HttpResponse.SubStatusCode%2A>のイベント ハンドラーのプロパティ、<xref:System.Web.HttpApplication>のインスタンス、<xref:System.Web.HttpApplication.PostAuthenticateRequest>イベント。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-646">The following example sets the <xref:System.Web.HttpResponse.SubStatusCode%2A> property in an event handler for the <xref:System.Web.HttpApplication> instance of the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event.</span></span> <span data-ttu-id="b3e7c-647">コード ファイル、Web アプリケーションの App_Code フォルダーに配置し、モジュールを登録する Web.config ファイルを構成します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-647">Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module.</span></span> <span data-ttu-id="b3e7c-648">詳細については、次を参照してください。[チュートリアル: カスタム HTTP モジュールの登録の作成と](http://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453)です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-648">For more information, see [Walkthrough: Creating and Registering a Custom HTTP Module](http://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453).</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.SubStatusCode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.SubStatusCode/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.SubStatusCode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.SubStatusCode/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b3e7c-649">操作には、[!INCLUDE[iisver](~/includes/iisver-md.md)] の統合パイプライン モードと、少なくとも .NET Framework バージョン 3.0 が必要です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-649">The operation requires the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] and at least the .NET Framework version 3.0.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b3e7c-650">すべての HTTP ヘッダーが送信された後に、ステータス コードが設定されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-650">The status code is set after all HTTP headers have been sent.</span></span></exception>
        <altmember cref="P:System.Web.HttpResponse.StatusCode" />
      </Docs>
    </Member>
    <Member MemberName="SupportsAsyncFlush">
      <MemberSignature Language="C#" Value="public bool SupportsAsyncFlush { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAsyncFlush" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SupportsAsyncFlush" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsAsyncFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsAsyncFlush { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-651">接続が非同期のフラッシュ操作をサポートするかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-651">Gets a value that indicates whether the connection supports asynchronous flush operations.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-652">接続が非同期フラッシュ操作をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-652"><see langword="true" /> if the connection supports asynchronous flush operations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-653">このプロパティの値を返します、<xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-653">This property returns the value of the <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressContent">
      <MemberSignature Language="C#" Value="public bool SuppressContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressContent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-654">HTTP コンテンツをクライアントに送信するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-654">Gets or sets a value indicating whether to send HTTP content to the client.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-655">出力しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-655"><see langword="true" /> to suppress output; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-656">次の例をチェックするかどうか、<xref:System.Web.HttpRequest.IsSecureConnection%2A>プロパティが false に設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-656">The following example checks whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="b3e7c-657">である場合、<xref:System.Web.HttpResponse.SuppressContent%2A>プロパティが送信されてからの応答を停止する場合は true に設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-657">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressDefaultCacheControlHeader">
      <MemberSignature Language="C#" Value="public bool SuppressDefaultCacheControlHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressDefaultCacheControlHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressDefaultCacheControlHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-658">[.NET Framework 4.5.2 以降のバージョンでのみでサポート]</span><span class="sxs-lookup"><span data-stu-id="b3e7c-658">[Supported in the .NET Framework 4.5.2 and later versions]</span></span>  
  
 <span data-ttu-id="b3e7c-659">現在の HTTP 応答に対して既定の <c>Cache Control: private</c> ヘッダーを抑制するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-659">Gets or sets a value indicating whether to suppress the default <c>Cache Control: private</c> header for the current HTTP response.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-660"><see langword="true" /> 既定値を抑制する<c>Cache Control: プライベート</c>の現在の HTTP 応答ヘッダーそれ以外の場合、<see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-660"><see langword="true" /> to suppress the default <c>Cache Control: private</c> header for the current HTTP response; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-661">既定では、ASP.NET の送信、`Cache-Control: private`応答ヘッダーしない限り、この応答には、明示的なキャッシュ ポリシーを指定されています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-661">By default, ASP.NET sends a `Cache-Control: private` response header unless an explicit cache policy has been specified for this response.</span></span> <span data-ttu-id="b3e7c-662">このプロパティは、要求ごとにこの既定の応答ヘッダーを抑制できます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-662">This property allows suppressing this default response header on a per-request basis.</span></span> <span data-ttu-id="b3e7c-663">ヘッダーはまだ設定アプリケーション全体の抑制された<xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>で[httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)または[outputCache 要素 (ASP.NET 設定スキーマ) をキャッシュ用](http://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee)です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-663">The header can still be suppressed for the entire application by setting <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A> in [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) or [outputCache Element for caching (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee).</span></span>  
  
 <span data-ttu-id="b3e7c-664">既定値の抑制を不用意に`Cache-Control: private`プロキシとして、ヘッダーなどの中継ぎ局がこのヘッダーのない応答として扱うキャッシュ可能な既定ではします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-664">Use caution when suppressing the default `Cache-Control: private` header, as proxies and other intermediaries may treat responses without this header as cacheable by default.</span></span> <span data-ttu-id="b3e7c-665">この処理は、機密情報の誤ったキャッシュをする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-665">This treatment can lead to the inadvertent caching of sensitive information.</span></span> <span data-ttu-id="b3e7c-666">参照してください[RFC 2616, 秒 13.4](http://tools.ietf.org/html/rfc2616)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-666">See [RFC 2616, Sec. 13.4](http://tools.ietf.org/html/rfc2616) for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressFormsAuthenticationRedirect">
      <MemberSignature Language="C#" Value="public bool SuppressFormsAuthenticationRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressFormsAuthenticationRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressFormsAuthenticationRedirect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-667">ログイン ページへのフォーム認証のリダイレクトを抑制する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-667">Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-668">フォーム認証のリダイレクトを抑制する必要がある場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-668"><see langword="true" /> if forms authentication redirection should be suppressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-669">既定では、フォーム認証は、ログイン ページにリダイレクトするために HTTP 401 ステータス コードを 302 に変換します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-669">By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page.</span></span> <span data-ttu-id="b3e7c-670">これが特定の認証が成功した場合も、承認などのエラーのクラスが失敗した場合、または現在の要求が AJAX 機能または web サービス要求の場合は適切でないです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-670">This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request.</span></span> <span data-ttu-id="b3e7c-671">このプロパティは、リダイレクトの動作を抑制して、元の状態コードをクライアントに送信する方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-671">This property provides a way to suppress the redirect behavior and send the original status code to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransmitFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-672">指定されたファイル ディレクトリを、メモリにバッファリングせずに、HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-672">Writes the specified file directly to an HTTP response output stream without buffering it in memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public void TransmitFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransmitFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.TransmitFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransmitFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransmitFile(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b3e7c-673">HTTP 出力に書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-673">The name of the file to write to the HTTP output.</span></span></param>
        <summary><span data-ttu-id="b3e7c-674">指定されたファイル ディレクトリを、メモリにバッファリングせずに、HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-674">Writes the specified file directly to an HTTP response output stream, without buffering it in memory.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3e7c-675"><paramref name="filename" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-675">The <paramref name="filename" /> parameter is <see langword="null" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmitFile">
      <MemberSignature Language="C#" Value="public void TransmitFile (string filename, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransmitFile(string filename, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransmitFile (filename As String, offset As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransmitFile(System::String ^ filename, long offset, long length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b3e7c-676">HTTP 出力に書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-676">The name of the file to write to the HTTP output.</span></span></param>
        <param name="offset"><span data-ttu-id="b3e7c-677">HTTP 出力への書き出しを始める、ファイル内の位置。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-677">The position in the file to begin to write to the HTTP output.</span></span></param>
        <param name="length"><span data-ttu-id="b3e7c-678">送信されるバイト数。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-678">The number of bytes to be transmitted.</span></span></param>
        <summary><span data-ttu-id="b3e7c-679">指定したファイル ディレクトリの一部を、メモリにバッファリングせずに、HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-679">Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-680">として 0 を指定する場合、`offset`パラメーターおよび-1 である場合、`length`パラメーター、ファイル全体が送信されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-680">If you specify 0 as the `offset` parameter and -1 as the `length` parameter, the whole file is sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3e7c-681"><paramref name="offset" /> パラメーターが 0 未満。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-681">The <paramref name="offset" /> parameter is less than zero.</span></span>  
  
 <span data-ttu-id="b3e7c-682">\- または</span><span class="sxs-lookup"><span data-stu-id="b3e7c-682">\- or -</span></span>  
  
 <span data-ttu-id="b3e7c-683"><paramref name="length" /> パラメーターが -1 未満。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-683">The <paramref name="length" /> parameter is less than -1.</span></span>  
  
 <span data-ttu-id="b3e7c-684">\- または</span><span class="sxs-lookup"><span data-stu-id="b3e7c-684">\- or -</span></span>  
  
 <span data-ttu-id="b3e7c-685"><paramref name="length" /> パラメーターが、ファイルに含まれるバイト数からオフセットを引いた値よりも大きいバイト数を指定しています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-685">The <paramref name="length" /> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b3e7c-686">アウト プロセス ワーカー要求はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-686">The out-of-process worker request is not supported.</span></span>  
  
 <span data-ttu-id="b3e7c-687">\- または</span><span class="sxs-lookup"><span data-stu-id="b3e7c-687">\- or -</span></span>  
  
 <span data-ttu-id="b3e7c-688">応答が <see cref="T:System.Web.HttpWriter" /> オブジェクトを使用していません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-688">The response is not using an <see cref="T:System.Web.HttpWriter" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b3e7c-689"><paramref name="offset" /> パラメーターがゼロ未満かファイル サイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-689">The <paramref name="offset" /> parameter is less than zero or greater than the file size.</span></span>  
  
 <span data-ttu-id="b3e7c-690">\- または</span><span class="sxs-lookup"><span data-stu-id="b3e7c-690">\- or -</span></span>  
  
 <span data-ttu-id="b3e7c-691"><paramref name="length" /> パラメーターが -1 未満か、<paramref name="offset" /> パラメーターとファイル サイズを加算した値を超えています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-691">The <paramref name="length" /> parameter is less than -1 or greater than the value of the <paramref name="offset" /> parameter plus the file size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrySkipIisCustomErrors">
      <MemberSignature Language="C#" Value="public bool TrySkipIisCustomErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrySkipIisCustomErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpResponse.TrySkipIisCustomErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property TrySkipIisCustomErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrySkipIisCustomErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b3e7c-692">[!INCLUDE[iisver](~/includes/iisver-md.md)] カスタム エラーが無効かどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-692">Gets or sets a value that specifies whether [!INCLUDE[iisver](~/includes/iisver-md.md)] custom errors are disabled.</span></span></summary>
        <value>
          <span data-ttu-id="b3e7c-693">IIS カスタム エラーが無効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-693"><see langword="true" /> to disable IIS custom errors; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-694"><xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A>プロパティは、アプリケーションが IIS 7.0 でホストされている場合にのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-694">The <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property is used only when your application is hosted in IIS 7.0.</span></span> <span data-ttu-id="b3e7c-695">IIS 7.0 でクラシック モードで実行されている場合、<xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A>プロパティの既定値は`true`します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-695">When running in Classic mode in IIS 7.0 the <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property default value is `true`.</span></span> <span data-ttu-id="b3e7c-696">統合モードで実行されている場合、<xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A>プロパティの既定値は`false`します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-696">When running in Integrated mode, the <xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A> property default value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-697">情報を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-697">Writes information to an HTTP response output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="b3e7c-698">HTTP 出力ストリームに書き込む文字。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-698">The character to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="b3e7c-699">文字を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-699">Writes a character to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-700">次の例では、一連の書き込みメソッドを使用して、ASP.NET ページに書き込まれる定数を作成します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-700">The following example creates a series of constants that are written to an ASP.NET page using the Write method.</span></span> <span data-ttu-id="b3e7c-701">コードでは、このバージョンの個々 の文字定数をページに書き込む、書き込みメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-701">The code calls this version of the Write method to write individual character constants to the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample5#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsewritecharscs.aspx#4)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample5#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsewritecharsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b3e7c-702">HTTP 出力ストリームに書き込む <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-702">The <see cref="T:System.Object" /> to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="b3e7c-703"><see cref="T:System.Object" /> を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-703">Writes an <see cref="T:System.Object" /> to an HTTP response stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b3e7c-704">HTTP 出力ストリームに書き込む文字列。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-704">The string to write to the HTTP output stream.</span></span></param>
        <summary><span data-ttu-id="b3e7c-705">文字列を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-705">Writes a string to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-706">動的に生成された HTML ページは、クライアントから受信したときに、またはクライアントに送信する場合、Web クライアントから受信した入力が検証されていない場合、セキュリティ上のリスクを導入できます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-706">Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client.</span></span> <span data-ttu-id="b3e7c-707">信頼できるソースから送信する Web サイトに送信され、後で出力をクライアントに入力に埋め込まれている悪意のあるスクリプトを表示できます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-707">Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source.</span></span> <span data-ttu-id="b3e7c-708">このセキュリティ上のリスクは、クロスサイト スクリプティング攻撃と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-708">This security risk is referred to as a cross-site scripting attack.</span></span> <span data-ttu-id="b3e7c-709">常にクライアントのブラウザーに、サイトから送信するときに、クライアントから受信するデータを検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-709">You should always validate data that is received from a client when it will be transmitted from your site to client browsers.</span></span>  
  
 <span data-ttu-id="b3e7c-710">さらに、記述するときに html 形式で入力として受信したすべてのデータ、する必要がありますを使用してエンコード技法など<xref:System.Web.HttpServerUtility.HtmlEncode%2A>または<xref:System.Web.HttpServerUtility.UrlEncode%2A>を悪意のあるスクリプトが実行するを防ぐためにします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-710">Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <xref:System.Web.HttpServerUtility.HtmlEncode%2A> or <xref:System.Web.HttpServerUtility.UrlEncode%2A> to prevent malicious script from executing.</span></span> <span data-ttu-id="b3e7c-711">この手法は、受信したときに検証されなかったデータに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-711">This technique is useful for data that was not validated when it was received.</span></span>  
  
 <span data-ttu-id="b3e7c-712">エンコードまたはデータをフィルター処理するときに、Web ページの設定、フィルターを識別し、属していないれるバイトのシーケンスで、(など、英数字以外のシーケンス) を設定しに埋め込まれている悪意のあるスクリプトを持つ可能性がある可能性がありますを削除できるように文字を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-712">When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.</span></span>  
  
 <span data-ttu-id="b3e7c-713">クロスサイト スクリプティング攻撃の詳細については、記事 Q252985、「方法に防ぐクロスサイト スクリプティング セキュリティの問題」を参照して、[マイクロソフト サポート技術情報](http://go.microsoft.com/fwlink/?LinkID=37115)Web サイトです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-713">For more information about cross-site scripting attacks, see article Q252985, "How to Prevent Cross-Site Scripting Security Issues" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?LinkID=37115) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-714">次の例では、クライアントのブラウザーに、クライアントの名前がエコーされます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-714">The following example echoes the client's name back to the client's browser.</span></span> <span data-ttu-id="b3e7c-715"><xref:System.Web.HttpServerUtility.HtmlEncode%2A>メソッドは、無効な文字で送信される可能性がありますが、悪意のあるスクリプトを切り離します、`UserName`入力フィールドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-715">The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method strips any malicious script and invalid characters that may have been submitted in the `UserName` input field.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.Write#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.Write/CS/systemwebhttpresponsewrite.cs#1)]
 [!code-vb[System.Web.HttpResponse.Write#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.Write/vb/systemwebhttpresponsewrite.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b3e7c-716">書き込む文字配列。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-716">The character array to write.</span></span></param>
        <param name="index"><span data-ttu-id="b3e7c-717">書き込みを開始する文字配列内の位置。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-717">The position in the character array where writing starts.</span></span></param>
        <param name="count"><span data-ttu-id="b3e7c-718">書き込む文字数。書き込みは、<c>インデックス</c>から開始されます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-718">The number of characters to write, beginning at <c>index</c>.</span></span></param>
        <summary><span data-ttu-id="b3e7c-719">文字配列を HTTP 応答出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-719">Writes an array of characters to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b3e7c-720">次の例では、一連の書き込みメソッドを使用して、ASP.NET ページに書き込まれる定数を作成します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-720">The following example creates a series of constants that are written to an ASP.NET page using the Write method.</span></span> <span data-ttu-id="b3e7c-721">コードでは、このバージョンの個々 の文字定数をページに書き込む、書き込みメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-721">The code calls this version of the Write method to write individual character constants to the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpResponse_Sample5#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsewritecharscs.aspx#4)]
 [!code-aspx-vb[System.Web.HttpResponse_Sample5#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsewritecharsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b3e7c-722">指定したファイルを HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-722">Writes the specified file directly to an HTTP response output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b3e7c-723">HTTP 出力に書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-723">The name of the file to write to the HTTP output.</span></span></param>
        <summary><span data-ttu-id="b3e7c-724">指定されたファイルの内容を、ファイル ブロックとして HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-724">Writes the contents of the specified file directly to an HTTP response output stream as a file block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-725">サイズの大きなファイルにこのメソッドが使用する場合、メソッドを呼び出すと例外がスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-725">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="b3e7c-726">このメソッドで使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-726">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="b3e7c-727">詳細については、812406、「prb:: Response.WriteFile ことはできません、大きなファイルのダウンロード」の記事を参照して、[マイクロソフト サポート技術情報](http://go.microsoft.com/fwlink/?linkid=149903)Web サイトです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-727">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-728">次の例は、という名前のテキスト ファイルのすべての内容を書き込みます`Login.txt`(リテラルの HTML テキストと入力コントロールを含む可能性があります) に出力ストリームに直接できます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-728">The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3e7c-729"><paramref name="filename" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-729">The <paramref name="filename" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename, bool readIntoMemory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename, bool readIntoMemory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String, readIntoMemory As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename, bool readIntoMemory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="readIntoMemory" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b3e7c-730">メモリ ブロックに書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-730">The name of the file to write into a memory block.</span></span></param>
        <param name="readIntoMemory"><span data-ttu-id="b3e7c-731">ファイルがメモリ ブロックに書き込まれるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-731">Indicates whether the file will be written into a memory block.</span></span></param>
        <summary><span data-ttu-id="b3e7c-732">指定されたファイルの内容を、メモリ ブロックとして HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-732">Writes the contents of the specified file directly to an HTTP response output stream as a memory block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-733">サイズの大きなファイルにこのメソッドが使用する場合、メソッドを呼び出すと例外がスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-733">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="b3e7c-734">このメソッドで使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-734">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="b3e7c-735">詳細については、812406、「prb:: Response.WriteFile ことはできません、大きなファイルのダウンロード」の記事を参照して、[マイクロソフト サポート技術情報](http://go.microsoft.com/fwlink/?linkid=149903)Web サイトです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-735">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-736">次の例は、ファイルをメモリに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-736">The following example writes a file to memory.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3e7c-737"><paramref name="filename" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-737">The <paramref name="filename" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (IntPtr fileHandle, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(native int fileHandle, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (fileHandle As IntPtr, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(IntPtr fileHandle, long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileHandle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileHandle"><span data-ttu-id="b3e7c-738">HTTP 出力ストリームに書き込むファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-738">The file handle of the file to write to the HTTP output stream.</span></span></param>
        <param name="offset"><span data-ttu-id="b3e7c-739">書き込みを開始するファイル内のバイト位置。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-739">The byte position in the file where writing will start.</span></span></param>
        <param name="size"><span data-ttu-id="b3e7c-740">出力ストリームに書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-740">The number of bytes to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="b3e7c-741">指定したファイルを HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-741">Writes the specified file directly to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-742">サイズの大きなファイルにこのメソッドが使用する場合、メソッドを呼び出すと例外がスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-742">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="b3e7c-743">このメソッドで使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-743">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="b3e7c-744">詳細については、812406、「prb:: Response.WriteFile ことはできません、大きなファイルのダウンロード」の記事を参照して、[マイクロソフト サポート技術情報](http://go.microsoft.com/fwlink/?linkid=149903)Web サイトです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-744">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-745">次の例は、という名前のテキスト ファイルのすべての内容を書き込みます`Login.txt`(リテラルの HTML テキストと入力コントロールを含む可能性があります) に出力ストリームに直接できます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-745">The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile3 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b3e7c-746"><paramref name="fileHandler" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-746"><paramref name="fileHandler" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b3e7c-747"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-747"><paramref name="offset" /> is less than 0.</span></span>  
  
 <span data-ttu-id="b3e7c-748">\- または</span><span class="sxs-lookup"><span data-stu-id="b3e7c-748">\- or -</span></span>  
  
 <span data-ttu-id="b3e7c-749"><paramref name="size" /> は、ファイル サイズから <paramref name="offset" /> を引いた値を超えています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-749"><paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFile">
      <MemberSignature Language="C#" Value="public void WriteFile (string filename, long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteFile(string filename, int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteFile (filename As String, offset As Long, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteFile(System::String ^ filename, long offset, long size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="b3e7c-750">HTTP 出力ストリームに書き込むファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-750">The name of the file to write to the HTTP output stream.</span></span></param>
        <param name="offset"><span data-ttu-id="b3e7c-751">書き込みを開始するファイル内のバイト位置。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-751">The byte position in the file where writing will start.</span></span></param>
        <param name="size"><span data-ttu-id="b3e7c-752">出力ストリームに書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-752">The number of bytes to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="b3e7c-753">指定したファイルを HTTP 応答出力ストリームに直接書き込みます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-753">Writes the specified file directly to an HTTP response output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-754">サイズの大きなファイルにこのメソッドが使用する場合、メソッドを呼び出すと例外がスローする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-754">When this method is used with large files, calling the method might throw an exception.</span></span> <span data-ttu-id="b3e7c-755">このメソッドで使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-755">The size of the file that can be used with this method depends on the hardware configuration of the Web server.</span></span> <span data-ttu-id="b3e7c-756">詳細については、812406、「prb:: Response.WriteFile ことはできません、大きなファイルのダウンロード」の記事を参照して、[マイクロソフト サポート技術情報](http://go.microsoft.com/fwlink/?linkid=149903)Web サイトです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-756">For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the [Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b3e7c-757">次の例は、という名前のテキスト ファイルのすべての内容を書き込みます`Login.txt`(入力コントロールのリテラル テキストと HTML を含んでいる可能性があります) に出力ストリームに直接できます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-757">The following example writes all the contents of a text file named `Login.txt` (which might contain literal text and HTML input controls) directly to the output stream.</span></span>  
  
 [!code-csharp[Classic HttpResponse.WriteFile2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.WriteFile2 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.WriteFile2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.WriteFile2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b3e7c-758"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-758"><paramref name="offset" /> is less than 0.</span></span>  
  
 <span data-ttu-id="b3e7c-759">\- または</span><span class="sxs-lookup"><span data-stu-id="b3e7c-759">\- or -</span></span>  
  
 <span data-ttu-id="b3e7c-760"><paramref name="size" /> は、ファイル サイズから <paramref name="offset" /> を引いた値を超えています。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-760"><paramref name="size" /> is greater than the file size minus <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b3e7c-761"><paramref name="filename" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-761">The <paramref name="filename" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSubstitution">
      <MemberSignature Language="C#" Value="public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteSubstitution(class System.Web.HttpResponseSubstitutionCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteSubstitution (callback As HttpResponseSubstitutionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteSubstitution(System::Web::HttpResponseSubstitutionCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpResponseSubstitutionCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b3e7c-762">置換するメソッド、ユーザー コントロール、またはオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-762">The method, user control, or object to substitute.</span></span></param>
        <summary><span data-ttu-id="b3e7c-763">応答置換ブロックを応答に挿入できます。これにより、出力キャッシュされた応答の指定された応答領域を動的に生成できます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-763">Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b3e7c-764">使用することができます、<xref:System.Web.HttpResponse.WriteSubstitution%2A>出力キャッシュのページ キャッシュ後置換用のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-764">You can use the <xref:System.Web.HttpResponse.WriteSubstitution%2A> method for post-cache substitution in your output-cached pages.</span></span> <span data-ttu-id="b3e7c-765">渡すことによって、<xref:System.Web.HttpContext>オブジェクトを持つ、指定されたコールバック メソッドに<xref:System.Web.HttpResponseSubstitutionCallback>署名、出力キャッシュを置き換えることができますページ キャッシュ内の任意の指定した場所にコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-765">By passing a <xref:System.Web.HttpContext> object to a callback method with a prescribed <xref:System.Web.HttpResponseSubstitutionCallback> signature, you can replace output cached content at any given location in the page cache.</span></span> <span data-ttu-id="b3e7c-766">交換を開始するには、呼び出し、<xref:System.Web.HttpResponse.WriteSubstitution%2A>メソッドをコールバック メソッドは、スレッド セーフである必要があります、次のいずれかを渡します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-766">To initiate the replacement, call the <xref:System.Web.HttpResponse.WriteSubstitution%2A> method, passing it the callback method, which must be thread safe and can be either of the following:</span></span>  
  
-   <span data-ttu-id="b3e7c-767">コンテナーのページやユーザー コントロールの静的メソッド。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-767">A static method on the container page or user control.</span></span>  
  
-   <span data-ttu-id="b3e7c-768">静的な他の任意のオブジェクトでメソッドまたはインスタンス メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-768">A static or instance method on another arbitrary object.</span></span>  
  
 <span data-ttu-id="b3e7c-769">ページに最初の要求で、<xref:System.Web.HttpResponse.WriteSubstitution%2A>呼び出し、<xref:System.Web.HttpResponseSubstitutionCallback>出力を生成するためにデリゲートします。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-769">On the first request to the page, the <xref:System.Web.HttpResponse.WriteSubstitution%2A> calls the <xref:System.Web.HttpResponseSubstitutionCallback> delegate to produce the output.</span></span> <span data-ttu-id="b3e7c-770">次に、今後の要求を呼び出すデリゲートを保持すると、応答に代替バッファーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-770">Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests.</span></span> <span data-ttu-id="b3e7c-771">最後に、クライアント側キャッシュからパブリック サーバーのみをキャッシュしないと、クライアント上でデリゲートをページを再度呼び出してに今後の要求に確保が低下します。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-771">Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b3e7c-772">キャッシュされたユーザー コントロールがユーザーの制御レベル出力キャッシュの適用先では、キャッシュ後置換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-772">Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level.</span></span> <span data-ttu-id="b3e7c-773">これは、フラグメント キャッシュとも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-773">This is also known as fragment caching.</span></span> <span data-ttu-id="b3e7c-774">詳細については、次を参照してください。 [ASP.NET ページの一部をキャッシュ](http://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e)です。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-774">For more information, see [Caching Portions of an ASP.NET Page](http://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b3e7c-775"><see cref="T:System.Web.UI.Control" /> 型の <paramref name="callback" /> パラメーターのターゲット。</span><span class="sxs-lookup"><span data-stu-id="b3e7c-775">The target of the <paramref name="callback" /> parameter is of type <see cref="T:System.Web.UI.Control" />.</span></span></exception>
        <altmember cref="T:System.Web.HttpResponseSubstitutionCallback" />
        <altmember cref="T:System.Web.UI.WebControls.Substitution" />
      </Docs>
    </Member>
  </Members>
</Type>