<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpResponse.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe0768657bcf291225564a735695474ef67da01c6dca.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68657bcf291225564a735695474ef67da01c6dca</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Encapsulates HTTP-response information from an ASP.NET operation.</source>
          <target state="translated">ASP.NET 操作からの HTTP 応答情報をカプセル化します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class are exposed through the <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, and <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> classes.</source>
          <target state="translated">メソッドとプロパティの<ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph>を通じてクラスが公開される、<ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>のプロパティ、 <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>、 <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>、 <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>、および<ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The following methods of the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class are supported only in post back scenarios and not in asynchronous post back scenarios:</source>
          <target state="translated">次のメソッド、<ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph>クラス ポスト バックのシナリオでのみサポートされているし、非同期の投稿ではなくバックアップ シナリオ。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>Partial-page updates are enabled when you use <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls to update selected regions of a page instead of updating the whole page with a post back.</source>
          <target state="translated">使用するときに、部分ページ更新が有効になっている<ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph>ポスト バックにページ全体が更新ではなく、ページの選択した地域を更新するコントロール。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>For more information, see <bpt id="p1">[</bpt>UpdatePanel Control Overview<ept id="p1">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept> and <bpt id="p2">[</bpt>Partial-Page Rendering Overview<ept id="p2">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>UpdatePanel コントロールの概要<ept id="p1">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept>と<bpt id="p2">[</bpt>部分ページ レンダリング概要<ept id="p2">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The following example draws three overlapping rectangles when the page is requested.</source>
          <target state="translated">次の例は、ページが要求されたときに、重複する 3 つの四角形を描画します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The code begins by setting the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property to image/jpeg, so that the entire page will be rendered as a JPEG image.</source>
          <target state="translated">設定して、コードの開始、 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> image/jpeg、プロパティ ページ全体は JPEG 画像としてレンダリングするようにします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The code then calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method to ensure that no extraneous content is sent with this response.</source>
          <target state="translated">コードを呼び出すし、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph>メソッドをこの応答に不要なコンテンツが送信されなかったことを確認してください。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>Next, the code sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property to true so that the page is completely processed before it is sent to the requesting client.</source>
          <target state="translated">コードを次に、設定、<ph id="ph1">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>プロパティを要求するクライアントに送信される前に、ページが完全に処理できるようにを true にします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>Two objects used to draw the rectangles are then created: a <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">四角形の描画に使用する 2 つのオブジェクトが作成されます。<ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph>と<ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.</source>
          <target state="translated">ページで作成された変数は、四角形と最大の四角形内に表示される文字列を描画する座標として使用されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>When the three rectangles and the string that appears inside them are drawn, the <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> is saved to the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object that is associated with the <ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> property and its format is set to JPEG.</source>
          <target state="translated">次の 3 つの四角形とその内部に表示される文字列が描画されると、<ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph>に保存される、<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>オブジェクトに関連付けられている、<ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph>プロパティとその形式は jpeg 形式に設定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph> methods to release the resources used by the two drawing objects.</source>
          <target state="translated">コードの呼び出し、<ph id="ph1">&lt;xref:System.Drawing.Image.Dispose%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Drawing.Graphics.Dispose%2A&gt;</ph>メソッドを 2 つの描画オブジェクトによって使用されているリソースを解放します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>Lastly, the code calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> method to send the buffered response to the requesting client.</source>
          <target state="translated">最後に、コードを呼び出し、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph>要求元のクライアントにバッファーされた応答を送信する方法です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>In code, the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> object is referred to by the keyword <ph id="ph2">`Response`</ph>.</source>
          <target state="translated">コードでは、<ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph>オブジェクトは、キーワードで参照<ph id="ph2">`Response`</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>For example, <ph id="ph1">`Response.Clear()`</ph> refers to the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">たとえば、<ph id="ph1">`Response.Clear()`</ph>を指す、<ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpResponse">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> class has a property that is named <ph id="ph2">&lt;xref:System.Web.UI.Page.Response%2A&gt;</ph> that exposes the current instance of <ph id="ph3">&lt;xref:System.Web.HttpResponse&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph>クラス プロパティが含まれるという<ph id="ph2">&lt;xref:System.Web.UI.Page.Response%2A&gt;</ph>の現在のインスタンスを公開する<ph id="ph3">&lt;xref:System.Web.HttpResponse&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object that enables custom HTTP output.</source>
          <target state="translated">カスタム HTTP 出力を有効にする <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このメンバーは .NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.#ctor(System.IO.TextWriter)">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class are exposed through the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Response%2A&gt;</ph> object in ASP.NET.</source>
          <target state="translated">メソッドとプロパティの<ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph>クラスは、組み込みを通じて公開される<ph id="ph2">&lt;xref:System.Web.HttpContext.Response%2A&gt;</ph>ASP.NET 内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>A file, cache key, or <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> to add to the list of application dependencies.</source>
          <target state="translated">アプリケーション依存関係のリストに追加するファイル、キャッシュ キー、または <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.</source>
          <target state="translated">応答が出力キャッシュに格納されていて、指定した依存関係が変化した場合、キャッシュ依存関係のセットを応答に関連付け、応答を効率的に無効化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheDependency%2A&gt;</ph> method allows dependencies to be created between cached responses and a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheDependency%2A&gt;</ph>メソッドにより、キャッシュされた応答の間で作成する依存関係と<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>The following example demonstrates how to create a cache dependency by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheDependency%2A&gt;</ph> method and a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object.</source>
          <target state="translated">次の例を使用してキャッシュの依存関係を作成する方法を示します、<ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheDependency%2A&gt;</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>The <ph id="ph1">&lt;paramref name="dependencies" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencies" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])">
          <source>This method was called too late in the cache processing pipeline, after the cached response was already created.</source>
          <target state="translated">キャッシュされた応答が既に作成された後、キャッシュ処理パイプラインでこのメソッドが呼び出されたのが遅すぎました。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Makes the validity of a cached response dependent on other items in the cache.</source>
          <target state="translated">キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> that contains the keys of the items that the current cached response is dependent upon.</source>
          <target state="translated">現在のキャッシュされた応答が依存しているアイテムのキーを格納する <ph id="ph1">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>Makes the validity of a cached response dependent on other items in the cache.</source>
          <target state="translated">キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>When the items referred to in the <ph id="ph1">`cacheKeys`</ph> parameter are removed from the cache, the cached response of the current item is not valid.</source>
          <target state="translated">項目が参照されるときに、<ph id="ph1">`cacheKeys`</ph>パラメーターは、キャッシュから削除され、現在のアイテムのキャッシュされた応答が無効です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>The following example demonstrates how to use an ASP.NET page that is output cached.</source>
          <target state="translated">次の例では、ASP.NET ページ出力キャッシュされたを使用する方法を示します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>The code for the page creates an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> object of keys that are associated with items that are stored in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> object.</source>
          <target state="translated">ページのコードを作成、<ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>に格納されている項目に関連付けられているキーのオブジェクト、<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>Next, the code passes the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> as the parameter in a call to the <ph id="ph2">&lt;xref:System.Web.HttpResponse.AddCacheItemDependencies%2A&gt;</ph> method.</source>
          <target state="translated">次に、コードを渡します、<ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>への呼び出しでパラメーターとして、<ph id="ph2">&lt;xref:System.Web.HttpResponse.AddCacheItemDependencies%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)">
          <source>This makes the output cached response not valid, if any of the files specified in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> change.</source>
          <target state="translated">これにより、出力キャッシュされた応答、有効ではありませんで指定されたファイルのいずれかの場合、<ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>を変更します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])">
          <source>An array of item keys that the cached response is dependent upon.</source>
          <target state="translated">キャッシュされた応答が依存するアイテム キーの配列。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])">
          <source>Makes the validity of a cached item dependent on another item in the cache.</source>
          <target state="translated">キャッシュ内の他のアイテムに依存するキャッシュされたアイテムを有効にします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependencies(System.String[])">
          <source>When any of the <ph id="ph1">`cacheKey`</ph>s are removed from the cache, the cached response of the current item is invalid.</source>
          <target state="translated">任意のときに、 <ph id="ph1">`cacheKey`</ph>s がキャッシュから削除され、現在のアイテムのキャッシュされた応答が無効です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>The key of the item that the cached response is dependent upon.</source>
          <target state="translated">キャッシュされた応答が依存するアイテムのキー。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>Makes the validity of a cached response dependent on another item in the cache.</source>
          <target state="translated">キャッシュ内の他のアイテムに依存するキャッシュされた応答を有効にします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>When the item corresponding to the <ph id="ph1">`cacheKey`</ph> parameter is removed from the cache, the cached response of the current item is invalid.</source>
          <target state="translated">ときに対応する項目、<ph id="ph1">`cacheKey`</ph>パラメーターがキャッシュから削除された、現在のアイテムのキャッシュされた応答が無効です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>The following example is an ASP.NET user control that is output cached.</source>
          <target state="translated">次の例は、出力キャッシュされた ASP.NET ユーザー コントロールです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>The code for the control calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheItemDependency%2A&gt;</ph> method with the key of an item stored in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> object passed as its parameter.</source>
          <target state="translated">コントロールの呼び出しのため、コード、<ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheItemDependency%2A&gt;</ph>に格納されているアイテムのキーを持つメソッド、<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>オブジェクトのパラメーターとして渡されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated.</source>
          <target state="translated">項目がキャッシュに存在しない場合、出力キャッシュに保存されているコントロールの応答が無効になります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>This means that on the subsequent request, a new version of the control's response will be added to the output cache.</source>
          <target state="translated">これは、後続の要求では、コントロールの応答の新しいバージョンに追加されます、出力キャッシュを意味します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>Next, the code checks whether an item associated with a <ph id="ph1">`bookData`</ph> key is stored in the <ph id="ph2">`Cache`</ph> object, and displays one of two lines of text dependent upon the result.</source>
          <target state="translated">次に、このコードは項目に関連付けられているかどうかをチェックする<ph id="ph1">`bookData`</ph>にキーが格納されている、<ph id="ph2">`Cache`</ph>オブジェクト、および 2 つの行の結果に依存してテキストのいずれかが表示されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddCacheItemDependency(System.String)">
          <source>Then, the code sets the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> control, which is named <ph id="ph3">`dgBooks`</ph>, with a call to a custom <ph id="ph4">`DataHelper`</ph> class' shared <ph id="ph5">`GetBookData`</ph> method, and populates the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph> with the <ph id="ph7">&lt;xref:System.Web.UI.Control.DataBind%2A&gt;</ph> method.</source>
          <target state="translated">コードを設定し、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph>と呼ばれるコントロール<ph id="ph3">`dgBooks`</ph>、カスタムへの呼び出しに<ph id="ph4">`DataHelper`</ph>クラスの共有<ph id="ph5">`GetBookData`</ph>メソッドを取り込んで、<ph id="ph6">&lt;xref:System.Web.UI.WebControls.DataGrid&gt;</ph>で、<ph id="ph7">&lt;xref:System.Web.UI.Control.DataBind%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Adds a group of file names to the collection of file names on which the current response is dependent.</source>
          <target state="translated">ファイル名のグループを、現在の応答が依存しているファイル名のコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>The collection of files to add.</source>
          <target state="translated">追加するファイルのコレクション。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>Adds a group of file names to the collection of file names on which the current response is dependent.</source>
          <target state="translated">ファイル名のグループを、現在の応答が依存しているファイル名のコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>The following example is an ASP.NET page that is output cached.</source>
          <target state="translated">次の例は、出力キャッシュされた ASP.NET ページです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>The code for the page creates an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> of file paths, and then passes the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> as the parameter in a call to the <ph id="ph3">&lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt;</ph> method.</source>
          <target state="translated">ページのコードを作成、<ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>ファイル パス、パスの<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>への呼び出しでパラメーターとして、<ph id="ph3">&lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)">
          <source>This makes the output cached response invalid if any of the files specified in the <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> changes.</source>
          <target state="translated">これにより、出力キャッシュされた無効な場合に、応答で指定されたファイルのいずれか、<ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>変更します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependencies(System.String[])">
          <source>An array of files to add.</source>
          <target state="translated">追加するファイルの配列。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependencies(System.String[])">
          <source>Adds an array of file names to the collection of file names on which the current response is dependent.</source>
          <target state="translated">ファイル名の配列を、現在の応答が依存しているファイル名のコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.String[])">
          <source>The following example adds an array of file names to the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt;</ph> file dependency list.</source>
          <target state="translated">次の例では、ファイル名の配列、<ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependencies%2A&gt;</ph>ファイル依存関係の一覧です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependencies(System.String[])">
          <source>If the files changes, the cached response is invalidated.</source>
          <target state="translated">ファイルが変更された場合、キャッシュされた応答が無効になります。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>The name of the file to add.</source>
          <target state="translated">追加するファイルの名前。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>Adds a single file name to the collection of file names on which the current response is dependent.</source>
          <target state="translated">現在の応答が依存しているファイル名のコレクションに、ファイル名を 1 つ追加します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt;</ph> method to add a file dependency, you must also specify output caching programmatically or declaratively.</source>
          <target state="translated">使用すると、<ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt;</ph>ファイルの依存関係を追加するメソッドを出力キャッシュをプログラムから、または宣言によって指定することも必要があります。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>For example, to specify output caching declaratively, use the  directive.</source>
          <target state="translated">たとえば、宣言によって出力キャッシュを指定するには、ディレクティブを使用します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Cache Page Output with File Dependencies<ept id="p1">](http://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: キャッシュ ページの出力ファイルの依存関係を持つ<ept id="p1">](http://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db)</ept>します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>The following example shows how to add a single file name to the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt;</ph> file dependency list.</source>
          <target state="translated">次の例は、1 つのファイル名を追加する方法を示します、<ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt;</ph>ファイル依存関係の一覧です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddFileDependency(System.String)">
          <source>If the file changes, the cached response is invalidated.</source>
          <target state="translated">ファイルが変更された場合、キャッシュされた応答が無効になります。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source>The name of the HTTP header to add <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> を追加する対象となる HTTP ヘッダーの名前。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source>The string to add to the header.</source>
          <target state="translated">ヘッダーに追加する文字列。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source>Adds an HTTP header to the output stream.</source>
          <target state="translated">HTTP ヘッダーを出力ストリームに追加します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source><ph id="ph1">&lt;see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /&gt;</ph> is provided for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.HttpResponse.AddHeader(System.String,System.String)" /&gt;</ph> は、ASP の旧バージョンとの互換性のために提供されています。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.AddHeader%2A&gt;</ph> is the same as <ph id="ph2">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> and is provided only for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.AddHeader%2A&gt;</ph> 同じ<ph id="ph2">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph>ASP の旧バージョンと互換性のためだけに提供されます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddHeader(System.String,System.String)">
          <source>With ASP.NET, use <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph>.</source>
          <target state="translated">ASP.NET を使用して<ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The callback method.</source>
          <target state="translated">コールバック メソッド。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
          <target state="translated">[.NET Framework 4.5.2 以降のバージョンでのみでサポート]</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</source>
          <target state="translated">この要求に対応する応答ヘッダーを送信する直前に、ASP.NET ランタイムが呼び出すコールバックを登録します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.ISubscriptionToken" /&gt;</ph> object that represents the subscription to the OnSendingHeaders pseudo-event.</source>
          <target state="translated">OnSendingHeaders 疑似イベントへのサブスクリプションを表す <ph id="ph1">&lt;see cref="T:System.Web.ISubscriptionToken" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The AddOnSendingHeaders method is not invoked if the native module flushes the response first.</source>
          <target state="translated">ネイティブ モジュールは最初の応答をフラッシュする場合、AddOnSendingHeaders メソッドは呼び出されません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription.</source>
          <target state="translated">アプリケーションごとのサブスクリプションではなく、要求ごとのサブスクリプションがあるという点で、擬似イベント OnSendingHeaders は IHttpModule レベル パイプライン イベントとは異なります。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The intent is that the callback may modify the response status code or may set a response cookie or header.</source>
          <target state="translated">意図は、コールバックが応答状態コードを変更することがありますか、応答のクッキーまたはヘッダーを設定することがあります。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>Other usage notes and caveats:</source>
          <target state="translated">その他の使用上の注意と注意事項:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.</source>
          <target state="translated">このメソッドは、IIS 統合パイプライン モード パイプラインで実行時にのみ、および応答ヘッダーは、現在の要求に対するまだ送信されていない場合にのみ有効です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on.</source>
          <target state="translated">ASP.NET ランタイムでは、スレッドでコールバックが呼び出されるに関して何も保証はされません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>For example, the callback may be invoked synchronously in a background thread if a background flush is being performed.</source>
          <target state="translated">たとえば、コールバックが呼び出された同期的にバック グラウンド スレッドでフラッシュのバック グラウンドで実行される場合。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source><ph id="ph1">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> is not guaranteed to be available in such a thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> このようなスレッドで使用できるは保証されません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The callback must not call any method that manipulates the response entity body or that results in a flush.</source>
          <target state="translated">コールバックは、または結果をフラッシュが応答エンティティ ボディを処理したり、任意のメソッドを呼び出さないでください。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>For example, the callback must not call <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>, as that method may manipulate the response entity body.</source>
          <target state="translated">コールバックを呼び出してはならないなど<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>、そのメソッドが応答エンティティ ボディを操作します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The callback must contain only short-running synchronous code.</source>
          <target state="translated">コールバックは、実行時間が短い同期コードのみを含める必要があります。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.</source>
          <target state="translated">非同期操作を呼び出すか、このような操作を待機すると、デッドロック可能性があります。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})">
          <source>The callback must not throw an exception; otherwise behavior is undefined.</source>
          <target state="translated">コールバックが例外をスローする必要がありますいません。それ以外の場合の動作は定義されません。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpCookie" /&gt;</ph> to add to the output stream.</source>
          <target state="translated">出力ストリームに追加する <ph id="ph1">&lt;see cref="T:System.Web.HttpCookie" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>Adds an HTTP cookie to the intrinsic cookie collection.</source>
          <target state="translated">HTTP クッキーを組み込みクッキー コレクションに追加します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>The following example creates a new cookie named <ph id="ph1">`LastVisit`</ph>, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection.</source>
          <target state="translated">次の例では、という名前の新しい cookie<ph id="ph1">`LastVisit`</ph>を現在の日付と時刻、cookie の値を設定し、cookie を現在のクッキー コレクションに追加します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>All cookies in the cookie collection are sent to the client in the <ph id="ph1">`Set-Cookie`</ph> header with the HTTP output stream.</source>
          <target state="translated">クッキー コレクションのすべての cookie がクライアントに送信される、<ph id="ph1">`Set-Cookie`</ph>の HTTP ヘッダー出力ストリーム。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)">
          <source>A cookie is appended after the HTTP headers have been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にクッキーが追加されています。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>The name of the HTTP header to add to the output stream.</source>
          <target state="translated">出力ストリームに追加する HTTP ヘッダーの名前。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>The string to append to the header.</source>
          <target state="translated">ヘッダーに追加する文字列。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>Adds an HTTP header to the output stream.</source>
          <target state="translated">HTTP ヘッダーを出力ストリームに追加します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> method to send cache-specific headers and at the same time use the cache object model (<ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph>) to set cache policy, HTTP response headers that pertain to caching (<ph id="ph3">`Cache-Control`</ph>, <ph id="ph4">`Expires`</ph>, <ph id="ph5">`Last-Modified`</ph>, <ph id="ph6">`Pragma`</ph>, and <ph id="ph7">`Vary`</ph>) might be deleted when the cache object model is used.</source>
          <target state="translated">使用する場合、<ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph>キャッシュ固有のヘッダーを送信し、同時にキャッシュ オブジェクト モデルを使用する方法 (<ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph>) をキャッシュに関連する HTTP 応答ヘッダーのキャッシュ ポリシーを設定する (<ph id="ph3">`Cache-Control`</ph>、 <ph id="ph4">`Expires`</ph>、 <ph id="ph5">`Last-Modified`</ph>、 <ph id="ph6">`Pragma`</ph>、および<ph id="ph7">`Vary`</ph>)、キャッシュのオブジェクト モデルを使用すると、削除された可能性があります。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>This behavior enables ASP.NET to maintain the most restrictive settings.</source>
          <target state="translated">この動作は、最も制限の厳しい設定を維持するために ASP.NET を有効します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>For example, consider a page that includes user controls.</source>
          <target state="translated">たとえば、ユーザー コントロールを含むページがあるとします。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>If those controls have conflicting cache policies, the most restrictive cache policy will be used.</source>
          <target state="translated">これらのコントロールには、キャッシュの競合するポリシーがある、最も制限の厳しいキャッシュ ポリシーが使用されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>If one user control sets the header "<ph id="ph1">`Cache-Control: Public`</ph>" and another user control sets the more restrictive header "<ph id="ph2">`Cache-Control: Private`</ph>" via calls to <ph id="ph3">&lt;xref:System.Web.HttpCachePolicy.SetCacheability%2A&gt;</ph>, then the "<ph id="ph4">`Cache-Control: Private`</ph>" header will be sent with the response.</source>
          <target state="translated">1 つのユーザー コントロールがヘッダーを設定する場合"<ph id="ph1">`Cache-Control: Public`</ph>「より制限の厳しいヘッダーを設定して別のユーザー コントロール」<ph id="ph2">`Cache-Control: Private`</ph>"への呼び出しを使用して<ph id="ph3">&lt;xref:System.Web.HttpCachePolicy.SetCacheability%2A&gt;</ph>、次に、"<ph id="ph4">`Cache-Control: Private`</ph>"ヘッダーを応答に送信されます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>For a list of standard HTTP/1.1 headers, see section 14, "Header Field Definitions," in the <bpt id="p1">[</bpt>Hypertext Transfer Protocol -- HTTP/1.1<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=73147)</ept> specification on the World Wide Web Consortium (W3C) Web site.</source>
          <target state="translated">標準 http/1.1 ヘッダーの一覧で 14、「Header Field Definitions」セクションを参照して、<bpt id="p1">[</bpt>ハイパー テキスト転送プロトコル--http/1.1<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=73147)</ept> World Wide Web Consortium (W3C) の Web サイトを指定します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> method to add a custom header to the <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> object sent to the requesting client.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph>にカスタム ヘッダーを追加するメソッドを<ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph>要求元のクライアントに送信されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendHeader(System.String,System.String)">
          <source>The header is appended after the HTTP headers have been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にヘッダーが追加されています。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>The text to add to the log file.</source>
          <target state="translated">ログ ファイルに追加するテキスト。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>Adds custom log information to the Internet Information Services (IIS) log file.</source>
          <target state="translated">カスタム ログ情報をインターネット インフォメーション サービス (IIS: Internet Information Services) ログ ファイルに追加します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>To allow for the specified string to be recorded in the log file, you first must enable the <bpt id="p1">**</bpt>URI Query<ept id="p1">**</ept> option of the <bpt id="p2">**</bpt>Extended Logging Properties<ept id="p2">**</ept> dialog box for the site that you want to log activity for in IIS.</source>
          <target state="translated">使用できるように、ログ ファイルに記録する指定した文字列を最初にする必要がありますを有効にした、 <bpt id="p1">**</bpt>URI クエリ<ept id="p1">**</ept>のオプション、<bpt id="p2">**</bpt>拡張ログ プロパティ<ept id="p2">**</ept>IIS でのアクティビティ ログに記録する、サイトのダイアログ ボックス。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>To customize extended logging in IIS 6.0, follow these steps:</source>
          <target state="translated">IIS 6.0 で拡張ログをカスタマイズするには、次の手順を実行します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
          <target state="translated">IIS マネージャーで、ローカル コンピューターのノードを展開し、Web または FTP サイトのフォルダーを展開、Web または FTP サイトを右クリックし、をクリックして<bpt id="p1">**</bpt>プロパティ<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>Click the <bpt id="p1">**</bpt>Web or FTP Site<ept id="p1">**</ept> tab, and then select the <bpt id="p2">**</bpt>Enable logging<ept id="p2">**</ept> check box (if it is not already selected).</source>
          <target state="translated">クリックして、 <bpt id="p1">**</bpt>Web または FTP サイト<ept id="p1">**</ept>、タブをクリックし、<bpt id="p2">**</bpt>ログ記録を有効にする<ept id="p2">**</ept>(既に選択されていない) 場合はチェック ボックスです。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>In the <bpt id="p1">**</bpt>Active log format<ept id="p1">**</ept> box, click <bpt id="p2">**</bpt>W3C Extended Log File Format<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>アクティブなログ形式<ept id="p1">**</ept>ボックスで、クリックして<bpt id="p2">**</bpt>W3C 拡張ログ ファイル形式<ept id="p2">**</ept>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>Click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
          <target state="translated">をクリックして<bpt id="p1">**</bpt>プロパティ<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>Click the <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> tab, select the properties that you want to log, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="translated">をクリックして、 <bpt id="p1">**</bpt>詳細設定<ept id="p1">**</ept>  タブで、ログ、およびをクリックするプロパティを選択して<bpt id="p2">**</bpt>OK<ept id="p2">**</ept>です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.AppendToLog(System.String)">
          <source>The following example shows how to append a string to the log.</source>
          <target state="translated">次の例では、ログに文字列を追加する方法を示します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>The virtual path to a resource.</source>
          <target state="translated">リソースへの仮想パス。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>Adds a session ID to the virtual path if the session is using <ph id="ph1">&lt;see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /&gt;</ph> session state and returns the combined path.</source>
          <target state="translated">セッションが <ph id="ph1">&lt;see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /&gt;</ph> セッション状態を使用している場合に、セッション ID を仮想パスに追加し、その ID を組み合わせたパスを返します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>If <ph id="ph1">&lt;see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /&gt;</ph> session state is not used, <ph id="ph2">&lt;see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /&gt;</ph> returns the original virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.Configuration.SessionStateSection.Cookieless" /&gt;</ph> セッション状態が使用されていない場合、<ph id="ph2">&lt;see cref="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)" /&gt;</ph> は元の仮想パスを返します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> with the session ID inserted.</source>
          <target state="translated">セッション ID が挿入された <ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.ApplyAppPathModifier%2A&gt;</ph> is used only with cookieless sessions to construct absolute HREFs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.ApplyAppPathModifier%2A&gt;</ph> 絶対 HREFs を構築するために cookie なしのセッションでのみ使用されます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>The following example declares a string variable named <ph id="ph1">`urlConverted`</ph>, and sets it to the result of an <ph id="ph2">&lt;xref:System.Web.HttpResponse.ApplyAppPathModifier%2A&gt;</ph> method call.</source>
          <target state="translated">次の例は、という名前の文字列変数を宣言<ph id="ph1">`urlConverted`</ph>の結果に設定し、<ph id="ph2">&lt;xref:System.Web.HttpResponse.ApplyAppPathModifier%2A&gt;</ph>メソッドの呼び出しです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ApplyAppPathModifier(System.String)">
          <source>The code then passes the variable's value to a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.HyperLink&gt;</ph> control's <ph id="ph2">&lt;xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A&gt;</ph> property.</source>
          <target state="translated">変数の値を渡しますコード、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.HyperLink&gt;</ph>コントロールの<ph id="ph2">&lt;xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>The callback object.</source>
          <target state="translated">コールバック オブジェクト。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>The response state.</source>
          <target state="translated">応答状態。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>Sends the currently buffered response to the client.</source>
          <target state="translated">現在バッファリングされているすべての応答をクライアントへ送信します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>The asynchronous result object.</source>
          <target state="translated">非同期の結果オブジェクト。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>If the underlying <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously.</source>
          <target state="translated">場合、基になる<ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph>オブジェクトが非同期フラッシュ操作をサポートしていると非同期モジュール イベントとは、非同期ハンドラーからこのメソッドを呼び出すのフラッシュ操作を非同期的に実行します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>Otherwise, the flush operation is performed synchronously.</source>
          <target state="translated">それ以外の場合のフラッシュ操作は同期的に実行します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>Asynchronous flush is supported for IIS 6.0 and later.</source>
          <target state="translated">IIS 6.0 以降の非同期フラッシュはサポートされています。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)">
          <source>The response is already completed.</source>
          <target state="translated">この応答は既に完了しています。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])">
          <source>The bytes to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込むバイト。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])">
          <source>Writes a string of binary characters to the HTTP output stream.</source>
          <target state="translated">HTTP 出力ストリームにバイナリ文字の文字列を書き込みます。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.BinaryWrite(System.Byte[])">
          <source>The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.</source>
          <target state="translated">次の例では、バッファーにテキスト ファイルを読み取ってし、バッファー、HTTP 出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Buffer">
          <source>Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.</source>
          <target state="translated">応答全体の処理が完了した後に、出力をバッファリングしてから送信するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Buffer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the output to client is buffered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">クライアントへの出力をバッファリングする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Buffer">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Buffer%2A&gt;</ph> property has been deprecated in favor of the <ph id="ph2">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property and is provided only for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Buffer%2A&gt;</ph>時に優先プロパティは廃止されて、<ph id="ph2">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>プロパティ ASP の旧バージョンと互換性のためだけに提供されます。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Buffer">
          <source>With ASP.NET, use <ph id="ph1">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>.</source>
          <target state="translated">ASP.NET を使用して<ph id="ph1">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.BufferOutput">
          <source>Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.</source>
          <target state="translated">ページ全体の処理が完了した後に、出力をバッファリングしてから送信するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.BufferOutput">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the output to client is buffered; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">クライアントへの出力をバッファリングする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.BufferOutput">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.BufferOutput">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property for the response to image/jpeg, calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method to remove other content that might be attached to the response, and then sets the <ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property to true so that the entire page will be processed before any content is sent to the requesting client.</source>
          <target state="translated">次の例のセット、 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> image/jpeg への応答のプロパティを呼び出し、<ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph>応答に添付し、設定をその他のコンテンツを削除する方法、<ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>ページ全体ができるように、true にプロパティ任意のコンテンツは、要求するクライアントに送信する前に処理されます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.BufferOutput">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">完全な例では、次を参照してください。、<ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Cache">
          <source>Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.</source>
          <target state="translated">Web ページのキャッシュ ポリシー (expiration time 句、privacy settings 句、および vary 句) を取得します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cache">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpCachePolicy" /&gt;</ph> object that contains information about the caching policy of the current response.</source>
          <target state="translated">現在の応答のキャッシュ ポリシーに関する情報を格納する <ph id="ph1">&lt;see cref="T:System.Web.HttpCachePolicy" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cache">
          <source>The following example writes properties of the current cache policy to the HTTP output stream.</source>
          <target state="translated">次の例では、現在のキャッシュ ポリシーのプロパティを HTTP 出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.CacheControl">
          <source>Gets or sets the <ph id="ph1">&lt;see langword="Cache-Control" /&gt;</ph> HTTP header that matches one of the <ph id="ph2">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> enumeration values.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> 列挙値の 1 つに一致する <ph id="ph1">&lt;see langword="Cache-Control" /&gt;</ph> HTTP ヘッダーを取得または設定します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>A string representation of the <ph id="ph1">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> 列挙値の文字列表現。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>The values for <ph id="ph1">`Private`</ph>, <ph id="ph2">`Public`</ph>, and <ph id="ph3">`No-Cache`</ph> are strings and must be enclosed in quotation marks (" ").</source>
          <target state="translated">値は、 <ph id="ph1">`Private`</ph>、 <ph id="ph2">`Public`</ph>、および<ph id="ph3">`No-Cache`</ph>文字列は、引用符で囲む必要があります ("") です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> property is set to a value that does not match one of the <ph id="ph2">&lt;xref:System.Web.HttpCacheability&gt;</ph> enumeration values, then an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph>のいずれかに一致しない値に設定されて、<ph id="ph2">&lt;xref:System.Web.HttpCacheability&gt;</ph>列挙値、<ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> property is not set, the cacheability of the response is set to <ph id="ph2">&lt;xref:System.Web.HttpCacheability.NoCache&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph>プロパティが設定されていない、応答のキャッシュの設定が に設定されている<ph id="ph2">&lt;xref:System.Web.HttpCacheability.NoCache&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>The <ph id="ph1">`CacheControl`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph> properties have been deprecated.</source>
          <target state="translated"><ph id="ph1">`CacheControl`</ph>、 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph>プロパティは推奨されません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.CacheControl">
          <source>Instead, the methods of the <ph id="ph1">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> class are available through the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</source>
          <target state="translated">代わりのメソッド、<ph id="ph1">&lt;xref:System.Web.HttpCachePolicy&gt;</ph>で使用可能なクラス、<ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph>インターネット インフォメーション サービス (IIS) を制御する組み込みのオブジェクトがキャッシュとクライアントのキャッシュを出力します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.CacheControl">
          <source>The string value set does not match one of the <ph id="ph1">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> enumeration values.</source>
          <target state="translated">文字列値セットが、<ph id="ph1">&lt;see cref="T:System.Web.HttpCacheability" /&gt;</ph> 列挙値の 1 つに一致しません。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Charset">
          <source>Gets or sets the HTTP character set of the output stream.</source>
          <target state="translated">出力ストリームの HTTP 文字セットを取得または設定します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Charset">
          <source>The HTTP character set of the output stream.</source>
          <target state="translated">出力ストリームの HTTP 文字セット。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Charset">
          <source>The <ph id="ph1">`Charset`</ph> property can be set to <ph id="ph2">`null`</ph> to suppress the HTTP <ph id="ph3">`Content-Type`</ph> header.</source>
          <target state="translated"><ph id="ph1">`Charset`</ph>プロパティに設定することができます<ph id="ph2">`null`</ph>を抑制する状況、HTTP<ph id="ph3">`Content-Type`</ph>ヘッダー。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Charset">
          <source>The following example checks whether the character set of the output stream is Central European (ISO).</source>
          <target state="translated">次の例では、出力ストリームの文字セットが中央ヨーロッパ言語 (ISO) であるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Charset">
          <source>The <ph id="ph1">&lt;see langword="Charset" /&gt;</ph> property was set after headers were sent.</source>
          <target state="translated">ヘッダーが送信された後に <ph id="ph1">&lt;see langword="Charset" /&gt;</ph> プロパティが設定されました。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Clear">
          <source>Clears all content output from the buffer stream.</source>
          <target state="translated">すべての内容出力をバッファー ストリームから削除します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method does not clear header information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph>メソッドでは、ヘッダー情報は消去されません。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Clear">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property for the response to image/jpeg, calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method to remove other content that might be attached to the response, and then sets the <ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property to true so that the complete page will be processed before any content is sent to the requesting client.</source>
          <target state="translated">次の例のセット、 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> image/jpeg への応答のプロパティを呼び出し、<ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph>応答に添付し、設定をその他のコンテンツを削除する方法、<ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>できるように、[完了] ページは、true にプロパティ任意のコンテンツは、要求するクライアントに送信する前に処理されます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Clear">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">完全な例では、次を参照してください。、<ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ClearContent">
          <source>Clears all content output from the buffer stream.</source>
          <target state="translated">すべての内容出力をバッファー ストリームから削除します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.ClearContent%2A&gt;</ph> method does not clear header information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.ClearContent%2A&gt;</ph>メソッドでは、ヘッダー情報は消去されません。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearContent">
          <source>The following example clears all content from the buffer stream.</source>
          <target state="translated">次の例では、バッファー ストリームからすべてのコンテンツを消去します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>Clears all headers from the buffer stream.</source>
          <target state="translated">バッファー ストリームからすべてのヘッダーを削除します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ClearHeaders%2A&gt;</ph> method to ensure that no headers are sent with the current response.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Web.HttpResponse.ClearHeaders%2A&gt;</ph>メソッドを現在の応答のヘッダーが送信されないことを確認してください。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file.</source>
          <target state="translated">この方法は、ASP.NET の応答には、JPEG ファイルなどの画像が生成する場合に特に重要です。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>In this example the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property is set to image/jpeg.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph>イメージ/jpeg 形式に設定されます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.ClearHeaders">
          <source>Headers are cleared after the HTTP headers have been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にヘッダーが削除されています。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> object that is tripped when the client disconnects.</source>
          <target state="translated">クライアントの接続が切断されるとトリップされる <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>The cancellation token.</source>
          <target state="translated">キャンセル トークン。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>This API is thread-safe.</source>
          <target state="translated">この API は、スレッド セーフです。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>However, there are some restrictions on how the cancellation token should be used.</source>
          <target state="translated">ただし、キャンセル トークンの使用方法のいくつかの制限があります。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior.</source>
          <target state="translated">不適切な使用には、競合状態、デッドロック、またはその他の予期しない動作をする可能性があります。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Keep in mind the following guidelines:</source>
          <target state="translated">次のガイドラインに留意してください。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request.</source>
          <target state="translated">ASP.NET は、最後の要求のキャンセル トークンの破棄するために 1 つの要求の境界の外側には、この API を呼び出すしないことを確認します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>There is no guarantee that the token will ever transition to a canceled state before it is disposed.</source>
          <target state="translated">破棄される前に、トークンは取り消された状態に移行ことの保証はありません。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.</source>
          <target state="translated">たとえば、切断を持つクライアントを使用せず、要求が完了すると場合、最初取り消されたことがなく、トークンが破棄されます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Do not wait on the <ph id="ph1">&lt;xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType&gt;</ph>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.</source>
          <target state="translated">待機しない、<ph id="ph1">&lt;xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=nameWithType&gt;</ph>ように、この非同期通知の目的を達成できないし、デッドロックが発生することができます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType&gt;</ph> overloads which invoke the callback on the original <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object.</source>
          <target state="translated">呼び出す必要はありません、<ph id="ph1">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType&gt;</ph>呼び出し元にコールバックするオーバー ロード<ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <ph id="ph2">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">使用しないで、<ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph>オブジェクトまたはその他の非スレッド セーフな ASP.NET 組み込みのオブジェクトからに提供されるコールバック内で、<ph id="ph2">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>The callback may be running concurrently with other ASP.NET or application code.</source>
          <target state="translated">その他の ASP.NET と同時に、コールバックが実行されている可能性がありますまたはアプリケーション コードです。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Keep the callback methods short-running and non-blocking.</source>
          <target state="translated">コールバック メソッドの実行時間が短いと非ブロッキングを保持します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>Make every effort to avoid throwing exceptions from within the callback methods.</source>
          <target state="translated">コールバック メソッド内から例外がスローされないようにするには、あらゆる努力を確認します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode.</source>
          <target state="translated">このプロパティは統合モードでのみインターネット インフォメーション サービス (IIS) 7.5 を適用します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>If you invoke it without the right IIS version or pipeline mode, a <ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">右側の IIS バージョンまたはパイプライン モードを使用せずに実行する場合、<ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>To determine the IIS version, use <ph id="ph1">&lt;xref:System.Web.HttpRuntime.IISVersion%2A&gt;</ph>.</source>
          <target state="translated">IIS のバージョンを確認するに<ph id="ph1">&lt;xref:System.Web.HttpRuntime.IISVersion%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ClientDisconnectedToken">
          <source>To determine the pipeline mode, use <ph id="ph1">&lt;xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A&gt;</ph>.</source>
          <target state="translated">パイプライン モードを確認するに<ph id="ph1">&lt;xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Close">
          <source>Closes the socket connection to a client.</source>
          <target state="translated">クライアントへのソケット接続を閉じます。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Close">
          <source>This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing.</source>
          <target state="translated">このメソッドは、急激な方法でクライアントへの接続を終了し、通常の HTTP 要求処理のためのものではありません。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Close">
          <source>The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.</source>
          <target state="translated">メソッドは、サーバー、クライアント、または削除する間に別の場所で応答データがバッファーに保存される可能性がありますクライアントに、リセット パケットを送信します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Close">
          <source>However, typically you should call <ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> instead if you want to jump ahead to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event and send a response to the client.</source>
          <target state="translated">ただし、通常を呼び出す必要があります<ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>代わりに身にする場合、<ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph>イベントと、クライアントへの応答を送信します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>Gets or sets the HTTP character set of the output stream.</source>
          <target state="translated">出力ストリームの HTTP 文字セットを取得または設定します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> object that contains information about the character set of the current response.</source>
          <target state="translated">現在の応答の文字セットに関する情報を格納している <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>Default <ph id="ph1">`ContentEncoding`</ph> can be specified in an ASP.NET configuration file in the <bpt id="p1">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> section.</source>
          <target state="translated">既定の<ph id="ph1">`ContentEncoding`</ph>ASP.NET 構成ファイル内に指定することができます、<bpt id="p1">[</bpt>グローバリゼーション要素 (ASP.NET 設定スキーマ)<ept id="p1">](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept>セクションです。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentEncoding%2A&gt;</ph> is specified by the client, the default configuration settings are overridden.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentEncoding%2A&gt;</ph>が指定されて、クライアントによって既定の構成設定が上書きされます。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>The following example writes a human-readable description of the character set encoding to the output stream.</source>
          <target state="translated">次の例では、文字セットを出力ストリームのエンコーディングの人間が判読できる説明を書き込みます。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ContentEncoding">
          <source>Attempted to set <ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ContentEncoding" /&gt;</ph> to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ContentEncoding" /&gt;</ph> を <ph id="ph2">&lt;see langword="null" /&gt;</ph> に設定しようとしました。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ContentType">
          <source>Gets or sets the HTTP MIME type of the output stream.</source>
          <target state="translated">出力ストリームの HTTP MIME タイプを取得または設定します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentType">
          <source>The HTTP MIME type of the output stream.</source>
          <target state="translated">出力ストリームの HTTP MIME タイプ。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentType">
          <source>The default value is "<ph id="ph1">&lt;see langword="text/html" /&gt;</ph>".</source>
          <target state="translated">既定値は "<ph id="ph1">&lt;see langword="text/html" /&gt;</ph>" です。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentType">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> property for the response to image/jpeg, calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method to remove other content that might be attached to the response, and then sets the <ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property to true so that the complete page will be processed before any content is sent to the requesting client.</source>
          <target state="translated">次の例のセット、 <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentType%2A&gt;</ph> image/jpeg への応答のプロパティを呼び出し、<ph id="ph2">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph>応答に添付し、設定をその他のコンテンツを削除する方法、<ph id="ph3">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>できるように、[完了] ページは、true にプロパティ任意のコンテンツは、要求するクライアントに送信する前に処理されます。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ContentType">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">完全な例では、次を参照してください。、<ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ContentType">
          <source>The <ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ContentType" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ContentType" /&gt;</ph> プロパティが <ph id="ph2">&lt;see langword="null" /&gt;</ph> に設定されている。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Cookies">
          <source>Gets the response cookie collection.</source>
          <target state="translated">応答のクッキー コレクションを取得します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>The response cookie collection.</source>
          <target state="translated">応答のクッキー コレクション。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>ASP.NET includes two intrinsic cookie collections.</source>
          <target state="translated">ASP.NET には、2 つの組み込みクッキー コレクションが含まれています。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph> contains cookies transmitted by the client to the server in the <ph id="ph3">`Cookie`</ph> header.</source>
          <target state="translated">使用してアクセスするコレクション、<ph id="ph1">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>のコレクション<ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph>内のサーバーにクライアントによって送信された cookie が含まれています、<ph id="ph3">`Cookie`</ph>ヘッダー。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> contains new cookies created on the server and transmitted to the client in the <ph id="ph3">`Set-Cookie`</ph> header.</source>
          <target state="translated">使用してアクセスするコレクション、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A&gt;</ph>のコレクション<ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph>、サーバー上に作成され、クライアントに送信された cookie が含まれています、<ph id="ph3">`Set-Cookie`</ph>ヘッダー。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>After you add a cookie by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType&gt;</ph> collection, the cookie is immediately available in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType&gt;</ph> collection, even if the response has not been sent to the client.</source>
          <target state="translated">使用して cookie を追加した後、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType&gt;</ph>コレクション、cookie がですぐに使用できる、<ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType&gt;</ph>応答がクライアントに送信されていない場合でも、コレクション。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>The following example creates a new cookie named <ph id="ph1">`LastVisit`</ph>, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection.</source>
          <target state="translated">次の例では、という名前の新しい cookie <ph id="ph1">`LastVisit`</ph>、現在の日付と時刻に cookie の値を設定し、cookie を現在のクッキー コレクションに追加します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Cookies">
          <source>All cookies in the cookie collection are sent to the client in the <ph id="ph1">`Set-Cookie`</ph> header with the HTTP output stream.</source>
          <target state="translated">クッキー コレクションのすべての cookie がクライアントに送信される、<ph id="ph1">`Set-Cookie`</ph>の HTTP ヘッダー出力ストリーム。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.DisableKernelCache">
          <source>Disables kernel caching for the current response.</source>
          <target state="translated">現在の応答に対するカーネル キャッシュを無効にします。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.DisableKernelCache">
          <source>If kernel caching is not supported, this method has no effect.</source>
          <target state="translated">カーネル キャッシュがサポートされていない場合は、このメソッドに効果がありません。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.DisableUserCache">
          <source>Disables IIS user-mode caching for this response.</source>
          <target state="translated">この応答に対する IIS ユーザー モードのキャッシュを無効にします。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.DisableUserCache">
          <source>If IIS user-mode caching is not supported, this method returns without performing any action.</source>
          <target state="translated">IIS ユーザー モードのキャッシュがサポートされていない場合、このメソッドは、アクションを実行しないで返します。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.End">
          <source>Sends all currently buffered output to the client, stops execution of the page, and raises the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event.</source>
          <target state="translated">現在バッファリングされているすべての出力をクライアントへ送信し、ページの実行を停止して、<ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>This method is provided only for compatibility with ASP—that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET.</source>
          <target state="translated">このメソッドは ASP との互換性のためだけに提供: は、ASP.NET の前に COM ベースの Web プログラミング テクノロジとの互換性。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>If you want to jump ahead to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event and send a response to the client, it is usually preferable to call <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> instead.</source>
          <target state="translated">身にする場合、<ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph>イベントと、クライアントへの応答の送信、勧めを呼び出す<ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>代わりにします。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>To mimic the behavior of the <ph id="ph1">`End`</ph> method in ASP, this method tries to raise a <ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception.</source>
          <target state="translated">動作を模倣するために、<ph id="ph1">`End`</ph>メソッドの ASP では、このメソッドは、生成を試みます、<ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance.</source>
          <target state="translated">この試行が成功した場合は、呼び出し元のスレッドが中止されました、これは、サイトのパフォーマンスを低下させます。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>In that case, no code after the call to the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method is executed.</source>
          <target state="translated">その場合、呼び出しの後にコードなしで、<ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>メソッドを実行します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method is not able to raise a <ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>, it instead flushes the response bytes to the client.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>メソッドを上げることはありません、<ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>に代わりに、応答のバイト数をクライアントにフラッシュします。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>It does this synchronously, which can also be detrimental to your site's performance.</source>
          <target state="translated">これは、同期的に、サイトのパフォーマンスに悪影響を及ぼすすることができます。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>In either case (whether or not a <ph id="ph1">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception is successfully raised), the response pipeline jumps ahead to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event.</source>
          <target state="translated">どちらの場合 (かどうか、<ph id="ph1">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>例外が発生しました)、応答パイプライン ジャンプ、<ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method does not raise an exception, and code after the call to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method might be executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>メソッドは、例外を発生させるされず、コードの呼び出しの後に、<ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>メソッドを実行する可能性があります。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.End">
          <source>If your intention is to avoid execution of subsequent code, and if the performance penalty of <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> is acceptable, you can call <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> instead of <ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>.</source>
          <target state="translated">後続のコードの実行を回避するのには、場合のパフォーマンスの低下<ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>は呼び出すことができます、許容<ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>の代わりに<ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.End">
          <source>The call to <ph id="ph1">&lt;see cref="M:System.Web.HttpResponse.End" /&gt;</ph> has terminated the current request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.HttpResponse.End" /&gt;</ph> の呼び出しは、現在の要求を終了しました。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)">
          <source>The asynchronous result object.</source>
          <target state="translated">非同期の結果オブジェクト。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)">
          <source>Completes an asynchronous flush operation.</source>
          <target state="translated">非同期のフラッシュ操作を完了します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)">
          <source>Asynchronous flush is not supported and the <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">非同期フラッシュはサポートされていません。<ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> パラメーターは <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.EndFlush(System.IAsyncResult)">
          <source>Asynchronous flush is not supported and the <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter cannot be cast to a <bpt id="p1">&lt;c&gt;</bpt>FlushAsyncResult<ept id="p1">&lt;/c&gt;</ept> object.</source>
          <target state="translated">非同期フラッシュはサポートされていません。<ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> パラメーターは <bpt id="p1">&lt;c&gt;</bpt>FlushAsyncResult<ept id="p1">&lt;/c&gt;</ept> オブジェクトにキャストできません。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Expires">
          <source>Gets or sets the number of minutes before a page cached on a browser expires.</source>
          <target state="translated">ブラウザーでキャッシュされたページの有効期限が切れるまでの時間を分単位で取得または設定します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Expires">
          <source>If the user returns to the same page before it expires, the cached version is displayed.</source>
          <target state="translated">有効期限が切れる前にユーザーが同じページに戻った場合、キャッシュされたバージョンが表示されます。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Expires">
          <source><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.Expires" /&gt;</ph> is provided for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.Expires" /&gt;</ph> は、ASP の旧バージョンとの互換性のために提供されています。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Expires">
          <source>The number of minutes before the page expires.</source>
          <target state="translated">ページの有効期限が切れるまでの分単位の時間。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Expires">
          <source>The <ph id="ph1">`Expires`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> properties have been deprecated in favor of the methods of the <ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> class available through the <ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</source>
          <target state="translated"><ph id="ph1">`Expires`</ph>、<ph id="ph2">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph>と<ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph>のメソッドを優先するためのプロパティは推奨されません、<ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph>クラスを通じて利用可能な<ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph>インターネット インフォメーション サービス (IIS) を制御する組み込みのオブジェクトがキャッシュとクライアントのキャッシュを出力します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ExpiresAbsolute">
          <source>Gets or sets the absolute date and time at which to remove cached information from the cache.</source>
          <target state="translated">キャッシュされた情報をキャッシュから削除する絶対日時を取得または設定します。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.ExpiresAbsolute">
          <source><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /&gt;</ph> is provided for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.ExpiresAbsolute" /&gt;</ph> は、ASP の旧バージョンとの互換性のために提供されています。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ExpiresAbsolute">
          <source>The date and time at which the page expires.</source>
          <target state="translated">ページの有効期限が切れる日付と時刻。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.ExpiresAbsolute">
          <source>The <ph id="ph1">`ExpiresAbsolute`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> properties have been deprecated in favor of the methods of the <ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> class available through the <ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</source>
          <target state="translated"><ph id="ph1">`ExpiresAbsolute`</ph>、 <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph>のメソッドを優先するためのプロパティは推奨されません、<ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph>クラスを通じて利用可能な<ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph>インターネット インフォメーション サービス (IIS) を制御する組み込みのオブジェクトがキャッシュとクライアントのキャッシュを出力します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Filter">
          <source>Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.</source>
          <target state="translated">伝送する前に HTTP エンティティ本体を変更するために使用される、ラッピング フィルター オブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object that acts as the output filter.</source>
          <target state="translated">出力フィルターとして機能する <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>When you create a <ph id="ph1">`Stream`</ph> object and set the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> property to the <ph id="ph3">`Stream`</ph> object, all HTTP output sent by <ph id="ph4">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph> passes through the filter.</source>
          <target state="translated">作成するときに、<ph id="ph1">`Stream`</ph>オブジェクトし、設定、<ph id="ph2">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph>プロパティを<ph id="ph3">`Stream`</ph>オブジェクト、すべての HTTP によって送信される出力<ph id="ph4">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph>フィルターを通過します。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>The following example is an ASP.NET page that sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> property to a new instance of the <ph id="ph2">`UpperCaseFilter`</ph> class, a custom <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> class that converts all text that passes through it to uppercase.</source>
          <target state="translated">次の例は、ASP.NET ページを設定する、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph>プロパティの新しいインスタンスを<ph id="ph2">`UpperCaseFilter`</ph>クラス、カスタム<ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>を大文字に通過するすべてのテキストに変換するクラス。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>The information about the request is saved to a text file, and then the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> property is set.</source>
          <target state="translated">要求に関する情報が、テキスト ファイルに保存し、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph>プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>After the response filter is in place, the code calls the <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> method to get the absolute path to a text file named <ph id="ph2">`TestFile.txt`</ph> that serves as the source for the content of the response.</source>
          <target state="translated">応答フィルターを配置した後、コードを呼び出し、<ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph>という名前のテキスト ファイルへの絶対パスを取得するメソッド<ph id="ph2">`TestFile.txt`</ph>応答のコンテンツのソースとして機能します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Filter">
          <source>The code then creates a new <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object to read the text file from beginning to end, and then calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph> method to display the content of the file on the page.</source>
          <target state="translated">コードは、作成し、新しい<ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph>を終了するには最初の呼び出しからテキスト ファイルを読み込むため、<ph id="ph2">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph>ページ上のファイルの内容を表示するメソッド。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Filter">
          <source>Filtering is not allowed with the entity.</source>
          <target state="translated">このエンティティではフィルター処理を実行できません。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Flush">
          <source>Sends all currently buffered output to the client.</source>
          <target state="translated">現在バッファリングされているすべての出力をクライアントへ送信します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>Forces all currently buffered output to be sent to the client.</source>
          <target state="translated">強制的に実行は、クライアントに送信される出力中のすべてをバッファーします。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> method can be called multiple times during request processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph>メソッドは、要求の処理中に複数回呼び出すことがあります。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph> method to save a <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> property and converts the image to the JPEG format.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Drawing.Graphics.Save%2A&gt;</ph>を保存する方法、<ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph>オブジェクトを<ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph>プロパティに変換し、イメージ、jpeg 形式に書式を設定します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>The code then calls the <ph id="ph1">`Dispose`</ph> method on the <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph> object and a <ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph> object, releasing the resources that they were using.</source>
          <target state="translated">コードで、<ph id="ph1">`Dispose`</ph>メソッドを<ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph>オブジェクトおよび<ph id="ph3">&lt;xref:System.Drawing.Graphics&gt;</ph>使用されていたリソースを解放するオブジェクト。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> method to send the content of the response to the requesting client.</source>
          <target state="translated">呼び出して、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph>要求元のクライアントへの応答のコンテンツを送信するメソッド。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Flush">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">完全な例では、次を参照してください。、<ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Flush">
          <source>The cache is flushed after the response has been sent.</source>
          <target state="translated">応答が送信された後にキャッシュがフラッシュされています。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.FlushAsync">
          <source>Asynchronously sends all currently buffered output to the client.</source>
          <target state="translated">現在バッファリングされているすべての出力をクライアントへ非同期的に送信します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.FlushAsync">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph> that represents the asynchronous operation.</source>
          <target state="translated">非同期操作を表す <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> object that represents the encoding for the current header output stream.</source>
          <target state="translated">現在のヘッダー出力ストリームのエンコーディングを表す <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> オブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> that contains information about the character set for the current header.</source>
          <target state="translated">現在のヘッダーの文字セットに関する情報が格納されている <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> property gives you the ability to disable or change the <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> object on a response header by using the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>, <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, <ph id="ph5">&lt;xref:System.Text.UTF7Encoding&gt;</ph>, or <ph id="ph6">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph>プロパティは、無効化または変更する機能を提供、<ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph>応答ヘッダーを使用して上のオブジェクト、 <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>、 <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>、 <ph id="ph5">&lt;xref:System.Text.UTF7Encoding&gt;</ph>、または<ph id="ph6">&lt;xref:System.Text.UTF8Encoding&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The default encoding value is the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> class.</source>
          <target state="translated">既定のエンコーディング値は、<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>By changing the type of the <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header.</source>
          <target state="translated">型を変更することによって、<ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph>プロパティ、する可能性のあるリスクが大きく特定の悪意のある攻撃や、応答ヘッダーを使用して送信する機密性の高いデータの原因です。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>Header injection attacks can be avoided, in part, by leaving the <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> property of a response to the default setting.</source>
          <target state="translated">ヘッダー インジェクション攻撃を回避するの一部にすることで、<ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph>既定の設定への応答のプロパティです。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>An attack against a vulnerable application could echo back entrusted data as part of a response header.</source>
          <target state="translated">影響を受けるアプリケーションに対する攻撃は、信頼された応答ヘッダーの一部としてデータをエコーでしたです。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph>ヘッダー内の行を継続するか、応答ストリームに送信する前に、ヘッダー データを検証する必要があります任意のヘッダーが信頼されていないデータの結果に基づいて構築される場合に、要件のため無効にします。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The encoding value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">エンコーディング値は <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The encoding value is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.Unicode" /&gt;</ph>.</source>
          <target state="translated">エンコーディング値は <ph id="ph1">&lt;see cref="P:System.Text.Encoding.Unicode" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeaderEncoding">
          <source>The headers have already been sent.</source>
          <target state="translated">ヘッダーは既に送信されています。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Headers">
          <source>Gets the collection of response headers.</source>
          <target state="translated">応答ヘッダーのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Headers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph> of response headers.</source>
          <target state="translated">応答ヘッダーの <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.NameValueCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Headers">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph> property is only supported with the <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> integrated pipeline mode and at least the .NET Framework 3.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph>プロパティでのみサポートされます、<ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>統合パイプライン モードと、少なくとも .NET Framework 3.0。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Headers">
          <source>When you try to access the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph> property and either of these two conditions is not met, a <ph id="ph2">&lt;xref:System.PlatformNotSupportedException&gt;</ph> is thrown.</source>
          <target state="translated">アクセスしようとすると、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph>プロパティと、これら 2 つの条件のいずれかが満たされない、<ph id="ph2">&lt;xref:System.PlatformNotSupportedException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Headers">
          <source>The operation requires the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> and at least the .NET Framework version 3.0.</source>
          <target state="translated">操作には、<ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> の統合パイプライン モードと、少なくとも .NET Framework バージョン 3.0 が必要です。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeadersWritten">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
          <target state="translated">[.NET Framework 4.5.2 以降のバージョンでのみでサポート]</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.HeadersWritten">
          <source>Gets a value indicating whether the response headers have been written.</source>
          <target state="translated">応答ヘッダーが既に作成されたかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.HeadersWritten">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the response headers have been written; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">応答ヘッダーが書き込まれている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>Gets a value indicating whether the client is still connected to the server.</source>
          <target state="translated">クライアントがサーバーにまだ接続されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client is currently connected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">クライアントが現在接続されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> when the following conditions are true:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph>プロパティから返される<ph id="ph2">`false`</ph>次の条件が当てはまる場合。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>The connection to the client was terminated.</source>
          <target state="translated">クライアントへの接続が終了しました。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>This can occur if the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Close%2A&gt;</ph> method was invoked, or if the client stopped execution of the Web page or browsed to another page.</source>
          <target state="translated">これは、場合に発生することができます、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Close%2A&gt;</ph>メソッドが呼び出されたか、クライアントが Web ページの実行を停止しているか、別のページを参照します。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> object that is handling the request is <ph id="ph2">`null`</ph> or the <ph id="ph3">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType&gt;</ph> method returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph>要求を処理しているオブジェクトが<ph id="ph2">`null`</ph>または<ph id="ph3">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType&gt;</ph>メソッドを返します。<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>If a custom <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> object handles the request, then the <ph id="ph2">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType&gt;</ph> method might be set based on custom criteria.</source>
          <target state="translated">場合、カスタム<ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph>オブジェクトは、要求を処理し、<ph id="ph2">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=nameWithType&gt;</ph>メソッドに設定できるに基づいてカスタム条件。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>For example, the custom worker request might force a time-out after a period of time.</source>
          <target state="translated">たとえば、カスタム ワーカー要求は、一定時間のタイムアウトを強制する可能性があります。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property to check whether the client that is requesting the page remains connected to the server.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph>ページを要求しているクライアントがサーバーに接続されているかどうかを確認するプロパティです。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> is true, the code calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method, and the client will view another page.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph>が true の場合、コードの呼び出し、<ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッド、およびクライアントが別のページに表示されます。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsClientConnected">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> is false, then the code calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method and all page processing is terminated.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph>が false で、コードを呼び出し、<ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>メソッドとページのすべての処理を終了します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.IsRequestBeingRedirected">
          <source>Gets a Boolean value indicating whether the client is being transferred to a new location.</source>
          <target state="translated">クライアントが新しい場所へ転送されている最中かどうかを示すブール値を取得します。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsRequestBeingRedirected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the location response header is different than the current location; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Location 応答ヘッダーの値が現在の場所と異なる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.IsRequestBeingRedirected">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A&gt;</ph> property with the <ph id="ph2">&lt;xref:System.Web.HttpResponse.RedirectLocation%2A&gt;</ph> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP <ph id="ph3">`Location`</ph> header is different than the current URI and what the new intended URI that is being transferred to will be.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A&gt;</ph>を持つプロパティ、<ph id="ph2">&lt;xref:System.Web.HttpResponse.RedirectLocation%2A&gt;</ph>をテストし、確認するかどうかの絶対 URI であるプロパティ、HTTP でクライアントに送信され<ph id="ph3">`Location`</ph>ヘッダーは現在の URI となる新しい意図された URI に転送されるよりも異なります。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Output">
          <source>Enables output of text to the outgoing HTTP response stream.</source>
          <target state="translated">発信 HTTP 応答ストリームへのテキストの出力を有効にします。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Output">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object that enables custom output to the client.</source>
          <target state="translated">クライアントへのカスタム出力を有効にする <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Output">
          <source>The following example is an ASP.NET page that contains a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control that has its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox.TextMode%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Web.UI.WebControls.TextBoxMode.MultiLine&gt;</ph>.</source>
          <target state="translated">次の例は、ASP.NET ページが含まれていますが、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>を持つコントロールをその<ph id="ph2">&lt;xref:System.Web.UI.WebControls.TextBox.TextMode%2A&gt;</ph>プロパティに設定<ph id="ph3">&lt;xref:System.Web.UI.WebControls.TextBoxMode.MultiLine&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Output">
          <source>The page's code takes the text that a user enters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox.TextMode%2A&gt;</ph>, uses the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> method to HTML encode it, and the <ph id="ph3">&lt;xref:System.Web.HttpResponse.Output%2A&gt;</ph> property to display the encoded string to the page.</source>
          <target state="translated">ページのコードでユーザーが入力したテキストでは、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox.TextMode%2A&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph>メソッドを HTML エンコードして、および<ph id="ph3">&lt;xref:System.Web.HttpResponse.Output%2A&gt;</ph>ページに、エンコードされた文字列を表示するプロパティです。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.OutputStream">
          <source>Enables binary output to the outgoing HTTP content body.</source>
          <target state="translated">発信 HTTP コンテンツ本体へのバイナリ出力を有効にします。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>An IO <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> representing the raw contents of the outgoing HTTP content body.</source>
          <target state="translated">発信 HTTP コンテンツ本体の生の内容を表す IO <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>Starting with the .NET Framework version 2.0, when you use the <ph id="ph1">&lt;xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method of the IO stream returned by the <ph id="ph2">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> property, the following exceptions might be thrown:</source>
          <target state="translated">以降、.NET Framework version 2.0 では、使用する場合、<ph id="ph1">&lt;xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>メソッドによって返される IO ストリームのメソッド、<ph id="ph2">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph>プロパティ、次の例外がスローされます。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, if the <ph id="ph2">`offset`</ph> or <ph id="ph3">`count`</ph> parameter is negative or if the <ph id="ph4">`buffer`</ph> parameter's length minus the <ph id="ph5">`offset`</ph> parameter is less than or equal to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>、場合、<ph id="ph2">`offset`</ph>または<ph id="ph3">`count`</ph>パラメーターが負の値と、<ph id="ph4">`buffer`</ph>引いたパラメーターの長さ、<ph id="ph5">`offset`</ph>パラメーターが 0 未満です。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source><ph id="ph1">&lt;xref:System.ArgumentNullException&gt;</ph>, if the <ph id="ph2">`buffer`</ph> parameter is <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ArgumentNullException&gt;</ph>、場合、<ph id="ph2">`buffer`</ph>パラメーターは<ph id="ph3">`null`</ph>します。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Drawing.Image.Save%2A&gt;</ph> method to save a <ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> property, and converts the image to the JPEG format.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Drawing.Image.Save%2A&gt;</ph>を保存する方法、<ph id="ph2">&lt;xref:System.Drawing.Bitmap&gt;</ph>オブジェクトを<ph id="ph3">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph>プロパティ、および画像を JPEG 形式に変換します。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>The code then calls the Dispose method on the <ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph> object and a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object, releasing the resources that they were using.</source>
          <target state="translated">コードは、の Dispose メソッドを呼び出し、<ph id="ph1">&lt;xref:System.Drawing.Bitmap&gt;</ph>オブジェクトと<ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>オブジェクト、使用されていたリソースを解放します。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>Finally, the code calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> method to send the content of the response to the requesting client.</source>
          <target state="translated">最後に、コードが呼び出され、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph>要求元のクライアントへの応答のコンテンツを送信するメソッド。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.OutputStream">
          <source>For a complete example, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class.</source>
          <target state="translated">完全な例では、次を参照してください。、<ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.OutputStream">
          <source><ph id="ph1">&lt;paramref name="OutputStream" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="OutputStream" /&gt;</ph> が使用できません。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The string to add to the <ph id="ph1">&lt;see langword="PICS-Label" /&gt;</ph> header.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="PICS-Label" /&gt;</ph> ヘッダーに追加する文字列。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>Appends a HTTP <ph id="ph1">&lt;see langword="PICS-Label" /&gt;</ph> header to the output stream.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="PICS-Label" /&gt;</ph> ヘッダーを出力ストリームに追加します。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling.</source>
          <target state="translated">プラットフォームのインターネット コンテンツの選択 (写真) は、コンテンツのラベル付けの World Wide Web Consortium (W3C) 標準です。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>PICS is essentially a language for creating a ratings system.</source>
          <target state="translated">写真は基本的に、言語規制システムを作成するためです。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>Any value can be a PICS label; ASP.NET does not validate the label.</source>
          <target state="translated">任意の値は、写真のラベルを指定できます。ASP.NET では、ラベルは検証しません。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The maximum length of the string is 255 characters.</source>
          <target state="translated">文字列の最大長は、255 文字です。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>For more information about PICS standards and syntax, see the <bpt id="p1">[</bpt>World Wide Web Consortium<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37125)</ept> Web site.</source>
          <target state="translated">写真の標準と構文の詳細については、次を参照してください。、 <bpt id="p1">[</bpt>World Wide Web Consortium<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37125)</ept> Web サイトです。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The following example is an ASP.NET page that displays an image.</source>
          <target state="translated">次の例は、イメージを表示する ASP.NET ページです。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The page code calls the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Pics%2A&gt;</ph> method to set the HTTP <ph id="ph2">`PICS-Label`</ph> header for the response.</source>
          <target state="translated">ページのコードの呼び出し、 <ph id="ph1">&lt;xref:System.Web.HttpResponse.Pics%2A&gt;</ph> HTTP を設定するメソッドを<ph id="ph2">`PICS-Label`</ph>応答のヘッダー。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Pics(System.String)">
          <source>The string that is passed as the parameter to the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Pics%2A&gt;</ph> method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.</source>
          <target state="translated">パラメーターとして渡された文字列、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Pics%2A&gt;</ph>メソッドは、インターネット コンテンツ評価サイトを参照) の Web サイトから生成された評価ラベルを表します。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Promotes a promised object.</source>
          <target state="translated">promise オブジェクトを昇格させます。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>The URL of the push request.</source>
          <target state="translated">プッシュ要求の URL です。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>It should be the virtual path of the relative resource that the server wants to push to the client.</source>
          <target state="translated">サーバーがクライアントにプッシュする相対リソースの仮想パスになります。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>This API is to support applications sending push promises to HTTP 2.0 clients.</source>
          <target state="translated">この API は、プッシュ promise を HTTP 2.0 クライアントに送信する アプリケーションをサポートするためのものです。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>You can find more details regarding to Http2 server push at <bpt id="p1">[</bpt>HTTP/2 Specification Section 8.2: Server Push<ept id="p1">](https://http2.github.io/http2-spec/#PushResources)</ept>.</source>
          <target state="translated">Http2 サーバー プッシュに関する詳細は、「<bpt id="p1">[</bpt>HTTP/2 Specification Section 8.2: Server Push (HTTP/2 仕様セクション 8.2: サーバー プッシュ)<ept id="p1">](https://http2.github.io/http2-spec/#PushResources)</ept>」にあります。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</source>
          <target state="translated">PushPromise は非決定的であると、アプリケーションがそれに依存するロジックを含めることはできません。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>Its only purpose is performance advantage in some cases.</source>
          <target state="translated">唯一の目的は、場合によってはパフォーマンスが得られます。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</source>
          <target state="translated">プッシュ要求を完全に無視する原因となる多くの条件 (プロトコルと実装) があります。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String)">
          <source>The expectation is based on fire-and-forget.</source>
          <target state="translated">期待値が、火災忘れたに基づいています。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The URL of the push request.</source>
          <target state="translated">プッシュ要求の URL です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>It should be the virtual path of the relative resource that the server wants to push to the client.</source>
          <target state="translated">サーバーがクライアントにプッシュする相対リソースの仮想パスになります。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>Http request method that would be used by the push request.</source>
          <target state="translated">プッシュ要求で使用される http 要求メソッド。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>Http request header that would be used by the push request.</source>
          <target state="translated">プッシュ要求で使用される http 要求ヘッダー。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>This API is to support applications sending push promises to HTTP 2.0 clients.</source>
          <target state="translated">この API は、プッシュ promise を HTTP 2.0 クライアントに送信する アプリケーションをサポートするためのものです。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>You can find more details regarding to Http2 server push at <bpt id="p1">[</bpt>HTTP/2 Specification Section 8.2: Server Push<ept id="p1">](https://http2.github.io/http2-spec/#PushResources)</ept>.</source>
          <target state="translated">Http2 サーバー プッシュに関する詳細は、「<bpt id="p1">[</bpt>HTTP/2 Specification Section 8.2: Server Push (HTTP/2 仕様セクション 8.2: サーバー プッシュ)<ept id="p1">](https://http2.github.io/http2-spec/#PushResources)</ept>」にあります。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</source>
          <target state="translated">PushPromise は非決定的であると、アプリケーションがそれに依存するロジックを含めることはできません。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>Its only purpose is performance advantage in some cases.</source>
          <target state="translated">唯一の目的は、場合によってはパフォーマンスが得られます。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</source>
          <target state="translated">プッシュ要求を完全に無視する原因となる多くの条件 (プロトコルと実装) があります。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
          <source>The expectation is based on fire-and-forget.</source>
          <target state="translated">期待値が、火災忘れたに基づいています。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Redirects a client to a new URL.</source>
          <target state="translated">クライアントを新しい URL にリダイレクトします。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>The target location.</source>
          <target state="translated">対象となる位置。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>This may be an application-relative virtual path.</source>
          <target state="translated">アプリケーションの相対仮想パスを指定できます。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>Redirects a request to a new URL and specifies the new URL.</source>
          <target state="translated">新しい URL に要求をリダイレクトして、新しい URL を指定します。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>Calling <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> is equivalent to calling <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> with the second parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>は呼び出すことと同じ<ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>2 番目のパラメーターを設定して<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> which throws a <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception upon completion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> 呼び出し<ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>どのスロー、<ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>完了時に例外です。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>This exception has a detrimental effect on Web application performance.</source>
          <target state="translated">この例外は、Web アプリケーションのパフォーマンスに悪影響を与えます。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>Therefore, we recommend that instead of this overload you use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> overload and pass <ph id="ph2">`false`</ph> for the <ph id="ph3">`endResponse`</ph> parameter, and then call the <ph id="ph4">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method.</source>
          <target state="translated">そのため、ことをお勧めこのオーバー ロードではなくを使用すること、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph>オーバー ロードして渡す<ph id="ph2">`false`</ph>の<ph id="ph3">`endResponse`</ph>パラメーター、およびを呼び出します、<ph id="ph4">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> メソッドを参照してください。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data.</source>
          <target state="translated">モバイル ページに対してのみ場合、アプリケーションが cookie なしのセッションに依存または cookie なしのセッションを必要とするモバイル デバイスから要求を受信する可能性がありますパスにティルダ (~) を使用可能性新しいセッションが作成され、セッション データが失われる可能性があります。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>To set a property on a mobile control with a path such as "~/path", resolve the path using <ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph> "~/path" before assigning it to the property.</source>
          <target state="translated">など、パスを持つモバイル コントロールのプロパティを設定する"~/パス"を使用してパスを解決する<ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph>"~/パス"プロパティに割り当てる前にします。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>An alternative way to transfer control to another page is the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">別のページにコントロールを転送することも、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method is typically more efficient because it does not cause a round trip to the client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドでは通常より効率的なクライアントのラウンド トリップが発生しません。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Redirect Users to Another Page<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: 別のページにユーザーをリダイレクト<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>です。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>The following example forces an unconditional redirection to another Web site.</source>
          <target state="translated">次の例では、別の Web サイトへのリダイレクトを無条件を強制します。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String)">
          <source>A redirection is attempted after the HTTP headers have been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>The location of the target.</source>
          <target state="translated">リダイレクト先の場所。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>Indicates whether execution of the current page should terminate.</source>
          <target state="translated">現在のページの実行を終了するかどうかを示します。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>Redirects a client to a new URL.</source>
          <target state="translated">クライアントを新しい URL にリダイレクトします。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>Specifies the new URL and whether execution of the current page should terminate.</source>
          <target state="translated">新しい URL を指定し、さらに現在のページの実行を終了するかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>An absolute URL (for example, <ph id="ph1">http://www.contoso.com/default.aspx)</ph> or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.</source>
          <target state="translated">絶対 URL (たとえば、<ph id="ph1">http://www.contoso.com/default.aspx)</ph>またはターゲットの場所の相対 URL (たとえば、Default.aspx) を指定することができますが、一部のブラウザーは相対 URL を拒否することがあります。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>When you use this method in a page handler to terminate a request for one page and start a new request for another page, set <ph id="ph1">`endResponse`</ph> to <ph id="ph2">`false`</ph> and then call the <ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method.</source>
          <target state="translated">ときにこのメソッドを使用するページのハンドラーのセットを 1 つのページし、他のページの新しい要求の開始の要求を終了<ph id="ph1">`endResponse`</ph>に<ph id="ph2">`false`</ph>を呼び出すと、<ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>If you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`endResponse`</ph> parameter, this method calls the <ph id="ph3">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method for the original request, which throws a <ph id="ph4">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception when it completes.</source>
          <target state="translated">指定する場合<ph id="ph1">`true`</ph>の<ph id="ph2">`endResponse`</ph>パラメーターでは、このメソッドは、<ph id="ph3">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>メソッドをスロー、元の要求を<ph id="ph4">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>完了時に例外です。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>This exception has a detrimental effect on Web application performance, which is why passing <ph id="ph1">`false`</ph> for the <ph id="ph2">`endResponse`</ph> parameter is recommended.</source>
          <target state="translated">この例外は渡す理由は、Web アプリケーションのパフォーマンスに悪影響を与えます<ph id="ph1">`false`</ph>の<ph id="ph2">`endResponse`</ph>パラメーターをお勧めします。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> メソッドを参照してください。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data.</source>
          <target state="translated">モバイル ページは、場合は、アプリケーションが cookie なしのセッションに依存または cookie なしのセッションを必要とするモバイル デバイスから要求を受信する可能性がありますを新しいセッションを作成し、セッション データが失われる可能性があることができますパスにティルダ (~) を使用します。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>To set a property on a mobile control with a path such as "~/path", resolve the path using <ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph> "~/path" before assigning it to the property.</source>
          <target state="translated">など、パスを持つモバイル コントロールのプロパティを設定する"~/パス"を使用してパスを解決する<ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph>"~/パス"プロパティに割り当てる前にします。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>An alternative way to transfer control to another page is the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
          <target state="translated">別のページにコントロールを転送することも、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method is typically more efficient because it does not cause a round trip to the client.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>メソッドでは通常より効率的なクライアントのラウンド トリップが発生しません。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Redirect Users to Another Page<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: 別のページにユーザーをリダイレクト<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>です。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property to check whether the client that is requesting the page remains connected to the server.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph>ページを要求しているクライアントがサーバーに接続されているかどうかを確認するプロパティです。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> is true, the code calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> method, and the client will view another page.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph>が true の場合、コードの呼び出し、<ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>メソッド、およびクライアントが別のページに表示されます。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> is false, then the code calls the <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method and all page processing is terminated.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph>が false で、コードを呼び出し、<ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph>メソッドとページのすべての処理を終了します。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> contains a newline character.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> に改行文字が含まれています。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>A redirection is attempted after the HTTP headers have been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Redirect(System.String,System.Boolean)">
          <source>The page request is the result of a callback.</source>
          <target state="translated">ページ要求がコールバックの結果となっています。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.RedirectLocation">
          <source>Gets or sets the value of the HTTP <ph id="ph1">&lt;see langword="Location" /&gt;</ph> header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Location" /&gt;</ph> ヘッダーの値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.RedirectLocation">
          <source>The absolute URI that is transmitted to the client in the HTTP <ph id="ph1">&lt;see langword="Location" /&gt;</ph> header.</source>
          <target state="translated">HTTP <ph id="ph1">&lt;see langword="Location" /&gt;</ph> ヘッダーのクライアントに送信される絶対 URI。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.RedirectLocation">
          <source>The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.</source>
          <target state="translated">次の例では、このプロパティを使用して HTTP 301 応答コードを使用して永続的なリダイレクトをコーディングする場合、リダイレクト URL を指定する方法を示します。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.RedirectLocation">
          <source>The HTTP headers have already been written.</source>
          <target state="translated">HTTP ヘッダーは既に書き込まれています。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Performs a permanent redirection from a requested URL to a specified URL.</source>
          <target state="translated">要求された URL から指定された URL への永続的なリダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>The location to redirect the request to.</source>
          <target state="translated">要求のリダイレクト先の場所。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>Performs a permanent redirection from the requested URL to the specified URL.</source>
          <target state="translated">要求された URL から指定された URL への永続的なリダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph>メソッドのオーバー ロードが応答で 301 HTTP ステータス コードを提供し、要求をリダイレクトする URL を備えています。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>A 301 HTTP status code is a standard code in an HTTP response.</source>
          <target state="translated">301 の HTTP ステータス コードとは、HTTP 応答で標準的なコードです。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>It indicates that a permanent redirection exists, and it provides the redirection location.</source>
          <target state="translated">示して永続的なリダイレクトが存在する場合、リダイレクトの場所が提供されます。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph> method overload terminates the response.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph>メソッドのオーバー ロードは、応答を終了します。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> includes a newline character (<bpt id="p1">&lt;c&gt;</bpt>\n<ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> に改行文字 (<bpt id="p1">&lt;c&gt;</bpt>\n<ept id="p1">&lt;/c&gt;</ept>) が含まれています。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>The location to redirect the request to.</source>
          <target state="translated">要求のリダイレクト先の場所。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to terminate the response; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">応答を終了する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.</source>
          <target state="translated">要求された URL から指定された URL への永続的なリダイレクトを実行し、応答を完了するためのオプションを提供します。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph>メソッドのオーバー ロードが応答で 301 HTTP ステータス コードを提供し、要求をリダイレクトする URL を備えています。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed.</source>
          <target state="translated">このメソッドのオーバー ロードには、終了するのか、リダイレクトが行われた後に、応答を完了するかを指定するオプションも用意されています。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>A 301 HTTP status code is a standard code in an HTTP response.</source>
          <target state="translated">301 の HTTP ステータス コードとは、HTTP 応答で標準的なコードです。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source>It indicates that a permanent redirection exists, and it provides the redirection location.</source>
          <target state="translated">示して永続的なリダイレクトが存在する場合、リダイレクトの場所が提供されます。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="url" /&gt;</ph> includes a newline character (<bpt id="p1">&lt;c&gt;</bpt>\n<ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="url" /&gt;</ph> に改行文字 (<bpt id="p1">&lt;c&gt;</bpt>\n<ept id="p1">&lt;/c&gt;</ept>) が含まれています。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Redirects a request to a new URL by using route parameter values, a route name, or both.</source>
          <target state="translated">ルートのパラメーター値とルート名の両方またはいずれかを使用して、新しい URL に要求をリダイレクトします。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>The route parameter values.</source>
          <target state="translated">ルートのパラメーター値。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>Redirects a request to a new URL by using route parameter values.</source>
          <target state="translated">ルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">このメソッドに渡されるオブジェクトは変換<ph id="ph1">`routeValues`</ph>を<ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph>オブジェクトを使用して、<ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is then called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL を確認するメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>The following example shows how to call this method to redirect to a route that has parameters that are named <ph id="ph1">`productid`</ph> and <ph id="ph2">`category`</ph>.</source>
          <target state="translated">次の例は名前付きパラメーターを持つルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`productid`</ph>と<ph id="ph2">`category`</ph>です。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Object)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>The name of the route.</source>
          <target state="translated">ルートの名前。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>Redirects a request to a new URL by using a route name.</source>
          <target state="translated">ルート名を使用して、新しい URL に要求をリダイレクトします。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>This method converts the route name that is passed in <ph id="ph1">`routeName`</ph> to a URL by using the <ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このメソッドは変換されたルート名は、渡された<ph id="ph1">`routeName`</ph>を使用して URL を<ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Products`</ph>.</source>
          <target state="translated">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`Products`</ph>です。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>The route parameter values.</source>
          <target state="translated">ルートのパラメーター値。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>Redirects a request to a new URL by using route parameter values.</source>
          <target state="translated">ルートのパラメーター値を使用して、新しい URL に要求をリダイレクトします。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method to determine the URL.</source>
          <target state="translated">このメソッドは、 <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL を確認します。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>The following example shows how to call this method to redirect to a route that has parameters that are named <ph id="ph1">`productid`</ph> and <ph id="ph2">`category`</ph>.</source>
          <target state="translated">次の例は名前付きパラメーターを持つルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`productid`</ph>と<ph id="ph2">`category`</ph>です。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>The name of the route.</source>
          <target state="translated">ルートの名前。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>The route parameter values.</source>
          <target state="translated">ルートのパラメーター値。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>Redirects a request to a new URL by using route parameter values and a route name.</source>
          <target state="translated">ルートのパラメーター値とルート名を使用して、新しい URL に要求をリダイレクトします。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">このメソッドに渡されるオブジェクトは変換<ph id="ph1">`routeValues`</ph>を<ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph>オブジェクトを使用して、<ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is then called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL を確認するメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Product`</ph> and that has parameters that are named <ph id="ph2">`productid`</ph> and <ph id="ph3">`category`</ph>.</source>
          <target state="translated">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`Product`</ph>は名前付きパラメーターを持つと<ph id="ph2">`productid`</ph>と<ph id="ph3">`category`</ph>です。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The name of the route.</source>
          <target state="translated">ルートの名前。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The route parameter values.</source>
          <target state="translated">ルートのパラメーター値。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>Redirects a request to a new URL by using route parameter values and a route name.</source>
          <target state="translated">ルートのパラメーター値とルート名を使用して、新しい URL に要求をリダイレクトします。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL を確認するメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
          <target state="translated">ASP.NET は、302 HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Product`</ph> and that has parameters that are named <ph id="ph2">`productid`</ph> and <ph id="ph3">`category`</ph>.</source>
          <target state="translated">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`Product`</ph>は名前付きパラメーターを持つと<ph id="ph2">`productid`</ph>と<ph id="ph3">`category`</ph>です。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values, a route name, or both.</source>
          <target state="translated">ルートのパラメーター値とルート名の両方またはいずれかを使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>The route parameter values.</source>
          <target state="translated">ルートのパラメーター値。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</source>
          <target state="translated">ルートのパラメーター値を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">このメソッドに渡されるオブジェクトは変換<ph id="ph1">`routeValues`</ph>を<ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph>オブジェクトを使用して、<ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is then called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL を確認するメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>The following example shows how to call this method to redirect to a route that has parameters that are named <ph id="ph1">`productid`</ph> and <ph id="ph2">`category`</ph>.</source>
          <target state="translated">次の例は名前付きパラメーターを持つルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`productid`</ph>と<ph id="ph2">`category`</ph>です。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>The name of the route.</source>
          <target state="translated">ルートの名前。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using a route name.</source>
          <target state="translated">ルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>This method converts the route name that is passed in <ph id="ph1">`routeName`</ph> to a URL by using the <ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このメソッドは変換されたルート名は、渡された<ph id="ph1">`routeName`</ph>を使用して URL を<ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Products`</ph>.</source>
          <target state="translated">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`Products`</ph>です。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>The route parameter values.</source>
          <target state="translated">ルートのパラメーター値。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</source>
          <target state="translated">ルートのパラメーター値を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method to determine the URL.</source>
          <target state="translated">このメソッドは、 <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL を確認します。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>The following example shows how to call this method to redirect to a route that has parameters that are named <ph id="ph1">`productid`</ph> and <ph id="ph2">`category`</ph>.</source>
          <target state="translated">次の例は名前付きパラメーターを持つルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`productid`</ph>と<ph id="ph2">`category`</ph>です。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>The name of the route.</source>
          <target state="translated">ルートの名前。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>The route parameter values.</source>
          <target state="translated">ルートのパラメーター値。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</source>
          <target state="translated">新しい URL に対応するルートのパラメーター値とルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%2A&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%2A&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">このメソッドに渡されるオブジェクトは変換<ph id="ph1">`routeValues`</ph>を<ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=nameWithType&gt;</ph>オブジェクトを使用して、<ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method is then called to determine the URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL を確認するメソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Product`</ph> and that has parameters that are named <ph id="ph2">`productid`</ph> and <ph id="ph3">`category`</ph>.</source>
          <target state="translated">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`Product`</ph>は名前付きパラメーターを持つと<ph id="ph2">`productid`</ph>と<ph id="ph3">`category`</ph>です。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The name of the route.</source>
          <target state="translated">ルートの名前。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The route parameter values.</source>
          <target state="translated">ルートのパラメーター値。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.</source>
          <target state="translated">ルートのパラメーター値とルート名を使用して、要求された URL から新しい URL への永続的なリダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>This method is provided for coding convenience.</source>
          <target state="translated">このメソッドは、コーディングの利便性を提供します。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">呼び出すことと等価である、<ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph>に設定する 2 番目のパラメーターを持つメソッド<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> method to determine the URL.</source>
          <target state="translated">このメソッドは、 <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType&gt;</ph> URL を確認します。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
          <target state="translated">ASP.NET は、301 の HTTP ステータス コードを返すことで、リダイレクトを実行します。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>The following example shows how to call this method to redirect to a route that is named <ph id="ph1">`Product`</ph> and that has parameters that are named <ph id="ph2">`productid`</ph> and <ph id="ph3">`category`</ph>.</source>
          <target state="translated">次の例は、という名前のルートにリダイレクトするには、このメソッドを呼び出す方法を示しています。<ph id="ph1">`Product`</ph>は名前付きパラメーターを持つと<ph id="ph2">`productid`</ph>と<ph id="ph3">`category`</ph>です。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>No route corresponds to the specified route parameters.</source>
          <target state="translated">指定されたルート パラメーターに対応するルートがありません。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にリダイレクトしようとしました。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Removes cached items from the output cache by using the default output-cache provider.</source>
          <target state="translated">既定の出力キャッシュ プロバイダーを使用して、出力キャッシュからキャッシュされたアイテムを削除します。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>The virtual absolute path to the items that are removed from the cache.</source>
          <target state="translated">キャッシュから削除されるアイテムへの仮想絶対パス。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>Removes from the cache all cached items that are associated with the default output-cache provider.</source>
          <target state="translated">既定の出力キャッシュ プロバイダーに関連付けられているキャッシュされたアイテムをすべてキャッシュから削除します。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>This method is static.</source>
          <target state="translated">これは静的メソッドです。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>Call this method to remove output-cache items that are associated with the default output-cache provider.</source>
          <target state="translated">既定の出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除するには、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A&gt;</ph> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.</source>
          <target state="translated">呼び出す、 <ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A&gt;</ph> Web サイトの構成ファイルで指定されているカスタムの出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除する方法です。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is not an absolute virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が絶対仮想パスではありません。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>The virtual absolute path of the items that are removed from the cache.</source>
          <target state="translated">キャッシュから削除されるアイテムへの絶対仮想パス。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>The provider that is used to remove the output-cache artifacts that are associated with the specified path.</source>
          <target state="translated">指定されたパスに関連付けられている出力キャッシュの成果物を削除するのに使用されるプロバイダー。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.</source>
          <target state="translated">指定された出力キャッシュ プロバイダーを使用して、指定されたパスに関連付けられている出力キャッシュ アイテムをすべて削除します。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file.</source>
          <target state="translated">Web サイトの構成ファイルで指定されているカスタム出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除するには、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source>To remove output-cache items that are associated with the default output-cache provider, call the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29&gt;</ph> method overload.</source>
          <target state="translated">既定の出力キャッシュ プロバイダーに関連付けられている出力キャッシュ アイテムを削除するには、呼び出し、<ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29&gt;</ph>メソッドのオーバー ロードします。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が null です。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an invalid path.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> に無効なパスが指定されています。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>The cookie in the collection to be updated.</source>
          <target state="translated">更新するコレクションに存在するクッキー。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>Because the <bpt id="p1">&lt;b&gt;</bpt>HttpResponse.SetCookie<ept id="p1">&lt;/b&gt;</ept> method is intended for internal use only, you should not call it in your code.</source>
          <target state="translated"><bpt id="p1">&lt;b&gt;</bpt>HttpResponse.SetCookie<ept id="p1">&lt;/b&gt;</ept> メソッドは内部でのみ使用されるため、コードで呼び出すべきではありません。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>Instead, you can call the <bpt id="p1">&lt;b&gt;</bpt>HttpResponse.Cookies.Set<ept id="p1">&lt;/b&gt;</ept> method, as the following example shows.</source>
          <target state="translated">代わりに、次の例に示すように <bpt id="p1">&lt;b&gt;</bpt>HttpResponse.Cookies.Set<ept id="p1">&lt;/b&gt;</ept> メソッドを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>Updates an existing cookie in the cookie collection.</source>
          <target state="translated">クッキー コレクションの既存のクッキーを更新します。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>The following example updates the value of an existing cookie.</source>
          <target state="translated">次の例では、既存のクッキーの値を更新します。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)">
          <source>Attempted to set the cookie after the HTTP headers were sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後にクッキーの設定が試みられました。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Status">
          <source>Sets the <ph id="ph1">&lt;see langword="Status" /&gt;</ph> line that is returned to the client.</source>
          <target state="translated">クライアントに返される <ph id="ph1">&lt;see langword="Status" /&gt;</ph> ラインを設定します。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Status">
          <source>Setting the status code causes a string describing the status of the HTTP output to be returned to the client.</source>
          <target state="translated">ステータス コードを設定すると、HTTP 出力のステータスを記述する文字列がクライアントへ返されます。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Status">
          <source>The default value is 200 (OK).</source>
          <target state="translated">既定値は 200 (OK) です。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Status">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Status%2A&gt;</ph> has been deprecated in favor of <ph id="ph2">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph> and is provided only for compatibility with earlier versions of ASP.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.Status%2A&gt;</ph> 代わりには廃止されて<ph id="ph2">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph>ASP の旧バージョンと互換性のためだけに提供されます。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.Status">
          <source>With ASP.NET, use <ph id="ph1">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph> instead.</source>
          <target state="translated">ASP.NET を使用して<ph id="ph1">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph>代わりにします。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.Status">
          <source>Status is set to an invalid status code.</source>
          <target state="translated">ステータスが、無効なステータス コードに設定されています。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusCode">
          <source>Gets or sets the HTTP status code of the output returned to the client.</source>
          <target state="translated">クライアントへ返される出力の HTTP ステータス コードを取得または設定します。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>An Integer representing the status of the HTTP output returned to the client.</source>
          <target state="translated">クライアントへ返される HTTP 出力のステータスを表す整数。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>The default value is 200 (OK).</source>
          <target state="translated">既定値は 200 (OK) です。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>For a listing of valid status codes, see <bpt id="p1">[</bpt>Http Status Codes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>.</source>
          <target state="translated">有効なステータス コードの一覧については、次を参照してください。 <bpt id="p1">[</bpt>Http ステータス コード<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>です。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>The following example checks the status code of the output stream.</source>
          <target state="translated">次の例では、出力ストリームの状態コードを確認します。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusCode">
          <source>If the status code is not equal to 200, additional code is executed.</source>
          <target state="translated">ステータス コードが 200 と等しくない場合は、追加のコードが実行されます。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusCode">
          <source><ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.StatusCode" /&gt;</ph> is set after the HTTP headers have been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後に、<ph id="ph1">&lt;see cref="P:System.Web.HttpResponse.StatusCode" /&gt;</ph> が設定されています。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>Gets or sets the HTTP status string of the output returned to the client.</source>
          <target state="translated">クライアントへ返される出力の HTTP ステータス文字列を取得または設定します。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>A string that describes the status of the HTTP output returned to the client.</source>
          <target state="translated">クライアントへ返される HTTP 出力のステータスを記述する文字列。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>The default value is "OK".</source>
          <target state="translated">既定値は "OK" です。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>For a listing of valid status codes, see <bpt id="p1">[</bpt>Http Status Codes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>.</source>
          <target state="translated">有効なステータス コードの一覧については、次を参照してください。 <bpt id="p1">[</bpt>Http ステータス コード<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>です。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>The following example checks the status string of the output stream.</source>
          <target state="translated">次の例では、出力ストリームのステータス文字列を確認します。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>If the status is not equal to "OK", additional code is executed.</source>
          <target state="translated">状態が"ok"と等しくない場合は、追加のコードが実行されます。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusDescription">
          <source><ph id="ph1">&lt;paramref name="StatusDescription" /&gt;</ph> is set after the HTTP headers have been sent.</source>
          <target state="translated">HTTP ヘッダーが送信された後に、<ph id="ph1">&lt;paramref name="StatusDescription" /&gt;</ph> が設定されています。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.StatusDescription">
          <source>The selected value has a length greater than 512.</source>
          <target state="translated">選択した値の長さが 512 を超えています。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>Gets or sets a value qualifying the status code of the response.</source>
          <target state="translated">応答のステータス コードを修飾する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>An integer value that represents the <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> sub status code.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> のサブステータス コードを表す整数の値。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> property is only supported with the integrated pipeline mode in <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> and at least the .NET Framework version 3.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph>プロパティは、統合パイプライン モードでのみサポートされます<ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>と、少なくとも .NET Framework バージョン 3.0。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> property, the status is logged on <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> if failed-request tracing is configured.</source>
          <target state="translated">設定すると、<ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph>プロパティ、状態がログオンして<ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph>失敗した要求トレースが構成されている場合。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>Independent of whether tracing is configured, the code is never sent as part of the final response to the request.</source>
          <target state="translated">トレースを構成するかどうかに関係なく、コードは、要求に最後の応答の一部としては送信されません。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>For more information, see <bpt id="p1">[</bpt>Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0<ept id="p1">](http://www.iis.net/default.aspx?tabid=2&amp;subtabid=25&amp;i=969&amp;p=1)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>のトラブルシューティングに失敗しました要求を使用して失敗した要求トレース IIS 7.0 で<ept id="p1">](http://www.iis.net/default.aspx?tabid=2&amp;subtabid=25&amp;i=969&amp;p=1)</ept>です。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> property in an event handler for the <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> instance of the <ph id="ph3">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event.</source>
          <target state="translated">次の例のセット、<ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph>のイベント ハンドラーのプロパティ、<ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph>のインスタンス、<ph id="ph3">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module.</source>
          <target state="translated">コード ファイル、Web アプリケーションの App_Code フォルダーに配置し、モジュールを登録する Web.config ファイルを構成します。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Creating and Registering a Custom HTTP Module<ept id="p1">](http://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>チュートリアル: カスタム HTTP モジュールの登録の作成と<ept id="p1">](http://msdn.microsoft.com/library/7787d5be-40a4-4072-9075-c2b767428453)</ept>です。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>The operation requires the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> and at least the .NET Framework version 3.0.</source>
          <target state="translated">操作には、<ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> の統合パイプライン モードと、少なくとも .NET Framework バージョン 3.0 が必要です。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SubStatusCode">
          <source>The status code is set after all HTTP headers have been sent.</source>
          <target state="translated">すべての HTTP ヘッダーが送信された後に、ステータス コードが設定されます。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SupportsAsyncFlush">
          <source>Gets a value that indicates whether the connection supports asynchronous flush operations.</source>
          <target state="translated">接続が非同期のフラッシュ操作をサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SupportsAsyncFlush">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection supports asynchronous flush operations; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">接続が非同期フラッシュ操作をサポートする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SupportsAsyncFlush">
          <source>This property returns the value of the <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">このプロパティの値を返します、<ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SuppressContent">
          <source>Gets or sets a value indicating whether to send HTTP content to the client.</source>
          <target state="translated">HTTP コンテンツをクライアントに送信するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressContent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to suppress output; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">出力しない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressContent">
          <source>The following example checks whether the <ph id="ph1">&lt;xref:System.Web.HttpRequest.IsSecureConnection%2A&gt;</ph> property is set to false.</source>
          <target state="translated">次の例をチェックするかどうか、<ph id="ph1">&lt;xref:System.Web.HttpRequest.IsSecureConnection%2A&gt;</ph>プロパティが false に設定します。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressContent">
          <source>If it is, the <ph id="ph1">&lt;xref:System.Web.HttpResponse.SuppressContent%2A&gt;</ph> property is set to true to stop the response from being sent.</source>
          <target state="translated">である場合、<ph id="ph1">&lt;xref:System.Web.HttpResponse.SuppressContent%2A&gt;</ph>プロパティが送信されてからの応答を停止する場合は true に設定します。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
          <target state="translated">[.NET Framework 4.5.2 以降のバージョンでのみでサポート]</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>Gets or sets a value indicating whether to suppress the default <bpt id="p1">&lt;c&gt;</bpt>Cache Control: private<ept id="p1">&lt;/c&gt;</ept> header for the current HTTP response.</source>
          <target state="translated">現在の HTTP 応答に対して既定の <bpt id="p1">&lt;c&gt;</bpt>Cache Control: private<ept id="p1">&lt;/c&gt;</ept> ヘッダーを抑制するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to suppress the default <bpt id="p1">&lt;c&gt;</bpt>Cache Control: private<ept id="p1">&lt;/c&gt;</ept> header for the current HTTP response; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 既定値を抑制する<bpt id="p1">&lt;c&gt;</bpt>Cache Control: プライベート<ept id="p1">&lt;/c&gt;</ept>の現在の HTTP 応答ヘッダーそれ以外の場合、<ph id="ph2">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>By default, ASP.NET sends a <ph id="ph1">`Cache-Control: private`</ph> response header unless an explicit cache policy has been specified for this response.</source>
          <target state="translated">既定では、ASP.NET の送信、<ph id="ph1">`Cache-Control: private`</ph>応答ヘッダーしない限り、この応答には、明示的なキャッシュ ポリシーを指定されています。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>This property allows suppressing this default response header on a per-request basis.</source>
          <target state="translated">このプロパティは、要求ごとにこの既定の応答ヘッダーを抑制できます。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>The header can still be suppressed for the entire application by setting <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A&gt;</ph> in <bpt id="p1">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> or <bpt id="p2">[</bpt>outputCache Element for caching (ASP.NET Settings Schema)<ept id="p2">](http://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee)</ept>.</source>
          <target state="translated">ヘッダーはまだ設定アプリケーション全体の抑制された<ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A&gt;</ph>で<bpt id="p1">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept>または<bpt id="p2">[</bpt>outputCache 要素 (ASP.NET 設定スキーマ) をキャッシュ用<ept id="p2">](http://msdn.microsoft.com/library/47cd2b47-316f-4dfd-bbf8-539be3066fee)</ept>です。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>Use caution when suppressing the default <ph id="ph1">`Cache-Control: private`</ph> header, as proxies and other intermediaries may treat responses without this header as cacheable by default.</source>
          <target state="translated">既定値の抑制を不用意に<ph id="ph1">`Cache-Control: private`</ph>プロキシとして、ヘッダーなどの中継ぎ局がこのヘッダーのない応答として扱うキャッシュ可能な既定ではします。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>This treatment can lead to the inadvertent caching of sensitive information.</source>
          <target state="translated">この処理は、機密情報の誤ったキャッシュをする可能性があります。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressDefaultCacheControlHeader">
          <source>See <bpt id="p1">[</bpt>RFC 2616, Sec. 13.4<ept id="p1">](http://tools.ietf.org/html/rfc2616)</ept> for more information.</source>
          <target state="translated">参照してください<bpt id="p1">[</bpt>RFC 2616, 秒 13.4<ept id="p1">](http://tools.ietf.org/html/rfc2616)</ept>詳細についてはします。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source>Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</source>
          <target state="translated">ログイン ページへのフォーム認証のリダイレクトを抑制する必要があるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if forms authentication redirection should be suppressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">フォーム認証のリダイレクトを抑制する必要がある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source>By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page.</source>
          <target state="translated">既定では、フォーム認証は、ログイン ページにリダイレクトするために HTTP 401 ステータス コードを 302 に変換します。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source>This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request.</source>
          <target state="translated">これが特定の認証が成功した場合も、承認などのエラーのクラスが失敗した場合、または現在の要求が AJAX 機能または web サービス要求の場合は適切でないです。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.SuppressFormsAuthenticationRedirect">
          <source>This property provides a way to suppress the redirect behavior and send the original status code to the client.</source>
          <target state="translated">このプロパティは、リダイレクトの動作を抑制して、元の状態コードをクライアントに送信する方法を提供します。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Writes the specified file directly to an HTTP response output stream without buffering it in memory.</source>
          <target state="translated">指定されたファイル ディレクトリを、メモリにバッファリングせずに、HTTP 応答出力ストリームに直接書き込みます。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String)">
          <source>The name of the file to write to the HTTP output.</source>
          <target state="translated">HTTP 出力に書き込むファイルの名前。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String)">
          <source>Writes the specified file directly to an HTTP response output stream, without buffering it in memory.</source>
          <target state="translated">指定されたファイル ディレクトリを、メモリにバッファリングせずに、HTTP 応答出力ストリームに直接書き込みます。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filename" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The name of the file to write to the HTTP output.</source>
          <target state="translated">HTTP 出力に書き込むファイルの名前。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The position in the file to begin to write to the HTTP output.</source>
          <target state="translated">HTTP 出力への書き出しを始める、ファイル内の位置。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The number of bytes to be transmitted.</source>
          <target state="translated">送信されるバイト数。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.</source>
          <target state="translated">指定したファイル ディレクトリの一部を、メモリにバッファリングせずに、HTTP 応答出力ストリームに直接書き込みます。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>If you specify 0 as the <ph id="ph1">`offset`</ph> parameter and -1 as the <ph id="ph2">`length`</ph> parameter, the whole file is sent.</source>
          <target state="translated">として 0 を指定する場合、<ph id="ph1">`offset`</ph>パラメーターおよび-1 である場合、<ph id="ph2">`length`</ph>パラメーター、ファイル全体が送信されます。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> パラメーターが 0 未満。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="length" /&gt;</ph> parameter is less than -1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> パラメーターが -1 未満。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="length" /&gt;</ph> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> パラメーターが、ファイルに含まれるバイト数からオフセットを引いた値よりも大きいバイト数を指定しています。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The out-of-process worker request is not supported.</source>
          <target state="translated">アウト プロセス ワーカー要求はサポートされていません。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The response is not using an <ph id="ph1">&lt;see cref="T:System.Web.HttpWriter" /&gt;</ph> object.</source>
          <target state="translated">応答が <ph id="ph1">&lt;see cref="T:System.Web.HttpWriter" /&gt;</ph> オブジェクトを使用していません。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero or greater than the file size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> パラメーターがゼロ未満かファイル サイズを超えています。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="length" /&gt;</ph> parameter is less than -1 or greater than the value of the <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameter plus the file size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="length" /&gt;</ph> パラメーターが -1 未満か、<ph id="ph2">&lt;paramref name="offset" /&gt;</ph> パラメーターとファイル サイズを加算した値を超えています。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source>Gets or sets a value that specifies whether <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> custom errors are disabled.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> カスタム エラーが無効かどうかを指定する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to disable IIS custom errors; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">IIS カスタム エラーが無効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> property is used only when your application is hosted in IIS 7.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph>プロパティは、アプリケーションが IIS 7.0 でホストされている場合にのみ使用します。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source>When running in Classic mode in IIS 7.0 the <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> property default value is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">IIS 7.0 でクラシック モードで実行されている場合、<ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph>プロパティの既定値は<ph id="ph2">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpResponse.TrySkipIisCustomErrors">
          <source>When running in Integrated mode, the <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> property default value is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">統合モードで実行されている場合、<ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph>プロパティの既定値は<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Writes information to an HTTP response output stream.</source>
          <target state="translated">情報を HTTP 応答出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char)">
          <source>The character to write to the HTTP output stream.</source>
          <target state="translated">HTTP 出力ストリームに書き込む文字。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char)">
          <source>Writes a character to an HTTP response output stream.</source>
          <target state="translated">文字を HTTP 応答出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.Char)">
          <source>The following example creates a series of constants that are written to an ASP.NET page using the Write method.</source>
          <target state="translated">次の例では、一連の書き込みメソッドを使用して、ASP.NET ページに書き込まれる定数を作成します。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.Char)">
          <source>The code calls this version of the Write method to write individual character constants to the page.</source>
          <target state="translated">コードでは、このバージョンの個々 の文字定数をページに書き込む、書き込みメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to write to the HTTP output stream.</source>
          <target state="translated">HTTP 出力ストリームに書き込む <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Object)">
          <source>Writes an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to an HTTP response stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> を HTTP 応答出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>The string to write to the HTTP output stream.</source>
          <target state="translated">HTTP 出力ストリームに書き込む文字列。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>Writes a string to an HTTP response output stream.</source>
          <target state="translated">文字列を HTTP 応答出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client.</source>
          <target state="translated">動的に生成された HTML ページは、クライアントから受信したときに、またはクライアントに送信する場合、Web クライアントから受信した入力が検証されていない場合、セキュリティ上のリスクを導入できます。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source.</source>
          <target state="translated">信頼できるソースから送信する Web サイトに送信され、後で出力をクライアントに入力に埋め込まれている悪意のあるスクリプトを表示できます。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>This security risk is referred to as a cross-site scripting attack.</source>
          <target state="translated">このセキュリティ上のリスクは、クロスサイト スクリプティング攻撃と呼ばれます。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>You should always validate data that is received from a client when it will be transmitted from your site to client browsers.</source>
          <target state="translated">常にクライアントのブラウザーに、サイトから送信するときに、クライアントから受信するデータを検証する必要があります。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> to prevent malicious script from executing.</source>
          <target state="translated">さらに、記述するときに html 形式で入力として受信したすべてのデータ、する必要がありますを使用してエンコード技法など<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph>を悪意のあるスクリプトが実行するを防ぐためにします。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>This technique is useful for data that was not validated when it was received.</source>
          <target state="translated">この手法は、受信したときに検証されなかったデータに役立ちます。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.</source>
          <target state="translated">エンコードまたはデータをフィルター処理するときに、Web ページの設定、フィルターを識別し、属していないれるバイトのシーケンスで、(など、英数字以外のシーケンス) を設定しに埋め込まれている悪意のあるスクリプトを持つ可能性がある可能性がありますを削除できるように文字を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>For more information about cross-site scripting attacks, see article Q252985, "How to Prevent Cross-Site Scripting Security Issues" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37115)</ept> Web site.</source>
          <target state="translated">クロスサイト スクリプティング攻撃の詳細については、記事 Q252985、「方法に防ぐクロスサイト スクリプティング セキュリティの問題」を参照して、<bpt id="p1">[</bpt>マイクロソフト サポート技術情報<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37115)</ept>Web サイトです。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>The following example echoes the client's name back to the client's browser.</source>
          <target state="translated">次の例では、クライアントのブラウザーに、クライアントの名前がエコーされます。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> method strips any malicious script and invalid characters that may have been submitted in the <ph id="ph2">`UserName`</ph> input field.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph>メソッドは、無効な文字で送信される可能性がありますが、悪意のあるスクリプトを切り離します、<ph id="ph2">`UserName`</ph>入力フィールドです。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The character array to write.</source>
          <target state="translated">書き込む文字配列。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The position in the character array where writing starts.</source>
          <target state="translated">書き込みを開始する文字配列内の位置。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write, beginning at <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">書き込む文字数。書き込みは、<bpt id="p1">&lt;c&gt;</bpt>インデックス<ept id="p1">&lt;/c&gt;</ept>から開始されます。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes an array of characters to an HTTP response output stream.</source>
          <target state="translated">文字配列を HTTP 応答出力ストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following example creates a series of constants that are written to an ASP.NET page using the Write method.</source>
          <target state="translated">次の例では、一連の書き込みメソッドを使用して、ASP.NET ページに書き込まれる定数を作成します。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)">
          <source>The code calls this version of the Write method to write individual character constants to the page.</source>
          <target state="translated">コードでは、このバージョンの個々 の文字定数をページに書き込む、書き込みメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="T:System.Web.HttpResponse">
          <source>Writes the specified file directly to an HTTP response output stream.</source>
          <target state="translated">指定したファイルを HTTP 応答出力ストリームに直接書き込みます。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>The name of the file to write to the HTTP output.</source>
          <target state="translated">HTTP 出力に書き込むファイルの名前。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>Writes the contents of the specified file directly to an HTTP response output stream as a file block.</source>
          <target state="translated">指定されたファイルの内容を、ファイル ブロックとして HTTP 応答出力ストリームに直接書き込みます。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
          <target state="translated">サイズの大きなファイルにこのメソッドが使用する場合、メソッドを呼び出すと例外がスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
          <target state="translated">このメソッドで使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
          <target state="translated">詳細については、812406、「prb:: Response.WriteFile ことはできません、大きなファイルのダウンロード」の記事を参照して、<bpt id="p1">[</bpt>マイクロソフト サポート技術情報<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept>Web サイトです。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>The following example writes all the contents of a text file named <ph id="ph1">`Login.txt`</ph> (which might contain literal HTML text and input controls) directly to the output stream.</source>
          <target state="translated">次の例は、という名前のテキスト ファイルのすべての内容を書き込みます<ph id="ph1">`Login.txt`</ph>(リテラルの HTML テキストと入力コントロールを含む可能性があります) に出力ストリームに直接できます。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filename" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>The name of the file to write into a memory block.</source>
          <target state="translated">メモリ ブロックに書き込むファイルの名前。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>Indicates whether the file will be written into a memory block.</source>
          <target state="translated">ファイルがメモリ ブロックに書き込まれるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>Writes the contents of the specified file directly to an HTTP response output stream as a memory block.</source>
          <target state="translated">指定されたファイルの内容を、メモリ ブロックとして HTTP 応答出力ストリームに直接書き込みます。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
          <target state="translated">サイズの大きなファイルにこのメソッドが使用する場合、メソッドを呼び出すと例外がスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
          <target state="translated">このメソッドで使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
          <target state="translated">詳細については、812406、「prb:: Response.WriteFile ことはできません、大きなファイルのダウンロード」の記事を参照して、<bpt id="p1">[</bpt>マイクロソフト サポート技術情報<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept>Web サイトです。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>The following example writes a file to memory.</source>
          <target state="translated">次の例は、ファイルをメモリに書き込みます。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filename" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The file handle of the file to write to the HTTP output stream.</source>
          <target state="translated">HTTP 出力ストリームに書き込むファイルのファイル ハンドル。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The byte position in the file where writing will start.</source>
          <target state="translated">書き込みを開始するファイル内のバイト位置。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The number of bytes to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込むバイト数。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>Writes the specified file directly to an HTTP response output stream.</source>
          <target state="translated">指定したファイルを HTTP 応答出力ストリームに直接書き込みます。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
          <target state="translated">サイズの大きなファイルにこのメソッドが使用する場合、メソッドを呼び出すと例外がスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
          <target state="translated">このメソッドで使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
          <target state="translated">詳細については、812406、「prb:: Response.WriteFile ことはできません、大きなファイルのダウンロード」の記事を参照して、<bpt id="p1">[</bpt>マイクロソフト サポート技術情報<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept>Web サイトです。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source>The following example writes all the contents of a text file named <ph id="ph1">`Login.txt`</ph> (which might contain literal HTML text and input controls) directly to the output stream.</source>
          <target state="translated">次の例は、という名前のテキスト ファイルのすべての内容を書き込みます<ph id="ph1">`Login.txt`</ph>(リテラルの HTML テキストと入力コントロールを含む可能性があります) に出力ストリームに直接できます。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="fileHandler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileHandler" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the file size minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph> は、ファイル サイズから <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> を引いた値を超えています。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The name of the file to write to the HTTP output stream.</source>
          <target state="translated">HTTP 出力ストリームに書き込むファイルの名前。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The byte position in the file where writing will start.</source>
          <target state="translated">書き込みを開始するファイル内のバイト位置。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The number of bytes to write to the output stream.</source>
          <target state="translated">出力ストリームに書き込むバイト数。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>Writes the specified file directly to an HTTP response output stream.</source>
          <target state="translated">指定したファイルを HTTP 応答出力ストリームに直接書き込みます。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
          <target state="translated">サイズの大きなファイルにこのメソッドが使用する場合、メソッドを呼び出すと例外がスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
          <target state="translated">このメソッドで使用できるファイルのサイズは、Web サーバーのハードウェア構成によって異なります。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
          <target state="translated">詳細については、812406、「prb:: Response.WriteFile ことはできません、大きなファイルのダウンロード」の記事を参照して、<bpt id="p1">[</bpt>マイクロソフト サポート技術情報<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept>Web サイトです。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The following example writes all the contents of a text file named <ph id="ph1">`Login.txt`</ph> (which might contain literal text and HTML input controls) directly to the output stream.</source>
          <target state="translated">次の例は、という名前のテキスト ファイルのすべての内容を書き込みます<ph id="ph1">`Login.txt`</ph>(入力コントロールのリテラル テキストと HTML を含んでいる可能性があります) に出力ストリームに直接できます。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="size" /&gt;</ph> is greater than the file size minus <ph id="ph2">&lt;paramref name="offset" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="size" /&gt;</ph> は、ファイル サイズから <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> を引いた値を超えています。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)">
          <source>The <ph id="ph1">&lt;paramref name="filename" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="filename" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>The method, user control, or object to substitute.</source>
          <target state="translated">置換するメソッド、ユーザー コントロール、またはオブジェクト。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.</source>
          <target state="translated">応答置換ブロックを応答に挿入できます。これにより、出力キャッシュされた応答の指定された応答領域を動的に生成できます。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> method for post-cache substitution in your output-cached pages.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph>出力キャッシュのページ キャッシュ後置換用のメソッドです。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>By passing a <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> object to a callback method with a prescribed <ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph> signature, you can replace output cached content at any given location in the page cache.</source>
          <target state="translated">渡すことによって、<ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph>オブジェクトを持つ、指定されたコールバック メソッドに<ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph>署名、出力キャッシュを置き換えることができますページ キャッシュ内の任意の指定した場所にコンテンツ。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>To initiate the replacement, call the <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> method, passing it the callback method, which must be thread safe and can be either of the following:</source>
          <target state="translated">交換を開始するには、呼び出し、<ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph>メソッドをコールバック メソッドは、スレッド セーフである必要があります、次のいずれかを渡します。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>A static method on the container page or user control.</source>
          <target state="translated">コンテナーのページやユーザー コントロールの静的メソッド。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>A static or instance method on another arbitrary object.</source>
          <target state="translated">静的な他の任意のオブジェクトでメソッドまたはインスタンス メソッドです。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>On the first request to the page, the <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph> delegate to produce the output.</source>
          <target state="translated">ページに最初の要求で、<ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph>呼び出し、<ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph>出力を生成するためにデリゲートします。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests.</source>
          <target state="translated">次に、今後の要求を呼び出すデリゲートを保持すると、応答に代替バッファーを追加します。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.</source>
          <target state="translated">最後に、クライアント側キャッシュからパブリック サーバーのみをキャッシュしないと、クライアント上でデリゲートをページを再度呼び出してに今後の要求に確保が低下します。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level.</source>
          <target state="translated">キャッシュされたユーザー コントロールがユーザーの制御レベル出力キャッシュの適用先では、キャッシュ後置換はサポートされていません。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>This is also known as fragment caching.</source>
          <target state="translated">これは、フラグメント キャッシュとも呼ばれます。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>For more information, see <bpt id="p1">[</bpt>Caching Portions of an ASP.NET Page<ept id="p1">](http://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>ASP.NET ページの一部をキャッシュ<ept id="p1">](http://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e)</ept>です。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)">
          <source>The target of the <ph id="ph1">&lt;paramref name="callback" /&gt;</ph> parameter is of type <ph id="ph2">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> 型の <ph id="ph1">&lt;paramref name="callback" /&gt;</ph> パラメーターのターゲット。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>