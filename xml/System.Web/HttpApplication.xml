<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpApplication.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5763b66da8b1dceadda77652804c5bae9caa303a5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">763b66da8b1dceadda77652804c5bae9caa303a5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Defines the methods, properties, and events that are common to all application objects in an ASP.NET application.</source>
          <target state="translated">ASP.NET アプリケーション内のすべてのアプリケーション オブジェクトに共通のメソッド、プロパティ、およびイベントを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>This class is the base class for applications that are defined by the user in the Global.asax file.</source>
          <target state="translated">このクラスはアプリケーションの基底クラスであり、ユーザーが Global.asax ファイルで定義します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class are created in the ASP.NET infrastructure, not by the user directly.</source>
          <target state="translated">インスタンス、<ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph>クラスは、ASP.NET のインフラストラクチャ内で直接ユーザーではなく作成します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>One instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class is used to process many requests in its lifetime.</source>
          <target state="translated">1 つのインスタンス、<ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph>その有効期間で多くの要求を処理するクラスを使用します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>However, it can process only one request at a time.</source>
          <target state="translated">ただし、一度に 1 つの要求を処理できます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Thus, member variables can be used to store per-request data.</source>
          <target state="translated">したがって、メンバー変数は、要求ごとのデータの格納に使用できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>An application raises events that can be handled by custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface or by event handler code that is defined in the Global.asax file.</source>
          <target state="translated">アプリケーションを実装するカスタム モジュールによって処理できるイベントを発生させる、<ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph>インターフェイスか、Global.asax で定義されているイベント ハンドラーのコード ファイルします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface can be put in the App_Code folder or in a DLL in the Bin folder.</source>
          <target state="translated">実装するカスタムのモジュール、 <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> App_Code フォルダー内、または Bin フォルダー内の DLL のインターフェイスを置くことができます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline.</source>
          <target state="translated">IIS 7.0 を実行して、統合モードでは、Bin フォルダーまたは App_Code フォルダーにカスタムのモジュールは、要求パイプライン内のすべての要求に適用されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.</source>
          <target state="translated">Global.asax ファイル内のイベント ハンドラーのコードは、ASP.NET ハンドラーにマップされている要求にのみ適用されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The application events are raised in the following order:</source>
          <target state="translated">次の順序では、アプリケーションのイベントが発生します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> event and before the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> event, an event handler (which is a page that corresponds to the request URL) is created.</source>
          <target state="translated">後に、<ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph>イベントとの前に、<ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph>イベント、イベント ハンドラー (これは、要求 URL に対応するページ) が作成されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is raised.</source>
          <target state="translated">ときに、サーバーが実行されている IIS 7.0 統合モードでの最低限の .NET Framework version 3.0 では、<ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph>イベントが発生します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.</source>
          <target state="translated">サーバーは、IIS 7.0 を実行中、クラシック モードまたは IIS の以前のバージョンでは、このイベントを処理することはできません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The event handler is executed.</source>
          <target state="translated">イベント ハンドラーが実行されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> event is raised, any existing response filters will filter the output.</source>
          <target state="translated">後に、<ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph>イベントは、既存の応答フィルターは、出力をフィルター処理されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">IIS 7.0 統合モードでこのイベントはサポートされており、最低限の .NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">このイベントは、IIS 7.0 統合モードがサポートされていると、少なくとも .NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following two examples demonstrate how to use the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class and its events.</source>
          <target state="translated">次の 2 つの例を使用する方法を示す、<ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph>クラスとそのイベント。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The first example demonstrates how to create a custom HTTP module and connect an event to it.</source>
          <target state="translated">最初の例では、カスタム HTTP モジュールを作成し、イベントを接続する方法を示します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The second example demonstrates how to modify the Web.config file.</source>
          <target state="translated">2 番目の例では、Web.config ファイルを変更する方法を示します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example demonstrates how to create a custom HTTP module and connect the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event to the HTTP module.</source>
          <target state="translated">次の例では、カスタム HTTP モジュールを作成して接続する方法、 <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> HTTP モジュールへのイベントです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests.</source>
          <target state="translated">HTTP モジュールは、クライアント要求をフィルター処理することにより、Web アプリケーションのリソースへの各要求をインターセプトします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Any HTTP module that subscribes to an <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> event must implement the <ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph> interface.</source>
          <target state="translated">サブスクライブする HTTP モジュール、<ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph>イベントを実装する必要があります、<ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module.</source>
          <target state="translated">カスタム HTTP モジュール内のイベントが発生することができます、前に、HTTP モジュールについて ASP.NET を通知する Web.config ファイルで構成設定を変更する必要があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example shows the appropriate configuration setting in the <ph id="ph1">`httpModules`</ph> section of the Web.config file.</source>
          <target state="translated">次の例は、適切な構成設定で、 <ph id="ph1">`httpModules`</ph> Web.config ファイルのセクションです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.</source>
          <target state="translated">次の設定は、IIS 7.0 のクラシック モードと IIS の以前のバージョンに適用されます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Integrated mode.</source>
          <target state="translated">次の設定は、IIS 7.0 統合モードに適用されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.</source>
          <target state="translated">現在の要求に関連付けられた現在の状態 (セッション状態など) を ASP.NET が取得すると発生します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event is raised after the event handler has been created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph>イベントは、イベント ハンドラーを作成した後に発生します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For an example of handling the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event, see the <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> overview topic.</source>
          <target state="translated">処理の例については、<ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph>イベントを参照してください、<ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph>概要トピックです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> を、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> collection.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> コレクションに追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the event.</source>
          <target state="translated">イベントの非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> collection.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> コレクションに追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> イベント ハンドラーを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> イベント ハンドラーを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> イベント ハンドラーを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> の非同期処理を開始する <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> の非同期処理を終了する <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">非同期の <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> に追加する、関連付けられた状態。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> イベントを、現在の要求の非同期 <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> イベント ハンドラーのコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Application">
          <source>Gets the current state of an application.</source>
          <target state="translated">アプリケーションの現在の状態を取得します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> for the current request.</source>
          <target state="translated">現在の要求に関する <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.</source>
          <target state="translated">アプリケーションの現在の状態は、.NET Framework のオブジェクトと複数のクライアントから複数の Web 要求に関連付けられているスカラー値の両方を格納に使用できるアプリケーション全体のオブジェクトのキー/値のディクショナリで構成されます。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">セキュリティ モジュールがユーザーの ID を確立すると発生します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event signals that the configured authentication mechanism has authenticated the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph>イベントは、構成済みの認証メカニズムが現在の要求を認証されたことを通知します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event ensures that the request will be authenticated before processing the attached module or event handler.</source>
          <target state="translated">サブスクライブ、<ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph>イベントにより、要求は、接続されているモジュールまたはイベント ハンドラーを処理する前に認証されます。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Occurs when a security module has verified user authorization.</source>
          <target state="translated">セキュリティ モジュールによってユーザーが承認されると発生します。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> ASP.NET が現在の要求を承認されているイベントを通知します。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.</source>
          <target state="translated">サブスクライブ、<ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph>イベントにより、要求は認証され、アタッチされたモジュールまたはイベント ハンドラーを処理する前に承認されています。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">ASP.NET が要求に応答するときに、実行の HTTP パイプライン チェーンの最初のイベントとして発生します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> event signals the creation of any given new request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph>イベントは、指定された新しい要求の作成を通知します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>This event is always raised and is always the first event to occur during the processing of a request.</source>
          <target state="translated">このイベントは、常に発生し、要求の処理中に発生する最初のイベントは、常に。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.CompleteRequest">
          <source>Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event.</source>
          <target state="translated">ASP.NET に実行の HTTP パイプライン チェーン内のすべてのイベントとフィルター処理を省略させ、直接 <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> イベントを実行させます。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Context">
          <source>Gets HTTP-specific information about the current request.</source>
          <target state="translated">現在の要求に関する HTTP 固有の情報を取得します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Context">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> for the current request.</source>
          <target state="translated">現在の要求に関する <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Dispose">
          <source>Disposes the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> インスタンスを破棄します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> properties are not available for use when the <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method executes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph>プロパティは使用できません使用する場合、<ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph>メソッドを実行します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> method on each of the registered <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> in the application instance and raises the <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph>メソッドの呼び出し、<ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph>メソッドを登録済みの各<ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph>アプリケーション インスタンスとが発生し、<ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> in a derived class, make sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph>派生クラスで、基本クラスを呼び出すことを確認<ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph>デリゲートを登録するためのメソッドがイベントを受信します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Disposed">
          <source>Occurs when the application is disposed.</source>
          <target state="translated">アプリケーションの破棄時に発生します。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>To associate the event with your event handler, add an instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate to the event.</source>
          <target state="translated">イベントをイベント ハンドラーに関連付けるのインスタンスを追加、<ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph>イベントにデリゲートします。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate.</source>
          <target state="translated">イベント ハンドラーは、イベントが発生するたびに呼び出されますを削除しない限り、<ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph>を委任します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.EndRequest">
          <source>Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">ASP.NET が要求に応答するときに、実行の HTTP パイプライン チェーンの最後のイベントとして発生します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event is always raised when the <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph>イベントは、常にいつ発生するか、<ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Error">
          <source>Occurs when an unhandled exception is thrown.</source>
          <target state="translated">ハンドルされない例外がスローされると発生します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The exception that raises the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event can be accessed by a call to the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> method.</source>
          <target state="translated">例外を発生させる、<ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph>イベントへの呼び出しでアクセスできる、<ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> method.</source>
          <target state="translated">アプリケーションでは、カスタムのエラー出力を生成する場合は、ASP.NET によってへの呼び出しによって生成される既定のエラー メッセージを抑制する、<ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your Web application contains XML Web services, you cannot use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event for global exception handling of those services.</source>
          <target state="translated">使用することはできませんが、Web アプリケーションに XML Web サービスが含まれている場合、<ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph>これらのサービスのグローバル例外処理のためのイベントです。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> being called.</source>
          <target state="translated">XML Web サービスの HTTP ハンドラーは、XML Web サービスで発生し、前に SOAP エラーに変換した任意の例外を使用する、<ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph>呼び出されています。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.</source>
          <target state="translated">XML Web サービスの例外を処理するには、カスタムのグローバル例外ハンドラーで Web サービスの例外を処理する SOAP 拡張機能を構築します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Events">
          <source>Gets the list of event handler delegates that process all application events.</source>
          <target state="translated">すべてのアプリケーション イベントを処理するイベント ハンドラー デリゲートのリストを取得します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that contains the names of the event handler delegates.</source>
          <target state="translated">イベント ハンドラー デリゲートの名前が格納されている <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated">HTTP 要求を処理するために使用される組み込みサーバー オブジェクトへの参照を提供する <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>Gets the name of the default output-cache provider that is configured for a Web site.</source>
          <target state="translated">Web サイトに対して構成されている既定の出力キャッシュ プロバイダーの名前を取得します。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The name of the default provider.</source>
          <target state="translated">既定のプロバイダーの名前。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can override this method and use it to return the name of any output-cache provider that is configured for a Web site.</source>
          <target state="translated">このメソッドをオーバーライドし、Web サイトに対して構成されているすべての出力キャッシュ プロバイダーの名前を返すに使用できます。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.</source>
          <target state="translated">ASP.NET では、名前付きのプロバイダーへの参照を取得し、実行中の要求の出力キャッシュ データの格納に使用します。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache.</source>
          <target state="translated">既定では、ASP.NET では、ページ、およびコントロールをレンダリングするすべての HTTP 応答は、メモリ内の出力キャッシュを使用します。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can change the default output-cache provider that is used for a Web application by specifying a different provider name for <ph id="ph1">`defaultProvider`</ph>.</source>
          <target state="translated">Web アプリケーションの別のプロバイダー名を指定することによって使用される既定の出力キャッシュ プロバイダーを変更することができます<ph id="ph1">`defaultProvider`</ph>です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>In addition, you can select different output-cache providers for individual control and for individual requests.</source>
          <target state="translated">さらと個々 の要求の個々 のコントロールに対して別の出力キャッシュ プロバイダーを選択することができます。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new <ph id="ph1">`providerName`</ph> attribute in a page or control directive, as shown in the following example:</source>
          <target state="translated">別の Web ユーザー コントロールの別の出力キャッシュ プロバイダーを選択する最も簡単な方法は、new を使用して、宣言を行う、<ph id="ph1">`providerName`</ph>ページまたはコントロール ディレクティブでは、次の例で示すように属性します。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request.</source>
          <target state="translated">HTTP 要求に対する別の出力キャッシュ プロバイダーを指定するには、プログラムによって、特定の要求を使用するプロバイダーを指定する、Global.asax ファイルでこのメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Caching Overview<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>ASP.NET のキャッシュの概要<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The following example shows how to programmatically specify the cache provider named <ph id="ph1">`DiskCache`</ph> for any HTTP request that goes to the Advanced.aspx page.</source>
          <target state="translated">次の例は、プログラムによって名前付きキャッシュ プロバイダーを指定する方法を示しています。 <ph id="ph1">`DiskCache`</ph> Advanced.aspx ページに進みますを任意の HTTP 要求にします。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> または空の文字列です。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> object that contains information about the current Web request.</source>
          <target state="translated">現在の Web 要求に関する情報を保持している <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The custom string that specifies which cached response is used to respond to the current request.</source>
          <target state="translated">現在の要求への応答に使用するキャッシュされた応答を指定するカスタム文字列。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>Provides an application-wide implementation of the <ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph> プロパティのアプリケーション全体にわたる実装を提供します。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>If the value of the <ph id="ph1">&lt;paramref name="custom" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph>, the browser's <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="custom" /&gt;</ph> パラメーターの値が <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph> の場合は、ブラウザーの <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>You can override <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> to add a new method for calculating custom vary-by values that are based on the current request.</source>
          <target state="translated">オーバーライドできます<ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph>を現在の要求に基づくカスタム別値を計算する新しいメソッドを追加します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The implementation has to call the base class for custom values that it does not recognize.</source>
          <target state="translated">実装では、認識されないカスタム値を基本クラスを呼び出すためです。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Cache Versions of a Page Using Custom Strings<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: 複数のページを使用してカスタム文字列バージョン キャッシュ<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Init">
          <source>Executes custom initialization code after all event handler modules have been added.</source>
          <target state="translated">イベント ハンドラー モジュールがすべて追加された後にカスタム初期化コードを実行します。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Init">
          <source>In a derived class, you can override the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> method to add custom one-time initialization code.</source>
          <target state="translated">派生クラスでオーバーライドすることができます、<ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph>を 1 回限りのカスタムの初期化コードを追加するメソッド。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Occurs just before ASP.NET performs any logging for the current request.</source>
          <target state="translated">ASP.NET が現在の要求に対するログの記録処理を実行する直前に発生します。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event is raised even if an error occurs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>イベントは、エラーが発生した場合でも発生します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>You can provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event to provide custom logging for the request.</source>
          <target state="translated">イベント ハンドラーを指定することができます、<ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>要求に対してカスタムのログ記録を提供するイベントです。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The following example demonstrates how to provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event.</source>
          <target state="translated">次の例では、イベント ハンドラーを作成して、<ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The event handler also handles several other events.</source>
          <target state="translated">イベント ハンドラーでは、その他のいくつかのイベントも処理します。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph> properties are used to determine what code to run.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph>プロパティを使用して実行するコードを判別します。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>Occurs when the handler is selected to respond to the request.</source>
          <target state="translated">要求に応答するハンドラーが選択されると発生します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is used by the ASP.NET infrastructure to determine the request handler for the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph>イベントは、現在の要求の要求ハンドラーを決定する ASP.NET インフラストラクチャによって使用されます。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Register HTTP Handlers<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: HTTP ハンドラーの登録<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>です。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Modules">
          <source>Gets the collection of modules for the current application.</source>
          <target state="translated">現在のアプリケーションのモジュールのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Modules">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph> that contains the names of the modules for the application.</source>
          <target state="translated">アプリケーションのモジュールの名前が格納されている <ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>The callback method.</source>
          <target state="translated">コールバック メソッド。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>Specifies a callback to invoke when a request execution step is executed.</source>
          <target state="translated">要求の実行ステップが実行されたときに呼び出すコールバックを指定します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>This method provides extensibility to the ASP.NET pipeline to make it easy for developers to implement features in ambient context scenarios and build libraries that care about ASP.NET execution flow (for example, tracing, profiling, diagnostics, and transactions).</source>
          <target state="translated">このメソッドは、ASP.NET パイプラインを簡単をアンビエント コンテキストのシナリオで機能を実装して、ASP.NET 実行フロー (たとえば、トレース、プロファイリング、診断、およびトランザクション) を考慮するライブラリをビルドする開発者向けに拡張機能を提供します。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Occurs when the request state (for example, session state) that is associated with the current request has been obtained.</source>
          <target state="translated">現在の要求に関連付けられた要求状態 (セッション状態など) が取得されると発生します。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>後にイベントを生成、<ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph>イベントが発生しました。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.</source>
          <target state="translated">サブスクライブする機能、<ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph>イベントによって処理されるすべてのデータにアクセスできます、<ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">セキュリティ モジュールがユーザーの ID を確立すると発生します。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>後にイベントを生成、<ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph>イベントが発生しました。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.</source>
          <target state="translated">サブスクライブする機能、<ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>イベントによって処理されるすべてのデータにアクセスできます、<ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Occurs when the user for the current request has been authorized.</source>
          <target state="translated">現在の要求のユーザーが承認されると発生します。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> ASP.NET が現在の要求を承認されているイベントを通知します。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event ensures authentication and authorization of the request before processing the attached module or event handler.</source>
          <target state="translated">サブスクライブ、<ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph>イベントにより、認証と、接続されているモジュールまたはイベント ハンドラーを処理する前に、要求の承認。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>Occurs when ASP.NET has completed processing all the event handlers for the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event.</source>
          <target state="translated">ASP.NET が <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> イベントに対するすべてのイベント ハンドラーの処理を完了したときに発生します。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> .NET Framework version 3.5 で導入されました。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET Framework のバージョンおよび依存関係<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>Occurs when ASP.NET has mapped the current request to the appropriate event handler.</source>
          <target state="translated">ASP.NET が現在の要求を適切なイベント ハンドラーにマップすると発生します。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.</source>
          <target state="translated">ASP.NET がすべての要求イベント ハンドラーの実行を完了し、要求状態データが格納されると発生します。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.</source>
          <target state="translated">ASP.NET イベント ハンドラー (ページ、XML Web サービスなど) の実行が完了すると発生します。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.</source>
          <target state="translated">ASP.NET が現在のイベント ハンドラーの実行を省略し、キャッシング モジュールに対してキャッシュからの要求の処理を許可した場合に発生します。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.</source>
          <target state="translated">ASP.NET が、キャッシング モジュールの更新、およびキャッシュからの後続の要求の処理に使用する応答の格納を終了すると発生します。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> event has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph>後にイベントを生成、<ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph>イベントが発生しました。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> is raised, ASP.NET has completed processing code and the content of the cache is finalized.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph>が発生すると、ASP.NET が処理コードを完了し、キャッシュの内容を確定します。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).</source>
          <target state="translated">ASP.NET がイベント ハンドラー (ページ、XML Web サービスなど) の実行を開始する直前に発生します。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Occurs just before ASP.NET sends content to the client.</source>
          <target state="translated">ASP.NET がコンテンツをクライアントに送信する直前に発生します。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> event may occur multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph>イベントが複数回出現する可能性があります。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Do not use <ph id="ph1">`PreSendRequestContent`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">使用しないでください<ph id="ph1">`PreSendRequestContent`</ph>を実装するマネージ モジュールで<ph id="ph2">`IHttpModule`</ph>です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">これらのプロパティを設定すると、非同期要求で問題が発生することができます。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">アプリケーション要求ルーティング処理 (ARR) と websocket の組み合わせが例外が発生するアクセス違反 w3wp クラッシュする可能性があります。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">たとえば、iiscore!W3_CONTEXT_BASE::GetIsLastNotification + 68 iiscore.dll でアクセス違反例外 (0xC0000005) が発生しました。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Occurs just before ASP.NET sends HTTP headers to the client.</source>
          <target state="translated">ASP.NET が HTTP ヘッダーをクライアントに送信する直前に発生します。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Do not use <ph id="ph1">`PreSendRequestHeaders`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">使用しないでください<ph id="ph1">`PreSendRequestHeaders`</ph>を実装するマネージ モジュールで<ph id="ph2">`IHttpModule`</ph>です。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">これらのプロパティを設定すると、非同期要求で問題が発生することができます。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">アプリケーション要求ルーティング処理 (ARR) と websocket の組み合わせが例外が発生するアクセス違反 w3wp クラッシュする可能性があります。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">たとえば、iiscore!W3_CONTEXT_BASE::GetIsLastNotification + 68 iiscore.dll でアクセス違反例外 (0xC0000005) が発生しました。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>The type of the module.</source>
          <target state="translated">モジュールの種類。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>Registers an application module.</source>
          <target state="translated">アプリケーション モジュールを登録します。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>Occurs after ASP.NET finishes executing all request event handlers.</source>
          <target state="translated">ASP.NET がすべての要求イベント ハンドラーの実行を終了すると発生します。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>This event causes state modules to save the current state data.</source>
          <target state="translated">このイベントが発生すると、状態モジュールが現在の状態データを保存します。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph>イベントは、要求には、アプリケーションを終了してください。 および ASP.NET が通知されると、要求の状態を格納します。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>Gets the intrinsic request object for the current request.</source>
          <target state="translated">現在の要求に関する組み込みの要求オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">アプリケーションが処理している <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Occurs when the managed objects that are associated with the request have been released.</source>
          <target state="translated">要求に関連付けられている管理オブジェクトが解放されたときに発生します。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> event is called after all managed modules and handlers in the ASP.NET pipeline have been called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph>イベントがすべてのマネージ モジュールの後に呼び出され、ASP.NET パイプライン内のハンドラーが呼び出されました。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>It enables modules to clean up resources after all managed modules and handlers have executed.</source>
          <target state="translated">すべてのマネージ モジュールとハンドラーの実行がリソースをクリーンアップするモジュールを使用できます。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.</source>
          <target state="translated">要求中に作成したマネージ リソースを明示的に破棄する特定の時刻を必要とする場合は、このイベントを使用します。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).</source>
          <target state="translated">イベント ハンドラー (ページまたは Web サービスなど) の実行を省略してキャッシング モジュールでキャッシュからの要求を処理できるようにするために、ASP.NET が承認イベントを完了したときに発生します。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>Gets the intrinsic response object for the current request.</source>
          <target state="translated">現在の要求に関する組み込みの応答オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">アプリケーションが処理している <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Server">
          <source>Gets the intrinsic server object for the current request.</source>
          <target state="translated">現在の要求に関する組み込みのサーバー オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Server">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">アプリケーションが処理している <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>Gets the intrinsic session object that provides access to session data.</source>
          <target state="translated">セッション データへのアクセスを実現する組み込みのセッション オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object for the current session.</source>
          <target state="translated">現在のセッションに対する <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Site">
          <source>Gets or sets a site interface for an <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> の実装に対するサイト インターフェイスを取得または設定します。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> object that allows a container to manage and communicate with its child components.</source>
          <target state="translated">コンテナーで子コンポーネントを管理したり、子コンポーネントと通信したりできるようにする <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated">HTTP 要求を処理するために使用される組み込みサーバー オブジェクトへの参照を提供する <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> to call when the asynchronous method call is complete.</source>
          <target state="translated">非同期メソッドの呼び出しの完了時に呼び出す <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>cb<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt> cb <ept id="p1">&lt;/c&gt;</ept> パラメーターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> の場合、デリゲートは呼び出されません。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Any extra data that is required to process the request.</source>
          <target state="translated">要求を処理するために必要な追加データ。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Initiates an asynchronous call to the HTTP event handler.</source>
          <target state="translated">HTTP イベント ハンドラーの非同期の呼び出しを開始します。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated">プロセスの状態に関する情報を格納している <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated">プロセスの状態に関する情報を格納している <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>Provides an asynchronous process <ph id="ph1">&lt;see langword="End" /&gt;</ph> method when the process finishes.</source>
          <target state="translated">処理の終了時に、非同期処理の <ph id="ph1">&lt;see langword="End" /&gt;</ph> メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> method to raise any exceptions that are caught during the asynchronous process.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph>では、非同期処理中に検出した例外が発生します。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>Gets a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether another request can use the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object.</source>
          <target state="translated">別の要求で <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> オブジェクトを使用できるかどうかを示す <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object is reusable; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> オブジェクトが再利用できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>To explicitly set the <ph id="ph1">`IsReusable`</ph> property to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph>, provide code that overrides the <ph id="ph4">`IsReusable`</ph> property accessor.</source>
          <target state="translated">明示的に設定する、<ph id="ph1">`IsReusable`</ph>プロパティを<ph id="ph2">`true`</ph>または<ph id="ph3">`false`</ph>をオーバーライドするコードを提供、<ph id="ph4">`IsReusable`</ph>プロパティ アクセサー。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to the intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated">HTTP 要求を処理するために使用される組み込みサーバー オブジェクトへの参照を提供する <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Enables processing of HTTP Web requests by a custom HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> インターフェイスを実装するカスタム HTTP ハンドラーによって、HTTP Web 要求の処理を有効にします。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Classes that inherit the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> interfaces are provided as a reference to an <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> object for the current HTTP request.</source>
          <target state="translated">継承するクラス、<ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph>と<ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph>への参照として提供するインターフェイス、<ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph>の現在の HTTP 要求オブジェクト。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>The object provides access to the intrinsic <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, and <ph id="ph3">`Server`</ph> objects for the request.</source>
          <target state="translated">このオブジェクトが、組み込みへのアクセスを提供<ph id="ph1">`Request`</ph>、 <ph id="ph2">`Response`</ph>、および<ph id="ph3">`Server`</ph>要求のオブジェクト。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>In all cases.</source>
          <target state="translated">すべての場合。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.</source>
          <target state="translated">キャッシュからの後続の要求を処理するために使用する応答をキャッシング モジュールで格納できるようにするために、ASP.NET がイベント ハンドラーの実行を完了したときに発生します。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベントを処理する方法の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>Gets the intrinsic user object for the current request.</source>
          <target state="translated">現在の要求に関する組み込みのユーザー オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object that represents the current authenticated or anonymous user.</source>
          <target state="translated">現在の認証ユーザーまたは匿名ユーザーを表す <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>