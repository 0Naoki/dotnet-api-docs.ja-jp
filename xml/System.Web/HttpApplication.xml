<Type Name="HttpApplication" FullName="System.Web.HttpApplication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f47220451cfe83a3c2f4ad92a4eedd0806e98c54" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36575123" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpApplication : IDisposable, System.ComponentModel.IComponent, System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpApplication extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplication" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpApplication&#xA;Implements IComponent, IDisposable, IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplication : IDisposable, System::ComponentModel::IComponent, System::Web::IHttpAsyncHandler" />
  <TypeSignature Language="F#" Value="type HttpApplication = class&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IHttpAsyncHandler&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ddc17-101">ASP.NET アプリケーション内のすべてのアプリケーション オブジェクトに共通のメソッド、プロパティ、およびイベントを定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ddc17-101">Defines the methods, properties, and events that are common to all application objects in an ASP.NET application.</span>
      </span>
      <span data-ttu-id="ddc17-102">このクラスはアプリケーションの基底クラスであり、ユーザーが Global.asax ファイルで定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ddc17-102">This class is the base class for applications that are defined by the user in the Global.asax file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-103">インスタンス、<xref:System.Web.HttpApplication>クラスは、ASP.NET のインフラストラクチャ内で直接ユーザーではなく作成します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-103">Instances of the <xref:System.Web.HttpApplication> class are created in the ASP.NET infrastructure, not by the user directly.</span></span> <span data-ttu-id="ddc17-104">1 つのインスタンス、<xref:System.Web.HttpApplication>その有効期間で多くの要求を処理するクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-104">One instance of the <xref:System.Web.HttpApplication> class is used to process many requests in its lifetime.</span></span> <span data-ttu-id="ddc17-105">ただし、一度に 1 つの要求を処理できます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-105">However, it can process only one request at a time.</span></span> <span data-ttu-id="ddc17-106">したがって、メンバー変数は、要求ごとのデータの格納に使用できます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-106">Thus, member variables can be used to store per-request data.</span></span>  
  
 <span data-ttu-id="ddc17-107">アプリケーションを実装するカスタム モジュールによって処理できるイベントを発生させる、<xref:System.Web.IHttpModule>インターフェイスか、Global.asax で定義されているイベント ハンドラーのコード ファイルします。</span><span class="sxs-lookup"><span data-stu-id="ddc17-107">An application raises events that can be handled by custom modules that implement the <xref:System.Web.IHttpModule> interface or by event handler code that is defined in the Global.asax file.</span></span> <span data-ttu-id="ddc17-108">実装するカスタムのモジュール、 <xref:System.Web.IHttpModule> App_Code フォルダー内、または Bin フォルダー内の DLL のインターフェイスを置くことができます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-108">Custom modules that implement the <xref:System.Web.IHttpModule> interface can be put in the App_Code folder or in a DLL in the Bin folder.</span></span>  
  
 <span data-ttu-id="ddc17-109"><xref:System.Web.HttpApplication> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-109"><xref:System.Web.HttpApplication> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-110">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-110">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ddc17-111">IIS 7.0 を実行して、統合モードでは、Bin フォルダーまたは App_Code フォルダーにカスタムのモジュールは、要求パイプライン内のすべての要求に適用されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-111">When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline.</span></span> <span data-ttu-id="ddc17-112">Global.asax ファイル内のイベント ハンドラーのコードは、ASP.NET ハンドラーにマップされている要求にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-112">Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.</span></span>  
  
 <span data-ttu-id="ddc17-113">次の順序では、アプリケーションのイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-113">The application events are raised in the following order:</span></span>  
  
1.  <xref:System.Web.HttpApplication.BeginRequest>  
  
2.  <xref:System.Web.HttpApplication.AuthenticateRequest>  
  
3.  <xref:System.Web.HttpApplication.PostAuthenticateRequest>  
  
4.  <xref:System.Web.HttpApplication.AuthorizeRequest>  
  
5.  <xref:System.Web.HttpApplication.PostAuthorizeRequest>  
  
6.  <xref:System.Web.HttpApplication.ResolveRequestCache>  
  
7.  <xref:System.Web.HttpApplication.PostResolveRequestCache>  
  
     <span data-ttu-id="ddc17-114">後に、<xref:System.Web.HttpApplication.PostResolveRequestCache>イベントとの前に、<xref:System.Web.HttpApplication.PostMapRequestHandler>イベント、イベント ハンドラー (これは、要求 URL に対応するページ) が作成されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-114">After the <xref:System.Web.HttpApplication.PostResolveRequestCache> event and before the <xref:System.Web.HttpApplication.PostMapRequestHandler> event, an event handler (which is a page that corresponds to the request URL) is created.</span></span> <span data-ttu-id="ddc17-115">ときに、サーバーが実行されている IIS 7.0 統合モードでの最低限の .NET Framework version 3.0 では、<xref:System.Web.HttpApplication.MapRequestHandler>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-115">When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <xref:System.Web.HttpApplication.MapRequestHandler> event is raised.</span></span> <span data-ttu-id="ddc17-116">サーバーは、IIS 7.0 を実行中、クラシック モードまたは IIS の以前のバージョンでは、このイベントを処理することはできません。</span><span class="sxs-lookup"><span data-stu-id="ddc17-116">When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.</span></span>  
  
8.  <xref:System.Web.HttpApplication.PostMapRequestHandler>  
  
9. <xref:System.Web.HttpApplication.AcquireRequestState>  
  
10. <xref:System.Web.HttpApplication.PostAcquireRequestState>  
  
11. <xref:System.Web.HttpApplication.PreRequestHandlerExecute>  
  
     <span data-ttu-id="ddc17-117">イベント ハンドラーが実行されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-117">The event handler is executed.</span></span>  
  
12. <xref:System.Web.HttpApplication.PostRequestHandlerExecute>  
  
13. <xref:System.Web.HttpApplication.ReleaseRequestState>  
  
14. <xref:System.Web.HttpApplication.PostReleaseRequestState>  
  
     <span data-ttu-id="ddc17-118">後に、<xref:System.Web.HttpApplication.PostReleaseRequestState>イベントは、既存の応答フィルターは、出力をフィルター処理されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-118">After the <xref:System.Web.HttpApplication.PostReleaseRequestState> event is raised, any existing response filters will filter the output.</span></span>  
  
15. <xref:System.Web.HttpApplication.UpdateRequestCache>  
  
16. <xref:System.Web.HttpApplication.PostUpdateRequestCache>  
  
17. <span data-ttu-id="ddc17-119"><xref:System.Web.HttpApplication.LogRequest>。</span><span class="sxs-lookup"><span data-stu-id="ddc17-119"><xref:System.Web.HttpApplication.LogRequest>.</span></span>  
  
     <span data-ttu-id="ddc17-120">IIS 7.0 統合モードでこのイベントはサポートされており、最低限の .NET Framework 3.0</span><span class="sxs-lookup"><span data-stu-id="ddc17-120">This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0</span></span>  
  
18. <xref:System.Web.HttpApplication.PostLogRequest>  
  
     <span data-ttu-id="ddc17-121">このイベントは、IIS 7.0 統合モードがサポートされていると、少なくとも .NET Framework 3.0</span><span class="sxs-lookup"><span data-stu-id="ddc17-121">This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0</span></span>  
  
19. <xref:System.Web.HttpApplication.EndRequest>  
  
   
  
## Examples  
 <span data-ttu-id="ddc17-122">次の 2 つの例を使用する方法を示す、<xref:System.Web.HttpApplication>クラスとそのイベント。</span><span class="sxs-lookup"><span data-stu-id="ddc17-122">The following two examples demonstrate how to use the <xref:System.Web.HttpApplication> class and its events.</span></span> <span data-ttu-id="ddc17-123">最初の例では、カスタム HTTP モジュールを作成し、イベントを接続する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-123">The first example demonstrates how to create a custom HTTP module and connect an event to it.</span></span> <span data-ttu-id="ddc17-124">2 番目の例では、Web.config ファイルを変更する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-124">The second example demonstrates how to modify the Web.config file.</span></span>  
  
 <span data-ttu-id="ddc17-125">次の例では、カスタム HTTP モジュールを作成して接続する方法、 <xref:System.Web.HttpApplication.AcquireRequestState> HTTP モジュールへのイベントです。</span><span class="sxs-lookup"><span data-stu-id="ddc17-125">The following example demonstrates how to create a custom HTTP module and connect the <xref:System.Web.HttpApplication.AcquireRequestState> event to the HTTP module.</span></span> <span data-ttu-id="ddc17-126">HTTP モジュールは、クライアント要求をフィルター処理することにより、Web アプリケーションのリソースへの各要求をインターセプトします。</span><span class="sxs-lookup"><span data-stu-id="ddc17-126">HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests.</span></span> <span data-ttu-id="ddc17-127">サブスクライブする HTTP モジュール、<xref:System.Web.HttpApplication>イベントを実装する必要があります、<xref:System.Web.IHttpModule>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="ddc17-127">Any HTTP module that subscribes to an <xref:System.Web.HttpApplication> event must implement the <xref:System.Web.IHttpModule> interface.</span></span>  
  
 [!code-csharp[System.Web.HttpApplication1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpApplication1/cs/source.cs#1)]
 [!code-vb[System.Web.HttpApplication1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpApplication1/vb/source.vb#1)]  
  
 <span data-ttu-id="ddc17-128">カスタム HTTP モジュール内のイベントが発生することができます、前に、HTTP モジュールについて ASP.NET を通知する Web.config ファイルで構成設定を変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ddc17-128">Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module.</span></span> <span data-ttu-id="ddc17-129">次の例は、適切な構成設定で、 `httpModules` Web.config ファイルのセクションです。</span><span class="sxs-lookup"><span data-stu-id="ddc17-129">The following example shows the appropriate configuration setting in the `httpModules` section of the Web.config file.</span></span> <span data-ttu-id="ddc17-130">次の設定は、IIS 7.0 のクラシック モードと IIS の以前のバージョンに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-130">The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.</span></span>  
  
```csharp  
<configuration>  
  <system.web>  
    <httpModules>  
      <add type="Samples.AspNet.CS.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </httpModules>  
  </system.web>  
</configuration>  
```  
  
```vb  
<configuration>  
  <system.web>  
    <httpModules>  
      <add type="Samples.AspNet.VB.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </httpModules>  
  </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="ddc17-131">次の設定は、IIS 7.0 統合モードに適用されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-131">The following setting applies to IIS 7.0 Integrated mode.</span></span>  
  
```csharp  
<configuration>  
  <system.webServer>  
    <modules>  
      <add type="Samples.AspNet.CS.CustomHTTPModule"  
        name="CustomHttpModule" />  
      </modules>  
  </system.webServer>  
</configuration>  
```  
  
```vb  
<configuration>  
  <system.webServer>  
    <modules>  
      <add type="Samples.AspNet.VB.CustomHTTPModule"  
        name="CustomHttpModule" />  
      <modules>  
  </system.webServer>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.IHttpHandlerFactory" />
    <altmember cref="T:System.Web.IHttpHandler" />
    <altmember cref="T:System.Web.IHttpModule" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpApplication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-132">
            <see cref="T:System.Web.HttpApplication" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-132">Initializes a new instance of the <see cref="T:System.Web.HttpApplication" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler AcquireRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcquireRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AcquireRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcquireRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcquireRequestState;" />
      <MemberSignature Language="F#" Value="member this.AcquireRequestState : EventHandler " Usage="member this.AcquireRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-133">現在の要求に関連付けられた現在の状態 (セッション状態など) を ASP.NET が取得すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-133">Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-134"><xref:System.Web.HttpApplication.AcquireRequestState>イベントは、イベント ハンドラーを作成した後に発生します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-134">The <xref:System.Web.HttpApplication.AcquireRequestState> event is raised after the event handler has been created.</span></span>  
  
 <span data-ttu-id="ddc17-135">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-135">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddc17-136">処理の例については、<xref:System.Web.HttpApplication.AcquireRequestState>イベントを参照してください、<xref:System.Web.HttpApplication>概要トピックです。</span><span class="sxs-lookup"><span data-stu-id="ddc17-136">For an example of handling the <xref:System.Web.HttpApplication.AcquireRequestState> event, see the <xref:System.Web.HttpApplication> overview topic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAcquireRequestState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAcquireRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-137">指定した <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-137">Adds the specified <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAcquireRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAcquireRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAcquireRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnAcquireRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-138">
            <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-138">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-139">
            <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-139">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-140">指定した <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-140">Adds the specified <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAcquireRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAcquireRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAcquireRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnAcquireRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-141">
            <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-141">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-142">
            <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-142">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-143">非同期の <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-143">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-144">指定した <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-144">Adds the specified <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAuthenticateRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-145">指定した <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-145">Adds the specified <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthenticateRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthenticateRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthenticateRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnAuthenticateRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-146">
            <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-146">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-147">
            <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-147">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-148">指定した <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-148">Adds the specified <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthenticateRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthenticateRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthenticateRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnAuthenticateRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-149">
            <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-149">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-150">
            <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-150">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-151">非同期の <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-151">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.AuthenticateRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-152">指定した <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-152">Adds the specified <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnAuthorizeRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-153">指定した <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-153">Adds the specified <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthorizeRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthorizeRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthorizeRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnAuthorizeRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-154">
            <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-154">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-155">
            <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-155">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-156">指定した <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-156">Adds the specified <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnAuthorizeRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnAuthorizeRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnAuthorizeRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnAuthorizeRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-157">
            <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-157">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-158">
            <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-158">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.AuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-159">非同期の <see cref="E:System.Web.HttpApplication.AcquireRequestState" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-159">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.AcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-160">指定した <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-160">Adds the specified <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.AuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnBeginRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-161">指定した <see cref="E:System.Web.HttpApplication.BeginRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.BeginRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-161">Adds the specified <see cref="E:System.Web.HttpApplication.BeginRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.BeginRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnBeginRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnBeginRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnBeginRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnBeginRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnBeginRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnBeginRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnBeginRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-162">
            <see cref="E:System.Web.HttpApplication.BeginRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-162">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-163">
            <see cref="E:System.Web.HttpApplication.BeginRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-163">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-164">指定した <see cref="E:System.Web.HttpApplication.BeginRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.BeginRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-164">Adds the specified <see cref="E:System.Web.HttpApplication.BeginRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.BeginRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnBeginRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnBeginRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnBeginRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnBeginRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnBeginRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnBeginRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnBeginRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-165">
            <see cref="E:System.Web.HttpApplication.BeginRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-165">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-166">
            <see cref="E:System.Web.HttpApplication.BeginRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-166">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-167">非同期の <see cref="E:System.Web.HttpApplication.BeginRequest" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-167">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.BeginRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-168">指定した <see cref="E:System.Web.HttpApplication.BeginRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.BeginRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-168">Adds the specified <see cref="E:System.Web.HttpApplication.BeginRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.BeginRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnEndRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-169">指定した <see cref="E:System.Web.HttpApplication.EndRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.EndRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-169">Adds the specified <see cref="E:System.Web.HttpApplication.EndRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.EndRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnEndRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnEndRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnEndRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnEndRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnEndRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnEndRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnEndRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-170">
            <see cref="E:System.Web.HttpApplication.EndRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-170">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-171">
            <see cref="E:System.Web.HttpApplication.EndRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-171">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-172">指定した <see cref="E:System.Web.HttpApplication.EndRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.EndRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-172">Adds the specified <see cref="E:System.Web.HttpApplication.EndRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.EndRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnEndRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnEndRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnEndRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnEndRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnEndRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnEndRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnEndRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-173">
            <see cref="E:System.Web.HttpApplication.EndRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-173">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-174">
            <see cref="E:System.Web.HttpApplication.EndRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-174">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-175">非同期の <see cref="E:System.Web.HttpApplication.EndRequest" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-175">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.EndRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-176">指定した <see cref="E:System.Web.HttpApplication.EndRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.EndRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-176">Adds the specified <see cref="E:System.Web.HttpApplication.EndRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.EndRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnLogRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-177">指定した <see cref="E:System.Web.HttpApplication.LogRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.LogRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-177">Adds the specified <see cref="E:System.Web.HttpApplication.LogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.LogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-178"><xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-178"><xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-179">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-179">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnLogRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnLogRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnLogRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnLogRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-180">
            <see cref="E:System.Web.HttpApplication.LogRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-180">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-181">
            <see cref="E:System.Web.HttpApplication.LogRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-181">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-182">指定した <see cref="E:System.Web.HttpApplication.LogRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.LogRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-182">Adds the specified <see cref="E:System.Web.HttpApplication.LogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.LogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-183"><xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-183"><xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-184">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-184">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnLogRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnLogRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnLogRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnLogRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-185">
            <see cref="E:System.Web.HttpApplication.LogRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-185">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-186">
            <see cref="E:System.Web.HttpApplication.LogRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-186">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-187">非同期の <see cref="E:System.Web.HttpApplication.LogRequest" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-187">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.LogRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-188">指定した <see cref="E:System.Web.HttpApplication.LogRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.LogRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-188">Adds the specified <see cref="E:System.Web.HttpApplication.LogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.LogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnMapRequestHandlerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-189">指定した <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-189">Adds the specified <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-190"><xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-190"><xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-191">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-191">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnMapRequestHandlerAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnMapRequestHandlerAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnMapRequestHandlerAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnMapRequestHandlerAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-192">
            <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-192">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-193">
            <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-193">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-194">指定した <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-194">Adds the specified <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-195"><xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-195"><xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-196">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-196">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnMapRequestHandlerAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnMapRequestHandlerAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnMapRequestHandlerAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnMapRequestHandlerAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-197">
            <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-197">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-198">
            <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-198">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-199">非同期の <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-199">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.MapRequestHandler" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-200">指定した <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-200">Adds the specified <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.MapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAcquireRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-201">指定した <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-201">Adds the specified <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAcquireRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAcquireRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAcquireRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostAcquireRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-202">
            <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-202">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-203">
            <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-203">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-204">指定した <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-204">Adds the specified <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAcquireRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAcquireRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAcquireRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAcquireRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAcquireRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostAcquireRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-205">
            <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-205">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-206">
            <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-206">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-207">非同期の <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-207">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-208">指定した <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-208">Adds the specified <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAuthenticateRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-209">指定した <see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-209">Adds the specified <see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthenticateRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthenticateRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthenticateRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostAuthenticateRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-210">
            <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-210">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-211">
            <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-211">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-212">指定した <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-212">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAuthenticateRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthenticateRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthenticateRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthenticateRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthenticateRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostAuthenticateRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-213">
            <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-213">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-214">
            <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-214">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-215">非同期の <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-215">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-216">指定した <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-216">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostAuthorizeRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-217">指定した <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-217">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthorizeRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthorizeRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthorizeRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostAuthorizeRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-218">
            <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-218">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-219">
            <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-219">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-220">指定した <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-220">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostAuthorizeRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostAuthorizeRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostAuthorizeRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostAuthorizeRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostAuthorizeRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostAuthorizeRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-221">
            <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-221">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-222">
            <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-222">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-223">非同期の <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-223">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-224">指定した <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> を、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-224">Adds the specified <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostLogRequestAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-225">指定した <see cref="E:System.Web.HttpApplication.PostLogRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostLogRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-225">Adds the specified <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-226"><xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-226"><xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-227">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-227">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostLogRequestAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostLogRequestAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostLogRequestAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostLogRequestAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-228">
            <see cref="E:System.Web.HttpApplication.PostLogRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-228">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-229">
            <see cref="E:System.Web.HttpApplication.PostLogRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-229">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-230">指定した <see cref="E:System.Web.HttpApplication.PostLogRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostLogRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-230">Adds the specified <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-231"><xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-231"><xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-232">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-232">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostLogRequestAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostLogRequestAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostLogRequestAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostLogRequestAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostLogRequestAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostLogRequestAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-233">
            <see cref="E:System.Web.HttpApplication.PostLogRequest" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-233">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-234">
            <see cref="E:System.Web.HttpApplication.PostLogRequest" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-234">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-235">非同期の <see cref="E:System.Web.HttpApplication.PostLogRequest" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-235">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostLogRequest" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-236">指定した <see cref="E:System.Web.HttpApplication.PostLogRequest" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostLogRequest" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-236">Adds the specified <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostLogRequest" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostMapRequestHandlerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-237">指定した <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-237">Adds the specified <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostMapRequestHandlerAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostMapRequestHandlerAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostMapRequestHandlerAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostMapRequestHandlerAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-238">
            <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-238">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-239">
            <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-239">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-240">指定した <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-240">Adds the specified <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostMapRequestHandlerAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostMapRequestHandlerAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostMapRequestHandlerAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostMapRequestHandlerAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostMapRequestHandlerAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostMapRequestHandlerAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-241">
            <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-241">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-242">
            <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-242">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-243">非同期の <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> コレクションに追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-243">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-244">指定した <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-244">Adds the specified <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostReleaseRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-245">指定した <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-245">Adds the specified <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostReleaseRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostReleaseRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostReleaseRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostReleaseRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-246">
            <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-246">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-247">
            <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-247">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-248">指定した <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-248">Adds the specified <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostReleaseRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostReleaseRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostReleaseRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostReleaseRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-249">
            <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-249">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-250">
            <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-250">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-251">非同期の <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-251">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-252">指定した <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-252">Adds the specified <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostRequestHandlerExecuteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-253">指定した <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-253">Adds the specified <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostRequestHandlerExecuteAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostRequestHandlerExecuteAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostRequestHandlerExecuteAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-254">
            <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-254">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-255">
            <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-255">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-256">指定した <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-256">Adds the specified <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostRequestHandlerExecuteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostRequestHandlerExecuteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostRequestHandlerExecuteAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-257">
            <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-257">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-258">
            <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-258">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-259">非同期の <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-259">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-260">指定した <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-260">Adds the specified <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostResolveRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-261">指定した <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-261">Adds the specified <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostResolveRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostResolveRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostResolveRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostResolveRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-262">
            <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-262">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-263">
            <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-263">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-264">指定した <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-264">Adds the specified <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostResolveRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostResolveRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostResolveRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostResolveRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-265">
            <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-265">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-266">
            <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-266">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-267">非同期の <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-267">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-268">指定した <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-268">Adds the specified <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPostUpdateRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-269">指定した <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-269">Adds the specified <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPostUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostUpdateRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostUpdateRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPostUpdateRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-270">
            <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-270">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-271">
            <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-271">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-272">指定した <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-272">Adds the specified <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPostUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPostUpdateRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPostUpdateRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPostUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPostUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPostUpdateRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-273">イベントの非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-273">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the event.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-274">
            <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-274">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-275">非同期の <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-275">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-276">指定した <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-276">Adds the specified <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPreRequestHandlerExecuteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-277">指定した <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-277">Adds the specified <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPreRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRequestHandlerExecuteAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRequestHandlerExecuteAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnPreRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnPreRequestHandlerExecuteAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-278">
            <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-278">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-279">
            <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-279">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-280">指定した <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-280">Adds the specified <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPreRequestHandlerExecuteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRequestHandlerExecuteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRequestHandlerExecuteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRequestHandlerExecuteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPreRequestHandlerExecuteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnPreRequestHandlerExecuteAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-281">
            <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-281">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-282">
            <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-282">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-283">非同期の <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> コレクションに追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-283">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-284">指定した <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-284">Adds the specified <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnReleaseRequestStateAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-285">指定した <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-285">Adds the specified <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnReleaseRequestStateAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnReleaseRequestStateAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnReleaseRequestStateAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnReleaseRequestStateAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-286">
            <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-286">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-287">
            <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-287">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-288">指定した <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-288">Adds the specified <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnReleaseRequestStateAsync">
      <MemberSignature Language="C#" Value="public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnReleaseRequestStateAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnReleaseRequestStateAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnReleaseRequestStateAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnReleaseRequestStateAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnReleaseRequestStateAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-289">
            <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-289">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-290">
            <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-290">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-291">非同期の <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-291">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.ReleaseRequestState" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-292">指定した <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-292">Adds the specified <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ReleaseRequestState" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnResolveRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-293">指定した <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> イベント ハンドラーを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-293">Adds the specified <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handler to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnResolveRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnResolveRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnResolveRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnResolveRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-294">
            <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-294">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-295">
            <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-295">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-296">指定した <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> イベント ハンドラーを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-296">Adds the specified <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handler to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnResolveRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnResolveRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnResolveRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnResolveRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnResolveRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnResolveRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-297">
            <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-297">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-298">
            <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-298">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-299">非同期の <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-299">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.ResolveRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-300">指定した <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> イベント ハンドラーを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-300">Adds the specified <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handler to the collection of asynchronous <see cref="E:System.Web.HttpApplication.ResolveRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnUpdateRequestCacheAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-301">指定した <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-301">Adds the specified <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnUpdateRequestCacheAsync(class System.Web.BeginEventHandler bh, class System.Web.EndEventHandler eh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnUpdateRequestCacheAsync (bh As BeginEventHandler, eh As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ bh, System::Web::EndEventHandler ^ eh);" />
      <MemberSignature Language="F#" Value="member this.AddOnUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="httpApplication.AddOnUpdateRequestCacheAsync (bh, eh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bh" Type="System.Web.BeginEventHandler" />
        <Parameter Name="eh" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="bh">
          <span data-ttu-id="ddc17-302">
            <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-302">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="eh">
          <span data-ttu-id="ddc17-303">
            <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-303">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-304">指定した <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-304">Adds the specified <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnUpdateRequestCacheAsync">
      <MemberSignature Language="C#" Value="public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnUpdateRequestCacheAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnUpdateRequestCacheAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnUpdateRequestCacheAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnUpdateRequestCacheAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="httpApplication.AddOnUpdateRequestCacheAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="ddc17-305">
            <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> の非同期処理を開始する <see cref="T:System.Web.BeginEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-305">The <see cref="T:System.Web.BeginEventHandler" /> that starts asynchronous processing of the <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="ddc17-306">
            <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> の非同期処理を終了する <see cref="T:System.Web.EndEventHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-306">The <see cref="T:System.Web.EndEventHandler" /> that ends asynchronous processing of the <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ddc17-307">非同期の <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> に追加する、関連付けられた状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-307">The associated state to add to the asynchronous <see cref="E:System.Web.HttpApplication.UpdateRequestCache" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-308">指定した <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> イベントを、現在の要求の非同期 <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> イベント ハンドラーのコレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-308">Adds the specified <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event to the collection of asynchronous <see cref="E:System.Web.HttpApplication.UpdateRequestCache" /> event handlers for the current request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.HttpApplication.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-309">アプリケーションの現在の状態を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-309">Gets the current state of an application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-310">現在の要求に関する <see cref="T:System.Web.HttpApplicationState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-310">The <see cref="T:System.Web.HttpApplicationState" /> for the current request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-311">アプリケーションの現在の状態は、.NET Framework のオブジェクトと複数のクライアントから複数の Web 要求に関連付けられているスカラー値の両方を格納に使用できるアプリケーション全体のオブジェクトのキー/値のディクショナリで構成されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-311">The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateRequest">
      <MemberSignature Language="C#" Value="public event EventHandler AuthenticateRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AuthenticateRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AuthenticateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthenticateRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AuthenticateRequest;" />
      <MemberSignature Language="F#" Value="member this.AuthenticateRequest : EventHandler " Usage="member this.AuthenticateRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-312">セキュリティ モジュールがユーザーの ID を確立すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-312">Occurs when a security module has established the identity of the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-313"><xref:System.Web.HttpApplication.AuthenticateRequest>イベントは、構成済みの認証メカニズムが現在の要求を認証されたことを通知します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-313">The <xref:System.Web.HttpApplication.AuthenticateRequest> event signals that the configured authentication mechanism has authenticated the current request.</span></span> <span data-ttu-id="ddc17-314">サブスクライブ、<xref:System.Web.HttpApplication.AuthenticateRequest>イベントにより、要求は、接続されているモジュールまたはイベント ハンドラーを処理する前に認証されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-314">Subscribing to the <xref:System.Web.HttpApplication.AuthenticateRequest> event ensures that the request will be authenticated before processing the attached module or event handler.</span></span>  
  
 <span data-ttu-id="ddc17-315">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-315">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />
      </Docs>
    </Member>
    <Member MemberName="AuthorizeRequest">
      <MemberSignature Language="C#" Value="public event EventHandler AuthorizeRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AuthorizeRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.AuthorizeRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AuthorizeRequest;" />
      <MemberSignature Language="F#" Value="member this.AuthorizeRequest : EventHandler " Usage="member this.AuthorizeRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-316">セキュリティ モジュールによってユーザーが承認されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-316">Occurs when a security module has verified user authorization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-317"><xref:System.Web.HttpApplication.AuthorizeRequest> ASP.NET が現在の要求を承認されているイベントを通知します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-317">The <xref:System.Web.HttpApplication.AuthorizeRequest> event signals that ASP.NET has authorized the current request.</span></span> <span data-ttu-id="ddc17-318">サブスクライブ、<xref:System.Web.HttpApplication.AuthorizeRequest>イベントにより、要求は認証され、アタッチされたモジュールまたはイベント ハンドラーを処理する前に承認されています。</span><span class="sxs-lookup"><span data-stu-id="ddc17-318">Subscribing to the <xref:System.Web.HttpApplication.AuthorizeRequest> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.</span></span>  
  
 <span data-ttu-id="ddc17-319">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-319">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostAuthorizeRequest" />
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public event EventHandler BeginRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BeginRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.BeginRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeginRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BeginRequest;" />
      <MemberSignature Language="F#" Value="member this.BeginRequest : EventHandler " Usage="member this.BeginRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-320">ASP.NET が要求に応答するときに、実行の HTTP パイプライン チェーンの最初のイベントとして発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-320">Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-321"><xref:System.Web.HttpApplication.BeginRequest>イベントは、指定された新しい要求の作成を通知します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-321">The <xref:System.Web.HttpApplication.BeginRequest> event signals the creation of any given new request.</span></span> <span data-ttu-id="ddc17-322">このイベントは、常に発生し、要求の処理中に発生する最初のイベントは、常に。</span><span class="sxs-lookup"><span data-stu-id="ddc17-322">This event is always raised and is always the first event to occur during the processing of a request.</span></span>  
  
 <span data-ttu-id="ddc17-323">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-323">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.EndRequest" />
      </Docs>
    </Member>
    <Member MemberName="CompleteRequest">
      <MemberSignature Language="C#" Value="public void CompleteRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.CompleteRequest" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteRequest ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteRequest();" />
      <MemberSignature Language="F#" Value="member this.CompleteRequest : unit -&gt; unit" Usage="httpApplication.CompleteRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-324">ASP.NET に実行の HTTP パイプライン チェーン内のすべてのイベントとフィルター処理を省略させ、直接 <see cref="E:System.Web.HttpApplication.EndRequest" /> イベントを実行させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-324">Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <see cref="E:System.Web.HttpApplication.EndRequest" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.HttpApplication.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-325">現在の要求に関する HTTP 固有の情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-325">Gets HTTP-specific information about the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-326">現在の要求に関する <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-326">The <see cref="T:System.Web.HttpContext" /> for the current request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="httpApplication.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-327">
            <see cref="T:System.Web.HttpApplication" /> インスタンスを破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-327">Disposes the <see cref="T:System.Web.HttpApplication" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-328"><xref:System.Web.HttpApplication.Request%2A>、 <xref:System.Web.HttpApplication.Response%2A>、 <xref:System.Web.HttpApplication.Session%2A>、および<xref:System.Web.HttpApplication.Application%2A>プロパティは使用できません使用する場合、<xref:System.Web.HttpApplication.Dispose%2A>メソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-328">The <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, and <xref:System.Web.HttpApplication.Application%2A> properties are not available for use when the <xref:System.Web.HttpApplication.Dispose%2A> method executes.</span></span>  
  
 <span data-ttu-id="ddc17-329"><xref:System.Web.HttpApplication.Dispose%2A>メソッドの呼び出し、<xref:System.Web.IHttpModule.Dispose%2A>メソッドを登録済みの各<xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A>アプリケーション インスタンスとが発生し、<xref:System.Web.HttpApplication.Disposed>イベント。</span><span class="sxs-lookup"><span data-stu-id="ddc17-329">The <xref:System.Web.HttpApplication.Dispose%2A> method calls the <xref:System.Web.IHttpModule.Dispose%2A> method on each of the registered <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> in the application instance and raises the <xref:System.Web.HttpApplication.Disposed> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ddc17-330">
            <para>オーバーライドする場合<see cref="M:System.Web.HttpApplication.Dispose" />派生クラスで、基本クラスを呼び出すことを確認<see cref="M:System.Web.HttpApplication.Dispose" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-330">
              <para>When overriding <see cref="M:System.Web.HttpApplication.Dispose" /> in a derived class, make sure to call the base class's <see cref="M:System.Web.HttpApplication.Dispose" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-331">アプリケーションの破棄時に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-331">Occurs when the application is disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-332"><xref:System.Web.HttpApplication.Disposed> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-332">When you create a <xref:System.Web.HttpApplication.Disposed> delegate, you identify the method that handles the event.</span></span> <span data-ttu-id="ddc17-333">イベントをイベント ハンドラーに関連付けるのインスタンスを追加、<xref:System.Web.HttpApplication.Disposed>イベントにデリゲートします。</span><span class="sxs-lookup"><span data-stu-id="ddc17-333">To associate the event with your event handler, add an instance of the <xref:System.Web.HttpApplication.Disposed> delegate to the event.</span></span> <span data-ttu-id="ddc17-334">イベント ハンドラーは、イベントが発生するたびに呼び出されますを削除しない限り、<xref:System.Web.HttpApplication.Disposed>を委任します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-334">The event handler is called whenever the event occurs, unless you remove the <xref:System.Web.HttpApplication.Disposed> delegate.</span></span>  
  
 <span data-ttu-id="ddc17-335">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-335">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public event EventHandler EndRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EndRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.EndRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EndRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EndRequest;" />
      <MemberSignature Language="F#" Value="member this.EndRequest : EventHandler " Usage="member this.EndRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-336">ASP.NET が要求に応答するときに、実行の HTTP パイプライン チェーンの最後のイベントとして発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-336">Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-337"><xref:System.Web.HttpApplication.EndRequest>イベントは、常にいつ発生するか、<xref:System.Web.HttpApplication.CompleteRequest%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-337">The <xref:System.Web.HttpApplication.EndRequest> event is always raised when the <xref:System.Web.HttpApplication.CompleteRequest%2A> method is called.</span></span>  
  
 <span data-ttu-id="ddc17-338">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-338">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.BeginRequest" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Error;" />
      <MemberSignature Language="F#" Value="member this.Error : EventHandler " Usage="member this.Error : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-339">ハンドルされない例外がスローされると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-339">Occurs when an unhandled exception is thrown.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-340">例外を発生させる、<xref:System.Web.HttpApplication.Error>イベントへの呼び出しでアクセスできる、<xref:System.Web.HttpServerUtility.GetLastError%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ddc17-340">The exception that raises the <xref:System.Web.HttpApplication.Error> event can be accessed by a call to the <xref:System.Web.HttpServerUtility.GetLastError%2A> method.</span></span> <span data-ttu-id="ddc17-341">アプリケーションでは、カスタムのエラー出力を生成する場合は、ASP.NET によってへの呼び出しによって生成される既定のエラー メッセージを抑制する、<xref:System.Web.HttpServerUtility.ClearError%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ddc17-341">If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <xref:System.Web.HttpServerUtility.ClearError%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ddc17-342">使用することはできませんが、Web アプリケーションに XML Web サービスが含まれている場合、<xref:System.Web.HttpApplication.Error>これらのサービスのグローバル例外処理のためのイベントです。</span><span class="sxs-lookup"><span data-stu-id="ddc17-342">If your Web application contains XML Web services, you cannot use the <xref:System.Web.HttpApplication.Error> event for global exception handling of those services.</span></span> <span data-ttu-id="ddc17-343">XML Web サービスの HTTP ハンドラーは、XML Web サービスで発生し、前に SOAP エラーに変換した任意の例外を使用する、<xref:System.Web.HttpApplication.Error>呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="ddc17-343">The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <xref:System.Web.HttpApplication.Error> being called.</span></span> <span data-ttu-id="ddc17-344">XML Web サービスの例外を処理するには、カスタムのグローバル例外ハンドラーで Web サービスの例外を処理する SOAP 拡張機能を構築します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-344">To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.</span></span>  
  
 <span data-ttu-id="ddc17-345">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-345">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.HttpApplication.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-346">すべてのアプリケーション イベントを処理するイベント ハンドラー デリゲートのリストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-346">Gets the list of event handler delegates that process all application events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-347">イベント ハンドラー デリゲートの名前が格納されている <see cref="T:System.ComponentModel.EventHandlerList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-347">An <see cref="T:System.ComponentModel.EventHandlerList" /> that contains the names of the event handler delegates.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputCacheProviderName">
      <MemberSignature Language="C#" Value="public virtual string GetOutputCacheProviderName (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetOutputCacheProviderName(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutputCacheProviderName (context As HttpContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetOutputCacheProviderName(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputCacheProviderName : System.Web.HttpContext -&gt; string&#xA;override this.GetOutputCacheProviderName : System.Web.HttpContext -&gt; string" Usage="httpApplication.GetOutputCacheProviderName context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ddc17-348">HTTP 要求を処理するために使用される組み込みサーバー オブジェクトへの参照を提供する <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-348">An <see cref="T:System.Web.HttpContext" /> that provides references to intrinsic server objects that are used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-349">Web サイトに対して構成されている既定の出力キャッシュ プロバイダーの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-349">Gets the name of the default output-cache provider that is configured for a Web site.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddc17-350">既定のプロバイダーの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-350">The name of the default provider.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-351">このメソッドをオーバーライドし、Web サイトに対して構成されているすべての出力キャッシュ プロバイダーの名前を返すに使用できます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-351">You can override this method and use it to return the name of any output-cache provider that is configured for a Web site.</span></span> <span data-ttu-id="ddc17-352">ASP.NET では、名前付きのプロバイダーへの参照を取得し、実行中の要求の出力キャッシュ データの格納に使用します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-352">ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.</span></span>  
  
 <span data-ttu-id="ddc17-353">既定では、ASP.NET では、ページ、およびコントロールをレンダリングするすべての HTTP 応答は、メモリ内の出力キャッシュを使用します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-353">By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache.</span></span> <span data-ttu-id="ddc17-354">Web アプリケーションの別のプロバイダー名を指定することによって使用される既定の出力キャッシュ プロバイダーを変更することができます`defaultProvider`です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-354">You can change the default output-cache provider that is used for a Web application by specifying a different provider name for `defaultProvider`.</span></span>  
  
 <span data-ttu-id="ddc17-355">さらと個々 の要求の個々 のコントロールに対して別の出力キャッシュ プロバイダーを選択することができます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-355">In addition, you can select different output-cache providers for individual control and for individual requests.</span></span> <span data-ttu-id="ddc17-356">別の Web ユーザー コントロールの別の出力キャッシュ プロバイダーを選択する最も簡単な方法は、new を使用して、宣言を行う、`providerName`ページまたはコントロール ディレクティブでは、次の例で示すように属性します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-356">The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new `providerName` attribute in a page or control directive, as shown in the following example:</span></span>  
  
```  
<%@ OutputCache Duration="60" VaryByParam="None"   
    providerName="DiskCache" %>  
```  
  
 <span data-ttu-id="ddc17-357">HTTP 要求に対する別の出力キャッシュ プロバイダーを指定するには、プログラムによって、特定の要求を使用するプロバイダーを指定する、Global.asax ファイルでこのメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="ddc17-357">To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request.</span></span> <span data-ttu-id="ddc17-358">詳細については、「[ASP.NET のキャッシュの概要](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-358">For more information, see [ASP.NET Caching Overview](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddc17-359">次の例は、プログラムによって名前付きキャッシュ プロバイダーを指定する方法を示しています。 `DiskCache` Advanced.aspx ページに進みますを任意の HTTP 要求にします。</span><span class="sxs-lookup"><span data-stu-id="ddc17-359">The following example shows how to programmatically specify the cache provider named `DiskCache` for any HTTP request that goes to the Advanced.aspx page.</span></span>  

```csharp  
public override string GetOutputCacheProviderName(HttpContext context)  
{  
    if (context.Request.Path.EndsWith("Advanced.aspx"))  
        return "DiskCache";  
    else  
        return base.GetOutputCacheProviderName(context);  
}  
```  

```vb  
Public Overloads Overrides Sub GetOutputCacheProviderName(ByVal context _  
        As HttpContext) As String   
    If context.Request.Path.EndsWith("Advanced.aspx") Then   
        Return "DiskCache"   
    Else   
        Return MyBase.GetOutputCacheProviderName(context)   
    End If   
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <span data-ttu-id="ddc17-360">
            <paramref name="context" /> は <see langword="null" /> または空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-360">
              <paramref name="context" /> is <see langword="null" /> or is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVaryByCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetVaryByCustomString (System.Web.HttpContext context, string custom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetVaryByCustomString(class System.Web.HttpContext context, string custom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVaryByCustomString (context As HttpContext, custom As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetVaryByCustomString(System::Web::HttpContext ^ context, System::String ^ custom);" />
      <MemberSignature Language="F#" Value="abstract member GetVaryByCustomString : System.Web.HttpContext * string -&gt; string&#xA;override this.GetVaryByCustomString : System.Web.HttpContext * string -&gt; string" Usage="httpApplication.GetVaryByCustomString (context, custom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="custom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ddc17-361">現在の Web 要求に関する情報を保持している <see cref="T:System.Web.HttpContext" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-361">An <see cref="T:System.Web.HttpContext" /> object that contains information about the current Web request.</span>
          </span>
        </param>
        <param name="custom">
          <span data-ttu-id="ddc17-362">現在の要求への応答に使用するキャッシュされた応答を指定するカスタム文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-362">The custom string that specifies which cached response is used to respond to the current request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-363">
            <see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /> プロパティのアプリケーション全体にわたる実装を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-363">Provides an application-wide implementation of the <see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddc17-364">
            <paramref name="custom" /> パラメーターの値が <see langword="&quot;browser&quot;" /> の場合は、ブラウザーの <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-364">If the value of the <paramref name="custom" /> parameter is <see langword="&quot;browser&quot;" />, the browser's <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-365">オーバーライドできます<xref:System.Web.HttpApplication.GetVaryByCustomString%2A>を現在の要求に基づくカスタム別値を計算する新しいメソッドを追加します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-365">You can override <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> to add a new method for calculating custom vary-by values that are based on the current request.</span></span> <span data-ttu-id="ddc17-366">実装では、認識されないカスタム値を基本クラスを呼び出すためです。</span><span class="sxs-lookup"><span data-stu-id="ddc17-366">The implementation has to call the base class for custom values that it does not recognize.</span></span> <span data-ttu-id="ddc17-367">詳細については、次を参照してください。[する方法: 複数のページを使用してカスタム文字列バージョン キャッシュ](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-367">For more information, see [How to: Cache Versions of a Page Using Custom Strings](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.Init" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="httpApplication.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-368">イベント ハンドラー モジュールがすべて追加された後にカスタム初期化コードを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-368">Executes custom initialization code after all event handler modules have been added.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-369">派生クラスでオーバーライドすることができます、<xref:System.Web.HttpApplication.Init%2A>を 1 回限りのカスタムの初期化コードを追加するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ddc17-369">In a derived class, you can override the <xref:System.Web.HttpApplication.Init%2A> method to add custom one-time initialization code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogRequest">
      <MemberSignature Language="C#" Value="public event EventHandler LogRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LogRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.LogRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LogRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LogRequest;" />
      <MemberSignature Language="F#" Value="member this.LogRequest : EventHandler " Usage="member this.LogRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-370">ASP.NET が現在の要求に対するログの記録処理を実行する直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-370">Occurs just before ASP.NET performs any logging for the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-371"><xref:System.Web.HttpApplication.LogRequest>イベントは、エラーが発生した場合でも発生します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-371">The <xref:System.Web.HttpApplication.LogRequest> event is raised even if an error occurs.</span></span> <span data-ttu-id="ddc17-372">イベント ハンドラーを指定することができます、<xref:System.Web.HttpApplication.LogRequest>要求に対してカスタムのログ記録を提供するイベントです。</span><span class="sxs-lookup"><span data-stu-id="ddc17-372">You can provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event to provide custom logging for the request.</span></span>  
  
 <span data-ttu-id="ddc17-373">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-373">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="ddc17-374"><xref:System.Web.HttpApplication.LogRequest> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-374"><xref:System.Web.HttpApplication.LogRequest> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-375">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-375">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ddc17-376">次の例では、イベント ハンドラーを作成して、<xref:System.Web.HttpApplication.LogRequest>イベント。</span><span class="sxs-lookup"><span data-stu-id="ddc17-376">The following example demonstrates how to provide an event handler for the <xref:System.Web.HttpApplication.LogRequest> event.</span></span> <span data-ttu-id="ddc17-377">イベント ハンドラーでは、その他のいくつかのイベントも処理します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-377">The event handler also handles several other events.</span></span> <span data-ttu-id="ddc17-378">したがって、<xref:System.Web.HttpContext.CurrentNotification%2A>と<xref:System.Web.HttpContext.IsPostNotification%2A>プロパティを使用して実行するコードを判別します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-378">Therefore, the <xref:System.Web.HttpContext.CurrentNotification%2A> and <xref:System.Web.HttpContext.IsPostNotification%2A> properties are used to determine what code to run.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/CS/App_Code/TestModule.cs#1)]
 [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse.IsPostNotification/VB/App_Code/TestModule.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostLogRequest" />
      </Docs>
    </Member>
    <Member MemberName="MapRequestHandler">
      <MemberSignature Language="C#" Value="public event EventHandler MapRequestHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MapRequestHandler" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.MapRequestHandler" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MapRequestHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MapRequestHandler;" />
      <MemberSignature Language="F#" Value="member this.MapRequestHandler : EventHandler " Usage="member this.MapRequestHandler : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-379">要求に応答するハンドラーが選択されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-379">Occurs when the handler is selected to respond to the request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-380"><xref:System.Web.HttpApplication.MapRequestHandler>イベントは、現在の要求の要求ハンドラーを決定する ASP.NET インフラストラクチャによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-380">The <xref:System.Web.HttpApplication.MapRequestHandler> event is used by the ASP.NET infrastructure to determine the request handler for the current request.</span></span> <span data-ttu-id="ddc17-381">詳細については、次を参照してください。[する方法: HTTP ハンドラーの登録](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-381">For more information, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span></span>  
  
 <span data-ttu-id="ddc17-382">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-382">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="ddc17-383"><xref:System.Web.HttpApplication.MapRequestHandler> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-383"><xref:System.Web.HttpApplication.MapRequestHandler> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-384">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-384">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostMapRequestHandler" />
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public System.Web.HttpModuleCollection Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpModuleCollection Modules" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Modules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modules As HttpModuleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpModuleCollection ^ Modules { System::Web::HttpModuleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : System.Web.HttpModuleCollection" Usage="System.Web.HttpApplication.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpModuleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-385">現在のアプリケーションのモジュールのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-385">Gets the collection of modules for the current application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-386">アプリケーションのモジュールの名前が格納されている <see cref="T:System.Web.HttpModuleCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-386">An <see cref="T:System.Web.HttpModuleCollection" /> that contains the names of the modules for the application.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExecuteRequestStep">
      <MemberSignature Language="C#" Value="public void OnExecuteRequestStep (Action&lt;System.Web.HttpContextBase,Action&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnExecuteRequestStep(class System.Action`2&lt;class System.Web.HttpContextBase, class System.Action&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnExecuteRequestStep (callback As Action(Of HttpContextBase, Action))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnExecuteRequestStep(Action&lt;System::Web::HttpContextBase ^, Action ^&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="member this.OnExecuteRequestStep : Action&lt;System.Web.HttpContextBase, Action&gt; -&gt; unit" Usage="httpApplication.OnExecuteRequestStep callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase,System.Action&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ddc17-387">コールバック メソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-387">The callback method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-388">要求の実行ステップが実行されたときに呼び出すコールバックを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-388">Specifies a callback to invoke when a request execution step is executed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ddc17-389">このメソッドは、拡張機能を簡単をアンビエント コンテキストのシナリオで機能を実装して、ASP.NET 実行フローを考慮するライブラリをビルドする開発者向けの ASP.NET パイプラインを (たとえば、トレースでは、プロファイリング、診断、およびトランザクションの場合)。</span><span class="sxs-lookup"><span data-stu-id="ddc17-389">This method provides extensibility to the ASP.NET pipeline to make it easy for developers to implement features in ambient context scenarios and build libraries that care about ASP.NET execution flow (for example, tracing, profiling, diagnostics, and transactions).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostAcquireRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler PostAcquireRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAcquireRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAcquireRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAcquireRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAcquireRequestState;" />
      <MemberSignature Language="F#" Value="member this.PostAcquireRequestState : EventHandler " Usage="member this.PostAcquireRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-390">現在の要求に関連付けられた要求状態 (セッション状態など) が取得されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-390">Occurs when the request state (for example, session state) that is associated with the current request has been obtained.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-391"><xref:System.Web.HttpApplication.PostAcquireRequestState>後にイベントを生成、<xref:System.Web.HttpApplication.AcquireRequestState>イベントが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-391">The <xref:System.Web.HttpApplication.PostAcquireRequestState> event is raised after the <xref:System.Web.HttpApplication.AcquireRequestState> event has occurred.</span></span> <span data-ttu-id="ddc17-392">サブスクライブする機能、<xref:System.Web.HttpApplication.AcquireRequestState>イベントによって処理されるすべてのデータにアクセスできます、<xref:System.Web.HttpApplication.PostAcquireRequestState>です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-392">Functionality that subscribes to the <xref:System.Web.HttpApplication.AcquireRequestState> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAcquireRequestState>.</span></span>  
  
 <span data-ttu-id="ddc17-393">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-393">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AcquireRequestState" />
      </Docs>
    </Member>
    <Member MemberName="PostAuthenticateRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostAuthenticateRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAuthenticateRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAuthenticateRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAuthenticateRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAuthenticateRequest;" />
      <MemberSignature Language="F#" Value="member this.PostAuthenticateRequest : EventHandler " Usage="member this.PostAuthenticateRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-394">セキュリティ モジュールがユーザーの ID を確立すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-394">Occurs when a security module has established the identity of the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-395"><xref:System.Web.HttpApplication.PostAuthenticateRequest>後にイベントを生成、<xref:System.Web.HttpApplication.AuthenticateRequest>イベントが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-395">The <xref:System.Web.HttpApplication.PostAuthenticateRequest> event is raised after the <xref:System.Web.HttpApplication.AuthenticateRequest> event has occurred.</span></span> <span data-ttu-id="ddc17-396">サブスクライブする機能、<xref:System.Web.HttpApplication.PostAuthenticateRequest>イベントによって処理されるすべてのデータにアクセスできます、<xref:System.Web.HttpApplication.PostAuthenticateRequest>です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-396">Functionality that subscribes to the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event can access any data that is processed by the <xref:System.Web.HttpApplication.PostAuthenticateRequest>.</span></span>  
  
 <span data-ttu-id="ddc17-397">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-397">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AuthenticateRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostAuthorizeRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostAuthorizeRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostAuthorizeRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostAuthorizeRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostAuthorizeRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostAuthorizeRequest;" />
      <MemberSignature Language="F#" Value="member this.PostAuthorizeRequest : EventHandler " Usage="member this.PostAuthorizeRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-398">現在の要求のユーザーが承認されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-398">Occurs when the user for the current request has been authorized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-399"><xref:System.Web.HttpApplication.PostAuthorizeRequest> ASP.NET が現在の要求を承認されているイベントを通知します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-399">The <xref:System.Web.HttpApplication.PostAuthorizeRequest> event signals that ASP.NET has authorized the current request.</span></span> <span data-ttu-id="ddc17-400">サブスクライブ、<xref:System.Web.HttpApplication.PostAuthorizeRequest>イベントにより、認証と、接続されているモジュールまたはイベント ハンドラーを処理する前に、要求の承認。</span><span class="sxs-lookup"><span data-stu-id="ddc17-400">Subscribing to the <xref:System.Web.HttpApplication.PostAuthorizeRequest> event ensures authentication and authorization of the request before processing the attached module or event handler.</span></span>  
  
 <span data-ttu-id="ddc17-401">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-401">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.AuthorizeRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostLogRequest">
      <MemberSignature Language="C#" Value="public event EventHandler PostLogRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostLogRequest" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostLogRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostLogRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostLogRequest;" />
      <MemberSignature Language="F#" Value="member this.PostLogRequest : EventHandler " Usage="member this.PostLogRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-402">ASP.NET が <see cref="E:System.Web.HttpApplication.LogRequest" /> イベントに対するすべてのイベント ハンドラーの処理を完了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-402">Occurs when ASP.NET has completed processing all the event handlers for the <see cref="E:System.Web.HttpApplication.LogRequest" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-403">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-403">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="ddc17-404"><xref:System.Web.HttpApplication.PostLogRequest> .NET Framework version 3.5 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-404"><xref:System.Web.HttpApplication.PostLogRequest> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="ddc17-405">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ddc17-405">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.LogRequest" />
      </Docs>
    </Member>
    <Member MemberName="PostMapRequestHandler">
      <MemberSignature Language="C#" Value="public event EventHandler PostMapRequestHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostMapRequestHandler" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostMapRequestHandler" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostMapRequestHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostMapRequestHandler;" />
      <MemberSignature Language="F#" Value="member this.PostMapRequestHandler : EventHandler " Usage="member this.PostMapRequestHandler : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-406">ASP.NET が現在の要求を適切なイベント ハンドラーにマップすると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-406">Occurs when ASP.NET has mapped the current request to the appropriate event handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-407">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-407">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.MapRequestHandler" />
      </Docs>
    </Member>
    <Member MemberName="PostReleaseRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler PostReleaseRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostReleaseRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostReleaseRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostReleaseRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostReleaseRequestState;" />
      <MemberSignature Language="F#" Value="member this.PostReleaseRequestState : EventHandler " Usage="member this.PostReleaseRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-408">ASP.NET がすべての要求イベント ハンドラーの実行を完了し、要求状態データが格納されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-408">Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-409">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-409">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ReleaseRequestState" />
      </Docs>
    </Member>
    <Member MemberName="PostRequestHandlerExecute">
      <MemberSignature Language="C#" Value="public event EventHandler PostRequestHandlerExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostRequestHandlerExecute" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostRequestHandlerExecute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostRequestHandlerExecute As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostRequestHandlerExecute;" />
      <MemberSignature Language="F#" Value="member this.PostRequestHandlerExecute : EventHandler " Usage="member this.PostRequestHandlerExecute : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-410">ASP.NET イベント ハンドラー (ページ、XML Web サービスなど) の実行が完了すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-410">Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-411">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-411">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" />
      </Docs>
    </Member>
    <Member MemberName="PostResolveRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler PostResolveRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostResolveRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostResolveRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostResolveRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostResolveRequestCache;" />
      <MemberSignature Language="F#" Value="member this.PostResolveRequestCache : EventHandler " Usage="member this.PostResolveRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-412">ASP.NET が現在のイベント ハンドラーの実行を省略し、キャッシング モジュールに対してキャッシュからの要求の処理を許可した場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-412">Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-413">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-413">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="PostUpdateRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler PostUpdateRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PostUpdateRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PostUpdateRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostUpdateRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PostUpdateRequestCache;" />
      <MemberSignature Language="F#" Value="member this.PostUpdateRequestCache : EventHandler " Usage="member this.PostUpdateRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-414">ASP.NET が、キャッシング モジュールの更新、およびキャッシュからの後続の要求の処理に使用する応答の格納を終了すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-414">Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-415"><xref:System.Web.HttpApplication.PostUpdateRequestCache>後にイベントを生成、<xref:System.Web.HttpApplication.UpdateRequestCache>イベントが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-415">The <xref:System.Web.HttpApplication.PostUpdateRequestCache> event is raised after the <xref:System.Web.HttpApplication.UpdateRequestCache> event has occurred.</span></span> <span data-ttu-id="ddc17-416">ときに、<xref:System.Web.HttpApplication.PostUpdateRequestCache>が発生すると、ASP.NET が処理コードを完了し、キャッシュの内容を確定します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-416">When the <xref:System.Web.HttpApplication.PostUpdateRequestCache> is raised, ASP.NET has completed processing code and the content of the cache is finalized.</span></span>  
  
 <span data-ttu-id="ddc17-417">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-417">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.UpdateRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="PreRequestHandlerExecute">
      <MemberSignature Language="C#" Value="public event EventHandler PreRequestHandlerExecute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRequestHandlerExecute" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreRequestHandlerExecute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRequestHandlerExecute As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRequestHandlerExecute;" />
      <MemberSignature Language="F#" Value="member this.PreRequestHandlerExecute : EventHandler " Usage="member this.PreRequestHandlerExecute : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-418">ASP.NET がイベント ハンドラー (ページ、XML Web サービスなど) の実行を開始する直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-418">Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-419">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-419">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" />
      </Docs>
    </Member>
    <Member MemberName="PreSendRequestContent">
      <MemberSignature Language="C#" Value="public event EventHandler PreSendRequestContent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreSendRequestContent" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreSendRequestContent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreSendRequestContent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreSendRequestContent;" />
      <MemberSignature Language="F#" Value="member this.PreSendRequestContent : EventHandler " Usage="member this.PreSendRequestContent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-420">ASP.NET がコンテンツをクライアントに送信する直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-420">Occurs just before ASP.NET sends content to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-421"><xref:System.Web.HttpApplication.PreSendRequestContent>イベントが複数回出現する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ddc17-421">The <xref:System.Web.HttpApplication.PreSendRequestContent> event may occur multiple times.</span></span>  
  
 <span data-ttu-id="ddc17-422">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-422">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
 > [!WARNING]
 > <span data-ttu-id="ddc17-423">使用しないでください`PreSendRequestContent`を実装するマネージ モジュールで`IHttpModule`です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-423">Do not use `PreSendRequestContent` with managed modules that implement `IHttpModule`.</span></span> <span data-ttu-id="ddc17-424">これらのプロパティを設定すると、非同期要求で問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-424">Setting these properties can cause issues with asynchronous requests.</span></span> <span data-ttu-id="ddc17-425">アプリケーション要求ルーティング処理 (ARR) と websocket の組み合わせが例外が発生するアクセス違反 w3wp クラッシュする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ddc17-425">The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</span></span> <span data-ttu-id="ddc17-426">たとえば、iiscore!W3_CONTEXT_BASE::GetIsLastNotification + 68 iiscore.dll でアクセス違反例外 (0xC0000005) が発生しました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-426">For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</span></span>
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreSendRequestHeaders" />
      </Docs>
    </Member>
    <Member MemberName="PreSendRequestHeaders">
      <MemberSignature Language="C#" Value="public event EventHandler PreSendRequestHeaders;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreSendRequestHeaders" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.PreSendRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreSendRequestHeaders As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreSendRequestHeaders;" />
      <MemberSignature Language="F#" Value="member this.PreSendRequestHeaders : EventHandler " Usage="member this.PreSendRequestHeaders : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-427">ASP.NET が HTTP ヘッダーをクライアントに送信する直前に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-427">Occurs just before ASP.NET sends HTTP headers to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-428">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-428">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
 > [!WARNING]
 > <span data-ttu-id="ddc17-429">使用しないでください`PreSendRequestHeaders`を実装するマネージ モジュールで`IHttpModule`です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-429">Do not use `PreSendRequestHeaders` with managed modules that implement `IHttpModule`.</span></span> <span data-ttu-id="ddc17-430">これらのプロパティを設定すると、非同期要求で問題が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-430">Setting these properties can cause issues with asynchronous requests.</span></span> <span data-ttu-id="ddc17-431">アプリケーション要求ルーティング処理 (ARR) と websocket の組み合わせが例外が発生するアクセス違反 w3wp クラッシュする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ddc17-431">The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</span></span> <span data-ttu-id="ddc17-432">たとえば、iiscore!W3_CONTEXT_BASE::GetIsLastNotification + 68 iiscore.dll でアクセス違反例外 (0xC0000005) が発生しました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-432">For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</span></span>
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PreSendRequestContent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterModule">
      <MemberSignature Language="C#" Value="public static void RegisterModule (Type moduleType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterModule(class System.Type moduleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.RegisterModule(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterModule (moduleType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterModule(Type ^ moduleType);" />
      <MemberSignature Language="F#" Value="static member RegisterModule : Type -&gt; unit" Usage="System.Web.HttpApplication.RegisterModule moduleType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="moduleType">
          <span data-ttu-id="ddc17-433">モジュールの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-433">The type of the module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-434">アプリケーション モジュールを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-434">Registers an application module.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseRequestState">
      <MemberSignature Language="C#" Value="public event EventHandler ReleaseRequestState;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReleaseRequestState" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.ReleaseRequestState" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReleaseRequestState As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReleaseRequestState;" />
      <MemberSignature Language="F#" Value="member this.ReleaseRequestState : EventHandler " Usage="member this.ReleaseRequestState : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-435">ASP.NET がすべての要求イベント ハンドラーの実行を終了すると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-435">Occurs after ASP.NET finishes executing all request event handlers.</span>
          </span>
          <span data-ttu-id="ddc17-436">このイベントが発生すると、状態モジュールが現在の状態データを保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-436">This event causes state modules to save the current state data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-437">ときに、<xref:System.Web.HttpApplication.ReleaseRequestState>イベントは、要求には、アプリケーションを終了してください。 および ASP.NET が通知されると、要求の状態を格納します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-437">When the <xref:System.Web.HttpApplication.ReleaseRequestState> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.</span></span>  
  
 <span data-ttu-id="ddc17-438">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-438">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostReleaseRequestState" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Web.HttpRequest" Usage="System.Web.HttpApplication.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-439">現在の要求に関する組み込みの要求オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-439">Gets the intrinsic request object for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-440">アプリケーションが処理している <see cref="T:System.Web.HttpRequest" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-440">The <see cref="T:System.Web.HttpRequest" /> object that the application is processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ddc17-441">
            <see cref="T:System.Web.HttpRequest" /> オブジェクトが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-441">The <see cref="T:System.Web.HttpRequest" /> object is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RequestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler RequestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RequestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.RequestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RequestCompleted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RequestCompleted;" />
      <MemberSignature Language="F#" Value="member this.RequestCompleted : EventHandler " Usage="member this.RequestCompleted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-442">要求に関連付けられている管理オブジェクトが解放されたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-442">Occurs when the managed objects that are associated with the request have been released.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-443"><xref:System.Web.HttpApplication.RequestCompleted>イベントがすべてのマネージ モジュールの後に呼び出され、ASP.NET パイプライン内のハンドラーが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ddc17-443">The <xref:System.Web.HttpApplication.RequestCompleted> event is called after all managed modules and handlers in the ASP.NET pipeline have been called.</span></span> <span data-ttu-id="ddc17-444">すべてのマネージ モジュールとハンドラーの実行がリソースをクリーンアップするモジュールを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ddc17-444">It enables modules to clean up resources after all managed modules and handlers have executed.</span></span> <span data-ttu-id="ddc17-445">要求中に作成したマネージ リソースを明示的に破棄する特定の時刻を必要とする場合は、このイベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-445">Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler ResolveRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResolveRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.ResolveRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResolveRequestCache;" />
      <MemberSignature Language="F#" Value="member this.ResolveRequestCache : EventHandler " Usage="member this.ResolveRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-446">イベント ハンドラー (ページまたは Web サービスなど) の実行を省略してキャッシング モジュールでキャッシュからの要求を処理できるようにするために、ASP.NET が承認イベントを完了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-446">Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-447">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-447">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.PostResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Web.HttpResponse" Usage="System.Web.HttpApplication.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-448">現在の要求に関する組み込みの応答オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-448">Gets the intrinsic response object for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-449">アプリケーションが処理している <see cref="T:System.Web.HttpResponse" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-449">The <see cref="T:System.Web.HttpResponse" /> object that the application is processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ddc17-450">
            <see cref="T:System.Web.HttpResponse" /> オブジェクトが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-450">The <see cref="T:System.Web.HttpResponse" /> object is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.HttpApplication.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-451">現在の要求に関する組み込みのサーバー オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-451">Gets the intrinsic server object for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-452">アプリケーションが処理している <see cref="T:System.Web.HttpServerUtility" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-452">The <see cref="T:System.Web.HttpServerUtility" /> object that the application is processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.HttpApplication.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-453">セッション データへのアクセスを実現する組み込みのセッション オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-453">Gets the intrinsic session object that provides access to session data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-454">現在のセッションに対する <see cref="T:System.Web.SessionState.HttpSessionState" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-454">The <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current session.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ddc17-455">
            <see cref="T:System.Web.SessionState.HttpSessionState" /> オブジェクトが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-455">The <see cref="T:System.Web.SessionState.HttpSessionState" /> object is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Web.HttpApplication.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-456">
            <see cref="T:System.ComponentModel.IComponent" /> の実装に対するサイト インターフェイスを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-456">Gets or sets a site interface for an <see cref="T:System.ComponentModel.IComponent" /> implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-457">コンテナーで子コンポーネントを管理したり、子コンポーネントと通信したりできるようにする <see cref="T:System.ComponentModel.ISite" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-457">An <see cref="T:System.ComponentModel.ISite" /> object that allows a container to manage and communicate with its child components.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.BeginProcessRequest">
      <MemberSignature Language="C#" Value="IAsyncResult IHttpAsyncHandler.BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IAsyncResult System.Web.IHttpAsyncHandler.BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function BeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult Implements IHttpAsyncHandler.BeginProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual IAsyncResult ^ System.Web.IHttpAsyncHandler.BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData) = System::Web::IHttpAsyncHandler::BeginProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ddc17-458">HTTP 要求を処理するために使用される組み込みサーバー オブジェクトへの参照を提供する <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-458">An <see cref="T:System.Web.HttpContext" /> that provides references to intrinsic server objects that are used to service HTTP requests.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="ddc17-459">非同期メソッドの呼び出しの完了時に呼び出す <see cref="T:System.AsyncCallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-459">The <see cref="T:System.AsyncCallback" /> to call when the asynchronous method call is complete.</span>
          </span>
          <span data-ttu-id="ddc17-460">
            <c> cb </c> パラメーターが <see langword="null" /> の場合、デリゲートは呼び出されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-460">If the <c>cb</c> parameter is <see langword="null" />, the delegate is not called.</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="ddc17-461">要求を処理するために必要な追加データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-461">Any extra data that is required to process the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-462">HTTP イベント ハンドラーの非同期の呼び出しを開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-462">Initiates an asynchronous call to the HTTP event handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ddc17-463">プロセスの状態に関する情報を格納している <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-463">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.EndProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpAsyncHandler.EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpAsyncHandler.EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Sub EndProcessRequest (result As IAsyncResult) Implements IHttpAsyncHandler.EndProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult ^ result) = System::Web::IHttpAsyncHandler::EndProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="ddc17-464">プロセスの状態に関する情報を格納している <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-464">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-465">処理の終了時に、非同期処理の <see langword="End" /> メソッドを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-465">Provides an asynchronous process <see langword="End" /> method when the process finishes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-466">使用することができます、<xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A>では、非同期処理中に検出した例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="ddc17-466">You can use the <xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A> method to raise any exceptions that are caught during the asynchronous process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.IsReusable">
      <MemberSignature Language="C#" Value="bool System.Web.IHttpHandler.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReusable As Boolean Implements IHttpHandler.IsReusable" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.IHttpHandler.IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-467">別の要求で <see cref="T:System.Web.IHttpHandler" /> オブジェクトを使用できるかどうかを示す <see langword="Boolean" /> 値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-467">Gets a <see langword="Boolean" /> value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-468">
            <see cref="T:System.Web.IHttpHandler" /> オブジェクトが再利用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-468">
              <see langword="true" /> if the <see cref="T:System.Web.IHttpHandler" /> object is reusable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-469">明示的に設定する、`IsReusable`プロパティを`true`または`false`をオーバーライドするコードを提供、`IsReusable`プロパティ アクセサー。</span><span class="sxs-lookup"><span data-stu-id="ddc17-469">To explicitly set the `IsReusable` property to `true` or `false`, provide code that overrides the `IsReusable` property accessor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.ProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpHandler.ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpHandler.ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ProcessRequest (context As HttpContext) Implements IHttpHandler.ProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpHandler.ProcessRequest(System::Web::HttpContext ^ context) = System::Web::IHttpHandler::ProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ddc17-470">HTTP 要求を処理するために使用される組み込みサーバー オブジェクトへの参照を提供する <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-470">An <see cref="T:System.Web.HttpContext" /> that provides references to the intrinsic server objects that are used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ddc17-471">
            <see cref="T:System.Web.IHttpHandler" /> インターフェイスを実装するカスタム HTTP ハンドラーによって、HTTP Web 要求の処理を有効にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-471">Enables processing of HTTP Web requests by a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-472">継承するクラス、<xref:System.Web.IHttpModule>と<xref:System.Web.IHttpHandler>への参照として提供するインターフェイス、<xref:System.Web.HttpContext>の現在の HTTP 要求オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ddc17-472">Classes that inherit the <xref:System.Web.IHttpModule> and <xref:System.Web.IHttpHandler> interfaces are provided as a reference to an <xref:System.Web.HttpContext> object for the current HTTP request.</span></span> <span data-ttu-id="ddc17-473">このオブジェクトが、組み込みへのアクセスを提供`Request`、 `Response`、および`Server`要求のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ddc17-473">The object provides access to the intrinsic `Request`, `Response`, and `Server` objects for the request.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ddc17-474">すべての場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-474">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateRequestCache">
      <MemberSignature Language="C#" Value="public event EventHandler UpdateRequestCache;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler UpdateRequestCache" />
      <MemberSignature Language="DocId" Value="E:System.Web.HttpApplication.UpdateRequestCache" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateRequestCache As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ UpdateRequestCache;" />
      <MemberSignature Language="F#" Value="member this.UpdateRequestCache : EventHandler " Usage="member this.UpdateRequestCache : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-475">キャッシュからの後続の要求を処理するために使用する応答をキャッシング モジュールで格納できるようにするために、ASP.NET がイベント ハンドラーの実行を完了したときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-475">Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ddc17-476">イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="ddc17-476">For more information about how to handle events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.HttpApplication.ResolveRequestCache" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplication.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.HttpApplication.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ddc17-477">現在の要求に関する組み込みのユーザー オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-477">Gets the intrinsic user object for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ddc17-478">現在の認証ユーザーまたは匿名ユーザーを表す <see cref="T:System.Security.Principal.IPrincipal" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-478">The <see cref="T:System.Security.Principal.IPrincipal" /> object that represents the current authenticated or anonymous user.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ddc17-479">
            <see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ddc17-479">The <see cref="T:System.Security.Principal.IPrincipal" /> object is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>