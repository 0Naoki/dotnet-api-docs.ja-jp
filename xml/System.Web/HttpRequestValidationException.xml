<Type Name="HttpRequestValidationException" FullName="System.Web.HttpRequestValidationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c51581d4e05d28ce6009bbb653e45129dc4de797" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51886974" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequestValidationException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpRequestValidationException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestValidationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestValidationException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestValidationException sealed : System::Web::HttpException" />
  <TypeSignature Language="F#" Value="type HttpRequestValidationException = class&#xA;    inherit HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="99bf0-101">要求データの一部としてクライアントから受信した入力文字列に危険性が高い文字列が含まれている場合にスローされる例外。</span>
      <span class="sxs-lookup">
        <span data-stu-id="99bf0-101">The exception that is thrown when a potentially malicious input string is received from the client as part of the request data.</span>
      </span>
      <span data-ttu-id="99bf0-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="99bf0-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99bf0-103">制約と、ユーザー入力の検証を悪意のある入力文字列に依存するハッカーの攻撃を防ぐために Web アプリケーションで不可欠です。</span><span class="sxs-lookup"><span data-stu-id="99bf0-103">Constraining and validating user input is essential in a Web application to prevent hacker attacks that rely on malicious input strings.</span></span> <span data-ttu-id="99bf0-104">クロスサイト スクリプティング攻撃は、このようなハッキングの 1 つの例です。</span><span class="sxs-lookup"><span data-stu-id="99bf0-104">Cross-site scripting attacks are one example of such hacks.</span></span> <span data-ttu-id="99bf0-105">他の種類の悪意のあるまたは望ましくないデータは、さまざまな形式での入力を要求で渡すことが。</span><span class="sxs-lookup"><span data-stu-id="99bf0-105">Other types of malicious or undesired data can be passed in a request through various forms of input.</span></span> <span data-ttu-id="99bf0-106">アプリケーションでの低レベルで渡されるデータの種類を制限することで、コードを使用するプログラマは場所に適切な検証方法を配置しない場合でも、望ましくないイベントを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="99bf0-106">By limiting the kinds of data that is passed at a low level in an application, you can prevent undesirable events, even when programmers who are using your code do not put the proper validation techniques in place.</span></span>  
  
 <span data-ttu-id="99bf0-107">要求の検証は、可能性のある悪意のあるクライアントの入力を検出し、要求の処理を中止するには、この例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="99bf0-107">Request validation detects potentially malicious client input and throws this exception to abort processing of the request.</span></span> <span data-ttu-id="99bf0-108">要求の中止は、クロスサイト スクリプティング攻撃などのアプリケーションのセキュリティを侵害する試行を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="99bf0-108">A request abort can indicate an attempt to compromise the security of your application, such as a cross-site scripting attack.</span></span> <span data-ttu-id="99bf0-109">アプリケーションが要求の中止に関するすべての入力を明示的にチェックすることを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="99bf0-109">It is strongly recommended that your application explicitly check all input regarding request aborts.</span></span> <span data-ttu-id="99bf0-110">ただし、要求の検証を無効に設定してできます、`validateRequest`するディレクティブ属性`false`次の例のように。</span><span class="sxs-lookup"><span data-stu-id="99bf0-110">However, you can disable request validation by setting the `validateRequest` attribute in the  directive to `false`, as shown in the following example:</span></span>  
  
 `<%@ Page validateRequest="false" %>`  
  
 <span data-ttu-id="99bf0-111">を、アプリケーションの要求の検証を無効にするには、変更またはセット、アプリケーションの Web.config ファイルを作成する必要があります、`validateRequest`の属性、`pages`セクション`false`次の例のように。</span><span class="sxs-lookup"><span data-stu-id="99bf0-111">To disable request validation for your application, you must modify or create a Web.config file for your application and set the `validateRequest` attribute of the `pages` section to `false`, as shown in the following example:</span></span>  
  
```  
<configuration>   
  <system.web>   
    <pages validateRequest="false" />   
  </system.web>   
</configuration>   
```  
  
 <span data-ttu-id="99bf0-112">サーバー上のすべてのアプリケーションの要求の検証を無効にするには、Machine.config ファイルには、この変更を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="99bf0-112">To disable request validation for all applications on your server, you can make this modification to the Machine.config file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99bf0-113">アプリケーションが ASP.NET によって実行される要求の検証だけでなくすべての入力を明示的にチェックすることを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="99bf0-113">It is strongly recommended that your application explicitly check all inputs it uses in addition to the request validation performed by ASP.NET.</span></span> <span data-ttu-id="99bf0-114">要求の検証機能は、すべてをキャッチできません攻撃、具体的には、アプリケーション ロジックに対して作成されたものでは特にです。</span><span class="sxs-lookup"><span data-stu-id="99bf0-114">The request validation feature cannot catch all attacks, especially those crafted specifically against your application logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99bf0-115">次のコード例に示しますを使用して悪意のあるユーザーの入力を確認する方法、<xref:System.Web.HttpRequestValidationException>します。</span><span class="sxs-lookup"><span data-stu-id="99bf0-115">The following code example demonstrates how to check for malicious user input by using an <xref:System.Web.HttpRequestValidationException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99bf0-116">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="99bf0-116">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="99bf0-117">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="99bf0-117">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="99bf0-118">詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99bf0-118">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpRequestValidationException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpRequestValidationException/CS/httprequestvalidationexception_cs.aspx#1)]
 [!code-aspx-vb[HttpRequestValidationException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpRequestValidationException/VB/HttpRequestValidationException_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="99bf0-119">オーバーロードされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99bf0-119">Overloaded.</span>
          </span>
          <span data-ttu-id="99bf0-120">
            <see cref="T:System.Web.HttpRequestValidationException" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99bf0-120">Creates a new instance of the <see cref="T:System.Web.HttpRequestValidationException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99bf0-121">
            <see cref="T:System.Web.HttpRequestValidationException" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99bf0-121">Creates a new instance of the <see cref="T:System.Web.HttpRequestValidationException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="99bf0-122">エラーを説明する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99bf0-122">A string that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99bf0-123">指定したエラー メッセージを使用して、新しい <see cref="T:System.Web.HttpRequestValidationException" /> 例外を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99bf0-123">Creates a new <see cref="T:System.Web.HttpRequestValidationException" /> exception with the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99bf0-124">コンテンツ、`message`パラメーターは、人間が判読できます。</span><span class="sxs-lookup"><span data-stu-id="99bf0-124">The content of the `message` parameter is intended to be human readable.</span></span> <span data-ttu-id="99bf0-125">呼び出し元、<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29>コンス トラクターがいることを確認するために必要な`message`文字列はローカライズされています。</span><span class="sxs-lookup"><span data-stu-id="99bf0-125">The caller of the <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29> constructor is required to ensure that the `message` string has been localized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string * Exception -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="99bf0-126">例外の原因を説明するエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99bf0-126">An error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="99bf0-127">現在の例外の原因となった例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99bf0-127">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="99bf0-128">このパラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99bf0-128">If this parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99bf0-129">指定したエラー メッセージと、例外の原因である内部例外への参照を使用して、<see cref="T:System.Web.HttpRequestValidationException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99bf0-129">Initializes a new instance of the <see cref="T:System.Web.HttpRequestValidationException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99bf0-130">前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照が格納されます。</span><span class="sxs-lookup"><span data-stu-id="99bf0-130">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="99bf0-131"><xref:System.Exception.InnerException%2A>プロパティに渡される同じ値を返します、<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>コンス トラクター、または`null`場合、<xref:System.Exception.InnerException%2A>プロパティに内部例外値を指定していない、<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="99bf0-131">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>