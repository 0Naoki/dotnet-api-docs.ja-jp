<Type Name="HttpPostedFile" FullName="System.Web.HttpPostedFile">
  <TypeSignature Language="C#" Value="public sealed class HttpPostedFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpPostedFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpPostedFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpPostedFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostedFile sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="db76d-101">クライアントによってアップロードされた個別のファイルにアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="db76d-101">Provides access to individual files that have been uploaded by a client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db76d-102"><xref:System.Web.HttpFileCollection>クラスは、ファイル コレクションとしてクライアントからアップロードされたすべてのファイルへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="db76d-102">The <xref:System.Web.HttpFileCollection> class provides access to all the files that are uploaded from a client as a file collection.</span></span> <span data-ttu-id="db76d-103"><xref:System.Web.HttpPostedFile>クラスには、プロパティと個々 のファイルに関する情報を取得および読み取りし、ファイルを保存するメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="db76d-103">The <xref:System.Web.HttpPostedFile> class provides properties and methods to get information about an individual file and to read and save the file.</span></span>  
  
 <span data-ttu-id="db76d-104"><xref:System.Web.UI.HtmlControls.HtmlInputFile>を選択し、クライアントからファイルをアップロード コントロールを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="db76d-104">The <xref:System.Web.UI.HtmlControls.HtmlInputFile> control can be used to select and upload files from a client.</span></span>  
  
 <span data-ttu-id="db76d-105">ファイルは、MIME マルチパート フォーム データの形式でアップロードされます。</span><span class="sxs-lookup"><span data-stu-id="db76d-105">Files are uploaded in MIME multipart/form-data format.</span></span> <span data-ttu-id="db76d-106">既定では、256 KB より大きいファイルのアップロードやフォーム フィールドを含む、すべての要求は、ディスクにバッファリングではなくサーバーのメモリ内に保持します。</span><span class="sxs-lookup"><span data-stu-id="db76d-106">By default, all requests, including form fields and uploaded files, larger than 256 KB are buffered to disk, rather than held in server memory.</span></span>  
  
 <span data-ttu-id="db76d-107">アクセスして使用可能な要求の最大サイズを指定することができます、<xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A>プロパティかを設定して、`maxRequestLength`の属性、 [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)は Machine.config または Web.config ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="db76d-107">You can specify the maximum allowable request size by accessing the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> property or by setting the `maxRequestLength` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element within the Machine.config or Web.config file.</span></span> <span data-ttu-id="db76d-108">既定値は、4 MB です。</span><span class="sxs-lookup"><span data-stu-id="db76d-108">The default is 4 MB.</span></span>  
  
 <span data-ttu-id="db76d-109">アクセスして、ファイルのアップロードが含まれた要求のサーバー メモリにバッファーされるデータの量を指定することができます、<xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A>プロパティかを設定して、`requestLengthDiskThreshold`の属性、 [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)は Machine.config または Web.config ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="db76d-109">The amount of data that is buffered in server memory for a request, which includes file uploads, can be specified by accessing the <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> property or by setting the `requestLengthDiskThreshold` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element within the Machine.config or Web.config file.</span></span>  
  
 <span data-ttu-id="db76d-110">調整することによって、<xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A>と<xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A>プロパティをサーバーのパフォーマンスを微調整できます。</span><span class="sxs-lookup"><span data-stu-id="db76d-110">By adjusting the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> and <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> properties, you can fine tune the performance of your server.</span></span> <span data-ttu-id="db76d-111">また、設定を検討する必要があります、<xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A>拒否大きなファイルをサーバーにポストするユーザーによるサービス拒否攻撃の防止にします。</span><span class="sxs-lookup"><span data-stu-id="db76d-111">Additionally, you should consider setting the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> to prevent denial of service attacks caused by users posting large files to the server.</span></span>  
  
 <span data-ttu-id="db76d-112">アップロードされたファイルをバッファーに割り当てられているサーバーのリソースは、要求の終了時に破棄されます。</span><span class="sxs-lookup"><span data-stu-id="db76d-112">Server resources that are allocated to buffer the uploaded file will be destroyed when the request ends.</span></span> <span data-ttu-id="db76d-113">ファイルの永続的なコピーを保存するには、<xref:System.Web.HttpPostedFile.SaveAs%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="db76d-113">To save a durable copy of the file, use the <xref:System.Web.HttpPostedFile.SaveAs%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />
    <altmember cref="T:System.Web.HttpFileCollection" />
  </Docs>
  <Members>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db76d-114">バイト単位でアップロードされたファイルのサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="db76d-114">Gets the size of an uploaded file, in bytes.</span></span></summary>
        <value><span data-ttu-id="db76d-115">バイト単位のファイル長。</span><span class="sxs-lookup"><span data-stu-id="db76d-115">The file length, in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db76d-116">クライアントから送信されたファイルの MIME コンテンツ タイプを取得します。</span><span class="sxs-lookup"><span data-stu-id="db76d-116">Gets the MIME content type of a file sent by a client.</span></span></summary>
        <value><span data-ttu-id="db76d-117">アップロードされるファイルの MIME コンテンツ タイプ。</span><span class="sxs-lookup"><span data-stu-id="db76d-117">The MIME content type of the uploaded file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db76d-118">次のコード例は、アップロードされたファイルのコレクション内のすべてのファイルをループし、ファイルの MIME の種類がアクションを実行する方法を示しています。`US-ASCII`です。</span><span class="sxs-lookup"><span data-stu-id="db76d-118">The following code example shows how to loop through all the files in the uploaded file collection and take action when the MIME type of a file is `US-ASCII`.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.FileName" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db76d-119">クライアント上のファイルの完全修飾名を取得します。</span><span class="sxs-lookup"><span data-stu-id="db76d-119">Gets the fully qualified name of the file on the client.</span></span></summary>
        <value><span data-ttu-id="db76d-120">クライアントのファイルの、ディレクトリ パスを含めたパス。</span><span class="sxs-lookup"><span data-stu-id="db76d-120">The name of the client's file, including the directory path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db76d-121">次のコード例では、文字列変数にアップロードされたファイル (ファイル コレクションの最初のファイル) の名前を割り当てる方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db76d-121">The following code example demonstrates how to assign the name of an uploaded file (the first file in the file collection) to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db76d-122">アップロードされたファイルを示す <see cref="T:System.IO.Stream" /> オブジェクトを取得し、そのファイルの内容を読み取る準備をします。</span><span class="sxs-lookup"><span data-stu-id="db76d-122">Gets a <see cref="T:System.IO.Stream" /> object that points to an uploaded file to prepare for reading the contents of the file.</span></span></summary>
        <value><span data-ttu-id="db76d-123">ファイルを示す <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="db76d-123">A <see cref="T:System.IO.Stream" /> pointing to a file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="db76d-124">次のコード例では、バイト配列に、クライアントのファイル コレクションの最初のファイルの内容を読み取るし、文字列をバイト配列をコピーする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db76d-124">The following code example shows how to read the contents of the first file in the client's file collection into a byte array, and then copy the byte array to a string.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpPostedFile.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="db76d-125">保存されたファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="db76d-125">The name of the saved file.</span></span></param>
        <summary><span data-ttu-id="db76d-126">アップロードされたファイルの内容を保存します。</span><span class="sxs-lookup"><span data-stu-id="db76d-126">Saves the contents of an uploaded file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db76d-127">アップロードされたファイルが含まれている要求の最大サイズは、既定では、4 MB です。</span><span class="sxs-lookup"><span data-stu-id="db76d-127">The maximum size allowed for a request, which includes uploaded files, is 4 MB, by default.</span></span> <span data-ttu-id="db76d-128">Machine.config または Web.config ファイルで要求の最大サイズを指定することができます、`maxRequestLength`の属性、 [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)要素。</span><span class="sxs-lookup"><span data-stu-id="db76d-128">Maximum request size can be specified in the Machine.config or Web.config file in the `maxRequestLength` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element.</span></span> <span data-ttu-id="db76d-129">使用して、特定のページの要求の最大サイズを指定することができます、[場所要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) Web.config ファイル内の要素。</span><span class="sxs-lookup"><span data-stu-id="db76d-129">The maximum request size for a specific page can be specified using the [location Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) element in a Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db76d-130">次のコード例では、Web サーバーのローカル ディスク上の C:\TempFiles フォルダーに、クライアントによってアップロードされたすべてのファイルを保存する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db76d-130">The following code example demonstrates how to save all the files that are uploaded by the client to the C:\TempFiles folder on the Web server's local disk.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="db76d-131"><see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> オブジェクトの <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> プロパティが <see langword="true" /> に設定されていますが、<paramref name="filename" /> が絶対パスではありません。</span><span class="sxs-lookup"><span data-stu-id="db76d-131">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> object is set to <see langword="true" />, but <paramref name="filename" /> is not an absolute path.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>