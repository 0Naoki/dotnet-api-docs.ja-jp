<Type Name="DefaultHttpHandler" FullName="System.Web.DefaultHttpHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3ae51d18f50d031db15fc74c22836ad06f02cbb" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52212373" /></Metadata><TypeSignature Language="C#" Value="public class DefaultHttpHandler : System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHttpHandler extends System.Object implements class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.DefaultHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultHttpHandler&#xA;Implements IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultHttpHandler : System::Web::IHttpAsyncHandler" />
  <TypeSignature Language="F#" Value="type DefaultHttpHandler = class&#xA;    interface IHttpAsyncHandler&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3c962-101">既定の HTTP ハンドラーのプロパティとメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="3c962-101">Represents the properties and methods of a default HTTP handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c962-102">A<xref:System.Web.DefaultHttpHandler>オブジェクトは両方が要求のインターセプトにインターネット インフォメーション サービス (IIS) 6.0 が構成され、要求された拡張機能に明示的なバインドが適用されないときに、HTTP パイプラインで受信要求をインターセプトします。</span><span class="sxs-lookup"><span data-stu-id="3c962-102">A <xref:System.Web.DefaultHttpHandler> object intercepts incoming requests in the HTTP pipeline when both request interception has been configured through Internet Information Services (IIS) 6.0 and no explicit  bindings apply to the requested extension.</span></span>  
  
 <span data-ttu-id="3c962-103">要求のインターセプトは、IIS 6.0 で導入された、ワイルドカード アプリケーションのマッピング機能を設定できます。</span><span class="sxs-lookup"><span data-stu-id="3c962-103">Request interception can be set up through the wildcard application mapping feature introduced in IIS 6.0.</span></span> <span data-ttu-id="3c962-104">詳細については、検索、 [MSDN ライブラリ](https://go.microsoft.com/fwlink/?linkid=37118)ワイルドカード アプリケーション マップを使用して URL を再マップする方法についてはします。</span><span class="sxs-lookup"><span data-stu-id="3c962-104">For more information, search the [MSDN Library](https://go.microsoft.com/fwlink/?linkid=37118) for information about using wildcard application maps to remap a URL.</span></span>  
  
 <span data-ttu-id="3c962-105"><xref:System.Web.DefaultHttpHandler>クラスが実装する、<xref:System.Web.IHttpAsyncHandler>非同期要求処理を提供するインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="3c962-105">The <xref:System.Web.DefaultHttpHandler> class implements the <xref:System.Web.IHttpAsyncHandler> interface to provide asynchronous request processing.</span></span> <span data-ttu-id="3c962-106">HTTP ハンドラーについては、次を参照してください。 [HTTP ハンドラーと HTTP モジュールの概要](https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b)します。</span><span class="sxs-lookup"><span data-stu-id="3c962-106">For general information about HTTP handlers, see [HTTP Handlers and HTTP Modules Overview](https://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span></span> <span data-ttu-id="3c962-107">さらに、詳細については、次のように表示します。</span><span class="sxs-lookup"><span data-stu-id="3c962-107">Additionally, for more information see the following:</span></span>  
  
-   <span data-ttu-id="3c962-108">非同期 HTTP ハンドラーを作成するには、次を参照してください。[チュートリアル: 非同期 HTTP ハンドラーを作成する](https://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9)します。</span><span class="sxs-lookup"><span data-stu-id="3c962-108">About creating asynchronous HTTP handlers, see [Walkthrough: Creating an Asynchronous HTTP Handler](https://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9).</span></span>  
  
-   <span data-ttu-id="3c962-109">HTTP ハンドラーを登録するには、詳細については、次を参照してください。[方法: HTTP ハンドラーの登録](https://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)します。</span><span class="sxs-lookup"><span data-stu-id="3c962-109">About registering HTTP handlers, see [How to: Register HTTP Handlers](https://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span></span>  
  
 <span data-ttu-id="3c962-110">クラスが、<xref:System.Web.DefaultHttpHandler>要求のカスタマイズされた処理を提供するクラス。</span><span class="sxs-lookup"><span data-stu-id="3c962-110">Classes can derive from the <xref:System.Web.DefaultHttpHandler> class to provide customized handling of requests.</span></span> <span data-ttu-id="3c962-111">派生した非同期 HTTP ハンドラー、<xref:System.Web.DefaultHttpHandler>オーバーライド、<xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>メソッド要求の処理方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="3c962-111">An asynchronous HTTP handler that is derived from the <xref:System.Web.DefaultHttpHandler> could override the <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> method to change how requests are processed.</span></span>  
  
 <span data-ttu-id="3c962-112">A <xref:System.Web.DefaultHttpHandler> ASP.NET エラーを使用しません。</span><span class="sxs-lookup"><span data-stu-id="3c962-112">A <xref:System.Web.DefaultHttpHandler> does not use ASP.NET errors.</span></span> <span data-ttu-id="3c962-113">既存のコンテンツまたは IIS エラーを使用する、こうした ISAPI のカスタム エラー メカニズムは変更なしで動作します。</span><span class="sxs-lookup"><span data-stu-id="3c962-113">Existing content that uses IIS errors or a propriety ISAPI custom error mechanism would work unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c962-114">次のコード例から派生することによってカスタマイズされた HTTP ハンドラーを実装する方法を示します、<xref:System.Web.DefaultHttpHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="3c962-114">The following code example demonstrates how to implement a customized HTTP handler by deriving from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 [!code-csharp[System.Web.DefaultHttpHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/CS/source.cs#1)]
 [!code-vb[System.Web.DefaultHttpHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60"><span data-ttu-id="3c962-115">方法: HTTP ハンドラーの登録</span><span class="sxs-lookup"><span data-stu-id="3c962-115">How to: Register HTTP Handlers</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9"><span data-ttu-id="3c962-116">方法: 非同期 HTTP ハンドラーの作成</span><span class="sxs-lookup"><span data-stu-id="3c962-116">How to: Create an Asynchronous HTTP Handler</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHttpHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultHttpHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c962-117"><see cref="T:System.Web.DefaultHttpHandler" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3c962-117">Initializes a new instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessRequest">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginProcessRequest (context As HttpContext, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult" Usage="defaultHttpHandler.BeginProcessRequest (context, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="3c962-118">HTTP 要求を処理するために使用される組み込みサーバー オブジェクトへの参照を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3c962-118">An object that provides references to intrinsic server objects that are used to service HTTP requests.</span></span></param>
        <param name="callback"><span data-ttu-id="3c962-119">非同期メソッド呼び出しの完了時に呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="3c962-119">The method to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="3c962-120"><paramref name="callback" /> が <see langword="null" /> の場合、このデリゲートは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="3c962-120">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="state"><span data-ttu-id="3c962-121">要求を処理するために必要な状態データ。</span><span class="sxs-lookup"><span data-stu-id="3c962-121">Any state data that is needed to process the request.</span></span></param>
        <summary><span data-ttu-id="3c962-122">HTTP ハンドラーの非同期の呼び出しを開始します。</span><span class="sxs-lookup"><span data-stu-id="3c962-122">Initiates an asynchronous call to the HTTP handler.</span></span></summary>
        <returns><span data-ttu-id="3c962-123">プロセスの状態に関する情報を格納している <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="3c962-123">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c962-124">非同期に使用する HTTP ハンドラーを作成するときに、非同期ハンドラーを実装する必要が<xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>と<xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>ASP.NET によって非同期的に呼び出されるメソッド。</span><span class="sxs-lookup"><span data-stu-id="3c962-124">When creating an HTTP handler for asynchronous use, your handler must implement the asynchronous <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> and <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> methods that are called asynchronously by ASP.NET.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="3c962-125">要求処理の実行前の状態がエラーです。要求されたファイルの拡張子が .asp であるか、または要求が POST を使用して送信されました。</span><span class="sxs-lookup"><span data-stu-id="3c962-125">The preconditions for processing a request fail and either the requested file has the suffix .asp or the request was sent through POST.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.DefaultHttpHandler.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c962-126">現在の <see cref="T:System.Web.DefaultHttpHandler" /> オブジェクトに関連付けられているコンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c962-126">Gets the context that is associated with the current <see cref="T:System.Web.DefaultHttpHandler" /> object.</span></span></summary>
        <value><span data-ttu-id="3c962-127">現在のコンテキストを格納している <see cref="T:System.Web.HttpContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3c962-127">An <see cref="T:System.Web.HttpContext" /> object that contains the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c962-128"><xref:System.Web.DefaultHttpHandler.Context%2A>プロパティは、現在のアクセスを提供します。<xref:System.Web.HttpContext>の派生クラスのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3c962-128">The <xref:System.Web.DefaultHttpHandler.Context%2A> property provides access to the current <xref:System.Web.HttpContext> object for derived classes.</span></span> <span data-ttu-id="3c962-129"><xref:System.Web.HttpContext>オブジェクトは、組み込みへのアクセスを提供<xref:System.Web.HttpApplication.Request%2A>、 <xref:System.Web.HttpApplication.Response%2A>、および<xref:System.Web.HttpApplication.Server%2A>要求のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="3c962-129">An <xref:System.Web.HttpContext> object provides access to the intrinsic <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, and <xref:System.Web.HttpApplication.Server%2A> properties for the request.</span></span> <span data-ttu-id="3c962-130">コンテキスト情報にアクセスする方法の詳細については、次を参照してください。<xref:System.Web.HttpContext>します。</span><span class="sxs-lookup"><span data-stu-id="3c962-130">For more information about accessing contextual information, see <xref:System.Web.HttpContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="EndProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndProcessRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndProcessRequest : IAsyncResult -&gt; unit&#xA;override this.EndProcessRequest : IAsyncResult -&gt; unit" Usage="defaultHttpHandler.EndProcessRequest result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="3c962-131">プロセスのステータスに関する情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3c962-131">An object that contains information about the status of the process.</span></span></param>
        <summary><span data-ttu-id="3c962-132">非同期処理の終了メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="3c962-132">Provides an end method for an asynchronous process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c962-133">使用することができます、<xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>は非同期処理中に検出したすべての例外をスローするメソッド。</span><span class="sxs-lookup"><span data-stu-id="3c962-133">You can use the <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> method to throw any exceptions that are caught during the asynchronous process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteUrlHeaders">
      <MemberSignature Language="C#" Value="protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ExecuteUrlHeaders As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Specialized::NameValueCollection ^ ExecuteUrlHeaders { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteUrlHeaders : System.Collections.Specialized.NameValueCollection" Usage="System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c962-134">要求と共に転送する要求ヘッダーと要求値のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c962-134">Gets a collection of request headers and request values to transfer along with the request.</span></span></summary>
        <value><span data-ttu-id="3c962-135">要求のヘッダーと値が格納された <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="3c962-135">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing request headers and values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c962-136"><xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A>から派生したクラスにそれが入力されていない限り、プロパティが空のコレクションを返します、<xref:System.Web.DefaultHttpHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="3c962-136">The <xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A> property returns an empty collection unless it is populated in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span> <span data-ttu-id="3c962-137">追加されるヘッダーは、バックアップにインターネット インフォメーション サービス (IIS) の要求を渡す前に、要求のヘッダーのコレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="3c962-137">The headers that are added are appended to the collection of headers in the request before passing the request back to Internet Information Services (IIS).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.DefaultHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c962-138"><see cref="T:System.Web.DefaultHttpHandler" /> クラスの現在のインスタンスを別の要求が使用できるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c962-138">Gets a Boolean value indicating that another request can use the current instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span></span></summary>
        <value><span data-ttu-id="3c962-139"><see cref="T:System.Web.DefaultHttpHandler" /> を再利用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c962-139"><see langword="true" /> if the <see cref="T:System.Web.DefaultHttpHandler" /> is reusable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c962-140">明示的に設定する、<xref:System.Web.DefaultHttpHandler.IsReusable%2A>プロパティを`true`または`false`、オーバーライド、<xref:System.Web.DefaultHttpHandler.IsReusable%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3c962-140">To explicitly set the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property to `true` or `false`, override the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="OnExecuteUrlPreconditionFailure">
      <MemberSignature Language="C#" Value="public virtual void OnExecuteUrlPreconditionFailure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExecuteUrlPreconditionFailure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExecuteUrlPreconditionFailure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExecuteUrlPreconditionFailure();" />
      <MemberSignature Language="F#" Value="abstract member OnExecuteUrlPreconditionFailure : unit -&gt; unit&#xA;override this.OnExecuteUrlPreconditionFailure : unit -&gt; unit" Usage="defaultHttpHandler.OnExecuteUrlPreconditionFailure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c962-141">実行前の状態が原因で <see cref="T:System.Web.DefaultHttpHandler" /> オブジェクトが要求を処理できない場合に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3c962-141">Called when preconditions prevent the <see cref="T:System.Web.DefaultHttpHandler" /> object from processing a request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c962-142">前提条件は、要求ヘッダー フィールドにクライアントによって指定され、Web サーバーで評価されます。</span><span class="sxs-lookup"><span data-stu-id="3c962-142">Preconditions are specified by the client in the request-header fields and are evaluated on the Web server.</span></span> <span data-ttu-id="3c962-143">たとえば、前提条件を使用すると、クライアント防止できます (たとえば、GET) 要求されたメソッド、1 つを意図したもの以外のリソースに適用されています。</span><span class="sxs-lookup"><span data-stu-id="3c962-143">For example, by using preconditions, clients can prevent a requested method (for example, GET) from being applied to a resource other than the one intended.</span></span> <span data-ttu-id="3c962-144">詳細については、14、「Header Field Definitions」セクションを参照してください、[ハイパー テキスト転送プロトコル--http/1.1](https://go.microsoft.com/fwlink/?LinkID=73147) World Wide Web Consortium (W3C) の Web サイトを指定します。</span><span class="sxs-lookup"><span data-stu-id="3c962-144">For more information, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](https://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
 <span data-ttu-id="3c962-145"><xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A>状態メソッドが呼び出された、<xref:System.Web.DefaultHttpHandler>オブジェクトが要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="3c962-145">The <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method is called when preconditions prevent the <xref:System.Web.DefaultHttpHandler> object from processing a request.</span></span> <span data-ttu-id="3c962-146">派生クラスの方が優先、<xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A>前提条件が失敗したときに例外をスローするメソッド。</span><span class="sxs-lookup"><span data-stu-id="3c962-146">A deriving class might override the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method to throw an exception when the preconditions fail.</span></span> <span data-ttu-id="3c962-147"><xref:System.Web.DefaultHttpHandler>例外をスローしませんが、<xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3c962-147">The <xref:System.Web.DefaultHttpHandler> does not throw an exception in the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method.</span></span>  
  
 <span data-ttu-id="3c962-148">前提条件が失敗する、次のいずれかが発生します。</span><span class="sxs-lookup"><span data-stu-id="3c962-148">Any of the following will cause the preconditions to fail:</span></span>  
  
-   <span data-ttu-id="3c962-149"><xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> の呼び出し</span><span class="sxs-lookup"><span data-stu-id="3c962-149">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3c962-150"><xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType> の呼び出し</span><span class="sxs-lookup"><span data-stu-id="3c962-150">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3c962-151"><xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType> の呼び出し</span><span class="sxs-lookup"><span data-stu-id="3c962-151">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3c962-152">応答のキャッシュ ポリシーを変更します。</span><span class="sxs-lookup"><span data-stu-id="3c962-152">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="3c962-153">追加、<xref:System.IO.Stream>オブジェクトをフィルターとして、<xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3c962-153">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideExecuteUrlPath">
      <MemberSignature Language="C#" Value="public virtual string OverrideExecuteUrlPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OverrideExecuteUrlPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OverrideExecuteUrlPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ OverrideExecuteUrlPath();" />
      <MemberSignature Language="F#" Value="abstract member OverrideExecuteUrlPath : unit -&gt; string&#xA;override this.OverrideExecuteUrlPath : unit -&gt; string" Usage="defaultHttpHandler.OverrideExecuteUrlPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c962-154">現在の要求の対象 URL をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="3c962-154">Overrides the target URL for the current request.</span></span></summary>
        <returns><span data-ttu-id="3c962-155">要求で使用するオーバーライドされた URL。オーバーライドされた URL が指定されない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c962-155">The overridden URL to use in the request; or <see langword="null" /> if an overridden URL is not provided.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c962-156"><xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A>メソッドを返します。`null`から派生したクラスでオーバーライドしない限り、<xref:System.Web.DefaultHttpHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="3c962-156">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method returns `null` unless it is overridden in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 <span data-ttu-id="3c962-157"><xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A>だけで、応答がなかった場合、ASP.NET が IIS 6.0 ワーカー プロセス分離モードで実行されている場合は、前に変更メソッドが呼び出される、<xref:System.Web.DefaultHttpHandler>オブジェクトが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="3c962-157">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method is called only if ASP.NET is running in worker process isolation mode on IIS 6.0, and if the response was not modified before the <xref:System.Web.DefaultHttpHandler> object was called.</span></span> <span data-ttu-id="3c962-158">応答は、次のいずれかに変更されます。</span><span class="sxs-lookup"><span data-stu-id="3c962-158">The response is modified by any of the following:</span></span>  
  
-   <span data-ttu-id="3c962-159"><xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType> の呼び出し</span><span class="sxs-lookup"><span data-stu-id="3c962-159">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3c962-160"><xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType> の呼び出し</span><span class="sxs-lookup"><span data-stu-id="3c962-160">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3c962-161"><xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType> の呼び出し</span><span class="sxs-lookup"><span data-stu-id="3c962-161">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3c962-162">応答のキャッシュ ポリシーを変更します。</span><span class="sxs-lookup"><span data-stu-id="3c962-162">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="3c962-163">追加、<xref:System.IO.Stream>オブジェクトをフィルターとして、<xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3c962-163">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit&#xA;override this.ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="defaultHttpHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="3c962-164">HTTP 要求を処理するために使用される組み込みサーバー オブジェクトへの参照を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3c962-164">An object that provides references to intrinsic server objects used to service HTTP requests.</span></span></param>
        <summary><span data-ttu-id="3c962-165"><see cref="T:System.Web.DefaultHttpHandler" /> オブジェクトを有効にして、HTTP Web 要求を処理します。</span><span class="sxs-lookup"><span data-stu-id="3c962-165">Enables a <see cref="T:System.Web.DefaultHttpHandler" /> object to process of HTTP Web requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c962-166"><xref:System.Web.DefaultHttpHandler.ProcessRequest%2A>メソッドを同期的に呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3c962-166">The <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> method should not be called synchronously.</span></span> <span data-ttu-id="3c962-167">派生したクラス、<xref:System.Web.DefaultHttpHandler>クラスでオーバーライド、<xref:System.Web.DefaultHttpHandler.ProcessRequest%2A>カスタマイズされた要求の処理を提供します。</span><span class="sxs-lookup"><span data-stu-id="3c962-167">Classes that are derived from the <xref:System.Web.DefaultHttpHandler> class can override the <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> to provide customized request processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3c962-168"><see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> が同期で呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="3c962-168">The <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> is called synchronously.</span></span></exception>
        <altmember cref="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
  </Members>
</Type>