<Type Name="TransactionIsolationLevel" FullName="System.EnterpriseServices.TransactionIsolationLevel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28cda639281e434e1cef01d81665fc362271e671" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TransactionIsolationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TransactionIsolationLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.TransactionIsolationLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum TransactionIsolationLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class TransactionIsolationLevel" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="9ea0a-101">
        <see cref="T:System.EnterpriseServices.TransactionAttribute" /> の値を指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9ea0a-101">Specifies the value of the <see cref="T:System.EnterpriseServices.TransactionAttribute" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9ea0a-102">使用を次のコード例に示します、<xref:System.EnterpriseServices.TransactionIsolationLevel>型です。</span><span class="sxs-lookup"><span data-stu-id="9ea0a-102">The following code example demonstrates the use of the <xref:System.EnterpriseServices.TransactionIsolationLevel> type.</span></span>  
  
 [!code-cpp[EnterpriseServicesTransactionIsolationLevel#0](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesTransactionIsolationLevel/cpp/class1.cpp#0)]
 [!code-csharp[EnterpriseServicesTransactionIsolationLevel#0](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesTransactionIsolationLevel/CS/class1.cs#0)]
 [!code-vb[EnterpriseServicesTransactionIsolationLevel#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesTransactionIsolationLevel/VB/class1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="Any" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.TransactionIsolationLevel Any = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.TransactionIsolationLevel.Any" />
      <MemberSignature Language="VB.NET" Value="Any" />
      <MemberSignature Language="C++ CLI" Value="Any" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ea0a-103">コンポーネントの分離レベルは、呼び出し元コンポーネントの分離レベルから取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ea0a-103">The isolation level for the component is obtained from the calling component's isolation level.</span>
          </span>
          <span data-ttu-id="9ea0a-104">ルート コンポーネントの場合、使用される分離レベルは <see cref="F:System.EnterpriseServices.TransactionIsolationLevel.Serializable" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ea0a-104">If this is the root component, the isolation level used is <see cref="F:System.EnterpriseServices.TransactionIsolationLevel.Serializable" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadCommitted">
      <MemberSignature Language="C#" Value="ReadCommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.TransactionIsolationLevel ReadCommitted = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.TransactionIsolationLevel.ReadCommitted" />
      <MemberSignature Language="VB.NET" Value="ReadCommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadCommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ea0a-105">データの読み取り中は、変更されたデータが読み取られることを避けるために、共有ロックが設定されます。しかし、トランザクションの終了前にデータが変更されることもあるため、反復不能読み取りやファントム データが発生する可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ea0a-105">Shared locks are held while the data is being read to avoid reading modified data, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadUncommitted">
      <MemberSignature Language="C#" Value="ReadUncommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.TransactionIsolationLevel ReadUncommitted = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.TransactionIsolationLevel.ReadUncommitted" />
      <MemberSignature Language="VB.NET" Value="ReadUncommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadUncommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ea0a-106">共有ロックが発行されるため、排他ロックは受け入れられません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ea0a-106">Shared locks are issued and no exclusive locks are honored.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RepeatableRead">
      <MemberSignature Language="C#" Value="RepeatableRead" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.TransactionIsolationLevel RepeatableRead = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.TransactionIsolationLevel.RepeatableRead" />
      <MemberSignature Language="VB.NET" Value="RepeatableRead" />
      <MemberSignature Language="C++ CLI" Value="RepeatableRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ea0a-107">他のユーザーがデータを更新できないようにするために、クエリで使用するすべてのデータをロックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ea0a-107">Locks are placed on all data that is used in a query, preventing other users from updating the data.</span>
          </span>
          <span data-ttu-id="9ea0a-108">反復不能読み取りは回避できますが、ファントム行が発生する可能性はあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ea0a-108">Prevents non-repeatable reads, but phantom rows are still possible.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="Serializable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.EnterpriseServices.TransactionIsolationLevel Serializable = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.EnterpriseServices.TransactionIsolationLevel.Serializable" />
      <MemberSignature Language="VB.NET" Value="Serializable" />
      <MemberSignature Language="C++ CLI" Value="Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionIsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="9ea0a-109">トランザクション完了前の更新または挿入を防止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9ea0a-109">Prevents updating or inserting until the transaction is complete.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>