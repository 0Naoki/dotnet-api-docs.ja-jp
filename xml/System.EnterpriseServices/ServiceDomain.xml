<Type Name="ServiceDomain" FullName="System.EnterpriseServices.ServiceDomain">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a7cfa3ec1ad84703ed8d079fb526192db554f0a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70507513" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceDomain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDomain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServiceDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceDomain" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDomain sealed" />
  <TypeSignature Language="F#" Value="type ServiceDomain = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> および <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> で識別されるコード セグメントが独自のコンテキストで実行され、そのコンテキスト内で作成されたオブジェクトに対して呼び出されたメソッドのように動作することができます。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> および <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> メソッドは、com + サービスを使用できるコードを囲むためにペアで使用されます。 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>との呼び出しの間に囲まれ<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>たコードは、独自のコンテキストで実行され、コンテキスト内で作成されたオブジェクトに対して呼び出されるメソッドであるかのように動作します。 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> と <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> のペアは入れ子にすることができます。 のすべての呼び出し<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>がの前の<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>呼び出しと一致するように、呼び出しのペアが均衡されていることを確認する必要があります。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public static void Enter (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enter(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enter (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Enter(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberSignature Language="F#" Value="static member Enter : System.EnterpriseServices.ServiceConfig -&gt; unit" Usage="System.EnterpriseServices.ServiceDomain.Enter cfg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">囲まれたコード内で使用するサービスの構成情報を格納した <see cref="T:System.EnterpriseServices.ServiceConfig" />。</param>
        <summary><see cref="T:System.EnterpriseServices.ServiceConfig" /> オブジェクトで指定されたコンテキストを作成し、それをコンテキスト スタックにプッシュして現在のコンテキストにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>は、 <xref:System.EnterpriseServices.ServiceConfig> `cfg`パラメーターとして渡されるオブジェクトによって指定されたとおりに構成されたコンテキストを作成します。 クライアント側とサーバー側の両方のポリシーは、メソッドの呼び出しが発生したかのようにトリガーされます。 次に、新しいコンテキストがコンテキストスタックにプッシュされ、現在のコンテキストになります。 これは効率的な設計であり、スレッドのマーシャリングは関係し<xref:System.EnterpriseServices.ServiceDomain.Enter%2A>ない<xref:System.EnterpriseServices.ServiceDomain.Leave%2A>ため、とを使用すると、同等のメソッド呼び出しと比較してオーバーヘッドが大幅に削減されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.EnterpriseServices.ServiceConfig" /> は、現在のプラットフォームではサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionStatus Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.EnterpriseServices.TransactionStatus Leave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Leave () As TransactionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::EnterpriseServices::TransactionStatus Leave();" />
      <MemberSignature Language="F#" Value="static member Leave : unit -&gt; System.EnterpriseServices.TransactionStatus" Usage="System.EnterpriseServices.ServiceDomain.Leave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>メソッド呼び出しが返された場合のように、サーバー側のポリシーを発生した後、クライアント側のポリシーを発生します。 次に、現在のコンテキストがコンテキスト スタックからポップされ、<see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> を呼び出したときに実行中だったコンテキストが現在のコンテキストになります。</summary>
        <returns><see cref="T:System.EnterpriseServices.TransactionStatus" /> 値のいずれか 1 つ。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.EnterpriseServices.ServiceConfig" /> は、現在のプラットフォームではサポートされていません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
