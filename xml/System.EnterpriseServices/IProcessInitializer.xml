<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71de6c95b5ac06ee9ff4c5ad83a05ad3542abd35" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1da05-101">COM コンポーネントの起動時または終了時に呼び出すことができるメソッドをサポートします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1da05-101">Supports methods that can be called when a COM component starts up or shuts down.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da05-102">実装、<xref:System.EnterpriseServices.IProcessInitializer>でインターフェイス メソッド サービス コンポーネントの初期化を実行する場合や、シャット ダウン コードとサーバー プロセス (Dllhost.exe) を起動またはシャット ダウン、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="1da05-102">Implement the <xref:System.EnterpriseServices.IProcessInitializer> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</span></span>  
  
 <span data-ttu-id="1da05-103">COM + に用意`Startup`と`Shutdown`Dllhost.exe の開始し、終了時にイベント。</span><span class="sxs-lookup"><span data-stu-id="1da05-103">COM+ provides `Startup` and `Shutdown` events when Dllhost.exe starts and ends.</span></span> <span data-ttu-id="1da05-104">この機能は、(以下に、サーバー コンポーネントと呼びます) のカスタムの初期化を実行し、コードをクリーンアップする COM + サーバー アプリケーションにインストールされている COM + コンポーネントを使用します。</span><span class="sxs-lookup"><span data-stu-id="1da05-104">This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</span></span> <span data-ttu-id="1da05-105">実装する各コンポーネントのインスタンス、<xref:System.EnterpriseServices.IProcessInitializer>インターフェイスが作成および格納されているプロセスの期間のされインターフェイス メソッドにスタートアップおよびシャット ダウン中に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1da05-105">An instance of each component that implements the <xref:System.EnterpriseServices.IProcessInitializer> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</span></span> <span data-ttu-id="1da05-106">実装された場合、 <xref:System.EnterpriseServices.ServicedComponent>、コンポーネントの登録時に、`InitializesServerApplication`内のパラメーター、`COMAdminCatalogObject`に設定されているコレクション内のコンポーネントで`true`です。</span><span class="sxs-lookup"><span data-stu-id="1da05-106">When implemented on a <xref:System.EnterpriseServices.ServicedComponent>, during registration of the component, the `InitializesServerApplication` parameter in the `COMAdminCatalogObject` within the Components collection is set to `true`.</span></span>  
  
 <span data-ttu-id="1da05-107">使用して、`Startup`と`Shutdown`イベント、リソースの初期化、接続を作成することができます、共有、データの初期化とクリーンアップ コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="1da05-107">Using the `Startup` and `Shutdown` events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</span></span> <span data-ttu-id="1da05-108">ただし、サーバー コンポーネントのインスタンスがまだ作成されていないためには、COM + に固有の状態にアクセスする必要がありますできません。</span><span class="sxs-lookup"><span data-stu-id="1da05-108">However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</span></span> <span data-ttu-id="1da05-109">さらに、コード、`Startup`と`Shutdown`イベントは、システムをシステム プロセスの開始後にライセンス認証を受け入れる準備を Dllhost.exe で 90 秒のみを待機するため、できるだけ迅速に返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1da05-109">In addition, the code in the `Startup` and `Shutdown` events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</span></span> <span data-ttu-id="1da05-110">Dllhost.exe が可能である 90 秒以内を通知されない場合、システム プロセスを終了します。したがって、すべての初期化プロセスはこの期間内に完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1da05-110">If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</span></span> <span data-ttu-id="1da05-111">初期化に参加している各サーバー コンポーネントをサポートする必要があります、<xref:System.EnterpriseServices.IProcessInitializer>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="1da05-111">Each server component that participates in initialization must support the <xref:System.EnterpriseServices.IProcessInitializer> interface.</span></span> <span data-ttu-id="1da05-112">DllHost.exe スタートアップ時に、COM + 作成を呼び出し、このサービスを要求したすべてのサーバー コンポーネント`QueryInterface`の<xref:System.EnterpriseServices.IProcessInitializer>インターフェイス、および呼び出し、<xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>関数。</span><span class="sxs-lookup"><span data-stu-id="1da05-112">On DllHost.exe startup, COM+ creates all server components that requested this service, calls `QueryInterface` for the <xref:System.EnterpriseServices.IProcessInitializer> interface, and calls the <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> function.</span></span> <span data-ttu-id="1da05-113">同様に、DllHost.exe のプロセスがシャット ダウン時に呼び出し、<xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>これらの関数が以前にインターフェイス ポインターを格納します。</span><span class="sxs-lookup"><span data-stu-id="1da05-113">Similarly, when the DllHost.exe process is shut down, it calls the <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> function on those previously stored interface pointers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1da05-114">終了アクションを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da05-114">Performs shutdown actions.</span>
          </span>
          <span data-ttu-id="1da05-115">Dllhost.exe の終了時に呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da05-115">Called when Dllhost.exe is shut down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da05-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> フェイルファースト、またはその他の重大なシャット ダウン イベントの間には呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="1da05-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> is not called during a failfast or other catastrophic shutdown events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl">
          <span data-ttu-id="1da05-117">Microsoft Windows XP では、COM コンポーネント起動の <see langword="IUnknown" /> インターフェイスへのポインター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da05-117">In Microsoft Windows XP, a pointer to the <see langword="IUnknown" /> interface of the COM component starting up.</span>
          </span>
          <span data-ttu-id="1da05-118">Microsoft Windows 2000 では、この引数は常に <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da05-118">In Microsoft Windows 2000, this argument is always <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1da05-119">起動時の初期化を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da05-119">Performs initialization at startup.</span>
          </span>
          <span data-ttu-id="1da05-120">Dllhost.exe の起動時に呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1da05-120">Called when Dllhost.exe is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da05-121">によって参照されるオブジェクト`punkProcessControl`を実装する<xref:System.EnterpriseServices.IProcessInitControl>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="1da05-121">The object referenced by `punkProcessControl` implements an <xref:System.EnterpriseServices.IProcessInitControl> interface.</span></span> <span data-ttu-id="1da05-122"><xref:System.EnterpriseServices.IProcessInitControl> 1 つのメソッドをサポートしている<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1da05-122"><xref:System.EnterpriseServices.IProcessInitControl> supports the single method <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span></span>  
  
 <span data-ttu-id="1da05-123">内の初期化コード<xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>呼び出すことができます、<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>コンポーネントがタイムアウトの起動前に残り秒数に設定してタイムアウトを指定しています。</span><span class="sxs-lookup"><span data-stu-id="1da05-123">The initialization code in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> can call the <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>