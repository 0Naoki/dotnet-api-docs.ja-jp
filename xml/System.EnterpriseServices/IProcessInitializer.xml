<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53f02b0dca103a2278f68dfe7522f65b914e4d15" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69358562" /></Metadata><TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <TypeSignature Language="F#" Value="type IProcessInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2666d-101">COM コンポーネントの起動時または終了時に呼び出すことができるメソッドをサポートします。</span><span class="sxs-lookup"><span data-stu-id="2666d-101">Supports methods that can be called when a COM component starts up or shuts down.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2666d-102">サーバープロセス (dllhost.exe) の起動時またはシャットダウン時に初期化コードまたはシャットダウンコードを実行する場合は、サービスコンポーネントに対してインターフェイスメソッドを実装します。<xref:System.EnterpriseServices.IProcessInitializer></span><span class="sxs-lookup"><span data-stu-id="2666d-102">Implement the <xref:System.EnterpriseServices.IProcessInitializer> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</span></span>  
  
 <span data-ttu-id="2666d-103">Com + `Startup`は`Shutdown` 、dllhost.exe の開始時と終了時にイベントとイベントを提供します。</span><span class="sxs-lookup"><span data-stu-id="2666d-103">COM+ provides `Startup` and `Shutdown` events when Dllhost.exe starts and ends.</span></span> <span data-ttu-id="2666d-104">この機能により、COM + サーバーアプリケーションにインストールされている COM + コンポーネント (後でサーバーコンポーネントと呼びます) を使用して、カスタム初期化とクリーンアップコードを実行できます。</span><span class="sxs-lookup"><span data-stu-id="2666d-104">This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</span></span> <span data-ttu-id="2666d-105"><xref:System.EnterpriseServices.IProcessInitializer>インターフェイスを実装する各コンポーネントのインスタンスは、プロセスの実行中に作成および保存され、起動およびシャットダウン中にインターフェイスメソッドで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2666d-105">An instance of each component that implements the <xref:System.EnterpriseServices.IProcessInitializer> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</span></span> <span data-ttu-id="2666d-106">に<xref:System.EnterpriseServices.ServicedComponent>実装された場合、コンポーネント`InitializesServerApplication`の登録時に、コンポーネントコレクション`COMAdminCatalogObject`内ののパラメーターがに`true`設定されます。</span><span class="sxs-lookup"><span data-stu-id="2666d-106">When implemented on a <xref:System.EnterpriseServices.ServicedComponent>, during registration of the component, the `InitializesServerApplication` parameter in the `COMAdminCatalogObject` within the Components collection is set to `true`.</span></span>  
  
 <span data-ttu-id="2666d-107">`Startup`イベントと`Shutdown`イベントを使用すると、リソースの初期化、接続の作成、共有データの初期化、クリーンアップコードの実行を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="2666d-107">Using the `Startup` and `Shutdown` events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</span></span> <span data-ttu-id="2666d-108">ただし、サーバーコンポーネントのインスタンスがまだ作成されていないため、COM + に固有の状態にアクセスすることはできません。</span><span class="sxs-lookup"><span data-stu-id="2666d-108">However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</span></span> <span data-ttu-id="2666d-109">また、 `Startup`および`Shutdown`イベントのコードは、システムがプロセスを開始した後に、dllhost.exe がアクティベーションを受け入れる準備をするために90秒しか待機しないため、可能な限り迅速に返されます。</span><span class="sxs-lookup"><span data-stu-id="2666d-109">In addition, the code in the `Startup` and `Shutdown` events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</span></span> <span data-ttu-id="2666d-110">Dllhost.exe が90秒以内に準備できたことを通知しない場合、システムはプロセスを終了します。このため、すべての初期化処理をこの期間内に完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2666d-110">If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</span></span> <span data-ttu-id="2666d-111">初期化に参加する各サーバーコンポーネントは、インターフェイス<xref:System.EnterpriseServices.IProcessInitializer>をサポートしている必要があります。</span><span class="sxs-lookup"><span data-stu-id="2666d-111">Each server component that participates in initialization must support the <xref:System.EnterpriseServices.IProcessInitializer> interface.</span></span> <span data-ttu-id="2666d-112">Dllhost.exe の起動時に、com + は、このサービスを要求したすべての`QueryInterface`サーバーコンポーネント<xref:System.EnterpriseServices.IProcessInitializer>を作成し、 <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>インターフェイスを呼び出して、関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2666d-112">On DllHost.exe startup, COM+ creates all server components that requested this service, calls `QueryInterface` for the <xref:System.EnterpriseServices.IProcessInitializer> interface, and calls the <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> function.</span></span> <span data-ttu-id="2666d-113">同様に、dllhost.exe プロセスがシャットダウンされると、以前に格納さ<xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>れていたインターフェイスポインターで関数が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2666d-113">Similarly, when the DllHost.exe process is shut down, it calls the <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> function on those previously stored interface pointers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iProcessInitializer.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2666d-114">終了アクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="2666d-114">Performs shutdown actions.</span></span> <span data-ttu-id="2666d-115">Dllhost.exe の終了時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2666d-115">Called when Dllhost.exe is shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2666d-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>は、failfast またはその他の致命的なシャットダウンイベントの発生時には呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="2666d-116"><xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> is not called during a failfast or other catastrophic shutdown events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberSignature Language="F#" Value="abstract member Startup : obj -&gt; unit" Usage="iProcessInitializer.Startup punkProcessControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl"><span data-ttu-id="2666d-117">Microsoft Windows XP では、COM コンポーネント起動の <see langword="IUnknown" /> インターフェイスへのポインター。</span><span class="sxs-lookup"><span data-stu-id="2666d-117">In Microsoft Windows XP, a pointer to the <see langword="IUnknown" /> interface of the COM component starting up.</span></span> <span data-ttu-id="2666d-118">Microsoft Windows 2000 では、この引数は常に <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2666d-118">In Microsoft Windows 2000, this argument is always <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="2666d-119">起動時の初期化を実行します。</span><span class="sxs-lookup"><span data-stu-id="2666d-119">Performs initialization at startup.</span></span> <span data-ttu-id="2666d-120">Dllhost.exe の起動時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2666d-120">Called when Dllhost.exe is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2666d-121">によって`punkProcessControl`参照される<xref:System.EnterpriseServices.IProcessInitControl>オブジェクトは、インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="2666d-121">The object referenced by `punkProcessControl` implements an <xref:System.EnterpriseServices.IProcessInitControl> interface.</span></span> <span data-ttu-id="2666d-122"><xref:System.EnterpriseServices.IProcessInitControl>では、単一<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>のメソッドがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="2666d-122"><xref:System.EnterpriseServices.IProcessInitControl> supports the single method <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</span></span>  
  
 <span data-ttu-id="2666d-123">の初期化コード<xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>は、 <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>を呼び出すことができます。タイムアウトは、コンポーネントの起動がタイムアウトするまでの残り秒数と同じになります。</span><span class="sxs-lookup"><span data-stu-id="2666d-123">The initialization code in <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> can call the <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
