<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IProcessInitializer.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac571de6c95b5ac06ee9ff4c5ad83a05ad3542abd35.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71de6c95b5ac06ee9ff4c5ad83a05ad3542abd35</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Supports methods that can be called when a COM component starts up or shuts down.</source>
          <target state="translated">COM コンポーネントの起動時または終了時に呼び出すことができるメソッドをサポートします。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Implement the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</source>
          <target state="translated">実装、<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph>でインターフェイス メソッド サービス コンポーネントの初期化を実行する場合や、シャット ダウン コードとサーバー プロセス (Dllhost.exe) を起動またはシャット ダウン、それぞれします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>COM+ provides <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events when Dllhost.exe starts and ends.</source>
          <target state="translated">COM + に用意<ph id="ph1">`Startup`</ph>と<ph id="ph2">`Shutdown`</ph>Dllhost.exe の開始し、終了時にイベント。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</source>
          <target state="translated">この機能は、(以下に、サーバー コンポーネントと呼びます) のカスタムの初期化を実行し、コードをクリーンアップする COM + サーバー アプリケーションにインストールされている COM + コンポーネントを使用します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>An instance of each component that implements the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</source>
          <target state="translated">実装する各コンポーネントのインスタンス、<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph>インターフェイスが作成および格納されているプロセスの期間のされインターフェイス メソッドにスタートアップおよびシャット ダウン中に呼び出されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>When implemented on a <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>, during registration of the component, the <ph id="ph2">`InitializesServerApplication`</ph> parameter in the <ph id="ph3">`COMAdminCatalogObject`</ph> within the Components collection is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">実装された場合、 <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>、コンポーネントの登録時に、<ph id="ph2">`InitializesServerApplication`</ph>内のパラメーター、<ph id="ph3">`COMAdminCatalogObject`</ph>に設定されているコレクション内のコンポーネントで<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Using the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</source>
          <target state="translated">使用して、<ph id="ph1">`Startup`</ph>と<ph id="ph2">`Shutdown`</ph>イベント、リソースの初期化、接続を作成することができます、共有、データの初期化とクリーンアップ コードを実行します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</source>
          <target state="translated">ただし、サーバー コンポーネントのインスタンスがまだ作成されていないためには、COM + に固有の状態にアクセスする必要がありますできません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>In addition, the code in the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</source>
          <target state="translated">さらに、コード、<ph id="ph1">`Startup`</ph>と<ph id="ph2">`Shutdown`</ph>イベントは、システムをシステム プロセスの開始後にライセンス認証を受け入れる準備を Dllhost.exe で 90 秒のみを待機するため、できるだけ迅速に返す必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</source>
          <target state="translated">Dllhost.exe が可能である 90 秒以内を通知されない場合、システム プロセスを終了します。したがって、すべての初期化プロセスはこの期間内に完了する必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Each server component that participates in initialization must support the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface.</source>
          <target state="translated">初期化に参加している各サーバー コンポーネントをサポートする必要があります、<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>On DllHost.exe startup, COM+ creates all server components that requested this service, calls <ph id="ph1">`QueryInterface`</ph> for the <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface, and calls the <ph id="ph3">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> function.</source>
          <target state="translated">DllHost.exe スタートアップ時に、COM + 作成を呼び出し、このサービスを要求したすべてのサーバー コンポーネント<ph id="ph1">`QueryInterface`</ph>の<ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph>インターフェイス、および呼び出し、<ph id="ph3">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph>関数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Similarly, when the DllHost.exe process is shut down, it calls the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> function on those previously stored interface pointers.</source>
          <target state="translated">同様に、DllHost.exe のプロセスがシャット ダウン時に呼び出し、<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph>これらの関数が以前にインターフェイス ポインターを格納します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source>Performs shutdown actions.</source>
          <target state="translated">終了アクションを実行します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source>Called when Dllhost.exe is shut down.</source>
          <target state="translated">Dllhost.exe の終了時に呼び出されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> is not called during a failfast or other catastrophic shutdown events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> フェイルファースト、またはその他の重大なシャット ダウン イベントの間には呼び出されません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>In Microsoft Windows XP, a pointer to the <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface of the COM component starting up.</source>
          <target state="translated">Microsoft Windows XP では、COM コンポーネント起動の <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> インターフェイスへのポインター。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>In Microsoft Windows 2000, this argument is always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Microsoft Windows 2000 では、この引数は常に <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>Performs initialization at startup.</source>
          <target state="translated">起動時の初期化を実行します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>Called when Dllhost.exe is started.</source>
          <target state="translated">Dllhost.exe の起動時に呼び出されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>The object referenced by <ph id="ph1">`punkProcessControl`</ph> implements an <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> interface.</source>
          <target state="translated">によって参照されるオブジェクト<ph id="ph1">`punkProcessControl`</ph>を実装する<ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> supports the single method <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> 1 つのメソッドをサポートしている<ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>The initialization code in <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> can call the <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</source>
          <target state="translated">内の初期化コード<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph>呼び出すことができます、<ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>コンポーネントがタイムアウトの起動前に残り秒数に設定してタイムアウトを指定しています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>