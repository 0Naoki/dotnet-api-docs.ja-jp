<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPlaybackControl.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac554fcf7590327e9d2356fc883bfae633d190f6a78.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54fcf7590327e9d2356fc883bfae633d190f6a78</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</source>
          <target state="translated">メッセージ キューの配信機構のサーバー側再生エラーおよびクライアント側エラーの異常処理において、キュー コンポーネント内で機能します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The exception class defined for the component in the COM+ catalog implements both <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph> and the interface for the original class.</source>
          <target state="translated">COM + カタログでコンポーネントを実装するため、定義した例外クラス<ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph>と元のクラスのインターフェイスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The method implementations of the original class interface are used to perform the exception handling for the failed methods in the class itself.</source>
          <target state="translated">元のクラス インターフェイスのメソッドの実装を使用して、クラス自体で障害が発生したメソッドの例外処理を実行できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>They will be called after <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph> to process exceptions for the method originally called.</source>
          <target state="translated">後に呼び出されます<ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph>を最初に呼び出されたメソッドの例外を処理します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The Queued Components Player calls the methods of <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph> to inform the exception-handler object that a message is about to be placed on the final resting or dead letter queue.</source>
          <target state="translated">キュー コンポーネント プレーヤーのメソッドを呼び出して、<ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph>にメッセージを最終的な載りましたまたは配信不能キューに配置する例外ハンドラー オブジェクトを通知します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The Queued Components Player then calls the same method in the exception-handler object that had failed in the original method call.</source>
          <target state="translated">キュー コンポーネント プレーヤーは、元のメソッド呼び出しで失敗した例外ハンドラー オブジェクトの同じメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The exception-handler object can implement an alternative, for example, by gathering problem diagnosis information or generating an object or message that informs the client of the problem.</source>
          <target state="translated">例外ハンドラー オブジェクトは、問題の診断情報の収集など、オブジェクトまたはクライアントに、問題の通知メッセージを生成する、代わりをたとえば、実装できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>If the application does not implement <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph>, the poison message is placed on the final resting or dead letter queue when the Queued Components Player exhausts all retries.</source>
          <target state="translated">アプリケーションを実装しない場合<ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl&gt;</ph>、キュー コンポーネント プレーヤーは、すべての再試行を過ぎると、有害なメッセージが最終的な載りましたまたは配信不能キューに配置されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>A poison message is a message that cannot be processed for some reason, perhaps because of a problem with the server or queuing system.</source>
          <target state="translated">有害メッセージは、サーバー名またはキュー システムでの問題のため、いくつかの理由から、処理できないメッセージです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The transaction is rolled back, and the poison message goes to the top of the queue.</source>
          <target state="translated">トランザクションがロールバックされ、有害メッセージはキューの先頭に移動します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>When the message is dequeued again, the same condition occurs.</source>
          <target state="translated">メッセージが再度にデキューされると、同じ条件が発生します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>This message can continue looping indefinitely until something is done to correct the problem.</source>
          <target state="translated">このメッセージは、何かを行う問題を解決するまで無期限にループを続行できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The Queued Components service handles the poison message by using a series of retries.</source>
          <target state="translated">キュー コンポーネント サービスは、一連の再試行を使用して、有害なメッセージを処理します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>After several unsuccessful retries, the message is moved to a final resting queue.</source>
          <target state="translated">いくつかの失敗した再試行後に、メッセージは、最終的な静止キューに移動されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>Poison messages remain in the resting queue until manually moved by using the Queued Components Message Mover tool.</source>
          <target state="translated">有害メッセージ キューに置かれたコンポーネントのメッセージのムーバー ツールを使用して、手動で移動するまでに、静止キューに残ります。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The poison message situation can also be resolved programmatically, using the <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph> method, which informs the server-side component author that all attempts to play back the deferred activation have failed.</source>
          <target state="translated">有害なメッセージ状況解決することも、プログラムでを使用して、<ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph>メソッドで、遅延のアクティブ化を再生するすべての試行が失敗したサーバー側コンポーネントの作成者に通知します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>If you discover a poison message, you might be able to solve the underlying cause of the problem quickly.</source>
          <target state="translated">有害なメッセージを検出する場合は、問題の根本原因を迅速に解決できる可能性があります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>For example, if the server was offline for some reason, you can bring the server back online.</source>
          <target state="translated">たとえば、何らかの理由により、サーバーがオフラインで場合、は、サーバーをオンラインに戻すを取り込むことができます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>If you cannot solve the problem quickly, you can automatically generate another transaction that notifies the requestor that the transaction did not occur.</source>
          <target state="translated">問題を迅速に解決することはできない場合、は、トランザクションが発生しなかったことを要求元に通知する別のトランザクションを自動的に生成できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IPlaybackControl">
          <source>The requestor can then make a compensating transaction that reverses the effect of a transaction that has already committed.</source>
          <target state="translated">要求元は、既にコミットされているトランザクションの効果を反転する補正トランザクションを作成し、ことができます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</source>
          <target state="translated">サーバーにメッセージを配信しようとするすべてのメッセージ キュー試行が拒否され、最終的にメッセージがクライアント側のトランザクション配信不能キューに置かれていることをクライアント側の例外処理コンポーネントに通知します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>As messages arrive in the Xact Dead Letter queue, COM+ attempts to invoke a client-side exception handler related to the server class to deliver this notification.</source>
          <target state="translated">トランザクション配信不能キューにメッセージが到着、COM + は、この通知を配信サーバー クラスに関連するクライアント側の例外ハンドラーを起動しようとします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>It does so by first calling <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</ph>, then calling the exception-handling version of the failed method in the exception-handler object.</source>
          <target state="translated">これは最初の呼び出しによって<ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A&gt;</ph>、例外ハンドラー オブジェクトの例外処理のバージョンの障害が発生したメソッドを呼び出すし、します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</source>
          <target state="translated">この例外メソッドは、エラーの記録、管理者にメール メッセージの送信、またはクライアント側の補正アクション (の以前のトランザクションの効果を反転すること) を実行など、例外の操作を実行できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>If the exception method is not successful, the message is left on the Xact Dead Letter queue.</source>
          <target state="translated">Exception メソッドが成功しなかった場合、メッセージはトランザクション配信不能キューに残ります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry">
          <source>The Xact Dead Letter queue can be viewed in the Microsoft Message Queue (MSMQ) Explorer.</source>
          <target state="translated">トランザクション配信不能キューは、Microsoft メッセージ キュー (MSMQ) エクスプ ローラーで表示できます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</source>
          <target state="translated">サーバーへの遅延アクティベーションを再生しようとするすべての試行が失敗し、メッセージが最後の静止キューに移動されようとしていることをサーバー側の例外クラスの実装に通知します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>As messages arrive on the Xact Dead Letter queue, COM+ attempts to invoke a server-side exception handler related to the server class to deliver this notification.</source>
          <target state="translated">メッセージは、トランザクション配信不能キューに到着、COM + は、この通知を配信サーバー クラスに関連するサーバー側の例外ハンドラーを起動しようとします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>It does so by first calling <ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph>, then calling the exception handling version of the failed method in the exception handler object.</source>
          <target state="translated">これは最初の呼び出しによって<ph id="ph1">&lt;xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A&gt;</ph>、例外処理のバージョンの例外ハンドラー オブジェクトで障害が発生したメソッドを呼び出して、します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</source>
          <target state="translated">この例外メソッドは、エラーの記録、管理者にメール メッセージの送信、またはクライアント側の補正アクション (の以前のトランザクションの効果を反転すること) を実行など、例外の操作を実行できます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>The server object should make every effort to complete this transaction successfully.</source>
          <target state="translated">サーバー オブジェクトは、このトランザクションを正常に完了するには、あらゆる努力を行います。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>Otherwise, manual intervention is required to reprocess the message.</source>
          <target state="translated">それ以外の場合、メッセージを再処理する手動による介入が必要です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry">
          <source>If the exception method is not successful, the message is moved to the final resting queue.</source>
          <target state="translated">Exception メソッドが成功しなかった場合、メッセージは最終的な静止キューに移動します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>