<Type Name="Activity" FullName="System.EnterpriseServices.Activity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d68a73c7507151eb4a7c0db39a53444cb7eed868" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Activity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activity sealed" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f1563-101">COM+ コンポーネントを作成せずに COM+ サービスを使うことができる、同期または非同期のバッチ作業を実行するためのアクティビティを作成します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1563-101">Creates an activity to do synchronous or asynchronous batch work that can use COM+ services without needing to create a COM+ component.</span>
      </span>
      <span data-ttu-id="f1563-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1563-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1563-103">アクティビティに関連付けられているコンテキストが完全にによって、<xref:System.EnterpriseServices.ServiceConfig>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f1563-103">The context associated with the activity is completely determined by a <xref:System.EnterpriseServices.ServiceConfig> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1563-104">次のコード例を使用する方法を示しています、<xref:System.EnterpriseServices.Activity>クラスし、の同期サービスを使用します。</span><span class="sxs-lookup"><span data-stu-id="f1563-104">The following code example demonstrates how to use the <xref:System.EnterpriseServices.Activity> class and use the synchronization service.</span></span>  
  
 [!code-csharp[EnterpriseServices_Activity#0](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Activity/CS/EnterpriseServices_Activity.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Activity(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">
          <span data-ttu-id="f1563-105">使うサービスの構成情報を格納する <see cref="T:System.EnterpriseServices.ServiceConfig" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1563-105">A <see cref="T:System.EnterpriseServices.ServiceConfig" /> that contains the configuration information for the services to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1563-106">
            <see cref="T:System.EnterpriseServices.Activity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1563-106">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Activity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1563-107">作成、<xref:System.EnterpriseServices.Activity>バッチに作業 COM + サービスを送信するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="f1563-107">Creates an <xref:System.EnterpriseServices.Activity> that is used to submit batch work to COM+ services.</span></span> <span data-ttu-id="f1563-108">アクティビティに関連付けられているコンテキストが完全にによって、<xref:System.EnterpriseServices.ServiceConfig>を通じて渡されるオブジェクト、`cfg`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f1563-108">The context associated with the activity is completely determined by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed through the `cfg` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1563-109"><xref:System.EnterpriseServices.Activity> クラスの新しいインスタンスを初期化する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="f1563-109">The following code example demonstrates how to initialize a new instance of the <xref:System.EnterpriseServices.Activity> class.</span></span>  
  
 [!code-csharp[EnterpriseServices_Activity#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Activity/CS/EnterpriseServices_Activity.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="f1563-110">
            <see cref="T:System.EnterpriseServices.Activity" /> は、現在のプラットフォームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1563-110">
              <see cref="T:System.EnterpriseServices.Activity" /> is not supported on the current platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousCall">
      <MemberSignature Language="C#" Value="public void AsynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AsynchronousCall(class System.EnterpriseServices.IServiceCall serviceCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AsynchronousCall (serviceCall As IServiceCall)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AsynchronousCall(System::EnterpriseServices::IServiceCall ^ serviceCall);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCall" Type="System.EnterpriseServices.IServiceCall" />
      </Parameters>
      <Docs>
        <param name="serviceCall">
          <span data-ttu-id="f1563-111">バッチ作業を実装するために使う <see cref="T:System.EnterpriseServices.IServiceCall" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1563-111">A <see cref="T:System.EnterpriseServices.IServiceCall" /> object that is used to implement the batch work.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1563-112">指定したユーザー定義のバッチ作業を非同期に実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1563-112">Runs the specified user-defined batch work asynchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1563-113">次のコード例では、このメソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f1563-113">The following code example demonstrates how to use this method.</span></span>  
  
 [!code-csharp[EnterpriseServices_Activity#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Activity/CS/EnterpriseServices_Activity.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToCurrentThread">
      <MemberSignature Language="C#" Value="public void BindToCurrentThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindToCurrentThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.BindToCurrentThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToCurrentThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToCurrentThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1563-114">ユーザー定義の作業を現在のスレッドにバインドします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1563-114">Binds the user-defined work to the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1563-115"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> バインドで送信されるバッチ作業、<xref:System.EnterpriseServices.Activity.SynchronousCall%2A>または<xref:System.EnterpriseServices.Activity.AsynchronousCall%2A>メソッドを現在のシングル スレッド アパートメント (STA)。</span><span class="sxs-lookup"><span data-stu-id="f1563-115"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> binds the batch work that is submitted by the <xref:System.EnterpriseServices.Activity.SynchronousCall%2A> or <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> methods to the current single-threaded apartment (STA).</span></span> <span data-ttu-id="f1563-116"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> 効果はありません、現在のスレッドはマルチ スレッド アパートメント (MTA) で実行されている場合。</span><span class="sxs-lookup"><span data-stu-id="f1563-116"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> has no effect if the current thread is being run in the multithreaded apartment (MTA).</span></span> <span data-ttu-id="f1563-117">現在のスレッド モデルがの構成によって決まりますが、<xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A>のプロパティ、<xref:System.EnterpriseServices.ServiceConfig>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f1563-117">The current thread model is determined by the configuration of the <xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A> property of the <xref:System.EnterpriseServices.ServiceConfig> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronousCall">
      <MemberSignature Language="C#" Value="public void SynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SynchronousCall(class System.EnterpriseServices.IServiceCall serviceCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SynchronousCall (serviceCall As IServiceCall)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SynchronousCall(System::EnterpriseServices::IServiceCall ^ serviceCall);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCall" Type="System.EnterpriseServices.IServiceCall" />
      </Parameters>
      <Docs>
        <param name="serviceCall">
          <span data-ttu-id="f1563-118">バッチ作業を実装するために使う <see cref="T:System.EnterpriseServices.IServiceCall" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1563-118">A <see cref="T:System.EnterpriseServices.IServiceCall" /> object that is used to implement the batch work.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1563-119">指定したユーザー定義のバッチ作業を同期的に実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1563-119">Runs the specified user-defined batch work synchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnbindFromThread">
      <MemberSignature Language="C#" Value="public void UnbindFromThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnbindFromThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.UnbindFromThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnbindFromThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnbindFromThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1563-120">
            <see cref="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" /> メソッドまたは <see cref="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" /> メソッドによって送信したバッチ作業を実行しているスレッドとそのバッチ作業とのバインドを解除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1563-120">Unbinds the batch work that is submitted by the <see cref="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" /> or <see cref="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" /> methods from the thread on which the batch work is running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1563-121"><xref:System.EnterpriseServices.Activity.UnbindFromThread%2A> 効果はありません、バッチ作業が以前のスレッドにバインドされていない場合。</span><span class="sxs-lookup"><span data-stu-id="f1563-121"><xref:System.EnterpriseServices.Activity.UnbindFromThread%2A> has no effect if the batch work was not previously bound to a thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>