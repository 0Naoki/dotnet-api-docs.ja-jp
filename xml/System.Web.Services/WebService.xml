<Type Name="WebService" FullName="System.Web.Services.WebService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98f929cd9afc4e38125d09e5d11fc4a420dc5aad" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69256993" /></Metadata><TypeSignature Language="C#" Value="public class WebService : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebService extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.WebService" />
  <TypeSignature Language="VB.NET" Value="Public Class WebService&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebService : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type WebService = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>共通 ASP.NET オブジェクト (アプリケーションやセッション状態など) への直接アクセスを提供する、XML Web サービス用のオプションの基本クラスを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 共通の ASP.NET オブジェクトにアクセスする必要がない場合でも、から<xref:System.Web.Services.WebService>派生させずに XML Web サービスを作成できます。 を使用して<xref:System.Web.Services.WebService.Context%2A>、追加の ASP.NET オブジェクトにアクセスできます。  
  
 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay%2A> のプロパティ<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>がまたは`true`に設定されている XML Web サービスメソッドは、にアクセスできません<xref:System.Web.HttpContext>。 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> そのため、その XML Web サービスメソッド内から<xref:System.Web.Services.WebService>クラスのプロパティにアクセスすると、が返さ`null`れます。  
  
 .NET Framework バージョン1.0 の XML Web サービスメソッドを使用していて、 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A>プロパティが<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> <xref:System.Web.HttpContext>に`true`設定された属性または属性のいずれかを持つ場合は、を使用してにアクセスすることはできません。静的<xref:System.Web.HttpContext.Current%2A>プロパティ。 にアクセス<xref:System.Web.HttpContext>するには、XML Web サービスメソッドを実装するクラス<xref:System.Web.Services.WebService>をから派生<xref:System.Web.Services.WebService.Context%2A>させ、プロパティにアクセスします。  
  
   
  
## Examples  
 次の例では、 <xref:System.Web.Services.WebService> <xref:System.Web.Services.WebService.Context%2A>プロパティを使用してサーバー上の要求の時刻を取得するために、から派生する XML Web サービスを作成します。  
  
 [!code-aspx-csharp[Classic WebService Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService Example/VB/sourcevb.asmx)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.WebService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.WebService" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.Services.WebService.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("The ASP.NET application object for the current request.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の HTTP 要求に対するアプリケーション オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.HttpApplicationState" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML Web サービスは、アプリケーションの状態とセッション状態の両方を使用できます。 アプリケーションの状態は、(の<xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>プロパティを使用して) メソッドに対してセッション状態がオフになっているかどうかに関係なく、 <xref:System.Web.Services.WebMethodAttribute>XML Web サービスにアクセスするすべてのセッション間で保持されます。  
  
   
  
## Examples  
 次の例では、ブラウザーが XML Web サービスメソッドを呼び出すたびにカウントをインクリメントして、ヒットカウンターを示しています。  
  
 [!code-aspx-csharp[Classic WebService.Application Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService.Application Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService.Application Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService.Application Example/VB/sourcevb.asmx)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.Services.WebService.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の要求に対する ASP.NET <see cref="T:System.Web.HttpContext" /> を取得します。これには、HTTP サーバーが Web 要求を処理するために使用するすべての HTTP 固有のコンテキストがカプセル化されています。</summary>
        <value>現在の要求に対する ASP.NET <see cref="T:System.Web.HttpContext" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> <xref:System.Web.HttpContext.Current%2A> プロパティが<xref:System.Web.HttpContext>に<xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> 設定`true`された属性または属性のいずれかを持つ XML Web サービスメソッドは、静的プロパティを使用してにアクセスできません。 <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A> にアクセス<xref:System.Web.HttpContext>するには、XML Web サービスメソッドを実装するクラス<xref:System.Web.Services.WebService>をから派生<xref:System.Web.Services.WebService.Context%2A>させ、プロパティにアクセスします。  
  
   
  
## Examples  
 次の例では<xref:System.Web.Services.WebService.Context%2A> 、プロパティを使用して、サーバー上の要求の時刻を取得します。  
  
 [!code-aspx-csharp[Classic WebService Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><paramref name="Context" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.Services.WebService.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の要求に対する <see cref="T:System.Web.HttpServerUtility" /> を取得します。</summary>
        <value><see cref="T:System.Web.HttpServerUtility" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.HttpServerUtility>には、(COM オブジェクトをインスタンス化するための) など<xref:System.Web.HttpServerUtility.CreateObject%2A> 、Web 要求の処理に使用できるいくつかのメソッドが用意されています。  
  
   
  
## Examples  
 次の例では、 <xref:System.Web.Services.WebService.Server%2A>プロパティを使用して、Web サーバーのコンピューター名を返します。  
  
 [!code-aspx-csharp[Classic WebService.Server Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService.Server Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService.Server Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService.Server Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.Session" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.Services.WebService.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の要求に対する <see cref="T:System.Web.SessionState.HttpSessionState" /> インスタンスを取得します。</summary>
        <value>現在のセッションに対する ASP.NET セッション状態オブジェクトを表す <see cref="T:System.Web.SessionState.HttpSessionState" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、セッション状態を使用して、特定のセッションが XML Web サービス`SessionHitCounter`メソッドにアクセスする回数を確認します。 この例では、 <xref:System.Web.Services.WebMethodAttribute.EnableSession%2A>セッション状態に<xref:System.Web.Services.WebMethodAttribute>アクセスするため`true`に、のプロパティがに設定されています。  
  
 [!code-aspx-csharp[Classic WebMethodAttribute.EnableSession Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebMethodAttribute.EnableSession Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebMethodAttribute.EnableSession Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebMethodAttribute.EnableSession Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.SessionState.HttpSessionState" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.WebService.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML Web サービスに対して SOAP 要求を行うために使用する SOAP プロトコルのバージョンを取得します。</summary>
        <value><see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP プロトコルが http-GET や http POST などの XML Web サービスとの通信に使用されなかった場合、 <xref:System.Web.Services.WebService.SoapVersion%2A>プロパティの値は<xref:System.Web.Services.Protocols.SoapProtocolVersion.Default>になります。  
  
 <xref:System.Web.Services.WebService>クラスから派生していない xml web サービスの場合、xml web サービスに soap 要求を行うために使用される soap プロトコルのバージョンには、 <xref:System.Web.HttpContext.Items%2A?displayProperty=nameWithType>プロパティの "webservices.msc oapversion" エントリを使用してアクセスすることもできます。 このエントリの型<xref:System.Web.Services.Protocols.SoapProtocolVersion>はです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />
        <altmember cref="P:System.Web.HttpContext.Items" />
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.WebService.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.Services.WebService.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET サーバーの <see cref="P:System.Web.HttpContext.User" /> オブジェクトを取得します。 要求を実行する権限がユーザーに与えられているかどうかを認証するために使用できます。</summary>
        <value>ASP.NET サーバーの <see cref="T:System.Security.Principal.IPrincipal" /> オブジェクトを表す <see cref="P:System.Web.HttpContext.User" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.WebService.User%2A>プロパティを意味のあるものにするためには、インターネットインフォメーションサービス (IIS) と .NET Framework の両方を認証用に構成する必要があります。 認証とは、ユーザーから資格情報を受け取り、一部の権限に対して資格情報を検証するプロセスです。 資格情報が有効な場合は、認証された id があります。 .NET Framework での認証は、web.config ファイルにエントリを配置することによって構成されます。  
  
 次の例は、Windows 認証を有効にするために web.config ファイルに配置するエントリを示しています。  
  
```xml
<security>  
 <authentication mode="Windows"> <!-- Mode Options are Windows, Cookie, Passport and None or Empty String -->  
 </authentication>  
 </security>  
```  
  
 XML Web サービスのセキュリティの設定の詳細については、「 [ASP.NET を使用して作成された Xml Web サービス](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w67h0dw7(v=vs.100))のセキュリティ保護」を参照してください。  
  
   
  
## Examples  
 次の例では、認証されたユーザー名を検索し、その名前を返します。  
  
 [!code-aspx-csharp[Classic WebService.User Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic WebService.User Example/CS/sourcecs.asmx)]
 [!code-aspx-vb[Classic WebService.User Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic WebService.User Example/VB/sourcevb.asmx)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/w67h0dw7(v=vs.100)">ASP.NET を使用して作成した XML Web サービスのセキュリティ</related>
      </Docs>
    </Member>
  </Members>
</Type>
