<Type Name="DisplayFormatAttribute" FullName="System.ComponentModel.DataAnnotations.DisplayFormatAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f71f8c0707d50feb941ab33dd571688966d4fb3c" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63904857" /></Metadata><TypeSignature Language="C#" Value="public class DisplayFormatAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DisplayFormatAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class DisplayFormatAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DisplayFormatAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type DisplayFormatAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="09fb3-101">ASP.NET Dynamic Data によるデータ フィールドの表示方法と書式を指定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-101">Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09fb3-102">データ フィールドにこの属性を適用する場合は、属性の使用に関するガイドラインに従ってください。</span><span class="sxs-lookup"><span data-stu-id="09fb3-102">When you apply this attribute to a data field, you must follow the guidelines for the use of the attributes.</span></span> <span data-ttu-id="09fb3-103">詳細については、次を参照してください。 [ASP.NET 動的データ ガイドライン](https://msdn.microsoft.com/library/c563bbf3-feb9-484e-81d1-a585f1b0e192)します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-103">For more information, see [ASP.NET Dynamic Data Guidelines](https://msdn.microsoft.com/library/c563bbf3-feb9-484e-81d1-a585f1b0e192).</span></span>  

## Examples  
 <span data-ttu-id="09fb3-104">この機能のオンラインの例を参照してください。[実行](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DisplayFormatAttribute)します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-104">See an online example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DisplayFormatAttribute).</span></span>  
  
 <span data-ttu-id="09fb3-105">次の例は、使用する方法を示します、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>データ フィールドの書式設定をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="09fb3-105">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to customize formatting for a data field.</span></span> <span data-ttu-id="09fb3-106">例では、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-106">The example performs the following steps:</span></span>  
  
-   <span data-ttu-id="09fb3-107">メタデータの部分クラスと、関連するメタデータ クラスを実装します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-107">Implements a metadata partial class and an associated metadata class.</span></span>  
  
-   <span data-ttu-id="09fb3-108">適用される、関連するメタデータ クラスで、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>属性を次の結果を指定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-108">In the associated metadata class, it applies the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute to specify the following results:</span></span>  
  
    -   <span data-ttu-id="09fb3-109">データ フィールドが空の場合は、"[Null]"というテキストを表示します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-109">Display the text "[Null]" when a data field is empty.</span></span>  
  
    -   <span data-ttu-id="09fb3-110">ロケール固有の通貨書式では、通貨データを表示します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-110">Display currency data in locale specific currency format.</span></span>  
  
    -   <span data-ttu-id="09fb3-111">短い形式 (月/日/年) では、日付情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-111">Display date information in short format (mm/dd/yy).</span></span> <span data-ttu-id="09fb3-112">この形式は編集モードにも適用されます。</span><span class="sxs-lookup"><span data-stu-id="09fb3-112">This format also applies in edit mode.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#1)]  
  
 <span data-ttu-id="09fb3-113">例をコンパイルするには、次のものが必要。</span><span class="sxs-lookup"><span data-stu-id="09fb3-113">To compile the example, you need the following:</span></span>  
  
-   <span data-ttu-id="09fb3-114">任意のエディションの Visual Studio 2010 またはそれ以降。</span><span class="sxs-lookup"><span data-stu-id="09fb3-114">Any edition of Visual Studio 2010 or later.</span></span>
  
-   <span data-ttu-id="09fb3-115">AdventureWorksLT サンプル データベース。</span><span class="sxs-lookup"><span data-stu-id="09fb3-115">The AdventureWorksLT sample database.</span></span> <span data-ttu-id="09fb3-116">ダウンロードして、SQL Server サンプル データベースをインストールする方法については、次を参照してください。 [Microsoft SQL Server の製品サンプル。データベース](https://github.com/Microsoft/sql-server-samples/releases)GitHub でします。</span><span class="sxs-lookup"><span data-stu-id="09fb3-116">For information about how to download and install the SQL Server sample database, see [Microsoft SQL Server Product Samples: Database](https://github.com/Microsoft/sql-server-samples/releases) on GitHub.</span></span> <span data-ttu-id="09fb3-117">実行している SQL Server のバージョンのサンプル データベースの正しいバージョンをインストールすることを確認します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-117">Make sure that you install the correct version of the sample database for the version of SQL Server that you are running.</span></span>
  
-   <span data-ttu-id="09fb3-118">データ ドリブン Web サイトです。</span><span class="sxs-lookup"><span data-stu-id="09fb3-118">A data-driven Web site.</span></span> <span data-ttu-id="09fb3-119">これにより、データベースとデータ フィールドのカスタマイズを格納するクラスのデータ コンテキストを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="09fb3-119">This enables you to create a data context for the database and the class that contains the data field to customize.</span></span> <span data-ttu-id="09fb3-120">詳細については、「`Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="09fb3-120">For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`.</span></span>  

 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0"><span data-ttu-id="09fb3-121">方法: ASP.NET Web ページのグローバリゼーション用のカルチャおよび UI カルチャを設定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-121">How to: Set the Culture and UI Culture for ASP.NET Web Page Globalization</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DisplayFormatAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DisplayFormatAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09fb3-122"><see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-122">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09fb3-123">データ フィールドが編集モードである場合に <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> プロパティで指定した書式指定文字列をフィールド値に適用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-123">Gets or sets a value that indicates whether the formatting string that is specified by the <see cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" /> property is applied to the field value when the data field is in edit mode.</span></span></summary>
        <value><span data-ttu-id="09fb3-124">編集モードで書式指定文字列をフィールド値に適用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09fb3-124"><see langword="true" /> if the formatting string applies to the field value in edit mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="09fb3-125">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="09fb3-125">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09fb3-126">既定では、書式設定文字列で指定されている、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A>プロパティは、データ バインド コントロールが読み取り専用モードの場合にのみ、フィールド値に適用します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-126">By default, the formatting string that is specified by the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09fb3-127">次の例は、使用する方法を示します、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A>データ フィールドが編集モードの場合は、日付情報の表示形式を設定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="09fb3-127">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A> property to set the display format for date information when the data field is in edit mode.</span></span> <span data-ttu-id="09fb3-128">データ フィールドに使用するデータ フィールドの形式が設定で指定された、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="09fb3-128">The data field format to use for the data field is specified by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#4)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09fb3-129">データ ソースのデータ フィールドを更新するときに、空の文字列値 ("") を <see langword="null" /> に自動的に変換するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-129">Gets or sets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> when the data field is updated in the data source.</span></span></summary>
        <value><span data-ttu-id="09fb3-130">空の文字列値を <see langword="true" /> に自動的に変換する場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09fb3-130"><see langword="true" /> if empty string values are automatically converted to <see langword="null" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="09fb3-131">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="09fb3-131">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09fb3-132">ユーザーは、フィールド値の空の文字列を入力する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="09fb3-132">Users might enter an empty string for a field value.</span></span> <span data-ttu-id="09fb3-133">使用して、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A>プロパティを空の文字列値は自動的に変換するかどうかを指定する`null`データベースにデータ フィールドが更新されたとき。</span><span class="sxs-lookup"><span data-stu-id="09fb3-133">Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to `null` when the data field is updated in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09fb3-134">既定で、<xref:System.Web.DynamicData.DynamicField>オブジェクトの表示`null`として空の文字列値。</span><span class="sxs-lookup"><span data-stu-id="09fb3-134">By default, a <xref:System.Web.DynamicData.DynamicField> object displays `null` values as empty strings.</span></span> <span data-ttu-id="09fb3-135">別の値を表示するには、設定、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="09fb3-135">To display a different value, set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09fb3-136">次の例は、使用する方法を示します、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A>に空の文字列値の変換を有効にする`null`します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-136">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> to enable the conversion of empty string values to `null`.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09fb3-137">フィールド値の表示形式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-137">Gets or sets the display format for the field value.</span></span></summary>
        <value><span data-ttu-id="09fb3-138">データ フィールドの値の表示形式を指定する書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="09fb3-138">A formatting string that specifies the display format for the value of the data field.</span></span> <span data-ttu-id="09fb3-139">既定値は空の文字列です ("")。この値は、フィールド値に適用される特定の書式が設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-139">The default is an empty string (""), which indicates that no special formatting is applied to the field value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09fb3-140">使用して、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A>で表示される値のカスタムの表示形式を指定するプロパティ、<xref:System.Web.DynamicData.DynamicField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09fb3-140">Use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="09fb3-141">場合、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A>プロパティが設定されていない場合、特別な書式を持たない、フィールドの値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="09fb3-141">If the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting.</span></span> <span data-ttu-id="09fb3-142">詳細については、[型の書式設定](~/docs/standard/base-types/formatting-types.md)に関するページをご覧ください。</span><span class="sxs-lookup"><span data-stu-id="09fb3-142">For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09fb3-143">ときに、<xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType>プロパティは`true`フィールドの値は、HTML 書式設定文字列が適用される前に、文字列表現にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="09fb3-143">When the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> property is `true`, the value of the field is HTML encoded to its string representation before the formatting string is applied.</span></span> <span data-ttu-id="09fb3-144">日付など、一部のオブジェクトを書式設定文字列、オブジェクトを表示する方法を制御する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="09fb3-144">For some objects, such as dates, you might want to control how the object is displayed with a formatting string.</span></span> <span data-ttu-id="09fb3-145">その場合、設定する必要があります、<xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType>プロパティを`false`します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-145">In those cases, you must set the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=nameWithType> property to `false`.</span></span>  
  
 <span data-ttu-id="09fb3-146">既定では、書式指定文字列がフィールドの値に適用、データ バインド コントロールを格納している場合にのみ、<xref:System.Web.DynamicData.DynamicField>オブジェクトは読み取り専用モードにします。</span><span class="sxs-lookup"><span data-stu-id="09fb3-146">By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode.</span></span> <span data-ttu-id="09fb3-147">編集モードの場合は、書式指定文字列をフィールド値に適用するには、設定、<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-147">To apply the formatting string to field values when they are in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="09fb3-148">書式指定文字列に任意のリテラル文字列をでき、通常、フィールドの値のプレース ホルダーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="09fb3-148">The formatting string can be any literal string and usually includes a placeholder for the field's value.</span></span> <span data-ttu-id="09fb3-149">書式指定文字列の例では、"アイテムの値: {0}"、フィールドの値を置き換える、{0}プレース ホルダー文字列が表示されたら、<xref:System.Web.DynamicData.DynamicField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09fb3-149">For example, in the formatting string "Item Value: {0}", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="09fb3-150">書式指定文字列の残りの部分は、リテラル テキストとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="09fb3-150">The remainder of the formatting string is displayed as literal text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09fb3-151">書式指定文字列にプレース ホルダーが含まれていない場合、データ ソースからのフィールドの値は、最終的な表示テキストには含まれません。</span><span class="sxs-lookup"><span data-stu-id="09fb3-151">If the formatting string does not include a placeholder, the field's value from the data source is not included in the final display text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09fb3-152">次の例を使用する方法を示して、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A>データ フィールドの表示形式を設定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="09fb3-152">The following examples show how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property to set the display format of data fields.</span></span> <span data-ttu-id="09fb3-153">最初の例では、通貨型のデータ フィールドの表示形式を設定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-153">The first example sets the display format for a currency type data field.</span></span> <span data-ttu-id="09fb3-154">2 番目の例では、日付型のデータ フィールドの表示形式を設定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-154">The second example sets the display format for a date type data field.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#3)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#3)]  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#4)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="09fb3-155">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="09fb3-155">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetNullDisplayText">
      <MemberSignature Language="C#" Value="public string GetNullDisplayText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNullDisplayText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.GetNullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNullDisplayText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNullDisplayText();" />
      <MemberSignature Language="F#" Value="member this.GetNullDisplayText : unit -&gt; string" Usage="displayFormatAttribute.GetNullDisplayText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09fb3-156">フィールドを HTML エンコードするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-156">Gets or sets a value that indicates whether the field should be HTML-encoded.</span></span></summary>
        <value><span data-ttu-id="09fb3-157">フィールドを HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09fb3-157"><see langword="true" /> if the field should be HTML-encoded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09fb3-158">フィールドの値が <see langword="null" /> の場合にフィールドに表示するテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-158">Gets or sets the text that is displayed for a field when the field's value is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="09fb3-159">フィールドの値が <see langword="null" /> の場合にフィールドに表示されるテキスト。</span><span class="sxs-lookup"><span data-stu-id="09fb3-159">The text that is displayed for a field when the field's value is <see langword="null" />.</span></span> <span data-ttu-id="09fb3-160">既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-160">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09fb3-161">場合によってデータ フィールドの値は、ソースの null 値として格納されます。</span><span class="sxs-lookup"><span data-stu-id="09fb3-161">Sometimes a data field's value is stored as null values in the source.</span></span> <span data-ttu-id="09fb3-162">設定して null 値を持つデータ フィールドに表示するカスタム テキストを指定することができます、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="09fb3-162">You can specify custom text to display for data fields that have a null value by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property.</span></span> <span data-ttu-id="09fb3-163">Null フィールドの値が空の文字列として表示される場合、このプロパティが設定されていない ("")。</span><span class="sxs-lookup"><span data-stu-id="09fb3-163">If this property is not set, null field values are displayed as empty strings ("").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09fb3-164">設定する必要があります、空の文字列フィールドの値を null 値に変換する、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-164">To convert an empty string field value to a null value, you must set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09fb3-165">次の例は、使用する方法を示します、<xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A>データ フィールドがあるときに表示されるキャプションを定義する`null`します。</span><span class="sxs-lookup"><span data-stu-id="09fb3-165">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> to define a caption to display when the data field is `null`.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/CS/product.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute/VB/product.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="NullDisplayTextResourceType">
      <MemberSignature Language="C#" Value="public Type NullDisplayTextResourceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type NullDisplayTextResourceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayTextResourceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ NullDisplayTextResourceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayTextResourceType : Type with get, set" Usage="System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayTextResourceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>