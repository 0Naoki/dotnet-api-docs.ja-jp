<Type Name="RegularExpressionAttribute" FullName="System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0327160b2d2303863fc0c9340fe49d23593a545" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48674954" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionAttribute extends System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionAttribute&#xA;Inherits ValidationAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionAttribute : System::ComponentModel::DataAnnotations::ValidationAttribute" />
  <TypeSignature Language="F#" Value="type RegularExpressionAttribute = class&#xA;    inherit ValidationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.ValidationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="706e6-101">ASP.NET Dynamic Data のデータ フィールド値が指定した正規表現に一致しなければならないことを指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="706e6-101">Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="706e6-102">正規表現に対してプロパティの値を検証する必要がある場合は、RegularExpressionAttribute 属性をプロパティに適用します。</span><span class="sxs-lookup"><span data-stu-id="706e6-102">You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression.</span></span> <span data-ttu-id="706e6-103">正規表現では、非常に正確に有効な値の形式を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="706e6-103">The regular expression enables you to specify very precisely the format of valid values.</span></span> <span data-ttu-id="706e6-104">Pattern プロパティには、正規表現が含まれています。プロパティの値が null または空の文字列の場合 ("")、値が自動的に RegularExpressionAttribute 属性の検証を渡します。</span><span class="sxs-lookup"><span data-stu-id="706e6-104">The Pattern property contains the regular expression.If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute.</span></span> <span data-ttu-id="706e6-105">値がないことを検証する`null`または空の文字列を使用して、 **RequiredAttribute**属性。</span><span class="sxs-lookup"><span data-stu-id="706e6-105">To validate that the value is not `null` or an empty string, use the **RequiredAttribute** attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="706e6-106">次の例は、使用する方法を示します、 <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> FirstName および LastName のデータ フィールドを検証する属性。</span><span class="sxs-lookup"><span data-stu-id="706e6-106">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to validate the FirstName and LastName data fields.</span></span> <span data-ttu-id="706e6-107">正規表現は、最大 40 文字を大文字と小文字を使用できます。</span><span class="sxs-lookup"><span data-stu-id="706e6-107">The regular expression allows up to 40 uppercase and lowercase characters.</span></span> <span data-ttu-id="706e6-108">例では、次のタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="706e6-108">The example performs the following tasks:</span></span>  
  
-   <span data-ttu-id="706e6-109">メタデータの部分クラスと関連付けられているメタデータ クラスを実装します。</span><span class="sxs-lookup"><span data-stu-id="706e6-109">Implements a metadata partial class and the associated metadata class.</span></span>  
  
-   <span data-ttu-id="706e6-110">関連付けられているメタデータ クラスでは、適用、 <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> FirstName と LastName をデータ フィールドに、パターンとカスタム エラー メッセージを指定する属性します。</span><span class="sxs-lookup"><span data-stu-id="706e6-110">In the associated metadata class, applies the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionAttribute (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionAttribute(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute : string -&gt; System.ComponentModel.DataAnnotations.RegularExpressionAttribute" Usage="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="706e6-111">データ フィールド値の検証に使用する正規表現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-111">The regular expression that is used to validate the data field value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="706e6-112">
            <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-112">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="706e6-113">次の例では、適用する方法を示しています、<xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute>データ フィールドにします。</span><span class="sxs-lookup"><span data-stu-id="706e6-113">The following example shows how to apply the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> to a data field.</span></span> <span data-ttu-id="706e6-114">検証に失敗した場合の例のコードには、動的なデータによって提供される検証エラー メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="706e6-114">If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="706e6-115">
            <paramref name="pattern" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-115">
              <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorMessage">
      <MemberSignature Language="C#" Value="public override string FormatErrorMessage (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatErrorMessage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatErrorMessage (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatErrorMessage(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.FormatErrorMessage : string -&gt; string" Usage="regularExpressionAttribute.FormatErrorMessage name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="706e6-116">検証失敗の原因になったフィールドの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-116">The name of the field that caused the validation failure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="706e6-117">正規表現検証が失敗した場合に表示するエラー メッセージを書式設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-117">Formats the error message to display if the regular expression validation fails.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="706e6-118">書式設定されたエラー メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-118">The formatted error message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="706e6-119"><xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A>検証エラーの原因となったデータ フィールドの名前を使用して、エラー メッセージを作成します。</span><span class="sxs-lookup"><span data-stu-id="706e6-119">The <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> creates the error message by using the name of the data field that caused the validation failure.</span></span> <span data-ttu-id="706e6-120">エラーを作成する方法をカスタマイズしたり、実行時に評価されるパラメーターを含むより複雑なメッセージを提供するカスタム検証属性でこのメソッドをオーバーライドすることができます。</span><span class="sxs-lookup"><span data-stu-id="706e6-120">You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : obj -&gt; bool" Usage="regularExpressionAttribute.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="706e6-121">検証するデータ フィールド値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-121">The data field value to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="706e6-122">ユーザーが入力した値が正規表現パターンと一致するかどうかをチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-122">Checks whether the value entered by the user matches the regular expression pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="706e6-123">検証が成功した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-123">
              <see langword="true" /> if validation is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
          <span data-ttu-id="706e6-124">データ フィールド値が正規表現パターンと一致しませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-124">The data field value did not match the regular expression pattern.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeoutInMilliseconds">
      <MemberSignature Language="C#" Value="public int MatchTimeoutInMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchTimeoutInMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeoutInMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MatchTimeoutInMilliseconds { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeoutInMilliseconds : int with get, set" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="706e6-125">操作がタイムアウトする前に 1 つの一致操作を実行するミリ秒単位の時間を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-125">Gets or set the amount of time in milliseconds to execute a single matching operation before the operation times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="706e6-126">1 つの一致操作を実行するミリ秒単位の時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-126">The amount of time in milliseconds to execute a single matching operation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="706e6-127">正規表現パターンを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-127">Gets the regular expression pattern.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="706e6-128">一致しているか検証するパターン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="706e6-128">The pattern to match.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>