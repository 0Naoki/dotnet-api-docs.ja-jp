<Type Name="AssemblyInfo" FullName="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d522b255e0ba46c227efbe49197a344b6dad594" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30340526" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AssemblyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AssemblyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>バージョン番号、説明、読み込まれているアセンブリなど、アプリケーションに関する情報を取得するためのプロパティを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって公開されるプロパティの一部、`My.Application.Info`オブジェクトには、アプリケーションのアセンブリ情報が返されます。 アプリケーションのアセンブリ内の情報を設定するに使用する必要があります、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。  
  
 `My.Application.Info`オブジェクトと同様の機能を提供する、<xref:System.Diagnostics.FileVersionInfo>クラスが、最も一般的なプロパティにすばやくアクセスできるようにスコープが設定されます。  
  
 その他のプロパティなど`LoadedAssemblies`アプリケーションの現在の状態へのアクセスを提供します。  
  
   
  
## Examples  
 この例では、`My.Application.Info.Version`プロパティをアプリケーションのバージョンを表示します。  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
    <altmember cref="T:System.Diagnostics.FileVersionInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInfo (System.Reflection.Assembly currentAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.Reflection.Assembly currentAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (currentAssembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyInfo(System::Reflection::Assembly ^ currentAssembly);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="currentAssembly">
          <see cref="T:System.Reflection.Assembly" />。 情報を取得するアセンブリです。</param>
        <summary>指定したアセンブリ情報を使用して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのアセンブリ ファイル名のうち、拡張子を除いた部分を取得します。</summary>
        <value>ファイル名を保持する <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.AssemblyName`プロパティは、マニフェストを含むファイルの名前を取得します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.AssemblyName`プロパティをアプリケーションの名前を表示します。  
  
 [!code-vb[VbVbalrMyApplication#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられている会社名を取得します。</summary>
        <value>アプリケーションに関連付けられた会社名を保持する <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.CompanyName`プロパティは、アプリケーションに関連付けられている会社名を取得します。  
  
 値を変更することで、会社名を変更することができます**会社**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.CompanyName`プロパティをアプリケーションに関連付けられている会社名を表示します。  
  
 [!code-vb[VbVbalrMyApplication#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyCompanyAttribute" /> 属性がありません。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public string Copyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Copyright" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Copyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Copyright { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられている著作権表記を取得します。</summary>
        <value>アプリケーションに関連付けられた著作権表記を保持する <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Copyright`プロパティは、アプリケーションに関連付けられている著作権情報を取得します。  
  
 値を変更することによって、著作権の通知を変更することができます**著作権**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.Copyright`プロパティをアプリケーションに関連付けられている会社名を表示します。  
  
 [!code-vb[VbVbalrMyApplication#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyCopyrightAttribute" /> 属性がありません。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関する説明を取得します。</summary>
        <value>アプリケーションの説明を保持する <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Description`プロパティは、アプリケーションに関連付けられた説明を取得します。  
  
 値を変更することで、説明を変更することができます**説明**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.Description`プロパティをアプリケーションに関連付けられた説明を表示します。  
  
 [!code-vb[VbVbalrMyApplication#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 属性がありません。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションが格納されているディレクトリを取得します。</summary>
        <value>アプリケーションが格納されているディレクトリを保持する <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.DirectoryPath`プロパティは、アプリケーションが格納されているディレクトリを取得します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.DirectoryPath`プロパティをアプリケーションを保存するディレクトリ パスを表示します。  
  
 [!code-vb[VbVbalrMyApplication#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#24)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="LoadedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt; LoadedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Reflection.Assembly&gt; LoadedAssemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LoadedAssemblies As ReadOnlyCollection(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ LoadedAssemblies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションによって読み込まれたすべてのアセンブリのコレクションを取得します。</summary>
        <value>アプリケーションによって読み込まれたすべてのアセンブリを保持する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> の <see cref="T:System.Reflection.Assembly" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.LoadedAssemblies`プロパティがに似ていますが、<xref:System.AppDomain.GetAssemblies%2A>メソッドです。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.LoadedAssemblies`アプリケーションによって読み込まれるアセンブリを表示するプロパティです。  
  
 [!code-vb[VbVbalrMyApplication#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#25)]  
  
 この例では、Windows フォーム アプリケーションがある必要があります、<xref:System.Windows.Forms.ListBox>という名前のコントロール`ListBox1`です。  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <exception cref="T:System.AppDomainUnloadedException">アプリケーション ドメインが読み込まれていません。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.Reflection.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられている製品名を取得します。</summary>
        <value>アプリケーションに関連付けられた製品名を保持する <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.ProductName`プロパティは、アプリケーションに関連付けられている製品名を取得します。  
  
 値を変更することによって、製品名を変更することができます**製品**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.ProductName`プロパティをアプリケーションに関連付けられている製品名を表示します。  
  
 [!code-vb[VbVbalrMyApplication#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyProductAttribute" /> 属性がありません。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のスタック トレース情報を取得します。</summary>
        <value>現在のスタック トレース情報を保持する <see langword="String" />。 戻り値が <see cref="F:System.String.Empty" /> になる場合もあります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.StackTrace`プロパティ リストから順にメソッドの呼び出し、つまり、最初に、最新のメソッド呼び出しについて説明し、行ごとに、スタックの各メソッド呼び出しが一覧表示されます。 ただし、`My.Application.Info.StackTrace`プロパティは多くのメソッド呼び出しの最適化中に実行されたコード変換のため、期待どおりに、報告可能性があります。  
  
 通常、スタック トレース情報は、アプリケーションのデバッグに使用されます。  
  
 各メソッド呼び出しのスタック トレース情報の形式は次のとおりです。  
  
 "で*FullClassName*.*MethodName*(*MethodParams*) で*FileName*: ライン*LineNumber* "  
  
 「アット」リテラルが 3 つのスペース、および"in"リテラル続くと": 行"デバッグ シンボルが利用できない場合は省略します。 プレース ホルダー `FullClassName`、 `MethodName`、 `MethodParams`、 `FileName`、および`LineNumber`次のように定義されている実際の値に置き換えられます。  
  
|パーツ|説明|  
|----------|-----------------|  
|*FullClassName*|名前空間を含むクラスの完全名。|  
|*MethodName*|メソッドの名前。|  
|*MethodParams*|パラメーターの型/名前の組み合わせの一覧。 各ペアは、コンマ (,) で区切られます。 場合、この情報は省略されます*MethodName* 0 パラメーターを受け取ります。|  
|*FileName*|ソースの名前のファイルの場所、 *MethodName*メソッドを宣言します。 デバッグ シンボルが利用できない場合、この情報は省略されます。|  
|*LineNumber*|内の行の数*FileName*からソース コードを含む*MethodName*コール スタック上にある命令のです。 デバッグ シンボルが利用できない場合、この情報は省略されます。|  
  
 `My.Applicaiton.Info.StackTrace`プロパティと同様の機能を提供する、<xref:System.Environment.StackTrace%2A>プロパティです。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.StackTrace`プロパティをアプリケーションのコードが実行され、ポイントからのスタック トレースを表示します。  
  
 [!code-vb[VbVbalrMyApplication#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">要求されたスタック トレース情報が指定範囲外です。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルのパス内の情報へのアクセスを制御します。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> (関連する列挙体)</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられているタイトルを取得します。</summary>
        <value>アプリケーションに関連付けられた <see cref="T:System.Reflection.AssemblyTitleAttribute" /> を保持する <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Title`プロパティは、アプリケーションに関連付けられているタイトルを取得します。  
  
 値を変更することで、タイトルを変更することができます**タイトル**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.Title`アプリケーションに関連付けられているタイトルを表示するプロパティです。  
  
 [!code-vb[VbVbalrMyApplication#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 属性がありません。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Trademark">
      <MemberSignature Language="C#" Value="public string Trademark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Trademark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trademark As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Trademark { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられている商標表記を取得します。</summary>
        <value>アプリケーションに関連付けられた商標表記を保持する <see langword="String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Trademark`プロパティは、アプリケーションに関連付けられている商標表記を取得します。  
  
 値を変更することで、商標の通知を変更する**商標**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.Trademark`プロパティをアプリケーションに関連付けられている商標情報を表示します。  
  
 [!code-vb[VbVbalrMyApplication#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリに <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 属性がありません。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのバージョン番号を取得します。</summary>
        <value>アプリケーションのバージョン番号を保持する <see cref="T:System.Version" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.Version`プロパティを取得、<xref:System.Version>アプリケーションのバージョン番号を含むオブジェクト。 使用することができます、 <xref:System.Version.Major%2A>、 <xref:System.Version.Minor%2A>、 <xref:System.Version.Build%2A>、および<xref:System.Version.Revision%2A>のプロパティ、<xref:System.Version>アプリケーションに関する特定のバージョン情報にアクセスするオブジェクト。  
  
 アプリケーションの ClickOnce 配置を使用する必要があります、<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>のプロパティ、<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A>プロパティです。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.Version`プロパティをアプリケーションのバージョンを表示します。  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">アプリケーションがアセンブリのバージョンにアクセスするのに必要なアクセス許可を持っていません。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment" />
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkingSet As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long WorkingSet { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロセス コンテキストに割り当てられる物理メモリ量を取得します。</summary>
        <value>プロセス コンテキストに割り当てられる物理メモリのバイト数を保持する <see langword="Long" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Info.WorkingSet`プロパティと同じ動作には、<xref:System.Environment.WorkingSet%2A>プロパティです。  
  
> [!NOTE]
>  このプロパティは、Windows 98 および Windows Millennium Edition に対して 0 を常に返します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|------------------|---------------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|×|  
|Windows サービス|**はい**|  
|Web サイト|×|  
  
   
  
## Examples  
 この例では、`My.Application.Info.WorkingSet`プロパティをアプリケーションに割り当てられる物理メモリのバイト数を表示します。  
  
 [!code-vb[VbVbalrMyApplication#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">すべての環境変数へのアクセスを制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.WorkingSet" />
      </Docs>
    </Member>
  </Members>
</Type>