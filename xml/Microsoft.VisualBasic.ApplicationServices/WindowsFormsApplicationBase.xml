<Type Name="WindowsFormsApplicationBase" FullName="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b20b8fa74b08967ff8beb13c8da4f4e47f01e07c" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58875282" /></Metadata><TypeSignature Language="C#" Value="public class WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WindowsFormsApplicationBase extends Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsFormsApplicationBase&#xA;Inherits ConsoleApplicationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsFormsApplicationBase : Microsoft::VisualBasic::ApplicationServices::ConsoleApplicationBase" />
  <TypeSignature Language="F#" Value="type WindowsFormsApplicationBase = class&#xA;    inherit ConsoleApplicationBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="33902-101">現在のアプリケーションに関するプロパティ、メソッド、およびイベントを提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-101">Provides properties, methods, and events related to the current application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-102">によって公開されるプロパティ、`My.Application`オブジェクトの現在のアプリケーションまたは DLL にのみ関連付けられているデータを返す。</span><span class="sxs-lookup"><span data-stu-id="33902-102">The properties exposed by the `My.Application` object return data that is associated only with the current application or DLL.</span></span> <span data-ttu-id="33902-103">システム レベル以外の情報は、`My.Application` に変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="33902-103">No system-level information can be altered with `My.Application`.</span></span>  
  
 <span data-ttu-id="33902-104">`My.Application` オブジェクトは、次のクラスで構成されています。</span><span class="sxs-lookup"><span data-stu-id="33902-104">The `My.Application` object consists of the following classes:</span></span>  
  
-   <span data-ttu-id="33902-105"><xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> は、すべてのプロジェクトで使用可能なメンバーを提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-105"><xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> provides members that are available in all projects.</span></span>  
  
-   <span data-ttu-id="33902-106"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> Windows フォーム アプリケーションで使用可能なメンバーを提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-106"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> provides members that are available in Windows Forms applications.</span></span>  
  
-   <span data-ttu-id="33902-107"><xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> コンソール アプリケーションで使用可能なメンバーを提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-107"><xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> provides members that are available in console applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33902-108">この例は、アプリケーションの開いているフォームを反復処理するループを使用して、現在のスレッドによって直接アクセスできるフォームを選択しのタイトルを表示します、<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="33902-108">This example uses a loop to iterate through the application's open forms, selects the forms that can be accessed directly by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="33902-109">開いているフォームにアクセスする方法については、次を参照してください。<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms%2A>します。</span><span class="sxs-lookup"><span data-stu-id="33902-109">For information about how to access the open forms, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms%2A>.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#10)]  
  
 <span data-ttu-id="33902-110">この例では、Windows フォーム アプリケーションは、という名前のフォームである必要があります`Form1`というリスト ボックスを格納している`ListBox1`します。</span><span class="sxs-lookup"><span data-stu-id="33902-110">This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-111">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-111">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33902-112"><see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="33902-112">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsApplicationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsApplicationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33902-113"><see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="33902-113">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-114">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-114">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsApplicationBase (Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(valuetype Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsApplicationBase(Microsoft::VisualBasic::ApplicationServices::AuthenticationMode authenticationMode);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.AuthenticationMode -&gt; Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" Usage="new Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase authenticationMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="authenticationMode" Type="Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />
      </Parameters>
      <Docs>
        <param name="authenticationMode"><span data-ttu-id="33902-115">アプリケーションの認証モードを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="33902-115">One of the enumeration values that specifies the application's authentication mode.</span></span></param>
        <summary><span data-ttu-id="33902-116">認証モードを指定して、<see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="33902-116">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> class with the specified authentication mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-117">場合、`authenticationMode`パラメーターは、<xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows>列挙値では、このコンス トラクターは、現在のスレッドの設定を試みます<xref:System.Threading.Thread.CurrentPrincipal%2A>プロパティを<xref:System.Security.Principal.WindowsPrincipal>現在のユーザー。</span><span class="sxs-lookup"><span data-stu-id="33902-117">If the `authenticationMode` parameter is the <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows> enumeration value, then this constructor attempts to set the current thread's <xref:System.Threading.Thread.CurrentPrincipal%2A> property to the <xref:System.Security.Principal.WindowsPrincipal> for the current user.</span></span>  
  
 <span data-ttu-id="33902-118">場合、`authenticationMode`パラメーターは、<xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined>列挙値では、このコンス トラクターが現在のスレッドの<xref:System.Threading.Thread.CurrentPrincipal%2A>プロパティは変更されません。</span><span class="sxs-lookup"><span data-stu-id="33902-118">If the `authenticationMode` parameter is the <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined> enumeration value, then this constructor leaves the current thread's <xref:System.Threading.Thread.CurrentPrincipal%2A> property unchanged.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-119">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-119">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationContext">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ApplicationContext ApplicationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ApplicationContext ApplicationContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationContext As ApplicationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ApplicationContext ^ ApplicationContext { System::Windows::Forms::ApplicationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationContext : System.Windows.Forms.ApplicationContext" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ApplicationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-120">Windows フォーム アプリケーションの現在のスレッドについて、<see cref="T:System.Windows.Forms.ApplicationContext" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="33902-120">Gets the <see cref="T:System.Windows.Forms.ApplicationContext" /> object for the current thread of a Windows Forms application.</span></span></summary>
        <value><span data-ttu-id="33902-121">現在のスレッドに関するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="33902-121">Contextual information about the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-122">これは、高度なメンバーの場合。クリックしない限り、IntelliSense では表示されない、**すべて**タブ。</span><span class="sxs-lookup"><span data-stu-id="33902-122">This is an advanced member; it does not appear in IntelliSense unless you click the **All** tab.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-123">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-123">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-124">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-124">Project type</span></span>|<span data-ttu-id="33902-125">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-125">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-126">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-126">Windows Forms Application</span></span>|<span data-ttu-id="33902-127">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-127">**Yes**</span></span>|  
|<span data-ttu-id="33902-128">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-128">Class Library</span></span>|<span data-ttu-id="33902-129">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-129">No</span></span>|  
|<span data-ttu-id="33902-130">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-130">Console Application</span></span>|<span data-ttu-id="33902-131">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-131">No</span></span>|  
|<span data-ttu-id="33902-132">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-132">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-133">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-133">No</span></span>|  
|<span data-ttu-id="33902-134">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-134">Web Control Library</span></span>|<span data-ttu-id="33902-135">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-135">No</span></span>|  
|<span data-ttu-id="33902-136">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-136">Windows Service</span></span>|<span data-ttu-id="33902-137">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-137">No</span></span>|  
|<span data-ttu-id="33902-138">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-138">Web Site</span></span>|<span data-ttu-id="33902-139">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-139">No</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ApplicationContext" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-140">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-140">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DoEvents">
      <MemberSignature Language="C#" Value="public void DoEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DoEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoEvents();" />
      <MemberSignature Language="F#" Value="member this.DoEvents : unit -&gt; unit" Usage="windowsFormsApplicationBase.DoEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33902-141">メッセージ キューに現在ある Windows メッセージをすべて処理します。</span><span class="sxs-lookup"><span data-stu-id="33902-141">Processes all Windows messages currently in the message queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-142">`My.Application.DoEvents`メソッドは、アプリケーションを処理するコードの実行中に発生する可能性がありますのあるその他のイベントを使用します。</span><span class="sxs-lookup"><span data-stu-id="33902-142">The `My.Application.DoEvents` method allows your application to handle other events that might be raised while you code runs.</span></span> <span data-ttu-id="33902-143">`My.Application.DoEvents`メソッドと同じ動作には、<xref:System.Windows.Forms.Application.DoEvents%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="33902-143">The `My.Application.DoEvents` method has the same behavior as the <xref:System.Windows.Forms.Application.DoEvents%2A> method.</span></span>  
  
 <span data-ttu-id="33902-144">Windows フォーム アプリケーションを実行するときにイベントが処理されるを待機し、新しいフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="33902-144">When you run a Windows Forms application, it creates a new form, which then waits for events to be handled.</span></span> <span data-ttu-id="33902-145">フォームは、イベントを処理するたびにボタンのクリックしてなどは処理そのイベントに関連付けられているすべてのコード。</span><span class="sxs-lookup"><span data-stu-id="33902-145">Each time the form handles an event, such as a button click, it processes all the code associated with that event.</span></span> <span data-ttu-id="33902-146">その他のすべてのイベントは、キューで待機します。</span><span class="sxs-lookup"><span data-stu-id="33902-146">All other events wait in the queue.</span></span> <span data-ttu-id="33902-147">コードでは、イベントを処理するときに、アプリケーションは応答しません。</span><span class="sxs-lookup"><span data-stu-id="33902-147">While your code handles the event, your application does not respond.</span></span> <span data-ttu-id="33902-148">たとえば、ウィンドウが再描画されない別のウィンドウが手前にドラッグした場合。</span><span class="sxs-lookup"><span data-stu-id="33902-148">For example, the window does not repaint if another window is dragged on top.</span></span>  
  
 <span data-ttu-id="33902-149">呼び出す場合`My.Application.DoEvents`コードでは、アプリケーションが他のイベントを処理できます。</span><span class="sxs-lookup"><span data-stu-id="33902-149">If you call `My.Application.DoEvents` in your code, your application can handle the other events.</span></span> <span data-ttu-id="33902-150">たとえば、次のコードの追加データを<xref:System.Windows.Forms.ListBox>と呼び出すループの各手順の後に、ループ内で`My.Application.DoEvents`、上にある別のウィンドウがドラッグされるときに、フォームが再描画します。</span><span class="sxs-lookup"><span data-stu-id="33902-150">For example, if your code adds data to a <xref:System.Windows.Forms.ListBox> in a loop, and after each step of the loop it calls `My.Application.DoEvents`, your form repaints when another window is dragged over it.</span></span> <span data-ttu-id="33902-151">削除する場合`My.Application.DoEvents`、コードから、フォームが再描画されないボタンの click イベント ハンドラーが完了するまで実行します。</span><span class="sxs-lookup"><span data-stu-id="33902-151">If you remove `My.Application.DoEvents` from your code, your form will not repaint until the click event handler of the button is finished executing.</span></span>  
  
 <span data-ttu-id="33902-152">通常、メッセージを処理するループ内でこのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="33902-152">Typically, you use this method in a loop to process messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33902-153">`My.Application.DoEvents`フォームは、メソッドがまったく同じ方法でイベントを処理できません。</span><span class="sxs-lookup"><span data-stu-id="33902-153">The `My.Application.DoEvents` method does not process events in exactly the same way as the form does.</span></span> <span data-ttu-id="33902-154">フォームを直接イベントを処理するマルチ スレッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="33902-154">Use multithreading to make the form directly handle the events.</span></span> <span data-ttu-id="33902-155">詳細については、次を参照してください。[マルチ スレッド アプリケーション](https://msdn.microsoft.com/library/a06a1a56-dd16-44e8-bc01-2c2255511bc6)します。</span><span class="sxs-lookup"><span data-stu-id="33902-155">For more information, see [Multithreaded Applications](https://msdn.microsoft.com/library/a06a1a56-dd16-44e8-bc01-2c2255511bc6).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="33902-156">ユーザー インターフェイス (UI) のイベントを処理するメソッドを呼び出すかどうか、`My.Application.DoEvents`メソッド、メソッドがあります再入力が完了する前にします。</span><span class="sxs-lookup"><span data-stu-id="33902-156">If a method that handles a user interface (UI) event calls the `My.Application.DoEvents` method, the method might be re-entered before it finishes.</span></span> <span data-ttu-id="33902-157">これは、ようになるため、`My.Application.DoEvents`メソッドは、Windows メッセージを処理し、Windows メッセージは、イベントを発生させることができます。</span><span class="sxs-lookup"><span data-stu-id="33902-157">This can happen because the `My.Application.DoEvents` method processes Windows messages, and Windows messages can raise events.</span></span>  
  
 <span data-ttu-id="33902-158">次の表に、関連するタスクの例、`My.Application.DoEvents`メソッド。</span><span class="sxs-lookup"><span data-stu-id="33902-158">The following table lists an example of a task involving the `My.Application.DoEvents` method.</span></span>  
  
|<span data-ttu-id="33902-159">終了</span><span class="sxs-lookup"><span data-stu-id="33902-159">To</span></span>|<span data-ttu-id="33902-160">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33902-160">See</span></span>|  
|-|-|  
|<span data-ttu-id="33902-161">UI 中にビジー状態の入力に応答するためのフォームを許可します。</span><span class="sxs-lookup"><span data-stu-id="33902-161">Allow a form to respond to UI input while busy</span></span>|[<span data-ttu-id="33902-162">チュートリアル : イベントの処理</span><span class="sxs-lookup"><span data-stu-id="33902-162">Walkthrough: Handling Events</span></span>](~/docs/visual-basic/programming-guide/language-features/events/walkthrough-handling-events.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-163">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-163">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-164">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-164">Project type</span></span>|<span data-ttu-id="33902-165">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-165">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-166">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-166">Windows Forms Application</span></span>|<span data-ttu-id="33902-167">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-167">**Yes**</span></span>|  
|<span data-ttu-id="33902-168">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-168">Class Library</span></span>|<span data-ttu-id="33902-169">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-169">No</span></span>|  
|<span data-ttu-id="33902-170">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-170">Console Application</span></span>|<span data-ttu-id="33902-171">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-171">No</span></span>|  
|<span data-ttu-id="33902-172">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-172">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-173">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-173">No</span></span>|  
|<span data-ttu-id="33902-174">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-174">Web Control Library</span></span>|<span data-ttu-id="33902-175">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-175">No</span></span>|  
|<span data-ttu-id="33902-176">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-176">Windows Service</span></span>|<span data-ttu-id="33902-177">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-177">No</span></span>|  
|<span data-ttu-id="33902-178">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-178">Web Site</span></span>|<span data-ttu-id="33902-179">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-179">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-180">この例では、`My.Application.DoEvents`メソッド用の UI を`TextBox1`を更新します。</span><span class="sxs-lookup"><span data-stu-id="33902-180">This example uses the `My.Application.DoEvents` method to allow the UI for `TextBox1` to update.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#6)]  
  
 <span data-ttu-id="33902-181">このコードは、ある形式にする必要があります、`TextBox1`コンポーネントを`Text`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-181">This code should be in a form that has a `TextBox1` component with a `Text` property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="33902-182">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-182">Controls the ability to access files and folders.</span></span> <span data-ttu-id="33902-183"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-183">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="33902-184">ユーザー インターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-184">Controls the permissions related to user interfaces and the Clipboard.</span></span> <span data-ttu-id="33902-185"><see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-185">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Application.DoEvents" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-186">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-186">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableVisualStyles">
      <MemberSignature Language="C#" Value="protected bool EnableVisualStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVisualStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Property EnableVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool EnableVisualStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableVisualStyles : bool with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-187">このアプリケーションで、ウィンドウやコントロールなどに Windows XP のスタイルを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="33902-187">Determines whether this application will use the Windows XP styles for windows, controls, and so on.</span></span></summary>
        <value><span data-ttu-id="33902-188">このアプリケーションが、ウィンドウやコントロールに、XP のウィンドウ スタイルを使用するかどうかを示す <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="33902-188">A <see cref="T:System.Boolean" /> value that indicates whether this application will use the XP Windows styles for windows, controls, and so on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-189"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>メソッドを呼び出すかどうかを判断するこのプロパティを使用して<xref:System.Windows.Forms.Application.EnableVisualStyles%2A>します。</span><span class="sxs-lookup"><span data-stu-id="33902-189">The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method uses this property to determine whether to call <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-190">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-190">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HideSplashScreen">
      <MemberSignature Language="C#" Value="protected void HideSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void HideSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HideSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HideSplashScreen();" />
      <MemberSignature Language="F#" Value="member this.HideSplashScreen : unit -&gt; unit" Usage="windowsFormsApplicationBase.HideSplashScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33902-191">アプリケーションのスプラッシュ スクリーンを非表示にします。</span><span class="sxs-lookup"><span data-stu-id="33902-191">Hides the application's splash screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-192"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>クラスは、別のスレッドでスプラッシュ スクリーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="33902-192">The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class creates the splash screen on a separate thread.</span></span> <span data-ttu-id="33902-193">このメソッドは、正しいスレッドの呼び出しをマーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="33902-193">This method marshals the call to the correct thread.</span></span>  
  
 <span data-ttu-id="33902-194">メイン フォームが完了したら、このメソッドが呼び出されます読み込み。</span><span class="sxs-lookup"><span data-stu-id="33902-194">This method is called when the main form is done loading.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-195">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-195">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSingleInstance">
      <MemberSignature Language="C#" Value="protected bool IsSingleInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleInstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsSingleInstance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsSingleInstance { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleInstance : bool with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-196">このアプリケーションが単一インスタンスのアプリケーションであるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="33902-196">Gets or sets a value that indicates whether this application is a single-instance application.</span></span></summary>
        <value><span data-ttu-id="33902-197"><see langword="True" /> このアプリケーションを示すためには、単一インスタンス アプリケーションです。それ以外の場合、<see langword="False" />します。</span><span class="sxs-lookup"><span data-stu-id="33902-197"><see langword="True" /> to indicate this application is a single-instance application; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-198"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A>メソッドでは、このプロパティを使用して、このアプリケーションが単一インスタンスのアプリケーションであるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="33902-198">The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A> method uses this property to determine whether this application is a single-instance application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-199">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-199">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />
      <MemberSignature Language="VB.NET" Value="Protected Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainForm : System.Windows.Forms.Form with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-200">このアプリケーションのメイン フォームを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="33902-200">Gets or sets the main form for this application.</span></span></summary>
        <value><span data-ttu-id="33902-201">このアプリケーションのメイン フォームです。</span><span class="sxs-lookup"><span data-stu-id="33902-201">The main form for this application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-202">使用して、`MainForm`プロパティを取得または設定する、 <xref:System.Windows.Forms.Form> Visual Basic アプリケーションのスタートアップ/シャット ダウン モデルは、アプリケーションのメイン フォームとして使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33902-202">Use the `MainForm` property to get or set the <xref:System.Windows.Forms.Form> object that the Visual Basic Application Startup/Shutdown model uses as the application's main form.</span></span>  
  
 <span data-ttu-id="33902-203">このプロパティは、Visual Basic アプリケーションのスタートアップ/シャット ダウン モデルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="33902-203">This property supports the Visual Basic Application Startup/Shutdown model.</span></span> <span data-ttu-id="33902-204">詳細については、次を参照してください。 [Visual Basic アプリケーション モデルの概要](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-204">For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).</span></span>  
  
 <span data-ttu-id="33902-205">アプリケーションを閉じるときに、このプロパティに対する変更は保持されません。</span><span class="sxs-lookup"><span data-stu-id="33902-205">The changes to this property are not persisted when the application closes.</span></span> <span data-ttu-id="33902-206">メイン フォームを完全に変更するで設定を変更する必要があります、**プロジェクト デザイナー**します。</span><span class="sxs-lookup"><span data-stu-id="33902-206">To change the main form permanently, you must change the setting in the **Project Designer**.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-207">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-207">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MinimumSplashScreenDisplayTime">
      <MemberSignature Language="C#" Value="public int MinimumSplashScreenDisplayTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumSplashScreenDisplayTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumSplashScreenDisplayTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumSplashScreenDisplayTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSplashScreenDisplayTime : int with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-208">スプラッシュ スクリーンを最低限表示させておく時間 (ミリ秒) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="33902-208">Gets or sets the minimum length of time, in milliseconds, for which the splash screen is displayed.</span></span></summary>
        <value><span data-ttu-id="33902-209">スプラッシュ スクリーンを表示しておく最短時間 (ミリ秒)。</span><span class="sxs-lookup"><span data-stu-id="33902-209">The minimum length of time, in milliseconds, for which the splash screen is displayed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-210">`My.Application.MinimumSplashScreenDisplayTime`プロパティでは、アプリケーションのスプラッシュ画面を表示する時間の最小長を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="33902-210">The `My.Application.MinimumSplashScreenDisplayTime` property allows you to specify the minimum length of time you want the application's splash screen to be displayed.</span></span> <span data-ttu-id="33902-211">メイン フォームでは、このプロパティで指定されているものよりも短時間で初期化が完了すると、スプラッシュ スクリーンは、要求された時間が経過する時点で、メイン フォームが表示されるまで残ります。</span><span class="sxs-lookup"><span data-stu-id="33902-211">If the main form finishes initializing in less time than what is specified by this property, the splash screen remains until the requested amount of time passes, at which time the main form is displayed.</span></span> <span data-ttu-id="33902-212">アプリケーションを起動するまでにかかる、メイン フォームがアクティブになった時点、スプラッシュ スクリーンが終了します。</span><span class="sxs-lookup"><span data-stu-id="33902-212">If your application takes longer to start, the splash screen is closed once the main form becomes active.</span></span>  
  
 <span data-ttu-id="33902-213">プロジェクト デザイナーを使用して、アプリケーションにスプラッシュ スクリーンを追加すると設定、 `My.Application.MinimumSplashScreenDisplayTime` 2000 では、2 秒間の最小の表示時間を提供するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-213">When you add a splash screen to your application using the Project Designer, it sets the `My.Application.MinimumSplashScreenDisplayTime` property to 2000, giving a minimum display time of two seconds.</span></span>  
  
 <span data-ttu-id="33902-214">このプロパティは、Visual Basic アプリケーション モデルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="33902-214">This property supports the Visual Basic Application model.</span></span> <span data-ttu-id="33902-215">詳細については、次を参照してください。 [Visual Basic アプリケーション モデルの概要](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-215">For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).</span></span>  
  
 <span data-ttu-id="33902-216">設定する必要があります、`My.Application.MinimumSplashScreenDisplayTime`プロパティをオーバーライドするメソッドで、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>または<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="33902-216">You should set the `My.Application.MinimumSplashScreenDisplayTime` property in a method that overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> or <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method.</span></span> <span data-ttu-id="33902-217">メソッドをオーバーライドするコード、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>クラスは、既定では隠されている ApplicationEvents.vb ファイルで入力してください。</span><span class="sxs-lookup"><span data-stu-id="33902-217">Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default.</span></span>  
  
| |  
|-|  
|<span data-ttu-id="33902-218">メンバーをオーバーライドするためのコード エディター ウィンドウにアクセスするには</span><span class="sxs-lookup"><span data-stu-id="33902-218">To access the Code Editor window for overriding members</span></span>|  
|<span data-ttu-id="33902-219">1.選択したプロジェクトに**ソリューション エクスプ ローラー**、 をクリックして**プロパティ**上、**プロジェクト**メニュー。</span><span class="sxs-lookup"><span data-stu-id="33902-219">1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.</span></span><br /><span data-ttu-id="33902-220">2.**[アプリケーション]** タブをクリックします。</span><span class="sxs-lookup"><span data-stu-id="33902-220">2.  Click the **Application** tab.</span></span><br /><span data-ttu-id="33902-221">3.**[アプリケーション イベントの表示]** をクリックしてコード エディターを開きます。</span><span class="sxs-lookup"><span data-stu-id="33902-221">3.  Click the **View Application Events** button to open the Code Editor.</span></span><br /><br /><span data-ttu-id="33902-222">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-222">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-223">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-223">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-224">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-224">Project type</span></span>|<span data-ttu-id="33902-225">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-225">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-226">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-226">Windows Forms Application</span></span>|<span data-ttu-id="33902-227">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-227">**Yes**</span></span>|  
|<span data-ttu-id="33902-228">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-228">Class Library</span></span>|<span data-ttu-id="33902-229">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-229">No</span></span>|  
|<span data-ttu-id="33902-230">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-230">Console Application</span></span>|<span data-ttu-id="33902-231">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-231">No</span></span>|  
|<span data-ttu-id="33902-232">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-232">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-233">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-233">No</span></span>|  
|<span data-ttu-id="33902-234">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-234">Web Control Library</span></span>|<span data-ttu-id="33902-235">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-235">No</span></span>|  
|<span data-ttu-id="33902-236">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-236">Windows Service</span></span>|<span data-ttu-id="33902-237">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-237">No</span></span>|  
|<span data-ttu-id="33902-238">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-238">Web Site</span></span>|<span data-ttu-id="33902-239">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-239">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-240">この例では、設定、`My.Application.MinimumSplashScreenDisplayTime`プロパティをオーバーライドすることで、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-240">This example demonstrates how to set the `My.Application.MinimumSplashScreenDisplayTime` property by overriding the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> property.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#51)]  
  
 <span data-ttu-id="33902-241">この例では、プロジェクトのスプラッシュ スクリーンである必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-241">This example requires that the project have a splash screen.</span></span>  
  
 <span data-ttu-id="33902-242">このコードは、アプリケーション イベントのコード エディター ウィンドウで入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-242">You must enter this code in the Code Editor window for application events.</span></span> <span data-ttu-id="33902-243">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-243">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-244">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-244">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-245">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-245">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-246">ネットワークの可用性が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="33902-246">Occurs when the network availability changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-247">アプリケーションは、`NetworkAvailabilityChanged`イベント、ネットワークの可用性が変更されるたびにします。</span><span class="sxs-lookup"><span data-stu-id="33902-247">An application raises the `NetworkAvailabilityChanged` event every time that the availability of the network changes.</span></span> <span data-ttu-id="33902-248">使用することができます、<xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>のプロパティ、`e`新しいネットワーク接続の状態を取得するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="33902-248">You can use the <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> property of the `e` parameter to get the new state of the network connection.</span></span> <span data-ttu-id="33902-249">ネットワーク接続の現在の状態を取得する、<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-249">To get the current state of the network connection, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property.</span></span>  
  
 <span data-ttu-id="33902-250">このイベントは、他のユーザー インターフェイスのイベントと、アプリケーションのメイン スレッドで発生します。</span><span class="sxs-lookup"><span data-stu-id="33902-250">This event is raised on the application's main thread with the other user-interface events.</span></span> <span data-ttu-id="33902-251">これにより、イベント ハンドラーは、アプリケーションの UI に直接アクセスできます。</span><span class="sxs-lookup"><span data-stu-id="33902-251">This enables the event handler to access directly the application's UI.</span></span> <span data-ttu-id="33902-252">ただし、アプリケーションがこのイベントが発生したときに、別のユーザー インターフェイス イベントを処理する場合は、このイベントことはできませんを処理するその他のイベント ハンドラーが完了するかを呼び出すまで、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="33902-252">However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.</span></span>  
  
 <span data-ttu-id="33902-253"><xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged>イベントは、このイベントが、すべてのアプリケーションの種類に使用できるように同じ機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-253">The <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged> event provides the same functionality as this event but is available for all application types.</span></span>  
  
 <span data-ttu-id="33902-254">コードを`NetworkAvailabilityChanged`イベント ハンドラーは、既定では隠されている ApplicationEvents.vb ファイルに格納されます。</span><span class="sxs-lookup"><span data-stu-id="33902-254">The code for the `NetworkAvailabilityChanged` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</span></span>  
  
| |  
|-|  
|<span data-ttu-id="33902-255">アプリケーション イベントのコード エディター ウィンドウにアクセスするには</span><span class="sxs-lookup"><span data-stu-id="33902-255">To access the Code Editor window for application events</span></span>|  
|<span data-ttu-id="33902-256">1.選択されているプロジェクトがある**ソリューション エクスプ ローラー。**</span><span class="sxs-lookup"><span data-stu-id="33902-256">1.  Have a project selected in **Solution Explorer.**</span></span> <span data-ttu-id="33902-257">クリックして**プロパティ**上、**プロジェクト**メニュー。</span><span class="sxs-lookup"><span data-stu-id="33902-257">Click **Properties** on the **Project** menu.</span></span><br /><span data-ttu-id="33902-258">2.**[アプリケーション]** タブをクリックします。</span><span class="sxs-lookup"><span data-stu-id="33902-258">2.  Click the **Application** tab.</span></span><br /><span data-ttu-id="33902-259">3.**[アプリケーション イベントの表示]** をクリックしてコード エディターを開きます。</span><span class="sxs-lookup"><span data-stu-id="33902-259">3.  Click the **View Application Events** button to open the Code Editor.</span></span><br /><br /><span data-ttu-id="33902-260">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-260">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="33902-261">ハブがより大きなネットワークから切断されている場合でも、多くのネットワーク ハブは、ネットワーク接続を提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-261">Many network hubs will provide a network connection even if the hub is disconnected from a larger network.</span></span> <span data-ttu-id="33902-262">その結果、ワイヤード (有線) 接続は、このイベントは、コンピューターとハブ間の接続の変更を示します。</span><span class="sxs-lookup"><span data-stu-id="33902-262">Consequently, for wired connections, this event indicates change in the connection between the computer and a hub.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33902-263">`NetworkAvailabilityChanged`アプリケーションでは、Windows 95 および Windows 98 で実行された場合、または Windows 2000 で管理者以外で実行されるときにイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="33902-263">The `NetworkAvailabilityChanged` event is not raised by applications when they are run on Windows 95 and Windows 98, or when they are run by a non-administrator on Windows 2000.</span></span> <span data-ttu-id="33902-264">これらのオペレーティング システム、アプリケーションが実行される場合、は、使用、<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>ネットワークの可用性を確認するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-264">If your application might run on those operating systems, use the <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> property to check for network availability.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-265">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-265">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-266">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-266">Project type</span></span>|<span data-ttu-id="33902-267">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-267">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-268">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-268">Windows Forms Application</span></span>|<span data-ttu-id="33902-269">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-269">**Yes**</span></span>|  
|<span data-ttu-id="33902-270">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-270">Class Library</span></span>|<span data-ttu-id="33902-271">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-271">No</span></span>|  
|<span data-ttu-id="33902-272">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-272">Console Application</span></span>|<span data-ttu-id="33902-273">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-273">No</span></span>|  
|<span data-ttu-id="33902-274">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-274">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-275">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-275">No</span></span>|  
|<span data-ttu-id="33902-276">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-276">Web Control Library</span></span>|<span data-ttu-id="33902-277">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-277">No</span></span>|  
|<span data-ttu-id="33902-278">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-278">Windows Service</span></span>|<span data-ttu-id="33902-279">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-279">No</span></span>|  
|<span data-ttu-id="33902-280">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-280">Web Site</span></span>|<span data-ttu-id="33902-281">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-281">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-282">この例では、`SetConnectionStatus`メソッドは、既定の`Form1`クラスのネットワークの可用性が変更されたとき。</span><span class="sxs-lookup"><span data-stu-id="33902-282">This example calls the `SetConnectionStatus` method of the default `Form1` class when the network availability changes.</span></span>  
  
 <span data-ttu-id="33902-283">アプリケーション イベントのコード エディター ウィンドウで、コードを入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-283">You must enter the code in the Code Editor window for application events.</span></span> <span data-ttu-id="33902-284">このウィンドウにアクセスするには、このトピックの「解説」セクションの指示に従います。</span><span class="sxs-lookup"><span data-stu-id="33902-284">To access this window, follow the instructions from this topic's Remarks section.</span></span>  
  
 <span data-ttu-id="33902-285">プロジェクトがという名前のフォームが`Form1`します。</span><span class="sxs-lookup"><span data-stu-id="33902-285">The project should have a form named `Form1`.</span></span> <span data-ttu-id="33902-286">という名前のメソッドが`SetConnectionStatus`を受け取る、`Boolean`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="33902-286">It should have a method named `SetConnectionStatus` that takes a `Boolean` parameter.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <altmember cref="N:Microsoft.VisualBasic.ApplicationServices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-287">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-287">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnCreateMainForm">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateMainForm ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnCreateMainForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateMainForm ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateMainForm();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateMainForm : unit -&gt; unit&#xA;override this.OnCreateMainForm : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnCreateMainForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33902-288">派生クラスでオーバーライドされた場合、スプラッシュ スクリーンおよびメイン フォームを設定するためのコードがデザイナーによって出力されます。</span><span class="sxs-lookup"><span data-stu-id="33902-288">When overridden in a derived class, allows a designer to emit code that configures the splash screen and main form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-289">既定では、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="33902-289">By default, this method does nothing.</span></span> <span data-ttu-id="33902-290">ただし、Visual Basic でのアプリケーションのメイン フォームを選択すると**プロジェクト デザイナー**、デザイナーを設定するメソッドでこのメソッドのオーバーライド、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>プロパティをメイン フォームの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="33902-290">However, when you select a main form for your application in the Visual Basic **Project Designer**, the designer overrides this method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> property to a new instance of the main form.</span></span>  
  
 <span data-ttu-id="33902-291">このメソッドを呼び出して、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="33902-291">This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-292">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-292">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnCreateSplashScreen">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnCreateSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateSplashScreen();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateSplashScreen : unit -&gt; unit&#xA;override this.OnCreateSplashScreen : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnCreateSplashScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33902-293">派生クラスでオーバーライドされた場合、スプラッシュ スクリーンを初期化するためのコードがデザイナーによって出力されます。</span><span class="sxs-lookup"><span data-stu-id="33902-293">When overridden in a derived class, allows a designer to emit code that initializes the splash screen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-294">既定では、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="33902-294">By default, this method does nothing.</span></span> <span data-ttu-id="33902-295">Visual Basic でのアプリケーションのスプラッシュ スクリーンを選択するかどうかは**プロジェクト デザイナー**、デザイナーをオーバーライドし、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>メソッドを設定するメソッド、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A>プロパティ スプラッシュ スクリーンのフォームの新しいインスタンスを.</span><span class="sxs-lookup"><span data-stu-id="33902-295">If you select a splash screen for your application in the Visual Basic **Project Designer**, the designer overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A> property to a new instance of the splash-screen form.</span></span>  
  
 <span data-ttu-id="33902-296">このメソッドを呼び出して、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="33902-296">This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-297">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-297">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected virtual bool OnInitialize (System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; commandLineArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnInitialize(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; commandLineArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInitialize (commandLineArgs As ReadOnlyCollection(Of String)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnInitialize(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ commandLineArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnInitialize : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; -&gt; bool&#xA;override this.OnInitialize : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; -&gt; bool" Usage="windowsFormsApplicationBase.OnInitialize commandLineArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.STAThread</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLineArgs" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="commandLineArgs"><span data-ttu-id="33902-298">現在のアプリケーションのコマンド ライン引数が文字列として格納された読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="33902-298">A read-only collection containing the command-line arguments as strings for the current application.</span></span></param>
        <summary><span data-ttu-id="33902-299">メイン アプリケーション スレッドについて、visual スタイル、テキスト表示スタイル、および (アプリケーションに Windows 認証が使用されている場合) 現在のプリンシパルを設定し、スプラッシュ スクリーンが定義されている場合は、そのスプラッシュ スクリーンを初期化します。</span><span class="sxs-lookup"><span data-stu-id="33902-299">Sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and initializes the splash screen, if defined.</span></span></summary>
        <returns><span data-ttu-id="33902-300">アプリケーションの起動を続行するかどうかを示す <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="33902-300">A <see cref="T:System.Boolean" /> indicating if application startup should continue.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-301">Visual スタイル、テキスト表示スタイル、および現在のプリンシパル (アプリケーションでは、Windows 認証を使用) する場合は、メイン アプリケーション スレッドの既定では、このメソッドを設定し、呼び出し`ShowSplashScreen`どちらの場合`/nosplash`も`-nosplash`として提供される、コマンドライン引数。</span><span class="sxs-lookup"><span data-stu-id="33902-301">By default, this method sets the visual styles, text display styles, and current principal for the main application thread (if the application uses Windows authentication), and calls `ShowSplashScreen` if neither `/nosplash` nor `-nosplash` is used as a command-line argument.</span></span>  
  
 <span data-ttu-id="33902-302">このメソッドは、次のメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="33902-302">This method calls the following methods:</span></span>  
  
-   <span data-ttu-id="33902-303"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>。</span><span class="sxs-lookup"><span data-stu-id="33902-303"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>.</span></span>  
  
-   <span data-ttu-id="33902-304"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>。</span><span class="sxs-lookup"><span data-stu-id="33902-304"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-305">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-305">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRun">
      <MemberSignature Language="C#" Value="protected virtual void OnRun ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnRun() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRun ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRun();" />
      <MemberSignature Language="F#" Value="abstract member OnRun : unit -&gt; unit&#xA;override this.OnRun : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnRun " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33902-306">初期化の完了後、メイン アプリケーションが実行される開始点を提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-306">Provides the starting point for when the main application is ready to start running, after the initialization is done.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-307">既定が、Windows フォームのメッセージ ループに入る前にこのメソッドは、 `OnCreateMainForm` (アプリケーションのメイン フォームを作成) して`HideSplashScreen`(スプラッシュ スクリーンを閉じる) をメソッド。</span><span class="sxs-lookup"><span data-stu-id="33902-307">By default, before it enters the Windows Forms message loop, this method calls the `OnCreateMainForm` (to create the application's main form) and `HideSplashScreen` (to close the splash screen) methods:</span></span>  
  
-   <span data-ttu-id="33902-308"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>。</span><span class="sxs-lookup"><span data-stu-id="33902-308"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>.</span></span> <span data-ttu-id="33902-309">デザイナーがメイン フォームを初期化するコードを生成するための方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-309">Provides a way for a designer to emit code that initializes the main form.</span></span>  
  
     <span data-ttu-id="33902-310">既定では、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="33902-310">By default, this method does nothing.</span></span> <span data-ttu-id="33902-311">ただし、Visual Basic でのアプリケーションのメイン フォームを選択すると**プロジェクト デザイナー**、デザイナーをオーバーライドし、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>メソッドを設定するメソッドを使用して、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A>プロパティをメイン フォームの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="33902-311">However, when you select a main form for your application in the Visual Basic **Project Designer**, the designer overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> method with a method that sets the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> property to a new instance of the main form.</span></span>  
  
-   <span data-ttu-id="33902-312"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>。</span><span class="sxs-lookup"><span data-stu-id="33902-312"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>.</span></span> <span data-ttu-id="33902-313">アプリケーションがスプラッシュ スクリーンが定義されている、開いている場合は、このメソッドは、スプラッシュ スクリーンを閉じます。</span><span class="sxs-lookup"><span data-stu-id="33902-313">If the application has a splash screen defined and it is open, this method closes the splash screen.</span></span>  
  
     <span data-ttu-id="33902-314">既定では、このメソッドは、スプラッシュ スクリーンを閉じます。</span><span class="sxs-lookup"><span data-stu-id="33902-314">By default, this method closes the splash screen.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-315">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-315">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShutdown();" />
      <MemberSignature Language="F#" Value="abstract member OnShutdown : unit -&gt; unit&#xA;override this.OnShutdown : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33902-316">派生クラスでオーバーライドされた場合、アプリケーションの終了時にコードを実行できるようにします。</span><span class="sxs-lookup"><span data-stu-id="33902-316">When overridden in a derived class, allows for code to run when the application shuts down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-317">このメソッドは、メイン アプリケーションでハンドルされない例外が発生した場合に実行されません。</span><span class="sxs-lookup"><span data-stu-id="33902-317">This method does not run if an unhandled exception occurs in the main application.</span></span>  
  
 <span data-ttu-id="33902-318">既定では、このメソッドは<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown>イベント。</span><span class="sxs-lookup"><span data-stu-id="33902-318">By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown> event.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-319">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-319">Extending the Visual Basic Application Model</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-320">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-320">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnStartup">
      <MemberSignature Language="C#" Value="protected virtual bool OnStartup (Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnStartup(class Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStartup (eventArgs As StartupEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStartup(Microsoft::VisualBasic::ApplicationServices::StartupEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnStartup : Microsoft.VisualBasic.ApplicationServices.StartupEventArgs -&gt; bool&#xA;override this.OnStartup : Microsoft.VisualBasic.ApplicationServices.StartupEventArgs -&gt; bool" Usage="windowsFormsApplicationBase.OnStartup eventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs"><span data-ttu-id="33902-321">アプリケーションのコマンド ライン引数です。アプリケーションの起動を取り消すかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="33902-321">The command-line arguments of the application and indicates whether the application startup should be canceled.</span></span></param>
        <summary><span data-ttu-id="33902-322">派生クラスでオーバーライドされた場合、アプリケーションの起動時にコードを実行できるようにします。</span><span class="sxs-lookup"><span data-stu-id="33902-322">When overridden in a derived class, allows for code to run when the application starts.</span></span></summary>
        <returns><span data-ttu-id="33902-323">アプリケーションの起動を続行するかどうかを示す <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="33902-323">A <see cref="T:System.Boolean" /> that indicates if the application should continue starting up.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-324">既定では、このメソッドは<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>イベント。</span><span class="sxs-lookup"><span data-stu-id="33902-324">By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> event.</span></span> <span data-ttu-id="33902-325">イベント ハンドラーを設定できる、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>イベント引数のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-325">The event handler can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the event argument.</span></span> <span data-ttu-id="33902-326">場合<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>は`True`、このメソッドが戻る`False`アプリケーションの起動をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="33902-326">If <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> is `True`, this method returns `False` to cancel the application startup.</span></span> <span data-ttu-id="33902-327">それ以外の場合、このメソッドは `True` を返します。</span><span class="sxs-lookup"><span data-stu-id="33902-327">Otherwise, this method returns `True`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-328">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-328">Extending the Visual Basic Application Model</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-329">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-329">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnStartupNextInstance">
      <MemberSignature Language="C#" Value="protected virtual void OnStartupNextInstance (Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnStartupNextInstance(class Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStartupNextInstance (eventArgs As StartupNextInstanceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStartupNextInstance(Microsoft::VisualBasic::ApplicationServices::StartupNextInstanceEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnStartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs -&gt; unit&#xA;override this.OnStartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs -&gt; unit" Usage="windowsFormsApplicationBase.OnStartupNextInstance eventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs"><span data-ttu-id="33902-330">後続のアプリケーション インスタンスのコマンド ライン引数です。例外ハンドラーの終了時に 1 つ目のアプリケーション インスタンスを前面に移動するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="33902-330">The command-line arguments of the subsequent application instance and indicates whether the first application instance should be brought to the foreground upon exiting the exception handler.</span></span></param>
        <summary><span data-ttu-id="33902-331">派生クラスでオーバーライドされた場合、単一インスタンス アプリケーションで、後続のインスタンスが起動された場合にコードを実行できるようにします。</span><span class="sxs-lookup"><span data-stu-id="33902-331">When overridden in a derived class, allows for code to run when a subsequent instance of a single-instance application starts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-332">既定では、このメソッドは<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>イベント。</span><span class="sxs-lookup"><span data-stu-id="33902-332">By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> event.</span></span> <span data-ttu-id="33902-333">イベント ハンドラーを設定できる、<xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A>イベント引数のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-333">The event handler can set the <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> property of the event argument.</span></span> <span data-ttu-id="33902-334">場合<xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A>は`True`メソッドは、メイン フォームをアクティブにします。</span><span class="sxs-lookup"><span data-stu-id="33902-334">If <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> is `True`, the method activates the main form.</span></span> <span data-ttu-id="33902-335">それ以外の場合、メイン フォームは、現在の状態に残されます。</span><span class="sxs-lookup"><span data-stu-id="33902-335">Otherwise, the main form is left in its current state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-336">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-336">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="protected virtual bool OnUnhandledException (Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnUnhandledException(class Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnUnhandledException (e As UnhandledExceptionEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnUnhandledException(Microsoft::VisualBasic::ApplicationServices::UnhandledExceptionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs -&gt; bool&#xA;override this.OnUnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs -&gt; bool" Usage="windowsFormsApplicationBase.OnUnhandledException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="33902-337">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="33902-337">The data for the event.</span></span></param>
        <summary><span data-ttu-id="33902-338">派生クラスでオーバーライドされた場合、ハンドルされない例外がアプリケーションで発生したときにコードを実行できるようにします。</span><span class="sxs-lookup"><span data-stu-id="33902-338">When overridden in a derived class, allows for code to run when an unhandled exception occurs in the application.</span></span></summary>
        <returns><span data-ttu-id="33902-339"><see cref="T:System.Boolean" /> イベントが発生したかどうかを示す <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />。</span><span class="sxs-lookup"><span data-stu-id="33902-339">A <see cref="T:System.Boolean" /> that indicates whether the <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" /> event was raised.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-340">既定では、このメソッド、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException>イベントは、デバッガーがアタッチされていないと、ユーザーの処理とならない限り、`UnhandledException`イベント。</span><span class="sxs-lookup"><span data-stu-id="33902-340">By default, this method raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> event as long as a debugger is not attached and the user is handling the `UnhandledException` event.</span></span> <span data-ttu-id="33902-341">イベント ハンドラーを設定できる、<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-341">The event handler can set the <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property.</span></span> <span data-ttu-id="33902-342">場合<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>は`False`、例外ハンドラーからの戻り時に、アプリケーションの終了イベントが処理されない場合またはします。</span><span class="sxs-lookup"><span data-stu-id="33902-342">If <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `False`, or if the event is not handled, the application exits upon return from the exception handler.</span></span> <span data-ttu-id="33902-343">それ以外の場合、アプリケーションのコントロールは、Windows フォームのメッセージ ループに返されます。</span><span class="sxs-lookup"><span data-stu-id="33902-343">Otherwise, control of the application is returned to the Windows Forms message loop.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-344">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-344">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormCollection OpenForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.FormCollection OpenForms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenForms As FormCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormCollection ^ OpenForms { System::Windows::Forms::FormCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OpenForms : System.Windows.Forms.FormCollection" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-345">アプリケーションで開かれているすべてのフォームのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="33902-345">Gets a collection of all the application's open forms.</span></span></summary>
        <value><span data-ttu-id="33902-346">すべてのアプリケーションの開いているフォームを含むコレクション。</span><span class="sxs-lookup"><span data-stu-id="33902-346">A collection that contains all of the application's open forms.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-347">`My.Application.OpenForms`プロパティは、アプリケーションのすべてのオープン フォームのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="33902-347">The `My.Application.OpenForms` property gets a collection of all the application's open forms.</span></span> <span data-ttu-id="33902-348">動作と同じです、<xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-348">The behavior is identical to the <xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33902-349">`My.Application.OpenForms`プロパティを返します、開いているすべてのフォームに関係なくスレッドの開いたことです。</span><span class="sxs-lookup"><span data-stu-id="33902-349">The `My.Application.OpenForms` property returns all open forms, regardless of which thread opened them.</span></span> <span data-ttu-id="33902-350">確認する必要があります、 <xref:System.Windows.Forms.Control.InvokeRequired%2A> ; にアクセスする前に、各フォームのそれ以外の場合がスロー、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="33902-350">You should check the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property of each form before accessing it; otherwise, it might throw an <xref:System.InvalidOperationException> exception.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-351">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-351">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-352">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-352">Project type</span></span>|<span data-ttu-id="33902-353">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-353">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-354">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-354">Windows Forms Application</span></span>|<span data-ttu-id="33902-355">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-355">**Yes**</span></span>|  
|<span data-ttu-id="33902-356">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-356">Class Library</span></span>|<span data-ttu-id="33902-357">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-357">No</span></span>|  
|<span data-ttu-id="33902-358">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-358">Console Application</span></span>|<span data-ttu-id="33902-359">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-359">No</span></span>|  
|<span data-ttu-id="33902-360">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-360">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-361">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-361">No</span></span>|  
|<span data-ttu-id="33902-362">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-362">Web Control Library</span></span>|<span data-ttu-id="33902-363">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-363">No</span></span>|  
|<span data-ttu-id="33902-364">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-364">Windows Service</span></span>|<span data-ttu-id="33902-365">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-365">No</span></span>|  
|<span data-ttu-id="33902-366">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-366">Web Site</span></span>|<span data-ttu-id="33902-367">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-367">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-368">この例は、アプリケーションの開いているフォームをループ処理し、現在のスレッドで直接アクセスできるを選択しのタイトルを表示します、<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="33902-368">This example loops over the application's open forms, selects the ones directly accessible by the current thread, and displays their titles in a <xref:System.Windows.Forms.ListBox> control.</span></span> <span data-ttu-id="33902-369">この例では、Windows フォーム アプリケーションは、という名前のフォームである必要があります`Form1`というリスト ボックスを格納している`ListBox1`します。</span><span class="sxs-lookup"><span data-stu-id="33902-369">This example requires that your Windows Forms application have a form named `Form1` that contains a list box named `ListBox1`.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#10)]  
  
 <span data-ttu-id="33902-370">この例は、アプリケーションの開いているフォームがループを実行しでそのタイトルが表示されます、<xref:System.Windows.Forms.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="33902-370">This example loops over the application's open forms and displays their titles in a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="33902-371">ユーザー インターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-371">Controls the permissions that are related to user interfaces and the Clipboard.</span></span> <span data-ttu-id="33902-372"><see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-372">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <altmember cref="T:System.Windows.Forms.FormCollection" />
        <altmember cref="P:System.Windows.Forms.Application.OpenForms" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-373">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-373">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Run(string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="member this.Run : string[] -&gt; unit" Usage="windowsFormsApplicationBase.Run commandLine" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="commandLine"><span data-ttu-id="33902-374"><see langword="Sub Main" /> に渡されたコマンド ラインです。</span><span class="sxs-lookup"><span data-stu-id="33902-374">The command line from <see langword="Sub Main" />.</span></span></param>
        <summary><span data-ttu-id="33902-375">Visual Basic アプリケーション モデルをセットアップし、実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="33902-375">Sets up and starts the Visual Basic Application model.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-376">`My.Application.Run`メソッドは、Visual Basic アプリケーション モデルのサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-376">The `My.Application.Run` method provides support for the Visual Basic Application model.</span></span> <span data-ttu-id="33902-377">このメソッドは、アプリケーションからのみ呼び出すことは`Sub Main`します。</span><span class="sxs-lookup"><span data-stu-id="33902-377">This method should be called only from the application's `Sub Main`.</span></span> <span data-ttu-id="33902-378">既定で、 `Sub Main` Windows フォームのアプリケーションがこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="33902-378">By default, the `Sub Main` of a Windows Forms application calls this method.</span></span> <span data-ttu-id="33902-379">詳細については、次を参照してください。 [Visual Basic アプリケーション モデルの概要](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-379">For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-380">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-380">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-381">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-381">Project type</span></span>|<span data-ttu-id="33902-382">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-382">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-383">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-383">Windows Forms Application</span></span>|<span data-ttu-id="33902-384">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-384">**Yes**</span></span>|  
|<span data-ttu-id="33902-385">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-385">Class Library</span></span>|<span data-ttu-id="33902-386">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-386">No</span></span>|  
|<span data-ttu-id="33902-387">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-387">Console Application</span></span>|<span data-ttu-id="33902-388">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-388">No</span></span>|  
|<span data-ttu-id="33902-389">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-389">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-390">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-390">No</span></span>|  
|<span data-ttu-id="33902-391">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-391">Web Control Library</span></span>|<span data-ttu-id="33902-392">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-392">No</span></span>|  
|<span data-ttu-id="33902-393">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-393">Windows Service</span></span>|<span data-ttu-id="33902-394">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-394">No</span></span>|  
|<span data-ttu-id="33902-395">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-395">Web Site</span></span>|<span data-ttu-id="33902-396">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-396">No</span></span>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="33902-397">すべての環境変数へのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-397">Controls the ability to access all environment variables.</span></span> <span data-ttu-id="33902-398"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-398">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="33902-399">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-399">Controls the ability to access files and folders.</span></span> <span data-ttu-id="33902-400"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-400">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="33902-401">レジストリ変数にアクセスする権利を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-401">Controls the ability to access registry variables.</span></span> <span data-ttu-id="33902-402"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-402">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="33902-403">ユーザー インターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-403">Controls the permissions related to user interfaces and the Clipboard.</span></span> <span data-ttu-id="33902-404"><see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-404">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="33902-405">HTTP インターネット リソースへのアクセス権を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-405">Controls rights to access HTTP Internet resources.</span></span> <span data-ttu-id="33902-406"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-406">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="33902-407">トランスポート アドレス上で接続を確立または受け入れるための権限を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-407">Controls rights to make or accept connections on a transport address.</span></span> <span data-ttu-id="33902-408"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-408">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission"><span data-ttu-id="33902-409">Windows NT パフォーマンス カウンター コンポーネントへのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-409">Controls access to a Windows NT performance counter component.</span></span> <span data-ttu-id="33902-410"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-410">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-411">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-411">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md"><span data-ttu-id="33902-412">Visual Basic アプリケーション モデルの概要</span><span class="sxs-lookup"><span data-stu-id="33902-412">Overview of the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SaveMySettingsOnExit">
      <MemberSignature Language="C#" Value="public bool SaveMySettingsOnExit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveMySettingsOnExit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveMySettingsOnExit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveMySettingsOnExit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveMySettingsOnExit : bool with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-413">アプリケーションの終了時にユーザー設定を保存するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="33902-413">Determines whether the application saves the user settings on exit.</span></span></summary>
        <value><span data-ttu-id="33902-414"><see langword="True" /> アプリケーションが終了時にユーザー設定を保存することを示します。</span><span class="sxs-lookup"><span data-stu-id="33902-414"><see langword="True" /> to indicate that the application saves the user settings on exit.</span></span> <span data-ttu-id="33902-415">それ以外の場合、<see langword="False" />を示す、設定は暗黙的に保存されません。</span><span class="sxs-lookup"><span data-stu-id="33902-415">Otherwise, <see langword="False" /> to indicate the settings are not implicitly saved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-416">`SaveMySettingsOnExit`プロパティにより、ユーザーが、アプリケーションが実行時の設定を保存する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="33902-416">The `SaveMySettingsOnExit` property allows the user to change how the application saves settings, at run time.</span></span> <span data-ttu-id="33902-417">使用して設定の変更を明示的に保存することができます、<xref:System.Configuration.ApplicationSettingsBase.Save%2A>のメソッド、`My.Settings`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33902-417">You can explicitly save setting changes by using the <xref:System.Configuration.ApplicationSettingsBase.Save%2A> method of the `My.Settings` object.</span></span> <span data-ttu-id="33902-418">変更して、設定を保存する方法の詳細についてを参照してください。[アプリケーション プロパティ](https://msdn.microsoft.com/library/0ad4926f-636e-41f8-a5b1-faf9d9b0a254)します。</span><span class="sxs-lookup"><span data-stu-id="33902-418">For more information about changing and saving settings, see [Application Properties](https://msdn.microsoft.com/library/0ad4926f-636e-41f8-a5b1-faf9d9b0a254).</span></span>  
  
 <span data-ttu-id="33902-419">アプリケーションを閉じるときに、このプロパティに対する変更は保持されません。</span><span class="sxs-lookup"><span data-stu-id="33902-419">The changes to this property are not persisted when the application closes.</span></span> <span data-ttu-id="33902-420">変更する、`SaveMySettingsOnExit`プロパティ永続的にする必要がありますで設定を変更、**プロジェクト デザイナー**:</span><span class="sxs-lookup"><span data-stu-id="33902-420">To change the `SaveMySettingsOnExit` property permanently, you must change the setting in the **Project Designer**:</span></span>  
  
| |  
|-|  
|<span data-ttu-id="33902-421">プロジェクト デザイナーで設定を変更するには</span><span class="sxs-lookup"><span data-stu-id="33902-421">To change the setting in the Project Designer</span></span>|  
|<span data-ttu-id="33902-422">1.**ソリューション エクスプローラー**でプロジェクトを選択します。</span><span class="sxs-lookup"><span data-stu-id="33902-422">1.  Have a project selected in **Solution Explorer**.</span></span> <span data-ttu-id="33902-423">クリックして**プロパティ**上、**プロジェクト**メニュー。</span><span class="sxs-lookup"><span data-stu-id="33902-423">Click **Properties** on the **Project** menu.</span></span><br /><span data-ttu-id="33902-424">2.**[アプリケーション]** タブをクリックします。</span><span class="sxs-lookup"><span data-stu-id="33902-424">2.  Click the **Application** tab.</span></span><br /><span data-ttu-id="33902-425">3.選択**シャット ダウン時に My.Settings を保存する**します。</span><span class="sxs-lookup"><span data-stu-id="33902-425">3.  Select **Save My.Settings on Shutdown**.</span></span>|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-426">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-426">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-427">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-427">Project type</span></span>|<span data-ttu-id="33902-428">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-428">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-429">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-429">Windows Forms Application</span></span>|<span data-ttu-id="33902-430">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-430">**Yes**</span></span>|  
|<span data-ttu-id="33902-431">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-431">Class Library</span></span>|<span data-ttu-id="33902-432">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-432">No</span></span>|  
|<span data-ttu-id="33902-433">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-433">Console Application</span></span>|<span data-ttu-id="33902-434">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-434">No</span></span>|  
|<span data-ttu-id="33902-435">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-435">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-436">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-436">No</span></span>|  
|<span data-ttu-id="33902-437">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-437">Web Control Library</span></span>|<span data-ttu-id="33902-438">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-438">No</span></span>|  
|<span data-ttu-id="33902-439">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-439">Windows Service</span></span>|<span data-ttu-id="33902-440">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-440">No</span></span>|  
|<span data-ttu-id="33902-441">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-441">Web Site</span></span>|<span data-ttu-id="33902-442">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-442">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-443">この例は、2 つの部分です。</span><span class="sxs-lookup"><span data-stu-id="33902-443">This example has two parts.</span></span>  
  
-   <span data-ttu-id="33902-444">`InitializeSaveMySettingsOnExit`サブルーチンは、のチェック状態を初期化します、<xref:System.Windows.Forms.CheckBox>コントロールの現在の値を`SaveMySettingsOnExit`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-444">The `InitializeSaveMySettingsOnExit` subroutine, which initializes the checked state of a <xref:System.Windows.Forms.CheckBox> control to the current value of the `SaveMySettingsOnExit` property.</span></span>  
  
-   <span data-ttu-id="33902-445">`SaveMySettingsOnExit_CheckedChanged`への変更を処理するサブルーチンを<xref:System.Windows.Forms.CheckBox>更新コントロール、`My.Application.SaveMySettingsOnExit`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-445">The `SaveMySettingsOnExit_CheckedChanged` subroutine, which handles changes to a <xref:System.Windows.Forms.CheckBox> control to update the `My.Application.SaveMySettingsOnExit` property.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#12)]  
  
 <span data-ttu-id="33902-446">この例を動作させるには、アプリケーションがあります、<xref:System.Windows.Forms.CheckBox>という名前のコントロール`SaveMySettingsOnExit`します。</span><span class="sxs-lookup"><span data-stu-id="33902-446">For this example to work, your application must have a <xref:System.Windows.Forms.CheckBox> control named `SaveMySettingsOnExit`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-447">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-447">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShowSplashScreen">
      <MemberSignature Language="C#" Value="protected void ShowSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void ShowSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowSplashScreen();" />
      <MemberSignature Language="F#" Value="member this.ShowSplashScreen : unit -&gt; unit" Usage="windowsFormsApplicationBase.ShowSplashScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33902-448">アプリケーションにスプラッシュ スクリーンが定義されているかどうかを判断し、定義されている場合は表示します。</span><span class="sxs-lookup"><span data-stu-id="33902-448">Determines if the application has a splash screen defined, and if it does, displays it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-449">既定では、このメソッドを呼び出す`OnCreateSplashScreen`スレッド セーフな方法でします。</span><span class="sxs-lookup"><span data-stu-id="33902-449">By default, this method calls `OnCreateSplashScreen` in a thread-safe way.</span></span>  
  
 <span data-ttu-id="33902-450"><xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>メソッドには、スプラッシュを表示するコードが含まれています。 少なくともによって指定されたミリ秒数での画面、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-450">The <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A> method contains the code that displays the splash screen for at least the number of milliseconds specified by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> property.</span></span> <span data-ttu-id="33902-451">この機能を使用するに設定する必要があります、`My.Application.MinimumSplashScreenDisplayTime`プロパティをオーバーライドするメソッドで、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>または<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>メソッド、またはを使用して、アプリケーションにスプラッシュ スクリーンを追加、**プロジェクト デザイナー**します。</span><span class="sxs-lookup"><span data-stu-id="33902-451">To use this functionality, you must set the `My.Application.MinimumSplashScreenDisplayTime` property in a method that overrides the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A> or <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> method, or add the splash screen to your application using the **Project Designer**.</span></span> <span data-ttu-id="33902-452">詳細については、「<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-452">For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>.</span></span>  
  
 <span data-ttu-id="33902-453">このメソッドを呼び出して、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="33902-453">This method is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-454">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-454">Extending the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event Shutdown As ShutdownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::ShutdownEventHandler ^ Shutdown;" />
      <MemberSignature Language="F#" Value="member this.Shutdown : Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler " Usage="member this.Shutdown : Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-455">アプリケーションの終了時に発生します。</span><span class="sxs-lookup"><span data-stu-id="33902-455">Occurs when the application shuts down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-456">アプリケーションは、`Shutdown`イベントの終了前にします。</span><span class="sxs-lookup"><span data-stu-id="33902-456">An application raises the `Shutdown` event before it exits.</span></span> <span data-ttu-id="33902-457">これにより、アプリケーションがそのリソースを閉じる方法を制御することができます。</span><span class="sxs-lookup"><span data-stu-id="33902-457">This allows you to control how the application closes its resources.</span></span> <span data-ttu-id="33902-458">このイベントは、Visual Basic アプリケーション モデルの一部です。</span><span class="sxs-lookup"><span data-stu-id="33902-458">This event is part of the Visual Basic Application model.</span></span> <span data-ttu-id="33902-459">詳細については、次を参照してください。 [Visual Basic アプリケーション モデルの概要](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-459">For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).</span></span>  
  
 <span data-ttu-id="33902-460">コードを`Shutdown`イベント ハンドラーは、既定では隠されている ApplicationEvents.vb ファイルに格納されます。</span><span class="sxs-lookup"><span data-stu-id="33902-460">The code for the `Shutdown` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</span></span>  
  
| |  
|-|  
|<span data-ttu-id="33902-461">アプリケーション イベントのコード エディター ウィンドウにアクセスするには</span><span class="sxs-lookup"><span data-stu-id="33902-461">To access the Code Editor window for application events</span></span>|  
|<span data-ttu-id="33902-462">1.選択したプロジェクトに**ソリューション エクスプ ローラー**、 をクリックして**プロパティ**上、**プロジェクト**メニュー。</span><span class="sxs-lookup"><span data-stu-id="33902-462">1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.</span></span><br /><span data-ttu-id="33902-463">2.**[アプリケーション]** タブをクリックします。</span><span class="sxs-lookup"><span data-stu-id="33902-463">2.  Click the **Application** tab.</span></span><br /><span data-ttu-id="33902-464">3.**[アプリケーション イベントの表示]** をクリックしてコード エディターを開きます。</span><span class="sxs-lookup"><span data-stu-id="33902-464">3.  Click the **View Application Events** button to open the Code Editor.</span></span><br /><br /><span data-ttu-id="33902-465">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-465">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-466">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-466">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-467">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-467">Project type</span></span>|<span data-ttu-id="33902-468">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-468">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-469">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-469">Windows Forms Application</span></span>|<span data-ttu-id="33902-470">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-470">**Yes**</span></span>|  
|<span data-ttu-id="33902-471">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-471">Class Library</span></span>|<span data-ttu-id="33902-472">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-472">No</span></span>|  
|<span data-ttu-id="33902-473">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-473">Console Application</span></span>|<span data-ttu-id="33902-474">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-474">No</span></span>|  
|<span data-ttu-id="33902-475">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-475">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-476">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-476">No</span></span>|  
|<span data-ttu-id="33902-477">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-477">Web Control Library</span></span>|<span data-ttu-id="33902-478">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-478">No</span></span>|  
|<span data-ttu-id="33902-479">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-479">Windows Service</span></span>|<span data-ttu-id="33902-480">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-480">No</span></span>|  
|<span data-ttu-id="33902-481">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-481">Web Site</span></span>|<span data-ttu-id="33902-482">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-482">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-483">この例は、アプリケーションのシャット ダウン時にメッセージを記録します。</span><span class="sxs-lookup"><span data-stu-id="33902-483">This example logs messages when the application shuts down.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#13)]  
  
 <span data-ttu-id="33902-484">アプリケーション イベントのコード エディター ウィンドウで、コードを入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-484">You must enter the code in the Code Editor window for application events.</span></span> <span data-ttu-id="33902-485">このウィンドウにアクセスするには、このトピックの「解説」セクションの指示に従います。</span><span class="sxs-lookup"><span data-stu-id="33902-485">To access this window, follow the instructions from this topic's Remarks section.</span></span> <span data-ttu-id="33902-486">詳細については、「[方法 :アプリケーションの起動時または終了時にメッセージを記録](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-messages-when-the-application-starts-or-shuts-down.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-486">For more information, see [How to: Log Messages When the Application Starts or Shuts Down](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-messages-when-the-application-starts-or-shuts-down.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-487">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-487">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-messages-when-the-application-starts-or-shuts-down.md"><span data-ttu-id="33902-488">方法: アプリケーションの起動時または終了時にメッセージをログに記録する</span><span class="sxs-lookup"><span data-stu-id="33902-488">How to: Log Messages When the Application Starts or Shuts Down</span></span></related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic"><span data-ttu-id="33902-489">Application Page, Project Designer (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-489">Application Page, Project Designer (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md"><span data-ttu-id="33902-490">Visual Basic アプリケーション モデルの概要</span><span class="sxs-lookup"><span data-stu-id="33902-490">Overview of the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShutdownStyle">
      <MemberSignature Language="C#" Value="protected internal Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property ShutdownStyle As ShutdownMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Microsoft::VisualBasic::ApplicationServices::ShutdownMode ShutdownStyle { Microsoft::VisualBasic::ApplicationServices::ShutdownMode get(); void set(Microsoft::VisualBasic::ApplicationServices::ShutdownMode value); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownStyle : Microsoft.VisualBasic.ApplicationServices.ShutdownMode with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.ShutdownMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-491">アプリケーションのメイン フォームが閉じられたときの動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="33902-491">Determines what happens when the application's main form closes.</span></span></summary>
        <value><span data-ttu-id="33902-492">アプリケーションに何メイン フォームが閉じられたときを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="33902-492">One of the enumeration values that indicates what the application should do when the main form closes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-493"><xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>メソッドは、メイン フォームが閉じられた、または新しいメイン フォームとしてフォームを昇格する場合、別の開いているときに、アプリケーションをシャット ダウンかどうかを判断するには、このプロパティの値を確認します。</span><span class="sxs-lookup"><span data-stu-id="33902-493">The <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> method checks the value of this property to determine if the application should shut down when the main form is closed, or if another open form should be promoted as the new main form.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" />
      </Docs>
    </Member>
    <Member MemberName="SplashScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form SplashScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form SplashScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property SplashScreen As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ SplashScreen { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SplashScreen : System.Windows.Forms.Form with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-494">このアプリケーションのスプラッシュ スクリーンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="33902-494">Gets or sets the splash screen for this application.</span></span></summary>
        <value><span data-ttu-id="33902-495">アプリケーションのスプラッシュ スクリーン。</span><span class="sxs-lookup"><span data-stu-id="33902-495">The splash screen for the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-496">`My.Application.SplashScreen`プロパティでは、取得または設定することができます、<xref:System.Windows.Forms.Form>アプリケーションがスプラッシュ スクリーンとして使用するオブジェクト、アプリケーションの起動中に表示される最初のグラフィック形式。</span><span class="sxs-lookup"><span data-stu-id="33902-496">The `My.Application.SplashScreen` property allows you to get or set the <xref:System.Windows.Forms.Form> object that the application uses as the splash screen, the first graphic form that is displayed while an application is being started.</span></span>  
  
 <span data-ttu-id="33902-497">このプロパティは、Visual Basic アプリケーション モデルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="33902-497">This property supports the Visual Basic Application model.</span></span> <span data-ttu-id="33902-498">詳細については、次を参照してください。 [Visual Basic アプリケーション モデルの概要](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-498">For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).</span></span>  
  
 <span data-ttu-id="33902-499">アプリケーションを閉じるときに、このプロパティに対する変更は保持されません。</span><span class="sxs-lookup"><span data-stu-id="33902-499">The changes to this property are not persisted when the application closes.</span></span> <span data-ttu-id="33902-500">スプラッシュ スクリーンを完全に変更するで設定を変更する必要があります、**プロジェクト デザイナー**します。</span><span class="sxs-lookup"><span data-stu-id="33902-500">To change the splash screen permanently, you must change the setting in the **Project Designer**.</span></span>  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-501">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-501">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-502">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-502">Project type</span></span>|<span data-ttu-id="33902-503">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-503">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-504">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-504">Windows Forms Application</span></span>|<span data-ttu-id="33902-505">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-505">**Yes**</span></span>|  
|<span data-ttu-id="33902-506">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-506">Class Library</span></span>|<span data-ttu-id="33902-507">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-507">No</span></span>|  
|<span data-ttu-id="33902-508">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-508">Console Application</span></span>|<span data-ttu-id="33902-509">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-509">No</span></span>|  
|<span data-ttu-id="33902-510">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-510">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-511">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-511">No</span></span>|  
|<span data-ttu-id="33902-512">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-512">Web Control Library</span></span>|<span data-ttu-id="33902-513">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-513">No</span></span>|  
|<span data-ttu-id="33902-514">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-514">Windows Service</span></span>|<span data-ttu-id="33902-515">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-515">No</span></span>|  
|<span data-ttu-id="33902-516">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-516">Web Site</span></span>|<span data-ttu-id="33902-517">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-517">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-518">この例では、`My.Application.SplashScreen`プロパティおよび`My.Application.Startup`アプリケーションの起動時に、ステータス情報でスプラッシュ スクリーンを更新するイベントです。</span><span class="sxs-lookup"><span data-stu-id="33902-518">This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#14)]  
  
 <span data-ttu-id="33902-519">この例では、プロジェクトの名前付きのスプラッシュ スクリーンである必要があります`SplashScreen1`します。</span><span class="sxs-lookup"><span data-stu-id="33902-519">This example requires that the project have a splash screen named `SplashScreen1`.</span></span> <span data-ttu-id="33902-520">スプラッシュ スクリーンをという名前のプロパティを持つ必要がある`Status`ユーザー インターフェイスを更新します。</span><span class="sxs-lookup"><span data-stu-id="33902-520">The splash screen needs to have a property named `Status` that updates its user interface.</span></span>  
  
 <span data-ttu-id="33902-521">このコードは、アプリケーション イベントのコード エディター ウィンドウで入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-521">You must enter this code in the Code Editor window for application events.</span></span> <span data-ttu-id="33902-522">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-522">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33902-523">このプロパティと <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> プロパティに同じ値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="33902-523">The same value is assigned to this property and the <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> property.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
        <altmember cref="T:System.Windows.Forms.Form" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-524">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-524">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup" />
      <MemberSignature Language="VB.NET" Value="Public Event Startup As StartupEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::StartupEventHandler ^ Startup;" />
      <MemberSignature Language="F#" Value="member this.Startup : Microsoft.VisualBasic.ApplicationServices.StartupEventHandler " Usage="member this.Startup : Microsoft.VisualBasic.ApplicationServices.StartupEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.StartupEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-525">アプリケーションの起動時に発生します。</span><span class="sxs-lookup"><span data-stu-id="33902-525">Occurs when the application starts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-526">通常の (単一インスタンスではない) アプリケーション、`Startup`イベントを起動するたびにします。</span><span class="sxs-lookup"><span data-stu-id="33902-526">A normal (non-single-instance) application raises the `Startup` event every time it starts.</span></span> <span data-ttu-id="33902-527">単一インスタンス アプリケーションは、`Startup`イベントを発生させる場合は、アプリケーションが既に active 以外の場合、専用の開始時に、`StartupNextInstance`イベント。</span><span class="sxs-lookup"><span data-stu-id="33902-527">A single-instance application raises the `Startup` event when it starts only if the application is not already active; otherwise, it raises the `StartupNextInstance` event.</span></span> <span data-ttu-id="33902-528">詳細については、「<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-528">For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>.</span></span>  
  
 <span data-ttu-id="33902-529">このイベントは、Visual Basic アプリケーション モデルの一部です。</span><span class="sxs-lookup"><span data-stu-id="33902-529">This event is part of the Visual Basic Application model.</span></span> <span data-ttu-id="33902-530">詳細については、次を参照してください。 [Visual Basic アプリケーション モデルの概要](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-530">For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).</span></span>  
  
 <span data-ttu-id="33902-531">使用することができます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、`e`アプリケーションのスタートアップ フォームの読み込みを制御するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="33902-531">You can use the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the `e` parameter to control the loading of an application's startup form.</span></span> <span data-ttu-id="33902-532">ときに、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティに設定されて`True`、スタートアップ フォームは開始されません。</span><span class="sxs-lookup"><span data-stu-id="33902-532">When the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property is set to `True`, the startup form does not start.</span></span> <span data-ttu-id="33902-533">その場合は、コードでは、別のスタートアップ コード パスを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-533">In that case, your code should call an alternate startup code path.</span></span>  
  
 <span data-ttu-id="33902-534">使用することができます、<xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>のプロパティ、`e`パラメーターまたは<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>アプリケーションのコマンドライン引数にアクセスするプロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-534">You can use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter or the <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property to access the application's command-line arguments.</span></span>  
  
 <span data-ttu-id="33902-535">コードを`Startup`イベント ハンドラーは、既定では隠されている ApplicationEvents.vb ファイルに格納されます。</span><span class="sxs-lookup"><span data-stu-id="33902-535">The code for the `Startup` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</span></span>  
  
| |  
|-|  
|<span data-ttu-id="33902-536">アプリケーション イベントのコード エディター ウィンドウにアクセスするには</span><span class="sxs-lookup"><span data-stu-id="33902-536">To access the Code Editor window for application events</span></span>|  
|<span data-ttu-id="33902-537">1.選択したプロジェクトに**ソリューション エクスプ ローラー**、 をクリックして**プロパティ**上、**プロジェクト**メニュー。</span><span class="sxs-lookup"><span data-stu-id="33902-537">1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.</span></span><br /><span data-ttu-id="33902-538">2.**[アプリケーション]** タブをクリックします。</span><span class="sxs-lookup"><span data-stu-id="33902-538">2.  Click the **Application** tab.</span></span><br /><span data-ttu-id="33902-539">3.**[アプリケーション イベントの表示]** をクリックしてコード エディターを開きます。</span><span class="sxs-lookup"><span data-stu-id="33902-539">3.  Click the **View Application Events** button to open the Code Editor.</span></span><br /><br /> <span data-ttu-id="33902-540">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-540">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-541">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-541">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-542">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-542">Project type</span></span>|<span data-ttu-id="33902-543">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-543">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-544">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-544">Windows Forms Application</span></span>|<span data-ttu-id="33902-545">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-545">**Yes**</span></span>|  
|<span data-ttu-id="33902-546">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-546">Class Library</span></span>|<span data-ttu-id="33902-547">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-547">No</span></span>|  
|<span data-ttu-id="33902-548">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-548">Console Application</span></span>|<span data-ttu-id="33902-549">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-549">No</span></span>|  
|<span data-ttu-id="33902-550">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-550">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-551">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-551">No</span></span>|  
|<span data-ttu-id="33902-552">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-552">Web Control Library</span></span>|<span data-ttu-id="33902-553">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-553">No</span></span>|  
|<span data-ttu-id="33902-554">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-554">Windows Service</span></span>|<span data-ttu-id="33902-555">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-555">No</span></span>|  
|<span data-ttu-id="33902-556">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-556">Web Site</span></span>|<span data-ttu-id="33902-557">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-557">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-558">この例では、`My.Application.SplashScreen`プロパティおよび`My.Application.Startup`アプリケーションの起動時に、ステータス情報でスプラッシュ スクリーンを更新するイベントです。</span><span class="sxs-lookup"><span data-stu-id="33902-558">This example uses the `My.Application.SplashScreen` property and the `My.Application.Startup` event to update the splash screen with status information as the application starts.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#14)]  
  
 <span data-ttu-id="33902-559">この例では、プロジェクトの名前付きのスプラッシュ スクリーンである必要があります`SplashScreen1`します。</span><span class="sxs-lookup"><span data-stu-id="33902-559">This example requires that the project have a splash screen named `SplashScreen1`.</span></span> <span data-ttu-id="33902-560">スプラッシュ スクリーンをという名前のプロパティを持つ必要がある`Status`ユーザー インターフェイスを更新します。</span><span class="sxs-lookup"><span data-stu-id="33902-560">The splash screen needs to have property named `Status` that updates its user interface.</span></span>  
  
 <span data-ttu-id="33902-561">アプリケーション イベントのコード エディター ウィンドウで、コードを入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-561">You must enter the code in the Code Editor window for application events.</span></span> <span data-ttu-id="33902-562">このウィンドウにアクセスするには、このトピックの「解説」セクションの指示に従います。</span><span class="sxs-lookup"><span data-stu-id="33902-562">To access this window, follow the instructions from this topic's Remarks section.</span></span> <span data-ttu-id="33902-563">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-563">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="33902-564">このイベントのイベント ハンドラーを追加する機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-564">Controls the ability to add an event handler for this event.</span></span> <span data-ttu-id="33902-565"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-565">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />.</span></span></permission>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-566">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-566">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic"><span data-ttu-id="33902-567">Application Page, Project Designer (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-567">Application Page, Project Designer (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md"><span data-ttu-id="33902-568">Visual Basic アプリケーション モデルの概要</span><span class="sxs-lookup"><span data-stu-id="33902-568">Overview of the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StartupNextInstance">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      <MemberSignature Language="VB.NET" Value="Public Event StartupNextInstance As StartupNextInstanceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::StartupNextInstanceEventHandler ^ StartupNextInstance;" />
      <MemberSignature Language="F#" Value="member this.StartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler " Usage="member this.StartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-569">単一インスタンスのアプリケーションを起動しようとしたとき、そのアプリケーションが既にアクティブになっている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="33902-569">Occurs when attempting to start a single-instance application and the application is already active.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-570">単一インスタンス アプリケーションは、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>が既にアクティブなときに、アプリケーションを再起動しようとしたときにイベント。</span><span class="sxs-lookup"><span data-stu-id="33902-570">A single-instance application raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> event when you attempt to restart the application when it is already active.</span></span> <span data-ttu-id="33902-571">最初に、単一インスタンス アプリケーションの起動時に発生、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>イベント。</span><span class="sxs-lookup"><span data-stu-id="33902-571">When a single-instance application starts for the first time, it raises the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> event.</span></span> <span data-ttu-id="33902-572">詳細については、「<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-572">For more information, see <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>.</span></span>  
  
 <span data-ttu-id="33902-573">このイベントは、Visual Basic アプリケーション モデルの一部です。</span><span class="sxs-lookup"><span data-stu-id="33902-573">This event is part of the Visual Basic Application model.</span></span> <span data-ttu-id="33902-574">詳細については、次を参照してください。 [Visual Basic アプリケーション モデルの概要](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-574">For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).</span></span>  
  
 <span data-ttu-id="33902-575">このイベントは、他のユーザー インターフェイスのイベントと、アプリケーションのメイン スレッドで発生します。</span><span class="sxs-lookup"><span data-stu-id="33902-575">This event is raised on the application's main thread with the other user-interface events.</span></span> <span data-ttu-id="33902-576">これにより、イベント ハンドラーは、アプリケーションのユーザー インターフェイスに直接アクセスできます。</span><span class="sxs-lookup"><span data-stu-id="33902-576">This allows the event handler to access directly the application's user interface.</span></span> <span data-ttu-id="33902-577">ただし、アプリケーションがこのイベントが発生したときに、別のユーザー インターフェイス イベントを処理する場合は、このイベントことはできませんを処理するその他のイベント ハンドラーが完了するかを呼び出すまで、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="33902-577">However, if the application is busy handling another user-interface event when this event is raised, this event cannot be processed until the other event handler finishes or calls the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33902-578">`StartupNextInstance`単一インスタンス アプリケーションでのみイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="33902-578">The `StartupNextInstance` event is raised only in single-instance applications.</span></span> <span data-ttu-id="33902-579">確認する必要があります、アプリケーションの単一インスタンスの動作を有効にする、**単一インスタンス アプリケーションを作成する**プロジェクト デザイナー チェック ボックス。</span><span class="sxs-lookup"><span data-stu-id="33902-579">To enable single-instance behavior for your application, you must check the **Make single instance application** check box in the Project Designer.</span></span>  
  
| |  
|-|  
|<span data-ttu-id="33902-580">アプリケーションの 1 つのインスタンスを作成するには</span><span class="sxs-lookup"><span data-stu-id="33902-580">To make an application single instance</span></span>|  
|<span data-ttu-id="33902-581">1.選択したプロジェクトに**ソリューション エクスプ ローラー**、 をクリックして**プロパティ**上、**プロジェクト**メニュー。</span><span class="sxs-lookup"><span data-stu-id="33902-581">1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.</span></span><br /><span data-ttu-id="33902-582">2.**[アプリケーション]** タブをクリックします。</span><span class="sxs-lookup"><span data-stu-id="33902-582">2.  Click the **Application** tab.</span></span><br /><span data-ttu-id="33902-583">3.選択、**単一インスタンス アプリケーションを作成する**チェック ボックスをオンします。</span><span class="sxs-lookup"><span data-stu-id="33902-583">3.  Select the **Make single instance application** check box.</span></span>|  
  
 <span data-ttu-id="33902-584">使用する必要があります、<xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A>のプロパティ、`e`単一インスタンス アプリケーションを起動する後続の引数にアクセスするパラメーター。</span><span class="sxs-lookup"><span data-stu-id="33902-584">You must use the <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> property of the `e` parameter to access the arguments for subsequent attempts to start a single-instance application.</span></span> <span data-ttu-id="33902-585"><xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>プロパティは、単一インスタンスのアプリケーションの最初のインスタンスを開始するための引数を提供します。</span><span class="sxs-lookup"><span data-stu-id="33902-585">The <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> property provides the arguments used to start the first instance of a single-instance application.</span></span>  
  
 <span data-ttu-id="33902-586">コードを<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>イベント ハンドラーは、既定では隠されている ApplicationEvents.vb ファイルに格納されます。</span><span class="sxs-lookup"><span data-stu-id="33902-586">The code for the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</span></span>  
  
| |  
|-|  
|<span data-ttu-id="33902-587">アプリケーション イベントのコード エディター ウィンドウにアクセスするには</span><span class="sxs-lookup"><span data-stu-id="33902-587">To access the Code Editor window for application events</span></span>|  
|<span data-ttu-id="33902-588">1.選択したプロジェクトに**ソリューション エクスプ ローラー**、 をクリックして**プロパティ**上、**プロジェクト**メニュー。</span><span class="sxs-lookup"><span data-stu-id="33902-588">1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.</span></span><br /><span data-ttu-id="33902-589">2.**[アプリケーション]** タブをクリックします。</span><span class="sxs-lookup"><span data-stu-id="33902-589">2.  Click the **Application** tab.</span></span><br /><span data-ttu-id="33902-590">3.**[アプリケーション イベントの表示]** をクリックしてコード エディターを開きます。</span><span class="sxs-lookup"><span data-stu-id="33902-590">3.  Click the **View Application Events** button to open the Code Editor.</span></span><br /><br /><span data-ttu-id="33902-591">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-591">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>|  
  
 <span data-ttu-id="33902-592">次の表に、関連するタスクの例については、`My.Application.StartupNextInstance`イベント。</span><span class="sxs-lookup"><span data-stu-id="33902-592">The following table lists examples of tasks involving the `My.Application.StartupNextInstance` event.</span></span>  
  
|<span data-ttu-id="33902-593">終了</span><span class="sxs-lookup"><span data-stu-id="33902-593">To</span></span>|<span data-ttu-id="33902-594">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33902-594">See</span></span>|  
|-|-|  
|<span data-ttu-id="33902-595">最初のアプリケーション インスタンスのコマンドライン引数を確認してください。</span><span class="sxs-lookup"><span data-stu-id="33902-595">Check the command-line arguments of the first application instance</span></span>|<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-596">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-596">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-597">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-597">Project type</span></span>|<span data-ttu-id="33902-598">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-598">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-599">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-599">Windows Forms Application</span></span>|<span data-ttu-id="33902-600">はい</span><span class="sxs-lookup"><span data-stu-id="33902-600">Yes</span></span>|  
|<span data-ttu-id="33902-601">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-601">Class Library</span></span>|<span data-ttu-id="33902-602">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-602">No</span></span>|  
|<span data-ttu-id="33902-603">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-603">Console Application</span></span>|<span data-ttu-id="33902-604">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-604">No</span></span>|  
|<span data-ttu-id="33902-605">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-605">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-606">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-606">No</span></span>|  
|<span data-ttu-id="33902-607">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-607">Web Control Library</span></span>|<span data-ttu-id="33902-608">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-608">No</span></span>|  
|<span data-ttu-id="33902-609">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-609">Windows Service</span></span>|<span data-ttu-id="33902-610">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-610">No</span></span>|  
|<span data-ttu-id="33902-611">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-611">Web Site</span></span>|<span data-ttu-id="33902-612">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-612">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-613">この例では、`e`のパラメーター、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>イベント ハンドラーをアプリケーションのコマンドライン引数を確認します。</span><span class="sxs-lookup"><span data-stu-id="33902-613">This example uses the `e` parameter of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> event handler to examine the application's command-line arguments.</span></span> <span data-ttu-id="33902-614">始まる引数が見つかった場合`/input=`、その引数の残りの部分が表示されます。</span><span class="sxs-lookup"><span data-stu-id="33902-614">If an argument is found that starts with `/input=`, the rest of that argument is displayed.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#15)]  
  
 <span data-ttu-id="33902-615">アプリケーション イベントのコード エディター ウィンドウで、コードを入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-615">You must enter the code in the Code Editor window for application events.</span></span> <span data-ttu-id="33902-616">このウィンドウにアクセスするには、このトピックの「解説」セクションの指示に従います。</span><span class="sxs-lookup"><span data-stu-id="33902-616">To access this window, follow the instructions from this topic's Remarks section.</span></span> <span data-ttu-id="33902-617">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-617">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-618">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-618">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic"><span data-ttu-id="33902-619">Application Page, Project Designer (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-619">Application Page, Project Designer (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md"><span data-ttu-id="33902-620">Visual Basic アプリケーション モデルの概要</span><span class="sxs-lookup"><span data-stu-id="33902-620">Overview of the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledException As UnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::UnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler " Usage="member this.UnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-621">ハンドルされない例外がアプリケーションで生じたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="33902-621">Occurs when the application encounters an unhandled exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-622">アプリケーションは、`UnhandledException`ハンドルされない例外が発生したときにイベント。</span><span class="sxs-lookup"><span data-stu-id="33902-622">An application raises the `UnhandledException` event when it encounters an unhandled exception.</span></span> <span data-ttu-id="33902-623">このイベントは、Visual Basic アプリケーション モデルの一部です。</span><span class="sxs-lookup"><span data-stu-id="33902-623">This event is part of the Visual Basic Application model.</span></span> <span data-ttu-id="33902-624">詳細については、次を参照してください。 [Visual Basic アプリケーション モデルの概要](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-624">For more information, see [Overview of the Visual Basic Application Model](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).</span></span>  
  
 <span data-ttu-id="33902-625">使用することができます、<xref:System.Threading.ThreadExceptionEventArgs.Exception%2A>のプロパティ、`e`このイベントの原因となったハンドルされない例外にアクセスするパラメーター。</span><span class="sxs-lookup"><span data-stu-id="33902-625">You can use the <xref:System.Threading.ThreadExceptionEventArgs.Exception%2A> property of the `e` parameter to access the unhandled exception that caused this event.</span></span>  
  
 <span data-ttu-id="33902-626">使用することができます、<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>のプロパティ、`e`アプリケーションが終了するかどうかを制御するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="33902-626">You can use the <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> property of the `e` parameter to control whether the application exits.</span></span> <span data-ttu-id="33902-627">既定では、<xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A>は`True`します。</span><span class="sxs-lookup"><span data-stu-id="33902-627">By default, <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> is `True`.</span></span> <span data-ttu-id="33902-628">割り当てたアプリケーションが終了するため、`UnhandledException`イベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="33902-628">Therefore, the application exits after completing the `UnhandledException` event handler.</span></span> <span data-ttu-id="33902-629">値を設定する`False`で、`UnhandledException`イベント ハンドラーをし、アプリケーションの実行、待機状態に戻ります。</span><span class="sxs-lookup"><span data-stu-id="33902-629">You can set the value to `False` in the `UnhandledException` event handler to keep the application running, and have it return to a waiting state.</span></span>  
  
 <span data-ttu-id="33902-630">コードを`UnhandledException`イベント ハンドラーは、既定では隠されている ApplicationEvents.vb ファイルに格納されます。</span><span class="sxs-lookup"><span data-stu-id="33902-630">The code for the `UnhandledException` event handler is stored in the ApplicationEvents.vb file, which is hidden by default.</span></span>  
  
| |  
|-|  
|<span data-ttu-id="33902-631">アプリケーション イベントのコード エディター ウィンドウにアクセスするには</span><span class="sxs-lookup"><span data-stu-id="33902-631">To access the Code Editor window for application events</span></span>|  
|<span data-ttu-id="33902-632">1.選択したプロジェクトに**ソリューション エクスプ ローラー**、 をクリックして**プロパティ**上、**プロジェクト**メニュー。</span><span class="sxs-lookup"><span data-stu-id="33902-632">1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.</span></span><br /><span data-ttu-id="33902-633">2.**[アプリケーション]** タブをクリックします。</span><span class="sxs-lookup"><span data-stu-id="33902-633">2.  Click the **Application** tab.</span></span><br /><span data-ttu-id="33902-634">3.**[アプリケーション イベントの表示]** をクリックしてコード エディターを開きます。</span><span class="sxs-lookup"><span data-stu-id="33902-634">3.  Click the **View Application Events** button to open the Code Editor.</span></span>|  
  
 <span data-ttu-id="33902-635">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-635">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="33902-636">Visual Basic コンパイラでは、未処理の例外を処理するためにデバッガーを有効にする、このイベントを発生させるからデバッグのために構築されたアプリケーションをできないようにします。</span><span class="sxs-lookup"><span data-stu-id="33902-636">The Visual Basic compiler prevents applications that are built for debugging from raising this event, to enable a debugger to handle the unhandled exceptions.</span></span> <span data-ttu-id="33902-637">つまり、Visual Studio 統合開発環境のデバッガーを実行して、アプリケーションをテストしている場合、`UnhandledException`イベント ハンドラーは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="33902-637">This means that if you are testing your application by running it under the Visual Studio Integrated Development Environment debugger, your `UnhandledException` event handler will not be called.</span></span> <span data-ttu-id="33902-638">デバッグ用のアプリケーションの構築に関する詳細については、次を参照してください。 [/debug (Visual Basic)](~/docs/visual-basic/reference/command-line-compiler/debug.md)します。</span><span class="sxs-lookup"><span data-stu-id="33902-638">For more information about building applications for debugging, see [/debug (Visual Basic)](~/docs/visual-basic/reference/command-line-compiler/debug.md).</span></span>  
  
## <a name="tasks"></a><span data-ttu-id="33902-639">[タスク]</span><span class="sxs-lookup"><span data-stu-id="33902-639">Tasks</span></span>  
 <span data-ttu-id="33902-640">次の表に、関連するタスクの例として、`My.Application.UnhandledException`イベント。</span><span class="sxs-lookup"><span data-stu-id="33902-640">The following table lists examples of tasks that involve the `My.Application.UnhandledException` event.</span></span>  
  
|<span data-ttu-id="33902-641">終了</span><span class="sxs-lookup"><span data-stu-id="33902-641">To</span></span>|<span data-ttu-id="33902-642">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33902-642">See</span></span>|  
|-|-|  
|<span data-ttu-id="33902-643">ハンドルされない例外をログします。</span><span class="sxs-lookup"><span data-stu-id="33902-643">Log unhandled exceptions</span></span>|[<span data-ttu-id="33902-644">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="33902-644">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33902-645">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33902-645">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33902-646">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33902-646">Project type</span></span>|<span data-ttu-id="33902-647">使用可能</span><span class="sxs-lookup"><span data-stu-id="33902-647">Available</span></span>|  
|-|-|  
|<span data-ttu-id="33902-648">Windows フォーム アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-648">Windows Forms Application</span></span>|<span data-ttu-id="33902-649">**はい**</span><span class="sxs-lookup"><span data-stu-id="33902-649">**Yes**</span></span>|  
|<span data-ttu-id="33902-650">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-650">Class Library</span></span>|<span data-ttu-id="33902-651">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-651">No</span></span>|  
|<span data-ttu-id="33902-652">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33902-652">Console Application</span></span>|<span data-ttu-id="33902-653">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-653">No</span></span>|  
|<span data-ttu-id="33902-654">Windows フォーム コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-654">Windows Forms Control Library</span></span>|<span data-ttu-id="33902-655">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-655">No</span></span>|  
|<span data-ttu-id="33902-656">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33902-656">Web Control Library</span></span>|<span data-ttu-id="33902-657">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-657">No</span></span>|  
|<span data-ttu-id="33902-658">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33902-658">Windows Service</span></span>|<span data-ttu-id="33902-659">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-659">No</span></span>|  
|<span data-ttu-id="33902-660">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33902-660">Web Site</span></span>|<span data-ttu-id="33902-661">いいえ</span><span class="sxs-lookup"><span data-stu-id="33902-661">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-662">この例では、`My.Application.UnhandledException`ハンドルされない例外のいずれかを記録するイベントです。</span><span class="sxs-lookup"><span data-stu-id="33902-662">This example uses the `My.Application.UnhandledException` event to log any unhandled exceptions.</span></span>  
  
 <span data-ttu-id="33902-663">アプリケーション イベントのコード エディター ウィンドウで、コードを入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-663">You must enter the code in the Code Editor window for application events.</span></span> <span data-ttu-id="33902-664">このウィンドウにアクセスするには、このトピックの「解説」セクションで説明した手順に従います。</span><span class="sxs-lookup"><span data-stu-id="33902-664">To access this window, follow the procedure found in this topic's Remarks section.</span></span> <span data-ttu-id="33902-665">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-665">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>  
  
 <span data-ttu-id="33902-666">`UnhandledException`アプリケーションにデバッガーがアタッチされている場合、イベントは発生しませんが、Visual Studio 統合開発環境の外部には、この例を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-666">Because the `UnhandledException` event is not raised when a debugger is attached to the application, you have to run this example outside the Visual Studio Integrated Development Environment.</span></span>  
  
 [!code-vb[VbVbalrMyApplication#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#17)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="33902-667">このイベントのイベント ハンドラーを追加する機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="33902-667">Controls the ability to add an event handler for this event.</span></span> <span data-ttu-id="33902-668"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="33902-668">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <altmember cref="N:Microsoft.VisualBasic.ApplicationServices" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="33902-669">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-669">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md"><span data-ttu-id="33902-670">Visual Basic アプリケーション モデルの概要</span><span class="sxs-lookup"><span data-stu-id="33902-670">Overview of the Visual Basic Application Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="protected static bool UseCompatibleTextRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property bool UseCompatibleTextRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleTextRendering : bool" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33902-671">派生クラスでオーバーライドされる際、このプロパティを使用すると、アプリケーションのフォームの既定のテキスト レンダリング エンジンをデザイナーで指定できます。</span><span class="sxs-lookup"><span data-stu-id="33902-671">When overridden in a derived class, this property allows a designer to specify the default text rendering engine for the application's forms.</span></span></summary>
        <value><span data-ttu-id="33902-672"><see langword="Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="33902-672"><see langword="Boolean" />.</span></span> <span data-ttu-id="33902-673"><see langword="False" /> の値は、アプリケーションが [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)] の既定のテキスト レンダリング エンジンを使用する必要があることを示します。</span><span class="sxs-lookup"><span data-stu-id="33902-673">A value of <see langword="False" /> indicates that the application should use the default text rendering engine for [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span></span> <span data-ttu-id="33902-674"><see langword="True" /> の値は、アプリケーションが Visual Basic .NET 2002 および Visual Basic .NET 2003 のテキスト レンダリング エンジンを使用する必要があることを示します。</span><span class="sxs-lookup"><span data-stu-id="33902-674">A value of <see langword="True" /> indicates that the application should use the text rendering engine for Visual Basic .NET 2002 and Visual Basic .NET 2003.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33902-675">既定では、このプロパティが返されます`False`レンダリング エンジンの GDI テキストを示すために[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]アプリケーションのフォームを使用します。</span><span class="sxs-lookup"><span data-stu-id="33902-675">By default, this property returns `False` to indicate that the GDI text rendering engine for [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)] be used for the application's forms.</span></span> <span data-ttu-id="33902-676">ただし、返される場合は、このプロパティを上書きできます`True`とアプリケーションのフォームが、GDI + テキスト レンダリング エンジン、Visual Basic .NET 2002 および Visual Basic .NET 2003 で使用されているを使用するように指定します。</span><span class="sxs-lookup"><span data-stu-id="33902-676">However, you can override this property to return `True` and specify that the application's forms use the GDI+ text rendering engine, which is used in Visual Basic .NET 2002 and Visual Basic .NET 2003.</span></span>  
  
 <span data-ttu-id="33902-677">このプロパティを呼び出して、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="33902-677">This property is called by the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> constructor.</span></span>  
  
 <span data-ttu-id="33902-678">メソッドをオーバーライドするコード、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>クラスは、既定では隠されている ApplicationEvents.vb ファイルで入力してください。</span><span class="sxs-lookup"><span data-stu-id="33902-678">Code that overrides methods of the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> class should be entered in the ApplicationEvents.vb file, which is hidden by default.</span></span>  
  
| |  
|-|  
|<span data-ttu-id="33902-679">メンバーをオーバーライドするためのコード エディター ウィンドウにアクセスするには</span><span class="sxs-lookup"><span data-stu-id="33902-679">To access the Code Editor window for overriding members</span></span>|  
|<span data-ttu-id="33902-680">1.選択したプロジェクトに**ソリューション エクスプ ローラー**、 をクリックして**プロパティ**上、**プロジェクト**メニュー。</span><span class="sxs-lookup"><span data-stu-id="33902-680">1.  With a project selected in **Solution Explorer**, click **Properties** on the **Project** menu.</span></span><br /><span data-ttu-id="33902-681">2.**[アプリケーション]** タブをクリックします。</span><span class="sxs-lookup"><span data-stu-id="33902-681">2.  Click the **Application** tab.</span></span><br /><span data-ttu-id="33902-682">3.**[アプリケーション イベントの表示]** をクリックしてコード エディターを開きます。</span><span class="sxs-lookup"><span data-stu-id="33902-682">3.  Click the **View Application Events** button to open the Code Editor.</span></span><br /><br /><span data-ttu-id="33902-683">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-683">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33902-684">この例は、オーバーライドすることで、アプリケーションの既定のレンダリング エンジンとして、GDI + テキスト レンダリング エンジンを設定する方法を示します、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33902-684">This example demonstrates how to set the GDI+ text rendering engine as the application's default rendering engine by overriding the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A> property.</span></span>  
  
```vb  
Protected Overloads Shared ReadOnly Property UseCompatibleTextRendering() As Boolean  
    Get  
        ' Use the GDI+ text rendering engine.  
        Return True  
    End Get  
End Property  
```  
  
 <span data-ttu-id="33902-685">このコードは、アプリケーション イベントのコード エディター ウィンドウで入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="33902-685">You must enter this code in the Code Editor window for application events.</span></span> <span data-ttu-id="33902-686">詳細については、「[[アプリケーション] ページ (プロジェクト デザイナー) (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33902-686">For more information, see [Application Page, Project Designer (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md"><span data-ttu-id="33902-687">Visual Basic アプリケーション モデルの拡張</span><span class="sxs-lookup"><span data-stu-id="33902-687">Extending the Visual Basic Application Model</span></span></related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic"><span data-ttu-id="33902-688">Application Page, Project Designer (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="33902-688">Application Page, Project Designer (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
