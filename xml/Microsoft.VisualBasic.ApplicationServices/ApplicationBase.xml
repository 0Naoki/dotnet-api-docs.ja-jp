<Type Name="ApplicationBase" FullName="Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44cc5d4edb46d14e1bdae5b0599c1571a7911ba2" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65156053" /></Metadata><TypeSignature Language="C#" Value="public class ApplicationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ApplicationBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationBase" />
  <TypeSignature Language="F#" Value="type ApplicationBase = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>プロパティ、メソッド、および現在のアプリケーションに関連するイベントを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって公開されるプロパティ、`My.Application`オブジェクトの現在のアプリケーションまたは DLL にのみ関連付けられているデータを返す。 システム レベル以外の情報は、`My.Application` に変更される可能性があります。  
  
 `My.Application` オブジェクトは、次のクラスで構成されています。  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> は、すべてのプロジェクトで使用可能なメンバーを提供します。  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> Windows フォーム アプリケーションで使用可能なメンバーを提供します。  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> コンソール アプリケーションで使用可能なメンバーを提供します。  
  
   
  
## Examples  
 この例では、`My.Application.GetEnvironmentVariable`メソッドを取得し、この値が使用可能な場合、PATH 環境変数の値を表示します。 それ以外の場合、PATH 環境変数が存在しないことを示すメッセージが表示されます。  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeCulture">
      <MemberSignature Language="C#" Value="public void ChangeCulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeCulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeCulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeCulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeCulture : string -&gt; unit" Usage="applicationBase.ChangeCulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName"><see langword="String" />。 文字列としてカルチャの名前。 使用可能な名前の一覧は、次を参照してください。<see cref="T:System.Globalization.CultureInfo" />します。</param>
        <summary>文字列を操作し、文字列の書式設定の現在のスレッドで使用するカルチャを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.ChangeCulture`メソッドは、現在のスレッドを変更<xref:System.Threading.Thread.CurrentCulture%2A>プロパティ。 <xref:System.Threading.Thread.CurrentCulture%2A> 日付、時刻、通貨、数値、テキスト、文字列の比較、大文字と小文字のすべての計算では、そのスレッドの順序の並べ替えを既定の形式を決定します。  
  
 現在のカルチャを取得するには、使用することができます、<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture%2A>プロパティまたは<xref:System.Threading.Thread.CurrentCulture%2A>プロパティ。  
  
 <xref:System.Threading.Thread.CurrentCulture%2A>言語設定とは異なります。 地理的地域の標準設定に関連するデータのみが含まれています。 そのため、<xref:System.Threading.Thread.CurrentCulture%2A>プロパティは、特定のカルチャをまたはにのみ設定できます、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>します。  
  
 使用して、`My.Application.ChangeUICulture`現在のスレッドがカルチャに固有のリソースを取得するために使用するカルチャを変更するメソッド。  
  
> [!IMPORTANT]
>  `My.Application.ChangeCulture`メソッドが必要です、<xref:System.Security.Permissions.SecurityPermission>で、<xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread>を設定します。 スレッドの操作は、セキュリティ状態のスレッドに関連付けられているため危険です。 そのため、このアクセス許可が信頼できるコードにのみ必要な与える必要があります。 部分的に信頼されたコードでスレッドのカルチャを変更することはできません。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類ごとの可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、日付の文字列表現を変更、カルチャを変更する方法を示します。  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" /> は <see langword="Nothing" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" /> は有効なカルチャ名ではありません。</exception>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeUICulture">
      <MemberSignature Language="C#" Value="public void ChangeUICulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeUICulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeUICulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeUICulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeUICulture : string -&gt; unit" Usage="applicationBase.ChangeUICulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName"><see langword="String" />。 文字列としてカルチャの名前。 使用可能な名前の一覧は、次を参照してください。<see cref="T:System.Globalization.CultureInfo" />します。</param>
        <summary>現在のスレッドがカルチャに固有のリソースを取得するために使用するカルチャを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.ChangeUICulture`メソッドは、現在のスレッドを変更<xref:System.Threading.Thread.CurrentUICulture%2A>プロパティ。 <xref:System.Threading.Thread.CurrentUICulture%2A>プロパティは、Resource Manager で使用されるカルチャを決定します。 および`My.Resources`オブジェクトです。 この情報を使用して実行時にカルチャ固有のリソースを検索します。  
  
 現在の UI カルチャを取得するには、使用することができます、<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture%2A>プロパティまたは<xref:System.Threading.Thread.CurrentUICulture%2A>プロパティ。  
  
 使用して、`My.Application.ChangeCulture`文字列操作や文字列の書式設定に使用される、現在のスレッド カルチャを変更するメソッド。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類ごとの可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Application.ChangeUICulture`メソッドをカルチャを設定、`My.Resources`オブジェクトがリソースを取得するために使用します。  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 この例を動作させるには、アプリケーションにという名前の文字列が必要`Message`でアプリケーションのリソース ファイル、およびアプリケーションが必要に、そのリソース ファイルのフランス語のカルチャ バージョン`Resources.fr-FR.resx`します。 詳細については、「[方法 :リソース追加または削除](https://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d)します。  
  
 アプリケーションには、リソース ファイルのフランス語のカルチャのバージョンがない場合、`My.Resources`オブジェクトは、既定のカルチャのリソース ファイルからリソースを取得します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" /> は <see langword="Nothing" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" /> は有効なカルチャ名ではありません。</exception>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列操作や文字列の書式設定に使用される、現在のスレッド カルチャを取得します。</summary>
        <value>A<see cref="T:System.Globalization.CultureInfo" />文字列操作や文字列の書式設定に、現在のスレッド カルチャを表すオブジェクトを使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentCulture`プロパティの取得、<xref:System.Globalization.CultureInfo>文字列操作や文字列の書式設定に、現在のスレッドを使用するオブジェクト。 このオブジェクトは、によって返されるものと同じ、<xref:System.Threading.Thread.CurrentCulture%2A>プロパティで、そのスレッドで文字列に関連する計算の多くを制御します。 <xref:System.Threading.Thread.CurrentCulture%2A>プロパティは、日付、時刻、通貨、および数字の既定の形式を決定します。 また、並べ替え、比較、および文字列を大文字に変換する方法も決定します。  
  
 使用することができます、カルチャを変更する、<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture%2A>メソッドまたは別の割り当て<xref:System.Globalization.CultureInfo>オブジェクトを<xref:System.Threading.Thread.CurrentCulture%2A>プロパティ。  
  
 <xref:System.Threading.Thread.CurrentCulture%2A>言語設定とは異なります。 地理的地域の標準設定に関連するデータのみが含まれています。  
  
 使用して、`My.Application.CurrentUICulture`プロパティを現在のスレッドがカルチャに固有のリソースを取得するために使用するカルチャを取得します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類ごとの可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、カルチャが日付の文字列表現に与える影響を示します。  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public string GetEnvironmentVariable (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetEnvironmentVariable(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnvironmentVariable (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEnvironmentVariable(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetEnvironmentVariable : string -&gt; string" Usage="applicationBase.GetEnvironmentVariable name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A<see langword="String" />環境変数の名前を格納します。</param>
        <summary>指定された環境変数の値を返します。</summary>
        <returns>A <see langword="String" /> 、名前の環境変数の値を含む<paramref name="name" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.GetEnvironmentVariable`メソッドは、名前の環境変数を返します`name`します。 このメソッドは<xref:System.Environment.GetEnvironmentVariable%28System.String%29?displayProperty=nameWithType>で環境変数が指定された場合に、このメソッドによって例外が発生する点を除いて、`name`存在しません。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類ごとの可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Application.GetEnvironmentVariable`メソッドを取得し、使用可能な場合、PATH 環境変数の値を表示します。 それ以外の場合、PATH 環境変数が存在しないことを示すメッセージが表示されます。  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> は <see langword="Nothing" /> です。</exception>
        <exception cref="T:System.ArgumentException">指定された環境変数<paramref name="name" />存在しません。</exception>
        <exception cref="T:System.Security.SecurityException">呼び出し元のコードはありません<see cref="T:System.Security.Permissions.EnvironmentPermission" />で<see langword="Read" />アクセスします。</exception>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Info As AssemblyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ Info { Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.AssemblyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バージョン番号、説明などのアプリケーションのアセンブリに関する情報を取得するためのプロパティを提供するオブジェクトを取得します。</summary>
        <value><see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />現在のアプリケーションのオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 この例では、`My.Application.Info.Version`プロパティをアプリケーションのバージョンを表示します。  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.Log Log { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.Log Log" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Log As Log" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::Log ^ Log { Microsoft::VisualBasic::Logging::Log ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Log : Microsoft.VisualBasic.Logging.Log" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.Log</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティとイベントと例外の情報をアプリケーションのログ リスナーに書き込むためのメソッドを提供するオブジェクトを取得します。</summary>
        <value><see cref="T:Microsoft.VisualBasic.Logging.Log" />現在のアプリケーションのオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。 詳細については、「[方法 :ログ メッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)します。  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo UICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo UICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ UICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UICulture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のスレッドがカルチャに固有のリソースの取得に使用されるカルチャを取得します。</summary>
        <value>A<see cref="T:System.Globalization.CultureInfo" />現在のスレッドがカルチャに固有のリソースを取得するために使用するカルチャを表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentUICulture`プロパティの取得、<xref:System.Globalization.CultureInfo>現在のスレッドがカルチャに固有のリソースを取得するために使用するオブジェクトします。 このオブジェクトは、によって返されるものと同じ、<xref:System.Threading.Thread.CurrentUICulture%2A>プロパティ。 <xref:System.Threading.Thread.CurrentUICulture%2A>プロパティは、リソース マネージャーによって使用されるカルチャを決定し、`My.Resources`オブジェクト、実行時にカルチャ固有のリソースを検索するに必要な情報。  
  
 使用することができます、カルチャを変更する、<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A>メソッドまたは別の割り当て<xref:System.Globalization.CultureInfo>オブジェクトを<xref:System.Threading.Thread.CurrentUICulture%2A>プロパティ。  
  
 <xref:System.Threading.Thread.CurrentCulture%2A>言語設定とは異なります。 地理的地域の標準設定に関連するデータのみが含まれています。  
  
 使用して、`My.Application.CurrentCulture`文字列操作や文字列の書式設定に使用される、現在のスレッド カルチャを取得するプロパティ。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類ごとの可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Application.CurrentCulture`プロパティを使用してこれを変更する前に、現在のカルチャのキャッシュを<xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A>します。 `My.Application.ChangeUICulture`メソッドの設定、カルチャ、`My.Resources`オブジェクトがリソースを取得するために使用します。  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 この例を動作させるには、アプリケーションにという名前の文字列が必要`Message`でアプリケーションのリソース ファイル、およびアプリケーションが必要に、そのリソース ファイルのフランス語のカルチャ バージョン`Resources.fr-FR.resx`します。 詳細については、「[方法 :リソース追加または削除](https://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d)します。  
  
 アプリケーションには、リソース ファイルのフランス語のカルチャのバージョンがない場合、`My.Resources`オブジェクトは、既定のカルチャのリソース ファイルからリソースを取得します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/my-resources-object.md">My.Resources オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>