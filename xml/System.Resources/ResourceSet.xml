<Type Name="ResourceSet" FullName="System.Resources.ResourceSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ebec899078f557e5f9079f81c57b2a6ae47f91e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70436968" /></Metadata><TypeSignature Language="C#" Value="public class ResourceSet : IDisposable, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ResourceSet extends System.Object implements class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResourceSet" />
  <TypeSignature Language="VB.NET" Value="Public Class ResourceSet&#xA;Implements IDisposable, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceSet : IDisposable, System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type ResourceSet = class&#xA;    interface IDisposable&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Resources.ResourceManager</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1963-101">ある特定のカルチャ用にローカライズされたすべてのリソースを格納します。フォールバック規則を含む他のすべてのカルチャ設定は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a1963-101">Stores all the resources localized for one particular culture, ignoring all other cultures, including any fallback rules.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="a1963-102">クラス<xref:System.Resources.ResourceSet>は、を列挙<xref:System.Resources.IResourceReader>し、すべての名前と値を読み込み、に格納<xref:System.Collections.Hashtable>します。</span><span class="sxs-lookup"><span data-stu-id="a1963-102">The <xref:System.Resources.ResourceSet> class enumerates over an <xref:System.Resources.IResourceReader>, loading every name and value, and storing them in a <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="a1963-103">カスタム<xref:System.Resources.IResourceReader>を使用できます。</span><span class="sxs-lookup"><span data-stu-id="a1963-103">A custom <xref:System.Resources.IResourceReader> can be used.</span></span>  
  
 <span data-ttu-id="a1963-104">メソッドを<xref:System.Resources.ResourceSet> <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType>呼び出すことによって、特定のカルチャのリソースを表すオブジェクトをインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="a1963-104">You can instantiate a <xref:System.Resources.ResourceSet> object that represents the resources of a specific culture by calling the <xref:System.Resources.ResourceManager.GetResourceSet%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a1963-105">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="a1963-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="a1963-106">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a1963-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="a1963-107">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a1963-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="a1963-108">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="a1963-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="a1963-109">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a1963-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="a1963-110">独自のリソース<see cref="T:System.Resources.ResourceSet" />リーダーとライターを使用するの派生クラスは<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />、と<see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />をオーバーライドして、リソースセットを解釈するための適切な機能を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a1963-110">Derived classes of <see cref="T:System.Resources.ResourceSet" /> that use their own resource reader and writer should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />, to provide the appropriate functionality for interpreting the resource set.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1963-111"><see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1963-111">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1963-112"><see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="a1963-112">Initializes a new instance of the <see cref="T:System.Resources.ResourceSet" /> class with default properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceSet : System.IO.Stream -&gt; System.Resources.ResourceSet" Usage="new System.Resources.ResourceSet stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a1963-113">読み取るリソースの <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="a1963-113">The <see cref="T:System.IO.Stream" /> of resources to be read.</span></span> <span data-ttu-id="a1963-114">ストリームは、既存のリソース ファイルを参照している必要があります。</span><span class="sxs-lookup"><span data-stu-id="a1963-114">The stream should refer to an existing resources file.</span></span></param>
        <summary><span data-ttu-id="a1963-115"><see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを、指定したストリームからリソースを読み取るシステムの既定の <see cref="T:System.Resources.ResourceReader" /> を使用して作成します。</span><span class="sxs-lookup"><span data-stu-id="a1963-115">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that reads resources from the given stream.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1963-116"><paramref name="stream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="a1963-116">The <paramref name="stream" /> is not readable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1963-117"><paramref name="stream" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a1963-117">The <paramref name="stream" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a1963-118">シリアル化サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="a1963-118">for providing serialization services.</span></span> <span data-ttu-id="a1963-119">関連付けられ<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />た列挙: セキュリティアクション:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span><span class="sxs-lookup"><span data-stu-id="a1963-119">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a1963-120">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="a1963-120">requires full trust for the immediate caller.</span></span> <span data-ttu-id="a1963-121">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a1963-121">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (System.Resources.IResourceReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Resources.IResourceReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IResourceReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::Resources::IResourceReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceSet : System.Resources.IResourceReader -&gt; System.Resources.ResourceSet" Usage="new System.Resources.ResourceSet reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Resources.IResourceReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a1963-122">使用するリーダー。</span><span class="sxs-lookup"><span data-stu-id="a1963-122">The reader that will be used.</span></span></param>
        <summary><span data-ttu-id="a1963-123"><see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを指定したリソース リーダーを使用して作成します。</span><span class="sxs-lookup"><span data-stu-id="a1963-123">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the specified resource reader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1963-124">このコンストラクターを使用すると、ユーザーが指定<xref:System.Resources.IResourceReader>したを使用してカスタムリソース形式をサポートできます。</span><span class="sxs-lookup"><span data-stu-id="a1963-124">You can use this constructor to support custom resource formats using a user-provided <xref:System.Resources.IResourceReader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1963-125"><paramref name="reader" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a1963-125">The <paramref name="reader" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceSet (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceSet(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResourceSet : string -&gt; System.Resources.ResourceSet" Usage="new System.Resources.ResourceSet fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="a1963-126">読み取るリソース ファイル。</span><span class="sxs-lookup"><span data-stu-id="a1963-126">Resource file to read.</span></span></param>
        <summary><span data-ttu-id="a1963-127"><see cref="T:System.Resources.ResourceSet" /> クラスの新しいインスタンスを、指定したファイルを開いてリソースを読み取るシステムの既定の <see cref="T:System.Resources.ResourceReader" /> を使用して作成します。</span><span class="sxs-lookup"><span data-stu-id="a1963-127">Creates a new instance of the <see cref="T:System.Resources.ResourceSet" /> class using the system default <see cref="T:System.Resources.ResourceReader" /> that opens and reads resources from the given file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1963-128">次のコード例では、特定のファイル<xref:System.Resources.ResourceSet>のクラスの新しいインスタンスを定義し、そのファイルによって使用されるリソースを反復処理し、その内容をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="a1963-128">The following code example defines a new instance of the <xref:System.Resources.ResourceSet> class for a specific file, iterates through the resources used by that file, and displays their contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1963-129"><paramref name="fileName" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a1963-129">The <paramref name="fileName" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="resourceSet.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1963-130">この <see cref="T:System.Resources.ResourceSet" /> が使用するすべてのリソースを閉じて解放します。</span><span class="sxs-lookup"><span data-stu-id="a1963-130">Closes and releases any resources used by this <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1963-131">このメソッドの呼び出し後に<xref:System.Resources.ResourceSet> 、のメソッドを呼び出すと、すべての呼び出しが失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a1963-131">All calls to methods on the <xref:System.Resources.ResourceSet> after a call to this method might fail.</span></span>  
  
 <span data-ttu-id="a1963-132"><xref:System.Resources.ResourceSet.Close%2A>は、安全に複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="a1963-132"><xref:System.Resources.ResourceSet.Close%2A> can be safely called multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1963-133">`true`呼び出し<xref:System.Resources.ResourceSet.Close%2A> の <xref:System.Resources.ResourceSet.Dispose%2A> 現在の実装 ()。</span><span class="sxs-lookup"><span data-stu-id="a1963-133">The current implementation of <xref:System.Resources.ResourceSet.Close%2A> calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1963-134">次のコード例では<xref:System.Resources.ResourceSet.Close%2A> 、メソッドを使用して、呼び出し元<xref:System.Resources.ResourceSet>のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="a1963-134">The following code example uses the <xref:System.Resources.ResourceSet.Close%2A> method to release all resources used by the calling <xref:System.Resources.ResourceSet> instance.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1963-135">現在の <see cref="T:System.Resources.ResourceSet" /> インスタンスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="a1963-135">Releases resources used by the current <see cref="T:System.Resources.ResourceSet" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="resourceSet.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1963-136"><see cref="T:System.Resources.ResourceSet" /> の現在のインスタンスで使用されていたリソース (メモリを除く) を破棄します。</span><span class="sxs-lookup"><span data-stu-id="a1963-136">Disposes of the resources (other than memory) used by the current instance of <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1963-137"><xref:System.Resources.ResourceSet> を使い終わったら、<xref:System.Resources.ResourceSet.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a1963-137">Call <xref:System.Resources.ResourceSet.Dispose%2A> when you are finished using the <xref:System.Resources.ResourceSet>.</span></span> <span data-ttu-id="a1963-138"><xref:System.Resources.ResourceSet.Dispose%2A>メソッドによって、<xref:System.Resources.ResourceSet> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="a1963-138">The <xref:System.Resources.ResourceSet.Dispose%2A> method leaves the <xref:System.Resources.ResourceSet> in an unusable state.</span></span> <span data-ttu-id="a1963-139">を呼び出し<xref:System.Resources.ResourceSet.Dispose%2A>た後は、に対するすべての<xref:System.Resources.ResourceSet>参照を解放して、占有していたメモリがガベージコレクションによって回収されるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a1963-139">After calling <xref:System.Resources.ResourceSet.Dispose%2A>, you must release all references to the <xref:System.Resources.ResourceSet> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1963-140">現在のメソッドは、の<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>実装です。</span><span class="sxs-lookup"><span data-stu-id="a1963-140">The current method is the implementation of <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1963-141">この実装は<xref:System.Resources.ResourceSet.Dispose%2A> (`true`) を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a1963-141">This implementation calls <xref:System.Resources.ResourceSet.Dispose%2A> (`true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="resourceSet.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a1963-142">現在のインスタンスに格納されているオブジェクトを明示的に閉じるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a1963-142">Indicates whether the objects contained in the current instance should be explicitly closed.</span></span></param>
        <summary><span data-ttu-id="a1963-143">現在のインスタンスに関連付けられたリソース (メモリを除く) を解放し、要求された場合には内部マネージド オブジェクトを閉じます。</span><span class="sxs-lookup"><span data-stu-id="a1963-143">Releases resources (other than memory) associated with the current instance, closing internal managed objects if requested.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1963-144">`dispose`パラメーターが `true` の場合、現在のメソッドは、関連付けられているすべてのリソースと、それに関連付けられているすべてのオブジェクトを解放します。</span><span class="sxs-lookup"><span data-stu-id="a1963-144">If the `dispose` parameter is `true`, the current method frees all the resources associated with it as well as with all objects associated with it.</span></span> <span data-ttu-id="a1963-145">`dispose` が `false` の場合、現在のメソッドは、割り当てられているリソースのみを解放し、関連付けられているすべてのオブジェクトを無視します。</span><span class="sxs-lookup"><span data-stu-id="a1963-145">If `dispose` is `false`, the current method frees only the resources allocated to it, and ignores any objects associated with it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultReader">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultReader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultReader () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultReader();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultReader : unit -&gt; Type&#xA;override this.GetDefaultReader : unit -&gt; Type" Usage="resourceSet.GetDefaultReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1963-146">この種類の <see cref="T:System.Resources.ResourceSet" /> で優先的に使用するリソース リーダー クラスを返します。</span><span class="sxs-lookup"><span data-stu-id="a1963-146">Returns the preferred resource reader class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <returns><span data-ttu-id="a1963-147">この種類の <see cref="T:System.Resources.ResourceSet" /> で優先的に使用するリソース リーダーの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a1963-147">The <see cref="T:System.Type" /> for the preferred resource reader for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a1963-148">独自のリソース<see cref="T:System.Resources.ResourceSet" />リーダーを使用するの派生クラス<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />は、 <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />、、およびをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a1963-148">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span></span></para></block>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultWriter">
      <MemberSignature Language="C#" Value="public virtual Type GetDefaultWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDefaultWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetDefaultWriter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDefaultWriter () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetDefaultWriter();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultWriter : unit -&gt; Type&#xA;override this.GetDefaultWriter : unit -&gt; Type" Usage="resourceSet.GetDefaultWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1963-149">この種類の <see cref="T:System.Resources.ResourceSet" /> で優先的に使用するリソース ライター クラスを返します。</span><span class="sxs-lookup"><span data-stu-id="a1963-149">Returns the preferred resource writer class for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <returns><span data-ttu-id="a1963-150">この種類の <see cref="T:System.Resources.ResourceSet" /> で優先的に使用するリソース ライターの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a1963-150">The <see cref="T:System.Type" /> for the preferred resource writer for this kind of <see cref="T:System.Resources.ResourceSet" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a1963-151">独自のリソース<see cref="T:System.Resources.ResourceSet" />リーダーを使用するの派生クラス<see cref="M:System.Resources.ResourceSet.GetDefaultReader" />は、 <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />、、およびをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a1963-151">Derived classes of <see cref="T:System.Resources.ResourceSet" /> using their own resource reader should override <see cref="M:System.Resources.ResourceSet.GetDefaultReader" />, and <see cref="M:System.Resources.ResourceSet.GetDefaultWriter" />.</span></span></para></block>
        <altmember cref="T:System.Resources.IResourceWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="resourceSet.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1963-152"><see cref="T:System.Collections.IDictionaryEnumerator" /> を反復処理できる <see cref="T:System.Resources.ResourceSet" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a1963-152">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that can iterate through the <see cref="T:System.Resources.ResourceSet" />.</span></span></summary>
        <returns><span data-ttu-id="a1963-153">この <see cref="T:System.Resources.ResourceSet" /> の <see cref="T:System.Collections.IDictionaryEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="a1963-153">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for this <see cref="T:System.Resources.ResourceSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1963-154">列挙子は、コレクション内のデータの読み取りのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="a1963-154">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="a1963-155">列挙子を使用して、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="a1963-155">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a1963-156">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="a1963-156">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a1963-157"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="a1963-157"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="a1963-158">この位置で、を<xref:System.Collections.IEnumerator.Current%2A>呼び出すと例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="a1963-158">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="a1963-159">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="a1963-159">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="a1963-160"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="a1963-160"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="a1963-161"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="a1963-161"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a1963-162">コレクションの末尾を過ぎると、列挙子はコレクションの最後の要素の後ろに配置され、<xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出すと `false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="a1963-162">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a1963-163">の最後の呼び出し<xref:System.Collections.IEnumerator.MoveNext%2A>でが返され<xref:System.Collections.IEnumerator.Current%2A> `false`た場合、を呼び出すと例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="a1963-163">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="a1963-164"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a1963-164">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="a1963-165">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="a1963-165">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a1963-166">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子はなり無効になり<xref:System.Collections.IEnumerator.MoveNext%2A> 、 <xref:System.Collections.IEnumerator.Reset%2A>次の<xref:System.InvalidOperationException>またはの呼び出しでがスローされます。</span><span class="sxs-lookup"><span data-stu-id="a1963-166">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="a1963-167">コレクションが <xref:System.Collections.IEnumerator.MoveNext%2A> と <xref:System.Collections.IEnumerator.Current%2A> の間で変更された場合は、列挙子が既に無効になっていても、<xref:System.Collections.IEnumerator.Current%2A> は設定した要素を返します。</span><span class="sxs-lookup"><span data-stu-id="a1963-167">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="a1963-168"><xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType>プロパティを使用して、現在の要素に格納されている値にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="a1963-168">You can use the <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=nameWithType> property to access the value stored in the current element.</span></span> <span data-ttu-id="a1963-169">現在の<xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType>要素のキーにアクセスするには、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="a1963-169">Use the <xref:System.Collections.IDictionaryEnumerator.Key%2A?displayProperty=nameWithType> property to access the key of the current element.</span></span> <span data-ttu-id="a1963-170">現在の<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>要素の値にアクセスするには、プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="a1963-170">Use the <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType> property to access the value of the current element.</span></span>  
  
 <span data-ttu-id="a1963-171">列挙子にはコレクションへの排他アクセス権限はないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="a1963-171">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a1963-172">コレクションが同期されている場合でも、他のスレッドがコレクションを変更する可能性があります。これにより、列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="a1963-172">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a1963-173">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="a1963-173">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1963-174">次の例は、ファイル<xref:System.Resources.ResourceSet> `items.resources`のを`rs`作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a1963-174">The following example demonstrates how to create a <xref:System.Resources.ResourceSet>`rs` for the file `items.resources`.</span></span> <span data-ttu-id="a1963-175">次に、 <xref:System.Resources.ResourceSet.GetEnumerator%2A>メソッドを使用し<xref:System.Collections.IDictionaryEnumerator>て、の`rs`を作成します。</span><span class="sxs-lookup"><span data-stu-id="a1963-175">Next, the <xref:System.Resources.ResourceSet.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> for `rs`.</span></span> <span data-ttu-id="a1963-176">は<xref:System.Collections.IDictionaryEnumerator> 、を`rs`反復処理してコンソールにコンテンツを表示します。</span><span class="sxs-lookup"><span data-stu-id="a1963-176">The <xref:System.Collections.IDictionaryEnumerator> iterates through `rs` and displays the contents to the console.</span></span>  
  
 [!code-cpp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[System.Resources.ResourceSet.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Resources.ResourceSet.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a1963-177">リソース セットは、既に閉じられているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="a1963-177">The resource set has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1963-178">指定した名前のリソース オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="a1963-178">Returns a resource object with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string -&gt; obj&#xA;override this.GetObject : string -&gt; obj" Usage="resourceSet.GetObject name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1963-179">検索するリソースの大文字と小文字を区別した名前。</span><span class="sxs-lookup"><span data-stu-id="a1963-179">Case-sensitive name of the resource to search for.</span></span></param>
        <summary><span data-ttu-id="a1963-180">指定した名前のリソース オブジェクトを検索します。</span><span class="sxs-lookup"><span data-stu-id="a1963-180">Searches for a resource object with the specified name.</span></span></summary>
        <returns><span data-ttu-id="a1963-181">要求されたリソース。</span><span class="sxs-lookup"><span data-stu-id="a1963-181">The requested resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1963-182">リソースオブジェクトの名前は大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="a1963-182">The name of the resource object is case sensitive.</span></span> <span data-ttu-id="a1963-183">大文字と小文字を区別し<xref:System.Resources.ResourceSet.GetObject%2A>ない検索の場合は、を使用します。</span><span class="sxs-lookup"><span data-stu-id="a1963-183">For a case-insensitive search, use <xref:System.Resources.ResourceSet.GetObject%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1963-184"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a1963-184">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a1963-185">オブジェクトは、閉じられているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="a1963-185">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public virtual object GetObject (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetObject(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetObject (name As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetObject(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : string * bool -&gt; obj&#xA;override this.GetObject : string * bool -&gt; obj" Usage="resourceSet.GetObject (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1963-186">検索するリソースの名前。</span><span class="sxs-lookup"><span data-stu-id="a1963-186">Name of the resource to search for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="a1963-187">指定した名前の大文字と小文字の区別を無視するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a1963-187">Indicates whether the case of the specified name should be ignored.</span></span></param>
        <summary><span data-ttu-id="a1963-188">要求された場合に、大文字と小文字を区別せずに、指定した名前のリソース オブジェクトを検索します。</span><span class="sxs-lookup"><span data-stu-id="a1963-188">Searches for a resource object with the specified name in a case-insensitive manner, if requested.</span></span></summary>
        <returns><span data-ttu-id="a1963-189">要求されたリソース。</span><span class="sxs-lookup"><span data-stu-id="a1963-189">The requested resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1963-190">`ignoreCase`パラメーターの値が`true`の場合、"resource" という名前のリソースは、"resource" という名前のリソースに相当します。</span><span class="sxs-lookup"><span data-stu-id="a1963-190">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="a1963-191">ただし、このメソッドはを使用して<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>、常に大文字と小文字を区別しない文字列比較を実行することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="a1963-191">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1963-192">この利点は、カルチャに関係なく、このメソッドで実行される大文字と小文字を区別しない文字列比較の結果がすべてのコンピューターで同じであることです。</span><span class="sxs-lookup"><span data-stu-id="a1963-192">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="a1963-193">欠点は、結果がすべてのカルチャの大文字と小文字の規則と一致しないことです。</span><span class="sxs-lookup"><span data-stu-id="a1963-193">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="a1963-194">たとえば、トルコ語のアルファベットには I という2つのバージョンがあります。1つはドット付きで、もう1つはドットを含んでいません。</span><span class="sxs-lookup"><span data-stu-id="a1963-194">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="a1963-195">トルコ語では、I (Unicode 0049) という文字は、異なる文字ı (Unicode 0131) の大文字版と見なされます。</span><span class="sxs-lookup"><span data-stu-id="a1963-195">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="a1963-196">I (Unicode 0069) という文字は、他の文字 i (Unicode 0130) の小文字バージョンと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a1963-196">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="a1963-197">これらの大文字と小文字の規則に従って、i (Unicode 0069) と I (Unicode 0049) の文字を区別しない文字列比較は、カルチャ "tr-TR" (トルコ語ではトルコ語) で失敗します。</span><span class="sxs-lookup"><span data-stu-id="a1963-197">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="a1963-198">をに`ignoreCase` `GetObject` 設定してメソッドを使用すると、この比較は `true` 成功します。</span><span class="sxs-lookup"><span data-stu-id="a1963-198">Using the `GetObject` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1963-199"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a1963-199">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a1963-200">オブジェクトは、閉じられているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="a1963-200">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetString">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1963-201">指定した名前の <see cref="T:System.String" /> リソースを返します。</span><span class="sxs-lookup"><span data-stu-id="a1963-201">Returns a <see cref="T:System.String" /> resource with a specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string -&gt; string&#xA;override this.GetString : string -&gt; string" Usage="resourceSet.GetString name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1963-202">検索するリソースの名前。</span><span class="sxs-lookup"><span data-stu-id="a1963-202">Name of the resource to search for.</span></span></param>
        <summary><span data-ttu-id="a1963-203">指定した名前の <see cref="T:System.String" /> リソースを検索します。</span><span class="sxs-lookup"><span data-stu-id="a1963-203">Searches for a <see cref="T:System.String" /> resource with the specified name.</span></span></summary>
        <returns><span data-ttu-id="a1963-204">値が <see cref="T:System.String" /> の場合は、リソースの値。</span><span class="sxs-lookup"><span data-stu-id="a1963-204">The value of a resource, if the value is a <see cref="T:System.String" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1963-205"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a1963-205">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1963-206"><paramref name="name" /> で指定されたリソースが <see cref="T:System.String" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="a1963-206">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a1963-207">オブジェクトは、閉じられているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="a1963-207">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public virtual string GetString (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetString(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetString (name As String, ignoreCase As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetString(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetString : string * bool -&gt; string&#xA;override this.GetString : string * bool -&gt; string" Usage="resourceSet.GetString (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1963-208">検索するリソースの名前。</span><span class="sxs-lookup"><span data-stu-id="a1963-208">Name of the resource to search for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="a1963-209">指定した名前の大文字と小文字の区別を無視するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a1963-209">Indicates whether the case of the case of the specified name should be ignored.</span></span></param>
        <summary><span data-ttu-id="a1963-210">要求された場合に、大文字と小文字を区別せずに、指定した名前の <see cref="T:System.String" /> リソースを検索します。</span><span class="sxs-lookup"><span data-stu-id="a1963-210">Searches for a <see cref="T:System.String" /> resource with the specified name in a case-insensitive manner, if requested.</span></span></summary>
        <returns><span data-ttu-id="a1963-211">値が <see cref="T:System.String" /> の場合は、リソースの値。</span><span class="sxs-lookup"><span data-stu-id="a1963-211">The value of a resource, if the value is a <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1963-212">`ignoreCase`パラメーターの値が`true`の場合、"resource" という名前のリソースは、"resource" という名前のリソースに相当します。</span><span class="sxs-lookup"><span data-stu-id="a1963-212">If the value of the `ignoreCase` parameter is `true`, a resource with the name "Resource" is equivalent to the resource with the name "resource".</span></span> <span data-ttu-id="a1963-213">ただし、このメソッドはを使用して<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>、常に大文字と小文字を区別しない文字列比較を実行することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="a1963-213">Note, however, that this method always performs case-insensitive string comparisons using <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1963-214">この利点は、カルチャに関係なく、このメソッドで実行される大文字と小文字を区別しない文字列比較の結果がすべてのコンピューターで同じであることです。</span><span class="sxs-lookup"><span data-stu-id="a1963-214">The advantage is that results of case-insensitive string comparisons performed by this method are the same on all computers regardless of culture.</span></span> <span data-ttu-id="a1963-215">欠点は、結果がすべてのカルチャの大文字と小文字の規則と一致しないことです。</span><span class="sxs-lookup"><span data-stu-id="a1963-215">The disadvantage is that the results are not consistent with the casing rules of all cultures.</span></span>  
  
 <span data-ttu-id="a1963-216">たとえば、トルコ語のアルファベットには I という2つのバージョンがあります。1つはドット付きで、もう1つはドットを含んでいません。</span><span class="sxs-lookup"><span data-stu-id="a1963-216">For example, the Turkish alphabet has two versions of the character I: one with a dot and one without a dot.</span></span> <span data-ttu-id="a1963-217">トルコ語では、I (Unicode 0049) という文字は、異なる文字ı (Unicode 0131) の大文字版と見なされます。</span><span class="sxs-lookup"><span data-stu-id="a1963-217">In Turkish, the character I (Unicode 0049) is considered the uppercase version of a different character ı (Unicode 0131).</span></span> <span data-ttu-id="a1963-218">I (Unicode 0069) という文字は、他の文字 i (Unicode 0130) の小文字バージョンと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a1963-218">The character i (Unicode 0069) is considered the lowercase version of yet another character İ (Unicode 0130).</span></span> <span data-ttu-id="a1963-219">これらの大文字と小文字の規則に従って、i (Unicode 0069) と I (Unicode 0049) の文字を区別しない文字列比較は、カルチャ "tr-TR" (トルコ語ではトルコ語) で失敗します。</span><span class="sxs-lookup"><span data-stu-id="a1963-219">According to these casing rules, a case-insensitive string comparison of the characters i (Unicode 0069) and I (Unicode 0049) should fail for the culture "tr-TR" (Turkish in Turkey).</span></span> <span data-ttu-id="a1963-220">をに`ignoreCase` `GetString` 設定してメソッドを使用すると、この比較は `true` 成功します。</span><span class="sxs-lookup"><span data-stu-id="a1963-220">Using the `GetString` method with `ignoreCase` set to `true`, this comparison succeeds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1963-221"><paramref name="name" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a1963-221">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1963-222"><paramref name="name" /> で指定されたリソースが <see cref="T:System.String" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="a1963-222">The resource specified by <paramref name="name" /> is not a <see cref="T:System.String" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a1963-223">オブジェクトは、閉じられているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="a1963-223">The object has been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="protected System.Resources.IResourceReader Reader;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Resources.IResourceReader Reader" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Reader" />
      <MemberSignature Language="VB.NET" Value="Protected Reader As IResourceReader " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Resources::IResourceReader ^ Reader;" />
      <MemberSignature Language="F#" Value="val mutable Reader : System.Resources.IResourceReader" Usage="System.Resources.ResourceSet.Reader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1963-224">リソースを読み取るときに使用する <see cref="T:System.Resources.IResourceReader" /> を示します。</span><span class="sxs-lookup"><span data-stu-id="a1963-224">Indicates the <see cref="T:System.Resources.IResourceReader" /> used to read the resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Resources.IResourceReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadResources">
      <MemberSignature Language="C#" Value="protected virtual void ReadResources ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.ReadResources" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadResources ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadResources();" />
      <MemberSignature Language="F#" Value="abstract member ReadResources : unit -&gt; unit&#xA;override this.ReadResources : unit -&gt; unit" Usage="resourceSet.ReadResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1963-225">すべてのリソースを読み取り、<see cref="T:System.Collections.Hashtable" /> プロパティが示す <see cref="F:System.Resources.ResourceSet.Table" /> に格納します。</span><span class="sxs-lookup"><span data-stu-id="a1963-225">Reads all the resources and stores them in a <see cref="T:System.Collections.Hashtable" /> indicated in the <see cref="F:System.Resources.ResourceSet.Table" /> property.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="a1963-226"><see cref="T:System.Resources.ResourceSet" />の派生クラスは、 <see cref="T:System.Resources.IResourceReader" /> <see cref="M:System.Resources.ResourceSet.GetObject(System.String)" /> <see cref="M:System.Resources.ResourceSet.ReadResources" /> <see cref="M:System.Resources.ResourceSet.GetString(System.String)" />からすべてのリソースをに読み込むために明示的にを呼び出す必要があります。通常は、コンストラクター内で、またはの最初の呼び出しで遅延します。 <see cref="F:System.Resources.ResourceSet.Table" /></span><span class="sxs-lookup"><span data-stu-id="a1963-226">Derived classes of <see cref="T:System.Resources.ResourceSet" /> should explicitly call <see cref="M:System.Resources.ResourceSet.ReadResources" /> to load all the resources from the <see cref="T:System.Resources.IResourceReader" /> into <see cref="F:System.Resources.ResourceSet.Table" />, generally either in the constructor or lazily on the first call to either <see cref="M:System.Resources.ResourceSet.GetString(System.String)" /> or <see cref="M:System.Resources.ResourceSet.GetObject(System.String)" />.</span></span> <span data-ttu-id="a1963-227">ただし、リソースセットと IResourceReader に既に情報が含まれており、いくつかのリソースを選択するより効率的な方法がある場合、この手順は省略できます。</span><span class="sxs-lookup"><span data-stu-id="a1963-227">However, if your resource set and IResourceReader already have information about each other and have a more efficient way to load just a few select resources, this step can be skipped.</span></span> <span data-ttu-id="a1963-228">ワーキングセットを最小限に抑えるには、アプリケーションによって要求されたリソース値に対してのみ IResourceReader にクエリを実行するようにリソースセットを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1963-228">To minimize working set, write your resource set in such a way that it queries your IResourceReader for only the resource values requested by your application.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResourceSet.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1963-229"><see langword="Dispose" /> との競合状態を避けるために、<see cref="T:System.Collections.IEnumerator" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="a1963-229">Returns an <see cref="T:System.Collections.IEnumerator" /> object to avoid a race condition with <see langword="Dispose" />.</span></span> <span data-ttu-id="a1963-230">このメンバーは、コードで直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="a1963-230">This member is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="a1963-231">現在の <see cref="T:System.Resources.ResourceSet" /> オブジェクトの列挙子。</span><span class="sxs-lookup"><span data-stu-id="a1963-231">An enumerator for the current <see cref="T:System.Resources.ResourceSet" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable Table;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable Table" />
      <MemberSignature Language="DocId" Value="F:System.Resources.ResourceSet.Table" />
      <MemberSignature Language="VB.NET" Value="Protected Table As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ Table;" />
      <MemberSignature Language="F#" Value="val mutable Table : System.Collections.Hashtable" Usage="System.Resources.ResourceSet.Table" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Resources.ResourceManager</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1963-232">リソースを格納する <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="a1963-232">The <see cref="T:System.Collections.Hashtable" /> in which the resources are stored.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.Hashtable" />
      </Docs>
    </Member>
  </Members>
</Type>
