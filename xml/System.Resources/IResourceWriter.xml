<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IResourceWriter.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58dba7d85f9728eb6e1fdc317242b5776a5a86af0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dba7d85f9728eb6e1fdc317242b5776a5a86af0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.IResourceWriter">
          <source>Provides the base functionality for writing resources to an output file or stream.</source>
          <target state="translated">リソースを出力ファイルまたはストリームに書き込む基本機能を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.IResourceWriter">
          <source>Resource writers are used to write resources to files in a particular file format.</source>
          <target state="translated">リソース ライターは、特定のファイル形式のファイルへのリソースの書き込みに使用されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.IResourceWriter">
          <source>Implement this interface if you want to control the way in which a resource file is written (for example, to store resources in something other than a .txt, .resx, or binary .resources file).</source>
          <target state="translated">リソース ファイル (たとえば、.txt、.resx、またはバイナリ .resources ファイル以外の何かのリソースを保管する場合など) を記述する方法を制御する場合は、このインターフェイスを実装します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.IResourceWriter">
          <source>Otherwise, use the default <ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph> class, which writes resources to a binary .resources file, or the <ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph> class, which writes resources to an XML resource (.resx) file.</source>
          <target state="translated">それ以外の場合、既定値を使用して<ph id="ph1">&lt;xref:System.Resources.ResourceWriter&gt;</ph>クラスは、リソースをバイナリ .resources ファイルに書き込み、または<ph id="ph2">&lt;xref:System.Resources.ResXResourceWriter&gt;</ph>クラスは、XML リソース (.resx) ファイルにリソースを書き込みます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Resources.IResourceWriter">
          <source>Adds a resource to the list of resources to be written to an output file or output stream.</source>
          <target state="translated">リソースを、出力ファイルまたは出力ストリームに書き込むリソースのリストに追加します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Name of a resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Value of a resource as an 8-bit unsigned integer array.</source>
          <target state="translated">8 ビット符号なし整数の配列で表されたリソースの値。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>Adds an 8-bit unsigned integer array as a named resource to the list of resources to be written.</source>
          <target state="translated">8 ビット符号なし整数の配列を、書き込むリソースのリストに、名前付きリソースとして追加します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The resources are not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">リソースがまで書き込まれていない、<ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The value of the resource.</source>
          <target state="translated">リソースの値です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>Adds a named resource of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to the list of resources to be written.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 型の名前付きリソースを、書き込むリソースのリストに追加します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">リソースはまで書き込まれません、<ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source><ph id="ph1">`value`</ph> might have to be serializable, so you might have to provide a type converter, depending on which resource writer is used.</source>
          <target state="translated"><ph id="ph1">`value`</ph> リソース ライターの使用によって、型コンバーターを提供する必要がありますのでシリアル化可能である必要があります。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The name of the resource.</source>
          <target state="translated">リソースの名前。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The value of the resource.</source>
          <target state="translated">リソースの値です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>Adds a named resource of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to the list of resources to be written.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 型の名前付きリソースを、書き込むリソースのリストに追加します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The resource is not written until the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method is called.</source>
          <target state="translated">リソースはまで書き込まれません、<ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.Close">
          <source>Closes the underlying resource file or stream, ensuring all the data has been written to the file.</source>
          <target state="translated">基になるリソース ファイルまたはストリームを閉じて、すべてのデータがファイルに書き込まれたことを確認します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Close">
          <source>If necessary, <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> will call the <ph id="ph2">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> method to output the resources to the underlying file or stream before closing it.</source>
          <target state="translated">必要に応じて、<ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph>が呼び出す、<ph id="ph2">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>メソッドを閉じる前に、基になるファイルまたはストリームにリソースを出力します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Resources.IResourceWriter.Generate">
          <source>Writes all the resources added by the <ph id="ph1">&lt;see cref="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" /&gt;</ph> method to the output file or stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Resources.IResourceWriter.AddResource(System.String,System.String)" /&gt;</ph> メソッドで追加されたすべてのリソースを出力ファイルまたはストリームに書き込みます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> does not close the output file or output stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> 出力ファイルまたは出力ストリームは閉じられません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source>Instead, consider calling the <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> method.</source>
          <target state="translated">代わりに、通話、<ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> is useful when you want to create a resource file, but you don't want to close the output stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> リソース ファイルを作成する出力ストリームを閉じるしたくない場合に役立ちます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> can be called only once.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph> 1 回だけ呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.IResourceWriter.Generate">
          <source>After you call <ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>, all <ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph> methods other than <ph id="ph3">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph> will throw an exception.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.Resources.IResourceWriter.Generate%2A&gt;</ph>すべて、<ph id="ph2">&lt;xref:System.Resources.IResourceWriter&gt;</ph>以外のメソッド<ph id="ph3">&lt;xref:System.Resources.IResourceWriter.Close%2A&gt;</ph>例外がスローされます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>