<Type Name="ResXDataNode" FullName="System.Resources.ResXDataNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb495d7c27b63da2cef5f8277e8df6a058dca575" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37472425" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ResXDataNode : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ResXDataNode extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Resources.ResXDataNode" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResXDataNode&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResXDataNode sealed : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ResXDataNode = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>XML リソース (.resx) ファイル内の要素を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Resources.ResXDataNode>クラス リソース ファイル内の豊富なデータ型の表現をサポートしています。 オブジェクトがシリアル化と型のエディターをサポートしている限り、リソース ファイルに任意のオブジェクトのストレージをサポートできます。  
  
 作成することができます、<xref:System.Resources.ResXDataNode>クラスのオーバー ロードされたコンス トラクターのいずれかを呼び出すオブジェクト。 できますし、または追加するリソース アイテム要素のリソース ファイルを呼び出すことによって、<xref:System.Resources.ResXResourceWriter.AddResource%2A?displayProperty=nameWithType>メソッド。  
  
 既存を取得する<xref:System.Resources.ResXDataNode>オブジェクトを列挙する必要があります、<xref:System.Resources.ResXDataNode>をインスタンス化して、XML リソース ファイル内のオブジェクトを<xref:System.Resources.ResXResourceReader>オブジェクト、設定、<xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=nameWithType>プロパティを`true`を呼び出すと、<xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType>メソッド列挙子を取得します。 具体的な例を次に示します。  
  
   
  
## Examples  
 次の例では、<xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType>メソッドを取得する、<xref:System.Collections.IDictionaryEnumerator>列挙するために使用されるオブジェクト、 <xref:System.Resources.ResXDataNode> .resx ファイル内のオブジェクト。 例では、含まれています、`CreateResourceFile`ルーチンのために必要な XML リソース ファイルを作成します。  
  
 [!code-csharp[System.Resources.ResXDataNode.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxdatanode.class/cs/resxresourcereader2.cs#1)]
 [!code-vb[System.Resources.ResXDataNode.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxdatanode.class/vb/resxresourcereader2.vb#1)]  
  
 <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>プロパティは`true`の値、<xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>プロパティは、<xref:System.Resources.ResXDataNode>リソース値ではなくオブジェクトします。 これにより、リソース アイテムのコメントから使用可能な<xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType>プロパティ。  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直前の呼び出し元に対する完全な信頼。 この型は、部分的に信頼されたコードでは使用できません。</permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Resources.ResXDataNode" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXDataNode (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXDataNode(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXDataNode : string * obj -&gt; System.Resources.ResXDataNode" Usage="new System.Resources.ResXDataNode (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">リソースの名前。</param>
        <param name="value">格納するリソース。</param>
        <summary>
          <see cref="T:System.Resources.ResXDataNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="value" /> に指定されたリソースがシリアル化をサポートしていません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> は長さ 0 の文字列です。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXDataNode (string name, System.Resources.ResXFileRef fileRef);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Resources.ResXFileRef fileRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.#ctor(System.String,System.Resources.ResXFileRef)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, fileRef As ResXFileRef)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXDataNode(System::String ^ name, System::Resources::ResXFileRef ^ fileRef);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXDataNode : string * System.Resources.ResXFileRef -&gt; System.Resources.ResXDataNode" Usage="new System.Resources.ResXDataNode (name, fileRef)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileRef" Type="System.Resources.ResXFileRef" />
      </Parameters>
      <Docs>
        <param name="name">リソースの名前。</param>
        <param name="fileRef">リソースとして使用するファイル参照。</param>
        <summary>リソース ファイルへの参照を使用して、<see cref="T:System.Resources.ResXDataNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> が <see langword="null" /> または <paramref name="fileRef" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> は長さ 0 の文字列です。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXDataNode (string name, object value, Func&lt;Type,string&gt; typeNameConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value, class System.Func`2&lt;class System.Type, string&gt; typeNameConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.#ctor(System.String,System.Object,System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object, typeNameConverter As Func(Of Type, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXDataNode(System::String ^ name, System::Object ^ value, Func&lt;Type ^, System::String ^&gt; ^ typeNameConverter);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXDataNode : string * obj * Func&lt;Type, string&gt; -&gt; System.Resources.ResXDataNode" Usage="new System.Resources.ResXDataNode (name, value, typeNameConverter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="typeNameConverter" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">リソースの名前。</param>
        <param name="value">格納するリソース。</param>
        <param name="typeNameConverter">
          <see cref="T:System.Type" /> を受け取って、<see cref="T:System.Type" /> の名前を含む文字列を返すメソッドへの参照。</param>
        <summary>
          <see cref="T:System.Resources.ResXDataNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="value" /> に指定されたリソースがシリアル化をサポートしていません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> は長さ 0 の文字列です。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResXDataNode (string name, System.Resources.ResXFileRef fileRef, Func&lt;Type,string&gt; typeNameConverter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Resources.ResXFileRef fileRef, class System.Func`2&lt;class System.Type, string&gt; typeNameConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.#ctor(System.String,System.Resources.ResXFileRef,System.Func{System.Type,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, fileRef As ResXFileRef, typeNameConverter As Func(Of Type, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResXDataNode(System::String ^ name, System::Resources::ResXFileRef ^ fileRef, Func&lt;Type ^, System::String ^&gt; ^ typeNameConverter);" />
      <MemberSignature Language="F#" Value="new System.Resources.ResXDataNode : string * System.Resources.ResXFileRef * Func&lt;Type, string&gt; -&gt; System.Resources.ResXDataNode" Usage="new System.Resources.ResXDataNode (name, fileRef, typeNameConverter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileRef" Type="System.Resources.ResXFileRef" />
        <Parameter Name="typeNameConverter" Type="System.Func&lt;System.Type,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="name">リソースの名前。</param>
        <param name="fileRef">リソースとして使用するファイル参照。</param>
        <param name="typeNameConverter">
          <see cref="T:System.Type" /> を受け取って、<see cref="T:System.Type" /> の名前を含む文字列を返すメソッドへの参照。</param>
        <summary>リソース ファイルへの参照を使用して、<see cref="T:System.Resources.ResXDataNode" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> が <see langword="null" /> または <paramref name="fileRef" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> は長さ 0 の文字列です。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXDataNode.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Resources.ResXDataNode.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このリソースに関する任意のコメントを取得または設定します。</summary>
        <value>コメントを表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コメントは、リソースに割り当てられていない場合の項目の値、<xref:System.Resources.ResXDataNode.Comment%2A>プロパティは<xref:System.String.Empty?displayProperty=nameWithType>します。  
  
 アクセスする、<xref:System.Resources.ResXDataNode.Comment%2A>をインスタンス化して、既存の XML リソース ファイル内のデータ ノードのプロパティを<xref:System.Resources.ResXResourceReader>オブジェクト、設定、<xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A?displayProperty=nameWithType>プロパティを`true`を呼び出すと、<xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType>を取得するメソッド、 <xref:System.Collections.IDictionaryEnumerator>XML リソース ファイル内の項目を列挙するために使用するオブジェクト。 <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType>プロパティが返す、<xref:System.Resources.ResXDataNode>オブジェクト。  
  
   
  
## Examples  
 例をご覧ください、<xref:System.Resources.ResXDataNode>クラス。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileRef">
      <MemberSignature Language="C#" Value="public System.Resources.ResXFileRef FileRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Resources.ResXFileRef FileRef" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXDataNode.FileRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileRef As ResXFileRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Resources::ResXFileRef ^ FileRef { System::Resources::ResXFileRef ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileRef : System.Resources.ResXFileRef" Usage="System.Resources.ResXDataNode.FileRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResXFileRef</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このリソースのファイル参照を取得します。</summary>
        <value>このリソースで使用している場合はファイル参照。 このリソースに、<see cref="T:System.Object" /> として値が格納されていた場合、<see langword="null" /> が返されます</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNodePosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point GetNodePosition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point GetNodePosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetNodePosition" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodePosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point GetNodePosition();" />
      <MemberSignature Language="F#" Value="member this.GetNodePosition : unit -&gt; System.Drawing.Point" Usage="resXDataNode.GetNodePosition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リソース ファイル中のリソースの位置を取得します。</summary>
        <returns>リソース ファイルにおける、このリソースの位置を行位置 (<see cref="P:System.Drawing.Point.X" />) および列位置 (<see cref="P:System.Drawing.Point.Y" />) で指定する構造。 このリソースがリソース ファイルに含まれていない場合、このメソッドは <see cref="P:System.Drawing.Point.X" /> = 0 および <see cref="P:System.Drawing.Point.Y" /> = 0 の構造体を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このノードに格納されているオブジェクトを取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetValue(System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (typeResolver As ITypeResolutionService) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.ComponentModel.Design.ITypeResolutionService -&gt; obj" Usage="resXDataNode.GetValue typeResolver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="typeResolver">型コンバーターを検索する際に使用する型解決サービス。</param>
        <summary>指定した型解決サービスを使用して、このノードに格納されているオブジェクトを取得します。</summary>
        <returns>格納した値に対応するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メモリに格納されている値が現在存在する場合、直接返されます。 リソース ファイルに格納され、ファイルの参照でない場合<xref:System.Resources.ResXDataNode.GetValue%2A>探し、<xref:System.ComponentModel.TypeConverter>文字列から適切なオブジェクトに変換できる、指定した型解決サービスを使用しています。 リソースがファイルの参照、<xref:System.Resources.ResXDataNode.GetValue%2A>逆シリアル化しようとしています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException">対応する型が見つからないか、適切な型コンバーターを利用できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Reflection.AssemblyName[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Reflection.AssemblyName[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetValue(System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (names As AssemblyName()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Reflection.AssemblyName[] -&gt; obj" Usage="resXDataNode.GetValue names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Reflection.AssemblyName[]" />
      </Parameters>
      <Docs>
        <param name="names">オブジェクトの型を検索する対象アセンブリのリスト。</param>
        <summary>指定したアセンブリの検索により、このノードに格納されているオブジェクトを取得します。</summary>
        <returns>格納した値に対応するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メモリに格納されている値が現在存在する場合、直接返されます。 リソース ファイルに格納され、ファイルの参照でない場合<xref:System.Resources.ResXDataNode.GetValue%2A>名で識別されるオブジェクトの対応する型を検索するアセンブリの検索を検索、<xref:System.ComponentModel.TypeConverter>文字列から適切なオブジェクトに変換することができます。 リソースがファイルの参照、<xref:System.Resources.ResXDataNode.GetValue%2A>逆シリアル化しようとしています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException">対応する型が見つからないか、適切な型コンバーターを利用できません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValueTypeName">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>値の型名を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValueTypeName">
      <MemberSignature Language="C#" Value="public string GetValueTypeName (System.ComponentModel.Design.ITypeResolutionService typeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetValueTypeName(class System.ComponentModel.Design.ITypeResolutionService typeResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetValueTypeName(System.ComponentModel.Design.ITypeResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueTypeName (typeResolver As ITypeResolutionService) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetValueTypeName(System::ComponentModel::Design::ITypeResolutionService ^ typeResolver);" />
      <MemberSignature Language="F#" Value="member this.GetValueTypeName : System.ComponentModel.Design.ITypeResolutionService -&gt; string" Usage="resXDataNode.GetValueTypeName typeResolver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeResolver" Type="System.ComponentModel.Design.ITypeResolutionService" />
      </Parameters>
      <Docs>
        <param name="typeResolver">この型のコンバーターを検索する際に使用する型解決サービス。</param>
        <summary>指定された型解決サービスを使用して、値の型名を取得します。</summary>
        <returns>型の完全修飾名を表す文字列。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeLoadException">対応する型が見つかりませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueTypeName">
      <MemberSignature Language="C#" Value="public string GetValueTypeName (System.Reflection.AssemblyName[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetValueTypeName(class System.Reflection.AssemblyName[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.GetValueTypeName(System.Reflection.AssemblyName[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueTypeName (names As AssemblyName()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetValueTypeName(cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.GetValueTypeName : System.Reflection.AssemblyName[] -&gt; string" Usage="resXDataNode.GetValueTypeName names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Reflection.AssemblyName[]" />
      </Parameters>
      <Docs>
        <param name="names">型をチェックするアセンブリ。</param>
        <summary>指定されたアセンブリを調べることによって、値の型名を取得します。</summary>
        <returns>型の完全修飾名を表す文字列。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeLoadException">対応する型が見つかりませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Resources.ResXDataNode.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Resources.ResXDataNode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このリソースの名前を取得または設定します。</summary>
        <value>リソース名に対応する文字列。 名前を割り当てなかった場合、このプロパティは長さ 0 の文字列を返します。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">名前プロパティが <see langword="null" /> に設定されています。</exception>
        <exception cref="T:System.ArgumentException">名前プロパティは、長さ 0 の文字列に設定されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Resources.ResXDataNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (si As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ si, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">データを読み込む先のオブジェクト。</param>
        <param name="context">このシリアル化のシリアル化先。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、対象オブジェクトをシリアル化するために必要なデータを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Resources.ResXDataNode> のインスタンスが <xref:System.Runtime.Serialization.ISerializable> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>