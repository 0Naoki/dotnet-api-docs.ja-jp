<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ResXResourceReader.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac530db360eb3d74b3d80be421c67d52ca654a87bbb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30db360eb3d74b3d80be421c67d52ca654a87bbb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceReader">
          <source>Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.</source>
          <target state="translated">XML リソース (.resx) ファイルとストリームを列挙し、連続したリソース名とリソース値のペアを読み取ります。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class provides a default implementation of the <ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph> interface that reads resource information in an XML format.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>クラスの既定の実装を提供する、<ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph>を XML 形式でリソース情報を読み取るインターフェイス。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>To read resource information from a binary resource format, use the <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> class.</source>
          <target state="translated">バイナリ リソース形式からリソース情報を読み取るには使用、<ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>You use the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class to enumerate resources in .resx files by traversing the dictionary enumerator (<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>) that is returned by the <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>ディクショナリ列挙子を走査することで、.resx ファイル内のリソースを列挙するクラス (<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>) によって返される、<ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>You call the methods provided by <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> to advance to the next resource and to read the name and value of each resource in the .resx file.</source>
          <target state="translated">によって提供されるメソッドを呼び出す<ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>次のリソースに進めると、名前と、.resx ファイル内の各リソースの値を読み取れません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class provides two enumerators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>クラスには、次の 2 つの列挙子が用意されています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object; we recommend that you use this method to enumerate resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph>メソッドを返します、<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>オブジェクトです。 このメソッドを使用して、リソースを列挙することをお勧めします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method is an explicit interface implementation that returns an <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> object; we do not recommend its use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph>メソッドは、明示的なインターフェイス実装を返す、 <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> ; オブジェクトの使用はお勧めしません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method to obtain an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object that is used to enumerate the resources in a .resx file.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>を取得するメソッド、 <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> .resx ファイル内のリソースを列挙するために使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The example includes a <ph id="ph1">`CreateResourceFile`</ph> routine that creates the necessary resource file.</source>
          <target state="translated">この例では、<ph id="ph1">`CreateResourceFile`</ph>必要なリソース ファイルを作成するルーチンです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>If the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value of the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph> property is a <ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph> object rather than the resource value.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>の値、<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=nameWithType&gt;</ph>プロパティは、<ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph>リソース値ではなくオブジェクトします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>This makes a resource item's comment available from the <ph id="ph1">&lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">これにより、リソース アイテムのコメントから使用可能な<ph id="ph1">&lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and enumerates the resources in a .resx file,</source>
          <target state="translated">次の例のセット、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>.resx ファイル内のリソースを列挙します</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>If <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Resources.ResXDataNode&gt;</ph> items in the enumeration can be either:</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>は<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Resources.ResXDataNode&gt;</ph>列挙内の項目には、いずれかを指定できます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>Named resources along with their data.</source>
          <target state="translated">データとリソースの名前です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">ここで、<ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType&gt;</ph>プロパティは<ph id="ph2">`null`</ph>します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>Named resources along with the name of the file that contains the resource data.</source>
          <target state="translated">リソース データを格納しているファイルの名前とリソースの名前です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Resources.ResXFileRef&gt;</ph> object that provides information about the resource, including its filename.</source>
          <target state="translated">ここで、<ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=nameWithType&gt;</ph>プロパティから返される、<ph id="ph2">&lt;xref:System.Resources.ResXFileRef&gt;</ph>をそのファイル名を含む、リソースに関する情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>If relative file names are used, you should always set the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph> property to provide a reference point for the relative file path.</source>
          <target state="translated">常に設定する必要があります相対ファイル名を使用している場合、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph>プロパティを相対ファイル パスの参照ポイントを提供します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a <ph id="ph1">&lt;xref:System.Resources.ResXResourceSet&gt;</ph> object and call its <ph id="ph2">`GetString`</ph> and <ph id="ph3">`GetObject`</ph> methods.</source>
          <target state="translated">そのリソースを列挙するには、インスタンスを作成できるのではなく、.resx ファイルから名前付きリソースを取得する場合、<ph id="ph1">&lt;xref:System.Resources.ResXResourceSet&gt;</ph>オブジェクト呼び出しとその<ph id="ph2">`GetString`</ph>と<ph id="ph3">`GetObject`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>クラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> exception is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可があるない場合に例外がスローされます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>The following example demonstrates how to use a <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> to iterate through the resources in a .resx file.</source>
          <target state="translated">次の例で使用する方法、 <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> .resx ファイル内のリソースを反復処理します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>First, the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph><ph id="ph2">`rsxr`</ph> is created for the file <ph id="ph3">`items.resx`</ph>.</source>
          <target state="translated">最初に、 <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> <ph id="ph2">`rsxr`</ph>ファイルの作成は<ph id="ph3">`items.resx`</ph>します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>Next, the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method is used to create an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> to iterate through the resources and display the contents to the console.</source>
          <target state="translated">次に、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>メソッドの使用を作成、<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>リソースを反復処理し、内容をコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Resources.ResXResourceReader">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">部分信頼コードでこのクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>An input stream that contains resources.</source>
          <target state="translated">リソースを格納している入力ストリーム。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class for the specified stream.</source>
          <target state="translated">指定したストリーム用の <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Dispose%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph> methods do not close the stream you specify in this constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Dispose%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>メソッドは、このコンス トラクターで指定したストリームを閉じないでください。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>A text input stream that contains resources.</source>
          <target state="translated">リソースを格納しているテキスト入力ストリーム。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class for the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> の <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>The path of the resource file to read.</source>
          <target state="translated">読み取るリソース ファイルのパス。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class for the specified resource file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを、指定したリソース ファイル用に初期化します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>The following example creates a new instance of the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class for the specified file, iterates through the resources of the file, and displays the contents to the console.</source>
          <target state="translated">次の例は、の新しいインスタンスを作成、 <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> 、指定されたファイルのクラスは、ファイルのリソースを反復処理し、内容をコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An input stream that contains resources.</source>
          <target state="translated">リソースを格納している入力ストリーム。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">リソースで指定されている型名を解決するオブジェクト。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using an input stream and a type resolution service.</source>
          <target state="translated">入力ストリームと型解決サービスを使用して、<ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>An input stream that contains resources.</source>
          <target state="translated">リソースを格納している入力ストリーム。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects that specifies one or more assemblies.</source>
          <target state="translated">1 つ以上のアセンブリを指定する <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">アセンブリは、リソースの型名を実際の型に解決するために使用されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using a stream and an array of assembly names.</source>
          <target state="translated">ストリームとアセンブリ名の配列を使用して、<ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>A text stream reader that contains resources.</source>
          <target state="translated">リソースを格納しているテキスト ストリーム リーダー。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">リソースで指定されている型名を解決するオブジェクト。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using a text stream reader and a type resolution service.</source>
          <target state="translated">テキスト ストリーム リーダーと型解決サービスを使用して、<ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>An object used to read resources from a stream of text.</source>
          <target state="translated">テキストのストリームからリソースを読み取るために使用するオブジェクト。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects that specifies one or more assemblies.</source>
          <target state="translated">1 つ以上のアセンブリを指定する <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">アセンブリは、リソースの型名を実際の型に解決するために使用されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> object and an array of assembly names.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> オブジェクトとアセンブリ名の配列を使用して、<ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">リソースを格納している XML リソース ファイルの名前。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">リソースで指定されている型名を解決するオブジェクト。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using a file name and a type resolution service.</source>
          <target state="translated">ファイル名と型解決サービスを使用して、<ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>The name of an XML resource file that contains resources.</source>
          <target state="translated">リソースを格納している XML リソース ファイルの名前。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects that specifies one or more assemblies.</source>
          <target state="translated">1 つ以上のアセンブリを指定する <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">アセンブリは、リソースの型名を実際の型に解決するために使用されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> class using an XML resource file name and an array of assembly names.</source>
          <target state="translated">XML リソース ファイル名とアセンブリ名の配列を使用して、<ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>Gets or sets the base path for the relative file path specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> オブジェクトで指定されている相対ファイル パスのベース パスを取得または設定します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>A path that, if prepended to the relative file path specified in a <ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> object, yields an absolute path to a resource file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResXFileRef" /&gt;</ph> オブジェクトで指定されている相対ファイル パスの前に付加されると、リソース ファイルの絶対パスとなるパス。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph> property is used to resolve relative file path references that are assigned to the <ph id="ph2">&lt;xref:System.Resources.ResXFileRef.FileName%2A&gt;</ph> property of <ph id="ph3">&lt;xref:System.Resources.ResXFileRef&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph>に割り当てられている相対ファイル パス参照を解決するのにはプロパティが使用される、<ph id="ph2">&lt;xref:System.Resources.ResXFileRef.FileName%2A&gt;</ph>プロパティ<ph id="ph3">&lt;xref:System.Resources.ResXFileRef&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>By default, its value is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>, and relative file path references are resolved in relationship to the current directory returned by the <ph id="ph2">&lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">既定では、その値は<ph id="ph1">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>、によって返される現在のディレクトリへのリレーションシップで相対ファイル パス参照を解決し、<ph id="ph2">&lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>You should set this property before you begin enumerating resources.</source>
          <target state="translated">リソースの列挙を開始する前に、このプロパティを設定する必要があります。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>The following example creates an XML resource file that contains images of dog breeds, and also creates a string resource that specifies the application that created the resource.</source>
          <target state="translated">次の例では、dog 品種のイメージを含むし、も、リソースを作成したアプリケーションを指定する文字列リソースを作成する XML リソース ファイルを作成します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source><ph id="ph1">&lt;xref:System.Resources.ResXFileRef&gt;</ph> objects are used to store the path to the images rather than storing the binary images themselves in the resource file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXFileRef&gt;</ph> オブジェクトは、リソース ファイルに、バイナリ イメージ自体を保存するのではなく、イメージへのパスの格納に使用されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph> property so that the relative file paths in the images' file names are interpreted as subdirectories of a directory named C:\data<ph id="ph2">\\</ph>.</source>
          <target state="translated">例のセット、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph>プロパティは、イメージのファイル名に相対ファイル パスを C:\data という名前のディレクトリのサブディレクトリとして解釈されます<ph id="ph2">\\</ph>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>Note that you must add a reference to System.Drawing.dll to compile the project successfully.</source>
          <target state="translated">プロジェクトを正常にコンパイルする System.Drawing.dll への参照を追加する必要がありますに注意してください。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>The example also requires that the necessary images exist in a directory named C:\data\images<ph id="ph1">\\</ph>.</source>
          <target state="translated">また、例では C:\data\images をという名前のディレクトリに必要なイメージが存在する必要があります<ph id="ph1">\\</ph>です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceReader.BasePath">
          <source>In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.</source>
          <target state="translated">設定操作では、XML リソース ファイルが既にアクセスされていて使用中であるため、値は指定できません。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.Close">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> によって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Close">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph> enables the resources used by the <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>で使用したリソースを有効に、<ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>を他の目的に再割り当てされます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Close">
          <source>For more information about <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Close">
          <source>The following example displays the resources of a file to the console, and then uses the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph> method to shut down the reader and to make its resources available for other processes.</source>
          <target state="translated">次の例は、ファイルのリソースをコンソールに表示しを使用して、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>メソッド、リーダーをシャット ダウンし、そのリソースを他のプロセスを使用できるようにします。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>This method can be called by either the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">このメソッドは、いずれかを呼び出すことができます、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph>メソッドまたは<ph id="ph2">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph> invokes this method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph> このメソッドを呼び出して、<ph id="ph2">`disposing`</ph>パラメーターに設定<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes this method with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> このメソッドを呼び出して<ph id="ph2">`disposing`</ph>'éý'<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> パラメーターが <ph id="ph2">`true`</ph> の場合、このメソッドは、この <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> をオーバーライドする場合は、以前に <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see  and .</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してくださいとします。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.Finalize">
          <source>This member overrides the <ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> method.</source>
          <target state="translated">このメンバーは、<ph id="ph1">&lt;see cref="M:System.Object.Finalize" /&gt;</ph> メソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Resources.ResXResourceReader">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> オブジェクトを作成して初期化し、XML リソース ファイル形式の内容が含まれている文字列を読み込みます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">XML リソース書式付き情報を格納している文字列。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> オブジェクトを作成して初期化し、XML リソース ファイル形式の内容が含まれている文字列を読み込みます。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>An object that reads resources from the <ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> 文字列からリソースを読み込むオブジェクト。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>A string containing XML resource-formatted information.</source>
          <target state="translated">XML リソース書式付き情報を格納している文字列。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that resolves type names specified in a resource.</source>
          <target state="translated">リソースで指定されている型名を解決するオブジェクト。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.ITypeResolutionService" /&gt;</ph> object to resolve type names specified in a resource.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> オブジェクトを作成して初期化し、XML リソース ファイル形式の内容が含まれている文字列を読み込みます。そして、<ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.ITypeResolutionService" /&gt;</ph> オブジェクトを使用して、リソースで指定されている型名を解決します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>An object that reads resources from the <ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> 文字列からリソースを読み込むオブジェクト。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>A string whose contents are in the form of an XML resource file.</source>
          <target state="translated">XML リソース ファイル形式の内容が含まれている文字列。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects that specifies one or more assemblies.</source>
          <target state="translated">1 つ以上のアセンブリを指定する <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> オブジェクトの配列。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
          <target state="translated">アセンブリは、リソースの型名を実際の型に解決するために使用されます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of <ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> objects to resolve type names specified in a resource.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> オブジェクトを作成して初期化し、XML リソース ファイル形式の内容が含まれている文字列を読み込みます。そして、<ph id="ph2">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> オブジェクトの配列を使用して、リソースで指定されている型名を解決します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>An object that reads resources from the <ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileContents" /&gt;</ph> 文字列からリソースを読み込むオブジェクト。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])">
          <source>This member cannot be inherited by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されたコードでは継承できません。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>Returns an enumerator for the current <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> オブジェクトの列挙子を返します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>An enumerator for the current <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Resources.ResourceReader" /&gt;</ph> オブジェクトの列挙子。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>メソッドは、XML リソース (.resx) ストリームに現在関連付けられている文字列の名前/値ペアを取得<ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>However, if the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> before you call <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>, the resource items are retrieved as <ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph> objects.</source>
          <target state="translated">ただし場合、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>を呼び出す前に<ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>、リソース アイテムのとして取得<ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>In this case, all resource nodes are returned regardless of type.</source>
          <target state="translated">この場合、リソースのすべてのノードが型に関係なく返されます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method to obtain an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object that is used to enumerate the resources in a .resx file.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>を取得するメソッド、 <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> .resx ファイル内のリソースを列挙するために使用できるオブジェクト。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetEnumerator">
          <source>The example includes a <ph id="ph1">`CreateResourceFile`</ph> routine that creates the necessary resource file.</source>
          <target state="translated">この例では、<ph id="ph1">`CreateResourceFile`</ph>必要なリソース ファイルを作成するルーチンです。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</source>
          <target state="translated">現在の XML リソース ファイルまたは XML リソース ストリームからデザイン時のプロパティを取得できる、ディクショナリ列挙子を提供します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>An enumerator for the metadata in a resource.</source>
          <target state="translated">リソース内のメタデータの列挙子。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>Resources are stored as name/value pairs in a resource file or stream.</source>
          <target state="translated">リソースは、リソース ファイルまたはストリームの名前/値のペアとして格納されます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources.</source>
          <target state="translated">メタデータと呼ばれる、デザイン時のプロパティは、リソース ファイルまたは実行時データのリソースと一緒にストリームに格納されます。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph> method provides an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object that can retrieve the metadata from the resource file or stream associated with the current <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph>メソッドには、<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>オブジェクトからリソース ファイルまたはストリームに現在関連付けられているメタデータを取得できる<ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>However, if the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> before you call <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph>, no resource nodes are retrieved.</source>
          <target state="translated">ただし場合、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>を呼び出す前に<ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph>、リソース ノードが取得されません。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph> method to iterate through the metadata resources in an XML resource file.</source>
          <target state="translated">次の例では、 <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph> XML リソース ファイル内のメタデータ リソースを反復処理するメソッド。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.GetMetadataEnumerator">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator for the current <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> オブジェクトの列挙子を返します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>For a description of this member, see the <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph> method.</source>
          <target state="translated">このメンバーの説明については、<ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph> メソッドのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> オブジェクトに関連付けられている XML リソース (.resx) ストリームまたは文字列の、名前と値のペアを反復処理できる列挙子。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator">
          <source>To enumerate the resources in a .resx file, we recommend that you call the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> method, and then call the <ph id="ph2">`MoveNext`</ph> method on the returned <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object.</source>
          <target state="translated">.Resx ファイル内のリソースを列挙することをお勧めを呼び出すこと、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=nameWithType&gt;</ph>メソッド、および、呼び出し、<ph id="ph2">`MoveNext`</ph>メソッドで返された<ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Resources.ResXResourceReader" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose">
          <source>For a description of this member, see the <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> method.</source>
          <target state="translated">このメンバーの説明については、<ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> メソッドのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Resources.ResXResourceReader.System#IDisposable#Dispose">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>Gets or sets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph> objects are returned when reading the current XML resource file or stream.</source>
          <target state="translated">現在の XML リソース ファイルまたは XML リソース ストリームを読み込んでいるときに、<ph id="ph1">&lt;see cref="T:System.Resources.ResXDataNode" /&gt;</ph> オブジェクトが返されるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resource data nodes are retrieved; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if resource data nodes are ignored.</source>
          <target state="translated">リソース データ ノードが取得される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。リソース データ ノードが無視される場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>You can set the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property before you begin enumerating resources.</source>
          <target state="translated">設定することができます、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>プロパティ リソースの列挙を開始する前にします。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>By default, its value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定では、その値は<ph id="ph1">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>The following example enumerates and displays resource items in an XML file.</source>
          <target state="translated">次の例を列挙し、XML ファイル内のリソース アイテムが表示されます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>Initially, <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> is set to <ph id="ph2">`false`</ph> to show both data and metadata items as they occur in the resource file.</source>
          <target state="translated">最初に、<ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph>に設定されている<ph id="ph2">`false`</ph>をリソース ファイルで発生すると、データおよびメタデータの両方の項目を表示します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>The second enumeration has the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> set to <ph id="ph2">`true`</ph> so that resource data elements are returned as <ph id="ph3">&lt;xref:System.Resources.ResXDataNode&gt;</ph> objects.</source>
          <target state="translated">2 番目の列挙体には、 <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> 'éý'<ph id="ph2">`true`</ph>リソース データ要素として返されるように<ph id="ph3">&lt;xref:System.Resources.ResXDataNode&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>The resource XML file used by the example contains one data node and one metadata node.</source>
          <target state="translated">この例で使用されるリソースの XML ファイルには、1 つのデータ ノードと 1 つのメタデータのノードが含まれています。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>To use the XML file with the previous example, copy the following text and save it to a file named Resource1.resx.</source>
          <target state="translated">前の例では、XML ファイルを使用するに次のテキストをコピーし、Resource1.resx をという名前のファイルに保存します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Resources.ResXResourceReader.UseResXDataNodes">
          <source>In a set operation, the enumerator for the resource file or stream is already open.</source>
          <target state="translated">設定操作では、リソース ファイルまたはリソース ストリームの列挙子は既に開かれています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>