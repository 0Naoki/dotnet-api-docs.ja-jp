<Type Name="WorkflowSchedulerService" FullName="System.Workflow.Runtime.Hosting.WorkflowSchedulerService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="96d0e8b197d771a9e4731eda528d1ba92c22d6a7" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37487528" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowSchedulerService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowSchedulerService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowSchedulerService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type WorkflowSchedulerService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8871a-101">ワークフローを実行しメモリ内タイマー登録とイベントを管理する独自のスレッド プールを実装するための機構を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8871a-101">Provides a mechanism to implement your own thread pool to execute the workflow and manage in-memory timer registration and events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="8871a-102"><xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> は、ワークフロー ランタイム エンジン ホストでワークフロー インスタンスを実行するスレッドを作成するすべてのクラスの基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="8871a-102"><xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host.</span></span> <span data-ttu-id="8871a-103">その中には、<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> や <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> があります。</span><span class="sxs-lookup"><span data-stu-id="8871a-103">These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="8871a-104">
        <para>継承する場合<see cref="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />、次のメンバーをオーバーライドする必要があります: <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)" />、<see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />と<see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />します。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="8871a-104">
          <para>When you inherit from <see cref="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />, you must override the following members: <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)" />, <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" /> and <see cref="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowSchedulerService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowSchedulerService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8871a-105">派生クラスとして実装された場合、<see cref="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-105">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8871a-106">次の例は、<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> オブジェクト (<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> から継承) のインスタンスを作成し、作成したインスタンスをランタイムに追加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8871a-106">The following example demonstrates creating an instance of a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> object (that inherits from <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>) and adding it to the runtime.</span></span> <span data-ttu-id="8871a-107">この例は、Program.cs ファイルに含まれている、入れ子にされた例外ハンドラーを示す SDK サンプルです。</span><span class="sxs-lookup"><span data-stu-id="8871a-107">This example is from the Nested Exception Handlers SDK sample, from the Program.cs file.</span></span> <span data-ttu-id="8871a-108">詳細については、次を参照してください。[例外ハンドラーのサンプルの入れ子になった](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265)します。</span><span class="sxs-lookup"><span data-stu-id="8871a-108">For more information, see [Nested Exception Handlers Sample](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span></span>  
  
 [!code-csharp[WF_Samples#161](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#161)]
 [!code-vb[WF_Samples#161](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected internal abstract void Cancel (Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Cancel(valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Cancel (timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Cancel(Guid timerId);" />
      <MemberSignature Language="F#" Value="abstract member Cancel : Guid -&gt; unit" Usage="workflowSchedulerService.Cancel timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerId">
          <span data-ttu-id="8871a-109">キャンセルする既存のスケジュール済みスレッドに関連付けられている <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-109">The <see cref="T:System.Guid" /> associated with the existing scheduled thread to cancel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8871a-110">派生クラスでオーバーライドされた場合、指定された <paramref name="timerId" /> を持つスケジュール済み作業項目をキャンセルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-110">When overridden in a derived class, cancels the scheduled work item with the given <paramref name="timerId" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8871a-111"><xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A> は、保留中の作業項目のキューから、以前のワークフロー インスタンス スケジュール要求を削除します。</span><span class="sxs-lookup"><span data-stu-id="8871a-111"><xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A> removes from the pending work items queue a previous request to schedule a workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schedule">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8871a-112">ランタイムはこのメソッドを呼び出して、ワークフロー インスタンスの実行に必要な新しいスレッドを要求します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-112">Called by the runtime to request a new thread to run a workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member Schedule : System.Threading.WaitCallback * Guid -&gt; unit" Usage="workflowSchedulerService.Schedule (callback, workflowInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="8871a-113">実行するメソッドを表す <see cref="T:System.Threading.WaitCallback" /> マルチキャスト デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-113">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span>
          </span>
        </param>
        <param name="workflowInstanceId">
          <span data-ttu-id="8871a-114">ワークフロー インスタンスを表す <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-114">A <see cref="T:System.Guid" /> that represents the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8871a-115">派生クラスでオーバーライドされると、このメソッドは、特定のインスタンス ID に関する作業項目 (コールバック) をスケジュールするためにランタイムによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-115">When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular instance ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8871a-116">新しいスレッドで実行するデリゲート メソッドを作成するには、<xref:System.Threading.WaitCallback> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="8871a-116">Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected internal abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId, valuetype System.DateTime whenUtc, valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub Schedule (callback As WaitCallback, workflowInstanceId As Guid, whenUtc As DateTime, timerId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Schedule(System::Threading::WaitCallback ^ callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="F#" Value="abstract member Schedule : System.Threading.WaitCallback * Guid * DateTime * Guid -&gt; unit" Usage="workflowSchedulerService.Schedule (callback, workflowInstanceId, whenUtc, timerId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="whenUtc" Type="System.DateTime" />
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="8871a-117">実行するメソッドを表す <see cref="T:System.Threading.WaitCallback" /> マルチキャスト デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-117">A <see cref="T:System.Threading.WaitCallback" /> multicast delegate that represents the method to run.</span>
          </span>
        </param>
        <param name="workflowInstanceId">
          <span data-ttu-id="8871a-118">追加するワークフロー インスタンスを表す <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-118">A <see cref="T:System.Guid" /> that represents the workflow instance to add.</span>
          </span>
        </param>
        <param name="whenUtc">
          <span data-ttu-id="8871a-119">ワークフロー項目の実行を開始する <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-119">The <see cref="T:System.DateTime" /> to begin running the workflow item.</span>
          </span>
        </param>
        <param name="timerId">
          <span data-ttu-id="8871a-120">スケジュールされるタイマーを表す <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-120">A <see cref="T:System.Guid" /> that represents the scheduled timer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8871a-121">派生クラスでオーバーライドされると、このメソッドは、指定した時刻 (<see cref="T:System.DateTime" />) に特定のワークフロー インスタンスに関する作業項目 (コールバック) が実行されるようにスケジュールするためにランタイムによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8871a-121">When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (<see cref="T:System.DateTime" />).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>