<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowRuntimeService.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b30eb5a5e6360b690bed8bd6e4576d3411e00e47.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b30eb5a5e6360b690bed8bd6e4576d3411e00e47</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Represents the abstract base class from which the workflow runtime engine core services are derived.</source>
          <target state="translated">ワークフロー ランタイム エンジンのコア サービスの派生元となる抽象基本クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can be started and stopped by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> クラスから派生したサービスは、ワークフロー ランタイム エンジンによって開始および停止します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>The order in which the services are started or stopped, however, is indeterminate, and services may require the support of other services in order to properly initialize themselves when they are started, and, conversely, may require the to support of other services in order to properly shut down when they are stopped.</source>
          <target state="translated">ただし、サービスが開始される順序も停止する順序も不定です。また、サービスは、開始時に自身を適切に初期化するために他のサービスのサポートを必要とする場合があります。また、停止時に適切にシャットダウンするために他のサービスのサポートを必要とする場合があります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>To address this problem, the workflow runtime engine provides two-phase mechanisms for starting and stopping services.</source>
          <target state="translated">この問題に対処するために、ワークフロー ランタイム エンジンには、サービスの開始と停止に 2 フェーズ機構が用意されています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>When <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> is called, the workflow runtime engine invokes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method for each of its services that derive from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> が呼び出されると、ワークフロー ランタイム エンジンは、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> クラスから派生したそのサービスごとに <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>After all of these services have been started, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event, which causes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method to be invoked for each workflow runtime engine service.</source>
          <target state="translated">これらのサービスがすべて開始されると、ワークフロー ランタイム エンジンは <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> イベントを発生させます。このイベントが基になって、ワークフロー ランタイム エンジンのサービスごとに <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Your service can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method to participate in this two phase process.</source>
          <target state="translated">サービスは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> メソッドをオーバーライドしてこの 2 フェーズ プロセスに参加できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Similarly, when <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method provide this two-phase mechanism.</source>
          <target state="translated">同様に、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> が呼び出されたときも、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> メソッド、<ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> イベント、および <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> メソッドが、この 2 フェーズ機構を使用します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>The State property contains a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;</ph> value that indicates whether the service is in the process of starting or stopping or is completely started or stopped.</source>
          <target state="translated">State プロパティは、サービスが開始または停止しようとしているか、あるいは完全に開始または停止したかを示す <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&gt;</ph> 値を格納します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can raise the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> event when they encounter a condition that causes an unhandled exception by calling <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> クラスから派生したサービスは、未処理の例外の原因となる状態を検出すると、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> を呼び出すことにより、<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> イベントを発生させることができます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
          <source>Services derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class ultimately derives from the <ph id="ph5">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> クラス、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> クラス、<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> クラス、および <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> クラスから派生したサービスは、結局は <ph id="ph5">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> クラスから派生しています。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor">
          <source>When implemented in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> class.</source>
          <target state="translated">派生クラスとして実装された場合、<ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> is initialized to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> は <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph> に初期化されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /&gt;</ph> event.</source>
          <target state="translated">派生クラスでオーバーライドされるときに、ワークフロー ランタイム エンジンが <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /&gt;</ph> イベントを発生させると呼び出されるメソッドを表します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class implements a two-phase starting mechanism so that workflow runtime engine services may perform any initialization that depends on other services after the workflow runtime engine has invoked the  <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method for all of its workflow runtime engine services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> クラスは、2 フェーズ開始機構を実装しています。この機構により、ワークフロー ランタイム エンジンのサービスは、ワークフロー ランタイム エンジンがそのすべてのサービスの <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> メソッドを呼び出した後に、他のサービスに依存する初期化を実行することができます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>After the workflow runtime engine has called the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method of all of its workflow runtime engine services, it raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、そのすべてのサービスの <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> メソッドを呼び出した後で <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>You can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method to provide any final startup functionality required by your service when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> メソッドをオーバーライドして、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> イベントが発生したときにサービスが必要とする最終的な開始機能を持たせることができます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>The mechanics of subscribing and unsubscribing from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event is handled internally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> イベントのサブスクリプションとサブスクリプションの解除は、内部で処理されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>If your service is added to the workflow runtime engine by a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> after the workflow runtime engine has already been started, the workflow runtime engine will call <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on your service.</source>
          <target state="translated">ワークフロー ランタイム エンジンを起動した後、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> を呼び出してサービスをワークフロー ランタイム エンジンに追加した場合、ワークフロー ランタイム エンジンはそのサービスに対して <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> from inside the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method.</source>
          <target state="translated">ただし、このような場合は、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> イベントが既に発生しているため、サービスは、通常であれば <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> で実行される初期化を、<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> メソッド内から実行することが必要な場合があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine has been started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> をテストすると、ワークフロー ランタイム エンジンが起動されているかどうかを確認できます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph> before <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph> が呼び出される前に <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> performs no action.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> の既定の実装では、アクションは実行されません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>When overridden in a derived class, represents the method that will be called when the workflow runtime engine raises the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /&gt;</ph> event.</source>
          <target state="translated">派生クラスでオーバーライドされるときに、ワークフロー ランタイム エンジンが <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /&gt;</ph> イベントを発生させると呼び出されるメソッドを表します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class implements a two-phase stopping mechanism so that workflow runtime engine services may retain some functionality after their <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method is invoked by the workflow runtime engine in order that they may, if necessary, support the shutdown of other services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> クラスは、2 フェーズ停止機構を実装しています。この機構により、ワークフロー ランタイム エンジンのサービスは、必要であれば、その <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> メソッドがワークフロー ランタイム エンジンによって呼び出された後も、他のサービスのシャットダウンをサポートするための機能を保持できます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>After the workflow runtime engine has called the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method of all of its workflow runtime engine services, it raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、そのすべてのサービスの <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> メソッドを呼び出した後で <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>You can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method to provide any final shutdown functionality required by your service when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> メソッドをオーバーライドして、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> イベントが発生したときにサービスが必要とする最終的なシャットダウン機能を持たせることができます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>The mechanics of subscribing and unsubscribing from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event is handled internally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> イベントのサブスクリプションとサブスクリプションの解除は、内部で処理されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>If your <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> is removed from the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> while the workflow runtime engine is running, the workflow runtime engine will call <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> on your service.</source>
          <target state="translated">ワークフロー ランタイム エンジンの実行中に <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> を呼び出して <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> をワークフロー ランタイム エンジンから削除すると、ワークフロー ランタイム エンジンはそのサービスに対して <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method will not be called for your service.</source>
          <target state="translated">ただし、このような場合は、そのサービスに対して <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> メソッドが呼び出されません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>Therefore, your service may have to perform any final shutdown that it would ordinarily perform in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> from inside the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method.</source>
          <target state="translated">したがってサービスは、通常であれば <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> で実行する最終的なシャットダウンを、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> メソッド内から実行することが必要な場合があります。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine is running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> をテストすると、ワークフロー ランタイム エンジンが実行されているかどうかを確認できます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph> before <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> は、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph> が呼び出される前に <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> performs no action.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> の既定の実装では、アクションは実行されません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>The exception that could not be handled.</source>
          <target state="translated">処理できなかった例外。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">未処理の例外に関連付けられているワークフロー インスタンスの <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>Your service can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> to raise the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> event when it encounters an exception that it cannot handle during its execution.</source>
          <target state="translated">サービスは、実行中に処理できない例外を検出すると、<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> を呼び出して <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType&gt;</ph> イベントを発生させることができます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>You should pass the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> of the workflow instance associated with the unhandled exception.</source>
          <target state="translated">未処理の例外に関連付けられているワークフロー インスタンスの <ph id="ph1">&lt;xref:System.Guid&gt;</ph> を渡す必要があります。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)">
          <source>For example, a timer service might pass the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> associated with the timer for which the exception occurred.</source>
          <target state="translated">たとえば、タイマー サービスは、例外が発生したタイマーに関連付けられている <ph id="ph1">&lt;xref:System.Guid&gt;</ph> を渡します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> for this service.</source>
          <target state="translated">このサービスの <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime">
          <source>The workflow runtime engine sets this property before it calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on the service.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、サービスに対する <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> を呼び出す前に、このプロパティを設定します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>When overridden in a derived class, starts the service and changes the <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> to <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、サービスを開始して、<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> を <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" /&gt;</ph> に変更します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> is invoked by the workflow runtime engine on all of its services that derive from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class when <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> が呼び出されると、ワークフロー ランタイム エンジンは、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> クラスから派生したそのすべてのサービスについて <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> is also invoked by the workflow runtime engine when a workflow runtime engine service is added to the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> after the workflow runtime engine has already started.</source>
          <target state="translated">ワークフロー ランタイム エンジンを開始した後、<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> を呼び出してワークフロー ランタイム エンジンにワークフロー ランタイム エンジン サービスを追加したときも、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> がワークフロー ランタイム エンジンによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is started while it is already running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> の既定の実装は、サービスが開始されたかどうかを追跡し、この情報を使用することによって、既に実行されているサービスが開始された場合は適切な例外をスローします。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>You can provide additional functionality necessary to have your service started by the workflow runtime engine by overriding this method.</source>
          <target state="translated">このメソッドをオーバーライドすることにより、サービスをワークフロー ランタイム エンジンで開始するために必要な追加機能を持たせることができます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>There is no guarantee about which, if any, services will be running when the workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on your service.</source>
          <target state="translated">ワークフロー ランタイム エンジンがサービスに対する <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> を呼び出したときに、存在するどのサービスが実行されているかについての保証はありません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>Therefore, in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method, you should only perform any initialization that does not depend on functionality provided by other services.</source>
          <target state="translated">したがって、<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> メソッドでは、他のサービスが提供する機能に依存しない初期化のみを実行する必要があります。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>This includes functionality provided by core services such as the scheduler service.</source>
          <target state="translated">これには、スケジューラ サービスなどのコア サービスが提供する機能が含まれます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> event after it has called the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method of all of its workflow runtime engine services.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、そのすべてのサービスの <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType&gt;</ph> メソッドを呼び出した後で <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>If your service requires additional initialization after all of the workflow runtime engine services have been started, you can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> method in order to perform this initialization when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> event is raised.</source>
          <target state="translated">ワークフロー ランタイム エンジンのすべてのサービスを開始した後で、サービスをさらに初期化する必要がある場合は、<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> イベントが発生した時点でその初期化を実行するように <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> メソッドをオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>If your service is added to the workflow runtime engine by a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> after the workflow runtime engine has already been started, the workflow runtime engine will call <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on your service.</source>
          <target state="translated">ワークフロー ランタイム エンジンを起動した後、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> を呼び出してサービスをワークフロー ランタイム エンジンに追加した場合、ワークフロー ランタイム エンジンはそのサービスに対して <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event has already occurred, therefore, your service may have to perform any initialization that it would ordinarily perform in <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> from inside the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method.</source>
          <target state="translated">ただし、このような場合は、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> イベントが既に発生しているため、サービスは、通常であれば <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A&gt;</ph> で実行される初期化を、<ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> メソッド内から実行することが必要な場合があります。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine has been started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> をテストすると、ワークフロー ランタイム エンジンが起動されているかどうかを確認できます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> should only be called by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> は、ワークフロー ランタイム エンジンでのみ呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The following example demonstrates calling the Start method on an object derived from <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>, TerminationTrackingService.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> から派生したオブジェクト (TerminationTrackingService) に対する Start メソッドを呼び出す方法を次の例に示します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>This example is from the Termination Tracking Service SDK sample.</source>
          <target state="translated">この例は、終了追跡サービスの SDK サンプルです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Termination Tracking Service Sample<ept id="p1">](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>終了追跡サービスのサンプル<ept id="p1">](http://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic)</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> が null 参照 (Visual Basic の場合は <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>) です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start">
          <source>The service has already been started.</source>
          <target state="translated">サービスが既に開始されています。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>Gets the state of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> の状態を取得します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class implements two-phase mechanisms for both starting and stopping a workflow runtime engine service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> クラスは、ワークフロー ランタイム エンジンのサービスの開始と停止の両方について、2 フェーズ機構を実装しています。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The first phase of the start mechanism begins when the workflow runtime engine calls the implementation of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method for the service.</source>
          <target state="translated">開始機構の最初のフェーズは、ワークフロー ランタイム エンジンがサービスの <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> メソッドの実装を呼び出すと始まります。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>This method should call the base implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph>, which sets <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> を <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> に設定する <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting&gt;</ph> の基本実装を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The second phase occurs after the workflow runtime engine starts all of its workflow runtime engine services when it raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event.</source>
          <target state="translated">2 番目のフェーズは、ワークフロー ランタイム エンジンがそのすべてのサービスを開始した後に起こり、ワークフロー ランタイム エンジンが <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> internally manages a subscription to this event and its handler will set <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> はこのイベントのサブスクリプションを内部で管理し、そのハンドラーは <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> を <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The two-phase mechanism for stopping a workflow runtime engine service begins when the workflow runtime engine calls the implementation of the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method for the service.</source>
          <target state="translated">ワークフロー ランタイム エンジンのサービスを停止する場合の 2 フェーズ機構は、ワークフロー ランタイム エンジンがサービスの <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> メソッドの実装を呼び出すと始まります。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>This method should call the base implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph>, which sets <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> を <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> に設定する <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping&gt;</ph> の基本実装を呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>After it has stopped all of its workflow runtime engine services, the workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、そのすべてのサービスを停止した後に、<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> internally manages a subscription to this event and its handler will set <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> はこのイベントのサブスクリプションを内部で管理し、そのハンドラーは <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A&gt;</ph> を <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>When overridden in a derived class, stops the service and changes the <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> to <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、サービスを停止して <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /&gt;</ph> を <ph id="ph2">&lt;see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" /&gt;</ph> に変更します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> is invoked by the workflow runtime engine on all of its services that derive from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class when <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> が呼び出されると、ワークフロー ランタイム エンジンは、<ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> クラスから派生したそのすべてのサービスについて <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> is also invoked by the workflow runtime engine when a workflow runtime engine service is removed from the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> の呼び出しによってワークフロー ランタイム エンジンからワークフロー ランタイム エンジンのサービスが削除されるときも、<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> がワークフロー ランタイム エンジンによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>The default implementation of <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> tracks whether the service has been started and uses this information to throw the appropriate exception if the service is stopped before it is started.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> の既定の実装は、サービスが開始されたかどうかを追跡し、この情報を使用することによって、開始前のサービスが停止させられる場合は適切な例外をスローします。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>You can provide additional functionality necessary to have your service stopped by the workflow runtime engine by overriding this method.</source>
          <target state="translated">このメソッドをオーバーライドすることにより、サービスをワークフロー ランタイム エンジンで停止させるために必要な追加機能を持たせることができます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>There is no guarantee about which, if any, services will be stopped or running when <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> is called on your service.</source>
          <target state="translated">サービスに対する <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> が呼び出されたときに、存在するどのサービスが停止しているかまたは実行されているかについての保証はありません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>The workflow runtime engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event after it has called the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method of all of its workflow runtime engine services.</source>
          <target state="translated">ワークフロー ランタイム エンジンは、そのすべてのサービスの <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> メソッドを呼び出した後で <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>Your service may need to retain some residual functionality to support other services until all the workflow runtime engine services have had their stop methods invoked by the workflow runtime engine.</source>
          <target state="translated">サービスは、ワークフロー ランタイム エンジンがワークフロー ランタイム エンジンのすべてのサービスについて停止メソッドを呼び出し終えるまで、他のサービスをサポートするための残留機能を保持しておくことが必要な場合があります。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>If your service must retain such functionality, you can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method to perform any additional action required to finish stopping your service when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> event is raised.</source>
          <target state="translated">サービスがこうした機能を保持する必要がある場合は、<ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> イベントが発生したときにサービスの停止を完了するために必要な追加アクションを実行するように <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType&gt;</ph> メソッドをオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>If your <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> is removed from the workflow runtime engine by a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> while the workflow runtime engine is running, the workflow runtime engine will call <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> on your service.</source>
          <target state="translated">ワークフロー ランタイム エンジンの実行中に <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> を呼び出して <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> をワークフロー ランタイム エンジンから削除すると、ワークフロー ランタイム エンジンはそのサービスに対して <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>However, in this situation, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> method will not be called for your service.</source>
          <target state="translated">ただし、このような場合は、そのサービスに対して <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> メソッドが呼び出されません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>Therefore, your service may have to perform any additional shutdown functionality that it would ordinarily perform in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> from inside the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method.</source>
          <target state="translated">したがって、通常サービスは <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A&gt;</ph> でシャットダウン機能を実行しますが、ここでは <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> メソッド内からシャットダウンする必要があります。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>You can test <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to determine whether the workflow runtime engine is running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> をテストすると、ワークフロー ランタイム エンジンが実行されているかどうかを確認できます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> should only be called by the workflow runtime engine.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> は、ワークフロー ランタイム エンジンでのみ呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /&gt;</ph> が null 参照 (Visual Basic の場合は <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>) です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop">
          <source>The service has not yet been started.</source>
          <target state="translated">サービスがまだ開始されていません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>