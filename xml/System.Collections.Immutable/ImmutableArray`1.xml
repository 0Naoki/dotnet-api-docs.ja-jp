<Type Name="ImmutableArray&lt;T&gt;" FullName="System.Collections.Immutable.ImmutableArray&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58c899b81d78feec36caa1c2578b9c7e2a60eaa1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36713085" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ImmutableArray&lt;T&gt; : IEquatable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;, System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList, System.Collections.Immutable.IImmutableList&lt;T&gt;, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImmutableArray`1&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Immutable.IImmutableList`1&lt;!T&gt;, class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IEquatable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ImmutableArray(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IEquatable(Of ImmutableArray(Of T)), IImmutableList(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T), IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public value class ImmutableArray : IEquatable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt;, System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList, System::Collections::Immutable::IImmutableList&lt;T&gt;, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type ImmutableArray&lt;'T&gt; = struct&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IList&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface IImmutableList&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Immutable.IImmutableList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="0399c-101">配列に格納される要素の型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0399c-101">The type of element stored by the array.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="0399c-102">変更できない配列を表します。つまり、この配列は、作成後に変更することができません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0399c-102">Represents an array that is immutable; meaning it cannot be changed once it is created.</span>
      </span>
      <span data-ttu-id="0399c-103">**NuGet パッケージ**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">変更できないコレクションの概要とインストール方法</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="0399c-103">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-104">さまざまなシナリオが最善の<xref:System.Collections.Immutable.ImmutableArray%601>の最高の他のユーザーと<xref:System.Collections.Immutable.ImmutableList%601>です。</span><span class="sxs-lookup"><span data-stu-id="0399c-104">There are different scenarios best for <xref:System.Collections.Immutable.ImmutableArray%601> and others best for <xref:System.Collections.Immutable.ImmutableList%601>.</span></span>  
  
 <span data-ttu-id="0399c-105">変更できない配列を使用する理由:</span><span class="sxs-lookup"><span data-stu-id="0399c-105">Reasons to use immutable array:</span></span>  
  
-   <span data-ttu-id="0399c-106">データを更新することはまれであるか、要素の数が非常に小さい (個未満の項目)</span><span class="sxs-lookup"><span data-stu-id="0399c-106">Updating the data is rare or the number of elements is quite small (less than 16 items)</span></span>  
  
-   <span data-ttu-id="0399c-107">パフォーマンスのクリティカル セクション内のデータを反復処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0399c-107">You need to be able to iterate over the data in performance critical sections</span></span>  
  
-   <span data-ttu-id="0399c-108">変更できないコレクションの多くのインスタンスがあるし、ツリー内のデータを保存する余裕があることはできません。</span><span class="sxs-lookup"><span data-stu-id="0399c-108">You have many instances of immutable collections and you can’t afford keeping the data in trees</span></span>  
  
 <span data-ttu-id="0399c-109">変更できないリストを使用する理由:</span><span class="sxs-lookup"><span data-stu-id="0399c-109">Reasons to use immutable list:</span></span>  
  
-   <span data-ttu-id="0399c-110">共通のデータを更新または要素の数は小さな値に想定されていません</span><span class="sxs-lookup"><span data-stu-id="0399c-110">Updating the data is common or the number of elements isn’t expected to be small</span></span>  
  
-   <span data-ttu-id="0399c-111">コレクションの更新は、内容を反復処理するよりもパフォーマンス クリティカル</span><span class="sxs-lookup"><span data-stu-id="0399c-111">Updating the collection is more performance critical than iterating the contents</span></span>  
  
 <span data-ttu-id="0399c-112">次の表のパフォーマンス特性をまとめたものです。 <xref:System.Collections.Immutable.ImmutableArray%601></span><span class="sxs-lookup"><span data-stu-id="0399c-112">The following table summarizes the performance characteristics of <xref:System.Collections.Immutable.ImmutableArray%601></span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="0399c-113">**操作**</span><span class="sxs-lookup"><span data-stu-id="0399c-113">**Operation**</span></span>|<span data-ttu-id="0399c-114"><xref:System.Collections.Immutable.ImmutableArray%601> 複雑さ</span><span class="sxs-lookup"><span data-stu-id="0399c-114"><xref:System.Collections.Immutable.ImmutableArray%601> Complexity</span></span>|<span data-ttu-id="0399c-115"><xref:System.Collections.Immutable.ImmutableList%601> 複雑さ</span><span class="sxs-lookup"><span data-stu-id="0399c-115"><xref:System.Collections.Immutable.ImmutableList%601> Complexity</span></span>|<span data-ttu-id="0399c-116">**コメント**</span><span class="sxs-lookup"><span data-stu-id="0399c-116">**Comments**</span></span>|  
|<span data-ttu-id="0399c-117">**Item**</span><span class="sxs-lookup"><span data-stu-id="0399c-117">**Item**</span></span>|<span data-ttu-id="0399c-118">O(1)</span><span class="sxs-lookup"><span data-stu-id="0399c-118">O(1)</span></span>|<span data-ttu-id="0399c-119">O (ログ)</span><span class="sxs-lookup"><span data-stu-id="0399c-119">O(log n)</span></span>|<span data-ttu-id="0399c-120">基になる配列のインデックス直接</span><span class="sxs-lookup"><span data-stu-id="0399c-120">Directly index into the underlying array</span></span>|  
|<span data-ttu-id="0399c-121">**Add()**</span><span class="sxs-lookup"><span data-stu-id="0399c-121">**Add()**</span></span>|<span data-ttu-id="0399c-122">O(n)</span><span class="sxs-lookup"><span data-stu-id="0399c-122">O(n)</span></span>|<span data-ttu-id="0399c-123">O (ログ)</span><span class="sxs-lookup"><span data-stu-id="0399c-123">O(log n)</span></span>|<span data-ttu-id="0399c-124">新しい配列の作成が必要です。</span><span class="sxs-lookup"><span data-stu-id="0399c-124">Requires creating a new array</span></span>|  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0399c-125">この型はスレッド セーフです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0399c-125">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Add(T item);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-126">配列の末尾に追加する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-126">The item to be added to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-127">元の配列のコピーの末尾に指定した項目を追加して返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-127">Returns a copy of the original array with the specified item added to the end.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-128">指定した項目が末尾に追加された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-128">A new array with the specified item added to the end.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRange (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="0399c-129">配列に追加する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-129">The elements to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-130">元の配列のコピーの末尾に指定した要素を追加して返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-130">Returns a copy of the original array with the specified elements added to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-131">要素が追加された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-131">A new array with the elements added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; AddRange (System.Collections.Immutable.ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; AddRange(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.AddRange(System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRange (items As ImmutableArray(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; AddRange(System::Collections::Immutable::ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="0399c-132">配列に追加する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-132">The elements to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-133">元の配列のコピーの末尾に指定した要素を追加して返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-133">Returns a copy of the original array with the specified elements added to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-134">要素が追加された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-134">A new array with the elements added.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As&lt;TOther&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;TOther&gt; As&lt;TOther&gt; () where TOther : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TOther&gt; As&lt;class TOther&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.As``1" />
      <MemberSignature Language="VB.NET" Value="Public Function As(Of TOther As Class) () As ImmutableArray(Of TOther)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOther&gt;&#xA; where TOther : class System::Collections::Immutable::ImmutableArray&lt;TOther&gt; As();" />
      <MemberSignature Language="F#" Value="member this.As : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'Other (requires 'Other : null)&gt; (requires 'Other : null)" Usage="immutableArray.As " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TOther&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOther">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TOther">
          <span data-ttu-id="0399c-135">返される配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-135">The type of array element to return.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="0399c-136">異なる型にキャストされる配列の要素が格納された、新しい変更できない配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-136">Returns a new immutable array that contains the elements of this array cast to a different type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-137">異なる型にキャストされる配列の要素が格納された、変更できない配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-137">An immutable array that contains the elements of this array, cast to a different type.</span>
          </span>
          <span data-ttu-id="0399c-138">キャストに失敗した場合、<see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> プロパティが <see langword="true" /> を返す配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-138">If the cast fails, returns an array whose <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-139">派生要素型の配列は、配列の再割り当てせず基本要素の型の配列にキャストできます。</span><span class="sxs-lookup"><span data-stu-id="0399c-139">Arrays of derived elements types can be cast to arrays of base element types without reallocating the array.</span></span>  
  
 <span data-ttu-id="0399c-140">作成された要素のキャスト、<xref:System.Collections.Immutable.ImmutableArray.Create%2A>メソッドを使用して取り消すことができます、<xref:System.Collections.Immutable.ImmutableArray%601.As%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0399c-140">Upcasts of element created with the <xref:System.Collections.Immutable.ImmutableArray.Create%2A> method can be reversed using the <xref:System.Collections.Immutable.ImmutableArray%601.As%2A> method.</span></span> <span data-ttu-id="0399c-141">ただし、ダウン キャストは成功した場合にのみ以前アップ キャストを反転させます。</span><span class="sxs-lookup"><span data-stu-id="0399c-141">However, a downcast is only successful when it reverses a prior upcast.</span></span> <span data-ttu-id="0399c-142">操作。</span><span class="sxs-lookup"><span data-stu-id="0399c-142">operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CastArray&lt;TOther&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;TOther&gt; CastArray&lt;TOther&gt; () where TOther : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TOther&gt; CastArray&lt;class TOther&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CastArray``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CastArray(Of TOther As Class) () As ImmutableArray(Of TOther)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOther&gt;&#xA; where TOther : class System::Collections::Immutable::ImmutableArray&lt;TOther&gt; CastArray();" />
      <MemberSignature Language="F#" Value="member this.CastArray : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'Other (requires 'Other : null)&gt; (requires 'Other : null)" Usage="immutableArray.CastArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TOther&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOther">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TOther">To be added.</typeparam>
        <summary>
          <span data-ttu-id="0399c-143">基になる配列を <typeparameter name="TOther"><paramref name="TOther" /></typeparameter> 型の配列にキャストすることによって、<see cref="T:System.Collections.Immutable.ImmutableArray`1" /> 構造体のインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-143">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct by casting the underlying             array to an array of type <typeparameter name="TOther"><paramref name="TOther" /></typeparameter> .</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0399c-144">キャストが正しくない場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-144">Thrown if the cast is illegal.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CastUp&lt;TDerived&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CastUp&lt;TDerived&gt; (System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items) where TDerived : class, T;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; CastUp&lt;class (!T) TDerived&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CastUp``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CastUp(Of TDerived As {Class, T}) (items As ImmutableArray(Of TDerived)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived&gt;&#xA; where TDerived : class, T static System::Collections::Immutable::ImmutableArray&lt;T&gt; CastUp(System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items);" />
      <MemberSignature Language="F#" Value="static member CastUp : System.Collections.Immutable.ImmutableArray&lt;#'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.CastUp items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>T</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="0399c-145">配列の初期化に使用する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-145">The array to initialize the array with.</span>
          </span>
          <span data-ttu-id="0399c-146">コピーは作成されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-146">No copy is made.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-147">既存のインスタンスの内容に基づいて、<see cref="T:System.Collections.Immutable.ImmutableArray`1" /> の新しいインスタンスを初期化します。既存の配列を効率的に再利用するために、共変の静的キャストを許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-147">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct based on the contents             of an existing instance, allowing a covariant static cast to efficiently reuse the existing array.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-148">このメソッドから共変のキャストは、呼び出すことによって元に戻すことがあります、<xref:System.Collections.Immutable.ImmutableArray%601.As%2A>または<xref:System.Collections.Immutable.ImmutableArray%601.CastArray%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0399c-148">Covariant upcasts from this method may be reversed by calling the <xref:System.Collections.Immutable.ImmutableArray%601.As%2A> or <xref:System.Collections.Immutable.ImmutableArray%601.CastArray%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-149">要素がすべて削除された配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-149">Returns an array with all the elements removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-150">要素がすべて削除された配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-150">An array with all of the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="immutableArray.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-151">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-151">The item to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-152">指定した項目が配列内にあるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-152">Determines whether the specified item exists in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-153">指定した項目が配列内で見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-153">
              <see langword="true" /> if the specified item was found in the array; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] -&gt; unit" Usage="immutableArray.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="0399c-154">コピー先の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-154">The array to copy to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-155">この配列の内容を指定した配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-155">Copies the contents of this array to the specified array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination, int destinationIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] destination, int32 destinationIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T(), destinationIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ destination, int destinationIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="immutableArray.CopyTo (destination, destinationIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="0399c-156">コピー先の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-156">The array to copy to.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="0399c-157">
            <c>array</c> 内のコピー開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-157">The index in <c>array</c> where copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-158">この配列の内容を、指定した配列の指定したインデックスを開始位置としてコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-158">Copies the contents of this array to the specified array starting at the specified destination index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, T[] destination, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, !T[] destination, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As T(), destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, cli::array &lt;T&gt; ^ destination, int destinationIndex, int length);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * 'T[] * int * int -&gt; unit" Usage="immutableArray.CopyTo (sourceIndex, destination, destinationIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="T[]" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceIndex">
          <span data-ttu-id="0399c-159">この配列内のコピー開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-159">The index of this array where copying begins.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="0399c-160">コピー先の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-160">The array to copy to.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="0399c-161">
            <c>array</c> 内のコピー開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-161">The index in <c>array</c> where copying begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0399c-162">この配列からコピーする要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-162">The number of elements to copy from this array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-163">この配列内の指定した項目を、指定した配列の指定したインデックスを開始位置としてコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-163">Copies the specified items in this array to the specified array at the specified starting index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Collections.Immutable.ImmutableArray&lt;T&gt; Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Empty" />
      <MemberSignature Language="DocId" Value="F:System.Collections.Immutable.ImmutableArray`1.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As ImmutableArray(Of T) " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Collections::Immutable::ImmutableArray&lt;T&gt; Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-164">空の変更できない配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-164">Gets an empty immutable array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Collections.Immutable.ImmutableArray&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Equals(System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Collections::Immutable::ImmutableArray&lt;T&gt; other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; bool" Usage="immutableArray.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="0399c-165">このオブジェクトと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-165">An object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-166">指定した配列がこの配列と等しいかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-166">Indicates whether specified array is equal to this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-167">
            <paramref name="other" /> がこの配列と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-167">
              <see langword="true" /> if <paramref name="other" /> is equal to this array; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="immutableArray.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0399c-168">この配列と比較する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-168">The <see cref="T:System.Object" /> to compare with this array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-169">この配列が指定したオブジェクトと等しいかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-169">Determines if this array is equal to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-170">この配列が <paramref name="obj" /> と等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-170">
              <see langword="true" /> if this array is equal to <paramref name="obj" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ImmutableArray(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Enumerator" Usage="immutableArray.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-171">配列の内容を反復処理する列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-171">Returns an enumerator that iterates through the contents of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-172">列挙子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-172">An enumerator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="immutableArray.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-173">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-173">Returns a hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-174">このインスタンスのハッシュ コード。ハッシュ アルゴリズムでもハッシュ テーブルのようなデータ構造でも使用できるもの。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-174">A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="immutableArray.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-175">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-175">The item to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-176">指定された項目を配列内で検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-176">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-177">項目が見つかった場合は、その項目の 0 から始まるインデックスでの位置。見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-177">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int -&gt; int" Usage="immutableArray.IndexOf (item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-178">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-178">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0399c-179">検索の開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-179">The index at which to begin the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-180">指定された項目を配列内で検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-180">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-181">項目が見つかった場合は、その項目の 0 から始まるインデックスでの位置。見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-181">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 startIndex, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int startIndex, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="immutableArray.IndexOf (item, startIndex, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-182">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-182">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0399c-183">検索の開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-183">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-184">検索に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-184">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-185">指定された項目を配列内で検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-185">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-186">項目が見つかった場合は、その項目の 0 から始まるインデックスでの位置。見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-186">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int * int -&gt; int" Usage="immutableArray.IndexOf (item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-187">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-187">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0399c-188">検索の開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-188">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0399c-189">検索する要素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-189">The number of elements to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-190">指定された項目を配列内で検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-190">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-191">項目が見つかった場合は、その項目の 0 から始まるインデックスでの位置。見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-191">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int startIndex, int count, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item, int32 startIndex, int32 count, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, startIndex As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item, int startIndex, int count, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T * int * int * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int&#xA;override this.IndexOf : 'T * int * int * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="immutableArray.IndexOf (item, startIndex, count, equalityComparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.IndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-192">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-192">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0399c-193">検索の開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-193">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0399c-194">検索する要素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-194">The number of elements to search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-195">検索に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-195">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-196">指定された項目を配列内で検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-196">Searches the array for the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-197">項目が見つかった場合は、その項目の 0 から始まるインデックスでの位置。見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-197">The zero-based index position of the item if it is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-198">新しい項目が追加される位置を示す、配列の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-198">The 0-based index into the array at which the new item should be added.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="0399c-199">配列の先頭に挿入する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-199">The item to insert at the start of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-200">指定した値が指定した位置に挿入された新しい配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-200">Returns a new array with the specified value inserted at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-201">指定したインデックス位置に項目が挿入された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-201">A new array with the item inserted at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertRange (index As Integer, items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.InsertRange : int * seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.InsertRange (index, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-202">値を挿入する位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-202">The index at which to insert the value.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0399c-203">挿入する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-203">The elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-204">指定したインデックス位置に指定した値を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-204">Inserts the specified values at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-205">指定したインデックス位置に項目が挿入された新しい変更できない配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-205">A new immutable array with the items inserted at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; InsertRange (int index, System.Collections.Immutable.ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; InsertRange(int32 index, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.InsertRange(System.Int32,System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertRange (index As Integer, items As ImmutableArray(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; InsertRange(int index, System::Collections::Immutable::ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="F#" Value="member this.InsertRange : int * System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.InsertRange (index, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-206">値を挿入する位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-206">The index at which to insert the value.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0399c-207">挿入する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-207">The elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-208">指定したインデックス位置に指定した値を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-208">Inserts the specified values at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-209">指定したインデックス位置に項目が挿入された新しい変更できない配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-209">A new immutable array with the items inserted at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-210">この配列が宣言されていても初期化されていないかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-210">Gets a value indicating whether this array was declared but not initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-211">
            <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> が <see langword="null" /> の場合は <see langword="true" />。それ以外の場合は false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-211">
              <see langword="true" /> to indicate the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is <see langword="null" />; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultOrEmpty">
      <MemberSignature Language="C#" Value="public bool IsDefaultOrEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultOrEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.IsDefaultOrEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaultOrEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaultOrEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaultOrEmpty : bool" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.IsDefaultOrEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-212">この <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> が空か、初期化されていないかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-212">Gets a value indicating whether this <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is empty or is not initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-213">
            <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> が <see langword="null" /> または <see cref="F:System.Collections.Immutable.ImmutableArray`1.Empty" /> の場合は <see langword="true" />。それ以外の場合は false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-213">
              <see langword="true" /> to indicate the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is <see langword="null" /> or <see cref="F:System.Collections.Immutable.ImmutableArray`1.Empty" />; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-214">この <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> が空かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-214">Gets a value indicating whether this <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-215">
            <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> が空の場合は <see langword="true" />。それ以外の場合は false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-215">
              <see langword="true" /> to indicate the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> is empty; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-216">取得する要素の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-216">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-217">変更できない配列内の指定したインデックス位置にある要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-217">Gets the element at the specified index in the immutable array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-218">変更できない配列内の指定したインデックス位置にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-218">The element at the specified index in the immutable array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemRef">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.T&amp; ItemRef (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.T&amp; modreq(System.Runtime.InteropServices.InAttribute) ItemRef(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.ItemRef(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ItemRef (index As Integer) As T&amp;" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::T&amp; ^ ItemRef(int index);" />
      <MemberSignature Language="F#" Value="member this.ItemRef : int -&gt; System.Collections.Immutable.T&amp;" Usage="immutableArray.ItemRef index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.T&amp;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T -&gt; int" Usage="immutableArray.LastIndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-219">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-219">The item to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-220">指定された項目を配列内で検索します。検索は、配列の末尾から開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-220">Searches the array for the specified item; starting at the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-221">項目が見つかった位置を示す、配列の 0 から始まるインデックス。見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-221">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int -&gt; int" Usage="immutableArray.LastIndexOf (item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-222">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-222">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0399c-223">検索の開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-223">The index at which to begin the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-224">指定された項目を配列内で検索します。検索は、配列の末尾から開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-224">Searches the array for the specified item; starting at the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-225">項目が見つかった位置を示す、配列の 0 から始まるインデックス。見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-225">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int * int -&gt; int" Usage="immutableArray.LastIndexOf (item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-226">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-226">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0399c-227">検索の開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-227">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0399c-228">検索する要素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-228">The number of elements to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-229">指定された項目を配列内で検索します。検索は、配列の末尾から開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-229">Searches the array for the specified item; starting at the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-230">項目が見つかった位置を示す、配列の 0 から始まるインデックス。見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-230">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int startIndex, int count, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(!T item, int32 startIndex, int32 count, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, startIndex As Integer, count As Integer, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(T item, int startIndex, int count, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : 'T * int * int * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int&#xA;override this.LastIndexOf : 'T * int * int * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="immutableArray.LastIndexOf (item, startIndex, count, equalityComparer)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.LastIndexOf(`0,System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-231">検索対象の項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-231">The item to search for.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0399c-232">検索の開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-232">The index at which to begin the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0399c-233">検索する要素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-233">The number of elements to search.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-234">検索に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-234">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-235">指定された項目を配列内で検索します。検索は、配列の末尾から開始されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-235">Searches the array for the specified item; starting at the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-236">項目が見つかった位置を示す、配列の 0 から始まるインデックス。見つからなかった場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-236">The 0-based index into the array where the item was found; or -1 if it could not be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-237">配列内の要素の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-237">Gets the number of elements in the array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-238">配列の要素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-238">The number of elements in the array</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; OfType&lt;TResult&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; OfType&lt;TResult&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.OfType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function OfType(Of TResult) () As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ OfType();" />
      <MemberSignature Language="F#" Value="member this.OfType : unit -&gt; seq&lt;'Result&gt;" Usage="immutableArray.OfType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="0399c-239">シーケンスの要素をフィルター処理する型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-239">The type to filter the elements of the sequence on.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="0399c-240">この配列の要素をフィルター処理して、指定された型に割り当てることができる要素を抽出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-240">Filters the elements of this array to those assignable to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-241">
            <paramref name="TResult" /> の型の入力シーケンスの要素を格納する <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-241">An <see cref="T:System.Collections.IEnumerable" /> that contains elements from the input sequence of type of <paramref name="TResult" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Collections.Immutable.ImmutableArray&lt;T&gt; left, System.Collections.Immutable.ImmutableArray&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; left, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.op_Equality(System.Collections.Immutable.ImmutableArray{`0},System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ImmutableArray(Of T), right As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Collections::Immutable::ImmutableArray&lt;T&gt; left, System::Collections::Immutable::ImmutableArray&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="right" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0399c-242">演算子の左辺にある配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-242">The array to the left of the operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0399c-243">演算子の右辺にある配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-243">The array to the right of the operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-244">2 つの配列が等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-244">Returns a value that indicates if two arrays are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-245">配列が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-245">
              <see langword="true" /> if the arrays are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt; left, Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Nullable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt; left, valuetype System.Nullable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.op_Equality(System.Nullable{System.Collections.Immutable.ImmutableArray{`0}},System.Nullable{System.Collections.Immutable.ImmutableArray{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Nullable(Of ImmutableArray(Of T)), right As Nullable(Of ImmutableArray(Of T))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Nullable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt; left, Nullable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt; right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;'T&gt;&gt; * Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;'T&gt;&gt; -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;" />
        <Parameter Name="right" Type="System.Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0399c-246">演算子の左辺にある配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-246">The array to the left of the operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0399c-247">演算子の右辺にある配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-247">The array to the right of the operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-248">2 つの配列が等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-248">Returns a value that indicates if two arrays are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-249">配列が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-249">
              <see langword="true" /> if the arrays are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Collections.Immutable.ImmutableArray&lt;T&gt; left, System.Collections.Immutable.ImmutableArray&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; left, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.op_Inequality(System.Collections.Immutable.ImmutableArray{`0},System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ImmutableArray(Of T), right As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Collections::Immutable::ImmutableArray&lt;T&gt; left, System::Collections::Immutable::ImmutableArray&lt;T&gt; right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; bool" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="right" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0399c-250">演算子の左辺にある配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-250">The array to the left of the operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0399c-251">演算子の右辺にある配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-251">The array to the right of the operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-252">2 つの配列が等しくないかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-252">Returns a value that indicates whether two arrays are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-253">配列が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-253">
              <see langword="true" /> if the arrays are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt; left, Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Nullable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt; left, valuetype System.Nullable`1&lt;valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt;&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.op_Inequality(System.Nullable{System.Collections.Immutable.ImmutableArray{`0}},System.Nullable{System.Collections.Immutable.ImmutableArray{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Nullable(Of ImmutableArray(Of T)), right As Nullable(Of ImmutableArray(Of T))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Nullable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt; left, Nullable&lt;System::Collections::Immutable::ImmutableArray&lt;T&gt;&gt; right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;'T&gt;&gt; * Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;'T&gt;&gt; -&gt; bool" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;" />
        <Parameter Name="right" Type="System.Nullable&lt;System.Collections.Immutable.ImmutableArray&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="0399c-254">演算子の左辺にあるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-254">The object to the left of the operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="0399c-255">演算子の右辺にあるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-255">The object to the right of the operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-256">2 つの配列が等しくないかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-256">Checks for inequality between two array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-257">2 つの配列が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-257">
              <see langword="true" /> if the two arrays are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Remove(T item);" />
      <MemberSignature Language="F#" Value="member this.Remove : 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-258">削除する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-258">The item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-259">最初に見つかった指定された要素を配列から削除した配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-259">Returns an array with the first occurrence of the specified element removed from the array.</span>
          </span>
          <span data-ttu-id="0399c-260">一致するものが見つからない場合は、現在の配列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-260">If no match is found, the current array is returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-261">項目が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-261">A new array with the item removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Remove (T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Remove(!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T, equalityComparer As IEqualityComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Remove(T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="member this.Remove : 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Remove (item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-262">削除する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-262">The item to remove.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-263">検索に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-263">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-264">最初に見つかった指定された要素を配列から削除した配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-264">Returns an array with the first occurrence of the specified element removed from the array.</span>
          </span>
          <span data-ttu-id="0399c-265">一致するものが見つからない場合は、現在の配列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-265">If no match is found, the current array is returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-266">指定した項目が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-266">A new array with the specified item removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (match As Predicate(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : Predicate&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.RemoveAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="0399c-267">削除する要素の条件を定義するデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-267">The delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-268">指定した条件を満たすすべての項目を配列から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-268">Removes all the items from the array that meet the specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-269">指定された条件を満たす項目が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-269">A new array with items that meet the specified condition removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAt (index As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-270">返された配列から削除する要素の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-270">The 0-based index of the element to remove from the returned array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-271">指定した位置の要素が削除された配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-271">Returns an array with the element at the specified position removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-272">指定したインデックス位置の項目が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-272">A new array with the item at the specified index removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.RemoveRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="0399c-273">このリストに一致するものが見つかった場合に削除する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-273">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-274">指定した項目をこの配列から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-274">Removes the specified items from this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-275">要素が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-275">A new array with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (System.Collections.Immutable.ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Collections.Immutable.ImmutableArray{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (items As ImmutableArray(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(System::Collections::Immutable::ImmutableArray&lt;T&gt; items);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : System.Collections.Immutable.ImmutableArray&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.RemoveRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="0399c-276">このリストに一致するものが見つかった場合に削除する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-276">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-277">指定した値をこのリストから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-277">Removes the specified values from this list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-278">要素が削除された新しいリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-278">A new list with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (items As IEnumerable(Of T), equalityComparer As IEqualityComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : seq&lt;'T&gt; * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.RemoveRange (items, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="0399c-279">このリストに一致するものが見つかった場合に削除する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-279">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-280">検索に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-280">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-281">指定した項目をこの配列から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-281">Removes the specified items from this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-282">要素が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-282">A new array with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Collections.Immutable.ImmutableArray{`0},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (items As ImmutableArray(Of T), equalityComparer As IEqualityComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.RemoveRange (items, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="0399c-283">このリストに一致するものが見つかった場合に削除する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-283">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-284">検索に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-284">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-285">指定した項目をこのリストから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-285">Removes the specified items from this list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-286">要素が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-286">A new array with the elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; RemoveRange (int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; RemoveRange(int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRange (index As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; RemoveRange(int index, int length);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.RemoveRange (index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-287">配列から削除する開始要素の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-287">The 0-based index of the starting element to remove from the array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0399c-288">配列から削除する要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-288">The number of elements to remove from the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-289">指定した位置の要素が削除された配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-289">Returns an array with the elements at the specified position removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-290">指定した要素が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-290">The new array with the specified elements removed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Replace (T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Replace(!T oldValue, !T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Replace(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As T, newValue As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Replace(T oldValue, T newValue);" />
      <MemberSignature Language="F#" Value="member this.Replace : 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Replace (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="0399c-291">配列内で検索して置換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-291">The value to find and replace in the array.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="0399c-292">
            <c>oldvalue</c> を置き換える値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-292">The value to replace the <c>oldvalue</c> with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-293">指定された値と等しい、配列内の最初の要素を検索して、その値を、指定した新しい値に置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-293">Finds the first element in the array equal to the specified value and replaces the value with the specified new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-294">新しい値と古い値が同じ場合でも、<paramref name="newValue" /> が格納されている新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-294">A new array that contains <paramref name="newValue" /> even if the new and old values are the same.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0399c-295">
            <paramref name="oldValue" /> が配列内に見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-295">
              <paramref name="oldValue" /> is not found in the array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Replace (T oldValue, T newValue, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Replace(!T oldValue, !T newValue, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As T, newValue As T, equalityComparer As IEqualityComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Replace(T oldValue, T newValue, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="member this.Replace : 'T * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Replace (oldValue, newValue, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="0399c-296">配列内で検索して置換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-296">The value to find and replace in the array.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="0399c-297">
            <c>oldvalue</c> を置き換える値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-297">The value to replace the <c>oldvalue</c> with.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-298">値の比較に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-298">The equality comparer to use to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-299">指定された値と等しい、配列内の最初の要素を検索して、その値を、指定した新しい値に置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-299">Finds the first element in the array equal to the specified value and replaces the value with the specified new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-300">新しい値と古い値が同じ場合でも、<paramref name="newValue" /> が格納されている新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-300">A new array that contains <paramref name="newValue" /> even if the new and old values are the same.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0399c-301">
            <paramref name="oldValue" /> が配列内に見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-301">
              <paramref name="oldValue" /> is not found in the array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetItem (index As Integer, item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="member this.SetItem : int * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-302">置換する項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-302">The index of the item to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="0399c-303">リストに追加する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-303">The item to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-304">指定したインデックス位置の項目を、指定した項目で置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-304">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-305">指定したインデックス位置に <paramref name="item" /> を格納している新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-305">The new array that contains <paramref name="item" /> at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-306">既定の比較子を使用して、変更できない配列内の要素を並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-306">Sorts the elements in the immutable array using the default comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-307">配列内の項目を並べ替えた順で格納している新しい変更できない配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-307">A new immutable array that contains the items in this array, in sorted order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (comparer As IComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="0399c-308">要素を比較する場合に使用する実装。または、既定の比較子を使用する場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-308">The implementation to use when comparing elements, or <see langword="null" /> to use the default comparer</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-309">指定した比較子を使用して、変更できない配列内の要素を並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-309">Sorts the elements in the immutable array using the specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-310">配列内の項目を並べ替えた順で格納している新しい変更できない配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-310">A new immutable array that contains the items in this array, in sorted order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (comparison As Comparison(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="member this.Sort : Comparison&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Sort comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="0399c-311">要素を比較する場合に使用する <see cref="T:System.Comparison`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-311">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-312">指定した <see cref="T:System.Comparison`1" /> を使用して、<see cref="T:System.Collections.Immutable.ImmutableArray`1" /> 全体の要素を並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-312">Sorts the elements in the entire <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> using             the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-313">並べ替えられたリスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-313">The sorted list.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0399c-314">
            <paramref name="comparison" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-314">
              <paramref name="comparison" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt; Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;!T&gt; Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sort (index As Integer, count As Integer, comparer As IComparer(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt; Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : int * int * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="immutableArray.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-315">並べ替える最初の要素を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-315">The index of the first element to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0399c-316">並べ替えに含める要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-316">The number of elements to include in the sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0399c-317">要素を比較する場合に使用する実装。または、既定の比較子を使用する場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-317">The implementation to use when comparing elements, or <see langword="null" /> to use the default comparer</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-318">指定した比較子を使用して、変更できない配列内の指定した要素を並べ替えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-318">Sorts the specified elements in the immutable array using the specified comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-319">配列内の項目を並べ替えた順で格納している新しい変更できない配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-319">A new immutable array that contains the items in this array, in sorted order.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T item) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-320">配列の末尾に追加する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-320">The item to add to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-321">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-321">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-322">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-322">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-323">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Generic.ICollection%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-323">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Clear() = System::Collections::Generic::ICollection&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-324">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-324">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-325">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-325">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-326">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Generic.ICollection%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-326">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.ICollection&lt;T&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.ICollection&lt;T&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection(Of T).Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.Generic.ICollection&lt;T&gt;.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.Generic.ICollection&lt;T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-327">コレクション内の配列の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-327">Gets the number of array in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0399c-328">
            <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> プロパティが true を返す場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-328">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-329">このインスタンスが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-329">Gets a value indicating whether this instance is read only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-330">
            <c>true</c>場合のみです。 それ以外の場合、このインスタンスは読み取り<c>false</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-330">
              <c>true</c> if this instance is read only; otherwise, <c>false</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;T&gt;.Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#ICollection&lt;T&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As T) As Boolean Implements ICollection(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(T item) = System::Collections::Generic::ICollection&lt;T&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="0399c-331">配列から削除するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-331">The object to remove from the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-332">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-332">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-333">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-333">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-334">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-334">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-335">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Generic.ICollection%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-335">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-336">配列を反復処理する列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-336">Returns an enumerator that iterates through the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-337">配列の反復処理に使用できる列挙子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-337">An enumerator that can be used to iterate through the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-338">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-338">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-339">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Generic.IEnumerable%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-339">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IList&lt;T&gt;#Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As T) Implements IList(Of T).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.Insert(int index, T item) = System::Collections::Generic::IList&lt;T&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-340">項目を挿入する位置のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-340">The index of the location to insert the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="0399c-341">挿入する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-341">The item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-342">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-342">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-343">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-343">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-344">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Generic.IList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-344">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Item">
      <MemberSignature Language="C#" Value="T System.Collections.Generic.IList&lt;T&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T System.Collections.Generic.IList&lt;T&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IList&lt;T&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As T Implements IList(Of T).Item" />
      <MemberSignature Language="C++ CLI" Value="property T System.Collections.Generic.IList&lt;T&gt;.Item[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.Generic.IList&lt;T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-345">取得する要素の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-345">The zero-based index of the element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-346">読み取り専用のリスト内の指定したインデックスにある要素を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-346">Gets or sets the element at the specified index in the read-only list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-347">読み取り専用のリスト内の指定したインデックスにある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-347">The element at the specified index in the read-only list.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0399c-348">セッターから常にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-348">Always thrown from the setter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0399c-349">
            <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> プロパティが true を返す場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-349">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IList&lt;T&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of T).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;T&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-350">インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-350">The index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-351">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-351">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyCollection&lt;T&gt;.Count">
      <MemberSignature Language="C#" Value="int System.Collections.Generic.IReadOnlyCollection&lt;T&gt;.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.Generic.IReadOnlyCollection&lt;T&gt;.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IReadOnlyCollection&lt;T&gt;#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements IReadOnlyCollection(Of T).Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.Generic.IReadOnlyCollection&lt;T&gt;.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.Generic.IReadOnlyCollection&lt;T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-352">コレクション内の配列の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-352">Gets the number of array in the collection.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0399c-353">
            <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> プロパティが true を返す場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-353">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item">
      <MemberSignature Language="C#" Value="T System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#Generic#IReadOnlyList&lt;T&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As T Implements IReadOnlyList(Of T).Item" />
      <MemberSignature Language="C++ CLI" Value="property T System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item[int] { T get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-354">インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-354">The index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-355">指定したインデックス位置にある要素を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-355">Gets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-356">要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-356">The element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0399c-357">
            <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> プロパティが true を返す場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-357">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0399c-358">この配列のコピー先の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-358">The array to copy this array to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0399c-359">コピー操作の開始位置を示す、コピー先の配列内のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-359">The index in the destination array to start the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-360">指定されたインデックスを開始位置として、この配列を別の配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-360">Copies this array to another array starting at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-361">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-361">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-362">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-362">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-363">配列のサイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-363">Gets the size of the array.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0399c-364">
            <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> プロパティが true を返す場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-364">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-365">
            <see cref="T:System.Collections.ICollection" /> インターフェイスをご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-365">See the <see cref="T:System.Collections.ICollection" /> interface.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-366">同期ルートを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-366">Gets the sync root.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-367">変更できない配列を反復処理する列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-367">Returns an enumerator that iterates through the immutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-368">変更できない配列を反復処理する列挙子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-368">An enumerator that iterates through the immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0399c-369">配列に追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-369">The value to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-370">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-370">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-371">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-371">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-372">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-372">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0399c-373">確認する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-373">The value to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-374">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-374">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-375">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-375">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0399c-376">インデックスを返す対象の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-376">The value to return the index of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-377">指定したインデックス位置にある値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-377">Gets the value at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-378">指定されたインデックス位置にある要素の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-378">The value of the element at the specified index.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-379">項目を挿入する位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-379">Index that indicates where to insert the item.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0399c-380">挿入する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-380">The value to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-381">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-381">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-382">このインスタンスが固定サイズかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-382">Gets a value indicating whether this instance is fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-383">
            <c>true</c>サイズです。 それ以外の場合、このインスタンスが修正された場合<c>false</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-383">
              <c>true</c> if this instance is fixed size; otherwise, <c>false</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0399c-384">このインスタンスが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-384">Gets a value indicating whether this instance is read only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0399c-385">
            <c>true</c>場合のみです。 それ以外の場合、このインスタンスは読み取り<c>false</c>です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-385">
              <c>true</c> if this instance is read only; otherwise, <c>false</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Immutable.ImmutableArray&lt;'T&gt;.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-386">インデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-386">The index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-387">指定したインデックス位置にある <see cref="T:System.Object" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-387">Gets or sets the <see cref="T:System.Object" /> at the specified index.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0399c-388">セッターから常にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-388">Always thrown from the setter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0399c-389">
            <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> プロパティが true を返す場合にスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-389">Thrown if the <see cref="P:System.Collections.Immutable.ImmutableArray`1.IsDefault" /> property returns true.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0399c-390">配列から削除する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-390">The value to remove from the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-391">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-391">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-392">削除する項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-392">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-393">常に <see cref="T:System.NotSupportedException" /> をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-393">Throws <see cref="T:System.NotSupportedException" /> in all cases.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As T) As IImmutableList(Of T) Implements IImmutableList(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Add(T value) = System::Collections::Immutable::IImmutableList&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0399c-394">配列の末尾に追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-394">The value to add to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-395">元の配列のコピーの末尾に指定した項目を追加して返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-395">Returns a copy of the original array with the specified item added to the end.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-396">指定した項目が末尾に追加された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-396">A new array with the specified item added to the end.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-397">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-397">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-398">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-398">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.AddRange">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Function AddRange (items As IEnumerable(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).AddRange" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items) = System::Collections::Immutable::IImmutableList&lt;T&gt;::AddRange;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.AddRange(System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="0399c-399">配列の末尾に追加する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-399">The elements to add to the end of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-400">元の配列のコピーの末尾に指定した要素を追加して返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-400">Returns a copy of the original array with the specified elements added to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-401">末尾に要素が追加された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-401">A new array with the elements added to the end.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-402">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-402">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-403">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-403">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Function Clear () As IImmutableList(Of T) Implements IImmutableList(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Clear() = System::Collections::Immutable::IImmutableList&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-404">要素がすべて削除された配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-404">Returns an array with all the elements removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-405">要素がすべて削除された配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-405">Returns an array with all the elements removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-406">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-406">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-407">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-407">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Insert">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Insert (int index, T element);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Insert(int32 index, !T element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Function Insert (index As Integer, element As T) As IImmutableList(Of T) Implements IImmutableList(Of T).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Insert(int index, T element) = System::Collections::Immutable::IImmutableList&lt;T&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="element" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-408">新しい項目が追加される位置を示す、配列の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-408">The 0-based index into the array at which the new item should be added.</span>
          </span>
        </param>
        <param name="element">
          <span data-ttu-id="0399c-409">配列の先頭に挿入する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-409">The item to insert at the start of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-410">指定した値が指定した位置に挿入された新しい配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-410">Returns a new array with the specified value inserted at the specified position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-411">指定した値が挿入された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-411">A new array with the specified value inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-412">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-412">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-413">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-413">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.InsertRange">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Function InsertRange (index As Integer, items As IEnumerable(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).InsertRange" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items) = System::Collections::Immutable::IImmutableList&lt;T&gt;::InsertRange;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-414">値を挿入する位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-414">The index at which to insert the value.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0399c-415">挿入する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-415">The elements to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-416">指定したインデックス位置に、指定した値を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-416">Inserts the specified values at the specified index</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-417">指定した値が挿入された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-417">A new array with the specified values inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-418">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-418">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-419">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-419">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Remove (T value, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Remove(!T value, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Remove(`0,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (value As T, equalityComparer As IEqualityComparer(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Remove(T value, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer) = System::Collections::Immutable::IImmutableList&lt;T&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Remove(`0,System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0399c-420">配列から削除する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-420">The value to remove from the array.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-421">検索に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-421">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-422">配列内で最初に見つかった指定の要素が削除された配列を返します。一致するものが見つからない場合は、現在の配列が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-422">Returns an array with the first occurrence of the specified element removed from the array; if no match is found, the current array is returned.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-423">値が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-423">A new array with the value removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-424">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-424">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-425">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-425">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAll">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Function RemoveAll (match As Predicate(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).RemoveAll" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAll(Predicate&lt;T&gt; ^ match) = System::Collections::Immutable::IImmutableList&lt;T&gt;::RemoveAll;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.RemoveAll(System.Predicate{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match">
          <span data-ttu-id="0399c-426">削除する要素の条件を定義するデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-426">The delegate that defines the conditions of the elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-427">指定した条件を満たすすべての項目を配列から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-427">Removes all the items from the array that meet the specified condition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-428">指定された条件を満たす項目が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-428">A new array with items that meet the specified condition removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-429">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-429">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-430">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-430">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function RemoveAt (index As Integer) As IImmutableList(Of T) Implements IImmutableList(Of T).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveAt(int index) = System::Collections::Immutable::IImmutableList&lt;T&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-431">返された配列から削除する要素の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-431">The 0-based index of the element to remove from the returned array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-432">指定した位置の要素が削除された配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-432">Returns an array with the element at the specified position removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-433">指定した項目が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-433">A new array with the specified item removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-434">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-434">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-435">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-435">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.RemoveRange (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Function RemoveRange (items As IEnumerable(Of T), equalityComparer As IEqualityComparer(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).RemoveRange" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer) = System::Collections::Immutable::IImmutableList&lt;T&gt;::RemoveRange;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="0399c-436">このリストに一致するものが見つかった場合に削除する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-436">The items to remove if matches are found in this list.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-437">検索に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-437">The equality comparer to use in the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-438">指定した項目をこの配列から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-438">Removes the specified items from this array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-439">要素が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-439">A new array with the elements removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-440">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-440">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-441">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-441">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function RemoveRange (index As Integer, count As Integer) As IImmutableList(Of T) Implements IImmutableList(Of T).RemoveRange" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.RemoveRange(int index, int count) = System::Collections::Immutable::IImmutableList&lt;T&gt;::RemoveRange;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.RemoveRange(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-442">配列から削除する開始要素の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-442">The 0-based index of the starting element to remove from the array.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0399c-443">配列から削除する要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-443">The number of elements to remove from the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-444">指定した位置の要素が削除された配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-444">Returns an array with the elements at the specified position removed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-445">指定した要素が削除された新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-445">The new array with the specified elements removed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-446">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-446">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-447">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-447">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.Replace">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.Replace (T oldValue, T newValue, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.Replace(!T oldValue, !T newValue, class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Function Replace (oldValue As T, newValue As T, equalityComparer As IEqualityComparer(Of T)) As IImmutableList(Of T) Implements IImmutableList(Of T).Replace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.Replace(T oldValue, T newValue, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer) = System::Collections::Immutable::IImmutableList&lt;T&gt;::Replace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.Replace(`0,`0,System.Collections.Generic.IEqualityComparer{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="0399c-448">配列内で検索して置換する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-448">The value to find and replace in the array.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="0399c-449">
            <c>oldvalue</c> を置き換える値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-449">The value to replace the <c>oldvalue</c> with.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="0399c-450">値の比較に使用する等値比較子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-450">The equality comparer to use to compare values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-451">指定された値と等しい、配列内の最初の要素を検索して、その値を、指定した新しい値に置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-451">Finds the first element in the array equal to the specified value and replaces the value with the specified new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-452">新しい値と古い値が同じ場合でも、<paramref name="newValue" /> が格納されている新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-452">A new array that contains <paramref name="newValue" /> even if the new and old values are the same.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-453">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-453">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-454">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-454">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0399c-455">
            <paramref name="oldValue" /> が配列内に見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-455">
              <paramref name="oldValue" /> is not found in the array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Immutable.IImmutableList&lt;T&gt;.SetItem">
      <MemberSignature Language="C#" Value="System.Collections.Immutable.IImmutableList&lt;T&gt; IImmutableList&lt;T&gt;.SetItem (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Immutable.IImmutableList`1&lt;!T&gt; System.Collections.Immutable.IImmutableList&lt;T&gt;.SetItem(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#Immutable#IImmutableList&lt;T&gt;#SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Function SetItem (index As Integer, value As T) As IImmutableList(Of T) Implements IImmutableList(Of T).SetItem" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Immutable::IImmutableList&lt;T&gt; ^ System.Collections.Immutable.IImmutableList&lt;T&gt;.SetItem(int index, T value) = System::Collections::Immutable::IImmutableList&lt;T&gt;::SetItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Immutable.IImmutableList`1.SetItem(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0399c-456">置換する項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-456">The index of the item to replace.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0399c-457">リストに追加する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-457">The value to add to the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-458">指定したインデックス位置の項目を、指定した項目で置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-458">Replaces the item at the specified index with the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-459">指定したインデックス位置に <paramref name="item" /> を格納している新しい配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-459">The new array that contains <paramref name="item" /> at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-460">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-460">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-461">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.Immutable.IImmutableList%601> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-461">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.Immutable.IImmutableList%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="0399c-462">現在のインスタンスと比較する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-462">The element to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0399c-463">現在の配列のメンバーと他の配列の対応するメンバーの比較に使用されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-463">The object used to compare members of the current array with the corresponding members of other array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-464">並べ替え順序において、現在のコレクション要素の位置が別のオブジェクトの前になるか、同じであるか、後になるかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-464">Determines whether the current collection element precedes, occurs in the same position as, or follows another element in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-465">現在の要素の位置が他の要素の前になるか、同じであるか、後になるかを示す整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-465">An integer that indicates whether the current element precedes, is in the same position or follows the other element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-466">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-466">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-467">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-467">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0399c-468">配列が同じ長さではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-468">The arrays are not the same length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="0399c-469">現在のインスタンスと比較する配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-469">The array to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0399c-470">現在のインスタンスと他のインスタンスが構造的に等しいかどうかを判断するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-470">An object that determines whether the current instance and other are structurally equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-471">この配列が指定された配列と構造的に等しいかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-471">Determines whether this array is structurally equal to the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-472">2 つの配列が構造的に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-472">
              <see langword="true" /> if the two arrays are structurally equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-473">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0399c-473">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0399c-474">これは、<xref:System.Collections.Immutable.ImmutableArray%601> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0399c-474">It can be used only when the <xref:System.Collections.Immutable.ImmutableArray%601> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="0399c-475">現在のオブジェクトのハッシュ コードを計算するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-475">An object that computes the hash code of the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0399c-476">現在のインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-476">Returns a hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-477">現在のインスタンスのハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-477">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBuilder">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder ToBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!T&gt; ToBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray`1.ToBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBuilder () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ ToBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToBuilder : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="immutableArray.ToBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0399c-478">この配列と同じ内容で、標準の変更可能なインターフェイスを使用して複数の操作で効率的に変更できる配列を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-478">Creates a mutable array that has the same contents as this array and can be efficiently mutated across multiple operations using standard mutable interfaces.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0399c-479">この配列と同じ内容を含む新しいビルダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0399c-479">The new builder with the same contents as this array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0399c-480">これは、o (1) 操作であり、(小) の単一のメモリ割り当てのみになります。</span><span class="sxs-lookup"><span data-stu-id="0399c-480">This is an O(1) operation and results in only a single (small) memory allocation.</span></span> <span data-ttu-id="0399c-481">返される変更可能なリストは、スレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="0399c-481">The mutable list that is returned is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>