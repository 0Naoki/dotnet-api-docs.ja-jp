<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImmutableList`1+Enumerator.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57ef1557413c5c03796a2e0c2f3d2d55b54db750c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ef1557413c5c03796a2e0c2f3d2d55b54db750c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Enumerator">
          <source>Enumerates the contents of a binary tree.</source>
          <target state="translated">バイナリ ツリーの内容を列挙します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Immutable.ImmutableList`1.Enumerator">
          <source><bpt id="p1">**</bpt>NuGet package<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>about immutable collections and how to install<ept id="p3">&lt;/see&gt;</ept>)</source>
          <target state="translated"><bpt id="p1">**</bpt>NuGet パッケージ<ept id="p1">**</ept>: <bpt id="p2">&lt;see href="https://www.nuget.org/packages/System.Collections.Immutable/"&gt;</bpt>System.Collections.Immutable<ept id="p2">&lt;/see&gt;</ept> (<bpt id="p3">&lt;see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks"&gt;</bpt>変更できないコレクションの概要とインストール方法<ept id="p3">&lt;/see&gt;</ept>)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableList`1.Enumerator">
          <source>This structure should be kept synchronized with the other two binary tree enumerators: <ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedDictionary%602.Enumerator?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Enumerator?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">この構造体を他の 2 つバイナリ ツリー列挙子との同期に収める:<ph id="ph1">&lt;xref:System.Collections.Immutable.ImmutableSortedDictionary%602.Enumerator?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Immutable.ImmutableSortedSet%601.Enumerator?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableList`1.Enumerator">
          <source>When this enumerator is used as a value type (that is, when it isn't boxed), do not copy it by assigning it to a second variable or by passing it to another method.</source>
          <target state="translated">値としてこの列挙子を使用する場合、入力 (つまり、これがボックス化されていない) 場合はコピーしない 2 つ目の変数に代入することで、または別のメソッドに渡すことによってです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableList`1.Enumerator">
          <source>When this enumerator is disposed of, it returns a mutable reference type stack to a resource pool, and if the value type enumerator is copied (which can easily happen unintentionally if you pass the value around), there is a risk that a stack that has already been returned to the resource pool may still be in use by one of the enumerator copies, leading to data corruption or exceptions.</source>
          <target state="translated">リソース プールを変更可能な参照型のスタックを返しますのこの列挙子が破棄されると、および既にをリソース プールに返されたスタックが、列挙子のコピーのいずれかによって使用されている可能性がありますまだリスクがある場合は値型の列挙子がコピーされます (これはことが簡単に発生意図せず付近の値を渡す場合)、先頭のデータが破損したり例外。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Immutable.ImmutableList`1.Enumerator">
          <source>This type is thread safe.</source>
          <target state="translated">この型はスレッド セーフです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Enumerator.Current">
          <source>Gets the element at the current position of the enumerator.</source>
          <target state="translated">列挙子の現在位置の要素を取得します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Immutable.ImmutableList`1.Enumerator.Current">
          <source>The element at the current position of the enumerator.</source>
          <target state="translated">列挙子の現在位置の要素。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Enumerator.Dispose">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Enumerator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Immutable.ImmutableList`1.Enumerator" /&gt;</ph> クラスの現在のインスタンスによって使用されているリソースを解放します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Enumerator.MoveNext">
          <source>Advances enumeration to the next element of the immutable list.</source>
          <target state="translated">列挙体を、変更できないリストの次の要素に進めます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Enumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the list.</source>
          <target state="translated">列挙子が次の要素に正常に進んだ場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。列挙子がリストの末尾を越えた場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Immutable.ImmutableList`1.Enumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the immutable list.</source>
          <target state="translated">列挙子を初期位置、つまり変更できないリストの最初の要素の前に設定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Collections.Immutable.ImmutableList`1.Enumerator.System#Collections#IEnumerator#Current">
          <source>The current element.</source>
          <target state="translated">現在の要素。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>