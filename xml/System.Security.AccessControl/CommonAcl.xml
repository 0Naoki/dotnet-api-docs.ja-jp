<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CommonAcl.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57ccc40b3ca58bada3bf627f78c2d964a58042a8f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ccc40b3ca58bada3bf627f78c2d964a58042a8f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Represents an access control list (ACL) and is the base class for the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SystemAcl" /&gt;</ph> classes.</source>
          <target state="translated">アクセス制御リスト (ACL: Access Control List) を表します。このクラスは、<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> クラスおよび <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.SystemAcl" /&gt;</ph> クラスの基本クラスです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Certain combinations of inheritance and access mask flags are meaningless:</source>
          <target state="translated">特定の継承とアクセス マスク フラグの組み合わせが意味のないです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Any access control entry (ACE) with a zero-access mask is removed.</source>
          <target state="translated">任意のアクセスの制御エントリ (ACE) 0 アクセス マスクを持つが削除されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Inherit-only ACEs inside object ACLs are removed.</source>
          <target state="translated">オブジェクトの Acl 内の Ace を継承のみが削除されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flags on all ACEs in leaf object ACLs are cleared.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph>、 <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph>、 <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph>、および<ph id="ph4">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph>フラグ リーフ内のすべての Ace をオブジェクトの Acl を消去します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>ACEs that have an <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph> flag in the absence of the <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag are meaningless; they are removed.</source>
          <target state="translated">Ace を持つ、<ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph>フラグがない場合、<ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph>または<ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph>フラグは意味がありません。 これらは削除されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph> flag in the absence of the <ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag can be removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph>フラグがない場合、<ph id="ph2">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph>または<ph id="ph3">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph>フラグを削除することができます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>ACEs that have an <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags&gt;</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> in discretionary access control lists (DACLs) are removed.</source>
          <target state="translated">Ace を持つ、<ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags&gt;</ph>値<ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph>または<ph id="ph3">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph>随意アクセス制御リスト (Dacl) を削除します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Any audit ACE that does not specify either <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> is removed.</source>
          <target state="translated">いずれかの監査 ACE のいずれかが指定されていない<ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph>または<ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph>を削除します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>On DACLs, SystemAudit and SystemAlarm ACEs are removed.</source>
          <target state="translated">Dacl に SystemAudit と SystemAlarm Ace は削除されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>On system access control lists (SACLs), AccessAllowed and AccessDenied ACEs are removed.</source>
          <target state="translated">システム アクセス制御リスト (Sacl) に AccessAllowed と AccessDenied Ace は削除されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Canonical order is maintained according to the following algorithm:</source>
          <target state="translated">正規の順序では、次のアルゴリズムに基づいて行われます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Explicit ACEs take precedence over inherited ACEs; this rule applies to both DACLs and SACLs.</source>
          <target state="translated">明示的な Ace 継承された Ace; よりも優先します。このルールは、Dacl と Sacl の両方に適用されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>In DACLs, among the explicit ACEs, ACEs that deny access take precedence over ACEs that allow access.</source>
          <target state="translated">明示的な Ace の間での Dacl でアクセスを拒否する Ace はアクセスを許可する Ace に優先します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>For directory object ACLs, the nonobject ACEs come before object ACEs.</source>
          <target state="translated">ディレクトリ オブジェクトの Acl の非オブジェクトへの Ace は、オブジェクトの Ace の前にします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>All common ACEs take precedence over noncommon ACEs.</source>
          <target state="translated">すべての共通の Ace は、共通でない Ace よりも優先されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Inherited ACEs maintain their relative order after canonicity.</source>
          <target state="translated">継承された Ace は、canonicity 後の相対順序を維持します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Unrecognized and custom ACEs are disallowed in both DACLs and SACLs.</source>
          <target state="translated">Dacl と Sacl の両方では、認識されないとカスタムの Ace が許可されていません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Within contiguous ranges (explicit AccessDenied and AccessAllowed ACEs on DACLs, all explicit ACEs on SACLs), the ACEs are sorted by using the <ph id="ph1">&lt;xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A&gt;</ph> methods of the <ph id="ph2">&lt;xref:System.Security.Principal.SecurityIdentifier&gt;</ph> objects associated with the ACEs.</source>
          <target state="translated">使用して (明示的な対象として AccessDenied および AccessAllowed Ace Dacl、Sacl のすべての明示的な Ace に) の連続した範囲内での Ace の並べ替え、<ph id="ph1">&lt;xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A&gt;</ph>のメソッド、 <ph id="ph2">&lt;xref:System.Security.Principal.SecurityIdentifier&gt;</ph> Ace に関連付けられているオブジェクト。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>Adjacent ACEs are combined, if appropriate.</source>
          <target state="translated">該当する場合、隣接する Ace が結合されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.CommonAcl">
          <source>This reduces the size of the ACL without affecting the access control semantics it grants.</source>
          <target state="translated">これにより、許可するアクセス制御セマンティクスに影響を与えずに、ACL のサイズが小さきます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.BinaryLength">
          <source>Gets the length, in bytes, of the binary representation of the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクトのバイナリ表現の長さ (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.BinaryLength">
          <source>This length should be used before marshaling the access control list (ACL) into a binary array by using the <ph id="ph1">&lt;see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)" /&gt;</ph> メソッドを使用してアクセス制御リスト (ACL: Access Control List) をバイナリ配列にマーシャリングする前に、この長さを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.BinaryLength">
          <source>The length, in bytes, of the binary representation of the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクトのバイナリ表現の長さ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.Count">
          <source>Gets the number of access control entries (ACEs) in the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクト内のアクセス制御エントリ (ACE: Access Control Entry) の数を取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.Count">
          <source>The number of ACEs in the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクト内の ACE の数。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)">
          <source>The byte array into which the contents of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> is marshaled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> のコンテンツのマーシャリング先のバイト配列。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)">
          <source>The offset at which to start marshaling.</source>
          <target state="translated">マーシャリングの開始位置を表すオフセット。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)">
          <source>Marshals the contents of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object into the specified byte array beginning at the specified offset.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクトのコンテンツを、指定したオフセットを開始位置として、指定したバイト配列にマーシャリングします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.IsCanonical">
          <source>Gets a Boolean value that specifies whether the access control entries (ACEs) in the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object are in canonical order.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクト内のアクセス制御エントリ (ACE) の順序が正規順序であるかどうかを指定するブール値を取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.IsCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the ACEs in the current <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object are in canonical order; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクト内の ACE の順序が正規である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.IsContainer">
          <source>Sets whether the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object is a container.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクトがコンテナーであるかどうかを設定します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.IsContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object is a container.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクトがコンテナーである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.IsDS">
          <source>Sets whether the current <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object is a directory object access control list (ACL).</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクトがディレクトリ オブジェクトのアクセス制御リスト (ACL: Access Control List) であるかどうかを設定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.IsDS">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object is a directory object ACL.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクトがディレクトリ オブジェクトの ACL である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph> to get or set.</source>
          <target state="translated">取得または設定する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph> の、0 から始まるインデックス番号。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph> at the specified index.</source>
          <target state="translated">指定したインデックス位置にある <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph> at the specified index.</source>
          <target state="translated">指定されたインデックス位置にある <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAce" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object to check for.</source>
          <target state="translated">確認する対象の <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)">
          <source>Removes all access control entries (ACEs) contained by this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object that are associated with the specified <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> オブジェクトに関連付けられた、この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクトに格納されているすべてのアクセス制御エントリ (ACE) を削除します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonAcl.RemoveInheritedAces">
          <source>Removes all inherited access control entries (ACEs) from this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> オブジェクトからすべての継承されたアクセス制御エントリ (ACE) を削除します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonAcl.Revision">
          <source>Gets the revision level of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> のリビジョン レベルを取得します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonAcl.Revision">
          <source>A byte value that specifies the revision level of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonAcl" /&gt;</ph> のリビジョン レベルを示すバイト値。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>