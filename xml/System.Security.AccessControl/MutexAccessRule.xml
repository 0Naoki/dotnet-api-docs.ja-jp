<Type Name="MutexAccessRule" FullName="System.Security.AccessControl.MutexAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6162c48d3b0b450b42dadedc22aedd8237baa69" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56774664" /></Metadata><TypeSignature Language="C#" Value="public sealed class MutexAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type MutexAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c067e-101">ユーザーまたはグループに許可されたアクセス権セットまたは拒否されたアクセス権セットを表します。</span><span class="sxs-lookup"><span data-stu-id="c067e-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="c067e-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="c067e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c067e-103"><xref:System.Security.AccessControl.MutexAccessRule>クラスは、一連の名前付きシステム ミュー テックスの Windows アクセス制御セキュリティを管理するため、.NET Framework が提供するクラスの 1 つです。</span><span class="sxs-lookup"><span data-stu-id="c067e-103">The <xref:System.Security.AccessControl.MutexAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes.</span></span> <span data-ttu-id="c067e-104">これらのクラスとそれらのリレーションシップを基になる Windows アクセス制御構造の概要については、次を参照してください。<xref:System.Security.AccessControl.MutexSecurity>します。</span><span class="sxs-lookup"><span data-stu-id="c067e-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.MutexSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c067e-105">Windows アクセス制御のセキュリティは、名前付きシステム ミュー テックスでのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="c067e-105">Windows access control security is meaningful only for named system mutexes.</span></span> <span data-ttu-id="c067e-106">場合、<xref:System.Threading.Mutex>オブジェクトは、ローカル ミュー テックスを表す、アクセス制御は関係ありません。</span><span class="sxs-lookup"><span data-stu-id="c067e-106">If a <xref:System.Threading.Mutex> object represents a local mutex, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="c067e-107">現在名前付きミュー テックスに適用されるルールの一覧を取得する、<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>を取得するメソッド、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトし、を使用してその<xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A>メソッドのコレクションを取得する<xref:System.Security.AccessControl.MutexAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c067e-107">To get a list of the rules currently applied to a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.MutexSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span>  
  
 <span data-ttu-id="c067e-108"><xref:System.Security.AccessControl.MutexAccessRule> オブジェクトは、基になる随意アクセス制御リスト (DACL) のアクセス制御エントリと 1 対 1 ではマップできません。</span><span class="sxs-lookup"><span data-stu-id="c067e-108"><xref:System.Security.AccessControl.MutexAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="c067e-109">ミュー テックスのすべてのアクセス規則のセットを取得するときに、セットには、すべてのアクセス制御エントリを表すために必要な現在のルールの最小数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c067e-109">When you get the set of all access rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c067e-110">適用規則を削除すると、基になるアクセス制御エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="c067e-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="c067e-111">規則の情報は、アクセス制御エントリの最小数を維持するために可能であれば、結合されます。</span><span class="sxs-lookup"><span data-stu-id="c067e-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="c067e-112">したがって、現在のルールの一覧を読み取るときに、追加したすべてのルールの一覧とまったく同じように体裁に可能性がありますとは限りません。</span><span class="sxs-lookup"><span data-stu-id="c067e-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="c067e-113">使用<xref:System.Security.AccessControl.MutexAccessRule>許可または拒否をユーザーまたはグループへのアクセス権を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c067e-113">Use <xref:System.Security.AccessControl.MutexAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="c067e-114">A<xref:System.Security.AccessControl.MutexAccessRule>表しますへのアクセスを許可または拒否のいずれかにアクセスすることはありません両方を常にオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c067e-114">A <xref:System.Security.AccessControl.MutexAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="c067e-115">名前付きシステム ミュー テックスには、ルールを適用するには、使用、<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>を取得するメソッド、<xref:System.Security.AccessControl.MutexSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c067e-115">To apply a rule to a named system mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="c067e-116">変更、 <xref:System.Security.AccessControl.MutexSecurity> 、ルールを追加し、使用してそのメソッドを使用して、オブジェクト、<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>セキュリティ オブジェクトを再アタッチするメソッド。</span><span class="sxs-lookup"><span data-stu-id="c067e-116">Modify the <xref:System.Security.AccessControl.MutexSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c067e-117">加えた変更を<xref:System.Security.AccessControl.MutexSecurity>を呼び出すまでオブジェクトに名前付きミュー テックスのアクセス レベルは影響しません、<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>メソッドを名前付きミュー テックスに変更されたセキュリティ オブジェクトを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="c067e-117">Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named mutex.</span></span>  
  
 <span data-ttu-id="c067e-118"><xref:System.Security.AccessControl.MutexAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="c067e-118"><xref:System.Security.AccessControl.MutexAccessRule> objects are immutable.</span></span> <span data-ttu-id="c067e-119">メソッドを使用して、ミュー テックスのセキュリティが変更された、<xref:System.Security.AccessControl.MutexSecurity>ルールを追加または削除するクラス。 これを行うと、基になるのアクセス制御エントリが変更されます。</span><span class="sxs-lookup"><span data-stu-id="c067e-119">Security for a mutex is modified using the methods of the <xref:System.Security.AccessControl.MutexSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c067e-120">Windows 98 または Windows Millennium Edition には、同期オブジェクトのセキュリティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c067e-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c067e-121">次のコード例を示します作成と使用の<xref:System.Security.AccessControl.MutexAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c067e-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span> <span data-ttu-id="c067e-122">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="c067e-122">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="c067e-123">例では、現在のユーザーに対して新しい権限を許可し、新しい権限は、既存のマージされることを示す、結果を表示します<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="c067e-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c067e-124">この例は、セキュリティ オブジェクトをアタッチできません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c067e-124">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="c067e-125">セキュリティ オブジェクトをアタッチする例が記載<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c067e-125">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.MutexSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c067e-126"><see cref="T:System.Security.AccessControl.MutexAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c067e-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="c067e-127">規則の適用対象となるユーザーまたはグループ。</span><span class="sxs-lookup"><span data-stu-id="c067e-127">The user or group the rule applies to.</span></span> <span data-ttu-id="c067e-128"><see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c067e-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="c067e-129">許可されたアクセス権または拒否されたアクセス権を指定する <see cref="T:System.Security.AccessControl.MutexRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="c067e-129">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="c067e-130">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c067e-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="c067e-131">規則を適用するユーザーまたはグループ、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.MutexAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c067e-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c067e-132">上で待機する、 <xref:System.Threading.Mutex> (呼び出すことによって、 <xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A>または<xref:System.Threading.WaitHandle.WaitAll%2A>メソッド)、ユーザーがいる必要があります<xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c067e-132">To wait on a <xref:System.Threading.Mutex> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="c067e-133">呼び出すことにより、ミュー テックスを解放する、<xref:System.Threading.Mutex.ReleaseMutex%2A>メソッドでは、ユーザーがいる必要があります<xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c067e-133">To release the mutex, by calling the <xref:System.Threading.Mutex.ReleaseMutex%2A> method, the user must have <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c067e-134"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="c067e-134"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="c067e-135">または</span><span class="sxs-lookup"><span data-stu-id="c067e-135">-or-</span></span> 
 <span data-ttu-id="c067e-136"><paramref name="type" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="c067e-136"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c067e-137"><paramref name="identity" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="c067e-137"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c067e-138">または</span><span class="sxs-lookup"><span data-stu-id="c067e-138">-or-</span></span> 
 <span data-ttu-id="c067e-139"><paramref name="eventRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="c067e-139"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c067e-140"><paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span><span class="sxs-lookup"><span data-stu-id="c067e-140"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (string identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::String ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : string * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="c067e-141">規則の適用対象となるユーザー名またはグループ名。</span><span class="sxs-lookup"><span data-stu-id="c067e-141">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="c067e-142">許可されたアクセス権または拒否されたアクセス権を指定する <see cref="T:System.Security.AccessControl.MutexRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="c067e-142">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="c067e-143">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c067e-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="c067e-144">規則を適用するユーザーまたはグループの名前、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.MutexAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c067e-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c067e-145">上で待機する、 <xref:System.Threading.Mutex> (呼び出すことによって、 <xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A>または<xref:System.Threading.WaitHandle.WaitAll%2A>メソッド)、ユーザーがいる必要があります<xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c067e-145">To wait on a <xref:System.Threading.Mutex> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="c067e-146">呼び出すことにより、ミュー テックスを解放する、<xref:System.Threading.Mutex.ReleaseMutex%2A>メソッド、ユーザーがいる必要があります<xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c067e-146">To release the mutex, by calling the <xref:System.Threading.Mutex.ReleaseMutex%2A> methods, the user must have <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 <span data-ttu-id="c067e-147">このコンス トラクターを作成するのには、<xref:System.Security.Principal.NTAccount>オブジェクトを渡すことによって`identity`を<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、および新しく作成された渡す<xref:System.Security.Principal.NTAccount>オブジェクトを<xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="c067e-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c067e-148">次のコード例は、作成するこのコンス トラクターの使用を示します<xref:System.Security.AccessControl.MutexAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c067e-148">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span> <span data-ttu-id="c067e-149">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="c067e-149">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="c067e-150">例では、現在のユーザーに対して新しい権限を許可し、新しい権限は、既存のマージされることを示す、結果を表示します<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="c067e-150">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c067e-151">この例は、セキュリティ オブジェクトをアタッチできません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c067e-151">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="c067e-152">セキュリティ オブジェクトをアタッチする例が記載<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c067e-152">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c067e-153"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="c067e-153"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="c067e-154">または</span><span class="sxs-lookup"><span data-stu-id="c067e-154">-or-</span></span> 
 <span data-ttu-id="c067e-155"><paramref name="type" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="c067e-155"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c067e-156"><paramref name="eventRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="c067e-156"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c067e-157"><paramref name="identity" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="c067e-157"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c067e-158">または</span><span class="sxs-lookup"><span data-stu-id="c067e-158">-or-</span></span> 
 <span data-ttu-id="c067e-159"><paramref name="identity" /> は長さゼロの文字列です。</span><span class="sxs-lookup"><span data-stu-id="c067e-159"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="c067e-160">または</span><span class="sxs-lookup"><span data-stu-id="c067e-160">-or-</span></span> 
 <span data-ttu-id="c067e-161"><paramref name="identity" /> が 512 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="c067e-161"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c067e-162">アクセス規則で許可されたアクセス権または拒否されたアクセス権を取得します。</span><span class="sxs-lookup"><span data-stu-id="c067e-162">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="c067e-163">アクセス規則で許可されたアクセス権または拒否されたアクセス権を表す <see cref="T:System.Security.AccessControl.MutexRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="c067e-163">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c067e-164"><xref:System.Security.AccessControl.MutexAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="c067e-164"><xref:System.Security.AccessControl.MutexAccessRule> objects are immutable.</span></span> <span data-ttu-id="c067e-165">別のユーザー、異なる権限、または異なるを表す新しいアクセス ルールを作成する<xref:System.Security.AccessControl.AccessControlType>が、既存のアクセス規則を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="c067e-165">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c067e-166">次のコード例は、の使用を示します、<xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A>ルールに含まれる一連の権限を表示するプロパティを<xref:System.Security.AccessControl.MutexSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c067e-166">The following code example demonstrates the use of the <xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A> property to display the rights in the set of rules contained in a <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="c067e-167">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="c067e-167">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="c067e-168">例では、現在のユーザーに対して新しい権限を許可し、新しい権限は、既存のマージされることを示す、結果を表示します<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="c067e-168">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c067e-169">この例は、セキュリティ オブジェクトをアタッチできません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c067e-169">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="c067e-170">セキュリティ オブジェクトをアタッチする例が記載<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c067e-170">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>