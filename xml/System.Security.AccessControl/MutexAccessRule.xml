<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MutexAccessRule.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cc2ddbf08b7af564d2bf172f4e59ea676b3a8afe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc2ddbf08b7af564d2bf172f4e59ea676b3a8afe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Represents a set of access rights allowed or denied for a user or group.</source>
          <target state="translated">ユーザーまたはグループに許可されたアクセス権セットまたは拒否されたアクセス権セットを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>クラスは、一連の名前付きシステム ミュー テックスに Windows アクセス制御セキュリティを管理するため、.NET Framework が提供するクラスのいずれか。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>For an overview of these classes, and their relationship to the underlying Windows access control structures, see <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>.</source>
          <target state="translated">これらのクラスと、基になる Windows アクセス制御構造との関係の概要については、次を参照してください。<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Windows access control security is meaningful only for named system mutexes.</source>
          <target state="translated">Windows のアクセス制御セキュリティは、名前付きシステム ミュー テックスに対してのみ有効です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>If a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object represents a local mutex, access control is irrelevant.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクトは、ローカル ミュー テックスを表します。、アクセス制御は使用されません。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>To get a list of the rules currently applied to a named mutex, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, and then use its <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph> method to obtain a collection of <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects.</source>
          <target state="translated">名前付きミュー テックスに現在適用されている規則の一覧を取得する、<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>取得するメソッド、<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトを使用して、その<ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph>メソッドのコレクションを取得する<ph id="ph4">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> オブジェクトは基になる随意アクセス制御リスト (DACL) でアクセス制御エントリを一対一でマップしません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>When you get the set of all access rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.</source>
          <target state="translated">ミュー テックスのすべてのアクセス規則のセットを取得するときに、セットには、すべてのアクセス制御エントリを表すために必要な現在のルールの最小数が含まれています。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The underlying access control entries change as you apply and remove rules.</source>
          <target state="translated">基になるアクセス制御エントリは変更を適用して規則を削除するとします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The information in rules is merged if possible, to maintain the smallest number of access control entries.</source>
          <target state="translated">規則の情報は、アクセス制御エントリの最小数を維持するために可能な場合は、結合されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</source>
          <target state="translated">したがって、現在のルールの一覧を読み取るときに、追加したすべてのルールの一覧とまったく同じ体裁に可能性がありますとは限りません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Use <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects to specify access rights to allow or deny to a user or group.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>ユーザーまたはグループを許可または拒否するアクセス権を指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> object always represents either allowed access or denied access, never both.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>表しますアクセスを許可または拒否にアクセスすることはありません両方を常にオブジェクトします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>To apply a rule to a named system mutex, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">名前付きシステム ミュー テックスにルールを適用するには、使用、<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>取得するメソッド、<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Modify the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object by using its methods to add the rule, and then use the <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to reattach the security object.</source>
          <target state="translated">変更、 <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> 、ルールを追加し、使用してそのメソッドを使用して、オブジェクト、<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>セキュリティ オブジェクトを再アタッチするメソッド。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object do not affect the access levels of the named mutex until you call the <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign the altered security object to the named mutex.</source>
          <target state="translated">変更を加える、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトには影響しません、名前付きミュー テックスのアクセス レベルが呼び出されるまで、<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>名前付きミュー テックスに変更されたセキュリティ オブジェクトを割り当てる方法です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects are immutable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> オブジェクトは変更できません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Security for a mutex is modified using the methods of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> class to add or remove rules; as you do this, the underlying access control entries are modified.</source>
          <target state="translated">メソッドを使用して、ミュー テックスのセキュリティが変更された、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>ルールを追加または削除するクラスです。 これを行うと、基になるアクセス制御エントリが変更されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Windows 98 または Windows Millennium Edition には、同期オブジェクト上のセキュリティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The following code example demonstrates the creation and use of <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects.</source>
          <target state="translated">次のコード例はの作成と使用を示しています。<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>ルール。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexAccessRule">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The user or group the rule applies to.</source>
          <target state="translated">規則の適用対象となるユーザーまたはグループ。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>Must be of type <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> or a type such as <ph id="ph2">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph3">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 型にするか、または <ph id="ph2">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> 型に変換できる <ph id="ph3">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> などの型にする必要があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the rights allowed or denied.</source>
          <target state="translated">許可されたアクセス権または拒否されたアクセス権を指定する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">アクセス権が許可されているかどうかを指定する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          <target state="translated">規則を適用するユーザーまたはグループ、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>To wait on a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> (by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> method), a user must have <ph id="ph5">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">上で待機する、 <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> (を呼び出して、 <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>メソッド)、ユーザーがいる必要があります<ph id="ph5">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType&gt;</ph>アクセスします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>To release the mutex, by calling the <ph id="ph1">&lt;xref:System.Threading.Mutex.ReleaseMutex%2A&gt;</ph> method, the user must have <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">呼び出すことにより、ミュー テックスを解放する、<ph id="ph1">&lt;xref:System.Threading.Mutex.ReleaseMutex%2A&gt;</ph>メソッド、ユーザーがいる必要があります<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType&gt;</ph>アクセスします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> に無効な値が指定されています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> に無効な値が指定されています。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> が 0 です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 型ではなく、<ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> 型に変換できる <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> などの型でもありません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The name of the user or group the rule applies to.</source>
          <target state="translated">規則の適用対象となるユーザー名またはグループ名。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the rights allowed or denied.</source>
          <target state="translated">許可されたアクセス権または拒否されたアクセス権を指定する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          <target state="translated">アクセス権が許可されているかどうかを指定する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> 値の 1 つ。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
          <target state="translated">規則を適用するユーザーまたはグループの名前、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>To wait on a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> (by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> method), a user must have <ph id="ph5">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">上で待機する、 <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> (を呼び出して、 <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>、<ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph>メソッド)、ユーザーがいる必要があります<ph id="ph5">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType&gt;</ph>アクセスします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>To release the mutex, by calling the <ph id="ph1">&lt;xref:System.Threading.Mutex.ReleaseMutex%2A&gt;</ph> methods, the user must have <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType&gt;</ph> access.</source>
          <target state="translated">呼び出すことにより、ミュー テックスを解放する、<ph id="ph1">&lt;xref:System.Threading.Mutex.ReleaseMutex%2A&gt;</ph>メソッド、ユーザーがいる必要があります<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType&gt;</ph>アクセスします。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>This constructor is equivalent to creating an <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object, by passing <ph id="ph2">`identity`</ph> to the <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, and passing the newly created <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> constructor.</source>
          <target state="translated">このコンス トラクターを作成するのには、<ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph>を渡すことによって、オブジェクト<ph id="ph2">`identity`</ph>を<ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>コンス トラクター、および新しく作成された渡す<ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph>オブジェクトを<ph id="ph5">&lt;xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The following code example demonstrates the use of this constructor to create <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects.</source>
          <target state="translated">作成するこのコンス トラクターの使用を次のコード例に示します<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>ルール。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> に無効な値が指定されています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> に無効な値が指定されています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="eventRights" /&gt;</ph> が 0 です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is a zero-length string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> は長さゼロの文字列です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is longer than 512 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> が 512 文字を超えています。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>Gets the rights allowed or denied by the access rule.</source>
          <target state="translated">アクセス規則で許可されたアクセス権または拒否されたアクセス権を取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values indicating the rights allowed or denied by the access rule.</source>
          <target state="translated">アクセス規則で許可されたアクセス権または拒否されたアクセス権を表す <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> objects are immutable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> オブジェクトは変更できません。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>You can create a new access rule representing a different user, different rights, or a different <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, but you cannot modify an existing access rule.</source>
          <target state="translated">別のユーザー、異なる権限、または異なるを表す新しいアクセス ルールを作成する<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>が、既存のアクセス ルールを変更することはできません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A&gt;</ph> property to display the rights in the set of rules contained in a <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">使用を次のコード例に示します、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A&gt;</ph>に含まれる規則のセットに権限を表示するプロパティを<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>ルール。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>