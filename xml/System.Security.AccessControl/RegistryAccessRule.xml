<Type Name="RegistryAccessRule" FullName="System.Security.AccessControl.RegistryAccessRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62c3253705ce2579586fdcfa198c3e0977ef242d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490446" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="095ff-101">ユーザーまたはグループに許可されたアクセス権セットまたは拒否されたアクセス権セットを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="095ff-101">Represents a set of access rights allowed or denied for a user or group.</span>
      </span>
      <span data-ttu-id="095ff-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="095ff-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="095ff-103"><xref:System.Security.AccessControl.RegistryAccessRule>クラスは、一連のレジストリ キーの Windows アクセス制御セキュリティを管理するため、.NET Framework が提供するクラスのいずれか。</span><span class="sxs-lookup"><span data-stu-id="095ff-103">The <xref:System.Security.AccessControl.RegistryAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="095ff-104">これらのクラスと、基になる Windows アクセス制御構造との関係の概要については、次を参照してください。<xref:System.Security.AccessControl.RegistrySecurity>です。</span><span class="sxs-lookup"><span data-stu-id="095ff-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="095ff-105">Windows のアクセス制御セキュリティは、レジストリ キーにのみ適用できます。</span><span class="sxs-lookup"><span data-stu-id="095ff-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="095ff-106">キーに格納されている個別のキー/値ペアを適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="095ff-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="095ff-107">レジストリ キーに現在適用されている規則の一覧を取得する、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトを使用して、その<xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A>メソッドのコレクションを取得する<xref:System.Security.AccessControl.RegistryAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="095ff-107">To get a list of the rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAccessRule> objects.</span></span>  
  
 <span data-ttu-id="095ff-108"><xref:System.Security.AccessControl.RegistryAccessRule> オブジェクトは基になるコントロールの随意アクセス リスト (DACL) にアクセス制御エントリを一対一でマップしません。</span><span class="sxs-lookup"><span data-stu-id="095ff-108"><xref:System.Security.AccessControl.RegistryAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL).</span></span> <span data-ttu-id="095ff-109">レジストリ キーのすべてのアクセス規則のセットを取得するときに、セットには、すべてのアクセス制御エントリを表すために必要な現在のルールの最小数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="095ff-109">When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="095ff-110">基になるアクセス制御エントリは変更を適用して規則を削除するとします。</span><span class="sxs-lookup"><span data-stu-id="095ff-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="095ff-111">規則の情報は、アクセス制御エントリの最小数を維持するために可能な場合は、結合されます。</span><span class="sxs-lookup"><span data-stu-id="095ff-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="095ff-112">したがって、現在のルールの一覧を読み取るときに、追加したすべてのルールの一覧とまったく同じ体裁に可能性がありますとは限りません。</span><span class="sxs-lookup"><span data-stu-id="095ff-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="095ff-113">使用して<xref:System.Security.AccessControl.RegistryAccessRule>ユーザーまたはグループを許可または拒否するアクセス権を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="095ff-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="095ff-114">A<xref:System.Security.AccessControl.RegistryAccessRule>表しますアクセスを許可または拒否にアクセスすることはありません両方を常にオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="095ff-114">A <xref:System.Security.AccessControl.RegistryAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="095ff-115">レジストリ キーにルールを適用するには、使用、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="095ff-115">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="095ff-116">変更、 <xref:System.Security.AccessControl.RegistrySecurity> 、ルールを追加し、使用してそのメソッドを使用して、オブジェクト、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>セキュリティ オブジェクトを再アタッチするメソッド。</span><span class="sxs-lookup"><span data-stu-id="095ff-116">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="095ff-117">変更を加える、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトには影響しません、レジストリ キーのアクセス レベルが呼び出されるまで、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>レジストリ キーには、変更されたセキュリティ オブジェクトを割り当てる方法です。</span><span class="sxs-lookup"><span data-stu-id="095ff-117">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="095ff-118"><xref:System.Security.AccessControl.RegistryAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="095ff-118"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="095ff-119">メソッドを使用してレジストリ キーのセキュリティが変更された、<xref:System.Security.AccessControl.RegistrySecurity>ルールを追加または削除するクラスです。 これを行うと、基になるアクセス制御エントリが変更されます。</span><span class="sxs-lookup"><span data-stu-id="095ff-119">Security for a registry key is modified using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="095ff-120">次のコード例では、継承や伝達を行うアクセス規則を示します。</span><span class="sxs-lookup"><span data-stu-id="095ff-120">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="095ff-121">例は、作成、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトを作成し、持つ 2 つの規則を追加、、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグ。</span><span class="sxs-lookup"><span data-stu-id="095ff-121">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="095ff-122">最初の規則には伝達フラグがありません、2 つ目があるときに<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>です。</span><span class="sxs-lookup"><span data-stu-id="095ff-122">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="095ff-123">プログラムは、表示内のルール、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトをオブジェクトを使用してサブキーを作成します。</span><span class="sxs-lookup"><span data-stu-id="095ff-123">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the object to create a subkey.</span></span> <span data-ttu-id="095ff-124">プログラムでは、子サブキーと孫サブキーを作成し、し、各サブキーのセキュリティを表示します。</span><span class="sxs-lookup"><span data-stu-id="095ff-124">The program creates a child subkey and a grandchild subkey, and then displays the security for each subkey.</span></span> <span data-ttu-id="095ff-125">最後に、プログラムは、テスト キーを削除します。</span><span class="sxs-lookup"><span data-stu-id="095ff-125">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="095ff-126">
            <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="095ff-127">規則の適用対象となるユーザーまたはグループ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-127">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="095ff-128">
            <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="095ff-129">許可されたアクセス権または拒否されたアクセス権を表す <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="095ff-130">アクセス権が許可されているかどうかを表す <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="095ff-131">規則を適用するユーザーまたはグループ、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.RegistryAccessRule" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="095ff-132">このコンス トラクターは、既定の反映され、継承を指定します。</span><span class="sxs-lookup"><span data-stu-id="095ff-132">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="095ff-133">つまり、<xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType>と<xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="095ff-133">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="095ff-134">
            <paramref name="registryRights" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-134">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="095ff-135">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-135">-or-</span>
          </span>
          <span data-ttu-id="095ff-136">
            <paramref name="type" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-136">
              <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="095ff-137">
            <paramref name="identity" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-137">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="095ff-138">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-138">-or-</span>
          </span>
          <span data-ttu-id="095ff-139">
            <paramref name="eventRights" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-139">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="095ff-140">
            <paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-140">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="095ff-141">規則の適用対象となるユーザー名またはグループ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-141">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="095ff-142">許可されたアクセス権または拒否されたアクセス権を表す <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-142">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="095ff-143">アクセス権が許可されているかどうかを表す <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="095ff-144">規則を適用するユーザーまたはグループの名前、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.RegistryAccessRule" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="095ff-145">このコンス トラクターは、既定の反映され、継承を指定します。</span><span class="sxs-lookup"><span data-stu-id="095ff-145">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="095ff-146">つまり、<xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType>と<xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="095ff-146">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="095ff-147">このコンス トラクターを作成するのには、<xref:System.Security.Principal.NTAccount>を渡すことによって、オブジェクト`identity`を<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、および新しく作成された渡す<xref:System.Security.Principal.NTAccount>オブジェクトを<xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="095ff-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="095ff-148">次のコード例は、レジストリのアクセス ルールを作成、追加して、<xref:System.Security.AccessControl.RegistrySecurity>許可し、権限を拒否する規則は、同じの互換性のあるルールの中には別方法の種類を表示、オブジェクトがマージされます。</span><span class="sxs-lookup"><span data-stu-id="095ff-148">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="095ff-149">
            <paramref name="registryRights" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-149">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="095ff-150">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-150">-or-</span>
          </span>
          <span data-ttu-id="095ff-151">
            <paramref name="type" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-151">
              <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="095ff-152">
            <paramref name="registryRights" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-152">
              <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="095ff-153">
            <paramref name="identity" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-153">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="095ff-154">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-154">-or-</span>
          </span>
          <span data-ttu-id="095ff-155">
            <paramref name="identity" /> は長さゼロの文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-155">
              <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="095ff-156">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-156">-or-</span>
          </span>
          <span data-ttu-id="095ff-157">
            <paramref name="identity" /> が 512 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-157">
              <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="095ff-158">規則の適用対象となるユーザーまたはグループ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-158">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="095ff-159">
            <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-159">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="095ff-160">許可されたアクセス権または拒否されたアクセス権を指定する <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-160">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="095ff-161">他のオブジェクトからアクセス権を継承する方法を指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> フラグのビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-161">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="095ff-162">他のオブジェクトにアクセス権を反映させる方法を指定する <see cref="T:System.Security.AccessControl.PropagationFlags" /> フラグのビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-162">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="095ff-163">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-163">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="095ff-164">規則を適用するユーザーまたはグループ、アクセス権、継承フラグ、反映フラグ、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.RegistryAccessRule" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-164">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="095ff-165">すべてのレジストリ キーには、コンテナーがあるためはレジストリ キーの意味のある唯一の継承フラグはに、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="095ff-165">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="095ff-166">このフラグが指定されていない場合、伝達フラグは無視され、直接のキーだけが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="095ff-166">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="095ff-167">フラグが存在する場合は、次の表に示すように、規則が反映されます。</span><span class="sxs-lookup"><span data-stu-id="095ff-167">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="095ff-168">テーブルでは、子サブキー CS と孫サブキー GS の S サブキーがあると仮定します。</span><span class="sxs-lookup"><span data-stu-id="095ff-168">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="095ff-169">つまり、孫サブキーのパスは、S\CS\GS がします。</span><span class="sxs-lookup"><span data-stu-id="095ff-169">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="095ff-170">伝達フラグ</span><span class="sxs-lookup"><span data-stu-id="095ff-170">Propagation flags</span></span>|<span data-ttu-id="095ff-171">S</span><span class="sxs-lookup"><span data-stu-id="095ff-171">S</span></span>|<span data-ttu-id="095ff-172">CS</span><span class="sxs-lookup"><span data-stu-id="095ff-172">CS</span></span>|<span data-ttu-id="095ff-173">GS</span><span class="sxs-lookup"><span data-stu-id="095ff-173">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="095ff-174">x</span><span class="sxs-lookup"><span data-stu-id="095ff-174">X</span></span>|<span data-ttu-id="095ff-175">x</span><span class="sxs-lookup"><span data-stu-id="095ff-175">X</span></span>|<span data-ttu-id="095ff-176">x</span><span class="sxs-lookup"><span data-stu-id="095ff-176">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="095ff-177">x</span><span class="sxs-lookup"><span data-stu-id="095ff-177">X</span></span>|<span data-ttu-id="095ff-178">x</span><span class="sxs-lookup"><span data-stu-id="095ff-178">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="095ff-179">x</span><span class="sxs-lookup"><span data-stu-id="095ff-179">X</span></span>|<span data-ttu-id="095ff-180">x</span><span class="sxs-lookup"><span data-stu-id="095ff-180">X</span></span>|  
|<span data-ttu-id="095ff-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="095ff-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="095ff-182">x</span><span class="sxs-lookup"><span data-stu-id="095ff-182">X</span></span>||  
  
 <span data-ttu-id="095ff-183">孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。</span><span class="sxs-lookup"><span data-stu-id="095ff-183">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="095ff-184">たとえば場合、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグが指定されて`inheritanceFlags`と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>伝達フラグが指定されて`propagationFlags`すると、このルールは、イミディ エイトのサブキーには適用されませんはすべての直接の子サブキーしをすべてのサブキーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="095ff-184">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="095ff-185">指定できますが、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>を示すフラグ`inheritanceFlags`、意味がないようにします。</span><span class="sxs-lookup"><span data-stu-id="095ff-185">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="095ff-186">アクセス制御のため、サブキーの名前と値のペアは別個のオブジェクト</span><span class="sxs-lookup"><span data-stu-id="095ff-186">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="095ff-187">名前/値のペアにアクセス権は、サブキーの権限によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="095ff-187">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="095ff-188">さらに、すべてのサブキーがコンテナーであるため (つまり、ことが含まれているその他のサブキーには) を受けない、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグ。</span><span class="sxs-lookup"><span data-stu-id="095ff-188">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="095ff-189">最後に、指定する、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>互換性のあるそれ以外の場合の規則の組み合わせに支障があるためにフラグが、ルールのメンテナンスに不必要に複雑にできます。</span><span class="sxs-lookup"><span data-stu-id="095ff-189">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="095ff-190">
            <paramref name="registryRights" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-190">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="095ff-191">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-191">-or-</span>
          </span>
          <span data-ttu-id="095ff-192">
            <paramref name="type" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-192">
              <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="095ff-193">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-193">-or-</span>
          </span>
          <span data-ttu-id="095ff-194">
            <paramref name="inheritanceFlags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-194">
              <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="095ff-195">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-195">-or-</span>
          </span>
          <span data-ttu-id="095ff-196">
            <paramref name="propagationFlags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-196">
              <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="095ff-197">
            <paramref name="identity" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-197">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="095ff-198">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-198">-or-</span>
          </span>
          <span data-ttu-id="095ff-199">
            <paramref name="registryRights" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-199">
              <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="095ff-200">
            <paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-200">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="095ff-201">規則の適用対象となるユーザー名またはグループ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-201">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="095ff-202">許可されたアクセス権または拒否されたアクセス権を表す <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-202">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="095ff-203">他のオブジェクトからアクセス権を継承する方法を指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> フラグのビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-203">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="095ff-204">他のオブジェクトにアクセス権を反映させる方法を指定する <see cref="T:System.Security.AccessControl.PropagationFlags" /> フラグのビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-204">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="095ff-205">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-205">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="095ff-206">規則を適用するユーザーまたはグループの名前、アクセス権、継承フラグ、反映フラグ、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.RegistryAccessRule" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-206">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="095ff-207">すべてのレジストリ キーには、コンテナーがあるためはレジストリ キーの意味のある唯一の継承フラグはに、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="095ff-207">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="095ff-208">このフラグが指定されていない場合、伝達フラグは無視され、直接のキーだけが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="095ff-208">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="095ff-209">フラグが存在する場合は、次の表に示すように、規則が反映されます。</span><span class="sxs-lookup"><span data-stu-id="095ff-209">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="095ff-210">テーブルでは、子サブキー CS と孫サブキー GS の S サブキーがあると仮定します。</span><span class="sxs-lookup"><span data-stu-id="095ff-210">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="095ff-211">つまり、孫サブキーのパスは、S\CS\GS がします。</span><span class="sxs-lookup"><span data-stu-id="095ff-211">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="095ff-212">伝達フラグ</span><span class="sxs-lookup"><span data-stu-id="095ff-212">Propagation flags</span></span>|<span data-ttu-id="095ff-213">S</span><span class="sxs-lookup"><span data-stu-id="095ff-213">S</span></span>|<span data-ttu-id="095ff-214">CS</span><span class="sxs-lookup"><span data-stu-id="095ff-214">CS</span></span>|<span data-ttu-id="095ff-215">GS</span><span class="sxs-lookup"><span data-stu-id="095ff-215">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="095ff-216">x</span><span class="sxs-lookup"><span data-stu-id="095ff-216">X</span></span>|<span data-ttu-id="095ff-217">x</span><span class="sxs-lookup"><span data-stu-id="095ff-217">X</span></span>|<span data-ttu-id="095ff-218">x</span><span class="sxs-lookup"><span data-stu-id="095ff-218">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="095ff-219">x</span><span class="sxs-lookup"><span data-stu-id="095ff-219">X</span></span>|<span data-ttu-id="095ff-220">x</span><span class="sxs-lookup"><span data-stu-id="095ff-220">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="095ff-221">x</span><span class="sxs-lookup"><span data-stu-id="095ff-221">X</span></span>|<span data-ttu-id="095ff-222">x</span><span class="sxs-lookup"><span data-stu-id="095ff-222">X</span></span>|  
|<span data-ttu-id="095ff-223"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="095ff-223"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="095ff-224">x</span><span class="sxs-lookup"><span data-stu-id="095ff-224">X</span></span>||  
  
 <span data-ttu-id="095ff-225">孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。</span><span class="sxs-lookup"><span data-stu-id="095ff-225">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="095ff-226">たとえば場合、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグが指定されて`inheritanceFlags`と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>伝達フラグが指定されて`propagationFlags`すると、このルールは、イミディ エイトのサブキーには適用されませんはすべての直接の子サブキーしをすべてのサブキーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="095ff-226">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="095ff-227">指定できますが、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>を示すフラグ`inheritanceFlags`、意味がないようにします。</span><span class="sxs-lookup"><span data-stu-id="095ff-227">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="095ff-228">アクセス制御のため、サブキーの名前と値のペアは別個のオブジェクト</span><span class="sxs-lookup"><span data-stu-id="095ff-228">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="095ff-229">名前/値のペアにアクセス権は、サブキーの権限によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="095ff-229">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="095ff-230">さらに、すべてのサブキーがコンテナーであるため (つまり、ことが含まれているその他のサブキーには) を受けない、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグ。</span><span class="sxs-lookup"><span data-stu-id="095ff-230">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="095ff-231">最後に、指定する、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>互換性のあるそれ以外の場合の規則の組み合わせに支障があるためにフラグが、ルールのメンテナンスに不必要に複雑にできます。</span><span class="sxs-lookup"><span data-stu-id="095ff-231">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 <span data-ttu-id="095ff-232">このコンス トラクターを作成するのには、<xref:System.Security.Principal.NTAccount>を渡すことによって、オブジェクト`identity`を<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、および新しく作成された渡す<xref:System.Security.Principal.NTAccount>オブジェクトを<xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="095ff-232">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="095ff-233">次のコード例では、継承や伝達を行うアクセス規則を示します。</span><span class="sxs-lookup"><span data-stu-id="095ff-233">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="095ff-234">例は、作成、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトを作成し、持つ 2 つの規則を追加、、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグ。</span><span class="sxs-lookup"><span data-stu-id="095ff-234">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, and then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="095ff-235">最初の規則には伝達フラグがありません、2 つ目があるときに<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>です。</span><span class="sxs-lookup"><span data-stu-id="095ff-235">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="095ff-236">プログラムは、表示内のルール、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクト、および、使用、<xref:System.Security.AccessControl.RegistrySecurity>サブキーを作成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="095ff-236">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="095ff-237">プログラムでは、子サブキーと孫サブキーを作成し、し、各サブキーの規則を表示します。</span><span class="sxs-lookup"><span data-stu-id="095ff-237">The program creates a child subkey and a grandchild subkey, and then displays the rules for each subkey.</span></span> <span data-ttu-id="095ff-238">最後に、プログラムは、テスト キーを削除します。</span><span class="sxs-lookup"><span data-stu-id="095ff-238">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="095ff-239">
            <paramref name="registryRights" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-239">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="095ff-240">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-240">-or-</span>
          </span>
          <span data-ttu-id="095ff-241">
            <paramref name="type" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-241">
              <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="095ff-242">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-242">-or-</span>
          </span>
          <span data-ttu-id="095ff-243">
            <paramref name="inheritanceFlags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-243">
              <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="095ff-244">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-244">-or-</span>
          </span>
          <span data-ttu-id="095ff-245">
            <paramref name="propagationFlags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-245">
              <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="095ff-246">
            <paramref name="eventRights" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-246">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="095ff-247">
            <paramref name="identity" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-247">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="095ff-248">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-248">-or-</span>
          </span>
          <span data-ttu-id="095ff-249">
            <paramref name="identity" /> は長さゼロの文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-249">
              <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="095ff-250">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-250">-or-</span>
          </span>
          <span data-ttu-id="095ff-251">
            <paramref name="identity" /> が 512 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-251">
              <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="095ff-252">アクセス規則で許可されたアクセス権または拒否されたアクセス権を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-252">Gets the rights allowed or denied by the access rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="095ff-253">アクセス規則で許可されたアクセス権または拒否されたアクセス権を表す <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="095ff-253">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied by the access rule.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="095ff-254"><xref:System.Security.AccessControl.RegistryAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="095ff-254"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="095ff-255">別のユーザー、異なる権限、または異なるを表す新しいアクセス ルールを作成する<xref:System.Security.AccessControl.AccessControlType>が、既存のアクセス ルールを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="095ff-255">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>