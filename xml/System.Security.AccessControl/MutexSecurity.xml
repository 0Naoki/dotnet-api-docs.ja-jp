<Type Name="MutexSecurity" FullName="System.Security.AccessControl.MutexSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3acf0a74aad6e33bc9ab979ff26904dc803135c1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36628098" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MutexSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexSecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type MutexSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ceba4-101">名前付きミューテックスの Windows アクセス制御セキュリティを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ceba4-101">Represents the Windows access control security for a named mutex.</span>
      </span>
      <span data-ttu-id="ceba4-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ceba4-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-103">A<xref:System.Security.AccessControl.MutexSecurity>オブジェクトが、名前付きシステム ミュー テックスのアクセス権を指定しもアクセス試行を監査する方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-103">A <xref:System.Security.AccessControl.MutexSecurity> object specifies access rights for a named system mutex, and also specifies how access attempts are audited.</span></span> <span data-ttu-id="ceba4-104">ミュー テックスへのアクセス権がによって表される各アクセス規則と、規則で表される、<xref:System.Security.AccessControl.MutexAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-104">Access rights to the mutex are expressed as rules, with each access rule represented by a <xref:System.Security.AccessControl.MutexAccessRule> object.</span></span> <span data-ttu-id="ceba4-105">によって表される各監査規則、<xref:System.Security.AccessControl.MutexAuditRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-105">Each auditing rule is represented by a <xref:System.Security.AccessControl.MutexAuditRule> object.</span></span>  
  
 <span data-ttu-id="ceba4-106">これは、セキュリティ保護可能なオブジェクトごとに最大で 1 つ随意アクセス制御リスト (DACL)、セキュリティで保護されたオブジェクト、および最大でどのアクセス レベルを指定する 1 つのシステム アクセス制御リスト (SACL) へのアクセスを制御する、基になる Windows セキュリティ システムをミラー化します。試行を監査します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="ceba4-107">DACL および SACL は、アクセスおよび監査のユーザーとグループを指定するアクセス制御エントリ (ACE) の一覧を並べ替えられています。</span><span class="sxs-lookup"><span data-stu-id="ceba4-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="ceba4-108">A<xref:System.Security.AccessControl.MutexAccessRule>または<xref:System.Security.AccessControl.MutexAuditRule>オブジェクトは、1 つ以上の ACE を表す場合があります。</span><span class="sxs-lookup"><span data-stu-id="ceba4-108">A <xref:System.Security.AccessControl.MutexAccessRule> or <xref:System.Security.AccessControl.MutexAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-109">A<xref:System.Threading.Mutex>オブジェクトは、ローカル ミュー テックスまたは名前付きシステム ミュー テックスを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-109">A <xref:System.Threading.Mutex> object can represent a local mutex or a named system mutex.</span></span> <span data-ttu-id="ceba4-110">Windows のアクセス制御セキュリティは、名前付きシステム ミュー テックスに対してのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-110">Windows access control security is meaningful only for named system mutexes.</span></span>  
  
 <span data-ttu-id="ceba4-111"><xref:System.Security.AccessControl.MutexSecurity>、 <xref:System.Security.AccessControl.MutexAccessRule>、および<xref:System.Security.AccessControl.MutexAuditRule>クラスは、Acl や Ace の実装の詳細を非表示にします。</span><span class="sxs-lookup"><span data-stu-id="ceba4-111">The <xref:System.Security.AccessControl.MutexSecurity>, <xref:System.Security.AccessControl.MutexAccessRule>, and <xref:System.Security.AccessControl.MutexAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="ceba4-112">これらによって、17 個の異なる ACE 型との継承とアクセス権の伝達を正しく維持するための複雑さの制約を無視できます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="ceba4-113">これらのオブジェクトは、次の一般的なアクセス制御エラーを防ぐためにも設計されています。</span><span class="sxs-lookup"><span data-stu-id="ceba4-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="ceba4-114">Null DACL のセキュリティ記述子を作成しています。</span><span class="sxs-lookup"><span data-stu-id="ceba4-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="ceba4-115">DACL を null 参照では、可能性のあるサービス拒否攻撃を作成する、オブジェクトへのアクセス ルールを追加するすべてのユーザーを許可します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="ceba4-116">新しい<xref:System.Security.AccessControl.MutexSecurity>オブジェクトは常にすべてのユーザーのすべてのアクセスを拒否する空の DACL で起動します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-116">A new <xref:System.Security.AccessControl.MutexSecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="ceba4-117">Ace の正規の順序に違反します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="ceba4-118">DACL の ACE リストが正規の順序で維持されない場合ユーザー誤ってを付与するアクセス セキュリティで保護されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="ceba4-119">たとえば、拒否されたアクセス権は必要があります許可されるアクセス権の前に常に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="ceba4-120"><xref:System.Security.AccessControl.MutexSecurity> オブジェクトは、内部的に正しい順序を維持します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-120"><xref:System.Security.AccessControl.MutexSecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="ceba4-121">操作に使用するセキュリティ記述子のフラグ、リソース マネージャーの制御だけである必要があります。</span><span class="sxs-lookup"><span data-stu-id="ceba4-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="ceba4-122">ACE フラグの無効な組み合わせを作成します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="ceba4-123">継承された Ace を操作します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="ceba4-124">継承と伝達は、アクセスおよび監査規則に対して行った変更への応答で、リソース マネージャーによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="ceba4-125">Acl に無意味な Ace を挿入します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="ceba4-126">.NET セキュリティ オブジェクトでサポートされていませんのみの機能は、次のようなアプリケーションの開発者の過半数によって避ける必要がある危険なアクティビティが。</span><span class="sxs-lookup"><span data-stu-id="ceba4-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="ceba4-127">通常、リソース マネージャーで実行される低レベルのタスクです。</span><span class="sxs-lookup"><span data-stu-id="ceba4-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="ceba4-128">追加または正規の順序を保持しない方法でアクセス制御エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="ceba4-129">名前付きミュー テックスの Windows アクセス制御セキュリティを変更するには、使用、<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.MutexSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-129">To modify Windows access control security for a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="ceba4-130">追加し、ルールを削除して、セキュリティ オブジェクトを変更し、<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>に再接続します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-130">Modify the security object by adding and removing rules, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceba4-131">変更を加える、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトには影響しません、名前付きミュー テックスのアクセス レベルが呼び出されるまで、<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>名前付きミュー テックスに変更されたセキュリティ オブジェクトを割り当てる方法です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-131">Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named mutex.</span></span>  
  
 <span data-ttu-id="ceba4-132">ミュー テックスの 1 つから別のアクセス制御セキュリティをコピーするには、使用、<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.MutexSecurity>最初ミュー テックスのアクセスおよび監査規則を表すオブジェクトをクリックして、<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>メソッド、または、を受け取るコンストラクター<xref:System.Security.AccessControl.MutexSecurity>オブジェクト、2 番目のミュー テックスにそれらの規則を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-132">To copy access control security from one mutex to another, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.MutexSecurity> object representing the access and audit rules for the first mutex, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method, or a constructor that accepts a <xref:System.Security.AccessControl.MutexSecurity> object, to assign those rules to the second mutex.</span></span>  
  
 <span data-ttu-id="ceba4-133">セキュリティ記述子定義言語 (SDDL) で、初期投資をユーザーが使用できる、<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>を名前付きミュー テックスのアクセス規則を設定するメソッドと<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>SDDL 形式でのアクセス規則を表す文字列を取得するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ceba4-133">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a named mutex, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="ceba4-134">これは、説明は、新規の開発は推奨されません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-134">This is not recommended for new development.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-135">Windows 98 または Windows Millennium Edition には、同期オブジェクト上のセキュリティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-135">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceba4-136">次のコード例に示します間を分離<xref:System.Security.AccessControl.AccessControlType.Allow>ルールと<xref:System.Security.AccessControl.AccessControlType.Deny>規則し、互換性のあるルール で、権限の組み合わせを示しています。</span><span class="sxs-lookup"><span data-stu-id="ceba4-136">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="ceba4-137">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-137">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="ceba4-138">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="ceba4-138">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-139">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-139">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="ceba4-140">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-140">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.MutexAccessRule" />
    <altmember cref="T:System.Security.AccessControl.MutexAuditRule" />
    <altmember cref="T:System.Security.AccessControl.MutexRights" />
    <altmember cref="M:System.Threading.Mutex.GetAccessControl" />
    <altmember cref="M:System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ceba4-141">
            <see cref="T:System.Security.AccessControl.MutexSecurity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-141">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ceba4-142">
            <see cref="T:System.Security.AccessControl.MutexSecurity" /> クラスの新しいインスタンスを既定値で初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-143">新しい<xref:System.Security.AccessControl.MutexSecurity>オブジェクトは常に空の随意アクセス リスト (DACL)、すべてのユーザーのすべてのアクセスを拒否するで起動します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-143">A new <xref:System.Security.AccessControl.MutexSecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ceba4-144">このクラスは、Windows 98 および Windows Millennium Edition ではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-144">This class is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexSecurity (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexSecurity(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexSecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.MutexSecurity" Usage="new System.Security.AccessControl.MutexSecurity (name, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="ceba4-145">アクセス制御セキュリティ規則の取得元となるシステム ミューテックスの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-145">The name of the system mutex whose access control security rules are to be retrieved.</span>
          </span>
        </param>
        <param name="includeSections">
          <span data-ttu-id="ceba4-146">取得するセクションを指定する <see cref="T:System.Security.AccessControl.AccessControlSections" /> フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-146">A combination of <see cref="T:System.Security.AccessControl.AccessControlSections" /> flags specifying the sections to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-147">指定した名前を持つシステム ミューテックスのアクセス制御セキュリティ規則のセクションを指定して、<see cref="T:System.Security.AccessControl.MutexSecurity" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-147">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class with the specified sections of the access control security rules from the system mutex with the specified name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-148">このコンス トラクターを作成しなくても、名前付きシステム ミュー テックスのアクセス制御セキュリティを取得できるように、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-148">This constructor allows you to obtain the access control security for a named system mutex without first creating a <xref:System.Threading.Mutex> object.</span></span>  
  
 <span data-ttu-id="ceba4-149">名前付きシステム オブジェクトを使用する場合、十分に注意してください。</span><span class="sxs-lookup"><span data-stu-id="ceba4-149">Caution must be exercised when working with named system objects.</span></span> <span data-ttu-id="ceba4-150">という名前のシステム オブジェクトがあるかどうかは`name`ミュー テックスが、そのアクセス制御セキュリティを取得する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ceba4-150">If there is a system object named `name` that is not a mutex, its control access security might be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="ceba4-151">指定した名前のシステム オブジェクトがありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-151">There is no system object with the specified name.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ceba4-152">このクラスは、Windows 98 および Windows Millennium Edition ではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-152">This class is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.MutexSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ceba4-153">
            <see cref="T:System.Security.AccessControl.MutexSecurity" /> クラスでアクセス権を表すために使用する列挙体を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-153">Gets the enumeration that the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class uses to represent access rights.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ceba4-154">
            <see cref="T:System.Type" /> 列挙体を表す <see cref="T:System.Security.AccessControl.MutexRights" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-154">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.MutexRights" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-155">派生したクラス、<xref:System.Security.AccessControl.ObjectSecurity>クラスのオーバーライド、<xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>プロパティと戻り値のアクセス権を表すために使用する型。</span><span class="sxs-lookup"><span data-stu-id="ceba4-155">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="ceba4-156">配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な列挙型を判断します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-156">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="mutexSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="ceba4-157">規則の適用対象となるユーザーまたはグループを識別する <see cref="T:System.Security.Principal.IdentityReference" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-157">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="ceba4-158">許可または拒否するアクセス権を指定し、整数にキャストされる <see cref="T:System.Security.AccessControl.MutexRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-158">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the access rights to allow or deny, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="ceba4-159">名前付きミューテックスには階層構造がないため何の効果もありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-159">Meaningless for named mutexes, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="ceba4-160">名前付きミューテックスには階層構造がないため何の効果もありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-160">Meaningless for named mutexes, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="ceba4-161">名前付きミューテックスには階層構造がないため何の効果もありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-161">Meaningless for named mutexes, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="ceba4-162">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-162">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-163">アクセス権、アクセス制御、およびフラグを指定して、指定したユーザーに対して新しいアクセス制御規則を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-163">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceba4-164">指定したユーザーの指定した権限を表す <see cref="T:System.Security.AccessControl.MutexAccessRule" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-164">A <see cref="T:System.Security.AccessControl.MutexAccessRule" /> object representing the specified rights for the specified user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-165">アクセス制御規則を作成することをお勧めはのコンス トラクターを使用する、<xref:System.Security.AccessControl.MutexAccessRule>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ceba4-165">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.MutexAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-166">継承と伝達のフラグは、名前付きミュー テックスの意味はそれらを指定することも可能です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-166">Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</span></span> <span data-ttu-id="ceba4-167">これは使用しないで、不必要に複雑になる、ルールのメンテナンスたとえばするには互換性のある規則の組み合わせに干渉することであるためです。</span><span class="sxs-lookup"><span data-stu-id="ceba4-167">This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ceba4-168">
            <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" />、または <paramref name="type" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-168">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-169">
            <paramref name="identityReference" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-169">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ceba4-170">または、<paramref name="accessMask" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-170">-or-  <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ceba4-171">
            <paramref name="identityReference" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-171">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.MutexSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ceba4-172">
            <see cref="T:System.Security.AccessControl.MutexSecurity" /> クラスでアクセス規則を表すために使用する型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-172">Gets the type that the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class uses to represent access rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ceba4-173">
            <see cref="T:System.Type" /> クラスを表す <see cref="T:System.Security.AccessControl.MutexAccessRule" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-173">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-174">派生したクラス、<xref:System.Security.AccessControl.ObjectSecurity>クラスのオーバーライド、<xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>プロパティと戻り値のアクセス規則を表すために使用する型。</span><span class="sxs-lookup"><span data-stu-id="ceba4-174">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="ceba4-175">配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切なアクセス ルールの種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-175">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-176">追加するアクセス制御規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-176">The access control rule to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-177">新しい規則をマージできる、一致するアクセス制御規則を検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-177">Searches for a matching access control rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="ceba4-178">見つからない場合は、新しい規則を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-178">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-179"><xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A>メソッドは、同じユーザーまたはグループと同じ規則を検索<xref:System.Security.AccessControl.AccessControlType>として`rule`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-179">The <xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="ceba4-180">見つからない場合は、`rule`を追加します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-180">If none are found, `rule` is added.</span></span> <span data-ttu-id="ceba4-181">照合ルールが見つからないかどうかは、rights in`rule`既存の規則とマージされます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-181">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceba4-182">次のコード例に示します間を分離<xref:System.Security.AccessControl.AccessControlType.Allow>ルールと<xref:System.Security.AccessControl.AccessControlType.Deny>規則し、互換性のあるルール で、権限の組み合わせを示しています。</span><span class="sxs-lookup"><span data-stu-id="ceba4-182">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="ceba4-183">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-183">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="ceba4-184">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="ceba4-184">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-185">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-185">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="ceba4-186">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType><xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-186">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType><xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-187">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-187">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Principal.IdentityNotMappedException">
          <span data-ttu-id="ceba4-188">
            <paramref name="rule" /> は既知の ID にマップできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-188">
              <paramref name="rule" /> cannot be mapped to a known identity.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As MutexAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.MutexAuditRule -&gt; unit" Usage="mutexSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-189">追加する監査規則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-189">The audit rule to add.</span>
          </span>
          <span data-ttu-id="ceba4-190">この規則に指定されているユーザーに基づいて検索されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-190">The user specified by this rule determines the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-191">新しい規則をマージできる監査規則を検索します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-191">Searches for an audit rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="ceba4-192">見つからない場合は、新しい規則を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-192">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-193"><xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A>メソッド検索ルールと同じユーザーまたはグループとして`rule`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-193">The <xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="ceba4-194">見つからない場合は、`rule`を追加します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-194">If none are found, `rule` is added.</span></span> <span data-ttu-id="ceba4-195">照合ルールが見つからないかどうかでフラグ`rule`既存のルールにマージされます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-195">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="mutexSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="ceba4-196">規則の適用対象となるユーザーまたはグループを識別する <see cref="T:System.Security.Principal.IdentityReference" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-196">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="ceba4-197">監査するアクセス権を指定し、整数にキャストされる <see cref="T:System.Security.AccessControl.MutexRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-197">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the access rights to audit, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="ceba4-198">名前付き待機ハンドルには階層構造がないため何の効果もありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-198">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="ceba4-199">名前付き待機ハンドルには階層構造がないため何の効果もありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-199">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="ceba4-200">名前付き待機ハンドルには階層構造がないため何の効果もありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-200">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="ceba4-201">成功したアクセス、失敗したアクセス、またはその両方のいずれを監査するかを示す <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-201">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values that specify whether to audit successful access, failed access, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-202">規則の適用対象となるユーザー、監査するアクセス権、および監査規則を発生させる結果を指定して、新しい監査規則を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-202">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceba4-203">指定したユーザーの指定した監査規則を表す <see cref="T:System.Security.AccessControl.MutexAuditRule" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-203">A <see cref="T:System.Security.AccessControl.MutexAuditRule" /> object representing the specified audit rule for the specified user.</span>
          </span>
          <span data-ttu-id="ceba4-204">メソッドの戻り値は基本クラス <see cref="T:System.Security.AccessControl.AuditRule" /> です。ただし、この戻り値を派生クラスに安全にキャストできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-204">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-205">コンス トラクターを使用するのには、監査規則を作成することをお勧め、<xref:System.Security.AccessControl.MutexAuditRule>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ceba4-205">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.MutexAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-206">継承と伝達のフラグは、名前付きミュー テックスの意味はそれらを指定することも可能です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-206">Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</span></span> <span data-ttu-id="ceba4-207">これは使用しないで、不必要に複雑になる、ルールのメンテナンスたとえばするには互換性のある規則の組み合わせに干渉することであるためです。</span><span class="sxs-lookup"><span data-stu-id="ceba4-207">This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ceba4-208">
            <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" />、または <paramref name="flags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-208">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-209">
            <paramref name="identityReference" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-209">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ceba4-210">または、<paramref name="accessMask" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-210">-or-  <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ceba4-211">
            <paramref name="identityReference" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-211">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.MutexSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ceba4-212">
            <see cref="T:System.Security.AccessControl.MutexSecurity" /> クラスで監査規則を表すために使用する型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-212">Gets the type that the <see cref="T:System.Security.AccessControl.MutexSecurity" /> class uses to represent audit rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ceba4-213">
            <see cref="T:System.Type" /> クラスを表す <see cref="T:System.Security.AccessControl.MutexAuditRule" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-213">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.MutexAuditRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-214">派生したクラス、<xref:System.Security.AccessControl.ObjectSecurity>クラスのオーバーライド、<xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>プロパティと監査権限を表すために使用する型を戻り値。</span><span class="sxs-lookup"><span data-stu-id="ceba4-214">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="ceba4-215">配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な監査規則の種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-215">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As MutexAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.MutexAccessRule -&gt; bool" Usage="mutexSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-216">検索対象のユーザーと <see cref="T:System.Security.AccessControl.MutexAccessRule" />、および一致する規則が見つかった場合にその規則と互換性のある継承フラグと反映フラグのセットを指定する <see cref="T:System.Security.AccessControl.AccessControlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-216">A <see cref="T:System.Security.AccessControl.MutexAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="ceba4-217">互換性のある規則が見つかった場合にその規則から削除する権限を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-217">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-218">指定した規則と同じユーザーと <see cref="T:System.Security.AccessControl.AccessControlType" /> (許可または拒否)、および互換性のある継承フラグと反映フラグが指定されたアクセス制御規則が検索されます。このような規則が見つかると、指定したアクセス規則に含まれる権限がその規則から削除されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-218">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceba4-219">互換性のある規則が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-219">
              <see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-220">現在<xref:System.Security.AccessControl.MutexSecurity>は同じユーザーと同じを持つルールの検索は<xref:System.Security.AccessControl.AccessControlType>として値`rule`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-220">The current <xref:System.Security.AccessControl.MutexSecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="ceba4-221">このような規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-221">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="ceba4-222">指定されたフラグと互換性のための継承との互換性フラグをチェック照合ルールが見つかった場合、`rule`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-222">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="ceba4-223">互換性のある規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-223">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="ceba4-224">権限がで指定された互換性フラグを含むルールが見つかった場合、 `rule` 、互換性のあるルールから削除されますが返されます`true`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-224">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="ceba4-225">場合`rule`互換性のあるルールに含まれていない権限を指定、それらの権利に関するアクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-225">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="ceba4-226">現在の全体の規則が削除される場合は、すべての権限は、互換性のある規則から削除されます、<xref:System.Security.AccessControl.MutexSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-226">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.MutexSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceba4-227">これらを作成することで、ミュー テックスのアクセス規則の継承と伝達のフラグを指定できますが、<xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A>メソッド、お勧めしません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-227">Although you can specify inheritance and propagation flags for mutex access rules, by creating them with the <xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="ceba4-228">継承と伝達に名前付きミュー テックスに意味がなくと行う必要が access の規則のメンテナンスより複雑です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-228">Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of access rules more complicated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceba4-229">使用を次のコード例に示します、<xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A>から権限を削除する方法、<xref:System.Security.AccessControl.AccessControlType.Allow>でルール、<xref:System.Security.AccessControl.MutexSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-229">The following code example demonstrates the use of the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A> method to remove rights from an <xref:System.Security.AccessControl.AccessControlType.Allow> rule in a <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="ceba4-230">内の他の権限も示します`rule`は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-230">It also shows that other rights in `rule` are ignored.</span></span>  
  
 <span data-ttu-id="ceba4-231">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-231">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="ceba4-232">権限の許可を含める<xref:System.Security.AccessControl.MutexRights.Modify>、 <xref:System.Security.AccessControl.MutexRights.ReadPermissions>、および<xref:System.Security.AccessControl.MutexRights.Synchronize>です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-232">The rights allowed include <xref:System.Security.AccessControl.MutexRights.Modify>, <xref:System.Security.AccessControl.MutexRights.ReadPermissions>, and <xref:System.Security.AccessControl.MutexRights.Synchronize>.</span></span> <span data-ttu-id="ceba4-233">現在のユーザーに対して、新しいルールを作成しなど<xref:System.Security.AccessControl.MutexRights.ReadPermissions>と<xref:System.Security.AccessControl.MutexRights.TakeOwnership>、および権限には、そのルールを使用、<xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A>を削除する<xref:System.Security.AccessControl.MutexRights.ReadPermissions>から、<xref:System.Security.AccessControl.AccessControlType.Allow>でルール、<xref:System.Security.AccessControl.MutexSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-233">The example then creates a new rule for the current user, including <xref:System.Security.AccessControl.MutexRights.ReadPermissions> and <xref:System.Security.AccessControl.MutexRights.TakeOwnership> rights, and uses that rule with the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A> method to remove <xref:System.Security.AccessControl.MutexRights.ReadPermissions> from the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="ceba4-234">余分な<xref:System.Security.AccessControl.MutexRights.TakeOwnership>右`rule`は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-234">The extraneous <xref:System.Security.AccessControl.MutexRights.TakeOwnership> right in `rule` is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-235">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-235">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="ceba4-236">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-236">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-237">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-237">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-238">検索対象のユーザーと <see cref="T:System.Security.AccessControl.MutexAccessRule" /> を指定する <see cref="T:System.Security.AccessControl.AccessControlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-238">A <see cref="T:System.Security.AccessControl.MutexAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span>
          </span>
          <span data-ttu-id="ceba4-239">この規則によって指定された権限はすべて無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-239">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-240">指定した規則と同じユーザーおよび同じ <see cref="T:System.Security.AccessControl.AccessControlType" /> (許可または拒否) が指定されたアクセス制御規則をすべて検索し、一致する規則が見つかった場合は、その規則を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-240">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-241">現在<xref:System.Security.AccessControl.MutexSecurity>オブジェクトは、同じユーザーと同じであるルールの検索は<xref:System.Security.AccessControl.AccessControlType>として値`rule`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-241">The current <xref:System.Security.AccessControl.MutexSecurity> object is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="ceba4-242">指定された権限をまったく`rule`この検索を実行する場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-242">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="ceba4-243">照合ルールが見つからない場合、処理は行われません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-243">If no matching rules are found, no action is taken.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceba4-244">次のコード例はことを示しています、<xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A>メソッドは、ユーザーに一致するすべての規則を削除および<xref:System.Security.AccessControl.AccessControlType>権限を無視しています。</span><span class="sxs-lookup"><span data-stu-id="ceba4-244">The following code example shows that the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights.</span></span>  
  
 <span data-ttu-id="ceba4-245">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加しに追加の権限をその後、マージ、<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="ceba4-245">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span> <span data-ttu-id="ceba4-246">その規則を使用して、削除、所有権を取得する現在のユーザーを許可する新しい規則を作成し、<xref:System.Security.AccessControl.AccessControlType.Allow>からルール、<xref:System.Security.AccessControl.MutexSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-246">The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <xref:System.Security.AccessControl.AccessControlType.Allow> rule from the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-247">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-247">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="ceba4-248">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-248">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-249">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-249">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-250">削除する <see cref="T:System.Security.AccessControl.MutexAccessRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-250">The <see cref="T:System.Security.AccessControl.MutexAccessRule" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-251">指定した規則に正確に一致するアクセス制御規則を検索し、見つかった場合は、その規則を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-251">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-252">ルールが削除されるは、完全に一致する場合にのみ`rule`フラグを含むすべての詳細。</span><span class="sxs-lookup"><span data-stu-id="ceba4-252">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="ceba4-253">同じユーザーがその他の規則と<xref:System.Security.AccessControl.AccessControlType>には影響しません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-253">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceba4-254">以上基になるアクセス制御エントリ (ACE) およびこれらのエントリが分割またはユーザーのアクセスのセキュリティ ルールを変更する場合に、必要に応じて、結合またはルールが 1 つを表します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-254">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="ceba4-255">このため、ルールがあります存在しなくおよびそのケースがあったが追加されると、特定のフォームで、<xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A>方法はそれを削除することはできません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-255">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceba4-256">次のコード例はことを示しています、<xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A>メソッドは、ルールを削除するために完全に一致するを必要とし、許可し、権限を拒否する規則は、互いに独立しています。</span><span class="sxs-lookup"><span data-stu-id="ceba4-256">The following code example shows that the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</span></span>  
  
 <span data-ttu-id="ceba4-257">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加しに追加の権限をその後、マージ、<xref:System.Security.AccessControl.AccessControlType.Allow>アクセス規則。</span><span class="sxs-lookup"><span data-stu-id="ceba4-257">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> access rule.</span></span> <span data-ttu-id="ceba4-258">元の渡します<xref:System.Security.AccessControl.AccessControlType.Allow>の規則を<xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A>メソッド、および何が削除されたことを示すの結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-258">The example then passes the original <xref:System.Security.AccessControl.AccessControlType.Allow> rule to the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> method, and displays the results, showing that nothing is deleted.</span></span> <span data-ttu-id="ceba4-259">例では、一致するルールを構築し、<xref:System.Security.AccessControl.AccessControlType.Allow>でルール、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトが正常に使用して、<xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A>ルールを削除する方法です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-259">The example then constructs a rule that matches the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.MutexSecurity> object, and successfully uses the <xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A> method to remove the rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-260">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-260">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="ceba4-261">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-261">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-262">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-262">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As MutexAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.MutexAuditRule -&gt; bool" Usage="mutexSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-263">検索対象のユーザー、および一致する規則がある場合にその規則と互換性のある継承フラグと反映フラグのセットを指定する <see cref="T:System.Security.AccessControl.MutexAuditRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-263">A <see cref="T:System.Security.AccessControl.MutexAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="ceba4-264">互換性のある規則が見つかった場合にその規則から削除する権限を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-264">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-265">指定した規則と同じユーザー、および互換性のある継承フラグと反映フラグが指定された監査制御規則が検索されます。互換性のある規則が見つかると、指定した規則に含まれる権限がその規則から削除されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-265">Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceba4-266">互換性のある規則が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-266">
              <see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-267">現在<xref:System.Security.AccessControl.MutexSecurity>を同一のユーザーを持つ監査規則の検索`rule`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-267">The current <xref:System.Security.AccessControl.MutexSecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="ceba4-268">このような規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-268">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="ceba4-269">指定されたフラグと互換性のための継承との互換性フラグをチェック照合ルールが見つかった場合、`rule`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-269">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="ceba4-270">互換性のある規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-270">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="ceba4-271">権限がで指定された互換性フラグを含むルールが見つかった場合、 `rule` 、互換性のあるルールから削除されますが返されます`true`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-271">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="ceba4-272">場合`rule`互換性のあるルールに含まれていない権限を指定、それらの権利に関するアクションは実行されません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-272">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="ceba4-273">現在の全体の規則が削除される場合は、すべての権限は、互換性のある規則から削除されます、<xref:System.Security.AccessControl.MutexSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-273">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.MutexSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceba4-274">これらを作成することで、ミュー テックス監査規則の継承と伝達のフラグを指定できますが、<xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A>メソッド、お勧めしません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-274">Although you can specify inheritance and propagation flags for mutex audit rules, by creating them with the <xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="ceba4-275">継承と伝達に名前付きミュー テックスの意味がなくとより複雑な監査規則のメンテナンスを行います。</span><span class="sxs-lookup"><span data-stu-id="ceba4-275">Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of audit rules more complicated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-276">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-276">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As MutexAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.MutexAuditRule -&gt; unit" Usage="mutexSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-277">検索対象のユーザーを指定する <see cref="T:System.Security.AccessControl.MutexAuditRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-277">A <see cref="T:System.Security.AccessControl.MutexAuditRule" /> that specifies the user to search for.</span>
          </span>
          <span data-ttu-id="ceba4-278">この規則によって指定された権限はすべて無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-278">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-279">指定した規則と同じユーザーが設定されているすべての監査規則を検索し、見つかった場合はそれらの規則を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-279">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-280">現在<xref:System.Security.AccessControl.MutexSecurity>監査規則を持つと同じユーザーが検索`rule`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-280">The current <xref:System.Security.AccessControl.MutexSecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="ceba4-281">指定された権限をまったく`rule`この検索を実行する場合は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-281">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="ceba4-282">すべての照合ルールが削除されます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-282">All matching rules are removed.</span></span> <span data-ttu-id="ceba4-283">照合ルールが見つからない場合、処理は行われません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-283">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-284">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-284">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As MutexAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.MutexAuditRule -&gt; unit" Usage="mutexSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-285">削除する <see cref="T:System.Security.AccessControl.MutexAuditRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-285">The <see cref="T:System.Security.AccessControl.MutexAuditRule" /> to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-286">指定した規則に正確に一致する監査規則を検索し、見つかった場合は、その規則を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-286">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-287">ルールが削除されるは、完全に一致する場合にのみ`rule`フラグを含むすべての詳細。</span><span class="sxs-lookup"><span data-stu-id="ceba4-287">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="ceba4-288">同じユーザーの場合は、その他の監査規則には影響しません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-288">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceba4-289">以上基になるアクセス制御エントリ (ACE) およびこれらのエントリが分割またはユーザーの監査のセキュリティ ルールを変更する場合に、必要に応じて、結合またはルールが 1 つを表します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-289">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="ceba4-290">このため、ルールがあります存在しなくおよびそのケースがあったが追加されると、特定のフォームで、<xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A>方法はそれを削除することはできません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-290">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-291">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-291">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-292">追加する <see cref="T:System.Security.AccessControl.MutexAccessRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-292">The <see cref="T:System.Security.AccessControl.MutexAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="ceba4-293">この規則で指定されたユーザーによって、この規則を追加する前に削除する規則が判断されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-293">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-294">
            <see cref="T:System.Security.AccessControl.AccessControlType" /> に関係なく、指定した規則と同じユーザーが指定されたすべてのアクセス制御規則を削除し、指定した規則を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-294">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-295">ユーザーが、指定されたルールに一致するアクセス規則がない場合`rule`を追加します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-295">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceba4-296">次のコード例に示す方法、<xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A>メソッドは、一致する指定された規則に一致するユーザーのすべての規則を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-296">The following code example shows how the <xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="ceba4-297">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-297">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="ceba4-298">により、現在のユーザーのフル コントロール、および使用する新しい規則を作成し、<xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A>メソッドに、既存のルール両方を新しいルールに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-298">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A> method to replace both of the existing rules with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-299">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-299">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="ceba4-300">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-300">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-301">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-301">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.MutexAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.MutexAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As MutexAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::MutexAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.MutexAccessRule -&gt; unit" Usage="mutexSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-302">追加する <see cref="T:System.Security.AccessControl.MutexAccessRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-302">The <see cref="T:System.Security.AccessControl.MutexAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="ceba4-303">この規則のユーザーと <see cref="T:System.Security.AccessControl.AccessControlType" /> によって、この規則を追加する前に削除する規則が判断されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-303">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-304">指定した規則と同じユーザーおよび同じ <see cref="T:System.Security.AccessControl.AccessControlType" /> (許可または拒否) が指定されたすべてのアクセス制御規則を削除し、指定した規則を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-304">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-305">場合は、指定されたルール<xref:System.Security.AccessControl.AccessControlType.Allow>をすべて削除するのには、このメソッドの効果<xref:System.Security.AccessControl.AccessControlType.Allow>指定されたルールに置き換える、指定したユーザーのルール。</span><span class="sxs-lookup"><span data-stu-id="ceba4-305">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="ceba4-306">指定されたルールがある場合<xref:System.Security.AccessControl.AccessControlType.Deny>すべて、<xref:System.Security.AccessControl.AccessControlType.Deny>指定したユーザーのルールは、指定されたルールに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="ceba4-306">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="ceba4-307">規則がないユーザーの場合と<xref:System.Security.AccessControl.AccessControlType>指定の規則に一致`rule`を追加します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-307">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceba4-308">次のコード例に示す方法、<xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A>メソッドは、ユーザーの両方に一致するすべての規則を削除し、<xref:System.Security.AccessControl.AccessControlType>の`rule`に置き換えられます`rule`です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-308">The following code example shows how the <xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, replacing them with `rule`.</span></span>  
  
 <span data-ttu-id="ceba4-309">例は、作成、<xref:System.Security.AccessControl.MutexSecurity>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-309">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="ceba4-310">により、現在のユーザーのフル コントロール、および使用する新しい規則を作成し、<xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A>既存を置換するメソッドが新しいルールとルールを許可します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-310">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A> method to replace the existing Allow rule with the new rule.</span></span> <span data-ttu-id="ceba4-311">アクセスを拒否する規則が影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="ceba4-311">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceba4-312">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.Mutex>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ceba4-312">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="ceba4-313">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ceba4-313">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-314">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-314">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.MutexAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.MutexAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As MutexAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::MutexAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.MutexAuditRule -&gt; unit" Usage="mutexSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="ceba4-315">追加する <see cref="T:System.Security.AccessControl.MutexAuditRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-315">The <see cref="T:System.Security.AccessControl.MutexAuditRule" /> to add.</span>
          </span>
          <span data-ttu-id="ceba4-316">この規則で指定されたユーザーによって、この規則を追加する前に削除する規則が判断されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-316">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceba4-317">
            <see cref="T:System.Security.AccessControl.AuditFlags" /> 値に関係なく、指定した規則と同じユーザーが指定されたすべての監査規則を削除し、指定した規則を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-317">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceba4-318">ユーザーが、指定されたルールに一致する監査規則がない場合`rule`を追加します。</span><span class="sxs-lookup"><span data-stu-id="ceba4-318">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceba4-319">
            <paramref name="rule" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceba4-319">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>