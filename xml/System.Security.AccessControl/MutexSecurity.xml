<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MutexSecurity.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac532296db222ea6141fe27393ef3e6f899d0231f0f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32296db222ea6141fe27393ef3e6f899d0231f0f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Represents the Windows access control security for a named mutex.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This class cannot be inherited.</source>
          
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object specifies access rights for a named system mutex, and also specifies how access attempts are audited.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトが、名前付きシステム ミュー テックスのアクセス権を指定しもアクセス試行を監査する方法を指定します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Access rights to the mutex are expressed as rules, with each access rule represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> object.</source>
          <target state="translated">ミュー テックスへのアクセス権がによって表される各アクセス規則と、規則で表される、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Each auditing rule is represented by a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> object.</source>
          <target state="translated">によって表される各監査規則、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</source>
          <target state="translated">これには、セキュリティ保護可能なオブジェクトごとに最大で 1 つ随意アクセス制御リスト (DACL) に最大で 1 つシステム アクセス制御リスト (SACL) を指定するアクセス試行を監査する、セキュリティで保護されたオブジェクトとのアクセスを制御する、基になる Windows セキュリティ システムがミラー化します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</source>
          <target state="translated">DACL および SACL は、アクセスおよび監査のユーザーとグループを指定するアクセス制御エントリ (ACE) の一覧を並べ替えられています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> object might represent more than one ACE.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>または<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph>オブジェクトは、1 つ以上の ACE を表す場合があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object can represent a local mutex or a named system mutex.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクトは、ローカル ミュー テックスまたは名前付きシステム ミュー テックスを表すことができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Windows access control security is meaningful only for named system mutexes.</source>
          <target state="translated">Windows のアクセス制御セキュリティは、名前付きシステム ミュー テックスに対してのみ有効です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> classes hide the implementation details of ACLs and ACEs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>、 <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>、および<ph id="ph3">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph>クラスは、Acl や Ace の実装の詳細を非表示にします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</source>
          <target state="translated">これらによって、17 個の異なる ACE 型との継承とアクセス権の伝達を正しく維持するための複雑さの制約を無視できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>These objects are also designed to prevent the following common access control errors:</source>
          <target state="translated">これらのオブジェクトは、次の一般的なアクセス制御エラーを防ぐためにも設計されています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Creating a security descriptor with a null DACL.</source>
          <target state="translated">Null DACL のセキュリティ記述子を作成しています。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</source>
          <target state="translated">DACL を null 参照では、可能性のあるサービス拒否攻撃を作成する、オブジェクトへのアクセス ルールを追加するすべてのユーザーを許可します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object always starts with an empty DACL, which denies all access for all users.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトは常にすべてのユーザーのすべてのアクセスを拒否する空の DACL で起動します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Violating the canonical ordering of ACEs.</source>
          <target state="translated">Ace の正規の順序に違反します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</source>
          <target state="translated">DACL の ACE リストが正規の順序で維持されない場合ユーザー誤ってを付与するアクセス セキュリティで保護されたオブジェクト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>For example, denied access rights must always appear before allowed access rights.</source>
          <target state="translated">たとえば、拒否されたアクセス権は必要があります許可されるアクセス権の前に常に表示されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> objects maintain the correct order internally.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> オブジェクトは、内部的に正しい順序を維持します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Manipulating security descriptor flags, which should be under resource manager control only.</source>
          <target state="translated">操作に使用するセキュリティ記述子のフラグ、リソース マネージャーの制御だけである必要があります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Creating invalid combinations of ACE flags.</source>
          <target state="translated">ACE フラグの無効な組み合わせを作成します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Manipulating inherited ACEs.</source>
          <target state="translated">継承された Ace を操作します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</source>
          <target state="translated">継承と伝達は、アクセスおよび監査規則に対して行った変更への応答で、リソース マネージャーによって処理されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Inserting meaningless ACEs into ACLs.</source>
          <target state="translated">Acl に無意味な Ace を挿入します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</source>
          <target state="translated">.NET セキュリティ オブジェクトでサポートされていませんのみの機能は、次のようなアプリケーションの開発者の過半数によって避ける必要がある危険なアクティビティが。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Low-level tasks that are normally performed by the resource manager.</source>
          <target state="translated">通常、リソース マネージャーで実行される低レベルのタスクです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Adding or removing access control entries in ways that do not maintain the canonical ordering.</source>
          <target state="translated">追加または正規の順序を保持しない方法でアクセス制御エントリを削除します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>To modify Windows access control security for a named mutex, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">名前付きミュー テックスの Windows アクセス制御セキュリティを変更するには、使用、<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>取得するメソッド、<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Modify the security object by adding and removing rules, and then use the <ph id="ph1">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to reattach it.</source>
          <target state="translated">追加し、ルールを削除して、セキュリティ オブジェクトを変更し、<ph id="ph1">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>に再接続します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object do not affect the access levels of the named mutex until you call the <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to assign the altered security object to the named mutex.</source>
          <target state="translated">変更を加える、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトには影響しません、名前付きミュー テックスのアクセス レベルが呼び出されるまで、<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>名前付きミュー テックスに変更されたセキュリティ オブジェクトを割り当てる方法です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>To copy access control security from one mutex to another, use the <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object representing the access and audit rules for the first mutex, and then use the <ph id="ph3">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph> method, or a constructor that accepts a <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, to assign those rules to the second mutex.</source>
          <target state="translated">ミュー テックスの 1 つから別のアクセス制御セキュリティをコピーするには、使用、<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>取得するメソッド、<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>最初ミュー テックスのアクセスおよび監査規則を表すオブジェクトをクリックして、<ph id="ph3">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>メソッド、またはを受け取るコンス トラクター、<ph id="ph4">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>を 2 番目のミュー テックスにそれらの規則を割り当てるオブジェクト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Users with an investment in the security descriptor definition language (SDDL) can use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to set access rules for a named mutex, and the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method to obtain a string that represents the access rules in SDDL format.</source>
          <target state="translated">セキュリティ記述子定義言語 (SDDL) で、初期投資をユーザーが使用できる、<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph>を名前付きミュー テックスのアクセス規則を設定するメソッドと<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph>SDDL 形式でのアクセス規則を表す文字列を取得するメソッド。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This is not recommended for new development.</source>
          <target state="translated">これは、説明は、新規の開発は推奨されません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
          <target state="translated">Windows 98 または Windows Millennium Edition には、同期オブジェクト上のセキュリティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">次のコード例に示します間を分離<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>ルールと<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>規則し、互換性のあるルール で、権限の組み合わせを示しています。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>ルール。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.MutexSecurity">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class with default values.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor">
          <source>A new <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトは常に空の随意アクセス リスト (DACL)、すべてのユーザーのすべてのアクセスを拒否するで起動します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name of the system mutex whose access control security rules are to be retrieved.</source>
          
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>A combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> flags specifying the sections to retrieve.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class with the specified sections of the access control security rules from the system mutex with the specified name.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This constructor allows you to obtain the access control security for a named system mutex without first creating a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">このコンス トラクターを作成しなくても、名前付きシステム ミュー テックスのアクセス制御セキュリティを取得できるように、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Caution must be exercised when working with named system objects.</source>
          <target state="translated">名前付きシステム オブジェクトを使用する場合、十分に注意してください。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If there is a system object named <ph id="ph1">`name`</ph> that is not a mutex, its control access security might be retrieved.</source>
          <target state="translated">という名前のシステム オブジェクトがあるかどうかは<ph id="ph1">`name`</ph>ミュー テックスが、そのアクセス制御セキュリティを取得する可能性があります。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>There is no system object with the specified name.</source>
          
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This class is not supported on Windows 98 or Windows Millennium Edition.</source>
          
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>Gets the enumeration that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class uses to represent access rights.</source>
          
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> enumeration.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>オブジェクトを表す、<ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">派生したクラス、<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>クラスのオーバーライド、<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph>プロパティと戻り値のアクセス権を表すために使用する型。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な列挙型を判断します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the access rights to allow or deny, cast to an integer.</source>
          
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named mutexes, because they have no hierarchy.</source>
          
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named mutexes, because they have no hierarchy.</source>
          
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Meaningless for named mutexes, because they have no hierarchy.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> values specifying whether the rights are allowed or denied.</source>
          
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</source>
          
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> object representing the specified rights for the specified user.</source>
          
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The recommended way to create access control rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph> class.</source>
          <target state="translated">アクセス制御規則を作成することをお勧めはのコンス トラクターを使用する、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAccessRule&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</source>
          <target state="translated">継承と伝達のフラグは、名前付きミュー テックスの意味はそれらを指定することも可能です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">これは使用しないで、不必要に複雑になる、ルールのメンテナンスたとえばするには互換性のある規則の組み合わせに干渉することであるためです。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class uses to represent access rules.</source>
          
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> class.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>オブジェクトを表す、<ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> property and return the type they use to represent access rules.</source>
          <target state="translated">派生したクラス、<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>クラスのオーバーライド、<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph>プロパティと戻り値のアクセス規則を表すために使用する型。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</source>
          <target state="translated">配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切なアクセス ルールの種類を決定します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The access control rule to add.</source>
          
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for a matching access control rule with which the new rule can be merged.</source>
          
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If none are found, adds the new rule.</source>
          
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A&gt;</ph> method searches for rules with the same user or group and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAccessRule%2A&gt;</ph>メソッドは、同じユーザーまたはグループと同じ規則を検索<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>として<ph id="ph3">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">見つからない場合は、<ph id="ph1">`rule`</ph>を追加します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If a matching rule is found, the rights in <ph id="ph1">`rule`</ph> are merged with the existing rule.</source>
          <target state="translated">照合ルールが見つからないかどうかは、rights in<ph id="ph1">`rule`</ph>既存の規則とマージされます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example demonstrates the separation between <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules, and shows the combination of rights in compatible rules.</source>
          <target state="translated">次のコード例に示します間を分離<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>ルールと<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>規則し、互換性のあるルール で、権限の組み合わせを示しています。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>ルール。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph><ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> cannot be mapped to a known identity.</source>
          
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The audit rule to add.</source>
          
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The user specified by this rule determines the search.</source>
          
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for an audit rule with which the new rule can be merged.</source>
          
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If none are found, adds the new rule.</source>
          
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A&gt;</ph> method searches for rules with the same user or group as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AddAuditRule%2A&gt;</ph>メソッド検索ルールと同じユーザーまたはグループとして<ph id="ph2">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If none are found, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">見つからない場合は、<ph id="ph1">`rule`</ph>を追加します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If a matching rule is found, the flags in <ph id="ph1">`rule`</ph> are merged into the existing rule.</source>
          <target state="translated">照合ルールが見つからないかどうかでフラグ<ph id="ph1">`rule`</ph>既存のルールにマージされます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> that identifies the user or group the rule applies to.</source>
          
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexRights" /&gt;</ph> values specifying the access rights to audit, cast to an integer.</source>
          
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Meaningless for named wait handles, because they have no hierarchy.</source>
          
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> values that specify whether to audit successful access, failed access, or both.</source>
          
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</source>
          
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> object representing the specified audit rule for the specified user.</source>
          
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The return type of the method is the base class, <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph>, but the return value can be cast safely to the derived class.</source>
          
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The recommended way to create audit rules is to use the constructors of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> class.</source>
          <target state="translated">コンス トラクターを使用するのには、監査規則を作成することをお勧め、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Although inheritance and propagation flags are meaningless for named mutexes, it is still possible to specify them.</source>
          <target state="translated">継承と伝達のフラグは、名前付きミュー テックスの意味はそれらを指定することも可能です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</source>
          <target state="translated">これは使用しないで、不必要に複雑になる、ルールのメンテナンスたとえばするには互換性のある規則の組み合わせに干渉することであるためです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> specifies an invalid value.</source>
          
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>-or-</source>
          
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>, nor of a type such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>Gets the type that the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexSecurity" /&gt;</ph> class uses to represent audit rules.</source>
          
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> class.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>オブジェクトを表す、<ph id="ph2">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> property and return the type they use to represent audit rights.</source>
          <target state="translated">派生したクラス、<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>クラスのオーバーライド、<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph>プロパティと監査権限を表すために使用する型を戻り値。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</source>
          <target state="translated">配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な監査規則の種類を決定します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for an access control rule with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</source>
          
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> is searched for a rule that has the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">現在<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>は同じユーザーと同じを持つルールの検索は<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>として値<ph id="ph3">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">このような規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">指定されたフラグと互換性のための継承との互換性フラグをチェック照合ルールが見つかった場合、<ph id="ph1">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">互換性のある規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">権限がで指定された互換性フラグを含むルールが見つかった場合、 <ph id="ph1">`rule`</ph> 、互換性のあるルールから削除されますが返されます<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">場合<ph id="ph1">`rule`</ph>互換性のあるルールに含まれていない権限を指定、それらの権利に関するアクションは実行されません。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">現在の全体の規則が削除される場合は、すべての権限は、互換性のある規則から削除されます、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Although you can specify inheritance and propagation flags for mutex access rules, by creating them with the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> method, this is not recommended.</source>
          <target state="translated">これらを作成することで、ミュー テックスのアクセス規則の継承と伝達のフラグを指定できますが、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph>メソッド、お勧めしません。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of access rules more complicated.</source>
          <target state="translated">継承と伝達に名前付きミュー テックスに意味がなくと行う必要が access の規則のメンテナンスより複雑です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> method to remove rights from an <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in a <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">使用を次のコード例に示します、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph>から権限を削除する方法、<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>でルール、<ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>It also shows that other rights in <ph id="ph1">`rule`</ph> are ignored.</source>
          <target state="translated">内の他の権限も示します<ph id="ph1">`rule`</ph>は無視されます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The rights allowed include <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.Modify&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize&gt;</ph>.</source>
          <target state="translated">権限の許可を含める<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.Modify&gt;</ph>、 <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph>、および<ph id="ph3">&lt;xref:System.Security.AccessControl.MutexRights.Synchronize&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule for the current user, including <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> rights, and uses that rule with the <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph> method to remove <ph id="ph4">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph> from the <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in the <ph id="ph6">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">現在のユーザーに対して、新しいルールを作成しなど<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph>と<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph>、および権限には、そのルールを使用、<ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRule%2A&gt;</ph>を削除する<ph id="ph4">&lt;xref:System.Security.AccessControl.MutexRights.ReadPermissions&gt;</ph>から、<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>でルール、<ph id="ph6">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The extraneous <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph> right in <ph id="ph2">`rule`</ph> is ignored.</source>
          <target state="translated">余分な<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexRights.TakeOwnership&gt;</ph>右<ph id="ph2">`rule`</ph>は無視されます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> that specifies the user and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> to search for.</source>
          
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Any rights specified by this rule are ignored.</source>
          
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule and, if found, removes them.</source>
          
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object is searched for rules that have the same user and the same <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> value as <ph id="ph3">`rule`</ph>.</source>
          <target state="translated">現在<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトは、同じユーザーと同じであるルールの検索は<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>として値<ph id="ph3">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">指定された権限をまったく<ph id="ph1">`rule`</ph>この検索を実行する場合は無視されます。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">照合ルールが見つからない場合、処理は行われません。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A&gt;</ph> method removes all rules that match user and <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, ignoring rights.</source>
          <target state="translated">次のコード例はことを示しています、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll%2A&gt;</ph>メソッドは、ユーザーに一致するすべての規則を削除および<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>権限を無視しています。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加しに追加の権限をその後、マージ、<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>ルール。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule from the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">その規則を使用して、削除、所有権を取得する現在のユーザーを許可する新しい規則を作成し、<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>からルール、<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> to remove.</source>
          
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</source>
          
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">ルールが削除されるは、完全に一致する場合にのみ<ph id="ph1">`rule`</ph>フラグを含むすべての詳細。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Other rules with the same user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> are not affected.</source>
          <target state="translated">同じユーザーがその他の規則と<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>には影響しません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</source>
          <target state="translated">以上基になるアクセス制御エントリ (ACE) およびこれらのエントリが分割またはユーザーのアクセスのセキュリティ ルールを変更する場合に、必要に応じて、結合またはルールが 1 つを表します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">このため、ルールがあります存在しなくおよびそのケースがあったが追加されると、特定のフォームで、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph>方法はそれを削除することはできません。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows that the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</source>
          <target state="translated">次のコード例はことを示しています、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph>メソッドは、ルールを削除するために完全に一致するを必要とし、許可し、権限を拒否する規則は、互いに独立しています。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rule.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加しに追加の権限をその後、マージ、<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>アクセス規則。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then passes the original <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule to the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method, and displays the results, showing that nothing is deleted.</source>
          <target state="translated">元の渡します<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>の規則を<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph>メソッド、および何が削除されたことを示すの結果が表示されます。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then constructs a rule that matches the <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rule in the <ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, and successfully uses the <ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph> method to remove the rule.</source>
          <target state="translated">例では、一致するルールを構築し、<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>でルール、<ph id="ph2">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトが正常に使用して、<ph id="ph3">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific%2A&gt;</ph>ルールを削除する方法です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</source>
          
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Specifies the rights to remove from the compatible rule, if found.</source>
          
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</source>
          
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a compatible rule is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> is searched for an audit rule that has the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">現在<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>を同一のユーザーを持つ監査規則の検索<ph id="ph2">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If no such rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">このような規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in <ph id="ph1">`rule`</ph>.</source>
          <target state="translated">指定されたフラグと互換性のための継承との互換性フラグをチェック照合ルールが見つかった場合、<ph id="ph1">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If no compatible rule is found, no action is taken, and the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">互換性のある規則が見つからないかどうか、アクションは実行されませんし、メソッドを返します<ph id="ph1">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If a rule with compatible flags is found, the rights specified in <ph id="ph1">`rule`</ph> are removed from the compatible rule, and the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">権限がで指定された互換性フラグを含むルールが見つかった場合、 <ph id="ph1">`rule`</ph> 、互換性のあるルールから削除されますが返されます<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If <ph id="ph1">`rule`</ph> specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</source>
          <target state="translated">場合<ph id="ph1">`rule`</ph>互換性のあるルールに含まれていない権限を指定、それらの権利に関するアクションは実行されません。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If all rights are removed from the compatible rule, the entire rule is removed from the current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.</source>
          <target state="translated">現在の全体の規則が削除される場合は、すべての権限は、互換性のある規則から削除されます、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Although you can specify inheritance and propagation flags for mutex audit rules, by creating them with the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph> method, this is not recommended.</source>
          <target state="translated">これらを作成することで、ミュー テックス監査規則の継承と伝達のフラグを指定できますが、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.AccessRuleFactory%2A&gt;</ph>メソッド、お勧めしません。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Inheritance and propagation have no meaning for named mutexes, and they make the maintenance of audit rules more complicated.</source>
          <target state="translated">継承と伝達に名前付きミュー テックスの意味がなくとより複雑な監査規則のメンテナンスを行います。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> that specifies the user to search for.</source>
          
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>Any rights specified by this rule are ignored.</source>
          
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for all audit rules with the same user as the specified rule and, if found, removes them.</source>
          
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>The current <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> is searched for audit rules that have the same user as <ph id="ph2">`rule`</ph>.</source>
          <target state="translated">現在<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>監査規則を持つと同じユーザーが検索<ph id="ph2">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>Any rights specified by <ph id="ph1">`rule`</ph> are ignored when performing this search.</source>
          <target state="translated">指定された権限をまったく<ph id="ph1">`rule`</ph>この検索を実行する場合は無視されます。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>All matching rules are removed.</source>
          <target state="translated">すべての照合ルールが削除されます。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source>If no matching rules are found, no action is taken.</source>
          <target state="translated">照合ルールが見つからない場合、処理は行われません。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> to be removed.</source>
          
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</source>
          
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>The rule is removed only if it exactly matches <ph id="ph1">`rule`</ph> in all details, including flags.</source>
          <target state="translated">ルールが削除されるは、完全に一致する場合にのみ<ph id="ph1">`rule`</ph>フラグを含むすべての詳細。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>Other audit rules for the same user are not affected.</source>
          <target state="translated">同じユーザーの場合は、その他の監査規則には影響しません。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</source>
          <target state="translated">以上基になるアクセス制御エントリ (ACE) およびこれらのエントリが分割またはユーザーの監査のセキュリティ ルールを変更する場合に、必要に応じて、結合またはルールが 1 つを表します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source>Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method cannot remove it.</source>
          <target state="translated">このため、ルールがあります存在しなくおよびそのケースがあったが追加されると、特定のフォームで、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific%2A&gt;</ph>方法はそれを削除することはできません。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> to add.</source>
          
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Removes all access control rules with the same user as the specified rule, regardless of <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph>, and then adds the specified rule.</source>
          
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If there are no access rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">ユーザーが、指定されたルールに一致するアクセス規則がない場合<ph id="ph1">`rule`</ph>を追加します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> method replaces all rules for the matching user with the rule specified for the match.</source>
          <target state="translated">次のコード例に示す方法、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph>メソッドは、一致する指定された規則に一致するユーザーのすべての規則を置き換えます。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加します。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule that allows the current user full control, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph> method to replace both of the existing rules with the new rule.</source>
          <target state="translated">により、現在のユーザーのフル コントロール、および使用する新しい規則を作成し、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.ResetAccessRule%2A&gt;</ph>メソッドに、既存のルール両方を新しいルールに置き換えます。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAccessRule" /&gt;</ph> to add.</source>
          
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> of this rule determine the rules to remove before this rule is added.</source>
          
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Removes all access control rules with the same user and <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlType" /&gt;</ph> (allow or deny) as the specified rule, and then adds the specified rule.</source>
          
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>, the effect of this method is to remove all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> rules for the specified user, replacing them with the specified rule.</source>
          <target state="translated">場合は、指定されたルール<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>をすべて削除するのには、このメソッドの効果<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>指定されたルールに置き換える、指定したユーザーのルール。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If the specified rule has <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>, all <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> rules for the specified user are replaced with the specified rule.</source>
          <target state="translated">指定されたルールがある場合<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>すべて、<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>指定したユーザーのルールは、指定されたルールに置き換えられます。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>If there are no rules whose user and <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> match the specified rule, <ph id="ph2">`rule`</ph> is added.</source>
          <target state="translated">規則がないユーザーの場合と<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>指定の規則に一致<ph id="ph2">`rule`</ph>を追加します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The following code example shows how the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> method removes all rules that match both the user and the <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph> of <ph id="ph3">`rule`</ph>, replacing them with <ph id="ph4">`rule`</ph>.</source>
          <target state="translated">次のコード例に示す方法、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph>メソッドは、ユーザーの両方に一致するすべての規則を削除し、<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>の<ph id="ph3">`rule`</ph>に置き換えられます<ph id="ph4">`rule`</ph>です。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object and adds rules that allow and deny various rights for the current user.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>オブジェクトを許可して、現在のユーザーのさまざまな権限を拒否する規則を追加します。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The example then creates a new rule that allows the current user full control, and uses the <ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph> method to replace the existing Allow rule with the new rule.</source>
          <target state="translated">により、現在のユーザーのフル コントロール、および使用する新しい規則を作成し、<ph id="ph1">&lt;xref:System.Security.AccessControl.MutexSecurity.SetAccessRule%2A&gt;</ph>既存を置換するメソッドが新しいルールとルールを許可します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>The rule that denies access is not affected.</source>
          <target state="translated">アクセスを拒否する規則が影響を受けません。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>This example does not attach the security object to a <ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph> object.</source>
          <target state="translated">この例では、セキュリティ オブジェクトはアタッチされません、<ph id="ph1">&lt;xref:System.Threading.Mutex&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source>Examples that attach security objects can be found in <ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">セキュリティ オブジェクトをアタッチする例は含まれて<ph id="ph1">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.MutexAuditRule" /&gt;</ph> to add.</source>
          
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>The user specified by this rule determines the rules to remove before this rule is added.</source>
          
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>Removes all audit rules with the same user as the specified rule, regardless of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> value, and then adds the specified rule.</source>
          
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source>If there are no audit rules whose user matches the specified rule, <ph id="ph1">`rule`</ph> is added.</source>
          <target state="translated">ユーザーが、指定されたルールに一致する監査規則がない場合<ph id="ph1">`rule`</ph>を追加します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
          <source><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>