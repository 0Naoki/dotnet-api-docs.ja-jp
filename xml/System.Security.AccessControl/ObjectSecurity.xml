<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectSecurity.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac528cc68a06a77599b75fdfa8d46df2264d5bccda9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28cc68a06a77599b75fdfa8d46df2264d5bccda9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs).</source>
          <target state="translated">アクセス制御リスト (ACL) を直接操作せずに、オブジェクトへのアクセスをコントロールする機能を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>This class is the abstract base class for the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /&gt;</ph> classes.</source>
          <target state="translated">このクラスは、<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> と <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /&gt;</ph> のクラスの抽象基本クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> of the new <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> instance.</source>
          <target state="translated">新しい <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> インスタンスの <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a container object.</source>
          <target state="translated">新しい <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトがコンテナー オブジェクトである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
          <source>True if the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a directory object.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトがディレクトリ オブジェクトの場合、true。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the securable object associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられたセキュリティ保護可能なオブジェクトの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <source>The type of the securable object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられたセキュリティ保護可能なオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The identity to which the access rule applies.</source>
          <target state="translated">アクセス規則が適用される ID。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> としてキャスト可能なオブジェクトである必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask of this rule.</source>
          <target state="translated">このルールのアクセス マスク。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</source>
          <target state="translated">アクセス マスクは 32 ビットの匿名ビットのコレクションです。アクセス マスクの意味は、各インテグレーターによって定義されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>true if this rule is inherited from a parent container.</source>
          <target state="translated">この規則を親コンテナーから継承する場合は true です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies the inheritance properties of the access rule.</source>
          <target state="translated">アクセス規則の継承プロパティを指定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">継承されたアクセス規則を自動的に反映させるかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph> に設定されている場合、伝達フラグは無視されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies the valid access control type.</source>
          <target state="translated">有効なアクセス制御の種類を指定します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">値を指定して、<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">このメソッドが作成する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified">
          <source>Gets or sets a Boolean value that specifies whether the access rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連するアクセス規則が変更されたかどうかを指定するブール値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the access rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられているアクセス規則が変更されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object associated with the access rules of this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> オブジェクトのアクセス規則に関連付けられた <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object must be an object that can be cast as a <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> オブジェクトは、<ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> オブジェクトとしてキャスト可能なオブジェクトである必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <source>The type of the object associated with the access rules of this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトのアクセス規則に関連付けられているオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical">
          <source>Gets a Boolean value that specifies whether the access rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object are in canonical order.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連するアクセス規則の順序が正規順序であるかどうかを指定するブール値を取得します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the access rules are in canonical order; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アクセス規則が正規の順序である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected">
          <source>Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is protected.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられている随意アクセス制御リスト (DACL) が保護されているかどうかを指定するブール値を取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is protected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL が保護されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical">
          <source>Gets a Boolean value that specifies whether the audit rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object are in canonical order.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連する監査規則の順序が正規順序であるかどうかを指定するブール値を取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the audit rules are in canonical order; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">監査規則が正規の順序である場合は、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は、<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected">
          <source>Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is protected.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられているシステム アクセス制御リスト (SACL) が保護されているかどうかを指定するブール値を取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is protected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL が保護されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The identity to which the audit rule applies.</source>
          <target state="translated">監査規則が適用される ID。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> としてキャスト可能なオブジェクトである必要があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask of this rule.</source>
          <target state="translated">このルールのアクセス マスク。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</source>
          <target state="translated">アクセス マスクは 32 ビットの匿名ビットのコレクションです。アクセス マスクの意味は、各インテグレーターによって定義されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this rule is inherited from a parent container.</source>
          <target state="translated">この規則を親コンテナーから継承する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Specifies the inheritance properties of the audit rule.</source>
          <target state="translated">監査規則の継承プロパティを指定します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Specifies whether inherited audit rules are automatically propagated.</source>
          <target state="translated">継承された監査規則を自動的に反映させるかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph> に設定されている場合、伝達フラグは無視されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Specifies the conditions for which the rule is audited.</source>
          <target state="translated">規則が監査される条件を指定します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">値を指定して、<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">このメソッドが作成する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified">
          <source>Gets or sets a Boolean value that specifies whether the audit rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連する監査規則が変更されたかどうかを指定するブール値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the audit rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられている監査規則が変更されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object associated with the audit rules of this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> オブジェクトの監査規則に関連付けられた <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object must be an object that can be cast as a <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> オブジェクトは、<ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> オブジェクトとしてキャスト可能なオブジェクトである必要があります。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <source>The type of the object associated with the audit rules of this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトの監査規則に関連付けられたオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <source>The owner for which to get the primary group.</source>
          <target state="translated">プライマリ グループを取得する対象の所有者。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <source>Gets the primary group associated with the specified owner.</source>
          <target state="translated">指定された所有者に関連付けられているプライマリ グループを取得します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <source>The primary group associated with the specified owner.</source>
          <target state="translated">指定された所有者に関連付けられているプライマリ グループ。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>The primary group for which to get the owner.</source>
          <target state="translated">所有者を取得する対象のプライマリ グループ。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>Gets the owner associated with the specified primary group.</source>
          <target state="translated">指定されたプライマリ グループに関連付けられている所有者を取得します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>The owner associated with the specified group.</source>
          <target state="translated">指定されたグループに関連付けられている所有者。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> 型ではありません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>Some or all identity references could not be translated.</source>
          <target state="translated">ID 参照の一部またはすべてを変換できませんでした。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>A Win32 error code was returned.</source>
          <target state="translated">Win32 エラー コードが返されました。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>Returns an array of byte values that represents the security descriptor information for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関するセキュリティ記述子の情報を表すバイト値の配列を返します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>An array of byte values that represents the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関するセキュリティ記述子を表すバイト値の配列。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>This method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no security information in this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトにセキュリティ情報がない場合、このメソッドは <ph id="ph1">&lt;see langword="null" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>This method returns the security descriptor information currently in memory.</source>
          <target state="translated">このメソッドは、メモリに現在のセキュリティ記述子の情報を返します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>It does not retrieve information saved in permanent storage.</source>
          <target state="translated">永続的な記憶域に保存された情報は取得しません。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <source>Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.</source>
          <target state="translated">取得対象となるセキュリティ記述子のセクション (アクセス規則、監査規則、プライマリ グループ、所有者) を指定します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <source>Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられているセキュリティ記述子の指定したセクションにあるセキュリティ記述子定義言語 (SDDL) 表現を返します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <source>The SDDL representation of the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられているセキュリティ記述子の指定したセクションにある SDDL 表現。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.GroupModified">
          <source>Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.</source>
          <target state="translated">セキュリティ保護可能なオブジェクトと関連付けられているグループが変更されているかどうかを指定するブール値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.GroupModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the group associated with the securable object has been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">セキュリティ保護可能なオブジェクトと関連付けられているグループが変更されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.IsContainer">
          <source>Gets a Boolean value that specifies whether this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a container object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトがコンテナー オブジェクトかどうかを指定するブール値を取得します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.IsContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a container object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトがコンテナー オブジェクトの場合、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合、<ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.IsDS">
          <source>Gets a Boolean value that specifies whether this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a directory object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトがディレクトリ オブジェクトかどうかを指定するブール値を取得します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.IsDS">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a directory object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトがディレクトリ オブジェクトの場合、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合、<ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported">
          <source>Returns a Boolean value that specifies whether the security descriptor associated with this  <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object can be converted to the Security Descriptor Definition Language (SDDL) format.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられたセキュリティ記述子を、セキュリティ記述子定義言語 (SDDL) 形式に変換できるかどうかを指定するブール値を返します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the security descriptor associated with this  <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられたセキュリティ記述子をセキュリティ記述子定義言語 (SDDL) 形式に変換できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The modification to apply to the DACL.</source>
          <target state="translated">DACL に適用する変更。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The access rule to modify.</source>
          <target state="translated">変更するアクセス規則。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL が正常に変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられている随意アクセス制御リスト (DACL) への指定された変更を適用します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL が正常に変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</source>
          <target state="translated">プリンシパルへのアクセスを許可する意図を避けるためには、アプリケーションする必要がありますの有無を確認、許可のすべてのユーザー アクセス (AEFA) アクセス制御エントリ (ACE) の完全および DACL を変更する前に削除します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The modification to apply to the DACL.</source>
          <target state="translated">DACL に適用する変更。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The access rule to modify.</source>
          <target state="translated">変更するアクセス規則。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL が正常に変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられている随意アクセス制御リスト (DACL) への指定された変更を適用します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">DACL が正常に変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</source>
          <target state="translated">プリンシパルへのアクセスを許可する意図を避けるためには、アプリケーションする必要がありますの有無を確認、許可のすべてのユーザー アクセス (AEFA) アクセス制御エントリ (ACE) の完全および DACL を変更する前に削除します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The modification to apply to the SACL.</source>
          <target state="translated">SACL に適用する変更。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The audit rule to modify.</source>
          <target state="translated">変更する監査規則。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL が正常に変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>Applies the specified modification to the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">指定された変更を、この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられているシステム アクセス制御リスト (SACL) に適用します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL が正常に変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The modification to apply to the SACL.</source>
          <target state="translated">SACL に適用する変更。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The audit rule to modify.</source>
          <target state="translated">変更する監査規則。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL が正常に変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>Applies the specified modification to the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">指定された変更を、この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられているシステム アクセス制御リスト (SACL) に適用します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">SACL が正常に変更された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.OwnerModified">
          <source>Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.</source>
          <target state="translated">セキュリティ保護可能なオブジェクトの所有者が変更されているかどうかを指定するブール値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.OwnerModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the owner of the securable object has been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">セキュリティ保護可能なオブジェクトの所有者が変更されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Protected methods that save the security descriptor information in this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトのセキュリティ記述子情報を永続的なストレージに保存する、保護されたメソッドです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>The handle used to retrieve the persisted information.</source>
          <target state="translated">永続化された情報を取得するために使用するハンドル。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</source>
          <target state="translated">保存するセキュリティ保護可能なオブジェクトのセキュリティ記述子のセクション (アクセス規則、監査規則、所有者、プライマリ グループ) を指定する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>Saves the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられたセキュリティ記述子の指定されたセクションを、永続記憶域に保存します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>We recommend that the values of the <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> parameters passed to the constructor and persist methods be identical.</source>
          <target state="translated">コンストラクターと persist メソッドに渡される <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> パラメーターの値を同一にすることをお勧めします。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>When persisting a <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id="ph2">`includeSections`</ph> parameter passed to the <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id="ph4">`includeSections`</ph> parameter passed to the constructor used to create that <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.</source>
          <target state="translated">永続化時に、<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトを場合の値、<ph id="ph2">`includeSections`</ph>に渡されたパラメーター、<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>メソッドの値と同一ではありません、<ph id="ph4">`includeSections`</ph>を作成するために使用するコンス トラクターに渡されたパラメーター<ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトのセクションでは、永続化の<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトは、予期しない値を含めることができます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>For example, if a constructor is called with an <ph id="ph1">`includeSections`</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id="ph4">`includeSections`</ph> value of <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.</source>
          <target state="translated">コンス トラクターが呼び出された場合など、<ph id="ph1">`includeSections`</ph>の値<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>、およびそれ以降、<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>使用してそのオブジェクトでメソッドが呼び出さ、<ph id="ph4">`includeSections`</ph>の値<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>、永続化の結果として得られる<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトは、監査規則、グループ、および所有者の予期しない値に含まれます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name used to retrieve the persisted information.</source>
          <target state="translated">永続化された情報を取得するために使用する名前。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</source>
          <target state="translated">保存するセキュリティ保護可能なオブジェクトのセキュリティ記述子のセクション (アクセス規則、監査規則、所有者、プライマリ グループ) を指定する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Saves the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられたセキュリティ記述子の指定されたセクションを、永続記憶域に保存します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>We recommend that the values of the <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> parameters passed to the constructor and persist methods be identical.</source>
          <target state="translated">コンストラクターと persist メソッドに渡される <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> パラメーターの値を同一にすることをお勧めします。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>When persisting a <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id="ph2">`includeSections`</ph> parameter passed to the <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id="ph4">`includeSections`</ph> parameter passed to the constructor used to create that <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.</source>
          <target state="translated">永続化時に、<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトを場合の値、<ph id="ph2">`includeSections`</ph>に渡されたパラメーター、<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>メソッドの値と同一ではありません、<ph id="ph4">`includeSections`</ph>を作成するために使用するコンス トラクターに渡されたパラメーター<ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトのセクションでは、永続化の<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトは、予期しない値を含めることができます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>For example, if a constructor is called with an <ph id="ph1">`includeSections`</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id="ph4">`includeSections`</ph> value of <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.</source>
          <target state="translated">コンス トラクターが呼び出された場合など、<ph id="ph1">`includeSections`</ph>の値<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>、およびそれ以降、<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>使用してそのオブジェクトでメソッドが呼び出さ、<ph id="ph4">`includeSections`</ph>の値<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>、永続化の結果として得られる<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトは、監査規則、グループ、および所有者の予期しない値に含まれます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable the privilege that allows the caller to take ownership of the object.</source>
          <target state="translated">呼び出し元がオブジェクトの所有権を取得することを可能にする権限を有効にする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name used to retrieve the persisted information.</source>
          <target state="translated">永続化された情報を取得するために使用する名前。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</source>
          <target state="translated">保存するセキュリティ保護可能なオブジェクトのセキュリティ記述子のセクション (アクセス規則、監査規則、所有者、プライマリ グループ) を指定する <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Saves the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられたセキュリティ記述子の指定されたセクションを、永続記憶域に保存します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>We recommend that the values of the <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> parameters passed to the constructor and persist methods be identical.</source>
          <target state="translated">コンストラクターと persist メソッドに渡される <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> パラメーターの値を同一にすることをお勧めします。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>When persisting a <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id="ph2">`includeSections`</ph> parameter passed to the <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id="ph4">`includeSections`</ph> parameter passed to the constructor used to create that <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.</source>
          <target state="translated">永続化時に、<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトを場合の値、<ph id="ph2">`includeSections`</ph>に渡されたパラメーター、<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>メソッドの値と同一ではありません、<ph id="ph4">`includeSections`</ph>を作成するために使用するコンス トラクターに渡されたパラメーター<ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトのセクションでは、永続化の<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトは、予期しない値を含めることができます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>For example, if a constructor is called with an <ph id="ph1">`includeSections`</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id="ph4">`includeSections`</ph> value of <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.</source>
          <target state="translated">コンス トラクターが呼び出された場合など、<ph id="ph1">`includeSections`</ph>の値<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>、およびそれ以降、<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>使用してそのオブジェクトでメソッドが呼び出さ、<ph id="ph4">`includeSections`</ph>の値<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>、永続化の結果として得られる<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>オブジェクトは、監査規則、グループ、および所有者の予期しない値に含まれます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> for which to remove all access rules.</source>
          <target state="translated">すべてのアクセス規則を削除する <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <source>Removes all access rules associated with the specified <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> と関連付けられているすべてのアクセス規則をすべて削除します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <source>All access rules are not in canonical order.</source>
          <target state="translated">すべてのアクセス規則が正規の順序であるわけではありません。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> for which to remove all audit rules.</source>
          <target state="translated">すべての監査規則を削除する <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <source>Removes all audit rules associated with the specified <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> と関連付けられている監査規則をすべて削除します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <source>All audit rules are not in canonical order.</source>
          <target state="translated">すべての監査規則が正規の順序であるわけではありません。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ReadLock">
          <source>Locks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for read access.</source>
          <target state="translated">読み取りアクセス用のこの <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトをロックします。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock">
          <source>Unlocks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for read access.</source>
          <target state="translated">読み取りアクセス用のこの <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトをロック解除します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the access rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from inheritance; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to allow inheritance.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられたアクセス規則を継承から保護する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。継承を許可する場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve inherited access rules; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited access rules.</source>
          <target state="translated">継承されたアクセス規則を保持する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。継承されたアクセス規則を削除する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>This parameter is ignored if <bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>Sets or removes protection of the access rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられたアクセス規則の保護を設定または削除します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>Protected access rules cannot be modified by parent objects through inheritance.</source>
          <target state="translated">保護されたアクセス規則を親オブジェクトが継承によって変更することはできません。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).</source>
          <target state="translated">このメソッドは、非正規の随意アクセス制御リスト (DACL) から、継承された規則を削除しようとします。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the audit rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from inheritance; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to allow inheritance.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられた監査規則を継承から保護する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。継承を許可する場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve inherited audit rules; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited audit rules.</source>
          <target state="translated">継承された監査規則を保持する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。継承された監査規則を削除する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>This parameter is ignored if <bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> が <ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>Sets or removes protection of the audit rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられた監査規則の保護を設定または削除します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>Protected audit rules cannot be modified by parent objects through inheritance.</source>
          <target state="translated">保護された監査規則は、親オブジェクトによる継承によって変更できません。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).</source>
          <target state="translated">このメソッドは、非正規のシステム アクセス制御リスト (SACL) から、継承された規則を削除しようとします。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)">
          <source>The primary group to set.</source>
          <target state="translated">設定するプライマリ グループ。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)">
          <source>Sets the primary group for the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられているセキュリティ記述子のプライマリ グループを設定します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)">
          <source>The owner to set.</source>
          <target state="translated">設定する所有者。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)">
          <source>Sets the owner for the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">この<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関連付けられているセキュリティ記述子の所有者を設定します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified binary data.</source>
          <target state="translated">指定したバイナリ データからこの <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトのセキュリティ記述子を設定します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If the security descriptor represented by the binary data contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">バイナリ データで表されるセキュリティ記述子が含まれるかどうか<ph id="ph1">`null`</ph>すべてのユーザーが単一のアクセス制御エントリ (ACE) での随意アクセス制御リスト (DACL) のフル アクセス (AEFA) が、DACL に追加します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">アプリケーションでは、AEFA ACE が追加されているセキュリティ記述子の DACL を変更する場合は、その DACL が保存されるときに、DACL によって AEFA ACE が保存されます。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">これは、意図せずプリンシパルへのアクセスを許可するアプリケーションになります。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">このため、アプリケーションを AEFA ACE の有無を確認し、任意のセキュリティ記述子を変更する前に削除します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>The array of bytes from which to set the security descriptor.</source>
          <target state="translated">セキュリティ記述子の設定元となるバイト配列。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified array of byte values.</source>
          <target state="translated">バイト値の指定された配列から、この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関するセキュリティ記述子を設定します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>If the security descriptor represented by the binary data contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">バイナリ データで表されるセキュリティ記述子が含まれるかどうか<ph id="ph1">`null`</ph>すべてのユーザーが単一のアクセス制御エントリ (ACE) での随意アクセス制御リスト (DACL) のフル アクセス (AEFA) が、DACL に追加します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">アプリケーションでは、AEFA ACE が追加されているセキュリティ記述子の DACL を変更する場合は、その DACL が保存されるときに、DACL によって AEFA ACE が保存されます。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">これは、意図せずプリンシパルへのアクセスを許可するアプリケーションになります。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">このため、アプリケーションを AEFA ACE の有無を確認し、任意のセキュリティ記述子を変更する前に削除します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>The array of bytes from which to set the security descriptor.</source>
          <target state="translated">セキュリティ記述子の設定元となるバイト配列。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</source>
          <target state="translated">設定対象となるセキュリティ記述子のセクション (アクセス規則、監査規則、所有者、プライマリ グループ)。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>Sets the specified sections of the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified array of byte values.</source>
          <target state="translated">バイト値の指定された配列から、この <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトに関するセキュリティ記述子の指定されたセクションを設定します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>If the security descriptor represented by the binary data contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">バイナリ データで表されるセキュリティ記述子が含まれるかどうか<ph id="ph1">`null`</ph>すべてのユーザーが単一のアクセス制御エントリ (ACE) での随意アクセス制御リスト (DACL) のフル アクセス (AEFA) が、DACL に追加します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">アプリケーションでは、AEFA ACE が追加されているセキュリティ記述子の DACL を変更する場合は、その DACL が保存されるときに、DACL によって AEFA ACE が保存されます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">これは、意図せずプリンシパルへのアクセスを許可するアプリケーションになります。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">このため、アプリケーションを AEFA ACE の有無を確認し、任意のセキュリティ記述子を変更する前に削除します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">指定したセキュリティ記述子定義言語 (SDDL) 文字列から、<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトのセキュリティ記述子を設定します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If the security descriptor represented by the SDDL string contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">SDDL 文字列によって表されるセキュリティ記述子が含まれるかどうか<ph id="ph1">`null`</ph>すべてのユーザーが単一のアクセス制御エントリ (ACE) での随意アクセス制御リスト (DACL) のフル アクセス (AEFA) が、DACL に追加します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">アプリケーションでは、AEFA ACE が追加されているセキュリティ記述子の DACL を変更する場合は、その DACL が保存されるときに、DACL によって AEFA ACE が保存されます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">これは、意図せずプリンシパルへのアクセスを許可するアプリケーションになります。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">このため、アプリケーションを AEFA ACE の有無を確認し、任意のセキュリティ記述子を変更する前に削除します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>The SDDL string from which to set the security descriptor.</source>
          <target state="translated">セキュリティ記述子の設定元となる SDDL 文字列。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">指定したセキュリティ記述子定義言語 (SDDL) 文字列から、<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトのセキュリティ記述子を設定します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>If the security descriptor represented by the SDDL string contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">SDDL 文字列によって表されるセキュリティ記述子が含まれるかどうか<ph id="ph1">`null`</ph>すべてのユーザーが単一のアクセス制御エントリ (ACE) での随意アクセス制御リスト (DACL) のフル アクセス (AEFA) が、DACL に追加します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">アプリケーションでは、AEFA ACE が追加されているセキュリティ記述子の DACL を変更する場合は、その DACL が保存されるときに、DACL によって AEFA ACE が保存されます。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">これは、意図せずプリンシパルへのアクセスを許可するアプリケーションになります。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">このため、アプリケーションを AEFA ACE の有無を確認し、任意のセキュリティ記述子を変更する前に削除します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The SDDL string from which to set the security descriptor.</source>
          <target state="translated">セキュリティ記述子の設定元となる SDDL 文字列。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</source>
          <target state="translated">設定対象となるセキュリティ記述子のセクション (アクセス規則、監査規則、所有者、プライマリ グループ)。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Sets the specified sections of the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">指定したセキュリティ記述子定義言語 (SDDL) 文字列から、<ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトのセキュリティ記述子の指定したセクションを設定します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If the security descriptor represented by the SDDL string contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">SDDL 文字列によって表されるセキュリティ記述子が含まれるかどうか<ph id="ph1">`null`</ph>すべてのユーザーが単一のアクセス制御エントリ (ACE) での随意アクセス制御リスト (DACL) のフル アクセス (AEFA) が、DACL に追加します。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">アプリケーションでは、AEFA ACE が追加されているセキュリティ記述子の DACL を変更する場合は、その DACL が保存されるときに、DACL によって AEFA ACE が保存されます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">これは、意図せずプリンシパルへのアクセスを許可するアプリケーションになります。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">このため、アプリケーションを AEFA ACE の有無を確認し、任意のセキュリティ記述子を変更する前に削除します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.WriteLock">
          <source>Locks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for write access.</source>
          <target state="translated">書き込みアクセス用のこの <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトをロックします。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock">
          <source>Unlocks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for write access.</source>
          <target state="translated">書き込みアクセス用にこの <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> オブジェクトのロックを解除します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>