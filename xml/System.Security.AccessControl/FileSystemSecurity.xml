<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ad7c36a80e44026b71817bfa78a8c6b89aeaf95" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490826" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ファイルまたはディレクトリのアクセス制御と監査セキュリティを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity>クラスは、基本クラスの<xref:System.Security.AccessControl.FileSecurity>と<xref:System.Security.AccessControl.DirectorySecurity>クラスです。  これらのクラスは、すべてのシステム ファイルまたはディレクトリのアクセス権限を表すし、アクセス試行を監査する方法を定義します。  
  
 <xref:System.Security.AccessControl.FileSystemSecurity>クラスは、一連のルールとしてアクセスおよび監査権限を表します。 各アクセス規則は、<xref:System.Security.AccessControl.FileSystemAccessRule>オブジェクト、各監査規則がによって表されるときに、<xref:System.Security.AccessControl.FileSystemAuditRule>オブジェクト。  
  
 <xref:System.Security.AccessControl.FileSystemSecurity>クラスは、基になる Microsoft Windows ファイルのセキュリティ システムの抽象化します。 このシステムでは、各ファイルまたはディレクトリにファイルまたはディレクトリへのアクセスを制御するには、随意アクセス制御リスト (DACL) とシステム アクセス制御リスト (SACL) は監査するアクセス制御の試行を指定します。  <xref:System.Security.AccessControl.FileSystemAccessRule>と<xref:System.Security.AccessControl.FileSystemAuditRule>クラスは、Dacl と Sacl を構成するアクセス制御エントリ (Ace) の抽象化します。  
  
 <xref:System.Security.AccessControl.FileSystemSecurity>クラスの Dacl と Sacl の詳細の表示と非; ACE の順序または null DACL について心配する必要はありません。  
  
 使用してファイルを新規または変更のアクセス制御リスト (ACL) 情報を保持するため、<xref:System.IO.File.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  ディレクトリに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.Directory.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  
  
 情報を取得する ACL ファイルを使用して、<xref:System.IO.File.GetAccessControl%2A>または<xref:System.IO.FileInfo.GetAccessControl%2A>メソッドです。  ディレクトリから ACL の情報を取得するを使用して、<xref:System.IO.Directory.GetAccessControl%2A>または<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドです。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Security.AccessControl.FileSecurity>クラスを追加し、ファイルからのアクセス制御リスト (ACL) エントリを削除します。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> クラスでアクセス権を表すために使用する列挙体を取得します。</summary>
        <value>
          <see cref="T:System.Type" /> 列挙体を表す <see cref="T:System.Security.AccessControl.FileSystemRights" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生したクラス、<xref:System.Security.AccessControl.FileSystemSecurity>クラスのオーバーライド、<xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A>プロパティと戻り値のアクセス権を表すために使用する型。 配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な列挙型を判断します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">ユーザー アカウントを表す <see cref="T:System.Security.Principal.IdentityReference" /> オブジェクト。</param>
        <param name="accessMask">アクセスの種類を指定する整数。</param>
        <param name="isInherited">
          アクセス規則が継承されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="inheritanceFlags">子オブジェクトにアクセス マスクを反映する方法を指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 値のいずれか。</param>
        <param name="propagationFlags">子オブジェクトにアクセス制御エントリ (ACE) を反映する方法を指定する <see cref="T:System.Security.AccessControl.PropagationFlags" /> 値のいずれか。</param>
        <param name="type">アクセスを許可するか拒否するかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値のいずれか。</param>
        <summary>アクセス権、アクセス制御、およびフラグを指定して、指定したユーザーの新しいアクセス制御規則を表す <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <returns>アクセス権、アクセス制御、およびフラグを指定して、指定したユーザーの新しいアクセス制御規則を表す新しい <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アクセス制御規則を作成することをお勧めはのコンス トラクターを使用する、<xref:System.Security.AccessControl.FileSystemAccessRule>クラスです。  
  
 戻り値の型、<xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A>メソッドは、基本クラスでは<xref:System.Security.AccessControl.AccessRule>、派生クラスを戻り値を安全にキャストされることができますが、します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessMask" /> パラメーター、<paramref name="inheritanceFlags" /> パラメーター、<paramref name="propagationFlags" /> パラメーター、または <paramref name="type" /> パラメーターに無効な値が指定されています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identityReference" /> パラメーターが <see langword="null" /> です。  
  
 - または -  
  
 <paramref name="accessMask" /> パラメーターが 0 です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identityReference" /> パラメーターが <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> クラスでアクセス規則を表すために使用する列挙体を取得します。</summary>
        <value>
          <see cref="T:System.Type" /> クラスを表す <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生したクラス、<xref:System.Security.AccessControl.FileSystemSecurity>クラスのオーバーライド、<xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A>プロパティと戻り値のアクセス規則を表すために使用する型。 配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切なアクセス ルールの種類を決定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリに追加するアクセス制御リスト (ACL) のアクセス許可を表す <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクト。</param>
        <summary>アクセス制御リスト (ACL) の指定したアクセス許可を現在のファイルまたはディレクトリに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>メソッドに含まれるルールの一覧に新しい規則の追加、<xref:System.Security.AccessControl.FileSystemSecurity>オブジェクト。  
  
 指定したルールのアクセス制御リスト (ACL) が既に存在する場合、<xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A>メソッドは 1 つの例外の規則を追加しても:<xref:System.Security.AccessControl.FileSystemAccessRule>を使用して作成されたオブジェクト、<xref:System.Security.AccessControl.AccessControlType.Deny>列挙値を使用して作成されたオブジェクトに置き換えられる、<xref:System.Security.AccessControl.AccessControlType.Allow>列挙値。  
  
 ファイルに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.File.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  ディレクトリに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.Directory.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  
  
 情報を取得する ACL ファイルを使用して、<xref:System.IO.File.GetAccessControl%2A>または<xref:System.IO.FileInfo.GetAccessControl%2A>メソッドです。  ディレクトリから ACL の情報を取得するを使用して、<xref:System.IO.Directory.GetAccessControl%2A>または<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドです。  
  
 設定を指定せず、アクセス ルールを追加すると、<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグを<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグは、規則に自動的に追加されます。  指定せず、規則を後で削除する場合、<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグ、フラグは自動的に削除されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Security.AccessControl.FileSecurity>クラスを追加し、ファイルからのアクセス制御リスト (ACL) エントリを削除します。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリに追加する監査規則を表す <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> オブジェクト。</param>
        <summary>指定した監査規則を現在のファイルまたはディレクトリに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A>メソッドに含まれるルールの一覧に新しい監査規則を追加、<xref:System.Security.AccessControl.FileSystemSecurity>オブジェクト。  
  
 指定したルールの監査規則が既に存在する場合、<xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A>メソッドはルールを追加します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A>監査規則を使用して、ファイルに追加するメソッド、<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>ファイルから監査規則を削除する方法です。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">ユーザー アカウントを表す <see cref="T:System.Security.Principal.IdentityReference" /> オブジェクト。</param>
        <param name="accessMask">アクセスの種類を指定する整数。</param>
        <param name="isInherited">
          アクセス規則が継承されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="inheritanceFlags">子オブジェクトにアクセス マスクを反映する方法を指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 値のいずれか。</param>
        <param name="propagationFlags">子オブジェクトにアクセス制御エントリ (ACE) を反映する方法を指定する <see cref="T:System.Security.AccessControl.PropagationFlags" /> 値のいずれか。</param>
        <param name="flags">実行する監査の種類を指定する <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のいずれか。</param>
        <summary>指定したユーザーの指定した監査規則を表す <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <returns>指定したユーザーの指定した監査規則を表す新しい <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンス トラクターを使用するのには、監査規則を作成することをお勧め、<xref:System.Security.AccessControl.FileSystemAuditRule>クラスです。  
  
 戻り値の型、<xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A>メソッドは、基本クラスでは<xref:System.Security.AccessControl.AuditRule>、派生クラスを戻り値を安全にキャストされることができますが、します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessMask" /> プロパティ、<paramref name="inheritanceFlags" /> プロパティ、<paramref name="propagationFlags" /> プロパティ、または <paramref name="flags" /> プロパティに無効な値が指定されています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identityReference" /> プロパティが <see langword="null" /> です。  
  
 - または -  
  
 <paramref name="accessMask" /> プロパティが 0 です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identityReference" /> プロパティが <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> クラスで監査規則を表すために使用する型を取得します。</summary>
        <value>
          <see cref="T:System.Type" /> クラスを表す <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生したクラス、<xref:System.Security.AccessControl.FileSystemSecurity>クラスのオーバーライド、<xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A>プロパティと監査権限を表すために使用する型を戻り値。 配列または複数の種類のセキュリティ オブジェクトを格納するコレクションを操作するときは、このプロパティを使用して、各セキュリティ オブジェクトで使用する適切な監査規則の種類を決定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリから削除するアクセス制御リスト (ACL) のアクセス許可を表す <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクト。</param>
        <summary>現在のファイルまたはディレクトリから、アクセス制御リスト (ACL) の一致するすべての許可するアクセス許可、または拒否するアクセス許可を削除します。</summary>
        <returns>
          アクセス規則が削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>メソッドはすべて一致するか、削除<xref:System.Security.AccessControl.AccessControlType.Deny>アクセス ルールまたは照合<xref:System.Security.AccessControl.AccessControlType.Allow>現在からアクセス規則<xref:System.Security.AccessControl.FileSystemSecurity>オブジェクト。  たとえば、すべてを削除するこのメソッドを使用できます<xref:System.Security.AccessControl.AccessControlType.Deny>に対してアクセス規則、ユーザーを渡すことによって、<xref:System.Security.AccessControl.FileSystemAccessRule>を使用して作成されたオブジェクト、<xref:System.Security.AccessControl.AccessControlType.Deny>値、<xref:System.Security.AccessControl.FileSystemRights.Read>値、およびユーザー アカウントです。  これを行うときに、<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A>メソッドを指定する、拒否のルールの削除、<xref:System.Security.AccessControl.FileSystemRights.Read>値または<xref:System.Security.AccessControl.FileSystemRights.Write>値。  
  
 使用してファイルを新規または変更のアクセス制御リスト (ACL) 情報を保持するため、<xref:System.IO.File.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  ディレクトリに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.Directory.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  
  
 情報を取得する ACL ファイルを使用して、<xref:System.IO.File.GetAccessControl%2A>または<xref:System.IO.FileInfo.GetAccessControl%2A>メソッドです。  ディレクトリから ACL の情報を取得するを使用して、<xref:System.IO.Directory.GetAccessControl%2A>または<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドです。  
  
 設定を指定せず、アクセス ルールを追加すると、<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグを<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグは、規則に自動的に追加されます。  指定せず、規則を後で削除する場合、<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグ、フラグは自動的に削除されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Security.AccessControl.FileSecurity>クラスを追加し、ファイルからのアクセス制御リスト (ACL) エントリを削除します。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリから、アクセス制御リスト (ACL) のアクセス許可を削除する必要のあるユーザーを指定する <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクト。</param>
        <summary>現在のファイルまたはディレクトリから、指定したユーザーのアクセス制御リスト (ACL) のすべてのアクセス許可を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A>メソッドは、指定したユーザーのすべてのアクセス制御リスト (ACL) 権限を削除します。  メソッドのすべての値は無視されます、<xref:System.Security.AccessControl.FileSystemAccessRule>ユーザー アカウントを除くオブジェクト。  
  
 ファイルに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.File.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  ディレクトリに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.Directory.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  
  
 情報を取得する ACL ファイルを使用して、<xref:System.IO.File.GetAccessControl%2A>または<xref:System.IO.FileInfo.GetAccessControl%2A>メソッドです。  ディレクトリから ACL の情報を取得するを使用して、<xref:System.IO.Directory.GetAccessControl%2A>または<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドです。  
  
 設定を指定せず、アクセス ルールを追加すると、<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグを<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグは、規則に自動的に追加されます。  指定せず、規則を後で削除する場合、<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグ、フラグは自動的に削除されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリから、アクセス制御リスト (ACL) のアクセス許可を削除する必要のあるユーザーを指定する <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクト。</param>
        <summary>現在のファイルまたはディレクトリから、アクセス制御リスト (ACL) の一致する単一の許可するアクセス許可、または拒否するアクセス許可を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A>メソッドは、指定された削除<xref:System.Security.AccessControl.AccessControlType.Deny>アクセス ルールまたは指定した照合<xref:System.Security.AccessControl.AccessControlType.Allow>現在からアクセス規則<xref:System.Security.AccessControl.FileSystemSecurity>オブジェクト。  このメソッドを指定された削除を使用するなど、<xref:System.Security.AccessControl.AccessControlType.Deny>を渡すことによって、ユーザーのアクセス規則、<xref:System.Security.AccessControl.FileSystemAccessRule>を使用して作成されたオブジェクト、<xref:System.Security.AccessControl.AccessControlType.Deny>値、<xref:System.Security.AccessControl.FileSystemRights.Read>値、およびユーザー アカウントです。  これを行うときに、<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A>メソッドを指定するこの拒否規則のみを削除する、<xref:System.Security.AccessControl.FileSystemRights.Read>値。  指定する任意の拒否規則は削除されません、<xref:System.Security.AccessControl.FileSystemRights.Write>値。  
  
 使用してファイルを新規または変更のアクセス制御リスト (ACL) 情報を保持するため、<xref:System.IO.File.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  ディレクトリに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.Directory.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  
  
 情報を取得する ACL ファイルを使用して、<xref:System.IO.File.GetAccessControl%2A>または<xref:System.IO.FileInfo.GetAccessControl%2A>メソッドです。  ディレクトリから ACL の情報を取得するを使用して、<xref:System.IO.Directory.GetAccessControl%2A>または<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドです。  
  
 設定を指定せず、アクセス ルールを追加すると、<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグを<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグは、規則に自動的に追加されます。  指定せず、規則を後で削除する場合、<xref:System.Security.AccessControl.FileSystemRights.Synchronize>フラグ、フラグは自動的に削除されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリから削除する監査規則を表す <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> オブジェクト。</param>
        <summary>現在のファイルまたはディレクトリから、一致するすべての許可する監査規則または拒否する監査規則を削除します。</summary>
        <returns>
          監査規則が削除された場合は <see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>メソッドはすべて一致するか、削除<xref:System.Security.AccessControl.AccessControlType.Deny>監査規則、またはすべてに一致する<xref:System.Security.AccessControl.AccessControlType.Allow>監査規則を現在<xref:System.Security.AccessControl.FileSystemSecurity>オブジェクト。  たとえば、すべてを削除するこのメソッドを使用できます<xref:System.Security.AccessControl.AccessControlType.Deny>に関する監査規則、ユーザーを渡すことによって、<xref:System.Security.AccessControl.FileSystemAuditRule>を使用して作成されたオブジェクト、<xref:System.Security.AccessControl.AccessControlType.Deny>値、<xref:System.Security.AccessControl.AuditFlags.Failure>値、およびユーザー アカウントです。  これを行うときに、<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>メソッドを指定する、拒否のルールの削除、<xref:System.Security.AccessControl.AuditFlags.Failure>値または<xref:System.Security.AccessControl.AuditFlags.Success>値。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A>監査規則を使用して、ファイルに追加するメソッド、<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A>ファイルから監査規則を削除する方法です。  この例を実行するには、有効なユーザーまたはグループ アカウントを指定する必要があります。  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリから、監査規則を削除する必要のあるユーザーを指定する <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> オブジェクト。</param>
        <summary>現在のファイルまたはディレクトリから、指定したユーザーのすべての監査規則を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A>メソッドは、指定したユーザーのすべての監査規則を削除します。  すべての値は無視されます、<xref:System.Security.AccessControl.FileSystemAuditRule>ユーザー アカウントを除くオブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリから削除する監査規則を表す <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> オブジェクト。</param>
        <summary>現在のファイルまたはディレクトリから、一致する単一の許可する監査規則または拒否する監査規則を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A>メソッドは、指定された一致する、削除<xref:System.Security.AccessControl.AccessControlType.Deny>ルールまたは指定した照合監査<xref:System.Security.AccessControl.AccessControlType.Allow>現在から監査規則<xref:System.Security.AccessControl.FileSystemSecurity>オブジェクト。  このメソッドを指定された削除を使用するなど、<xref:System.Security.AccessControl.AccessControlType.Deny>を渡すことによって、ユーザーの監査規則、<xref:System.Security.AccessControl.FileSystemAuditRule>を使用して作成されたオブジェクト、<xref:System.Security.AccessControl.AccessControlType.Deny>値、<xref:System.Security.AccessControl.AuditFlags.Failure>値、およびユーザー アカウントです。  これを行うときに、<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A>メソッドを指定する拒否ルールのみを削除する、<xref:System.Security.AccessControl.AuditFlags.Failure>値。  指定する任意の拒否規則は削除されません、<xref:System.Security.AccessControl.AuditFlags.Success>値。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリに追加するアクセス制御リスト (ACL) のアクセス許可を表す <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクト。</param>
        <summary>アクセス制御リスト (ACL) の指定したアクセス許可を現在のファイルまたはディレクトリに追加し、ACL の一致するすべてのアクセス許可を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A>メソッドを指定したアクセス制御リスト (ACL) の規則を追加またはと一致する同一の ACL ルールを上書き、`rule`パラメーター。  たとえば場合、`rule`パラメーターを指定します、<xref:System.Security.AccessControl.FileSystemRights.Read>値と<xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A>メソッドを指定するのと同じ ACL 規則の検索、<xref:System.Security.AccessControl.FileSystemRights.Read>値と同じルールが上書きされます。  場合、<xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A>メソッドを指定するのと同じ ACL 規則の検索、<xref:System.Security.AccessControl.FileSystemRights.Write>値と同じルールもは上書きされます。  
  
 ファイルに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.File.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  ディレクトリに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.Directory.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  
  
 情報を取得する ACL ファイルを使用して、<xref:System.IO.File.GetAccessControl%2A>または<xref:System.IO.FileInfo.GetAccessControl%2A>メソッドです。  ディレクトリから ACL の情報を取得するを使用して、<xref:System.IO.Directory.GetAccessControl%2A>または<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリに設定するアクセス制御リスト (ACL) のアクセス許可を表す <see cref="T:System.Security.AccessControl.FileSystemAccessRule" /> オブジェクト。</param>
        <summary>現在のファイルまたはディレクトリに、アクセス制御リスト (ACL) の指定したアクセス許可を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A>メソッドを指定したアクセス制御リスト (ACL) の規則を追加またはと一致する同一の ACL ルールを上書き、<xref:System.Security.AccessControl.FileSystemRights>の値、`rule`パラメーター。  たとえば場合、`rule`パラメーターを指定します、<xref:System.Security.AccessControl.FileSystemRights.Read>値と<xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A>メソッドを指定するのと同じ ACL 規則の検索、<xref:System.Security.AccessControl.FileSystemRights.Read>値と同じルールが上書きされます。  場合、<xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A>メソッドを指定するのと同じ ACL 規則の検索、<xref:System.Security.AccessControl.FileSystemRights.Write>値と同じルールは上書きされません。  
  
 ファイルに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.File.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  ディレクトリに追加または変更された ACL の情報を保持するため使用、<xref:System.IO.Directory.SetAccessControl%2A>または<xref:System.IO.FileInfo.SetAccessControl%2A>メソッドです。  
  
 情報を取得する ACL ファイルを使用して、<xref:System.IO.File.GetAccessControl%2A>または<xref:System.IO.FileInfo.GetAccessControl%2A>メソッドです。  ディレクトリから ACL の情報を取得するを使用して、<xref:System.IO.Directory.GetAccessControl%2A>または<xref:System.IO.DirectoryInfo.GetAccessControl%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">ファイルまたはディレクトリに設定する監査規則を表す <see cref="T:System.Security.AccessControl.FileSystemAuditRule" /> オブジェクト。</param>
        <summary>現在のファイルまたはディレクトリに指定した監査規則を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A>メソッドを指定された監査規則を追加またはに一致する任意のと同じ監査規則を上書き、<xref:System.Security.AccessControl.FileSystemRights>の値、`rule`パラメーター。  たとえば場合、`rule`パラメーターを指定します、<xref:System.Security.AccessControl.FileSystemRights.Read>値、および<xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A>メソッドを指定するのと同じ監査規則の検索、<xref:System.Security.AccessControl.FileSystemRights.Read>値と同じルールが上書きされます。  場合、<xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A>メソッドを指定するのと同じ監査規則の検索、<xref:System.Security.AccessControl.FileSystemRights.Write>値と同じルールは上書きされません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rule" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>