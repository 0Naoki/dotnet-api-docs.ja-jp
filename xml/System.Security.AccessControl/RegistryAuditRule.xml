<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d3838065c4af36eb67c8530a5fac0850ce3cfbd" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70515513" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type RegistryAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザーまたはグループについて監査するアクセス権セットを表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.RegistryAuditRule>クラスは、レジストリキーの Windows アクセス制御セキュリティを管理するために .NET Framework が提供するクラスのセットの1つです。 これらのクラスの概要と、基になる Windows アクセス制御構造との関係に<xref:System.Security.AccessControl.RegistrySecurity>ついては、「」を参照してください。  
  
> [!NOTE]
>  Windows アクセス制御セキュリティは、レジストリキーにのみ適用できます。 キーに格納されている個々のキーと値のペアには適用できません。  
  
 現在レジストリキーに適用されている監査規則の一覧を取得するに<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>は、メソッドを<xref:System.Security.AccessControl.RegistrySecurity>使用してオブジェクトを取得<xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>し、そのメソッドを使用<xref:System.Security.AccessControl.RegistryAuditRule>してオブジェクトのコレクションを取得します。  
  
 <xref:System.Security.AccessControl.RegistryAuditRule>オブジェクトは、基になる随意アクセス制御リスト (DACL) のアクセス制御エントリと一対一でマップされません。 レジストリキーのすべての監査規則のセットを取得すると、そのセットには、すべてのアクセス制御エントリを表すために現在必要な規則の最小数が含まれます。  
  
> [!NOTE]
>  ルールを適用および削除すると、基になるアクセス制御エントリが変わります。 可能であれば、ルール内の情報を結合して、アクセス制御エントリの最小数を維持します。 したがって、現在のルールの一覧を読むと、追加したすべてのルールの一覧とまったく同じように表示されない場合があります。  
  
 オブジェクト<xref:System.Security.AccessControl.RegistryAuditRule>を使用して、ユーザーまたはグループに対して監査するアクセス権を指定します。 レジストリキーに規則を適用するには、 <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>メソッドを使用して<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトを取得します。 規則を追加するメソッドを使用して<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> オブジェクトを変更し、メソッドを使用してセキュリティオブジェクトを再アタッチします。 <xref:System.Security.AccessControl.RegistrySecurity>  
  
> [!IMPORTANT]
>  <xref:System.Security.AccessControl.RegistrySecurity>オブジェクトに加えた変更は、変更されたセキュリティオブジェクトをレジストリキーに割り当てるために<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>メソッドを呼び出すまで、レジストリキーのアクセスレベルには影響しません。  
  
 <xref:System.Security.AccessControl.RegistryAuditRule>オブジェクトは変更できません。 レジストリキーのセキュリティは、 <xref:System.Security.AccessControl.RegistrySecurity>クラスのメソッドを使用して規則を追加または削除することによって変更されます。これを行うと、基になるアクセス制御エントリが変更されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">規則の適用対象となるユーザーまたはグループ。 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</param>
        <param name="registryRights">監査するアクセスの種類を指定する <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</param>
        <param name="inheritanceFlags">監査規則を現在のキーのサブキーに適用するかどうかを指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 値のビットごとの組み合わせ。</param>
        <param name="propagationFlags">継承された監査規則を現在のキーのサブ キーに反映させる方法に影響する <see cref="T:System.Security.AccessControl.PropagationFlags" /> 値のビットごとの組み合わせ。</param>
        <param name="flags">成功、失敗、またはその両方のいずれを監査するかを示す <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のビットごとの組み合わせ。</param>
        <summary>監査するユーザーまたはグループ、監査する権限、継承を考慮するかどうか、成功、失敗、またはその両方のいずれを監査するかを指定して、<see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべてのレジストリキーはコンテナーであるため、レジストリキーに対して意味のある唯一<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>の継承フラグがフラグです。 このフラグが指定されていない場合、伝達フラグは無視され、直接のキーのみが影響を受けます。 フラグが指定されている場合、ルールは次の表に示すように反映されます。 この表では、子サブキー CS と孫サブキー GS を持つサブキーがあることを前提としています。 つまり、孫サブキーへのパスは、  
  
|伝達フラグ|S|同時|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|x|x|x|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|x|x||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||x|x|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>、 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||x||  
  
 孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。  
  
 たとえば<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 、に`inheritanceFlags`フラグが指定されていて<xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 、に`propagationFlags`反映フラグが指定されている場合、この規則は直接のサブキーには適用されませんが、すべての直接の子サブキーとすべてのサブキーに適用されます。これらのメンバーにはが含まれます。  
  
> [!NOTE]
>  に<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>フラグを指定することも`inheritanceFlags`できますが、そのような点はありません。 アクセス制御のために、サブキーの名前と値のペアは個別のオブジェクトではありません。 名前と値のペアへのアクセス権は、サブキーの権限によって制御されます。 さらに、すべてのサブキーはコンテナーであるため (つまり、他のサブキーを含めることができ<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>ます)、フラグの影響を受けません。 最後に、 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグを指定すると、互換性のある規則の通常の組み合わせが妨げられるため、規則の保守が不必要に複雑になります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="eventRights" /> に無効な値が指定されています。  
  
- または - 
 <paramref name="flags" /> に無効な値が指定されています。  
  
- または - 
 <paramref name="inheritanceFlags" /> に無効な値が指定されています。  
  
または 
 <paramref name="propagationFlags" /> に無効な値が指定されています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> が <see langword="null" /> です。  
  
または 
 <paramref name="registryRights" /> が 0 です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">規則の適用対象となるユーザー名またはグループ名。</param>
        <param name="registryRights">監査するアクセスの種類を指定する <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</param>
        <param name="inheritanceFlags">監査規則を現在のキーのサブキーに適用するかどうかを指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> フラグの組み合わせ。</param>
        <param name="propagationFlags">継承された監査規則を現在のキーのサブ キーに反映させる方法に影響する <see cref="T:System.Security.AccessControl.PropagationFlags" /> フラグの組み合わせ。</param>
        <param name="flags">成功、失敗、またはその両方のいずれを監査するかを示す <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のビットごとの組み合わせ。</param>
        <summary>監査するユーザーまたはグループの名前、監査する権限、継承を考慮するかどうか、成功、失敗、またはその両方のいずれを監査するかを指定して、<see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべてのレジストリキーはコンテナーであるため、レジストリキーに対して意味のある唯一<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>の継承フラグがフラグです。 このフラグが指定されていない場合、伝達フラグは無視され、直接のキーのみが影響を受けます。 フラグが指定されている場合、ルールは次の表に示すように反映されます。 この表では、子サブキー CS と孫サブキー GS を持つサブキーがあることを前提としています。 つまり、孫サブキーへのパスは、  
  
|伝達フラグ|S|同時|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|x|x|x|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|x|x||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||x|x|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>、 <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||x||  
  
 孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。  
  
 たとえば<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> 、に`inheritanceFlags`フラグが指定されていて<xref:System.Security.AccessControl.PropagationFlags.InheritOnly> 、に`propagationFlags`反映フラグが指定されている場合、この規則は直接のサブキーには適用されませんが、すべての直接の子サブキーとすべてのサブキーに適用されます。これらのメンバーにはが含まれます。  
  
> [!NOTE]
>  に<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>フラグを指定することも`inheritanceFlags`できますが、そのような点はありません。 アクセス制御のために、サブキーの名前と値のペアは個別のオブジェクトではありません。 名前と値のペアへのアクセス権は、サブキーの権限によって制御されます。 さらに、すべてのサブキーはコンテナーであるため (つまり、他のサブキーを含めることができ<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>ます)、フラグの影響を受けません。 最後に、 <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグを指定すると、互換性のある規則の通常の組み合わせが妨げられるため、規則の保守が不必要に複雑になります。  
  
 このコンストラクターは、 <xref:System.Security.Principal.NTAccount> <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>コンストラクターに渡し`identity` 、新しく作成された<xref:System.Security.Principal.NTAccount>オブジェクトを<xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29>コンストラクターに渡すことによって、オブジェクトを作成することと同じです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="eventRights" /> に無効な値が指定されています。  
  
または 
 <paramref name="flags" /> に無効な値が指定されています。  
  
- または - 
 <paramref name="inheritanceFlags" /> に無効な値が指定されています。  
  
- または - 
 <paramref name="propagationFlags" /> に無効な値が指定されています。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="registryRights" /> が 0 です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="identity" /> は <see langword="null" />です。  
  
- または - 
 <paramref name="identity" /> は長さゼロの文字列です。  
  
- または - 
 <paramref name="identity" /> が 512 文字を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>監査規則の影響を受けるアクセス権を取得します。</summary>
        <value>監査規則の影響を受ける権限を示す <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.RegistryAuditRule>オブジェクトは変更できません。 別のユーザー、別の権限、または別のフラグの<xref:System.Security.AccessControl.AuditFlags>組み合わせを表す新しい監査規則を作成できますが、既存の監査規則を変更することはできません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
