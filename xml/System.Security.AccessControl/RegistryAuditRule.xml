<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f9a178fd0f55f115855c943b600490aac66f873" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36532324" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type RegistryAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="86a94-101">Represents a set of access rights to be audited for a user or group.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86a94-101">Represents a set of access rights to be audited for a user or group.</span>
      </span>
      <span data-ttu-id="86a94-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="86a94-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a94-103"><xref:System.Security.AccessControl.RegistryAuditRule>クラスは、一連のレジストリ キーの Windows アクセス制御セキュリティを管理するため、.NET Framework が提供するクラスのいずれか。</span><span class="sxs-lookup"><span data-stu-id="86a94-103">The <xref:System.Security.AccessControl.RegistryAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="86a94-104">これらのクラスと、基になる Windows アクセス制御構造との関係の概要については、次を参照してください。<xref:System.Security.AccessControl.RegistrySecurity>です。</span><span class="sxs-lookup"><span data-stu-id="86a94-104">For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86a94-105">Windows のアクセス制御セキュリティは、レジストリ キーにのみ適用できます。</span><span class="sxs-lookup"><span data-stu-id="86a94-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="86a94-106">キーに格納されている個別のキー/値ペアを適用することはできません。</span><span class="sxs-lookup"><span data-stu-id="86a94-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="86a94-107">レジストリ キーに現在適用されている監査規則の一覧を取得する、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトを使用して、その<xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>メソッドのコレクションを取得する<xref:System.Security.AccessControl.RegistryAuditRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="86a94-107">To get a list of the audit rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAuditRule> objects.</span></span>  
  
 <span data-ttu-id="86a94-108"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは基になる随意アクセス制御リスト (DACL) でアクセス制御エントリを一対一でマップしません。</span><span class="sxs-lookup"><span data-stu-id="86a94-108"><xref:System.Security.AccessControl.RegistryAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="86a94-109">セットを取得する場合は、すべての監査レジストリ キーの規則、セットには、すべてのアクセス制御エントリを表すために必要な現在のルールの最小数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="86a94-109">When you get the set of all audit rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86a94-110">基になるアクセス制御エントリは変更を適用して規則を削除するとします。</span><span class="sxs-lookup"><span data-stu-id="86a94-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="86a94-111">規則の情報は、アクセス制御エントリの最小数を維持するために可能な場合は、結合されます。</span><span class="sxs-lookup"><span data-stu-id="86a94-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="86a94-112">したがって、現在のルールの一覧を読み取るときに、追加したすべてのルールの一覧とまったく同じ体裁に可能性がありますとは限りません。</span><span class="sxs-lookup"><span data-stu-id="86a94-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="86a94-113">使用して<xref:System.Security.AccessControl.RegistryAuditRule>アクセス権をユーザーまたはグループの監査を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="86a94-113">Use <xref:System.Security.AccessControl.RegistryAuditRule> objects to specify access rights to be audited for a user or group.</span></span> <span data-ttu-id="86a94-114">レジストリ キーにルールを適用するには、使用、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="86a94-114">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="86a94-115">変更、 <xref:System.Security.AccessControl.RegistrySecurity> 、ルールを追加し、使用してそのメソッドを使用して、オブジェクト、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>セキュリティ オブジェクトを再アタッチするメソッド。</span><span class="sxs-lookup"><span data-stu-id="86a94-115">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="86a94-116">変更を加える、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトには影響しません、レジストリ キーのアクセス レベルが呼び出されるまで、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>レジストリ キーには、変更されたセキュリティ オブジェクトを割り当てる方法です。</span><span class="sxs-lookup"><span data-stu-id="86a94-116">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="86a94-117"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="86a94-117"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="86a94-118">メソッドを使用して変更するレジストリ キーのセキュリティ、<xref:System.Security.AccessControl.RegistrySecurity>ルールを追加または削除するクラスです。 これを行うと、基になるアクセス制御エントリが変更されます。</span><span class="sxs-lookup"><span data-stu-id="86a94-118">Security for a registry key is modified by using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="86a94-119">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-119">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="86a94-120">The user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-120">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="86a94-121">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-121">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="86a94-122">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-122">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="86a94-123">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying whether the audit rule applies to subkeys of the current key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-123">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying whether the audit rule applies to subkeys of the current key.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="86a94-124">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that affect the way an inherited audit rule is propagated to subkeys of the current key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-124">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that affect the way an inherited audit rule is propagated to subkeys of the current key.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="86a94-125">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-125">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a94-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a94-127">すべてのレジストリ キーには、コンテナーがあるためはレジストリ キーの意味のある唯一の継承フラグはに、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="86a94-127">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="86a94-128">このフラグが指定されていない場合、伝達フラグは無視され、直接のキーだけが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="86a94-128">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="86a94-129">フラグが存在する場合は、次の表に示すように、規則が反映されます。</span><span class="sxs-lookup"><span data-stu-id="86a94-129">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="86a94-130">テーブルでは、子サブキー CS と孫サブキー GS の S サブキーがあると仮定します。</span><span class="sxs-lookup"><span data-stu-id="86a94-130">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="86a94-131">つまり、孫サブキーのパスは、S\CS\GS がします。</span><span class="sxs-lookup"><span data-stu-id="86a94-131">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="86a94-132">伝達フラグ</span><span class="sxs-lookup"><span data-stu-id="86a94-132">Propagation flags</span></span>|<span data-ttu-id="86a94-133">S</span><span class="sxs-lookup"><span data-stu-id="86a94-133">S</span></span>|<span data-ttu-id="86a94-134">CS</span><span class="sxs-lookup"><span data-stu-id="86a94-134">CS</span></span>|<span data-ttu-id="86a94-135">GS</span><span class="sxs-lookup"><span data-stu-id="86a94-135">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="86a94-136">x</span><span class="sxs-lookup"><span data-stu-id="86a94-136">X</span></span>|<span data-ttu-id="86a94-137">X</span><span class="sxs-lookup"><span data-stu-id="86a94-137">X</span></span>|<span data-ttu-id="86a94-138">X</span><span class="sxs-lookup"><span data-stu-id="86a94-138">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="86a94-139">X</span><span class="sxs-lookup"><span data-stu-id="86a94-139">X</span></span>|<span data-ttu-id="86a94-140">X</span><span class="sxs-lookup"><span data-stu-id="86a94-140">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="86a94-141">X</span><span class="sxs-lookup"><span data-stu-id="86a94-141">X</span></span>|<span data-ttu-id="86a94-142">x</span><span class="sxs-lookup"><span data-stu-id="86a94-142">X</span></span>|  
|<span data-ttu-id="86a94-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="86a94-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="86a94-144">x</span><span class="sxs-lookup"><span data-stu-id="86a94-144">X</span></span>||  
  
 <span data-ttu-id="86a94-145">孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。</span><span class="sxs-lookup"><span data-stu-id="86a94-145">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="86a94-146">たとえば場合、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグが指定されて`inheritanceFlags`と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>伝達フラグが指定されて`propagationFlags`、このルールは、イミディ エイトのサブキーには適用されませんが、すべてのサブキーとそのすべての直接の子サブキーに適用は含まれます。</span><span class="sxs-lookup"><span data-stu-id="86a94-146">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86a94-147">指定できますが、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>を示すフラグ`inheritanceFlags`、意味がないようにします。</span><span class="sxs-lookup"><span data-stu-id="86a94-147">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="86a94-148">アクセス制御のため、サブキーの名前と値のペアは別個のオブジェクト</span><span class="sxs-lookup"><span data-stu-id="86a94-148">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="86a94-149">名前/値のペアにアクセス権は、サブキーの権限によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="86a94-149">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="86a94-150">さらに、すべてのサブキーがコンテナーであるため (つまり、ことが含まれているその他のサブキーには) を受けない、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグ。</span><span class="sxs-lookup"><span data-stu-id="86a94-150">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="86a94-151">最後に、指定する、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>互換性のあるルールの通常の組み合わせに支障があるためにフラグが、ルールのメンテナンスに不必要に複雑にできます。</span><span class="sxs-lookup"><span data-stu-id="86a94-151">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86a94-152">
            <paramref name="eventRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-152">
              <paramref name="eventRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="86a94-153">-or-  <paramref name="flags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-153">-or-  <paramref name="flags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="86a94-154">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-154">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="86a94-155">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-155">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86a94-156">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-156">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="86a94-157">-or-  <paramref name="registryRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-157">-or-  <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86a94-158">
            <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-158">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="86a94-159">The name of the user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-159">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="86a94-160">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-160">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="86a94-161">A combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags that specifies whether the audit rule applies to subkeys of the current key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-161">A combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags that specifies whether the audit rule applies to subkeys of the current key.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="86a94-162">A combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags that affect the way an inherited audit rule is propagated to subkeys of the current key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-162">A combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags that affect the way an inherited audit rule is propagated to subkeys of the current key.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="86a94-163">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-163">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="86a94-164">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the name of the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-164">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the name of the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a94-165">すべてのレジストリ キーには、コンテナーがあるためはレジストリ キーの意味のある唯一の継承フラグはに、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="86a94-165">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="86a94-166">このフラグが指定されていない場合、伝達フラグは無視され、直接のキーだけが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="86a94-166">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="86a94-167">フラグが存在する場合は、次の表に示すように、規則が反映されます。</span><span class="sxs-lookup"><span data-stu-id="86a94-167">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="86a94-168">テーブルでは、子サブキー CS と孫サブキー GS の S サブキーがあると仮定します。</span><span class="sxs-lookup"><span data-stu-id="86a94-168">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="86a94-169">つまり、孫サブキーのパスは、S\CS\GS がします。</span><span class="sxs-lookup"><span data-stu-id="86a94-169">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="86a94-170">伝達フラグ</span><span class="sxs-lookup"><span data-stu-id="86a94-170">Propagation flags</span></span>|<span data-ttu-id="86a94-171">S</span><span class="sxs-lookup"><span data-stu-id="86a94-171">S</span></span>|<span data-ttu-id="86a94-172">CS</span><span class="sxs-lookup"><span data-stu-id="86a94-172">CS</span></span>|<span data-ttu-id="86a94-173">GS</span><span class="sxs-lookup"><span data-stu-id="86a94-173">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="86a94-174">x</span><span class="sxs-lookup"><span data-stu-id="86a94-174">X</span></span>|<span data-ttu-id="86a94-175">X</span><span class="sxs-lookup"><span data-stu-id="86a94-175">X</span></span>|<span data-ttu-id="86a94-176">X</span><span class="sxs-lookup"><span data-stu-id="86a94-176">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="86a94-177">X</span><span class="sxs-lookup"><span data-stu-id="86a94-177">X</span></span>|<span data-ttu-id="86a94-178">X</span><span class="sxs-lookup"><span data-stu-id="86a94-178">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="86a94-179">X</span><span class="sxs-lookup"><span data-stu-id="86a94-179">X</span></span>|<span data-ttu-id="86a94-180">x</span><span class="sxs-lookup"><span data-stu-id="86a94-180">X</span></span>|  
|<span data-ttu-id="86a94-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="86a94-181"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="86a94-182">x</span><span class="sxs-lookup"><span data-stu-id="86a94-182">X</span></span>||  
  
 <span data-ttu-id="86a94-183">孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。</span><span class="sxs-lookup"><span data-stu-id="86a94-183">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="86a94-184">たとえば場合、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグが指定されて`inheritanceFlags`と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>伝達フラグが指定されて`propagationFlags`、このルールは、イミディ エイトのサブキーには適用されませんが、すべてのサブキーとそのすべての直接の子サブキーに適用は含まれます。</span><span class="sxs-lookup"><span data-stu-id="86a94-184">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="86a94-185">指定できますが、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>を示すフラグ`inheritanceFlags`、意味がないようにします。</span><span class="sxs-lookup"><span data-stu-id="86a94-185">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="86a94-186">アクセス制御のため、サブキーの名前と値のペアは別個のオブジェクト</span><span class="sxs-lookup"><span data-stu-id="86a94-186">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="86a94-187">名前/値のペアにアクセス権は、サブキーの権限によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="86a94-187">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="86a94-188">さらに、すべてのサブキーがコンテナーであるため (つまり、ことが含まれているその他のサブキーには) を受けない、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグ。</span><span class="sxs-lookup"><span data-stu-id="86a94-188">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="86a94-189">最後に、指定する、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>互換性のあるルールの通常の組み合わせに支障があるためにフラグが、ルールのメンテナンスに不必要に複雑にできます。</span><span class="sxs-lookup"><span data-stu-id="86a94-189">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 <span data-ttu-id="86a94-190">このコンス トラクターを作成するのには、<xref:System.Security.Principal.NTAccount>を渡すことによって、オブジェクト`identity`を<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、および新しく作成された渡す<xref:System.Security.Principal.NTAccount>オブジェクトを<xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="86a94-190">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="86a94-191">
            <paramref name="eventRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-191">
              <paramref name="eventRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="86a94-192">-or-  <paramref name="flags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-192">-or-  <paramref name="flags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="86a94-193">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-193">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="86a94-194">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-194">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="86a94-195">
            <paramref name="registryRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-195">
              <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="86a94-196">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-196">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="86a94-197">-or-  <paramref name="identity" /> is a zero-length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-197">-or-  <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="86a94-198">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-198">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="86a94-199">Gets the access rights affected by the audit rule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-199">Gets the access rights affected by the audit rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="86a94-200">ビットごとの組み合わせ<see cref="T:System.Security.AccessControl.RegistryRights" />監査規則によって影響を受ける権限を示す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="86a94-200">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values that indicates the rights affected by the audit rule.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86a94-201"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="86a94-201"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="86a94-202">別のユーザー、別の権限、またはの異なる組み合わせを表す新しい監査規則を作成する<xref:System.Security.AccessControl.AuditFlags>フラグ、ですが、既存の監査規則を変更できません。</span><span class="sxs-lookup"><span data-stu-id="86a94-202">You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>