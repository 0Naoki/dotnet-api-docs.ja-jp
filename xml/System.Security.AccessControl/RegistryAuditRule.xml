<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="83f022566eb2692070dab906815550254b94613f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490146" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザーまたはグループについて監査するアクセス権セットを表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.RegistryAuditRule>クラスは、一連のレジストリ キーの Windows アクセス制御セキュリティを管理するため、.NET Framework が提供するクラスのいずれか。 これらのクラスと、基になる Windows アクセス制御構造との関係の概要については、次を参照してください。<xref:System.Security.AccessControl.RegistrySecurity>です。  
  
> [!NOTE]
>  Windows のアクセス制御セキュリティは、レジストリ キーにのみ適用できます。 キーに格納されている個別のキー/値ペアを適用することはできません。  
  
 レジストリ キーに現在適用されている監査規則の一覧を取得する、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトを使用して、その<xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>メソッドのコレクションを取得する<xref:System.Security.AccessControl.RegistryAuditRule>オブジェクト。  
  
 <xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは基になる随意アクセス制御リスト (DACL) でアクセス制御エントリを一対一でマップしません。 セットを取得する場合は、すべての監査レジストリ キーの規則、セットには、すべてのアクセス制御エントリを表すために必要な現在のルールの最小数が含まれています。  
  
> [!NOTE]
>  基になるアクセス制御エントリは変更を適用して規則を削除するとします。 規則の情報は、アクセス制御エントリの最小数を維持するために可能な場合は、結合されます。 したがって、現在のルールの一覧を読み取るときに、追加したすべてのルールの一覧とまったく同じ体裁に可能性がありますとは限りません。  
  
 使用して<xref:System.Security.AccessControl.RegistryAuditRule>アクセス権をユーザーまたはグループの監査を指定するオブジェクト。 レジストリ キーにルールを適用するには、使用、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクト。 変更、 <xref:System.Security.AccessControl.RegistrySecurity> 、ルールを追加し、使用してそのメソッドを使用して、オブジェクト、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>セキュリティ オブジェクトを再アタッチするメソッド。  
  
> [!IMPORTANT]
>  変更を加える、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトには影響しません、レジストリ キーのアクセス レベルが呼び出されるまで、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>レジストリ キーには、変更されたセキュリティ オブジェクトを割り当てる方法です。  
  
 <xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは変更できません。 メソッドを使用して変更するレジストリ キーのセキュリティ、<xref:System.Security.AccessControl.RegistrySecurity>ルールを追加または削除するクラスです。 これを行うと、基になるアクセス制御エントリが変更されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">規則の適用対象となるユーザーまたはグループ。 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</param>
        <param name="registryRights">監査するアクセスの種類を指定する <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</param>
        <param name="inheritanceFlags">監査規則を現在のキーのサブキーに適用するかどうかを指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 値のビットごとの組み合わせ。</param>
        <param name="propagationFlags">継承された監査規則を現在のキーのサブ キーに反映させる方法に影響する <see cref="T:System.Security.AccessControl.PropagationFlags" /> 値のビットごとの組み合わせ。</param>
        <param name="flags">成功、失敗、またはその両方のいずれを監査するかを示す <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のビットごとの組み合わせ。</param>
        <summary>監査するユーザーまたはグループ、監査する権限、継承を考慮するかどうか、成功、失敗、またはその両方のいずれを監査するかを指定して、<see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべてのレジストリ キーには、コンテナーがあるためはレジストリ キーの意味のある唯一の継承フラグはに、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>フラグ。 このフラグが指定されていない場合、伝達フラグは無視され、直接のキーだけが影響を受けます。 フラグが存在する場合は、次の表に示すように、規則が反映されます。 テーブルでは、子サブキー CS と孫サブキー GS の S サブキーがあると仮定します。 つまり、孫サブキーのパスは、S\CS\GS がします。  
  
|伝達フラグ|S|CS|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|x|x|x|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|x|x||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||x|x|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||x||  
  
 孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。  
  
 たとえば場合、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグが指定されて`inheritanceFlags`と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>伝達フラグが指定されて`propagationFlags`すると、このルールは、イミディ エイトのサブキーには適用されませんはすべての直接の子サブキーしをすべてのサブキーが含まれています。  
  
> [!NOTE]
>  指定できますが、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>を示すフラグ`inheritanceFlags`、意味がないようにします。 アクセス制御のため、サブキーの名前と値のペアは別個のオブジェクト 名前/値のペアにアクセス権は、サブキーの権限によって制御されます。 さらに、すべてのサブキーがコンテナーであるため (つまり、ことが含まれているその他のサブキーには) を受けない、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグ。 最後に、指定する、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>互換性のあるルールの通常の組み合わせに支障があるためにフラグが、ルールのメンテナンスに不必要に複雑にできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> に無効な値が指定されています。  
  
 - または -  
  
 <paramref name="flags" /> に無効な値が指定されています。  
  
 - または -  
  
 <paramref name="inheritanceFlags" /> に無効な値が指定されています。  
  
 - または -  
  
 <paramref name="propagationFlags" /> に無効な値が指定されています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> は <see langword="null" />です。  
  
 - または -  
  
 <paramref name="registryRights" /> が 0 です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">規則の適用対象となるユーザー名またはグループ名。</param>
        <param name="registryRights">監査するアクセスの種類を指定する <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</param>
        <param name="inheritanceFlags">監査規則を現在のキーのサブキーに適用するかどうかを指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> フラグの組み合わせ。</param>
        <param name="propagationFlags">継承された監査規則を現在のキーのサブ キーに反映させる方法に影響する <see cref="T:System.Security.AccessControl.PropagationFlags" /> フラグの組み合わせ。</param>
        <param name="flags">成功、失敗、またはその両方のいずれを監査するかを示す <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のビットごとの組み合わせ。</param>
        <summary>監査するユーザーまたはグループの名前、監査する権限、継承を考慮するかどうか、成功、失敗、またはその両方のいずれを監査するかを指定して、<see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべてのレジストリ キーには、コンテナーがあるためはレジストリ キーの意味のある唯一の継承フラグはに、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>フラグ。 このフラグが指定されていない場合、伝達フラグは無視され、直接のキーだけが影響を受けます。 フラグが存在する場合は、次の表に示すように、規則が反映されます。 テーブルでは、子サブキー CS と孫サブキー GS の S サブキーがあると仮定します。 つまり、孫サブキーのパスは、S\CS\GS がします。  
  
|伝達フラグ|S|CS|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|x|x|x|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|x|x||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||x|x|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||x||  
  
 孫サブキーのパターンは、孫サブキーに含まれるすべてのサブキーを制御します。  
  
 たとえば場合、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグが指定されて`inheritanceFlags`と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>伝達フラグが指定されて`propagationFlags`すると、このルールは、イミディ エイトのサブキーには適用されませんはすべての直接の子サブキーしをすべてのサブキーが含まれています。  
  
> [!NOTE]
>  指定できますが、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>を示すフラグ`inheritanceFlags`、意味がないようにします。 アクセス制御のため、サブキーの名前と値のペアは別個のオブジェクト 名前/値のペアにアクセス権は、サブキーの権限によって制御されます。 さらに、すべてのサブキーがコンテナーであるため (つまり、ことが含まれているその他のサブキーには) を受けない、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグ。 最後に、指定する、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>互換性のあるルールの通常の組み合わせに支障があるためにフラグが、ルールのメンテナンスに不必要に複雑にできます。  
  
 このコンス トラクターを作成するのには、<xref:System.Security.Principal.NTAccount>を渡すことによって、オブジェクト`identity`を<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、および新しく作成された渡す<xref:System.Security.Principal.NTAccount>オブジェクトを<xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29>コンス トラクターです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> に無効な値が指定されています。  
  
 - または -  
  
 <paramref name="flags" /> に無効な値が指定されています。  
  
 - または -  
  
 <paramref name="inheritanceFlags" /> に無効な値が指定されています。  
  
 - または -  
  
 <paramref name="propagationFlags" /> に無効な値が指定されています。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="registryRights" /> が 0 です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> は <see langword="null" />です。  
  
 - または -  
  
 <paramref name="identity" /> は長さゼロの文字列です。  
  
 - または -  
  
 <paramref name="identity" /> が 512 文字を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>監査規則の影響を受けるアクセス権を取得します。</summary>
        <value>監査規則の影響を受ける権限を示す <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは変更できません。 別のユーザー、別の権限、またはの異なる組み合わせを表す新しい監査規則を作成する<xref:System.Security.AccessControl.AuditFlags>フラグ、ですが、既存の監査規則を変更できません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>