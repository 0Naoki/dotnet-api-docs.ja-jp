<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61f2793bf2dc14f67d723bfba88158a677c9ece3" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46690977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type RegistryAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bbd35-101">ユーザーまたはグループについて監査するアクセス権セットを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bbd35-101">Represents a set of access rights to be audited for a user or group.</span>
      </span>
      <span data-ttu-id="bbd35-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bbd35-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbd35-103"><xref:System.Security.AccessControl.RegistryAuditRule>クラスは、一連のレジストリ キーの Windows アクセス制御セキュリティを管理するため、.NET Framework が提供するクラスの 1 つです。</span><span class="sxs-lookup"><span data-stu-id="bbd35-103">The <xref:System.Security.AccessControl.RegistryAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="bbd35-104">これらのクラスとそれらのリレーションシップを基になる Windows アクセス制御構造の概要については、次を参照してください。<xref:System.Security.AccessControl.RegistrySecurity>します。</span><span class="sxs-lookup"><span data-stu-id="bbd35-104">For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bbd35-105">Windows アクセス制御のセキュリティは、レジストリ キーにのみ適用できます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="bbd35-106">キーに格納されている個別のキー/値ペアに適用できません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="bbd35-107">レジストリ キーに現在適用されている監査規則の一覧を取得する、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>を取得するメソッド、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトし、を使用してその<xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A>メソッドのコレクションを取得する<xref:System.Security.AccessControl.RegistryAuditRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bbd35-107">To get a list of the audit rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAuditRule> objects.</span></span>  
  
 <span data-ttu-id="bbd35-108"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは、基になる随意アクセス制御リスト (DACL) のアクセス制御エントリと 1 対 1 ではマップできません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-108"><xref:System.Security.AccessControl.RegistryAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="bbd35-109">セットを取得する場合は、すべてのレジストリ キーの規則を監査、セットには、すべてのアクセス制御エントリを表すために必要な現在のルールの最小数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-109">When you get the set of all audit rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bbd35-110">適用規則を削除すると、基になるアクセス制御エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="bbd35-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="bbd35-111">規則の情報は、アクセス制御エントリの最小数を維持するために可能であれば、結合されます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="bbd35-112">したがって、現在のルールの一覧を読み取るときに、追加したすべてのルールの一覧とまったく同じように体裁に可能性がありますとは限りません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="bbd35-113">使用<xref:System.Security.AccessControl.RegistryAuditRule>ユーザーまたはグループを監査するアクセス権を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bbd35-113">Use <xref:System.Security.AccessControl.RegistryAuditRule> objects to specify access rights to be audited for a user or group.</span></span> <span data-ttu-id="bbd35-114">レジストリ キーには、ルールを適用するには、使用、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>を取得するメソッド、<xref:System.Security.AccessControl.RegistrySecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bbd35-114">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="bbd35-115">変更、 <xref:System.Security.AccessControl.RegistrySecurity> 、ルールを追加し、使用してそのメソッドを使用して、オブジェクト、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>セキュリティ オブジェクトを再アタッチするメソッド。</span><span class="sxs-lookup"><span data-stu-id="bbd35-115">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="bbd35-116">加えた変更を<xref:System.Security.AccessControl.RegistrySecurity>オブジェクトには影響しません、レジストリ キーのアクセス レベルを呼び出すまで、<xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>メソッドをレジストリ キーに変更されたセキュリティ オブジェクトを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-116">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="bbd35-117"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-117"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="bbd35-118">メソッドを使用してレジストリ キーのセキュリティが変更された、<xref:System.Security.AccessControl.RegistrySecurity>ルールを追加または削除するクラス。 これを行うと、基になるのアクセス制御エントリが変更されます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-118">Security for a registry key is modified by using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bbd35-119">
            <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-119">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="bbd35-120">規則の適用対象となるユーザーまたはグループ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-120">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="bbd35-121">
            <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-121">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="bbd35-122">監査するアクセスの種類を指定する <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-122">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="bbd35-123">監査規則を現在のキーのサブキーに適用するかどうかを指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-123">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying whether the audit rule applies to subkeys of the current key.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="bbd35-124">継承された監査規則を現在のキーのサブ キーに反映させる方法に影響する <see cref="T:System.Security.AccessControl.PropagationFlags" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-124">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that affect the way an inherited audit rule is propagated to subkeys of the current key.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="bbd35-125">成功、失敗、またはその両方のいずれを監査するかを示す <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-125">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bbd35-126">監査するユーザーまたはグループ、監査する権限、継承を考慮するかどうか、成功、失敗、またはその両方のいずれを監査するかを指定して、<see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbd35-127">レジストリ キーの意味のある唯一の継承フラグは、すべてのレジストリ キーは、コンテナー、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="bbd35-127">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bbd35-128">このフラグが指定されていない場合、伝達フラグは無視され、即時のキーのみが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-128">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="bbd35-129">フラグが存在する場合は、次の表に示すようにルールが反映されます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-129">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="bbd35-130">テーブルでは、子サブキー CS と孫サブキー GS の S サブキーがあると仮定します。</span><span class="sxs-lookup"><span data-stu-id="bbd35-130">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="bbd35-131">これは、孫のサブキーのパスでは、S\CS\GS があります。</span><span class="sxs-lookup"><span data-stu-id="bbd35-131">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="bbd35-132">フラグと反映フラグ</span><span class="sxs-lookup"><span data-stu-id="bbd35-132">Propagation flags</span></span>|<span data-ttu-id="bbd35-133">S</span><span class="sxs-lookup"><span data-stu-id="bbd35-133">S</span></span>|<span data-ttu-id="bbd35-134">CS</span><span class="sxs-lookup"><span data-stu-id="bbd35-134">CS</span></span>|<span data-ttu-id="bbd35-135">GS</span><span class="sxs-lookup"><span data-stu-id="bbd35-135">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="bbd35-136">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-136">X</span></span>|<span data-ttu-id="bbd35-137">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-137">X</span></span>|<span data-ttu-id="bbd35-138">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-138">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="bbd35-139">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-139">X</span></span>|<span data-ttu-id="bbd35-140">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-140">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="bbd35-141">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-141">X</span></span>|<span data-ttu-id="bbd35-142">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-142">X</span></span>|  
|<span data-ttu-id="bbd35-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="bbd35-143"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="bbd35-144">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-144">X</span></span>||  
  
 <span data-ttu-id="bbd35-145">孫のサブキーのパターンでは、孫のサブキーに含まれるすべてのサブキーを制御します。</span><span class="sxs-lookup"><span data-stu-id="bbd35-145">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="bbd35-146">たとえば場合、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグが指定されて`inheritanceFlags`と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>伝達フラグが指定されて`propagationFlags`、このルールは、即時のサブキーには適用されませんが、すべての直接の子サブキーをすべてのサブキーには適用含まれます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-146">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bbd35-147">指定することができますが、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>フラグの`inheritanceFlags`、その際に意味がありません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-147">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="bbd35-148">アクセス制御のためには、サブキーの名前/値ペアは別個のオブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-148">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="bbd35-149">名前/値ペアへのアクセス権は、サブキーの権限によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-149">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="bbd35-150">さらに、すべてのサブキーはコンテナーであるため (つまり、ことが含まれているその他のサブキーには) は影響しない、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグ。</span><span class="sxs-lookup"><span data-stu-id="bbd35-150">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="bbd35-151">最後に、指定する、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>互換性のある規則の標準の組み合わせに干渉するためにフラグが、ルールのメンテナンスに不必要に複雑にします。</span><span class="sxs-lookup"><span data-stu-id="bbd35-151">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bbd35-152">
            <paramref name="eventRights" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-152">
              <paramref name="eventRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="bbd35-153">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-153">-or-</span>
          </span>
          <span data-ttu-id="bbd35-154">
            <paramref name="flags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-154">
              <paramref name="flags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="bbd35-155">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-155">-or-</span>
          </span>
          <span data-ttu-id="bbd35-156">
            <paramref name="inheritanceFlags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-156">
              <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="bbd35-157">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-157">-or-</span>
          </span>
          <span data-ttu-id="bbd35-158">
            <paramref name="propagationFlags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-158">
              <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bbd35-159">
            <paramref name="identity" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-159">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bbd35-160">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-160">-or-</span>
          </span>
          <span data-ttu-id="bbd35-161">
            <paramref name="registryRights" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-161">
              <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbd35-162">
            <paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-162">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="bbd35-163">規則の適用対象となるユーザー名またはグループ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-163">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="bbd35-164">監査するアクセスの種類を指定する <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-164">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the kinds of access to audit.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="bbd35-165">監査規則を現在のキーのサブキーに適用するかどうかを指定する <see cref="T:System.Security.AccessControl.InheritanceFlags" /> フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-165">A combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags that specifies whether the audit rule applies to subkeys of the current key.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="bbd35-166">継承された監査規則を現在のキーのサブ キーに反映させる方法に影響する <see cref="T:System.Security.AccessControl.PropagationFlags" /> フラグの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-166">A combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags that affect the way an inherited audit rule is propagated to subkeys of the current key.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="bbd35-167">成功、失敗、またはその両方のいずれを監査するかを示す <see cref="T:System.Security.AccessControl.AuditFlags" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-167">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bbd35-168">監査するユーザーまたはグループの名前、監査する権限、継承を考慮するかどうか、成功、失敗、またはその両方のいずれを監査するかを指定して、<see cref="T:System.Security.AccessControl.RegistryAuditRule" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-168">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class, specifying the name of the user or group to audit, the rights to audit, whether to take inheritance into account, and whether to audit success, failure, or both.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbd35-169">レジストリ キーの意味のある唯一の継承フラグは、すべてのレジストリ キーは、コンテナー、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="bbd35-169">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="bbd35-170">このフラグが指定されていない場合、伝達フラグは無視され、即時のキーのみが影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-170">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="bbd35-171">フラグが存在する場合は、次の表に示すようにルールが反映されます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-171">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="bbd35-172">テーブルでは、子サブキー CS と孫サブキー GS の S サブキーがあると仮定します。</span><span class="sxs-lookup"><span data-stu-id="bbd35-172">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="bbd35-173">これは、孫のサブキーのパスでは、S\CS\GS があります。</span><span class="sxs-lookup"><span data-stu-id="bbd35-173">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="bbd35-174">フラグと反映フラグ</span><span class="sxs-lookup"><span data-stu-id="bbd35-174">Propagation flags</span></span>|<span data-ttu-id="bbd35-175">S</span><span class="sxs-lookup"><span data-stu-id="bbd35-175">S</span></span>|<span data-ttu-id="bbd35-176">CS</span><span class="sxs-lookup"><span data-stu-id="bbd35-176">CS</span></span>|<span data-ttu-id="bbd35-177">GS</span><span class="sxs-lookup"><span data-stu-id="bbd35-177">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="bbd35-178">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-178">X</span></span>|<span data-ttu-id="bbd35-179">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-179">X</span></span>|<span data-ttu-id="bbd35-180">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-180">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="bbd35-181">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-181">X</span></span>|<span data-ttu-id="bbd35-182">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-182">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="bbd35-183">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-183">X</span></span>|<span data-ttu-id="bbd35-184">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-184">X</span></span>|  
|<span data-ttu-id="bbd35-185"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="bbd35-185"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="bbd35-186">x</span><span class="sxs-lookup"><span data-stu-id="bbd35-186">X</span></span>||  
  
 <span data-ttu-id="bbd35-187">孫のサブキーのパターンでは、孫のサブキーに含まれるすべてのサブキーを制御します。</span><span class="sxs-lookup"><span data-stu-id="bbd35-187">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="bbd35-188">たとえば場合、<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit>フラグが指定されて`inheritanceFlags`と<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>伝達フラグが指定されて`propagationFlags`、このルールは、即時のサブキーには適用されませんが、すべての直接の子サブキーをすべてのサブキーには適用含まれます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-188">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bbd35-189">指定することができますが、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType>フラグの`inheritanceFlags`、その際に意味がありません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-189">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="bbd35-190">アクセス制御のためには、サブキーの名前/値ペアは別個のオブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-190">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="bbd35-191">名前/値ペアへのアクセス権は、サブキーの権限によって制御されます。</span><span class="sxs-lookup"><span data-stu-id="bbd35-191">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="bbd35-192">さらに、すべてのサブキーはコンテナーであるため (つまり、ことが含まれているその他のサブキーには) は影響しない、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>フラグ。</span><span class="sxs-lookup"><span data-stu-id="bbd35-192">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="bbd35-193">最後に、指定する、<xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit>互換性のある規則の標準の組み合わせに干渉するためにフラグが、ルールのメンテナンスに不必要に複雑にします。</span><span class="sxs-lookup"><span data-stu-id="bbd35-193">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 <span data-ttu-id="bbd35-194">このコンス トラクターを作成するのには、<xref:System.Security.Principal.NTAccount>オブジェクトを渡すことによって`identity`を<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、および新しく作成された渡す<xref:System.Security.Principal.NTAccount>オブジェクトを<xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="bbd35-194">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="bbd35-195">
            <paramref name="eventRights" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-195">
              <paramref name="eventRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="bbd35-196">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-196">-or-</span>
          </span>
          <span data-ttu-id="bbd35-197">
            <paramref name="flags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-197">
              <paramref name="flags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="bbd35-198">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-198">-or-</span>
          </span>
          <span data-ttu-id="bbd35-199">
            <paramref name="inheritanceFlags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-199">
              <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="bbd35-200">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-200">-or-</span>
          </span>
          <span data-ttu-id="bbd35-201">
            <paramref name="propagationFlags" /> に無効な値が指定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-201">
              <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bbd35-202">
            <paramref name="registryRights" /> が 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-202">
              <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bbd35-203">
            <paramref name="identity" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-203">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="bbd35-204">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-204">-or-</span>
          </span>
          <span data-ttu-id="bbd35-205">
            <paramref name="identity" /> は長さゼロの文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-205">
              <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="bbd35-206">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-206">-or-</span>
          </span>
          <span data-ttu-id="bbd35-207">
            <paramref name="identity" /> が 512 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-207">
              <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bbd35-208">監査規則の影響を受けるアクセス権を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-208">Gets the access rights affected by the audit rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bbd35-209">監査規則の影響を受ける権限を示す <see cref="T:System.Security.AccessControl.RegistryRights" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bbd35-209">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values that indicates the rights affected by the audit rule.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bbd35-210"><xref:System.Security.AccessControl.RegistryAuditRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-210"><xref:System.Security.AccessControl.RegistryAuditRule> objects are immutable.</span></span> <span data-ttu-id="bbd35-211">別のユーザー、別の権利またはの異なる組み合わせを表す新しい監査規則を作成する<xref:System.Security.AccessControl.AuditFlags>フラグ、ですが、既存の監査規則を変更できません。</span><span class="sxs-lookup"><span data-stu-id="bbd35-211">You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>