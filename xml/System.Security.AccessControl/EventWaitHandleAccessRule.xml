<Type Name="EventWaitHandleAccessRule" FullName="System.Security.AccessControl.EventWaitHandleAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1823bfe35d79bce296f98b040b9556abb3ba60a5" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56768372" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventWaitHandleAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventWaitHandleAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.EventWaitHandleAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventWaitHandleAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type EventWaitHandleAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9a3c-101">ユーザーまたはグループに許可されたアクセス権セットまたは拒否されたアクセス権セットを表します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="c9a3c-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a3c-103"><xref:System.Security.AccessControl.EventWaitHandleAccessRule>クラスは、一連の名前付きシステム イベントでの Windows アクセス制御セキュリティを管理するため、.NET Framework が提供するクラスの 1 つです。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-103">The <xref:System.Security.AccessControl.EventWaitHandleAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system events.</span></span> <span data-ttu-id="c9a3c-104">これらのクラスとそれらのリレーションシップを基になる Windows アクセス制御構造の概要については、次を参照してください。<xref:System.Security.AccessControl.EventWaitHandleSecurity>します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9a3c-105">Windows アクセス制御のセキュリティは、名前付きシステム イベントに対してだけ有効です。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-105">Windows access control security is meaningful only for named system events.</span></span> <span data-ttu-id="c9a3c-106">場合、<xref:System.Threading.EventWaitHandle>オブジェクトは、ローカルのイベントを表す、アクセス制御は関係ありません。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-106">If an <xref:System.Threading.EventWaitHandle> object represents a local event, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="c9a3c-107">名前付きのイベントに現在適用されている規則の一覧を取得する、<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>を取得するメソッド、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトし、を使用してその<xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A>メソッドのコレクションを取得する<xref:System.Security.AccessControl.EventWaitHandleAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-107">To get a list of the rules currently applied to a named event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span>  
  
 <span data-ttu-id="c9a3c-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> オブジェクトは、基になる随意アクセス制御リスト (DACL) のアクセス制御エントリと 1 対 1 ではマップできません。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="c9a3c-109">イベントのすべてのアクセス規則のセットを取得するときに、セットには、すべてのアクセス制御エントリを表すために必要な現在のルールの最小数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-109">When you get the set of all access rules for an event, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9a3c-110">適用規則を削除すると、基になるアクセス制御エントリを変更します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="c9a3c-111">規則の情報は、アクセス制御エントリの最小数を維持するために可能であれば、結合されます。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="c9a3c-112">したがって、現在のルールの一覧を取得すると、追加したすべてのルールの一覧とまったく同じように体裁に可能性がありますとは限りません。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-112">Thus, when you get the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="c9a3c-113">使用<xref:System.Security.AccessControl.EventWaitHandleAccessRule>ユーザーまたはグループを許可または拒否するアクセス権を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-113">Use <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects to specify the access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="c9a3c-114"><xref:System.Security.AccessControl.EventWaitHandleAccessRule>表しますへのアクセスを許可または拒否のいずれかにアクセスすることはありません両方を常にオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-114">An <xref:System.Security.AccessControl.EventWaitHandleAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="c9a3c-115">名前付きシステム イベントには、ルールを適用するには、使用、<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>を取得するメソッド、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-115">To apply a rule to a named system event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="c9a3c-116">変更、 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 、ルールを追加し、使用してそのメソッドを使用して、オブジェクト、<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>セキュリティ オブジェクトを再アタッチするメソッド。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-116">Modify the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9a3c-117">加えた変更を<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトを呼び出すまでは、名前付きイベントのアクセス レベルには影響しません、<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>メソッドを名前付きのイベントに変更されたセキュリティ オブジェクトを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-117">Changes you make to an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object do not affect the access levels of the named event until you call the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named event.</span></span>  
  
 <span data-ttu-id="c9a3c-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="c9a3c-119">メソッドを使用して、イベントのセキュリティが変更された、<xref:System.Security.AccessControl.EventWaitHandleSecurity>ルールを追加または削除するクラス。 これを行うと、基になるのアクセス制御エントリが変更されます。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-119">Security for an event is modified using the methods of the <xref:System.Security.AccessControl.EventWaitHandleSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9a3c-120">Windows 98 または Windows Millennium Edition には、同期オブジェクトのセキュリティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a3c-121">次のコード例を示します作成と使用の<xref:System.Security.AccessControl.EventWaitHandleAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="c9a3c-122">例は、作成、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-122">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="c9a3c-123">例では、現在のユーザーに対して新しい権限を許可し、新しい権限は、既存のマージされることを示す、結果を表示します<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9a3c-124">この例は、セキュリティ オブジェクトをアタッチできません、<xref:System.Threading.EventWaitHandle>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-124">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="c9a3c-125">セキュリティ オブジェクトをアタッチする例が記載<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-125">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9a3c-126"><see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="c9a3c-127">規則の適用対象となるユーザーまたはグループ。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-127">The user or group the rule applies to.</span></span> <span data-ttu-id="c9a3c-128"><see cref="T:System.Security.Principal.SecurityIdentifier" /> 型にするか、または <see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="c9a3c-129">許可されたアクセス権または拒否されたアクセス権を指定する <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-129">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="c9a3c-130">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="c9a3c-131">規則を適用するユーザーまたはグループ、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a3c-132">上で待機する、 <xref:System.Threading.EventWaitHandle> (呼び出すことによって、 <xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A>または<xref:System.Threading.WaitHandle.WaitAll%2A>メソッド)、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-132">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="c9a3c-133">呼び出すことによって、イベントを通知する、<xref:System.Threading.EventWaitHandle.Set%2A>メソッド、または呼び出すことによって、非シグナル状態にリセットする、<xref:System.Threading.EventWaitHandle.Reset%2A>メソッドでは、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-133">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="c9a3c-134">通知を<xref:System.Threading.EventWaitHandle>オブジェクトし、を呼び出して待機し、<xref:System.Threading.WaitHandle.SignalAndWait%2A>メソッドでは、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize>と<xref:System.Security.AccessControl.EventWaitHandleRights.Modify>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-134">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9a3c-135"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-135"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="c9a3c-136">または</span><span class="sxs-lookup"><span data-stu-id="c9a3c-136">-or-</span></span> 
 <span data-ttu-id="c9a3c-137"><paramref name="type" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-137"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9a3c-138"><paramref name="identity" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-138"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c9a3c-139">または</span><span class="sxs-lookup"><span data-stu-id="c9a3c-139">-or-</span></span> 
 <span data-ttu-id="c9a3c-140"><paramref name="eventRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-140"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9a3c-141"><paramref name="identity" /> が <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型ではなく、<see cref="T:System.Security.Principal.NTAccount" /> 型に変換できる <see cref="T:System.Security.Principal.SecurityIdentifier" /> などの型でもありません。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-141"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (string identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::String ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : string * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="c9a3c-142">規則の適用対象となるユーザー名またはグループ名。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-142">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="c9a3c-143">許可されたアクセス権または拒否されたアクセス権を指定する <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-143">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="c9a3c-144">アクセス権が許可されているかどうかを指定する <see cref="T:System.Security.AccessControl.AccessControlType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-144">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="c9a3c-145">規則を適用するユーザーまたはグループの名前、アクセス権、および指定したアクセス権を許可するかどうかを指定して、<see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-145">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a3c-146">上で待機する、 <xref:System.Threading.EventWaitHandle> (呼び出すことによって、 <xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A>または<xref:System.Threading.WaitHandle.WaitAll%2A>メソッド)、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-146">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="c9a3c-147">呼び出すことによって、イベントを通知する、<xref:System.Threading.EventWaitHandle.Set%2A>メソッド、または呼び出すことによって、非シグナル状態にリセットする、<xref:System.Threading.EventWaitHandle.Reset%2A>メソッドでは、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-147">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="c9a3c-148">通知を<xref:System.Threading.EventWaitHandle>オブジェクトし、を呼び出して待機し、<xref:System.Threading.WaitHandle.SignalAndWait%2A>メソッドでは、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize>と<xref:System.Security.AccessControl.EventWaitHandleRights.Modify>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-148">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 <span data-ttu-id="c9a3c-149">このコンス トラクターを作成するのには、<xref:System.Security.Principal.NTAccount>オブジェクトを渡すことによって`identity`を<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、および新しく作成された渡す<xref:System.Security.Principal.NTAccount>オブジェクトを<xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-149">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a3c-150">次のコード例は、作成するこのコンス トラクターの使用を示します<xref:System.Security.AccessControl.EventWaitHandleAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-150">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="c9a3c-151">例は、作成、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-151">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="c9a3c-152">例では、現在のユーザーに対して新しい権限を許可し、新しい権限は、既存のマージされることを示す、結果を表示します<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-152">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9a3c-153">この例は、セキュリティ オブジェクトをアタッチできません、<xref:System.Threading.EventWaitHandle>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-153">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="c9a3c-154">セキュリティ オブジェクトをアタッチする例が記載<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-154">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9a3c-155"><paramref name="eventRights" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-155"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="c9a3c-156">または</span><span class="sxs-lookup"><span data-stu-id="c9a3c-156">-or-</span></span> 
 <span data-ttu-id="c9a3c-157"><paramref name="type" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-157"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9a3c-158"><paramref name="eventRights" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-158"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9a3c-159"><paramref name="identity" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-159"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c9a3c-160">または</span><span class="sxs-lookup"><span data-stu-id="c9a3c-160">-or-</span></span> 
 <span data-ttu-id="c9a3c-161"><paramref name="identity" /> は長さゼロの文字列です。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-161"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="c9a3c-162">または</span><span class="sxs-lookup"><span data-stu-id="c9a3c-162">-or-</span></span> 
 <span data-ttu-id="c9a3c-163"><paramref name="identity" /> が 512 文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-163"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EventWaitHandleRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::EventWaitHandleRights EventWaitHandleRights { System::Security::AccessControl::EventWaitHandleRights get(); };" />
      <MemberSignature Language="F#" Value="member this.EventWaitHandleRights : System.Security.AccessControl.EventWaitHandleRights" Usage="System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9a3c-164">アクセス規則で許可されたアクセス権または拒否されたアクセス権を取得します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-164">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="c9a3c-165">アクセス規則で許可されたアクセス権または拒否されたアクセス権を表す <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-165">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9a3c-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="c9a3c-167">別のユーザー、異なる権限、または異なるを表す新しいアクセス ルールを作成する<xref:System.Security.AccessControl.AccessControlType>が、既存のアクセス規則を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-167">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9a3c-168">次のコード例は、の使用を示します、<xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A>ルールに含まれる一連の権限を表示するプロパティを<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-168">The following code example demonstrates the use of the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> property to display the rights in the set of rules contained in an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="c9a3c-169">例は、作成、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-169">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="c9a3c-170">例では、現在のユーザーに対して新しい権限を許可し、新しい権限は、既存のマージされることを示す、結果を表示します<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-170">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9a3c-171">この例は、セキュリティ オブジェクトをアタッチできません、<xref:System.Threading.EventWaitHandle>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-171">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="c9a3c-172">セキュリティ オブジェクトをアタッチする例が記載<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c9a3c-172">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>