<Type Name="EventWaitHandleAccessRule" FullName="System.Security.AccessControl.EventWaitHandleAccessRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f9b17a084af70636af63ec9df06b2f24148e87e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventWaitHandleAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventWaitHandleAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.EventWaitHandleAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventWaitHandleAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a3756-101">Represents a set of access rights allowed or denied for a user or group.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a3756-101">Represents a set of access rights allowed or denied for a user or group.</span>
      </span>
      <span data-ttu-id="a3756-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a3756-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3756-103"><xref:System.Security.AccessControl.EventWaitHandleAccessRule>クラスは、一連の名前付きシステム イベントに Windows アクセス制御セキュリティを管理するため、.NET Framework が提供するクラスのいずれか。</span><span class="sxs-lookup"><span data-stu-id="a3756-103">The <xref:System.Security.AccessControl.EventWaitHandleAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system events.</span></span> <span data-ttu-id="a3756-104">これらのクラスと、基になる Windows アクセス制御構造との関係の概要については、次を参照してください。<xref:System.Security.AccessControl.EventWaitHandleSecurity>です。</span><span class="sxs-lookup"><span data-stu-id="a3756-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3756-105">Windows アクセス制御セキュリティは、名前付きシステム イベントに対してのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="a3756-105">Windows access control security is meaningful only for named system events.</span></span> <span data-ttu-id="a3756-106">場合、<xref:System.Threading.EventWaitHandle>オブジェクトがローカル イベントを表す、アクセス制御は使用されません。</span><span class="sxs-lookup"><span data-stu-id="a3756-106">If an <xref:System.Threading.EventWaitHandle> object represents a local event, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="a3756-107">名前付きイベントに現在適用されている規則の一覧を取得する、<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトを使用して、その<xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A>メソッドのコレクションを取得する<xref:System.Security.AccessControl.EventWaitHandleAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a3756-107">To get a list of the rules currently applied to a named event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span>  
  
 <span data-ttu-id="a3756-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> オブジェクトは基になる随意アクセス制御リスト (DACL) でアクセス制御エントリを一対一でマップしません。</span><span class="sxs-lookup"><span data-stu-id="a3756-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="a3756-109">イベントのすべてのアクセス規則のセットを取得するときに、セットには、すべてのアクセス制御エントリを表すために必要な現在のルールの最小数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a3756-109">When you get the set of all access rules for an event, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3756-110">基になるアクセス制御エントリは変更を適用して規則を削除するとします。</span><span class="sxs-lookup"><span data-stu-id="a3756-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="a3756-111">規則の情報は、アクセス制御エントリの最小数を維持するために可能な場合は、結合されます。</span><span class="sxs-lookup"><span data-stu-id="a3756-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="a3756-112">したがって、現在のルールの一覧を取得すると、追加したすべてのルールの一覧とまったく同じ体裁に可能性がありますとは限りません。</span><span class="sxs-lookup"><span data-stu-id="a3756-112">Thus, when you get the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="a3756-113">使用して<xref:System.Security.AccessControl.EventWaitHandleAccessRule>ユーザーまたはグループを許可または拒否するアクセス権を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a3756-113">Use <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects to specify the access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="a3756-114"><xref:System.Security.AccessControl.EventWaitHandleAccessRule>表しますアクセスを許可または拒否にアクセスすることはありません両方を常にオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="a3756-114">An <xref:System.Security.AccessControl.EventWaitHandleAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="a3756-115">名前付きシステム イベントにルールを適用するには、使用、<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>取得するメソッド、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a3756-115">To apply a rule to a named system event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="a3756-116">変更、 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 、ルールを追加し、使用してそのメソッドを使用して、オブジェクト、<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>セキュリティ オブジェクトを再アタッチするメソッド。</span><span class="sxs-lookup"><span data-stu-id="a3756-116">Modify the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a3756-117">対して行った変更、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトが呼び出されるまで、指定したイベントのアクセス レベルには影響しません、<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>名前付きのイベントには、変更されたセキュリティ オブジェクトを割り当てる方法です。</span><span class="sxs-lookup"><span data-stu-id="a3756-117">Changes you make to an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object do not affect the access levels of the named event until you call the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named event.</span></span>  
  
 <span data-ttu-id="a3756-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="a3756-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="a3756-119">メソッドを使用して、イベントのセキュリティが変更された、<xref:System.Security.AccessControl.EventWaitHandleSecurity>ルールを追加または削除するクラスです。 これを行うと、基になるアクセス制御エントリが変更されます。</span><span class="sxs-lookup"><span data-stu-id="a3756-119">Security for an event is modified using the methods of the <xref:System.Security.AccessControl.EventWaitHandleSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3756-120">Windows 98 または Windows Millennium Edition には、同期オブジェクト上のセキュリティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a3756-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3756-121">次のコード例はの作成と使用を示しています。<xref:System.Security.AccessControl.EventWaitHandleAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a3756-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="a3756-122">例は、作成、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="a3756-122">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="a3756-123">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="a3756-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3756-124">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.EventWaitHandle>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a3756-124">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="a3756-125">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a3756-125">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a3756-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="a3756-127">The user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-127">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="a3756-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="eventRights">
          <span data-ttu-id="a3756-129">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-129">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a3756-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3756-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3756-132">上で待機する、 <xref:System.Threading.EventWaitHandle> (を呼び出して、 <xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A>または<xref:System.Threading.WaitHandle.WaitAll%2A>メソッド)、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="a3756-132">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="a3756-133">呼び出してイベントを通知する、<xref:System.Threading.EventWaitHandle.Set%2A>メソッドを呼び出すことによって unsignaled 状態にリセットしたり、<xref:System.Threading.EventWaitHandle.Reset%2A>メソッド、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="a3756-133">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="a3756-134">通知を<xref:System.Threading.EventWaitHandle>オブジェクトを呼び出すことによって待機し、<xref:System.Threading.WaitHandle.SignalAndWait%2A>メソッド、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize>と<xref:System.Security.AccessControl.EventWaitHandleRights.Modify>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="a3756-134">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a3756-135">
            <paramref name="eventRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-135">
              <paramref name="eventRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="a3756-136">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-136">-or-</span>
          </span>
          <span data-ttu-id="a3756-137">
            <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-137">
              <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a3756-138">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-138">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a3756-139">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-139">-or-</span>
          </span>
          <span data-ttu-id="a3756-140">
            <paramref name="eventRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-140">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3756-141">
            <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-141">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (string identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::String ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="a3756-142">The name of the user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-142">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="eventRights">
          <span data-ttu-id="a3756-143">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-143">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a3756-144">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-144">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3756-145">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-145">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3756-146">上で待機する、 <xref:System.Threading.EventWaitHandle> (を呼び出して、 <xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A>または<xref:System.Threading.WaitHandle.WaitAll%2A>メソッド)、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="a3756-146">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="a3756-147">呼び出してイベントを通知する、<xref:System.Threading.EventWaitHandle.Set%2A>メソッドを呼び出すことによって unsignaled 状態にリセットしたり、<xref:System.Threading.EventWaitHandle.Reset%2A>メソッド、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="a3756-147">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="a3756-148">通知を<xref:System.Threading.EventWaitHandle>オブジェクトを呼び出すことによって待機し、<xref:System.Threading.WaitHandle.SignalAndWait%2A>メソッド、ユーザーがいる必要があります<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize>と<xref:System.Security.AccessControl.EventWaitHandleRights.Modify>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="a3756-148">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 <span data-ttu-id="a3756-149">このコンス トラクターを作成するのには、<xref:System.Security.Principal.NTAccount>を渡すことによって、オブジェクト`identity`を<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>コンス トラクター、および新しく作成された渡す<xref:System.Security.Principal.NTAccount>オブジェクトを<xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="a3756-149">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3756-150">作成するこのコンス トラクターの使用を次のコード例に示します<xref:System.Security.AccessControl.EventWaitHandleAccessRule>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a3756-150">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="a3756-151">例は、作成、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="a3756-151">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="a3756-152">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="a3756-152">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3756-153">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.EventWaitHandle>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a3756-153">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="a3756-154">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a3756-154">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a3756-155">
            <paramref name="eventRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-155">
              <paramref name="eventRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="a3756-156">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-156">-or-</span>
          </span>
          <span data-ttu-id="a3756-157">
            <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-157">
              <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a3756-158">
            <paramref name="eventRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-158">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3756-159">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-159">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a3756-160">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-160">-or-</span>
          </span>
          <span data-ttu-id="a3756-161">
            <paramref name="identity" /> is a zero-length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-161">
              <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="a3756-162">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-162">-or-</span>
          </span>
          <span data-ttu-id="a3756-163">
            <paramref name="identity" /> is longer than 512 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-163">
              <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EventWaitHandleRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::EventWaitHandleRights EventWaitHandleRights { System::Security::AccessControl::EventWaitHandleRights get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3756-164">Gets the rights allowed or denied by the access rule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-164">Gets the rights allowed or denied by the access rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3756-165">ビットごとの組み合わせ<see cref="T:System.Security.AccessControl.EventWaitHandleRights" />権限を示す値を許可またはアクセス ルールによって拒否されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3756-165">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values indicating the rights allowed or denied by the access rule.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3756-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> オブジェクトは変更できません。</span><span class="sxs-lookup"><span data-stu-id="a3756-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="a3756-167">別のユーザー、異なる権限、または異なるを表す新しいアクセス ルールを作成する<xref:System.Security.AccessControl.AccessControlType>が、既存のアクセス ルールを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="a3756-167">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3756-168">使用を次のコード例に示します、<xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A>に含まれる規則のセットに権限を表示するプロパティを<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a3756-168">The following code example demonstrates the use of the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> property to display the rights in the set of rules contained in an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="a3756-169">例は、作成、<xref:System.Security.AccessControl.EventWaitHandleSecurity>オブジェクトが許可し、現在のユーザーのさまざまな権限を拒否する規則を追加し、ルールの結果のペアを表示します。</span><span class="sxs-lookup"><span data-stu-id="a3756-169">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="a3756-170">例では、現在のユーザーに対して新しい権限を許可し、新しい権限が、既存のマージされたことを示す、結果を表示<xref:System.Security.AccessControl.AccessControlType.Allow>ルール。</span><span class="sxs-lookup"><span data-stu-id="a3756-170">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a3756-171">この例では、セキュリティ オブジェクトはアタッチされません、<xref:System.Threading.EventWaitHandle>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a3756-171">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="a3756-172">セキュリティ オブジェクトをアタッチする例は含まれて<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>と<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a3756-172">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>