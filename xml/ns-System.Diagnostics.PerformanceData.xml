<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.Diagnostics.PerformanceData.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef18642fc039b9887d12fea56aa17520406ef7e8e792bc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2fc039b9887d12fea56aa17520406ef7e8e792bc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use the classes in this namespace to provide counter data.</source>
          <target state="translated">カウンター データを提供するには、この名前空間のクラスを使用します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The counters are used to expose performance metrics to consumers such as the Performance Monitor.</source>
          <target state="translated">カウンターは、パフォーマンス モニターなどのコンシューマーにパフォーマンス メトリックスを公開するために使われます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The namespace does not contain classes for consuming the counter data.</source>
          <target state="translated">名前空間には、カウンター データを使用するためのクラスは含まれません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For a complete description of the performance counters architecture, see <bpt id="p1">&lt;see href="https://msdn.microsoft.com/library/windows/desktop/aa373083\(v=vs.85\"&gt;</bpt>Performance Counters<ept id="p1">&lt;/see&gt;</ept>.aspx).</source>
          <target state="translated">パフォーマンス カウンター アーキテクチャの詳細については、「<bpt id="p1">&lt;see href="https://msdn.microsoft.com/library/windows/desktop/aa373083\(v=vs.85\"&gt;</bpt>パフォーマンス カウンター<ept id="p1">&lt;/see&gt;</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The classes in this namespace support the new architecture (version 2.0) for performance counters that was introduced in Windows Vista.</source>
          <target state="translated">この名前空間のクラスは、Windows Vista で導入されたパフォーマンス カウンターの新しいアーキテクチャ (version 2.0) をサポートします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the new architecture, the provider no longer responds to consumer requests directly, but instead simply maintains the counter data.</source>
          <target state="translated">新しいアーキテクチャでは、プロバイダーは、直接、コンシューマーの要求に応答しなくが、代わりに、カウンター データを保持するだけにします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system injects a thread into the provider's process when the provider creates an instance of the counter set; the thread is responsible for handling consumer requests.</source>
          <target state="translated">システムでは、プロバイダーは、カウンター セットのインスタンスを作成するときに、プロバイダーのプロセスにスレッドを挿入します。スレッドは、コンシューマーの要求を処理します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following steps show the process for writing a counters provider.</source>
          <target state="translated">次の手順では、カウンターのプロバイダーを作成する手順を示します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The counters that the provider provides is defined in an XML-based manifest.</source>
          <target state="translated">プロバイダーが提供するカウンターは、XML ベースのマニフェストで定義されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The counters are logically grouped into counter sets.</source>
          <target state="translated">カウンターは、カウンター セットを論理的にグループ化されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The counters within a counter set are identified by a numeric identifier that is unique within the counter set.</source>
          <target state="translated">カウンター セット内のカウンターは、カウンター セット内で一意の数値識別子によって識別されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A provider can define one or more counter sets.</source>
          <target state="translated">プロバイダーは、1 つまたは複数のカウンター セットを定義できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A counter set is identified by a Guid that is unique to a provider.</source>
          <target state="translated">カウンター セットは、プロバイダーに一意の Guid によって識別されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that if you use these classes to write your provider:</source>
          <target state="translated">場合は、プロバイダーを作成するこれらのクラスを使用することに注意してください。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback attribute of the provider element is ignored.</source>
          <target state="translated">プロバイダー要素のコールバック属性は無視されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reference value for the name attribute of the counterAttribute element is ignored.</source>
          <target state="translated">参照 counterAttribute 要素の name 属性の値は無視されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details on writing the manifest, see <bpt id="p1">[</bpt>Performance Counters Schema<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa373092\(v=vs.85\).aspx)</ept>.</source>
          <target state="translated">マニフェストの作成方法の詳細については、「<bpt id="p1">[</bpt>パフォーマンス カウンター スキーマ<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa373092\(v=vs.85\).aspx)</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>After writing your manifest, use the <bpt id="p1">[</bpt>CTRPP<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa372128\(v=vs.85\).aspx)</ept> tool to compile the manifest (ctrpp provider.man).</source>
          <target state="translated">使用して、マニフェストを作成した後、 <bpt id="p1">[</bpt>CTRPP<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa372128\(v=vs.85\).aspx)</ept>マニフェスト (ctrpp provider.man) をコンパイルするツールです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tool generates four files: .h, .c, .rc, and *_r.h.</source>
          <target state="translated">このツールは、4 つのファイルを生成: .h、.c、.rc、および * _r.h です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can ignore the .h and .c files.</source>
          <target state="translated">.H および .c ファイルを無視することができます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .rc file contains the localized strings defined in your manifest.</source>
          <target state="translated">.Rc ファイルには、マニフェストで定義されているローカライズされた文字列が含まれています。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the .rc and *_r.h files to create the compiled resource file (.res) that you include in your project.</source>
          <target state="translated">.Rc、*_r.h ファイルを使用するには、プロジェクトに含めることのコンパイル済みのリソース ファイル (.res) を作成します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following call shows how to compile the resource file:</source>
          <target state="translated">次の呼び出しは、リソース ファイルをコンパイルする方法を示しています。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you get an error that references sal.h, copy the sal.h file from your Microsoft Visual Studio, Visual C include directory to the directory you specify for the /i switch.</source>
          <target state="translated">Sal.h を参照するエラーが発生した場合は、Microsoft Visual Studio から sal.h ファイルをコピー、Visual C のインクルード ディレクトリ/i スイッチを指定するディレクトリをします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add a path to the compiled resource file (.res) to your project's Application property page.</source>
          <target state="translated">プロジェクトのアプリケーションのプロパティ ページには、コンパイル済みのリソース ファイル (.res) へのパスを追加します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write your provider.</source>
          <target state="translated">プロバイダーを記述します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following steps show the calls made by a provider:</source>
          <target state="translated">次の手順では、プロバイダーによって行われた呼び出しを示しています。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Diagnostics.PerformanceData.CounterSet.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor to define the counter set.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Diagnostics.PerformanceData.CounterSet.%23ctor%2A?displayProperty=nameWithType&gt;</ph>コンス トラクターをカウンター セットを定義します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method for each counter set defined in the manifest.</source>
          <target state="translated">マニフェストで定義されている各カウンターには、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each counter set, call one of the <ph id="ph1">&lt;xref:System.Diagnostics.PerformanceData.CounterSet.AddCounter%2A?displayProperty=nameWithType&gt;</ph> methods to add the counters to the set.</source>
          <target state="translated">各カウンター セットのいずれかを呼び出して、<ph id="ph1">&lt;xref:System.Diagnostics.PerformanceData.CounterSet.AddCounter%2A?displayProperty=nameWithType&gt;</ph>セットにカウンターを追加する方法です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method for each counter defined in the counter set.</source>
          <target state="translated">カウンター セットで定義されている各カウンターには、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance%2A?displayProperty=nameWithType&gt;</ph> method to create an instance of the counter set (an instance contains the counter data).</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance%2A?displayProperty=nameWithType&gt;</ph>メソッド (インスタンスには、カウンター データが含まれています)、カウンター セットのインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For single instance counter sets, call this method one time.</source>
          <target state="translated">1 つのインスタンスのカウンター セットは、1 回このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For multiple instance counter sets, call this method for each instance for which you need to provide counter data (use a unique name for each instance).</source>
          <target state="translated">複数のインスタンスのカウンター セットの対象のカウンター データ (各インスタンスの一意の名前を使用) を提供する必要があります。 各インスタンスに対して、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.PerformanceData.CounterSetInstance.Counters%2A?displayProperty=nameWithType&gt;</ph> property to access and set the counter data for the counter.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Diagnostics.PerformanceData.CounterSetInstance.Counters%2A?displayProperty=nameWithType&gt;</ph>プロパティにアクセスして、カウンターのカウンター データを設定します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you finish your provider, use the LodCtr tool to register the counters on the computer.</source>
          <target state="translated">完了したら、プロバイダーは、コンピューターのカウンターを登録するのに LodCtr ツールを使用します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example,</source>
          <target state="translated">たとえば、オブジェクトに適用された</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example assumes the manifest and executable file are in the current directory.</source>
          <target state="translated">この例では、マニフェストと実行可能ファイルは、現在のディレクトリにします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For complete details on using the LodCtr, see <bpt id="p1">[</bpt>Microsoft Technet<ept id="p1">](Http://Go.Microsoft.Com/FWLink/?LinkId=84000)</ept>.</source>
          <target state="translated">使用して、LodCtr 完全な詳細については、「 <bpt id="p1">[</bpt>Microsoft Technet<ept id="p1">](Http://Go.Microsoft.Com/FWLink/?LinkId=84000)</ept>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the classes in this namespace on computers that run the Windows Vista and later operating systems.</source>
          <target state="translated">Windows Vista およびそれ以降のオペレーティング システムを実行するコンピューターでこの名前空間のクラスを使用することができます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following shows a simple manifest:</source>
          <target state="translated">単純なマニフェストを次に示します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following shows a simple provider implementation for the manifest:</source>
          <target state="translated">マニフェストの簡単なプロバイダーの実装を次に示します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>