<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncryptedKeyIdentifierClause.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b727edc7fd6675e008b1a0df80db29b11b7a57a7999.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7edc7fd6675e008b1a0df80db29b11b7a57a7999</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Represents a key identifier clause that identifies an encrypted key.</source>
          <target state="translated">暗号化キーを識別するキー識別子句を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Typically, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">通常は、カスタム セキュリティ トークン サービスが作成される場合を除いて、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> を使用する必要はありません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">セキュリティ トークン サービスがセキュリティ トークンを返した場合、発行されたセキュリティ トークンには、結び付けられているセキュリティ トークンまたは結び付けられていないセキュリティ トークンへの参照が含まれます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.</source>
          <target state="translated">結び付けられている参照は、SOAP メッセージのセキュリティ ヘッダーに含まれるセキュリティ トークンを参照し、結び付けられていない参照は、SOAP メッセージのセキュリティ ヘッダーに含まれていないセキュリティ トークンを参照します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">これらの参照は、通常、発行されたセキュリティ トークンの信頼性を確認します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Use the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> class to reference an encrypted key.</source>
          <target state="translated">暗号化キーを参照するために、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause&gt;</ph> クラスを使用します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> method returns the encrypted key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> メソッドは暗号化キーを返します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>WCF accepts wrapped keys that are well formed with respect to the wire format.</source>
          <target state="translated">WCF では、適切な形式、ワイヤ形式のラップされたキーを受け入れます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>The key wrap algorithm specified on the wire is accepted and used.</source>
          <target state="translated">ネットワークで指定されたキー ラップ アルゴリズムが受け入れられ、使用されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>It is not verified to be compatible with the <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> specified by the endpoint.</source>
          <target state="translated">これがエンドポイントで指定された <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityAlgorithmSuite&gt;</ph> と互換性があるかどうかは検証されません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">暗号化されるキーを格納する <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の配列。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>Sets the value that is returned from the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> メソッドから返される値を設定します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">キーの暗号化に使用される暗号アルゴリズム。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.</source>
          <target state="translated">暗号化するキーと、キーを暗号化するために使用する暗号アルゴリズムを指定して、<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>Use the static constant strings in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id="ph2">`encryptionMethod`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> の静的定数文字列を使用して、<ph id="ph2">`encryptionMethod`</ph> パラメーターの暗号アルゴリズムを指定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> の長さがゼロです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">暗号化されるキーを格納する <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の配列。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Sets the value that is returned from the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> メソッドから返される値を設定します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">キーの暗号化に使用される暗号アルゴリズム。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.</source>
          <target state="translated">暗号化するキー、キーを暗号化するために使用する暗号アルゴリズム、および暗号化キーのキー識別子を指定して、<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>Use the static constant strings in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id="ph2">`encryptionMethod`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> の静的定数文字列を使用して、<ph id="ph2">`encryptionMethod`</ph> パラメーターの暗号アルゴリズムを指定します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> の長さがゼロです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">暗号化されるキーを格納する <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の配列。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Sets the value that is returned from the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> メソッドから返される値を設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">キーの暗号化に使用される暗号アルゴリズム。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>A user-readable name that is associated with the key specified in the <bpt id="p1">&lt;c&gt;</bpt>encryptedKey<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>encryptedKey<ept id="p1">&lt;/c&gt;</ept> パラメーターで指定したキーに関連付けられている、ユーザーが判読できる名前。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.</source>
          <target state="translated">暗号化するキー、キーを暗号化するために使用する暗号アルゴリズム、暗号化キーのキー識別子、およびユーザーが判読できる名前を指定して、<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>Use the static constant strings in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id="ph2">`encryptionMethod`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> の静的定数文字列を使用して、<ph id="ph2">`encryptionMethod`</ph> パラメーターの暗号アルゴリズムを指定します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> の長さがゼロです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">暗号化されるキーを格納する <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の配列。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value that is returned from the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> メソッドから返される値を設定します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">キーの暗号化に使用される暗号アルゴリズム。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>A user-readable name that is associated with the key specified in the <bpt id="p1">&lt;c&gt;</bpt>encryptedKey<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>encryptedKey<ept id="p1">&lt;/c&gt;</ept> パラメーターで指定したキーに関連付けられている、ユーザーが判読できる名前。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that was used to create a derived key.</source>
          <target state="translated">派生キーの作成に使用された nonce を格納する <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の配列。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value that is returned by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /&gt;</ph> メソッドから返される値を設定します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>The size of the derived key.</source>
          <target state="translated">派生キーのサイズ。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /&gt;</ph> プロパティの値を設定します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.</source>
          <target state="translated">暗号化するキー、キーを暗号化するために使用する暗号アルゴリズム、キーのキー識別子、およびユーザーが判読できる名前を指定して、<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>When the <ph id="ph1">`derivationNonce`</ph> and <ph id="ph2">`derivationLength`</ph> parameters are specified the implied derived key is used instead of the direct security key of the token.</source>
          <target state="translated"><ph id="ph1">`derivationNonce`</ph> パラメーターと <ph id="ph2">`derivationLength`</ph> パラメーターを指定した場合は、トークンの直接的なセキュリティ キーの代わりに暗黙的な派生キーが使用されます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>Use the static constant strings in the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> to specify the cryptographic algorithm for the <ph id="ph2">`encryptionMethod`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> の静的定数文字列を使用して、<ph id="ph2">`encryptionMethod`</ph> パラメーターの暗号アルゴリズムを指定します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptionMethod" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> is zero length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="encryptedKey" /&gt;</ph> の長さがゼロです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>Gets a user-readable name that is associated with the encrypted key.</source>
          <target state="translated">暗号化されたキーに関連付けられている、ユーザーが判読できる名前を取得します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>A user-readable name that is associated with the encrypted key.</source>
          <target state="translated">暗号化されたキーに関連付けられている、ユーザーが判読できる名前。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>When the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A&gt;</ph> property is serialized into XML, it is placed in the &lt;<ph id="ph2">`CarriedKeyName`</ph>&gt; element.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A&gt;</ph>プロパティを XML にシリアル化に配置されている、&lt;<ph id="ph2">`CarriedKeyName`</ph>&gt; 要素。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>For encrypted keys, the &lt;<ph id="ph1">`CarriedKeyName`</ph>&gt; element is an optional element that associates a user-readable name with a key value.</source>
          <target state="translated">暗号化されたキーの場合、&lt;<ph id="ph1">`CarriedKeyName`</ph>&gt; 要素が省略可能な要素をキー値を持つユーザーが判読できる名前を関連付けます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>This name can then be used to reference the key using the &lt;<ph id="ph1">`KeyName`</ph>&gt; element within the &lt;<ph id="ph2">`KeyInfo`</ph>&gt; element.</source>
          <target state="translated">この名前は、キーを使用して、参照するは使用して、&lt;<ph id="ph1">`KeyName`</ph>&gt; 内の要素、&lt;<ph id="ph2">`KeyInfo`</ph>&gt; 要素。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>The same &lt;<ph id="ph1">`CarriedKeyName`</ph>&gt; element value, unlike an ID value, can occur multiple times within a single document.</source>
          <target state="translated">同じ &lt;<ph id="ph1">`CarriedKeyName`</ph>&gt; ID の値とは異なり、要素の値が 1 つのドキュメント内で複数回を発生できます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
          <source>The value of the key must be the same in all &lt;<ph id="ph1">`EncryptedKey`</ph>&gt; elements identified with the same &lt;<ph id="ph2">`CarriedKeyName`</ph>&gt; name within an XML document.</source>
          <target state="translated">キーの値はすべて同じである必要があります &lt;<ph id="ph1">`EncryptedKey`</ph>&gt; 要素が同じで識別される &lt;<ph id="ph2">`CarriedKeyName`</ph>&gt; XML ドキュメント内の名前。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier">
          <source>Gets a key identifier for the encrypting key.</source>
          <target state="translated">暗号化するキーのキー識別子を取得します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph> that represents the key identifier for the encrypting key.</source>
          <target state="translated">暗号化するキーのキー識別子を表す <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
          <source>Gets the cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">キーの暗号化に使用される暗号アルゴリズムを取得します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">キーの暗号化に使用される暗号アルゴリズム。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
          <source>Typically, the value of the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A&gt;</ph> property is one of the static constant strings in the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> class.</source>
          <target state="translated">通常、<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A&gt;</ph> プロパティの値は、<ph id="ph2">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms&gt;</ph> クラスの静的定数文字列のいずれかです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
          <source>Gets the encrypted key.</source>
          <target state="translated">暗号化されたキーを取得します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the encrypted key.</source>
          <target state="translated">暗号化されたキーを格納する <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の配列。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
          <source>The array that is returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> method is a clone of the encrypted key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A&gt;</ph> メソッドによって返される配列は、暗号化されたキーの複製です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified object.</source>
          <target state="translated">このインスタンスのキー識別子が、指定したオブジェクトに等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">このインスタンスのキー識別子が、指定したキー識別句と等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> is of type <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> 型であり、暗号化キー、暗号化方法、およびユーザーが判読できる名前が現在のインスタンスと同じ場合は <ph id="ph3">&lt;see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="keyIdentifierClause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyIdentifierClause" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains a key that is encrypted.</source>
          <target state="translated">暗号化されるキーを格納する <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> の配列。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source>The cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated">キーの暗号化に使用される暗号アルゴリズム。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source>A user-readable name that is associated with the encrypted key.</source>
          <target state="translated">暗号化されたキーに関連付けられている、ユーザーが判読できる名前。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.</source>
          <target state="translated">このインスタンスのキー識別子が、指定した暗号化キー、暗号化方法、およびユーザーが判読できる名前に等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="encryptedKey" /&gt;</ph>, <ph id="ph3">&lt;paramref name="encryptionMethod" /&gt;</ph> and <ph id="ph4">&lt;paramref name="carriedKeyName" /&gt;</ph> parameters have the same values returned by the <ph id="ph5">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> method and the <ph id="ph6">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> and the <ph id="ph7">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> properties, respectively; otherwise, <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="encryptedKey" /&gt;</ph>、<ph id="ph3">&lt;paramref name="encryptionMethod" /&gt;</ph>、および <ph id="ph4">&lt;paramref name="carriedKeyName" /&gt;</ph> の各パラメーターの値が、<ph id="ph5">&lt;see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /&gt;</ph> メソッドによって返された値、<ph id="ph6">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /&gt;</ph> プロパティの値、および <ph id="ph7">&lt;see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /&gt;</ph> プロパティの値と同じ場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph8">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
          <source>Returns a string that represents the current object.</source>
          <target state="translated">現在のオブジェクトを表す文字列を返します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
          <source>The current object.</source>
          <target state="translated">現在のオブジェクト。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A&gt;</ph> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A&gt;</ph> メソッドは、暗号化キーと、キーを暗号化するために使用される暗号アルゴリズムを格納する文字列を返します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>