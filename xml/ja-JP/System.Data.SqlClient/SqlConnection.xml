<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlConnection.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c15b8df9b2f68ef2e1eb172d5b45e4a920c51cb5e87.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8df9b2f68ef2e1eb172d5b45e4a920c51cb5e87</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Represents a connection to a SQL Server database.</source>
          <target state="translated">SQL Server データベースへの接続を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>A <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object represents a unique session to a SQL Server data source.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>オブジェクトは、SQL Server データ ソースへの一意のセッションを表します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>With a client/server database system, it is equivalent to a network connection to the server.</source>
          <target state="translated">クライアント/サーバー データベース システムでは、サーバーへのネットワーク接続と同じです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is used together with <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> to increase performance when connecting to a Microsoft SQL Server database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> と共に使用する<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlDataAdapter&gt;</ph>と<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>Microsoft SQL Server データベースに接続するときにパフォーマンスを向上させる。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For all third-party SQL Server products and other OLE DB-supported data sources, use <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>.</source>
          <target state="translated">サード パーティのすべての SQL Server 製品と他の OLE DB でサポートされているデータ ソースを使用して、<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, all properties are set to their initial values.</source>
          <target state="translated">インスタンスを作成する場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>、すべてのプロパティは、初期値に設定します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> constructor.</source>
          <target state="translated">これらの値の一覧は、次を参照してください。、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>See <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> for a list of the keywords in a connection string.</source>
          <target state="translated">参照してください<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>接続文字列のキーワードの一覧についてはします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> goes out of scope, it won't be closed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>スコープの移動のうち、閉じられているされません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph>.</source>
          <target state="translated">したがって、する必要があります明示的に接続を呼び出して終了する<ph id="ph1">`Close`</ph>または<ph id="ph2">`Dispose`</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source><ph id="ph1">`Close`</ph> and <ph id="ph2">`Dispose`</ph> are functionally equivalent.</source>
          <target state="translated"><ph id="ph1">`Close`</ph> および<ph id="ph2">`Dispose`</ph>は機能的に等価です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>If the connection pooling value <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`true`</ph> or <ph id="ph3">`yes`</ph>, the underlying connection is returned back to the connection pool.</source>
          <target state="translated">値の接続プール場合<ph id="ph1">`Pooling`</ph>に設定されている<ph id="ph2">`true`</ph>または<ph id="ph3">`yes`</ph>では、基になる接続が接続プールに返されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>On the other hand, if <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`false`</ph> or <ph id="ph3">`no`</ph>, the underlying connection to the server is actually closed.</source>
          <target state="translated">その一方で場合、<ph id="ph1">`Pooling`</ph>に設定されている<ph id="ph2">`false`</ph>または<ph id="ph3">`no`</ph>では、基になるサーバーに接続が閉じられる実際にします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool.</source>
          <target state="translated">接続が接続プールからフェッチされたり接続プールに返されたりしたとき、ログイン イベントとログアウト イベントはサーバーで発生しません。これは、接続プールに返されても接続は実際には終了していないためです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
          <target state="translated">詳しくは、「<bpt id="p1">[</bpt>SQL Server の接続プール (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>To ensure that connections are always closed, open the connection inside of a <ph id="ph1">`using`</ph> block, as shown in the following code fragment.</source>
          <target state="translated">接続が常に切断させるには、内の接続を開く、<ph id="ph1">`using`</ph>ブロック、次のコード フラグメントで示すようにします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Doing so ensures that the connection is automatically closed when the code exits the block.</source>
          <target state="translated">これにより、コード ブロックを終了するときに、接続が自動的に閉じられることです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>To deploy high-performance applications, you must use connection pooling.</source>
          <target state="translated">高パフォーマンス アプリケーションを配置するには、接続プールを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>When you use the .NET Framework Data Provider for SQL Server, you do not have to enable connection pooling because the provider manages this automatically, although you can modify some settings.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server を使用するときにありません一部の設定を変更できますが接続プール管理するため、プロバイダー、自動的に有効にします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
          <target state="translated">詳しくは、「<bpt id="p1">[</bpt>SQL Server の接続プール (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>If a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is generated by the method executing a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> remains open when the severity level is 19 or less.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>メソッドの実行によって生成される、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>重大度レベルが 19 以下の場合は開いたままです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>When the severity level is 20 or greater, the server ordinarily closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">重大度レベルが 20 以上の場合は、通常は閉じます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>However, the user can reopen the connection and continue.</source>
          <target state="translated">ただし、ユーザーは接続を再び開き、続行できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>An application that creates an instance of the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.</source>
          <target state="translated">インスタンスを作成するアプリケーション、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>オブジェクトを宣言的または強制的のセキュリティ確認要求を設定して、コードに十分なアクセス許可を持つすべての直接的および間接的な呼び出し元を要求できます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> makes security demands using the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlClientPermission&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> により、セキュリティ要求を使用して、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlClientPermission&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Users can verify that their code has sufficient permissions by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlClientPermissionAttribute&gt;</ph> object.</source>
          <target state="translated">ユーザーが、コードが使用して、十分なアクセス許可を持っているを確認することができます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlClientPermissionAttribute&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Users and administrators can also use the <bpt id="p1">[</bpt>Caspol.exe (Code Access Security Policy Tool)<ept id="p1">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept> to modify security policy at the machine, user, and enterprise levels.</source>
          <target state="translated">ユーザーと管理者を使っても、 <bpt id="p1">[</bpt>Caspol.exe (コード アクセス セキュリティ ポリシー ツール)<ept id="p1">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept>コンピューター、ユーザー、およびエンタープライズ レベルのセキュリティ ポリシーを変更します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information, see <bpt id="p1">[</bpt>Security<ept id="p1">](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)</ept>.</source>
          <target state="translated">詳細については、<bpt id="p1">[</bpt>セキュリティ<ept id="p1">](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)</ept>に関するページをご覧ください。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For an example demonstrating how to use security demands, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>.</source>
          <target state="translated">セキュリティ要求を使用する方法を示す例では、次を参照してください。<bpt id="p1">[</bpt>コード アクセス セキュリティと ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information about handling warning and informational messages from the server, see <bpt id="p1">[</bpt>Connection Events<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>.</source>
          <target state="translated">サーバーからの警告および情報メッセージを処理の詳細については、次を参照してください。<bpt id="p1">[</bpt>接続イベント<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>SQL Server engine errors and error messages are documented in SQL Server Books Online.</source>
          <target state="translated">SQL Server エンジンのエラーとエラー メッセージは、SQL Server オンライン ブックに記載されています。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>You can force TCP instead of shared memory.</source>
          <target state="translated">共有メモリではなく、TCP を強制することができます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>You can do that by prefixing tcp: to the server name in the connection string or you can use localhost.</source>
          <target state="translated">Tcp を付けることによって行うことができます: 接続でサーバー名を文字列または localhost を使用できます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is opened and set as the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>が開いたときおよびとして設定、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand.Connection%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>The example then calls <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>To accomplish this, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph> is passed a connection string and a query string that is a <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> INSERT statement.</source>
          <target state="translated">これを実現する、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A&gt;</ph>接続文字列とは、クエリ文字列が渡される、 <ph id="ph2">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> INSERT ステートメントです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>The connection is closed automatically when the code exits the using block.</source>
          <target state="translated">使用して、コードの終了時に、接続が自動的に終了ブロック。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>When a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.</source>
          <target state="translated">新しいインスタンスをときに<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>が作成、読み取り/書き込みプロパティは、関連付けられているキーワードを使用して明示的に設定されている場合を除き、次の初期値に設定されます、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>Properties</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>Initial value</source>
          <target state="translated">初期値</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>empty string ("")</source>
          <target state="translated">空の文字列 ("")</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>15</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>empty string ("")</source>
          <target state="translated">空の文字列 ("")</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>empty string ("")</source>
          <target state="translated">空の文字列 ("")</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>You can change the value for these properties only by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.</source>
          <target state="translated">のみを使用してこれらのプロパティの値を変更することができます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph> class provides functionality for creating and managing the contents of connection strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>クラスを作成および接続文字列の内容を管理するための機能を提供します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor">
          <source>The following example creates and opens a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">次の例を作成して開きます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>The connection used to open the SQL Server database.</source>
          <target state="translated">SQL Server データベースを開くために使用される接続。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> class when given a string that contains the connection string.</source>
          <target state="translated">接続文字列を示す文字列を指定して、<ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>When a new instance of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.</source>
          <target state="translated">新しいインスタンスをときに<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>が作成、読み取り/書き込みプロパティは、関連付けられているキーワードを使用して明示的に設定されている場合を除き、次の初期値に設定されます、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>Properties</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>Initial value</source>
          <target state="translated">初期値</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>15</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>empty string ("")</source>
          <target state="translated">空の文字列 ("")</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>empty string ("")</source>
          <target state="translated">空の文字列 ("")</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>You can change the value for these properties only by using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property.</source>
          <target state="translated">のみを使用してこれらのプロパティの値を変更することができます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> class provides functionality for creating and managing the contents of connection strings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>クラスを作成および接続文字列の内容を管理するための機能を提供します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
          <source>The following example creates and opens a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">次の例を作成して開きます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)">
          <source>A connection string that does not use any of the following connection string keywords: <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, <ph id="ph2">&lt;see langword="UserId" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Password" /&gt;</ph>; or that does not use <ph id="ph4">&lt;see langword="ContextConnection = true" /&gt;</ph>.</source>
          <target state="translated">次の接続文字列キーワードを一切使用しない接続文字列: <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>、<ph id="ph2">&lt;see langword="UserId" /&gt;</ph>、または <ph id="ph3">&lt;see langword="Password" /&gt;</ph>。または、<ph id="ph4">&lt;see langword="ContextConnection = true" /&gt;</ph> を使用しない接続文字列。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.#ctor(System.String,System.Data.SqlClient.SqlCredential)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> class given a connection string, that does not use <ph id="ph2">&lt;see langword="Integrated Security = true" /&gt;</ph> and a <ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object that contains the user ID and password.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="Integrated Security = true" /&gt;</ph> と、ユーザー ID とパスワードを含む <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> オブジェクトを使用しない接続文字列を指定して、<ph id="ph3">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.AccessToken">
          <source>Gets or sets the access token for the connection.</source>
          <target state="translated">接続のアクセス トークンを取得または設定します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.AccessToken">
          <source>The access token for the connection.</source>
          <target state="translated">接続のアクセス トークン。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Starts a database transaction.</source>
          <target state="translated">データベース トランザクションを開始します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>Starts a database transaction.</source>
          <target state="translated">データベース トランザクションを開始します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>An object representing the new transaction.</source>
          <target state="translated">新しいトランザクションを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>This command maps to the SQL Server implementation of BEGIN TRANSACTION.</source>
          <target state="translated">このコマンドは、BEGIN TRANSACTION の SQL Server の実装にマップされます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method.</source>
          <target state="translated">明示的にコミットまたはを使用してトランザクションをロールバックする必要があります、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>To make sure that the .NET Framework Data Provider for SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server トランザクションの管理モデルが正しく実行するようにするには、SQL Server によって提供されるものなど、他のトランザクション管理モデルを使用しないでください。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>If you do not specify an isolation level, the default isolation level is used.</source>
          <target state="translated">分離レベルを指定しないと、既定の分離レベルが使用されます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>To specify an isolation level with the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> method, use the overload that takes the <ph id="ph2">`iso`</ph> parameter (<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>).</source>
          <target state="translated">分離レベルを指定する、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>メソッドを使用するオーバー ロードを使用して、<ph id="ph2">`iso`</ph>パラメーター (<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>The isolation level set for a transaction persists after the transaction is completed and until the connection is closed or disposed.</source>
          <target state="translated">接続が終了または破棄されるまで、トランザクションが完了した後、トランザクションの分離レベルが保持されます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>Setting the isolation level to <bpt id="p1">**</bpt>Snapshot<ept id="p1">**</ept> in a database where the snapshot isolation level is not enabled does not throw an exception.</source>
          <target state="translated">分離レベルに設定する<bpt id="p1">**</bpt>スナップショット<ept id="p1">**</ept>snapshot 分離レベルが有効になっていないデータベースではない例外をスローします。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>The transaction will complete using the default isolation level.</source>
          <target state="translated">既定の分離レベルを使用して、トランザクションが完了します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>If a transaction is started and a level 16 or higher error occurs on the server, the transaction will not be rolled back until the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph> method is invoked.</source>
          <target state="translated">場合は、サーバーで、レベル 16 または上位のエラーが発生する、そのトランザクションを開始するには、トランザクションはロールバックされませんまで、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.Read%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>No exception is thrown on <bpt id="p1">**</bpt>ExecuteReader<ept id="p1">**</ept>.</source>
          <target state="translated">例外はスローされません<bpt id="p1">**</bpt>ExecuteReader<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>When your query returns a large amount of data and calls <ph id="ph1">`BeginTransaction`</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is thrown because SQL Server does not allow parallel transactions when using MARS.</source>
          <target state="translated">クエリが大量のデータと呼び出しを返す場合<ph id="ph1">`BeginTransaction`</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> MARS を使用する場合に、SQL Server で並列トランザクションが許可されないためにスローされます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</source>
          <target state="translated">この問題を避けるためには、常にトランザクションに関連付けるコマンドや、接続リーダーが開く前にします。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">SQL Server トランザクションの詳細については、SQL Server オンライン ブックの「明示的なトランザクション」および「効率的なトランザクションのコーディング」を参照してください。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">使用する方法も示します、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</source>
          <target state="translated">並列トランザクションは、複数のアクティブな結果セット (MARS) を使用する場合には使用できません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">並列トランザクションはサポートされていません。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>The isolation level under which the transaction should run.</source>
          <target state="translated">トランザクションを実行する分離レベル。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Starts a database transaction with the specified isolation level.</source>
          <target state="translated">分離レベルを指定して、データベース トランザクションを開始します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>An object representing the new transaction.</source>
          <target state="translated">新しいトランザクションを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>This command maps to the SQL Server implementation of BEGIN TRANSACTION.</source>
          <target state="translated">このコマンドは、BEGIN TRANSACTION の SQL Server の実装にマップされます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method.</source>
          <target state="translated">明示的にコミットまたはを使用してトランザクションをロールバックする必要があります、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>To make sure that the .NET Framework Data Provider for SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server トランザクションの管理モデルが正しく実行するようにするには、SQL Server によって提供されるものなど、他のトランザクション管理モデルを使用しないでください。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>After a transaction is committed or rolled back, the isolation level of the transaction persists for all subsequent commands that are in autocommit mode (the SQL Server default).</source>
          <target state="translated">トランザクションがコミットまたはロールバック、トランザクションの分離レベルを自動コミット モード (SQL Server の既定値) になっているすべての後続のコマンドを維持します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>This can produce unexpected results, such as an isolation level of REPEATABLE READ persisting and locking other users out of a row.</source>
          <target state="translated">これにより、永続化して、行外には、他のユーザーのロックは、REPEATABLE read 分離レベルなど、予期しない結果が生成できます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>To reset the isolation level to the default (READ COMMITTED), execute the <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> SET TRANSACTION ISOLATION LEVEL READ COMMITTED statement, or call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType&gt;</ph> followed immediately by <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">既定の (READ COMMITTED) に、分離レベルをリセットするには、実行、<ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>ステートメントのセットのトランザクション分離レベル READ COMMITTED またはコール<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType&gt;</ph>に続く<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</source>
          <target state="translated">SQL Server 分離レベルの詳細については、「分離レベルで、データベース エンジン」SQL Server オンライン ブックを参照してください。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">SQL Server トランザクションの詳細については、SQL Server オンライン ブックの「明示的なトランザクション」および「効率的なトランザクションのコーディング」を参照してください。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>When your query returns a large amount of data and calls <ph id="ph1">`BeginTransaction`</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is thrown because SQL Server does not allow parallel transactions when using MARS.</source>
          <target state="translated">クエリが大量のデータと呼び出しを返す場合<ph id="ph1">`BeginTransaction`</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> MARS を使用する場合に、SQL Server で並列トランザクションが許可されないためにスローされます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</source>
          <target state="translated">この問題を避けるためには、常にトランザクションに関連付けるコマンドや、接続リーダーが開く前にします。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">使用する方法も示します、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</source>
          <target state="translated">並列トランザクションは、複数のアクティブな結果セット (MARS) を使用する場合には使用できません。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">並列トランザクションはサポートされていません。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>The name of the transaction.</source>
          <target state="translated">トランザクションの名前。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>Starts a database transaction with the specified transaction name.</source>
          <target state="translated">トランザクション名を指定して、データベース トランザクションを開始します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>An object representing the new transaction.</source>
          <target state="translated">新しいトランザクションを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>This command maps to the SQL Server implementation of BEGIN TRANSACTION.</source>
          <target state="translated">このコマンドは、BEGIN TRANSACTION の SQL Server の実装にマップされます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>The length of the <ph id="ph1">`transactionName`</ph> parameter must not exceed 32 characters; otherwise an exception will be thrown.</source>
          <target state="translated">長さ、<ph id="ph1">`transactionName`</ph>パラメーターは、32 文字を超えない必要があります。 それ以外の場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>The value in the <ph id="ph1">`transactionName`</ph> parameter can be used in later calls to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> and in the <ph id="ph3">`savePoint`</ph> parameter of the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method.</source>
          <target state="translated">値、<ph id="ph1">`transactionName`</ph>以降の呼び出しでパラメーターを使用する<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>し、、<ph id="ph3">`savePoint`</ph>のパラメーター、<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method.</source>
          <target state="translated">明示的にコミットまたはを使用してトランザクションをロールバックする必要があります、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>To make sure that the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> Data Provider for SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</source>
          <target state="translated">確認する、<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>データ プロバイダーの SQL Server トランザクションの管理モデルが正しく、実行を使用しないでください、いずれかの SQL Server によって提供されるなど、他のモデルのトランザクション管理します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">SQL Server トランザクションの詳細については、SQL Server オンライン ブックの「明示的なトランザクション」および「効率的なトランザクションのコーディング」を参照してください。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>When your query returns a large amount of data and calls <ph id="ph1">`BeginTransaction`</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is thrown because SQL Server does not allow parallel transactions when using MARS.</source>
          <target state="translated">クエリが大量のデータと呼び出しを返す場合<ph id="ph1">`BeginTransaction`</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> MARS を使用する場合に、SQL Server で並列トランザクションが許可されないためにスローされます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</source>
          <target state="translated">この問題を避けるためには、常にトランザクションに関連付けるコマンドや、接続リーダーが開く前にします。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">使用する方法も示します、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</source>
          <target state="translated">並列トランザクションは、複数のアクティブな結果セット (MARS) を使用する場合には使用できません。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">並列トランザクションはサポートされていません。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>The isolation level under which the transaction should run.</source>
          <target state="translated">トランザクションを実行する分離レベル。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>The name of the transaction.</source>
          <target state="translated">トランザクションの名前。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>Starts a database transaction with the specified isolation level and transaction name.</source>
          <target state="translated">分離レベルとトランザクション名を指定して、データベース トランザクションを開始します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>An object representing the new transaction.</source>
          <target state="translated">新しいトランザクションを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>This command maps to the SQL Server implementation of BEGIN TRANSACTION.</source>
          <target state="translated">このコマンドは、BEGIN TRANSACTION の SQL Server の実装にマップされます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>The value in the <ph id="ph1">`transactionName`</ph> parameter can be used in later calls to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> and in the <ph id="ph3">`savePoint`</ph> parameter of the <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph> method.</source>
          <target state="translated">値、<ph id="ph1">`transactionName`</ph>以降の呼び出しでパラメーターを使用する<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>し、、<ph id="ph3">`savePoint`</ph>のパラメーター、<ph id="ph4">&lt;xref:System.Data.SqlClient.SqlTransaction.Save%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> method.</source>
          <target state="translated">明示的にコミットまたはを使用してトランザクションをロールバックする必要があります、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>To make sure that the SQL Server transaction management model performs correctly, avoid using other transaction management models, such as the one provided by SQL Server.</source>
          <target state="translated">SQL Server トランザクションの管理モデルが正しく実行されるようにするには、SQL Server によって提供されるものなど、他のトランザクション管理モデルを使用しないでください。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>After a transaction is committed or rolled back, the isolation level of the transaction persists for all subsequent commands that are in autocommit mode (the SQL Server default).</source>
          <target state="translated">トランザクションがコミットまたはロールバック、トランザクションの分離レベルを自動コミット モード (SQL Server の既定値) になっているすべての後続のコマンドを維持します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>This can produce unexpected results, such as an isolation level of REPEATABLE READ persisting and locking other users out of a row.</source>
          <target state="translated">これにより、永続化して、行外には、他のユーザーのロックは、REPEATABLE read 分離レベルなど、予期しない結果が生成できます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>To reset the isolation level to the default (READ COMMITTED), execute the <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> SET TRANSACTION ISOLATION LEVEL READ COMMITTED statement, or call <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType&gt;</ph> followed immediately by <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">既定の (READ COMMITTED) に、分離レベルをリセットするには、実行、<ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>ステートメントのセットのトランザクション分離レベル READ COMMITTED またはコール<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A?displayProperty=nameWithType&gt;</ph>に続く<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>For more information on SQL Server isolation levels, see "Isolation Levels in the Database Engine" in SQL Server Books Online.</source>
          <target state="translated">SQL Server 分離レベルの詳細については、「分離レベルで、データベース エンジン」SQL Server オンライン ブックを参照してください。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>For more information on SQL Server transactions, see "Explicit Transactions" and "Coding Efficient Transactions" in SQL Server Books Online.</source>
          <target state="translated">SQL Server トランザクションの詳細については、SQL Server オンライン ブックの「明示的なトランザクション」および「効率的なトランザクションのコーディング」を参照してください。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>When your query returns a large amount of data and calls <ph id="ph1">`BeginTransaction`</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> is thrown because SQL Server does not allow parallel transactions when using MARS.</source>
          <target state="translated">クエリが大量のデータと呼び出しを返す場合<ph id="ph1">`BeginTransaction`</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph> MARS を使用する場合に、SQL Server で並列トランザクションが許可されないためにスローされます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>To avoid this problem, always associate a transaction with the command, the connection, or both before any readers are open.</source>
          <target state="translated">この問題を避けるためには、常にトランザクションに関連付けるコマンドや、接続リーダーが開く前にします。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>It also demonstrates how to use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph> methods.</source>
          <target state="translated">使用する方法も示します、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlTransaction.Commit%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlTransaction.Rollback%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>Parallel transactions are not allowed when using Multiple Active Result Sets (MARS).</source>
          <target state="translated">並列トランザクションは、複数のアクティブな結果セット (MARS) を使用する場合には使用できません。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
          <source>Parallel transactions are not supported.</source>
          <target state="translated">並列トランザクションはサポートされていません。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The name of the database to use instead of the current database.</source>
          <target state="translated">現在のデータベースの代わりに使用するデータベースの名前。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>Changes the current database for an open <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">開いている <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> の現在のデータベースを変更します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The value supplied in the <ph id="ph1">`database`</ph> parameter must be a valid database name.</source>
          <target state="translated">指定された値、<ph id="ph1">`database`</ph>パラメーターは、有効なデータベース名を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The <ph id="ph1">`database`</ph> parameter cannot contain a null value, an empty string, or a string with only blank characters.</source>
          <target state="translated"><ph id="ph1">`database`</ph>パラメーターは、null 値、空の文字列または空白だけの文字の文字列を含めることはできません。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays some of its read-only properties.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>し、一部の読み取り専用プロパティを表示します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The database name is not valid.</source>
          <target state="translated">データベース名が正しくありません。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>The connection is not open.</source>
          <target state="translated">接続が開かれていません。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
          <source>Cannot change the database.</source>
          <target state="translated">データベースを変更できません。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Changes the SQL Server password.</source>
          <target state="translated">SQL Server パスワードを変更します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The connection string that contains enough information to connect to the server that you want.</source>
          <target state="translated">目的のサーバーに接続するために必要な情報を含む接続文字列。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The connection string must contain the user ID and the current password.</source>
          <target state="translated">接続文字列には、ユーザー ID と現在のパスワードが含まれている必要があります。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The new password to set.</source>
          <target state="translated">新たに設定するパスワード。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>This password must comply with any password security policy set on the server, including minimum length, requirements for specific characters, and so on.</source>
          <target state="translated">このパスワードは、サーバー側で設定されているパスワード セキュリティ ポリシー (最低限の長さ、使用文字の要件など) を満たしている必要があります。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>Changes the SQL Server password for the user indicated in the connection string to the supplied new password.</source>
          <target state="translated">接続文字列で指定されているユーザーの SQL Server のパスワードを、指定された新しいパスワードに変更します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>When you are using SQL Server on Windows Server, developers can take advantage of functionality that lets the client application supply both the current and a new password in order to change the existing password.</source>
          <target state="translated">Windows Server を SQL Server を使用しているときに開発者は、により、クライアント アプリケーションは既存のパスワードを変更するために、現在と新しいパスワードの両方を指定する機能を利用できます。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>Applications can implement functionality such as prompting the user for a new password during initial login if the old one has expired, and this operation can be completed without administrator intervention.</source>
          <target state="translated">アプリケーションは、古いパスワードの有効期限が切れてし、管理者の介入なしにこの操作を完了できる場合、最初のログイン時に、新しいパスワードのユーザー入力を求めるなどの機能を実装できます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A&gt;</ph> method changes the SQL Server password for the user indicated in the supplied <ph id="ph2">`connectionString`</ph> parameter to the value supplied in the <ph id="ph3">`newPassword`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ChangePassword%2A&gt;</ph>メソッドは、指定されたに示されたユーザーの SQL Server のパスワードを変更<ph id="ph2">`connectionString`</ph>パラメーターで指定された値を<ph id="ph3">`newPassword`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>If the connection string includes the option for integrated security (that is, "Integrated Security=True" or the equivalent), an exception is thrown.</source>
          <target state="translated">かどうか、接続文字列には、統合セキュリティのオプションが含まれます (つまり、"Integrated Security = True"またはそれと同等)、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>To determine that the password has expired, calling the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A&gt;</ph> method raises a <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>.</source>
          <target state="translated">パスワードが期限切れを呼び出すことを確認する、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A&gt;</ph>メソッドが発生し、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>In order to indicate that the password that is contained within the connection string must be reset, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException.Number%2A&gt;</ph> property for the exception contains the status value 18487 or 18488.</source>
          <target state="translated">接続文字列に含まれるパスワードをリセットする必要があるために、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlException.Number%2A&gt;</ph>例外のプロパティには、状態値 18487 または 18488 が含まれています。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The first value (18487) indicates that the password has expired and the second (18488) indicates that the password must be reset before logging in.</source>
          <target state="translated">最初の値 (18487) は、パスワードが期限切れ、ある 2 つ目の (18488) ログインする前にパスワードをリセットする必要がありますを示します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>This method opens its own connection to the server, requests the password change, and closes the connection as soon as it has completed.</source>
          <target state="translated">このメソッドは、サーバーに、独自の接続を開き、パスワードの変更を要求しが完了するとすぐに、接続を閉じます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>This connection is not retrieved from, nor returned to, the SQL Server connection pool.</source>
          <target state="translated">この接続がいないをから取得されていません、SQL Server の接続プールに返されます。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The following is a simple example of changing a password:</source>
          <target state="translated">パスワードの変更の簡単な例を次に示します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The following console application demonstrates the issues involved in changing a user's password because the current password has expired.</source>
          <target state="translated">次のコンソール アプリケーションでは、現在のパスワードの有効期限が切れているため、ユーザーのパスワードの変更に関連する問題について説明します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The connection string includes the option to use integrated security.</source>
          <target state="translated">接続文字列には、統合セキュリティを使用するオプションが含まれています。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>Or</source>
          <target state="translated">または</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="newPassword" /&gt;</ph> exceeds 128 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newPassword" /&gt;</ph> が 128 文字を超えています。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)">
          <source>Either the <ph id="ph1">&lt;paramref name="connectionString" /&gt;</ph> or the <ph id="ph2">&lt;paramref name="newPassword" /&gt;</ph> parameter is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="connectionString" /&gt;</ph> または <ph id="ph2">&lt;paramref name="newPassword" /&gt;</ph> のいずれかのパラメーターが null です。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The connection string that contains enough information to connect to a server.</source>
          <target state="translated">サーバーに接続するために必要な情報を保持する接続文字列。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The connection string should not use any of the following connection string keywords: <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>, <ph id="ph2">&lt;see langword="UserId" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Password" /&gt;</ph>; or <ph id="ph4">&lt;see langword="ContextConnection = true" /&gt;</ph>.</source>
          <target state="translated">接続の文字列は <ph id="ph1">&lt;see langword="Integrated Security = true" /&gt;</ph>、<ph id="ph2">&lt;see langword="UserId" /&gt;</ph>、<ph id="ph3">&lt;see langword="Password" /&gt;</ph>、または<ph id="ph4">&lt;see langword="ContextConnection = true" /&gt;</ph> のいずれの接続文字列のキーワードも使用すべきではありません。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The new password.</source>
          <target state="translated">新しいパスワード。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source><bpt id="p1">&lt;c&gt;</bpt>newSecurePassword<ept id="p1">&lt;/c&gt;</ept> must be read only.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>newSecurePassword<ept id="p1">&lt;/c&gt;</ept> は読み取り専用にする必要があります。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The password must also comply with any password security policy set on the server (for example, minimum length and requirements for specific characters).</source>
          <target state="translated">このパスワードは、サーバー側で設定されているパスワード セキュリティ ポリシー (最低限の長さ、使用文字の要件など) も満たしている必要があります。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>Changes the SQL Server password for the user indicated in the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> オブジェクトで指定されたユーザーの SQL Server のパスワードを変更します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The connection string contains any combination of <ph id="ph1">&lt;see langword="UserId" /&gt;</ph>, <ph id="ph2">&lt;see langword="Password" /&gt;</ph>, or <ph id="ph3">&lt;see langword="Integrated Security=true" /&gt;</ph>.</source>
          <target state="translated">接続の文字列には <ph id="ph1">&lt;see langword="UserId" /&gt;</ph>、<ph id="ph2">&lt;see langword="Password" /&gt;</ph>、または <ph id="ph3">&lt;see langword="Integrated Security=true" /&gt;</ph> の組み合わせのいずれかが含まれています。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>The connection string contains <ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> を含む接続文字列。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph> is greater than 128 characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph> が 128 文字を超えています。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph> is not read only.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph> は読み取り専用ではありません。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newSecurePassword" /&gt;</ph> が空の文字列です。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.Data.SqlClient.SqlCredential,System.Security.SecureString)">
          <source>One of the parameters (<ph id="ph1">&lt;paramref name="connectionString" /&gt;</ph>, <ph id="ph2">&lt;paramref name="credential" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="newSecurePassword" /&gt;</ph>) is null.</source>
          <target state="translated">パラメーター (<ph id="ph1">&lt;paramref name="connectionString" /&gt;</ph>、<ph id="ph2">&lt;paramref name="credential" /&gt;</ph>、または <ph id="ph3">&lt;paramref name="newSecurePassword" /&gt;</ph>) のいずれかが null です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
          <source>Empties the connection pool.</source>
          <target state="translated">接続プールを空にします。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A&gt;</ph> resets (or empties) the connection pool.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearAllPools%2A&gt;</ph> 接続プールをリセット (または空に)。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ClearAllPools">
          <source>If there are connections in use at the time of the call, they are marked appropriately and will be discarded (instead of being returned to the pool) when <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> is called on them.</source>
          <target state="translated">適切にマークしは破棄されます (の代わりに、プールに返される) 場合、呼び出し時に使用中の接続がある場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>に呼び出されます。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> to be cleared from the pool.</source>
          <target state="translated">プールから削除される <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
          <source>Empties the connection pool associated with the specified connection.</source>
          <target state="translated">指定した接続に関連付けられている接続プールを空にします。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearPool%2A&gt;</ph> clears the connection pool that is associated with the <ph id="ph2">`connection`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClearPool%2A&gt;</ph> 関連付けられている接続プールをクリア、<ph id="ph2">`connection`</ph>です。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ClearPool(System.Data.SqlClient.SqlConnection)">
          <source>If additional connections associated with <ph id="ph1">`connection`</ph> are in use at the time of the call, they are marked appropriately and are discarded (instead of being returned to the pool) when <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> is called on them.</source>
          <target state="translated">追加の接続に関連付けられている場合<ph id="ph1">`connection`</ph>は呼び出し時に使用して、それらが適切にマークされ、破棄されます (プールに返される) ではなくとき<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>に呼び出されます。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>The connection ID of the most recent connection attempt, regardless of whether the attempt succeeded or failed.</source>
          <target state="translated">試行成功したか失敗したかにかかわらず、最新の接続試行の接続 ID。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>The connection ID of the most recent connection attempt.</source>
          <target state="translated">最新の接続試行の接続 ID。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A&gt;</ph> works regardless of which version of the server you connect to, but extended events logs and entry on connectivity ring buffer errors will not be present in <ph id="ph2">[!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)]</ph> and earlier.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ClientConnectionId%2A&gt;</ph> 接続するサーバーのバージョンに関係なく動作は、拡張イベント ログおよび接続リング バッファー エラーに関するエントリが存在していない<ph id="ph2">[!INCLUDE[sskatmai_r2](~/includes/sskatmai-r2-md.md)]</ph>以前のバージョン。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>You can locate the connection ID in the extended events log to see if the failure was on the server if the extended event for logging connection ID is enabled.</source>
          <target state="translated">接続 ID をログ記録に関する拡張イベントが有効になっている場合、サーバーで障害発生したかどうかの拡張イベント ログ内の接続 ID を検索できます。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>You can also locate the connection ID in the connection ring buffer (<bpt id="p1">[</bpt>Connectivity troubleshooting in SQL Server 2008 with the Connectivity Ring Buffer<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=207752)</ept>) for certain connection errors.</source>
          <target state="translated">接続リング バッファーに、接続 ID を検索することもできます (<bpt id="p1">[</bpt>、接続リング バッファーによる SQL Server 2008 の接続のトラブルシューティング<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=207752)</ept>) 特定の接続エラーです。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ClientConnectionId">
          <source>If the connection ID is not in the connection ring buffer, you can assume a network error.</source>
          <target state="translated">接続 ID が接続リング バッファーにない場合は、ネットワーク エラーを想定することができます。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Closes the connection to the database.</source>
          <target state="translated">データベースへの接続を閉じます。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>This is the preferred method of closing any open connection.</source>
          <target state="translated">このメソッドは、開いている接続を閉じるための最も好ましいメソッドです。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> method rolls back any pending transactions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>メソッドが保留中のトランザクションをロールバックします。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</source>
          <target state="translated">接続プールへの接続を解放し、または接続プールが無効になっている場合、接続を閉じます。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Pending transactions started using <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> or <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph> are automatically rolled back when the connection is reset if connection pooling is enabled.</source>
          <target state="translated">保留中のトランザクションを使用して開始<ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>または<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>が自動的にロールバックされた接続プールが有効になっている場合、接続がリセットされます。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>If connection pooling is off, the transaction is rolled back after <ph id="ph1">`SqlConnection.Close`</ph> is called.</source>
          <target state="translated">接続プールがオフの場合は、トランザクションがロールバック後<ph id="ph1">`SqlConnection.Close`</ph>と呼びます。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Transactions started through <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> are controlled through the <ph id="ph2">`System.Transactions`</ph> infrastructure, and are not affected by <ph id="ph3">`SqlConnection.Close`</ph>.</source>
          <target state="translated">トランザクションが開始<ph id="ph1">&lt;xref:System.Transactions&gt;</ph>制御するには、<ph id="ph2">`System.Transactions`</ph>して、インフラストラクチャとは影響しません<ph id="ph3">`SqlConnection.Close`</ph>です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>An application can call <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> more than one time.</source>
          <target state="translated">アプリケーションが呼び出すことができます<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>1 つ以上の時間。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>No exception is generated.</source>
          <target state="translated">例外は生成されません。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> goes out of scope, it won't be closed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>スコープの移動のうち、閉じられているされません。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph>.</source>
          <target state="translated">したがって、する必要があります明示的に接続を呼び出して終了する<ph id="ph1">`Close`</ph>または<ph id="ph2">`Dispose`</ph>です。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source><ph id="ph1">`Close`</ph> and <ph id="ph2">`Dispose`</ph> are functionally equivalent.</source>
          <target state="translated"><ph id="ph1">`Close`</ph> および<ph id="ph2">`Dispose`</ph>は機能的に等価です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>If the connection pooling value <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`true`</ph> or <ph id="ph3">`yes`</ph>, the underlying connection is returned back to the connection pool.</source>
          <target state="translated">値の接続プール場合<ph id="ph1">`Pooling`</ph>に設定されている<ph id="ph2">`true`</ph>または<ph id="ph3">`yes`</ph>では、基になる接続が接続プールに返されます。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>On the other hand, if <ph id="ph1">`Pooling`</ph> is set to <ph id="ph2">`false`</ph> or <ph id="ph3">`no`</ph>, the underlying connection to the server is closed.</source>
          <target state="translated">その一方で場合、<ph id="ph1">`Pooling`</ph>に設定されている<ph id="ph2">`false`</ph>または<ph id="ph3">`no`</ph>では、基になるサーバーに接続が閉じられます。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Login and logout events will not be raised on the server when a connection is fetched from or returned to the connection pool, because the connection is not actually closed when it is returned to the connection pool.</source>
          <target state="translated">接続が接続プールからフェッチされたり接続プールに返されたりしたとき、ログイン イベントとログアウト イベントはサーバーで発生しません。これは、接続プールに返されても接続は実際には終了していないためです。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
          <target state="translated">詳しくは、「<bpt id="p1">[</bpt>SQL Server の接続プール (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>Do not call <ph id="ph1">`Close`</ph> or <ph id="ph2">`Dispose`</ph> on a Connection, a DataReader, or any other managed object in the <ph id="ph3">`Finalize`</ph> method of your class.</source>
          <target state="translated">呼び出す必要はありません<ph id="ph1">`Close`</ph>または<ph id="ph2">`Dispose`</ph>接続、DataReader、または その他のマネージ オブジェクトで、<ph id="ph3">`Finalize`</ph>クラスのメソッドです。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
          <target state="translated">ファイナライザーで、クラスが直接所有されているアンマネージ リソースだけを解放する必要があります。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
          <target state="translated">クラスがアンマネージ リソースを所有していない場合は、クラス定義に <ph id="ph1">`Finalize`</ph> メソッドを含めないでください。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>ガベージ コレクション<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>です。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, opens it, displays some of its properties.</source>
          <target state="translated">次の例を作成、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>、開かれます、一部のプロパティが表示されます。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>The connection is automatically closed at the end of the <ph id="ph1">`using`</ph> block.</source>
          <target state="translated">接続がの末尾に自動的に閉じられる、<ph id="ph1">`using`</ph>ブロックします。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Close">
          <source>The connection-level error that occurred while opening the connection.</source>
          <target state="translated">接続を開くときに発生した接続レベルのエラー。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
          <source>Gets or sets the time-to-live for column encryption key entries in the column encryption key cache for the <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept> feature.</source>
          <target state="translated"><bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept> 機能の列暗号化キーのキャッシュ内の、列暗号化キー エントリの有効期限を取得または設定します。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
          <source>The default value is 2 hours.</source>
          <target state="translated">既定値は 2 時間です。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
          <source>0 means no caching at all.</source>
          <target state="translated">0 は、キャッシュがまったくないことを意味します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionKeyCacheTtl">
          <source>The time interval.</source>
          <target state="translated">時間間隔。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>Gets or sets a value that indicates whether query metadata caching is enabled (true) or not (false) for parameterized queries running against <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept> enabled databases.</source>
          <target state="translated"><bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](/sql/relational-databases/security/encryption/always-encrypted-database-engine)</ept> が有効であるデータベースに対して実行されるパラメーター化されたクエリについて、クエリ メタデータのキャッシュが有効 (true) か無効 (false) かを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>The default value is true.</source>
          <target state="translated">既定値は true です。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>Returns true if query metadata caching is enabled; otherwise false.</source>
          <target state="translated">クエリ メタデータのキャッシュが有効な場合は true を返します。それ以外の場合は false です。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>true is the default.</source>
          <target state="translated">既定値は true です。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>For parameterized queries, SqlClient makes a roundtrip to SQL Server for parameter metadata, to see which parameter it needs to encrypt and how (which keys and algorithms should be used).</source>
          <target state="translated">、パラメーター化クエリの SqlClient のため、とのやり取り SQL Server にパラメーターのメタデータを暗号化する必要があるパラメーターを表示する方法 (どのキーおよびアルゴリズムを使用する必要があります)。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>If the application calls the same query multiple times, an extra roundtrip is made to the server each time, which degrades application performance.</source>
          <target state="translated">アプリケーションが呼び出す場合、同じクエリ複数回、余分なラウンド トリップが行われましたサーバーごとには、アプリケーションのパフォーマンスが低下します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>With <bpt id="p1">**</bpt>ColumnEncryptionQueryMetadataCacheEnabled<ept id="p1">**</ept> set to true, if the same query is called multiple times, the roundtrip to the server will be made only once.</source>
          <target state="translated"><bpt id="p1">**</bpt>ColumnEncryptionQueryMetadataCacheEnabled<ept id="p1">**</ept>同じクエリが複数回呼び出される場合は true に設定して、サーバーへのラウンド トリップになります 1 回だけです。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionQueryMetadataCacheEnabled">
          <source>The cache has a non-configurable Max size parameter that is set to 2000 queries.</source>
          <target state="translated">キャッシュには、2000 のクエリに設定されているが構成可能な最大サイズ パラメーターがあります。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
          <source>Allows you to set a list of trusted key paths for a database server.</source>
          <target state="translated">データベース サーバーの信頼されたキー パスの一覧を設定できるようにします。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
          <source>If while processing an application query the driver receives a key path that is not on the list, the query will fail.</source>
          <target state="translated">アプリケーションのクエリを処理中に、一覧に存在しないキー パスをドライバーが受け取ると、クエリは失敗します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
          <source>This property provides additional protection against security attacks that involve a compromised SQL Server providing fake key paths, which may lead to leaking key store credentials.</source>
          <target state="translated">このプロパティは、セキュリティが損なわれ偽のキー パスを提供する SQL Server が関係するセキュリティ攻撃に対する保護を強化します。この攻撃は、キー ストアの資格情報漏洩につながるおそれがあります。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ColumnEncryptionTrustedMasterKeyPaths">
          <source>The list of trusted master key paths for the column encryption.</source>
          <target state="translated">列の暗号化のための信頼されたマスター キー パスの一覧。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Gets or sets the string used to open a SQL Server database.</source>
          <target state="translated">SQL Server データベースを開くために使用する文字列を取得または設定します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The connection string that includes the source database name, and other parameters needed to establish the initial connection.</source>
          <target state="translated">ソース データベース名を含む接続文字列、および初期接続を確立するために必要なその他のパラメーター。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The default value is an empty string.</source>
          <target state="translated">既定値は空の文字列です。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> is similar to an OLE DB connection string, but is not identical.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> OLE DB 接続文字列に似ていますが、同一ではありません。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Unlike OLE DB or ADO, the connection string that is returned is the same as the user-set <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>, minus security information if the Persist Security Info value is set to <ph id="ph2">`false`</ph> (default).</source>
          <target state="translated">返される接続文字列では OLE DB または ADO の場合とは異なり、ユーザー設定と同じ<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>、Persist Security Info の値に設定されている場合、セキュリティ情報マイナス<ph id="ph2">`false`</ph>(既定値)。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The .NET Framework Data Provider for SQL Server does not persist or return the password in a connection string unless you set Persist Security Info to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server が永続化または Persist Security Info を設定していない場合、接続文字列にパスワードを返すしていない<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property to connect to a database.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>プロパティをデータベースに接続します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The following example illustrates a typical connection string.</source>
          <target state="translated">次の例は、一般的な接続文字列を示しています。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Use the new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph> to construct valid connection strings at run time.</source>
          <target state="translated">使用して、新しい<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>実行時に有効な接続文字列を構築するためにします。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>For more information, see <bpt id="p1">[</bpt>Connection String Builders<ept id="p1">](~/docs/framework/data/adonet/connection-string-builders.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>接続文字列ビルダー<ept id="p1">](~/docs/framework/data/adonet/connection-string-builders.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property can be set only when the connection is closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>接続が閉じられたときにのみ、プロパティを設定することができます。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Many of the connection string values have corresponding read-only properties.</source>
          <target state="translated">多くの接続文字列の値はある対応する読み取り専用プロパティです。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>When the connection string is set, these properties are updated, except when an error is detected.</source>
          <target state="translated">接続文字列を設定すると、エラーが検出された場合を除いて、これらのプロパティが更新します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>In this case, none of the properties are updated.</source>
          <target state="translated">ここで、プロパティのいずれも更新されます。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> properties return only those settings that are contained in the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> プロパティに含まれている設定のみを返す、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>To connect to a local computer, specify "(local)" for the server.</source>
          <target state="translated">ローカル コンピューターに接続する場合、サーバーの"(local)"を指定します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If a server name is not specified, a connection will be attempted to the default instance on the local computer.</source>
          <target state="translated">サーバー名が指定されていない場合は、ローカル コンピューター上の既定のインスタンスへの接続が試行されます。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Resetting the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> on a closed connection resets all connection string values (and related properties) including the password.</source>
          <target state="translated">リセット、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>閉じた接続に対してすべての接続文字列の値 (および関連するプロパティ) パスワードを含むをリセットします。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>For example, if you set a connection string that includes "Database= AdventureWorks", and then reset the connection string to "Data Source=myserver;Integrated Security=true", the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Database%2A&gt;</ph> property is no longer set to "AdventureWorks".</source>
          <target state="translated">含む接続文字列を設定する場合など、"データベース = AdventureWorks"への接続文字列をリセットし、"データ ソース = myserver; Integrated Security = true"では、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Database%2A&gt;</ph>プロパティが不要になった"AdventureWorks"に設定されています。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The connection string is parsed immediately after being set.</source>
          <target state="translated">設定されている後すぐには、接続文字列を解析します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If errors in syntax are found when parsing, a runtime exception, such as <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>, is generated.</source>
          <target state="translated">解析中に、ランタイム例外などの構文エラーが見つかった場合<ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>が生成されます。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Other errors can be found only when an attempt is made to open the connection.</source>
          <target state="translated">開くには、接続試行が行われたときにのみ、その他のエラーを確認できます。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The basic format of a connection string includes a series of keyword/value pairs separated by semicolons.</source>
          <target state="translated">接続文字列の基本形式には、一連セミコロンで区切られたキーワード/値ペアにはが含まれています。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The equal sign (=) connects each keyword and its value.</source>
          <target state="translated">それぞれのキーワードと値の関連付けには、等号 (=) が使用されます。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks.</source>
          <target state="translated">セミコロン、単一引用符または二重引用符文字を含む値を含めるには、値を二重引用符で囲む必要があります。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks.</source>
          <target state="translated">セミコロンと二重引用符の両方が、値が含まれる場合、値は単一引用符で囲むことができます。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The single quotation mark is also useful if the value starts with a double-quote character.</source>
          <target state="translated">単一引用符も値が二重引用符文字で始まる場合に役立ちます。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Conversely, the double quotation mark can be used if the value starts with a single quotation mark.</source>
          <target state="translated">逆に、値が単一引用符で始まる場合は、二重引用符を使用できます。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If the value contains both single-quote and double-quote characters, the quotation mark character used to enclose the value must be doubled every time it occurs within the value.</source>
          <target state="translated">値に、一重引用符と二重引用符の両方の文字が含まれている場合は値内で発生するたびに値を囲むために使用する引用符文字が二重にする必要があります。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks.</source>
          <target state="translated">文字列値の先頭または末尾のスペースを含めるには、単一引用符または二重引用符のいずれかの値を囲む必要があります。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks.</source>
          <target state="translated">引用符で囲まれている場合でも、整数、ブール値、列挙値の先頭または末尾の空白は無視されます。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>However, spaces within a string literal keyword or value are preserved.</source>
          <target state="translated">ただし、文字列リテラル キーワードまたは値内にスペースが保持されます。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Single or double quotation marks may be used within a connection string without using delimiters (for example, Data Source= my'Server or Data Source= my"Server), unless a quotation mark character is the first or last character in the value.</source>
          <target state="translated">一重引用符または二重引用符は、区切り記号を使用せず、接続文字列内使用可能性があります (たとえば、データ ソース my'Server またはデータ ソースを = ="Server) 引用符文字が値の最初と最後の文字がない限り、します。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Keywords are not case sensitive.</source>
          <target state="translated">キーワードは、大文字と小文字が区別されません。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The following table lists the valid names for keyword values within the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>.</source>
          <target state="translated">次の表に、内のキーワードの値の有効な名前、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The following list contains the valid names for connection pooling values within the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>.</source>
          <target state="translated">次の一覧には、接続プール内の値の有効な名前が含まれています、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>For more information, see <bpt id="p1">[</bpt>SQL Server Connection Pooling (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>.</source>
          <target state="translated">詳しくは、「<bpt id="p1">[</bpt>SQL Server の接続プール (ADO.NET)<ept id="p1">](~/docs/framework/data/adonet/sql-server-connection-pooling.md)</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Connection Lifetime (or Load Balance Timeout)</source>
          <target state="translated">接続の有効期間 (または Load Balance Timeout)</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Enlist</source>
          <target state="translated">Enlist</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Max Pool Size</source>
          <target state="translated">Max Pool Size</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Min Pool Size</source>
          <target state="translated">Min Pool Size</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Pooling</source>
          <target state="translated">Pooling</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>When you are setting keyword or connection pooling values that require a Boolean value, you can use 'yes' instead of 'true', and 'no' instead of 'false'.</source>
          <target state="translated">キーワードまたは接続プールをブール値を必要とする値を設定するときに 'yes' 'true' および 'false' ではなく ' no' の代わりに使用できます。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Integer values are represented as strings.</source>
          <target state="translated">整数値は、文字列として表されます。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The .NET Framework Data Provider for SQL Server uses its own protocol to communicate with SQL Server.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server では、独自のプロトコルを使用して SQL Server と通信します。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Therefore, it does not support the use of an ODBC data source name (DSN) when connecting to SQL Server because it does not add an ODBC layer.</source>
          <target state="translated">したがって、ことはできませんの ODBC データ ソース名 (DSN) を使用して ODBC レイヤーを追加することはないために、SQL Server に接続するときにします。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>Universal data link (UDL) files are not supported for the .NET Framework Data Provider for SQL Server.</source>
          <target state="translated">Universal data link (UDL) ファイルは、.NET Framework Data provider for SQL Server サポートされていません。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>In this release, the application should use caution when constructing a connection string based on user input (for example when retrieving user ID and password information from a dialog box, and appending it to the connection string).</source>
          <target state="translated">このリリースで (たとえば、ダイアログ ボックスでは、接続文字列への追加とユーザー ID とパスワード情報を取得する場合など) のユーザー入力に基づいて接続文字列を構築するときに、アプリケーションが注意を使用する必要があります。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The application should make sure that a user cannot embed additional connection string parameters in these values (for example, entering a password as "validpassword;database=somedb" in an attempt to attach to a different database).</source>
          <target state="translated">アプリケーションは、ユーザーがこれらの値で追加の接続文字列パラメーターを埋め込むことはできないことを確認してください (たとえば、としてパスワードを入力する"なデータベース = somedb"別のデータベースをアタッチしようとすると、)。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>If you need to construct connection strings based on user input, use the new <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>, which validates the connection string and helps to eliminate this problem.</source>
          <target state="translated">ユーザー入力に基づいて接続文字列を構築する必要がある場合は、新しい使用<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>、する接続文字列を検証し、この問題を解決するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>See <bpt id="p1">[</bpt>Connection String Builders<ept id="p1">](~/docs/framework/data/adonet/connection-string-builders.md)</ept> for more information.</source>
          <target state="translated">参照してください<bpt id="p1">[</bpt>接続文字列ビルダー<ept id="p1">](~/docs/framework/data/adonet/connection-string-builders.md)</ept>詳細についてはします。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and sets the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> property before opening the connection.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>設定と、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>接続を開く前に、プロパティです。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ConnectionString">
          <source>An invalid connection string argument has been supplied, or a required connection string argument has not been supplied.</source>
          <target state="translated">無効な接続文字列引数が指定されたか、必要な接続文字列引数が指定されていません。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</source>
          <target state="translated">試行を中断してエラーを生成する前に、接続の確立時に待機する時間を取得します。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The time (in seconds) to wait for a connection to open.</source>
          <target state="translated">接続が開くのを待機する時間 (秒単位)。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The default value is 15 seconds.</source>
          <target state="translated">既定値は 15 秒です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>You can set the amount of time a connection waits to time out by using the <ph id="ph1">`Connect Timeout`</ph> or <ph id="ph2">`Connection Timeout`</ph> keywords in the connection string.</source>
          <target state="translated">使用してタイムアウトに接続の待機時間を設定することができます、<ph id="ph1">`Connect Timeout`</ph>または<ph id="ph2">`Connection Timeout`</ph>キーワード、接続文字列にします。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>A value of 0 indicates no limit, and should be avoided in a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph> because an attempt to connect waits indefinitely.</source>
          <target state="translated">値が 0 の制限がないことを示します。 とでは避ける必要があります、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>接続の試行が無限に待機するためです。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and sets the <ph id="ph2">`Connection Timeout`</ph> to 30 seconds in the connection string.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>設定と、<ph id="ph2">`Connection Timeout`</ph>接続文字列で 30 秒です。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The code opens the connection and displays the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A&gt;</ph> property in the console window.</source>
          <target state="translated">コードの接続を確立し、表示、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionTimeout%2A&gt;</ph>コンソール ウィンドウでプロパティです。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
          <source>The value set is less than 0.</source>
          <target state="translated">0 より小さい値が設定されました。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.CreateCommand">
          <source>Creates and returns a <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object associated with the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> に関連付けられている <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクトを作成し、返します。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.CreateCommand">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object for this connection.</source>
          <target state="translated">この接続の <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> オブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> object for this connection.</source>
          <target state="translated">この接続の <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlCredential" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source><ph id="ph1">`Persist Security Info = true`</ph> is required to get the value of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential&gt;</ph> object with <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Persist Security Info = true`</ph> 値を取得するために必要な<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCredential&gt;</ph>オブジェクト<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>The default value of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is null.</source>
          <target state="translated">既定値の<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>が null です。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception will be raised:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>例外が発生します。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set on an open connection.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>開いている接続に対して設定されています。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set when <ph id="ph2">`Context Connection=true`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>設定されている場合に<ph id="ph2">`Context Connection=true`</ph>です。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set when <ph id="ph2">`Integrated Security = true`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>設定されている場合に<ph id="ph2">`Integrated Security = true`</ph>です。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set when the connection string uses <ph id="ph2">`Password`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>接続文字列を使用する場合に設定されている<ph id="ph2">`Password`</ph>です。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Credential">
          <source>If <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph> is set when the connection string uses <ph id="ph2">`UserID`</ph>.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Credential%2A&gt;</ph>接続文字列を使用する場合に設定されている<ph id="ph2">`UserID`</ph>です。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>Gets the name of the current database or the database to be used after a connection is opened.</source>
          <target state="translated">現在のデータベース、または接続が開いてから使用するデータベースの名前を取得します。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>The name of the current database or the name of the database to be used after a connection is opened.</source>
          <target state="translated">現在のデータベース、または接続が開いてから使用するデータベースの名前。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>The default value is an empty string.</source>
          <target state="translated">既定値は空の文字列です。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Database%2A&gt;</ph> property updates dynamically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Database%2A&gt;</ph>プロパティを動的に更新します。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>If you change the current database using a <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph> statement or the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph> method, an informational message is sent and the property is updated automatically.</source>
          <target state="translated">現在のデータベースを使って変更する場合、<ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>ステートメントまたは<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ChangeDatabase%2A&gt;</ph>メソッドが、情報メッセージが送信され、プロパティが自動的に更新します。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.Database">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays some of its read-only properties.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>し、一部の読み取り専用プロパティを表示します。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>Gets the name of the instance of SQL Server to which to connect.</source>
          <target state="translated">接続先となる SQL Server のインスタンスの名前を取得します。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>The name of the instance of SQL Server to which to connect.</source>
          <target state="translated">接続先の SQL Server のインスタンスの名前。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>The default value is an empty string.</source>
          <target state="translated">既定値は空の文字列です。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.DataSource%2A&gt;</ph> property returns <ph id="ph2">`null`</ph> if the connection string for the <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> is "context connection=true".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.DataSource%2A&gt;</ph>プロパティから返される<ph id="ph2">`null`</ph>場合、接続文字列が、<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>は"コンテキスト接続 = true"です。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.DataSource">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays some of its read-only properties.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>し、一部の読み取り専用プロパティを表示します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>A reference to an existing <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph> in which to enlist.</source>
          <target state="translated">登録先の既存の <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ITransaction" /&gt;</ph> への参照。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
          <target state="translated">分散トランザクションとして指定したトランザクションに参加します。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph>分散トランザクションに参加させる方法です。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept> for this purpose.</source>
          <target state="translated">これにより、接続するため、<ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph>インスタンス、 <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept>で利用できる機能を活用、<ph id="ph2">&lt;xref:System.Transactions&gt;</ph>を管理するための名前空間は分散トランザクションを置き換えることが<bpt id="p2">**</bpt>どちら<ept id="p2">**</ept>この目的のためです。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>For more information, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>分散トランザクション<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>You can continue to enlist in an existing distributed transaction using the <bpt id="p1">**</bpt>EnlistDistributedTransaction<ept id="p1">**</ept> method if auto-enlistment is disabled.</source>
          <target state="translated">既存の分散トランザクションを使用して、参加を継続できます、<bpt id="p1">**</bpt>どちら<ept id="p1">**</ept>メソッドへの自動参加が無効になっている場合。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</source>
          <target state="translated">既存の分散トランザクションに参加させることにより、トランザクションがコミットまたはロールバックされた場合、データ ソース コードで行った変更もコミットまたはロールバックします。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source><ph id="ph1">`EnlistDistributedTransaction`</ph> returns an exception if the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> has already started a transaction using <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`EnlistDistributedTransaction`</ph> 例外を返します、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>がトランザクションを使用して、既に開始<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object), <bpt id="p1">**</bpt>EnlistDistributedTransaction<ept id="p1">**</ept> rolls back the local transaction and enlists in the existing distributed transaction as requested.</source>
          <target state="translated">ただし、トランザクションは、データ ソースで開始されたローカル トランザクション (たとえば、明示的に実行することによって、BEGIN TRANSACTION ステートメントを使用して、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>オブジェクト)、<bpt id="p1">**</bpt>どちら<ept id="p1">**</ept>ローカル トランザクションをロールバックし、要求されるとおり、既存の分散トランザクションに参加します。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
          <source>You do not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>.</source>
          <target state="translated">注意してください、ローカルのトランザクションがロールバックされていないローカル トランザクションの管理を担当の使用を開始は受け取りません<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>A reference to an existing <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> in which to enlist.</source>
          <target state="translated">登録先の既存の <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> への参照。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
          <target state="translated">分散トランザクションとして指定したトランザクションに参加します。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A&gt;</ph>分散トランザクションに参加させる方法です。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept>, which uses a <bpt id="p3">**</bpt>System.EnterpriseServices.ITransaction<ept id="p3">**</ept> object.</source>
          <target state="translated">これにより、接続するため、<ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph>インスタンス、 <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept>で利用できる機能を活用、<ph id="ph2">&lt;xref:System.Transactions&gt;</ph>を管理するための名前空間は分散トランザクションを置き換えることが<bpt id="p2">**</bpt>どちら<ept id="p2">**</ept>が使用される、 <bpt id="p3">**</bpt>System.EnterpriseServices.ITransaction<ept id="p3">**</ept>オブジェクト。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</source>
          <target state="translated">さらに、若干異なるセマンティクス: 接続は明示的にトランザクションに参加させる、一度参加解除されてまたはできない最初のトランザクションが終了するまで、別のトランザクションに参加しています。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
          <source>For more information about distributed transactions, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
          <target state="translated">分散トランザクションの詳細については、次を参照してください。<bpt id="p1">[</bpt>分散トランザクション<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /&gt;</ph> プロパティを取得または設定します。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /&gt;</ph> property has been set; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors" /&gt;</ph> プロパティが設定されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>When you set <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A&gt;</ph> to <ph id="ph2">`true`</ph>, errors that were previously treated as exceptions are now handled as <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> events.</source>
          <target state="translated">設定すると<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A&gt;</ph>に<ph id="ph2">`true`</ph>、エラーとして例外が処理されるようになりましたとして扱われました以前を<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>All events fire immediately and are handled by the event handler.</source>
          <target state="translated">すべてのイベントは、即座に発生し、イベント ハンドラーによって処理されます。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>If is <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, then <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> events are handled at the end of the procedure.</source>
          <target state="translated">場合は、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors%2A&gt;</ph>に設定されている<ph id="ph2">`false`</ph>、し<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph>イベントは、プロシージャの最後に処理します。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>An error with a severity level of 17 or above that causes the server to stop processing the command needs to be handled as an exception.</source>
          <target state="translated">コマンドの処理を停止するサーバーを原因となる重要度レベルが 17 以上のエラーは、例外として処理する必要があります。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>In this case, an exception is thrown regardless of how the error is handled in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> event.</source>
          <target state="translated">この場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> イベントによるエラー処理の方法にかかわらず例外がスローされます。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>For more information on working with events, see <bpt id="p1">[</bpt>Connection Events<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>.</source>
          <target state="translated">イベントの使用の詳細については、次を参照してください。<bpt id="p1">[</bpt>接続イベント<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.FireInfoMessageEventOnUserErrors">
          <source>For more information on errors generated by the SQL Server engine, see SQL Server Books Online.</source>
          <target state="translated">SQL Server エンジンによって生成されたエラーの詳細については、SQL Server オンライン ブックを参照してください。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="T:System.Data.SqlClient.SqlConnection">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> のデータ ソースのスキーマ情報を返します。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>If you attempt to retrieve schema information for more than one versioned stored procedure, the schema for the latest one only is returned.</source>
          <target state="translated">1 つ以上のバージョン管理されたストアド プロシージャのスキーマ情報を取得しようとすると、最新の 1 つのスキーマのみが返されます。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlClient.SqlConnection">
          <source>For more information on versioned stored procedures, see SQL Server Books Online.</source>
          <target state="translated">バージョン管理されたストアド プロシージャの詳細については、SQL Server オンライン ブックを参照してください。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> のデータ ソースのスキーマ情報を返します。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema">
          <source>For more information about scheme, see <bpt id="p1">[</bpt>SQL Server Schema Collections<ept id="p1">](http://msdn.microsoft.com/library/ms254969.aspx)</ept>.</source>
          <target state="translated">スキームの詳細については、「<bpt id="p1">[</bpt>SQL Server スキーマ コレクション<ept id="p1">](http://msdn.microsoft.com/library/ms254969.aspx)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information.</source>
          <target state="translated">スキーマ情報を格納する <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Specifies the name of the schema to return.</source>
          <target state="translated">返すスキーマの名前を指定します。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> using the specified string for the schema name.</source>
          <target state="translated">スキーマ名として指定した文字列を使用して、この <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> のデータ ソースのスキーマ情報を返します。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information.</source>
          <target state="translated">スキーマ情報を格納する <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>You may need the schema information of the database, tables or columns.</source>
          <target state="translated">データベース、テーブルまたは列のスキーマ情報を使用する必要があります。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>This sample:</source>
          <target state="translated">このサンプルでは:</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Uses GetSchema to get schema information.</source>
          <target state="translated">GetSchema を使用してスキーマ情報を取得します。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Use schema restrictions to get the specified information.</source>
          <target state="translated">スキーマの制限を使用すると、指定した情報を取得できます。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Gets schema information of the database, tables, and some columns.</source>
          <target state="translated">データベース、テーブル、および一部の列のスキーマ情報を取得します。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source>Before you run the sample, you need to create the sample database, using the following <ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>:</source>
          <target state="translated">サンプルを実行する前にする必要があります、サンプル データベースを作成する、次を使用して<ph id="ph1">[!INCLUDE[tsql](~/includes/tsql-md.md)]</ph>:</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source><bpt id="p1">[</bpt>How to Get Schema Information from Database<ept id="p1">](http://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2)</ept> has C# and Visual Basic versions of this code sample in a Visual Studio project.</source>
          <target state="translated"><bpt id="p1">[</bpt>データベースからスキーマ情報を取得する方法<ept id="p1">](http://code.msdn.microsoft.com/How-to-Get-Schema-b66d62e2)</ept>Visual Studio プロジェクトにこのコード サンプルの c# および Visual Basic のバージョンがあります。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String)">
          <source><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph> is specified as null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph> が null に指定されています。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>Specifies the name of the schema to return.</source>
          <target state="translated">返すスキーマの名前を指定します。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>A set of restriction values for the requested schema.</source>
          <target state="translated">要求したスキーマの制限値のセット。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> using the specified string for the schema name and the specified string array for the restriction values.</source>
          <target state="translated">スキーマ名に指定した文字列と制限値に指定した文字列配列を使用して、この <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> のデータ ソースのスキーマ情報を返します。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains schema information.</source>
          <target state="translated">スキーマ情報を格納する <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>The <ph id="ph1">`restrictionValues`</ph> parameter can supply <bpt id="p1">*</bpt>n<ept id="p1">*</ept> depth of values, which are specified by the restrictions collection for a specific collection.</source>
          <target state="translated"><ph id="ph1">`restrictionValues`</ph>パラメーターを指定できます<bpt id="p1">*</bpt>n<ept id="p1">*</ept> 、特定のコレクションの制限のコレクションで指定された値の深さ。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to <ph id="ph1">`null`</ph> and then put the appropriate value in for the restriction that you would like to specify a value for.</source>
          <target state="translated">指定された制限の値を設定して、他の制限値を設定しない、するために、前述の制限を設定する必要があります。<ph id="ph1">`null`</ph>しの値を指定するには、制限用に適切な値を格納します。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>An example of this is the "Tables" collection.</source>
          <target state="translated">この例では、"Tables"コレクションです。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>If the "Tables" collection has three restrictions--database, owner, and table name--and you want to get back only the tables associated with the owner "Carl", you need to pass in the following values: null, "Carl".</source>
          <target state="translated">"Tables"コレクションでは、データベース、所有者、3 つの制限とテーブル名があり、所有者"Carl"に関連付けられているテーブルのみに戻るには場合、は、次の値を渡す必要があります。:"Carl"は null です。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>If a restriction value is not passed in, the default values are used for that restriction.</source>
          <target state="translated">制限値が渡されない場合、既定値は、その制限に使用されます。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>This is the same mapping as passing in <ph id="ph1">`null`</ph>, which is different from passing in an empty string for the parameter value.</source>
          <target state="translated">これは渡すことと、同じマッピング<ph id="ph1">`null`</ph>、これとは異なるパラメーター値に空の文字列に渡すことです。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>In that case, the empty string ("") is considered to be the value for the specified parameter.</source>
          <target state="translated">その場合、空の文字列 ("") は、指定されたパラメーターの値であると見なされます。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source>For a code sample demonstrating <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.GetSchema%2A&gt;</ph>, see <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.GetSchema%2A&gt;</ph>.</source>
          <target state="translated">コード サンプルを示すため<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.GetSchema%2A&gt;</ph>を参照してください<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.GetSchema%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.GetSchema(System.String,System.String[])">
          <source><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph> is specified as null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collectionName" /&gt;</ph> が null に指定されています。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>Occurs when SQL Server returns a warning or informational message.</source>
          <target state="translated">SQL Server が警告メッセージまたは情報メッセージを返したときに発生します。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>Clients that want to process warnings or informational messages sent by the server should create an <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlInfoMessageEventHandler&gt;</ph> delegate to listen to this event.</source>
          <target state="translated">警告またはサーバーによって送信される情報のメッセージを処理するクライアントを作成する必要があります、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlInfoMessageEventHandler&gt;</ph>このイベントを待機するデリゲート。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> event occurs when a message with a severity of 10 or less is returned by SQL Server.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph>イベントは、重大度が 10 のメッセージまたは SQL Server によって以下が返されます。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>Messages that have a severity between 11 and 20 raise an error and messages that have a severity over 20 causes the connection to close.</source>
          <target state="translated">エラーおよびメッセージの重大度を 20 原因経由で接続が閉じ、11 から 20 までの重大度をメッセージが発生します。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>For more information on SQL Server error levels, see "Database Engine Error Severities" in SQL Server Books Online.</source>
          <target state="translated">SQL Server エラー レベルの詳細については、「データベース エンジン エラーの重大度」SQL Server オンライン ブックを参照してください。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.SqlClient.SqlConnection.InfoMessage">
          <source>For more information and an example, see <bpt id="p1">[</bpt>Connection Events<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>.</source>
          <target state="translated">例および詳細については、次を参照してください。<bpt id="p1">[</bpt>接続イベント<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>Opens a database connection with the property settings specified by the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /&gt;</ph> で指定したプロパティ設定を使用して、データベース接続を開きます。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> draws an open connection from the connection pool if one is available.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>がある場合、接続プールから、開いている接続を描画します。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>Otherwise, it establishes a new connection to an instance of SQL Server.</source>
          <target state="translated">それ以外の場合、SQL Server のインスタンスへの新しい接続を確立します。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> goes out of scope, it is not closed.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>スコープの移動のうち、終了していません。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>.</source>
          <target state="translated">したがって、する必要があります明示的に接続を呼び出して終了する<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>If you specify a port number other than 1433 when you are trying to connect to an instance of SQL Server and using a protocol other than TCP/IP, the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A&gt;</ph> method fails.</source>
          <target state="translated">TCP/IP、以外のプロトコルを使用して SQL Server のインスタンスに接続しようと 1433 以外のポート番号を指定する場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Open%2A&gt;</ph>メソッドは失敗します。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>To specify a port number other than 1433, include "server=machinename,port number" in the connection string, and use the TCP/IP protocol.</source>
          <target state="translated">1433 以外のポート番号を指定するには、"サーバー マシン名、ポート番号 ="接続文字列、および使用して、TCP/IP プロトコルでします。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The .NET Framework Data Provider for SQL Server requires the Security permission with "Allows calls to unmanaged assemblies" enabled (<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> with <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag&gt;</ph> set to <ph id="ph3">`UnmanagedCode`</ph>) to open a <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> with SQL Debugging enabled.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server には、「許可の呼び出しをアンマネージ アセンブリ」有効になっているセキュリティ権限が必要です (<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>で<ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag&gt;</ph>'éý' <ph id="ph3">`UnmanagedCode`</ph>) を開くには、 <ph id="ph4">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> SQL デバッグを有効にします。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, opens it, and displays some of its properties.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>が開き、プロパティの一部が表示されます。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The connection is automatically closed at the end of the <ph id="ph1">`using`</ph> block.</source>
          <target state="translated">接続がの末尾に自動的に閉じられる、<ph id="ph1">`using`</ph>ブロックします。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>Cannot open a connection without specifying a data source or server.</source>
          <target state="translated">データ ソースまたはサーバーを指定せずに接続を開くことはできません。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>or</source>
          <target state="translated">または</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The connection is already open.</source>
          <target state="translated">接続は既に開かれています。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>A connection-level error occurred while opening the connection.</source>
          <target state="translated">接続を開くときに発生した接続レベルのエラー。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>If the <ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlException.Number" /&gt;</ph> property contains the value 18487 or 18488, this indicates that the specified password has expired or must be reset.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlException.Number" /&gt;</ph> プロパティに値 18487 または 18488 が含まれている場合、指定したパスワードの有効期限が切れているか、リセットする必要があることを示しています。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>See the <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /&gt;</ph> method for more information.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.ChangePassword(System.String,System.String)" /&gt;</ph> メソッドを参照してください。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>The <ph id="ph1">&lt;see langword="&amp;lt;system.data.localdb&amp;gt;" /&gt;</ph> tag in the app.config file has invalid or unknown elements.</source>
          <target state="translated">app.config ファイルの <ph id="ph1">&lt;see langword="&amp;lt;system.data.localdb&amp;gt;" /&gt;</ph> タグに、使用できないか、不明な要素が含まれています。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.Open">
          <source>There are two entries with the same name in the <ph id="ph1">&lt;see langword="&amp;lt;localdbinstances&amp;gt;" /&gt;</ph> section.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="&amp;lt;localdbinstances&amp;gt;" /&gt;</ph> セクションに、同じ名前のエントリが 2 つ含まれています。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The cancellation instruction.</source>
          <target state="translated">取り消し命令。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>An asynchronous version of <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.Open" /&gt;</ph>, which opens a database connection with the property settings specified by the <ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /&gt;</ph> で指定したプロパティ設定を使用してデータベース接続を開く <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.Open" /&gt;</ph> の非同期バージョン。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The cancellation token can be used to request that the operation be abandoned before the connection timeout elapses.</source>
          <target state="translated">キャンセル トークンを使用すると、接続タイムアウトが経過する前に操作を破棄することを要求できます。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Exceptions will be propagated via the returned Task.</source>
          <target state="translated">例外は、返されたタスクによって伝達されます。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>If the connection timeout time elapses without successfully connecting, the returned Task will be marked as faulted with an Exception.</source>
          <target state="translated">接続が成功せずに接続タイムアウトの時間が経過した場合、返されるタスクは例外での失敗としてマークされます。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>The implementation returns a Task without blocking the calling thread for both pooled and non-pooled connections.</source>
          <target state="translated">実装は、プール済みの接続でもプールされていない接続でも、呼び出し元のスレッドをブロックすることなくタスクを返します。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>A task representing the asynchronous operation.</source>
          <target state="translated">非同期操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>After calling <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> must return <ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph> until the returned <ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph> is completed.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph>返す必要があります<ph id="ph3">&lt;xref:System.Data.ConnectionState.Connecting&gt;</ph>、返されるまで<ph id="ph4">&lt;xref:System.Threading.Tasks.Task&gt;</ph>が完了します。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Then, if the connection was successful, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>.</source>
          <target state="translated">次に、接続が成功した場合<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph>返す必要があります<ph id="ph2">&lt;xref:System.Data.ConnectionState.Open&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>If the connection fails, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph> must return <ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>.</source>
          <target state="translated">接続が失敗した場合、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph>返す必要があります<ph id="ph2">&lt;xref:System.Data.ConnectionState.Closed&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>A call to <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph> will attempt to cancel or close the corresponding <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph> call.</source>
          <target state="translated">呼び出し<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.Close%2A&gt;</ph>取り消すか、対応するクローズを試みます<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph>呼び出します。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see <bpt id="p1">[</bpt>Asynchronous Programming<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>.</source>
          <target state="translated">.NET Framework Data Provider for SQL Server の非同期プログラミングの詳細については、次を参照してください。<bpt id="p1">[</bpt>非同期プログラミング<ept id="p1">](~/docs/framework/data/adonet/asynchronous-programming.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Calling <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph> more than once for the same instance before task completion.</source>
          <target state="translated">タスクの完了前に、同じインスタンスに対して <ph id="ph1">&lt;see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph> を複数回呼び出しています。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> is specified in the connection string.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Context Connection=true" /&gt;</ph> が接続文字列に指定されています。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>A connection was not available from the connection pool before the connection time out elapsed.</source>
          <target state="translated">接続タイムアウトが経過する前に、接続プールから接続を使用できませんでした。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)">
          <source>Any error returned by SQL Server that occurred while opening the connection.</source>
          <target state="translated">接続を開くときに発生した SQL Server によって返されるすべてのエラー。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>Gets the size (in bytes) of network packets used to communicate with an instance of SQL Server.</source>
          <target state="translated">SQL Server のインスタンスと通信するために使用するネットワーク パケットのサイズ (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>The size (in bytes) of network packets.</source>
          <target state="translated">ネットワーク パケットのサイズ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>The default value is 8000.</source>
          <target state="translated">既定値は 8000 です。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>If an application performs bulk copy operations, or sends or receives lots of text or image data, a packet size larger than the default may improve efficiency because it causes fewer network read and write operations.</source>
          <target state="translated">アプリケーションは、一括コピー操作を実行または送信または、大量の text または image データの受信する場合、既定値より少ないネットワークが発生するため、効率が向上よりも大きいパケット サイズは読み取りおよび書き込み操作です。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>If an application sends and receives small amounts of information, you can set the packet size to 512 bytes (using the Packet Size value in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>), which is sufficient for most data transfer operations.</source>
          <target state="translated">アプリケーションは、少量の情報を送受信場合、は、パケット サイズを 512 バイトに設定できます (のパケット サイズの値を使用して、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A&gt;</ph>)、これはほとんどのデータ転送操作のための十分なです。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>For most applications, the default packet size is best.</source>
          <target state="translated">ほとんどのアプリケーションでの既定のパケット サイズをお勧めします。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> may be a value in the range of 512 and 32767 bytes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> 512 ~ 32767 バイトの範囲内の値があります。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>An exception is generated if the value is outside this range.</source>
          <target state="translated">値がこの範囲外にある場合、例外が生成されます。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>Setting the default value to a number greater than 8000 will cause the packets to use the MultiPage allocator on the instance of SQL Server instead of the much more efficient SinglePage allocator, reducing the overall scalability of the SQL Server.</source>
          <target state="translated">8000、パケットを SQL Server の全体的なスケーラビリティを減らす、はるかに効率的 SinglePage アロケーターの代わりに SQL Server のインスタンスで複数ページ アロケーターを使用するより大きい数値に既定値を設定します。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>For more information on how SQL Server uses memory, see <bpt id="p1">[</bpt>Memory Architecture<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143705)</ept> in SQL Server Books Online.</source>
          <target state="translated">SQL Server でメモリの使用方法の詳細については、次を参照してください。<bpt id="p1">[</bpt>メモリ アーキテクチャ<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=143705)</ept>SQL Server オンライン ブック。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, including setting the <ph id="ph2">`Packet Size`</ph> to 512 in the connection string.</source>
          <target state="translated">次の例を作成、 <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>、設定を含む、<ph id="ph2">`Packet Size`</ph>を接続文字列で 512 です。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.PacketSize">
          <source>It displays the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph> properties in the console window.</source>
          <target state="translated">表示、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.PacketSize%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph>コンソール ウィンドウのプロパティです。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})">
          <source>The custom providers</source>
          <target state="translated">カスタム プロバイダー</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.RegisterColumnEncryptionKeyStoreProviders(System.Collections.Generic.IDictionary{System.String,System.Data.SqlClient.SqlColumnEncryptionKeyStoreProvider})">
          <source>Registers the column encryption key store providers.</source>
          <target state="translated">列暗号化キー ストア プロバイダーを登録します。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.ResetStatistics">
          <source>If statistics gathering is enabled, all values are reset to zero.</source>
          <target state="translated">統計情報の収集が有効にされている場合、すべての値はゼロにリセットされます。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.ResetStatistics">
          <source>If statistics gathering is not enabled and this method is called, no error is thrown.</source>
          <target state="translated">統計情報の収集が有効になっていないと、このメソッドは、エラーはスローされません。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>Returns a name value pair collection of statistics at the point in time the method is called.</source>
          <target state="translated">メソッドが呼び出された時点の統計情報の、名前/値ペアから成るコレクションを返します。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>Returns a reference of type <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> items.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> アイテムの <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 型の参照を返します。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>When this method is called, the values retrieved are those at the current point in time.</source>
          <target state="translated">このメソッドが呼び出されると、取得した値されて現在の位置で時間。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>If you continue using the connection, the values are incorrect.</source>
          <target state="translated">続行する場合、接続を使用して、値が正しくありません。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.RetrieveStatistics">
          <source>You need to re-execute the method to obtain the most current values.</source>
          <target state="translated">最新の値を取得するメソッドを再度実行する必要があります。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>Gets a string that contains the version of the instance of SQL Server to which the client is connected.</source>
          <target state="translated">クライアントが接続している SQL Server のインスタンスのバージョンを示す文字列を取得します。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The version of the instance of SQL Server.</source>
          <target state="translated">SQL Server のインスタンスのバージョン。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The version is of the form <bpt id="p1">*</bpt>##.##.####<ept id="p1">*</ept>, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.</source>
          <target state="translated">形式は、バージョン<bpt id="p1">*</bpt>##. ##. ###<ept id="p1">*</ept>、ここで最初の 2 桁はメジャー バージョン、次の 2 桁はマイナーのバージョンであり、最後の 4 桁の数字は、リリース バージョン。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The string is of the form <bpt id="p1">*</bpt>major.minor.build<ept id="p1">*</ept>, where major and minor are exactly two digits and build is exactly four digits.</source>
          <target state="translated">文字列の形式は、 <bpt id="p1">*</bpt>major.minor.build<ept id="p1">*</ept>主な場所、ビルドが 4 桁の数字とマイナーは正確に 2 桁の数字です。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph> was called while the returned Task was not completed and the connection was not opened after a call to <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph>.</source>
          <target state="translated">返されるタスクが完了しておらず、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.OpenAsync%2A&gt;</ph> への呼び出しの後に接続が開かれていないときに、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph> が呼び出されました。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph> property.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>し、表示、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.ServerVersion%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source>The connection is closed.</source>
          <target state="translated">接続が閉じています。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.ServerVersion">
          <source><ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /&gt;</ph> was called while the returned Task was not completed and the connection was not opened after a call to <ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph>.</source>
          <target state="translated">返されるタスクが完了しておらず、<ph id="ph2">&lt;see cref="M:System.Data.SqlClient.SqlConnection.OpenAsync(System.Threading.CancellationToken)" /&gt;</ph> への呼び出しの後に接続が開かれていないときに、<ph id="ph1">&lt;see cref="P:System.Data.SqlClient.SqlConnection.ServerVersion" /&gt;</ph> が呼び出されました。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.State">
          <source>Indicates the state of the <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> during the most recent network operation performed on the connection.</source>
          <target state="translated">接続で実行された最も新しいネットワーク操作時の <ph id="ph1">&lt;see cref="T:System.Data.SqlClient.SqlConnection" /&gt;</ph> の状態を示します。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.State">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ConnectionState" /&gt;</ph> 列挙型。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.State">
          <source>Returns an <ph id="ph1">&lt;xref:System.Data.ConnectionState&gt;</ph> enumeration indicating the state of the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">返します、<ph id="ph1">&lt;xref:System.Data.ConnectionState&gt;</ph>の状態を示す列挙値、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.State">
          <source>Closing and reopening the connection will refresh the value of <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph>.</source>
          <target state="translated">値が更新されます閉じ、接続を再び開く<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.State%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
          <source>When set to <ph id="ph1">&lt;see langword="true" /&gt;</ph>, enables statistics gathering for the current connection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> に設定された場合、現在の接続について統計情報の収集が有効になります。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if statistics gathering is enabled; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">統計情報の収集が有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph> を返し、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> is the default.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> が既定値です。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.StatisticsEnabled">
          <source>Enabling statistics gathering has a minor, but measurable effect on performance and therefore should be enabled only when it is required.</source>
          <target state="translated">統計情報の収集を有効にして、パフォーマンスに与える影響は多少、したがってを有効にする必要がある場合のみです。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>Creates a new object that is a copy of the current instance.</source>
          <target state="translated">現在のインスタンスのコピーである新しいオブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>A new object that is a copy of this instance.</source>
          <target state="translated">このインスタンスのコピーである新しいオブジェクト。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlClient.SqlConnection.System#ICloneable#Clone">
          <source>This member is only supported by the .NET Compact Framework.</source>
          <target state="translated">このメンバーは、.NET Compact Framework でのみサポートされます。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>Gets a string that identifies the database client.</source>
          <target state="translated">データベース クライアントを識別する文字列を取得します。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>A string that identifies the database client.</source>
          <target state="translated">データベース クライアントを識別する文字列。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>If not specified, the name of the client computer.</source>
          <target state="translated">指定されていない場合は、クライアント コンピューターの名前。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>If neither is specified, the value is an empty string.</source>
          <target state="translated">どちらも指定されていない場合は、空の文字列。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>The string typically contains the network name of the client.</source>
          <target state="translated">文字列には、通常、クライアントのネットワーク名が含まれています。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A&gt;</ph> property corresponds to the <ph id="ph2">`Workstation ID`</ph> connection string property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A&gt;</ph>プロパティに対応して、<ph id="ph2">`Workstation ID`</ph>接続文字列プロパティです。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlClient.SqlConnection.WorkstationId">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph> and displays the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A&gt;</ph> property.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>し、表示、<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection.WorkstationId%2A&gt;</ph>プロパティです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>