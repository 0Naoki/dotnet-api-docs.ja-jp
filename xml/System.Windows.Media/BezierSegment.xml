<Type Name="BezierSegment" FullName="System.Windows.Media.BezierSegment">
  <TypeSignature Language="C#" Value="public sealed class BezierSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BezierSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BezierSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BezierSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class BezierSegment sealed : System::Windows::Media::PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fb180-101">2 つの点を結ぶ 3 次ベジエ曲線を表します。</span><span class="sxs-lookup"><span data-stu-id="fb180-101">Represents a cubic Bezier curve drawn between two points.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb180-102">使用して、<xref:System.Windows.Media.PathFigure>を格納するオブジェクト<xref:System.Windows.Media.BezierSegment>オブジェクトとその他のセグメント。</span><span class="sxs-lookup"><span data-stu-id="fb180-102">Use a <xref:System.Windows.Media.PathFigure> object to store <xref:System.Windows.Media.BezierSegment> objects and other segments.</span></span>  
  
 <span data-ttu-id="fb180-103">3 次ベジエ曲線が 4 つの点によって定義された: 始点、終点 (<xref:System.Windows.Media.BezierSegment.Point3%2A>) と 2 つのコントロール ポイント (<xref:System.Windows.Media.BezierSegment.Point1%2A>と<xref:System.Windows.Media.BezierSegment.Point2%2A>)。<xref:System.Windows.Media.BezierSegment>クラスには、曲線の開始点のプロパティが含まれていません。 終了ポイントだけを定義します。</span><span class="sxs-lookup"><span data-stu-id="fb180-103">A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="fb180-104">曲線の開始点は、現在のポイントの<xref:System.Windows.Media.PathFigure>先、<xref:System.Windows.Media.BezierSegment>を追加します。</span><span class="sxs-lookup"><span data-stu-id="fb180-104">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="fb180-105">3 次ベジエ曲線の 2 つの制御点は、磁石、直線自体にするにはの一部を獲得し、曲線を生成するように動作します。</span><span class="sxs-lookup"><span data-stu-id="fb180-105">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="fb180-106">最初の制御点<xref:System.Windows.Media.BezierSegment.Point1%2A>、先頭に影響を与える曲線の部分です。 2 番目の制御点<xref:System.Windows.Media.BezierSegment.Point2%2A>、曲線の終了部分に影響します。</span><span class="sxs-lookup"><span data-stu-id="fb180-106">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="fb180-107">曲線が; のコントロール ポイントのいずれかを通過しない必ずしもことに注意してください。各管理ポイントは、に向かって自体がそれ自体ではなく、行の一部を移動します。</span><span class="sxs-lookup"><span data-stu-id="fb180-107">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
## <a name="freezable-features"></a><span data-ttu-id="fb180-108">Freezable 機能</span><span class="sxs-lookup"><span data-stu-id="fb180-108">Freezable Features</span></span>  
 <span data-ttu-id="fb180-109">A<xref:System.Windows.Media.BezierSegment>の種類は、<xref:System.Windows.Freezable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fb180-109">A <xref:System.Windows.Media.BezierSegment> is a type of <xref:System.Windows.Freezable> object.</span></span> <span data-ttu-id="fb180-110">について<xref:System.Windows.Freezable>の凍結と、複製などの機能を参照してください、 [Freezable オブジェクトの概要](~/docs/framework/wpf/advanced/freezable-objects-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fb180-110">For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fb180-111"><see cref="T:System.Windows.Media.BezierSegment" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fb180-111">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb180-112"><see cref="T:System.Windows.Media.BezierSegment" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fb180-112">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb180-113">3 次ベジエ曲線が 4 つの点によって定義された: 始点、終点 (`point3`) と 2 つのコントロール ポイント (`point1`と`point2`)。</span><span class="sxs-lookup"><span data-stu-id="fb180-113">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="fb180-114">このメソッドで使用する曲線の開始点を指定できません。曲線がの現在の位置で始まって、<xref:System.Windows.Media.PathFigure>オブジェクトを<xref:System.Windows.Media.BezierSegment>を追加します。</span><span class="sxs-lookup"><span data-stu-id="fb180-114">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="fb180-115">3 次ベジエ曲線の 2 つの制御点は、磁石、直線自体にするにはの一部を獲得し、曲線を生成するように動作します。</span><span class="sxs-lookup"><span data-stu-id="fb180-115">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="fb180-116">最初の制御点`point1`、先頭に影響を与える曲線の部分です。 2 番目の制御点`point2`、曲線の終了部分に影響します。</span><span class="sxs-lookup"><span data-stu-id="fb180-116">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="fb180-117">曲線が; のコントロール ポイントのいずれかを通過しない必ずしもことに注意してください。各管理ポイントは、に向かって自体がそれ自体ではなく、行の一部を移動します。</span><span class="sxs-lookup"><span data-stu-id="fb180-117">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="fb180-118">曲線の開始部分を決定する、最初のコントロール ポイント。</span><span class="sxs-lookup"><span data-stu-id="fb180-118">The first control point, which determines the beginning portion of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="fb180-119">曲線の終了部分を決定する、2 番目のコントロール ポイント。</span><span class="sxs-lookup"><span data-stu-id="fb180-119">The second control point, which determines the ending portion of the curve.</span></span></param>
        <param name="point3"><span data-ttu-id="fb180-120">曲線を描画するポイント。</span><span class="sxs-lookup"><span data-stu-id="fb180-120">The point to which the curve is drawn.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="fb180-121"><see cref="T:System.Windows.Media.Pen" /> を使用してセグメントを描画するときに曲線のストロークを描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fb180-121"><see langword="true" /> to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fb180-122">指定した制御点、終点、およびストローク オプションを使用して <see cref="T:System.Windows.Media.BezierSegment" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fb180-122">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb180-123">3 次ベジエ曲線が 4 つの点によって定義された: 始点、終点 (`point3`) と 2 つのコントロール ポイント (`point1`と`point2`)。</span><span class="sxs-lookup"><span data-stu-id="fb180-123">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="fb180-124">このメソッドで使用する曲線の開始点を指定できません。曲線がの現在の位置で始まって、<xref:System.Windows.Media.PathFigure>オブジェクトを<xref:System.Windows.Media.BezierSegment>を追加します。</span><span class="sxs-lookup"><span data-stu-id="fb180-124">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="fb180-125">3 次ベジエ曲線の 2 つの制御点は、磁石、直線自体にするにはの一部を獲得し、曲線を生成するように動作します。</span><span class="sxs-lookup"><span data-stu-id="fb180-125">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="fb180-126">最初の制御点`point1`、先頭に影響を与える曲線の部分です。 2 番目の制御点`point2`、曲線の終了部分に影響します。</span><span class="sxs-lookup"><span data-stu-id="fb180-126">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="fb180-127">曲線が; のコントロール ポイントのいずれかを通過しない必ずしもことに注意してください。各管理ポイントは、に向かって自体がそれ自体ではなく、行の一部を移動します。</span><span class="sxs-lookup"><span data-stu-id="fb180-127">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb180-128">この <see cref="T:System.Windows.Media.BezierSegment" /> の変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fb180-128">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values.</span></span> <span data-ttu-id="fb180-129">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span><span class="sxs-lookup"><span data-stu-id="fb180-129">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="fb180-130">現在のオブジェクトの変更可能な複製。</span><span class="sxs-lookup"><span data-stu-id="fb180-130">A modifiable clone of the current object.</span></span> <span data-ttu-id="fb180-131">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fb180-131">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb180-132">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fb180-132">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="fb180-133">便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="fb180-133">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="fb180-134">詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fb180-134">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fb180-135">この <see cref="T:System.Windows.Media.BezierSegment" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fb180-135">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="fb180-136">リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</span><span class="sxs-lookup"><span data-stu-id="fb180-136">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <returns><span data-ttu-id="fb180-137">現在のオブジェクトの変更可能な複製。</span><span class="sxs-lookup"><span data-stu-id="fb180-137">A modifiable clone of the current object.</span></span> <span data-ttu-id="fb180-138">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see langword="false" /> プロパティが <see cref="P:System.Windows.Freezable.IsFrozen" /> であった場合でも、<see langword="true" /> になります。</span><span class="sxs-lookup"><span data-stu-id="fb180-138">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb180-139">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="fb180-139">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="fb180-140">便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="fb180-140">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="fb180-141">詳細については、「<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fb180-141">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point1" />
      <MemberSignature Language="VB.NET" Value="Public Property Point1 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point1 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb180-142">曲線の最初の制御点を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fb180-142">Gets or sets the first control point of the curve.</span></span></summary>
        <value><span data-ttu-id="fb180-143">曲線の最初の制御点。</span><span class="sxs-lookup"><span data-stu-id="fb180-143">The first control point of the curve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb180-144">3 次ベジエ曲線の 2 つの制御点は、磁石、直線自体にするにはの一部を獲得し、曲線を生成するように動作します。</span><span class="sxs-lookup"><span data-stu-id="fb180-144">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="fb180-145">最初の制御点<xref:System.Windows.Media.BezierSegment.Point1%2A>、先頭に影響を与える曲線の部分です。 2 番目の制御点<xref:System.Windows.Media.BezierSegment.Point2%2A>、曲線の終了部分に影響します。</span><span class="sxs-lookup"><span data-stu-id="fb180-145">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="fb180-146">曲線が; のコントロール ポイントのいずれかを通過しない必ずしもことに注意してください。各管理ポイントは、に向かって自体がそれ自体ではなく、行の一部を移動します。</span><span class="sxs-lookup"><span data-stu-id="fb180-146">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point1"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fb180-147">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fb180-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fb180-148">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fb180-148">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point1Property>|  
|<span data-ttu-id="fb180-149">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fb180-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="fb180-150">なし</span><span class="sxs-lookup"><span data-stu-id="fb180-150">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point1Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point1Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point1Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point1Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb180-151"><see cref="P:System.Windows.Media.BezierSegment.Point1" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="fb180-151">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point2" />
      <MemberSignature Language="VB.NET" Value="Public Property Point2 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point2 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb180-152">曲線の 2 番目の制御点を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fb180-152">Gets or sets the second control point of the curve.</span></span></summary>
        <value><span data-ttu-id="fb180-153">曲線の 2 番目の制御点。</span><span class="sxs-lookup"><span data-stu-id="fb180-153">The second control point of the curve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb180-154">3 次ベジエ曲線の 2 つの制御点は、磁石、直線自体にするにはの一部を獲得し、曲線を生成するように動作します。</span><span class="sxs-lookup"><span data-stu-id="fb180-154">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="fb180-155">最初の制御点<xref:System.Windows.Media.BezierSegment.Point1%2A>、先頭に影響を与える曲線の部分です。 2 番目の制御点<xref:System.Windows.Media.BezierSegment.Point2%2A>、曲線の終了部分に影響します。</span><span class="sxs-lookup"><span data-stu-id="fb180-155">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="fb180-156">曲線が; のコントロール ポイントのいずれかを通過しない必ずしもことに注意してください。各管理ポイントは、に向かって自体がそれ自体ではなく、行の一部を移動します。</span><span class="sxs-lookup"><span data-stu-id="fb180-156">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point2"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fb180-157">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fb180-157">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fb180-158">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fb180-158">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point2Property>|  
|<span data-ttu-id="fb180-159">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fb180-159">Metadata properties set to `true`</span></span>|<span data-ttu-id="fb180-160">なし</span><span class="sxs-lookup"><span data-stu-id="fb180-160">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point2Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point2Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point2Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point2Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb180-161"><see cref="P:System.Windows.Media.BezierSegment.Point2" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="fb180-161">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point3" />
      <MemberSignature Language="VB.NET" Value="Public Property Point3 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point3 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb180-162">曲線の終点を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fb180-162">Gets or sets the end point of the curve.</span></span></summary>
        <value><span data-ttu-id="fb180-163">曲線の終点。</span><span class="sxs-lookup"><span data-stu-id="fb180-163">The end point of the curve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb180-164"><xref:System.Windows.Media.BezierSegment>クラスには、曲線の開始点のプロパティが含まれていません。 終了ポイントだけを定義します。</span><span class="sxs-lookup"><span data-stu-id="fb180-164">The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="fb180-165">曲線の開始点は、現在のポイントの<xref:System.Windows.Media.PathFigure>先、<xref:System.Windows.Media.BezierSegment>を追加します。</span><span class="sxs-lookup"><span data-stu-id="fb180-165">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
<a name="dependencyPropertyInfo_Point3"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fb180-166">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="fb180-166">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fb180-167">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="fb180-167">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point3Property>|  
|<span data-ttu-id="fb180-168">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="fb180-168">Metadata properties set to `true`</span></span>|<span data-ttu-id="fb180-169">なし</span><span class="sxs-lookup"><span data-stu-id="fb180-169">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point3Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point3Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point3Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point3Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fb180-170"><see cref="P:System.Windows.Media.BezierSegment.Point3" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="fb180-170">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>