<Type Name="StreamGeometryContext" FullName="System.Windows.Media.StreamGeometryContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="752110559efba4524aa387d56d362fb0e45a4b37" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52224651" /></Metadata><TypeSignature Language="C#" Value="public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamGeometryContext extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.StreamGeometryContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamGeometryContext&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamGeometryContext abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <TypeSignature Language="F#" Value="type StreamGeometryContext = class&#xA;    inherit DispatcherObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="71270-101">描画コマンドを使用してジオメトリを記述します。</span><span class="sxs-lookup"><span data-stu-id="71270-101">Describes a geometry using drawing commands.</span></span> <span data-ttu-id="71270-102">データ バインディング、アニメーション、変更をサポートしない軽量のジオメトリを作成する場合に、このクラスを <see cref="T:System.Windows.Media.StreamGeometry" /> クラスと共に使用します。</span><span class="sxs-lookup"><span data-stu-id="71270-102">This class is used with the <see cref="T:System.Windows.Media.StreamGeometry" /> class to create a lightweight geometry that does not support data binding, animation, or modification.</span></span></summary>
    <remarks>To be added.</remarks>
    <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71270-103"><see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図形を開始せずに、セグメントを追加しようとしました。</span><span class="sxs-lookup"><span data-stu-id="71270-103">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
    <altmember cref="T:System.Windows.Media.StreamGeometry" />
    <altmember cref="T:System.Windows.Media.PathGeometry" />
  </Docs>
  <Members>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ArcTo(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member ArcTo : System.Windows.Point * System.Windows.Size * double * bool * System.Windows.Media.SweepDirection * bool * bool -&gt; unit" Usage="streamGeometryContext.ArcTo (point, size, rotationAngle, isLargeArc, sweepDirection, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="71270-104">円弧の終わりを示す終点。</span><span class="sxs-lookup"><span data-stu-id="71270-104">The destination point for the end of the arc.</span></span></param>
        <param name="size"><span data-ttu-id="71270-105">周囲の長さを使用して角度を描画する、楕円の半径 (幅と高さがそれぞれ半分)。</span><span class="sxs-lookup"><span data-stu-id="71270-105">The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle.</span></span> <span data-ttu-id="71270-106">楕円がすべての方向において丸みを帯びている場合、円弧は丸くなり、フラットに近い場合は円弧になります。たとえば、非常に大きな幅と高さによって非常に大きな楕円を表すと、角度がわずかに曲がります。</span><span class="sxs-lookup"><span data-stu-id="71270-106">If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.</span></span></param>
        <param name="rotationAngle"><span data-ttu-id="71270-107">曲線を指定する楕円の回転角度。</span><span class="sxs-lookup"><span data-stu-id="71270-107">The rotation angle of the oval that specifies the curve.</span></span> <span data-ttu-id="71270-108">円弧の曲率は、このパラメーターを使用して回転できます。</span><span class="sxs-lookup"><span data-stu-id="71270-108">The curvature of the arc can be rotated with this parameter.</span></span></param>
        <param name="isLargeArc"><span data-ttu-id="71270-109">180 度よりも大きい円弧を描画する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-109"><see langword="true" /> to draw the arc greater than 180 degrees; otherwise, <see langword="false" />.</span></span></param>
        <param name="sweepDirection"><span data-ttu-id="71270-110">円弧が <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> または <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> のどちらの方向で描画されるかを示す値。</span><span class="sxs-lookup"><span data-stu-id="71270-110">A value that indicates whether the arc is drawn in the <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> or <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> direction.</span></span></param>
        <param name="isStroked"><span data-ttu-id="71270-111"><see cref="T:System.Windows.Media.Pen" /> を使用してセグメントを描画するときにセグメントに線を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-111"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="71270-112"><see cref="T:System.Windows.Media.Pen" /> で線を付けたときに、このセグメントと前のセグメントの結合部分を角として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-112"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="71270-113">指定したポイントに円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="71270-113">Draws an arc to the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71270-114">このメソッドは、その開始点として、前のセグメントの終点を使用します。</span><span class="sxs-lookup"><span data-stu-id="71270-114">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="71270-115">指定されたポイントを使用して、図の最初のセグメントをする場合、<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>メソッドの開始点として。</span><span class="sxs-lookup"><span data-stu-id="71270-115">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="71270-116">A<xref:System.Windows.Media.StreamGeometry>が含まれている場合、シリアル化することはできません、<xref:System.Windows.Media.Transform>または線を付ける以外またはセグメントを塗らいずれか。</span><span class="sxs-lookup"><span data-stu-id="71270-116">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71270-117">次の例を使用して、円弧の描画方法を示しています、<xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="71270-117">The following example shows how to draw an arc using the <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginFigure">
      <MemberSignature Language="C#" Value="public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginFigure(valuetype System.Windows.Point startPoint, bool isFilled, bool isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginFigure (startPoint As Point, isFilled As Boolean, isClosed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginFigure(System::Windows::Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="F#" Value="abstract member BeginFigure : System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.BeginFigure (startPoint, isFilled, isClosed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Windows.Point" />
        <Parameter Name="isFilled" Type="System.Boolean" />
        <Parameter Name="isClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint"><span data-ttu-id="71270-118">図形が開始される <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="71270-118">The <see cref="T:System.Windows.Point" /> where the figure begins.</span></span></param>
        <param name="isFilled"><span data-ttu-id="71270-119">この図形に含まれる領域を、ヒット テスト、レンダリング、およびクリッピングに使用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-119"><see langword="true" /> to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, <see langword="false" />.</span></span></param>
        <param name="isClosed"><span data-ttu-id="71270-120">図形を閉じる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-120"><see langword="true" /> to close the figure; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="71270-121">たとえば、2 本の接続線が描画され、<paramref name="isClosed" /> が <see langword="false" /> に設定されている場合、描画は単なる 2 本の線になりますが、<paramref name="isClosed" /> が <see langword="true" /> に設定されている場合は、2 本の線が閉じて三角形が作成されます。</span><span class="sxs-lookup"><span data-stu-id="71270-121">For example, if two connecting lines are drawn, and <paramref name="isClosed" /> is set to <see langword="false" />, the drawing will just be of two lines but if <paramref name="isClosed" /> is set to <see langword="true" />, the two lines will be closed to create a triangle.</span></span></param>
        <summary><span data-ttu-id="71270-122">新しい図形の始点を指定します。</span><span class="sxs-lookup"><span data-stu-id="71270-122">Specifies the starting point for a new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71270-123">このメソッドを複数回呼び出すこの内の複数の図形 (自己完結型の幾何学的図形) を作成することができます<xref:System.Windows.Media.StreamGeometryContext>します。</span><span class="sxs-lookup"><span data-stu-id="71270-123">By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <xref:System.Windows.Media.StreamGeometryContext>.</span></span>  
  
 <span data-ttu-id="71270-124">A<xref:System.Windows.Media.StreamGeometry>が含まれている場合、シリアル化することはできません、<xref:System.Windows.Media.Transform>または線を付ける以外またはセグメントを塗らいずれか。</span><span class="sxs-lookup"><span data-stu-id="71270-124">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierTo">
      <MemberSignature Language="C#" Value="public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BezierTo (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BezierTo(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member BezierTo : System.Windows.Point * System.Windows.Point * System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.BezierTo (point1, point2, point3, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="71270-125">曲線の形状を指定するために使用する 1 つ目の制御点。</span><span class="sxs-lookup"><span data-stu-id="71270-125">The first control point used to specify the shape of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="71270-126">曲線の形状を指定するために使用する 2 つ目の制御点。</span><span class="sxs-lookup"><span data-stu-id="71270-126">The second control point used to specify the shape of the curve.</span></span></param>
        <param name="point3"><span data-ttu-id="71270-127">曲線の末尾を示す終点。</span><span class="sxs-lookup"><span data-stu-id="71270-127">The destination point for the end of the curve.</span></span></param>
        <param name="isStroked"><span data-ttu-id="71270-128"><see cref="T:System.Windows.Media.Pen" /> を使用してセグメントを描画するときにセグメントに線を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-128"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="71270-129"><see cref="T:System.Windows.Media.Pen" /> で線を付けたときに、このセグメントと前のセグメントの結合部分を角として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-129"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="71270-130">指定したポイントにベジエ曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="71270-130">Draws a Bezier curve to the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71270-131">3 次ベジエ曲線は、開始点、終点、および 2 つの制御点によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="71270-131">A cubic Bezier curve is defined by a start point, end point, and two control points.</span></span> <span data-ttu-id="71270-132">最初の制御点は、セグメントの最初の半分の曲率を決定し、2 つ目のコントロール ポイントが、セグメントの 2 つ目の半分の曲率を決定します。</span><span class="sxs-lookup"><span data-stu-id="71270-132">The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.</span></span>  
  
 <span data-ttu-id="71270-133">このメソッドは、その開始点として、前のセグメントの終点を使用します。</span><span class="sxs-lookup"><span data-stu-id="71270-133">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="71270-134">指定されたポイントを使用して、図の最初のセグメントをする場合、<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>メソッドの開始点として。</span><span class="sxs-lookup"><span data-stu-id="71270-134">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="71270-135">A<xref:System.Windows.Media.StreamGeometry>が含まれている場合、シリアル化することはできません、<xref:System.Windows.Media.Transform>または線を付ける以外またはセグメントを塗らいずれか。</span><span class="sxs-lookup"><span data-stu-id="71270-135">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71270-136">次の例を使用してベジエ曲線を描画する方法を示しています、<xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="71270-136">The following example shows how to draw a Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71270-137"><see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図形を開始せずに、セグメントを追加しようとしました。</span><span class="sxs-lookup"><span data-stu-id="71270-137">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="streamGeometryContext.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71270-138">このコンテキストを閉じて、そのコンテンツをフラッシュし、コンテンツをレンダリングできるようにします。</span><span class="sxs-lookup"><span data-stu-id="71270-138">Closes this context and flushes its content so that it can be rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71270-139">閉じられると、コンテキストを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="71270-139">Once closed, the context cannot be modified.</span></span> <span data-ttu-id="71270-140">コンテキストは、そのコンテンツをレンダリングする前に閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="71270-140">The context must be closed before its content can be rendered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="71270-141">このコンテキストは、既に閉じられているか破棄されています。</span><span class="sxs-lookup"><span data-stu-id="71270-141">This context has already been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(valuetype System.Windows.Point point, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LineTo(System::Windows::Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member LineTo : System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.LineTo (point, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="71270-142">直線の終わりを示す終点。</span><span class="sxs-lookup"><span data-stu-id="71270-142">The destination point for the end of the line.</span></span></param>
        <param name="isStroked"><span data-ttu-id="71270-143"><see cref="T:System.Windows.Media.Pen" /> を使用してセグメントを描画するときにセグメントに線を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-143"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="71270-144"><see cref="T:System.Windows.Media.Pen" /> で線を付けたときに、このセグメントと前のセグメントの結合部分を角として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-144"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="71270-145">指定した <see cref="T:System.Windows.Point" /> に向かって直線を描画します。</span><span class="sxs-lookup"><span data-stu-id="71270-145">Draws a straight line to the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71270-146">このメソッドは、その開始点として、前のセグメントの終点を使用します。</span><span class="sxs-lookup"><span data-stu-id="71270-146">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="71270-147">指定されたポイントを使用して、図の最初のセグメントをする場合、<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>メソッドの開始点として。</span><span class="sxs-lookup"><span data-stu-id="71270-147">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="71270-148">A<xref:System.Windows.Media.StreamGeometry>が含まれている場合、シリアル化することはできません、<xref:System.Windows.Media.Transform>または線を付ける以外またはセグメントを塗らいずれか。</span><span class="sxs-lookup"><span data-stu-id="71270-148">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71270-149">次の例を使用して、三角形を描画する方法を示しています、<xref:System.Windows.Media.StreamGeometryContext.LineTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="71270-149">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71270-150"><see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図形を開始せずに、セグメントを追加しようとしました。</span><span class="sxs-lookup"><span data-stu-id="71270-150">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member PolyBezierTo : System.Collections.Generic.IList&lt;System.Windows.Point&gt; * bool * bool -&gt; unit" Usage="streamGeometryContext.PolyBezierTo (points, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="71270-151">1 本以上のベジエ曲線の制御点と終点を指定する点のリスト。</span><span class="sxs-lookup"><span data-stu-id="71270-151">The list of points that specify control points and destination points for one or more Bezier curves.</span></span> <span data-ttu-id="71270-152">このリスト内の点の数は 3 の倍数にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="71270-152">The number of points in this list should be a multiple of three.</span></span></param>
        <param name="isStroked"><span data-ttu-id="71270-153"><see cref="T:System.Windows.Media.Pen" /> を使用してセグメントを描画するときにセグメントに線を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-153"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="71270-154"><see cref="T:System.Windows.Media.Pen" /> で線を付けたときに、このセグメントと前のセグメントの結合部分を角として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-154"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="71270-155">1 本以上の接続されたベジエ曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="71270-155">Draws one or more connected Bezier curves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71270-156">最初のポイントで`points`最初の制御点を指定します、[次へ] を 2 つ目のコントロール ポイントを指定します、3 番目のポイントを終点を指定します、次の点を次の曲線の最初の制御点を指定します。</span><span class="sxs-lookup"><span data-stu-id="71270-156">The first point in `points` specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on.</span></span>  
  
 <span data-ttu-id="71270-157">このメソッドは、その開始点として、前のセグメントの終点を使用します。</span><span class="sxs-lookup"><span data-stu-id="71270-157">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="71270-158">指定されたポイントを使用して、図の最初のセグメントをする場合、<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>メソッドの開始点として。</span><span class="sxs-lookup"><span data-stu-id="71270-158">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="71270-159">A<xref:System.Windows.Media.StreamGeometry>が含まれている場合、シリアル化することはできません、<xref:System.Windows.Media.Transform>または線を付ける以外またはセグメントを塗らいずれか。</span><span class="sxs-lookup"><span data-stu-id="71270-159">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71270-160">次の例を使用して、接続された複数のベジエ曲線を描画する方法を示しています、<xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="71270-160">The following example shows how to draw multiple connected Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71270-161"><see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図形を開始せずに、セグメントを追加しようとしました。</span><span class="sxs-lookup"><span data-stu-id="71270-161">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyLineTo">
      <MemberSignature Language="C#" Value="public abstract void PolyLineTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyLineTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyLineTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyLineTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member PolyLineTo : System.Collections.Generic.IList&lt;System.Windows.Point&gt; * bool * bool -&gt; unit" Usage="streamGeometryContext.PolyLineTo (points, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="71270-162">1 本以上の接続された直線の終点を指定する点のコレクション。</span><span class="sxs-lookup"><span data-stu-id="71270-162">The collection of points that specify destination points for one or more connected straight lines.</span></span></param>
        <param name="isStroked"><span data-ttu-id="71270-163"><see cref="T:System.Windows.Media.Pen" /> を使用してセグメントを描画するときにセグメントに線を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-163"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="71270-164"><see cref="T:System.Windows.Media.Pen" /> で線を付けたときに、このセグメントと前のセグメントの結合部分を角として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-164"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="71270-165">1 本以上の接続された直線を描画します。</span><span class="sxs-lookup"><span data-stu-id="71270-165">Draws one or more connected straight lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71270-166">このメソッドは、その開始点として、前のセグメントの終点を使用します。</span><span class="sxs-lookup"><span data-stu-id="71270-166">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="71270-167">指定されたポイントを使用して、図の最初のセグメントをする場合、<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>メソッドの開始点として。</span><span class="sxs-lookup"><span data-stu-id="71270-167">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="71270-168">A<xref:System.Windows.Media.StreamGeometry>が含まれている場合、シリアル化することはできません、<xref:System.Windows.Media.Transform>または線を付ける以外またはセグメントを塗らいずれか。</span><span class="sxs-lookup"><span data-stu-id="71270-168">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71270-169">次の例を使用して、三角形を描画する方法を示しています、<xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="71270-169">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71270-170"><see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図形を開始せずに、セグメントを追加しようとしました。</span><span class="sxs-lookup"><span data-stu-id="71270-170">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyQuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyQuadraticBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyQuadraticBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyQuadraticBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member PolyQuadraticBezierTo : System.Collections.Generic.IList&lt;System.Windows.Point&gt; * bool * bool -&gt; unit" Usage="streamGeometryContext.PolyQuadraticBezierTo (points, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="71270-171">1 本以上の 2 次ベジエ曲線の制御点と終点を指定する点のコレクション。</span><span class="sxs-lookup"><span data-stu-id="71270-171">The collection of points that specify control points and destination points for one or more quadratic Bezier curves.</span></span> <span data-ttu-id="71270-172">リスト内の最初の点は曲線の制御点、次の点は終点、その次の点は次の曲線の制御点というように、各点はそれぞれ対応する点を指定します。</span><span class="sxs-lookup"><span data-stu-id="71270-172">The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on.</span></span> <span data-ttu-id="71270-173">リストに含まれる点の数は偶数であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="71270-173">The list must contain an even number of points.</span></span></param>
        <param name="isStroked"><span data-ttu-id="71270-174"><see cref="T:System.Windows.Media.Pen" /> を使用してセグメントを描画するときにセグメントに線を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-174"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="71270-175"><see cref="T:System.Windows.Media.Pen" /> で線を付けたときに、このセグメントと前のセグメントの結合部分を角として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-175"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="71270-176">1 本以上の接続された 2 次ベジエ曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="71270-176">Draws one or more connected quadratic Bezier curves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71270-177">このメソッドは、その開始点として、前のセグメントの終点を使用します。</span><span class="sxs-lookup"><span data-stu-id="71270-177">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="71270-178">指定されたポイントを使用して、図の最初のセグメントをする場合、<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>メソッドの開始点として。</span><span class="sxs-lookup"><span data-stu-id="71270-178">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="71270-179">A<xref:System.Windows.Media.StreamGeometry>が含まれている場合、シリアル化することはできません、<xref:System.Windows.Media.Transform>または線を付ける以外またはセグメントを塗らいずれか。</span><span class="sxs-lookup"><span data-stu-id="71270-179">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71270-180">次の例では、複数接続している 2 次ベジエ曲線を使用して描画する方法を示しています、<xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="71270-180">The following example shows how to draw multiple connected quadratic Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71270-181"><see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図形を開始せずに、セグメントを追加しようとしました。</span><span class="sxs-lookup"><span data-stu-id="71270-181">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="QuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuadraticBezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub QuadraticBezierTo (point1 As Point, point2 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void QuadraticBezierTo(System::Windows::Point point1, System::Windows::Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member QuadraticBezierTo : System.Windows.Point * System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.QuadraticBezierTo (point1, point2, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="71270-182">曲線の形状を指定するために使用する制御点。</span><span class="sxs-lookup"><span data-stu-id="71270-182">The control point used to specify the shape of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="71270-183">曲線の末尾を示す終点。</span><span class="sxs-lookup"><span data-stu-id="71270-183">The destination point for the end of the curve.</span></span></param>
        <param name="isStroked"><span data-ttu-id="71270-184"><see cref="T:System.Windows.Media.Pen" /> を使用してセグメントを描画するときにセグメントに線を付ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-184"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="71270-185"><see cref="T:System.Windows.Media.Pen" /> で線を付けたときに、このセグメントと前のセグメントの結合部分を角として扱う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71270-185"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="71270-186">2 次ベジエ曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="71270-186">Draws a quadratic Bezier curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71270-187">2 次ベジエ曲線は 2 つのコントロール ポイントを使用して 3 次ベジエ曲線とは異なり、1 つのコントロール ポイントを使用します。</span><span class="sxs-lookup"><span data-stu-id="71270-187">Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.</span></span>  
  
 <span data-ttu-id="71270-188">このメソッドは、その開始点として、前のセグメントの終点を使用します。</span><span class="sxs-lookup"><span data-stu-id="71270-188">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="71270-189">指定されたポイントを使用して、図の最初のセグメントをする場合、<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>メソッドの開始点として。</span><span class="sxs-lookup"><span data-stu-id="71270-189">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="71270-190">A<xref:System.Windows.Media.StreamGeometry>が含まれている場合、シリアル化することはできません、<xref:System.Windows.Media.Transform>または線を付ける以外またはセグメントを塗らいずれか。</span><span class="sxs-lookup"><span data-stu-id="71270-190">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71270-191">次の例では、2 次ベジエ曲線を使用して描画する方法を示しています、<xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="71270-191">The following example shows how to draw a quadratic Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71270-192"><see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> メソッドを呼び出して図形を開始せずに、セグメントを追加しようとしました。</span><span class="sxs-lookup"><span data-stu-id="71270-192">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71270-193">このメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="71270-193">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>