<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HitTestFilterCallback.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50e53ad2f1fd1bdc6d1c1436c38e5eabcee4c8677.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e53ad2f1fd1bdc6d1c1436c38e5eabcee4c8677</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The visual to hit test.</source>
          <target state="translated">ヒット テストに対するビジュアル。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>Represents the callback method that specifies parts of the visual tree to omit from hit test processing</source>
          <target state="translated">ヒット テスト処理で省略するビジュアル ツリーの一部を指定するコールバック メソッドを表します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestFilterBehavior" /&gt;</ph> that represents the action resulting from the hit test.</source>
          <target state="translated">ヒット テストの結果のアクションを表す <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestFilterBehavior" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree.</source>
          <target state="translated">ヒット テスト フィルターのコールバック メソッドは、ヒット テストの条件の指定したビジュアルから開始し、ビジュアル ツリーの分岐の降順にマップされるすべての visual オブジェクトに対して呼び出されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function.</source>
          <target state="translated">ただし、ヒット テストの結果のコールバック関数で、ビジュアル ツリーの一部の分岐を処理する必要がない場合、これらの分岐を無視できます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take.</source>
          <target state="translated">ヒット テスト フィルターのコールバック関数の戻り値によって、ビジュアル オブジェクトの列挙体が実行するアクションの種類が決定されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>For example, if you return the value, <ph id="ph1">&lt;xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren&gt;</ph>, you can remove the current visual object and its descendants from the hit test results enumeration.</source>
          <target state="translated">たとえば、次の値を返す<ph id="ph1">&lt;xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren&gt;</ph>、ヒット テスト結果の列挙体から現在の visual オブジェクトとその子孫を削除することができます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>This means that the hit test results callback method will not see these objects in its enumeration.</source>
          <target state="translated">つまり、ヒット テスト結果のコールバック メソッドでは、列挙体でこれらのオブジェクトは表示されません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>Pruning the visual tree of objects decreases the amount of processing during the hit test results enumeration pass.</source>
          <target state="translated">オブジェクトのビジュアル ツリーから余分なものを取り除くと、ヒット テストの結果の列挙体が渡されるときの処理を減らすことができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source><bpt id="p1">![</bpt>Pruning a visual tree using a hit test filter<ept id="p1">]</ept><bpt id="p2">(~/add/media/filteredvisualtree-01.png "</bpt>Pruning a visual tree using a hit test filter<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>ヒット テスト フィルターを使用したビジュアル ツリーの簡略化<ept id="p1">]</ept><bpt id="p2">(~/add/media/filteredvisualtree-01.png "</bpt>ヒット テスト フィルターを使用したビジュアル ツリーの簡略化<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>Pruning a visual tree</source>
          <target state="translated">ビジュアル ツリーの簡略化</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The following example shows how to invoke <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> by using a <ph id="ph2">&lt;xref:System.Windows.Media.HitTestFilterCallback&gt;</ph> value.</source>
          <target state="translated">次の例を呼び出す方法を示しています。<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Windows.Media.HitTestFilterCallback&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The corresponding hit test callback method is also defined.</source>
          <target state="translated">対応するヒット テストのコールバック メソッドも定義されています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The following example shows how to return a <ph id="ph1">&lt;xref:System.Windows.Media.HitTestFilterBehavior&gt;</ph> value from a hit test filter callback method.</source>
          <target state="translated">次の例を返す方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Media.HitTestFilterBehavior&gt;</ph>ヒット テスト フィルターのコールバック メソッドからの値。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>