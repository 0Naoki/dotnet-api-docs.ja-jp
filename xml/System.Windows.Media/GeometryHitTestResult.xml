<Type Name="GeometryHitTestResult" FullName="System.Windows.Media.GeometryHitTestResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0e97dd3f5796b6dbf9c03b40493852dc0ad6dbd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30666306" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GeometryHitTestResult : System.Windows.Media.HitTestResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GeometryHitTestResult extends System.Windows.Media.HitTestResult" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.GeometryHitTestResult" />
  <TypeSignature Language="VB.NET" Value="Public Class GeometryHitTestResult&#xA;Inherits HitTestResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class GeometryHitTestResult : System::Windows::Media::HitTestResult" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.HitTestResult</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Media.Geometry" /> をヒット テスト パラメーターとして使用するヒット テストの結果を返します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用してビジュアル オブジェクトでヒット テストを実行することもできます、<xref:System.Windows.Point>ヒットとしてパラメーターをテストし、として結果を返す、<xref:System.Windows.Media.PointHitTestResult>です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeometryHitTestResult (System.Windows.Media.Visual visualHit, System.Windows.Media.IntersectionDetail intersectionDetail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual visualHit, valuetype System.Windows.Media.IntersectionDetail intersectionDetail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.GeometryHitTestResult.#ctor(System.Windows.Media.Visual,System.Windows.Media.IntersectionDetail)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeometryHitTestResult(System::Windows::Media::Visual ^ visualHit, System::Windows::Media::IntersectionDetail intersectionDetail);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="visualHit" Type="System.Windows.Media.Visual" />
        <Parameter Name="intersectionDetail" Type="System.Windows.Media.IntersectionDetail" />
      </Parameters>
      <Docs>
        <param name="visualHit">ヒット テスト中にヒットしたビジュアル オブジェクト。</param>
        <param name="intersectionDetail">
          <see cref="T:System.Windows.Media.Geometry" /> と <c>visualHit</c> の交差部分を記述します。</param>
        <summary>指定したビジュアル オブジェクトと <see cref="T:System.Windows.Media.GeometryHitTestResult" /> 値を使用して、<see cref="T:System.Windows.Media.IntersectionDetail" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Media.GeometryHitTestResult>オブジェクトのオーバーライドされた実装については、戻り値として使用して<xref:System.Windows.Media.Visual.HitTestCore%2A>です。  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet13)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectionDetail">
      <MemberSignature Language="C#" Value="public System.Windows.Media.IntersectionDetail IntersectionDetail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.IntersectionDetail IntersectionDetail" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GeometryHitTestResult.IntersectionDetail" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IntersectionDetail As IntersectionDetail" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::IntersectionDetail IntersectionDetail { System::Windows::Media::IntersectionDetail get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.IntersectionDetail</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヒット テストの <see cref="T:System.Windows.Media.IntersectionDetail" /> 値を取得します。</summary>
        <value>ヒット テストの <see cref="T:System.Windows.Media.IntersectionDetail" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.GeometryHitTestResult.IntersectionDetail%2A>プロパティの交差部分の説明、<xref:System.Windows.Media.Geometry>とターゲット ビジュアル オブジェクトです。  
  
 次の図は、ヒット テスト ジオメトリ (青の円) と、ターゲット オブジェクト (赤い四角形) 間のリレーションシップを示します。  
  
 ![ヒット テストで使用される IntersectionDetail のダイアグラム](~/add/media/intersectiondetail01.png "ダイアグラムので使用される IntersectionDetail のヒット テスト")  
ヒット テスト ジオメトリとターゲット オブジェクトの交差部分  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Windows.Media.GeometryHitTestResult.IntersectionDetail%2A>プロパティ<xref:System.Windows.Media.GeometryHitTestResult>です。  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet11](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet11)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualHit">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual VisualHit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual VisualHit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.GeometryHitTestResult.VisualHit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisualHit As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ VisualHit { System::Windows::Media::Visual ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヒット テストの結果から返されるビジュアル オブジェクトを取得します。</summary>
        <value>ヒット テストの結果を表す <see cref="T:System.Windows.Media.Visual" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例の値を参照する方法を示しています、<xref:System.Windows.Media.GeometryHitTestResult.VisualHit%2A>ヒット テスト コールバック プロシージャ内のプロパティです。  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet11](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet11)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>