<Type Name="FontFamily" FullName="System.Windows.Media.FontFamily">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3bfdefd6f49f74fdb942773035bdb7b719ab4a1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55387567" /></Metadata><TypeSignature Language="C#" Value="public class FontFamily" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontFamily extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FontFamily" />
  <TypeSignature Language="VB.NET" Value="Public Class FontFamily" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamily" />
  <TypeSignature Language="F#" Value="type FontFamily = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>関連するフォントのファミリを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フォント ファミリには、"Times New Roman"など、同じファミリ名を共有するが、機能が異なるタイプフェイスのセットです。 これらの機能の相違点を含める<xref:System.Windows.Media.Typeface.Style%2A>、斜体などと<xref:System.Windows.Media.Typeface.Weight%2A>、太字など。  
  
 ![フォント](~/add/media/fonts.PNG "フォント")  
"Times New Roman"のフォント ファミリのメンバーであるタイプフェイスの例  
  
 ほとんど[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]要素など<xref:System.Windows.Controls.Button>と<xref:System.Windows.Controls.TextBlock>、提供、<xref:System.Windows.Controls.Control.FontFamily%2A>コントロールのテキスト コンテンツのフォントを指定するために使用できるプロパティです。 そのプロパティを設定して、フォントを定義する、<xref:System.Windows.Media.FontFamily>値。 次の例で、フォントを参照する方法を示して[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]およびコード。  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet3)]
 [!code-vb[FontSnippets#FontFallbackSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet3)]
 [!code-xaml[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet3)]  
  
 前の例に"漫画 San MS"、フォント参照されているを参照してその*フレンドリ名*します。 また、この例ではシステム フォントのコレクションにする、フォントと見なされます。  
  
## <a name="specifying-fonts-in-alternate-directories"></a>別のディレクトリでフォントを指定します。  
 A[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]アプリケーションでフォントの参照を解決するため、システム フォントのコレクションを含むディレクトリ以外のディレクトリを指定できます。 フォントのフレンドリ名は、絶対パスを指定できます[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]、次に示すように、フォントの参照を解決するのには値[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]やコード例です。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet6)]
 [!code-vb[FontSnippets#FontPackageSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet6)]
 [!code-xaml[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet6)]  
  
 フォントのフレンドリ名は、相対パスを指定できますも[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]ベースを必要とする値、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]フォントの参照を解決するのには。 <xref:System.Windows.Media.FontFamily.BaseUri%2A>のプロパティ、<xref:System.Windows.Media.FontFamily>オブジェクトに対応する基本[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値。 次のコード例は、ベースで構成されるフォントの参照を作成する方法を示します[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値と相対[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet7)]
 [!code-vb[FontSnippets#FontPackageSnippet7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet7)]  
  
 ベースを使用する[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]アプリケーションの一部としてパッケージ化されているフォントを参照するときの値します。 たとえば、基本[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値は"pack://application"を指定できます[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]、アプリケーション リソースとしてパッケージ化されているフォントを参照することができます。 次のコード例は、ベースので構成されるフォントの参照を示しています。[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値と相対[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 ときに、<xref:System.Windows.Media.FontFamily>マークアップ、ベースの属性として指定されて[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値は常に暗黙的に-の値は、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]の[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]ページ。 暗黙のベース[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]相対値を使用[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]フォントの場所を取得するフレンドリ名の文字列値。 次に[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]例では、ことに注意して相対[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値の使用、"./""で、現在のフォルダー"つまり表記法ベースの[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値。  
  
 [!code-xaml[FontSnippets#FontPackageSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet1)]  
  
 A[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]アプリケーションは、コンテンツ項目、リソース アイテム、またはライブラリのリソース項目としてフォントをパッケージ化できます。 詳細については、「[アプリケーションでのフォントのパッケージング](~/docs/framework/wpf/advanced/packaging-fonts-with-applications.md)」を参照してください。  
  
## <a name="font-fallback"></a>フォント フォールバック  
 フォント フォールバック以外は、クライアント アプリケーションで選択されているフォントのフォントの自動切り替えを指します。 これには 2 つの主な理由がフォント フォールバックが呼び出される理由があります。  
  
-   クライアント アプリケーションで指定されているフォントは、システム上に存在しません。  
  
-   クライアント アプリケーションで指定されているフォントにテキストを表示するために必要なグリフが含まれていません。  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]、フォント フォールバック メカニズムは、代替フォントとして既定の代替フォント ファミリ、「グローバルなユーザー インターフェイス」を使用します。 このフォントは、複合フォントは、ファイル名が"GlobalUserInterface.CompositeFont"として定義されます。 複合フォントの詳細については、このトピックの「複合フォント セクションを参照してください。  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]フォント フォールバック メカニズム置換前[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]フォント代替テクノロジ。  
  
## <a name="defining-a-font-fallback-sequence-in-code"></a>コードで、フォント フォールバック シーケンスを定義します。  
 フォント フォールバック シーケンスを定義するには、コードでは、代替フォントを定義することができます。 作成するときに、<xref:System.Windows.Media.FontFamily>オブジェクト、複数のフォント ファミリ名のコンマで区切っての提供、 <xref:System.String> 「ミリ秒、Verdana San 漫画」などのパラメーター。 この場合は、「プレース ホルダー」書体からグリフが利用できない場合は、"Verdana"書体からグリフが使用されます。 「プレース ホルダー」も"Verdana"必要なグリフがある、タイプフェイスの代替フォント ファミリは、「グローバルなユーザー インターフェイス」は既定で使用します。  
  
 次の例でフォントの代替シーケンスを定義する方法を示して[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]およびコード。  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet1)]
 [!code-vb[FontSnippets#FontFallbackSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet1)]
 [!code-xaml[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet1)]  
  
 代替のシーケンス内のフォントのいずれかのフォントの場所を指定できます。 次の例では、"Pericles Light"はアプリケーション リソースとして参照され、"Verdana"はシステム フォントのコレクションのメンバーとして参照されます。  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet2)]
 [!code-vb[FontSnippets#FontFallbackSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet2)]
 [!code-xaml[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet2)]  
  
## <a name="composite-fonts"></a>複合フォント  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]プラットフォームは、多言語のフォントの全範囲の構築を可能にし、欠落グリフの表示を回避するためには、複合フォント機能を提供します。 複合フォントを置き換える、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]フォント リンク、フォント フォールバック、バインドのフォント、フォントの関連付け、および外字 (EUDC) の機能です。  
  
 複合フォント ファミリは、アプリケーションで使用可能な<xref:System.Windows.Media.FontFamily>と<xref:System.Windows.Media.Typeface>コンス トラクターと同様に他のすべてのフォント ファミリ。 各複合フォント ファミリでは、名前はまた、としてその他のフォントを指定できます。 複数の言語では、その名前をローカライズしたバリアント。  
  
 次のマークアップ例では、ディスク ファイルとして複合フォント ファミリを定義する方法を示します。 このファイルは、既定値に格納できる[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]フォント ディレクトリのように、他のフォントをインストールまたはなどの任意の場所で参照できます、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]ファミリ名によって参照するときにします。  
  
 次の例は、フォント ファミリのマークアップで、"。CompositeFont"ファイルです。  
  
 [!code-xaml[CompositeFontMarkup#CF](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositeFontMarkup/CS/comp.xaml#cf)]  
  
 次の 4 つの複合フォントは、WPF のインストールの一部として既定の Windows フォント ディレクトリに表示されます。  
  
|フォント|メモ|  
|----------|-----------|  
|GlobalMonospace.CompositeFont|ラテン文字の固定幅フォントであり、たとえば、"Courier New"を使用してテキストを描画します。|  
|GlobalSanSerif.CompositeFont|たとえば、"Arial"のラテン文字、sans serif フォントを使用してテキストを描画します。|  
|GlobalSerif.CompositeFont|たとえば、"Times New Roman"serif フォントを使用して、ラテン文字のテキストを描画します。|  
|GlobalUserInterface.CompositeFont|たとえば、"Times New Roman"既定のフォントを使用して、ラテン文字のテキストを描画します。|  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## <a name="xaml-values"></a>XAML 値  
 *fontFamilyName*  
 フォント ファミリ名を指定する文字列。  たとえば、`"Arial"` または `"Century Gothic"` のようにします。  
  
 *fontFamilyNamesList*  
 (次のコンマ、空白は無視されます)、コンマで区切って複数のフォント ファミリ名を指定する文字列、します。  最初に指定したフォント ファミリが、プライマリ フォント ファミリとして機能します。以降のフォント ファミリは、プライマリ フォント ファミリを使用または適用できない場合に使用されるフォールバック ファミリとして機能します。  たとえば、 `"Arial, Century Gothic"` Arial 世紀ゴートとして代替フォント ファミリと、プライマリ フォント ファミリを指定します。  
  
 *fontFamilyFolderReference*  
 フォント ファミリ名と共に、フォントを含むフォルダーを指定する文字列。  フォント ファミリの名前とフォルダーは、# 文字で区切られます。  フォルダーの参照は、絶対または相対パスにあります。  たとえば、`"Custom Fonts\#My Custom Font"` のようにします。  
  
 *fontFamilyUriReference*  
 指定する文字列、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]のフォント、フォント ファミリ名とします。  [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]し、フォント ファミリ名は # 文字で区切られます。  たとえば、`"http://MyFontServer/Fonts/#My Custom Font"` のようにします。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Fonts" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Media.FontFamily" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>匿名の <see cref="T:System.Windows.Media.FontFamily" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複合フォントをプログラムで作成する場合は、この既定のコンス トラクターを使用します。 つまり、コンス トラクターのフォント ファミリ名を指定する必要はありませんが、コレクションを設定する必要があります、<xref:System.Windows.Media.FontFamily.FamilyMaps%2A>と<xref:System.Windows.Media.FontFamily.FamilyNames%2A>構築済みのインスタンスを使用する前にコレクション。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily familyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="familyName">新しい <see cref="T:System.Windows.Media.FontFamily" /> を構成する 1 つ以上のファミリ名。 複数のファミリ名は、コンマで区切る必要があります。</param>
        <summary>指定したフォント ファミリ名から、<see cref="T:System.Windows.Media.FontFamily" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されている各ファミリ名、`familyName`パラメーターの前に、いずれかのディレクトリへの参照を場所または[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]します。 場所の参照がポンドで、ファミリ名から区切られた (`#`) 文字。 指定されている複数のファミリ名、`familyName`パラメーターをコンマで区切る必要があります。  
  
 各ファミリでは、実際のフォントを一連の共有と同じファミリ名、フォント ファイルを直接表すことができますか、複合フォント ファイルで定義されているファミリ名への参照ができます。  
  
 複数のファミリが識別されると、2 回目以降のフォント ファミリは、最初のフォント ファミリでサポートされていないコード ポイントの処理の代替ファミリとして機能します。 最初のフォント ファミリでサポートされていないすべてのコード ポイントでは後続の各ファミリは順番にチェックされます。  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#103](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#103)]
 [!code-vb[FontSnippets#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="familyName" /> として <see langword="null" /> を使用することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (Uri baseUri, string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(Uri ^ baseUri, System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : Uri * string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily (baseUri, familyName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri"><paramref name="familyName" /> を解決するために使用される基本 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] を指定します。</param>
        <param name="familyName">新しい <see cref="T:System.Windows.Media.FontFamily" /> を構成する 1 つ以上のファミリ名。 複数のファミリ名は、コンマで区切る必要があります。</param>
        <summary>指定したフォント ファミリ名およびオプションの基本 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] の値から <see cref="T:System.Windows.Media.FontFamily" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `familyName`値が相対パスを指定できます[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]ベースを必要とする値、[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]フォントの参照を解決するのには。 `baseUri`値を指定できます`null`します。  
  
   
  
## Examples  
 次のコードは、ベースを構成しているフォント参照[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値と相対[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]値。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double with get, set" Usage="System.Windows.Media.FontFamily.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ベースラインと文字セルの上端との間の距離を取得または設定します。</summary>
        <value>フォントの全角サイズの割合として表される、ベースラインと文字セルの上端の間の距離を示す <see cref="T:System.Double" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Windows.Media.FontFamily.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フォント ファミリ名を解決するために使用される基本 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] を取得します。</summary>
        <value><see cref="T:System.Uri" /> 型の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 戻り値は`null`フォント ファミリ名がベースに依存しないかどうかは[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]フォントの参照を解決するためです。 構築するために使用されるフォント ファミリ名を取得する、<xref:System.Windows.Media.FontFamily>オブジェクトを使用して、<xref:System.Windows.Media.FontFamily.Source%2A>プロパティ。  
  
   
  
## Examples  
 次の例を取得する結果を示しています、<xref:System.Windows.Media.FontFamily.BaseUri%2A>からプロパティを<xref:System.Windows.Media.FontFamily>オブジェクト。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet9)]
 [!code-vb[FontSnippets#FontPackageSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fontFamily.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">比較対象の <see cref="T:System.Windows.Media.FontFamily" /> オブジェクト。</param>
        <summary>現在のフォント ファミリ オブジェクトと、指定したフォント ファミリ オブジェクトが同じであるかどうかを示す値を取得します。</summary>
        <returns><paramref name="o" /> が現在の <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトに等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 <paramref name="o" /> が <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトではない場合、<see langword="false" /> が返されます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyMaps">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamilyMapCollection FamilyMaps" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyMaps As FontFamilyMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamilyMapCollection ^ FamilyMaps { System::Windows::Media::FontFamilyMapCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyMaps : System.Windows.Media.FontFamilyMapCollection" Usage="System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamilyMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.FontFamilyMap" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Media.FontFamilyMapCollection" /> オブジェクトを含む <see cref="T:System.Windows.Media.FontFamilyMap" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.FontFamily>フォント ファミリの名前を使用して作成されるオブジェクト、<xref:System.Windows.Media.FontFamily.FamilyMaps%2A>プロパティが空、読み取り専用コレクションを返します。  
  
 <xref:System.Windows.Media.FontFamilyMap>オブジェクトを使用して、指定された、指定されたカルチャの Unicode 文字のセットを表示するために使用されるフォントを定義します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyNames">
      <MemberSignature Language="C#" Value="public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.LanguageSpecificStringDictionary FamilyNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyNames As LanguageSpecificStringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::LanguageSpecificStringDictionary ^ FamilyNames { System::Windows::Media::LanguageSpecificStringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyNames : System.Windows.Media.LanguageSpecificStringDictionary" Usage="System.Windows.Media.FontFamily.FamilyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.LanguageSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Globalization.CultureInfo" /> オブジェクトのフォント ファミリ名を表す文字列と <see cref="T:System.Windows.Media.FontFamily" /> 値のコレクションを取得します。</summary>
        <value>フォント ファミリ名を表す <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#106](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#106)]
 [!code-vb[FontSnippets#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyTypefaces">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyTypefaces As FamilyTypefaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FamilyTypefaceCollection ^ FamilyTypefaces { System::Windows::Media::FamilyTypefaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyTypefaces : System.Windows.Media.FamilyTypefaceCollection" Usage="System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FamilyTypefaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.FontFamily" /> オブジェクトのタイプフェイスのコレクションを取得します。</summary>
        <value><see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> オブジェクトのタイプフェイスのコレクションを表す <see cref="T:System.Windows.Media.FontFamily" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_FamilyTypefaces"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.FamilyTypefaces>  
    <OneOrMoreFontFamilyTypefaces/>  
  </object.FamilyTypefaces>  
</object>  
```  
  
<a name="xamlValues_FamilyTypefaces"></a>   
## <a name="xaml-values"></a>XAML 値  
 *OneOrMoreFontFamilyTypefaces*  
 1 つまたは複数のタイプフェイスの<xref:System.Windows.Media.FontFamily>オブジェクト。  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#107](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#107)]
 [!code-vb[FontSnippets#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fontFamily.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.FontFamily" /> のハッシュ関数として機能します。 ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適しています。</summary>
        <returns>現在のオブジェクトのハッシュ コードを表す <see cref="T:System.Int32" /> 値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypefaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt; GetTypefaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Typeface&gt; GetTypefaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypefaces () As ICollection(Of Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Windows::Media::Typeface ^&gt; ^ GetTypefaces();" />
      <MemberSignature Language="F#" Value="member this.GetTypefaces : unit -&gt; System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;" Usage="fontFamily.GetTypefaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定のシステム フォントの場所にあるタイプフェイスを表す <see cref="T:System.Windows.Media.Typeface" /> オブジェクトのコレクションを返します。</summary>
        <returns><see cref="T:System.Collections.Generic.ICollection`1" /> オブジェクトの <see cref="T:System.Windows.Media.Typeface" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#104](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#104)]
 [!code-vb[FontSnippets#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacing">
      <MemberSignature Language="C#" Value="public double LineSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.LineSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property LineSpacing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineSpacing { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineSpacing : double with get, set" Usage="System.Windows.Media.FontFamily.LineSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.FontFamily" /> オブジェクトの行間隔の値を取得または設定します。 行間隔は、全角サイズを基準とする、このフォントのテキストに対して推奨されるベースライン間の距離です。</summary>
        <value><see cref="T:System.Double" /> オブジェクトの行間隔を表す <see cref="T:System.Windows.Media.FontFamily" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Windows.Media.FontFamily.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.FontFamily" /> オブジェクトを構築するために使用されるフォント ファミリ名を取得します。</summary>
        <value><see cref="T:System.Windows.Media.FontFamily" /> オブジェクトのフォント ファミリ名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基本を返す[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]の値を<xref:System.Windows.Media.FontFamily>オブジェクトを使用して、<xref:System.Windows.Media.FontFamily.BaseUri%2A>します。  
  
 場合、<xref:System.Windows.Media.FontFamily>フォント ファミリ名を指定せずにオブジェクトが作成された、戻り値は<xref:System.String.Empty>します。  
  
   
  
## Examples  
 次の例を取得する結果を示しています、<xref:System.Windows.Media.FontFamily.BaseUri%2A>と<xref:System.Windows.Media.FontFamily.Source%2A>からプロパティの値を<xref:System.Windows.Media.FontFamily>オブジェクト。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet10)]
 [!code-vb[FontSnippets#FontPackageSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fontFamily.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Windows.Media.FontFamily.Source" /> プロパティの値を返します。</summary>
        <returns>ディレクトリまたは [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] の場所の参照を含む <see cref="T:System.Windows.Media.FontFamily" /> オブジェクトのソースの場所。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Windows.Media.FontFamily>フォント ファミリ名を指定せずにオブジェクトが作成された、戻り値は<xref:System.String.Empty>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>