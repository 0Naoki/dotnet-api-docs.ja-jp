<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbab7ee55b318c1d60f8405afbe0f12f069e9b03" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70566353" /></Metadata><TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type VisualCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="bfeae-101"><see cref="T:System.Windows.Media.Visual" /> オブジェクトの順序の付いたコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Visual" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-102">に<xref:System.Windows.Media.VisualCollection>は、コンテキストアフィニティが暗黙的に含まれています。</span><span class="sxs-lookup"><span data-stu-id="bfeae-102">A <xref:System.Windows.Media.VisualCollection> has implied context affinity.</span></span> <span data-ttu-id="bfeae-103">プロシージャが、所有<xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.ContainerVisual>しているのコンテキストとは異なるコンテキストからにアクセスしようとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-103">If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfeae-104">次の例は、 <xref:System.Windows.Media.VisualCollection>を作成してメンバーを追加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="bfeae-104">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="bfeae-105">完全なサンプルについては、「[図面を使用したヒットテストのサンプル](https://go.microsoft.com/fwlink/?LinkID=159994)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-105">For the complete sample, see [Hit Test Using DrawingVisuals Sample](https://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.VisualCollection : System.Windows.Media.Visual -&gt; System.Windows.Media.VisualCollection" Usage="new System.Windows.Media.VisualCollection parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="bfeae-106">その <see cref="T:System.Windows.Media.VisualCollection" /> が返される親ビジュアル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfeae-106">The parent visual object whose <see cref="T:System.Windows.Media.VisualCollection" /> is returned.</span></span></param>
        <summary><span data-ttu-id="bfeae-107"><see cref="T:System.Windows.Media.VisualCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-107">Initializes a new instance of the <see cref="T:System.Windows.Media.VisualCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Media.Visual -&gt; int" Usage="visualCollection.Add visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="bfeae-108"><see cref="T:System.Windows.Media.Visual" /> の末尾に追加する <see cref="T:System.Windows.Media.VisualCollection" />。</span><span class="sxs-lookup"><span data-stu-id="bfeae-108">The <see cref="T:System.Windows.Media.Visual" /> to append to the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="bfeae-109"><see cref="T:System.Windows.Media.Visual" /> を <see cref="T:System.Windows.Media.VisualCollection" /> の末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-109">Appends a <see cref="T:System.Windows.Media.Visual" /> to the end of the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="bfeae-110"><paramref name="visual" /> が追加されたコレクション内でのインデックス位置。</span><span class="sxs-lookup"><span data-stu-id="bfeae-110">The index in the collection at which <paramref name="visual" /> was added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-111">値が<xref:System.Windows.Media.Visual>で`null`あるを追加することは許可されていますが、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="bfeae-111">Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.</span></span>  
  
 <span data-ttu-id="bfeae-112">また<xref:System.Windows.Media.VisualCollection.Add%2A> 、このメソッドは、親ビジュアル (の所有者<xref:System.Windows.Media.VisualCollection>) と子`visual`の親子関係を設定します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-112">The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="bfeae-113">カスタムクラスのビジュアル子オブジェクトの基になるストレージの実装をより高度に制御する必要がある場合は、 <xref:System.Windows.Media.Visual.AddVisualChild%2A>メソッド<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>とメソッドの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-113">If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="bfeae-114">これらのメソッドを使用する場合は、独自のストレージ実装を定義し、を<xref:System.Windows.Media.VisualCollection>使用しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="bfeae-114">When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfeae-115">次の例は、 <xref:System.Windows.Media.VisualCollection>を作成してメンバーを追加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="bfeae-115">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="bfeae-116">完全なサンプルについては、「[図面を使用したヒットテストのサンプル](https://go.microsoft.com/fwlink/?LinkID=159994)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-116">For the complete sample, see [Hit Test Using DrawingVisuals Sample](https://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfeae-117"><see cref="T:System.ArgumentException" /> がルート要素である場合、<see cref="T:System.Windows.Media.Visual" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-117">An <see cref="T:System.ArgumentException" /> is thrown if the <see cref="T:System.Windows.Media.Visual" /> is a root element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Windows.Media.VisualCollection.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfeae-118"><see cref="T:System.Windows.Media.VisualCollection" /> に格納できる要素の数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-118">Gets or sets the number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span></span></summary>
        <value><span data-ttu-id="bfeae-119"><see cref="T:System.Windows.Media.VisualCollection" /> に格納できる要素の数。</span><span class="sxs-lookup"><span data-stu-id="bfeae-119">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-120">の<xref:System.Windows.Media.VisualCollection.Capacity%2A>値は、 <xref:System.Windows.Media.VisualCollection>が格納できる要素の数です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-120">The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span> <span data-ttu-id="bfeae-121"><xref:System.Windows.Media.VisualCollection.Count%2A>は、 <xref:System.Windows.Media.VisualCollection>実際に内に存在するビジュアルの数です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-121"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="bfeae-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A>は、常に<xref:System.Windows.Media.VisualCollection.Count%2A>以上です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>.</span></span> <span data-ttu-id="bfeae-123">が要素<xref:System.Windows.Media.VisualCollection.Capacity%2A>の追加中に<xref:System.Windows.Media.VisualCollection>を超えると、の容量が増加します。 <xref:System.Windows.Media.VisualCollection.Count%2A></span><span class="sxs-lookup"><span data-stu-id="bfeae-123">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased.</span></span> <span data-ttu-id="bfeae-124">既定値<xref:System.Windows.Media.VisualCollection.Capacity%2A>は0です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-124">By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bfeae-125"><see cref="P:System.Windows.Media.VisualCollection.Capacity" /> は <see cref="P:System.Windows.Media.VisualCollection.Count" /> より小さい値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-125"><see cref="P:System.Windows.Media.VisualCollection.Capacity" /> is set to a value that is less than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="visualCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfeae-126"><see cref="T:System.Windows.Media.VisualCollection" /> からすべての要素を削除します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-126">Removes all elements from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-127"><xref:System.Windows.Media.VisualCollection.Count%2A>が0にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-127">The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero.</span></span> <span data-ttu-id="bfeae-128">の<xref:System.Windows.Media.VisualCollection.Capacity%2A>値は変更されません。</span><span class="sxs-lookup"><span data-stu-id="bfeae-128">The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="bfeae-129">の<xref:System.Windows.Media.VisualCollection>容量をリセットするには、 <xref:System.Windows.Media.VisualCollection.Capacity%2A>プロパティを目的のサイズに設定します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-129">To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Media.Visual -&gt; bool" Usage="visualCollection.Contains visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="bfeae-130">コレクション内で検索される <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="bfeae-130">The <see cref="T:System.Windows.Media.Visual" /> to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="bfeae-131">指定した <see cref="T:System.Boolean" /> がコレクションに含まれているかどうかを示す <see cref="T:System.Windows.Media.Visual" /> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-131">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified <see cref="T:System.Windows.Media.Visual" /> is contained in the collection.</span></span></summary>
        <returns><span data-ttu-id="bfeae-132"><paramref name="visual" /> がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bfeae-132"><see langword="true" /> if <paramref name="visual" /> is contained in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-133">この関数の最悪のランタイムシナリオでは`O(n)`、はです`n` <xref:System.Windows.Media.VisualCollection>。ここで、は内の項目の数です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-133">The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bfeae-134">渡された配列に現在のコレクションをコピーします。</span><span class="sxs-lookup"><span data-stu-id="bfeae-134">Copies the current collection into the passed array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="visualCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="bfeae-135"><see cref="T:System.Array" /> から要素がコピーされる 1 次元 <see cref="T:System.Windows.Media.VisualCollection" />。</span><span class="sxs-lookup"><span data-stu-id="bfeae-135">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="bfeae-136">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</span><span class="sxs-lookup"><span data-stu-id="bfeae-136">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="bfeae-137">指定した配列インデックスを開始位置として、コレクション内の項目を配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="bfeae-137">Copies the items in the collection to an array, starting at a specific array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Windows.Media.Visual[] * int -&gt; unit" Usage="visualCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="bfeae-138"><see cref="T:System.Windows.Media.Visual" /> オブジェクトの配列 (0 から始まるインデックスを使用する必要があります)。</span><span class="sxs-lookup"><span data-stu-id="bfeae-138">An array of <see cref="T:System.Windows.Media.Visual" /> objects (which must have zero-based indexing).</span></span></param>
        <param name="index"><span data-ttu-id="bfeae-139"><paramref name="array" /> 内のコピーの開始位置を示すインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfeae-139">The index to start copying from within <paramref name="array" />.</span></span></param>
        <summary><span data-ttu-id="bfeae-140">渡された <see cref="T:System.Windows.Media.Visual" /> 配列に現在のコレクションをコピーします。</span><span class="sxs-lookup"><span data-stu-id="bfeae-140">Copies the current collection into the passed <see cref="T:System.Windows.Media.Visual" /> array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.VisualCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfeae-141">コレクション内の要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-141">Gets the number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="bfeae-142"><see cref="T:System.Windows.Media.VisualCollection" /> に格納されている要素の数。</span><span class="sxs-lookup"><span data-stu-id="bfeae-142">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> contains.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-143"><xref:System.Windows.Media.VisualCollection.Count%2A>は、 <xref:System.Windows.Media.VisualCollection>実際に内にある要素の数です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-143"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="bfeae-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A>が格納できる要素<xref:System.Windows.Media.VisualCollection>の数です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span>  
  
 <span data-ttu-id="bfeae-145"><xref:System.Windows.Media.VisualCollection.Count%2A>は常に<xref:System.Windows.Media.VisualCollection.Capacity%2A>以下の値です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-145"><xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span></span> <span data-ttu-id="bfeae-146">が要素<xref:System.Windows.Media.VisualCollection.Capacity%2A>の追加中にを超えると、リストの容量は2倍になります。これは、古い要素をコピーして新しい要素を追加する前に、内部配列が自動的に再割り当てされるためです。 <xref:System.Windows.Media.VisualCollection.Count%2A></span><span class="sxs-lookup"><span data-stu-id="bfeae-146">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.Media.VisualCollection.Enumerator" Usage="visualCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfeae-147"><see cref="T:System.Windows.Media.VisualCollection" /> を反復処理できる列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="bfeae-148">コレクションの反復処理に使用できる列挙子。</span><span class="sxs-lookup"><span data-stu-id="bfeae-148">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Media.Visual -&gt; int" Usage="visualCollection.IndexOf visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="bfeae-149"><see cref="T:System.Windows.Media.VisualCollection" /> 内で検索される <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="bfeae-149">The <see cref="T:System.Windows.Media.Visual" /> to locate in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="bfeae-150"><see cref="T:System.Windows.Media.Visual" /> の 0 から始まるインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-150">Returns the zero-based index of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="bfeae-151"><see cref="T:System.Windows.Media.Visual" /> のインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfeae-151">The index of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-152">が内にない場合は、-1 が返されます。 <xref:System.Windows.Media.VisualCollection>  <xref:System.Windows.Media.Visual></span><span class="sxs-lookup"><span data-stu-id="bfeae-152">If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned.</span></span> <span data-ttu-id="bfeae-153">が`null`メソッドに渡された場合、の最初のエントリ`null`のインデックスが返されます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-153">If `null` is passed to the method, the index of the first entry that has `null` is returned.</span></span> <span data-ttu-id="bfeae-154">Null エントリがない場合は、-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-154">If there is no null entry, -1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Media.Visual -&gt; unit" Usage="visualCollection.Insert (index, visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfeae-155">値を挿入する位置の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfeae-155">The zero-based index at which the value should be inserted.</span></span></param>
        <param name="visual"><span data-ttu-id="bfeae-156"><see cref="T:System.Windows.Media.VisualCollection" /> に挿入する <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="bfeae-156">The <see cref="T:System.Windows.Media.Visual" /> to insert into the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="bfeae-157"><see cref="T:System.Windows.Media.VisualCollection" /> 内の指定したインデックスの位置に要素を挿入します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-157">Inserts an element into the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-158">が<xref:System.Windows.Media.VisualCollection.Count%2A>既に<xref:System.Windows.Media.VisualCollection.Capacity%2A>に等しい場合は、 <xref:System.Windows.Media.VisualCollection>新しい<xref:System.Windows.Media.Visual>が挿入される前にの容量が増加します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-158">If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted.</span></span> <span data-ttu-id="bfeae-159">が`index`に<xref:System.Windows.Media.VisualCollection.Count%2A>等しい場合は`visual` 、の<xref:System.Windows.Media.VisualCollection>末尾にが追加されます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-159">If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="bfeae-160">以上の既存のビジュアルオブジェクト`index`は、新しい<xref:System.Windows.Media.Visual>を格納するためにシフトされ、インデックス値が更新されます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-160">Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.</span></span>  
  
 <span data-ttu-id="bfeae-161">また<xref:System.Windows.Media.VisualCollection.Insert%2A> 、このメソッドは、親ビジュアル (の所有者<xref:System.Windows.Media.VisualCollection>) と子`visual`の親子関係を設定します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-161">The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="bfeae-162">ビジュアル子オブジェクトの基になるストレージの実装をより高度に制御する必要がある場合は<xref:System.Windows.Media.Visual.AddVisualChild%2A> 、 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッドとメソッドの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-162">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="bfeae-163">これらのメソッドを使用する場合は、独自のストレージ実装を定義し、 <xref:System.Windows.Media.VisualCollection>を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-163">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bfeae-164"><paramref name="index" /> が 0 未満であるか、<see cref="P:System.Windows.Media.VisualCollection.Count" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="bfeae-164"><paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfeae-165"><see cref="T:System.Windows.Media.VisualCollection" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-165">Gets a value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="bfeae-166"><see cref="T:System.Windows.Media.VisualCollection" /> が読み取り専用かどうかを示す値。</span><span class="sxs-lookup"><span data-stu-id="bfeae-166">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-167">このプロパティは、 `false`すべて<xref:System.Windows.Media.VisualCollection>のオブジェクトに対して常にです。</span><span class="sxs-lookup"><span data-stu-id="bfeae-167">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfeae-168"><see cref="T:System.Windows.Media.VisualCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-168">Gets a value that indicates whether access to the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="bfeae-169"><see cref="T:System.Windows.Media.VisualCollection" /> が同期されている (スレッド セーフである) かどうかを示す値。</span><span class="sxs-lookup"><span data-stu-id="bfeae-169">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-170">このプロパティは、 `false`すべて<xref:System.Windows.Media.VisualCollection>のオブジェクトに対して常にです。</span><span class="sxs-lookup"><span data-stu-id="bfeae-170">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.VisualCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfeae-171"><see cref="T:System.Windows.Media.VisualCollection" /> を取得または設定する <see cref="T:System.Windows.Media.Visual" /> の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfeae-171">The zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" /> from which to get or set the <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="bfeae-172"><see cref="T:System.Windows.Media.Visual" /> の 0 から始まるインデックス位置に格納されている <see cref="T:System.Windows.Media.VisualCollection" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-172">Gets or sets the <see cref="T:System.Windows.Media.Visual" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <value><span data-ttu-id="bfeae-173"><paramref name="index" /> に格納されている <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="bfeae-173">The <see cref="T:System.Windows.Media.Visual" /> that is stored at <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-174">このプロパティは、インデックスを使用して<xref:System.Windows.Media.Visual> 、 <xref:System.Windows.Media.VisualCollection>内の特定のにアクセスする機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-174">This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bfeae-175"><paramref name="index" /> が 0 未満か、<paramref name="index" /> が <see cref="P:System.Windows.Media.VisualCollection.Count" /> 以上です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-175"><paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfeae-176">新しい子要素には既に親があるか、指定したインデックス位置にある値が <see langword="null" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="bfeae-176">The new child element already has a parent, or the value at the specified index is not <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Media.Visual -&gt; unit" Usage="visualCollection.Remove visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="bfeae-177"><see cref="T:System.Windows.Media.Visual" /> から削除する <see cref="T:System.Windows.Media.VisualCollection" />。</span><span class="sxs-lookup"><span data-stu-id="bfeae-177">The <see cref="T:System.Windows.Media.Visual" /> to remove from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="bfeae-178">指定した <see cref="T:System.Windows.Media.Visual" /> オブジェクトを <see cref="T:System.Windows.Media.VisualCollection" /> から削除します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-178">Removes the specified <see cref="T:System.Windows.Media.Visual" /> object from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-179">削除されたオブジェクトの後にあるビジュアルオブジェクトは、空いた位置を占有するようにシフトされ、インデックス値が更新されます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-179">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span> <span data-ttu-id="bfeae-180">`null`が`visual` の場合、最初のエントリは削除されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="bfeae-180">If `visual` is `null`, the first `null` entry is removed.</span></span> <span data-ttu-id="bfeae-181">`null`エントリの削除は、コレクションのサイズが線形であることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-181">Note that removing a `null` entry is linear in the size of the collection.</span></span>  
  
 <span data-ttu-id="bfeae-182">また<xref:System.Windows.Media.VisualCollection.Remove%2A> 、このメソッドは、 <xref:System.Windows.Media.VisualCollection>親ビジュアル (の所有者) と子`visual`の親子関係を削除します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-182">The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="bfeae-183">ビジュアル子オブジェクトの基になるストレージの実装をより高度に制御する必要がある場合は<xref:System.Windows.Media.Visual.AddVisualChild%2A> 、 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッドとメソッドの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-183">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="bfeae-184">これらのメソッドを使用する場合は、独自のストレージ実装を定義し、 <xref:System.Windows.Media.VisualCollection>を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-184">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="visualCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfeae-185">削除するビジュアルの 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfeae-185">The zero-based index of the visual to remove.</span></span></param>
        <summary><span data-ttu-id="bfeae-186"><see cref="T:System.Windows.Media.VisualCollection" /> 内の指定したインデックス位置にあるビジュアル オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-186">Removes the visual object at the specified index in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-187">削除されたオブジェクトの後にあるビジュアルオブジェクトは、空いた位置を占有するようにシフトされ、インデックス値が更新されます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-187">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span>  
  
 <span data-ttu-id="bfeae-188">また<xref:System.Windows.Media.VisualCollection.RemoveAt%2A> 、このメソッドは、 <xref:System.Windows.Media.VisualCollection>親ビジュアル (の所有者) と子`visual`の親子関係を削除します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-188">The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="bfeae-189">ビジュアル子オブジェクトの基になるストレージの実装をより高度に制御する必要がある場合は<xref:System.Windows.Media.Visual.AddVisualChild%2A> 、 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッドとメソッドの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-189">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="bfeae-190">これらのメソッドを使用する場合は、独自のストレージ実装を定義し、 <xref:System.Windows.Media.VisualCollection>を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-190">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bfeae-191"><paramref name="index" /> が 0 未満か、<paramref name="index" /> が <see cref="P:System.Windows.Media.VisualCollection.Count" /> 以上です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-191"><paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; unit" Usage="visualCollection.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfeae-192">削除する要素の範囲の、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="bfeae-192">The zero-based index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="bfeae-193">削除する要素の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-193">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="bfeae-194"><see cref="T:System.Windows.Media.VisualCollection" /> からビジュアル オブジェクトの範囲を削除します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-194">Removes a range of visual objects from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfeae-195">削除されたオブジェクトの後にあるビジュアルオブジェクトは、空いた位置を占有するようにシフトされ、インデックス値が更新されます。</span><span class="sxs-lookup"><span data-stu-id="bfeae-195">The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</span></span>  
  
 <span data-ttu-id="bfeae-196">また<xref:System.Windows.Media.VisualCollection.RemoveRange%2A> 、このメソッドは、 <xref:System.Windows.Media.VisualCollection>親ビジュアル (の所有者) と子ビジュアルの範囲との親子関係を削除します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-196">The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.</span></span>  
  
 <span data-ttu-id="bfeae-197">ビジュアル子オブジェクトの基になるストレージの実装をより高度に制御する必要がある場合は<xref:System.Windows.Media.Visual.AddVisualChild%2A> 、 <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッドとメソッドの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-197">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="bfeae-198">これらのメソッドを使用する場合は、独自のストレージ実装を定義し、 <xref:System.Windows.Media.VisualCollection>を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-198">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bfeae-199"><paramref name="index" /> が 0 未満か <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="bfeae-199"><paramref name="index" /> is less than zero or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfeae-200"><paramref name="index" /> および <paramref name="count" /> が <see cref="T:System.Windows.Media.VisualCollection" /> 内の要素の有効範囲を参照していません。</span><span class="sxs-lookup"><span data-stu-id="bfeae-200"><paramref name="index" /> and <paramref name="count" /> do not refer to a valid range of elements in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfeae-201"><see cref="T:System.Windows.Media.VisualCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="bfeae-201">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <value><span data-ttu-id="bfeae-202"><see cref="T:System.Object" /> 型の値。</span><span class="sxs-lookup"><span data-stu-id="bfeae-202">A value of type <see cref="T:System.Object" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfeae-203">このメンバーは、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="bfeae-203">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="bfeae-204">このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="bfeae-204">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="bfeae-205">コレクションを反復処理するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bfeae-205">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
