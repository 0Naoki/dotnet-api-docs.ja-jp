<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VisualCollection.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519eeb062536a84069070c205aaddc936c33cd61d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19eeb062536a84069070c205aaddc936c33cd61d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualCollection">
          <source>Represents an ordered collection of <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> オブジェクトの順序付きコレクションを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> has implied context affinity.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>が暗黙的にコンテキストの関係。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>If a procedure attempts to access the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> from a different context than the context of the owning <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>, an exception is thrown.</source>
          <target state="translated">プロシージャがアクセスを試みた場合、<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>所有元のコンテキストとは異なるコンテキストから<ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> and add members to it.</source>
          <target state="translated">次の例を作成する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>とメンバーを追加します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualCollection">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</source>
          <target state="translated">サンプル全体については、次を参照してください。 <bpt id="p1">[</bpt>DrawingVisuals サンプルを使用してテストをヒット<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)">
          <source>The parent visual object whose <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is returned.</source>
          <target state="translated">その <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> が返される親ビジュアル オブジェクト。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to append to the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> の末尾に追加する <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>Appends a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to the end of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> を <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> の末尾に追加します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The index in the collection at which <ph id="ph1">&lt;paramref name="visual" /&gt;</ph> was added.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="visual" /&gt;</ph> が追加されたコレクション内でのインデックス位置。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>Adding a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> whose value is <ph id="ph2">`null`</ph> is permitted and does not raise an exception.</source>
          <target state="translated">追加する、<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>値がある<ph id="ph2">`null`</ph>は許可されており、例外は発生しません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Add%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Add%2A&gt;</ph>メソッドが所有者である親、ビジュアル間の親子関係を設定もの<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>、および子<ph id="ph3">`visual`</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">カスタム クラスの visual の子オブジェクトの基になる記憶域実装大きい低レベルの制御を必要がある場合は、使用を検討して、<ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>When you use these methods, you must define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">独自のストレージの実装を定義する必要があり、使用しないこれらのメソッドを使用して、<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> and add members to it.</source>
          <target state="translated">次の例を作成する方法を示しています、<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>とメンバーを追加します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>For the complete sample, see <bpt id="p1">[</bpt>Hit Test Using DrawingVisuals Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>.</source>
          <target state="translated">サンプル全体については、次を参照してください。 <bpt id="p1">[</bpt>DrawingVisuals サンプルを使用してテストをヒット<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=159994)</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ArgumentException" /&gt;</ph> is thrown if the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> is a root element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArgumentException" /&gt;</ph> がルート要素である場合、<ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>Gets or sets the number of elements that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> に格納できる要素の数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> に格納できる要素の数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.</source>
          <target state="translated">値<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>は要素の数を<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>が格納できます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of visuals that are actually in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 実際には、ビジュアルの数、<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 常により大きいまたは等しい<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>を超える<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>の容量の要素を追加するときに、<ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>が増加します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source>By default <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is zero.</source>
          <target state="translated">既定では<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>は 0 です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Capacity">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Media.VisualCollection.Capacity" /&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Media.VisualCollection.Capacity" /&gt;</ph> は <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph> より小さい値に設定されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> からすべての要素を削除します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is reset to zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>はゼロにリセットします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>は変更されません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> property to the desired size.</source>
          <target state="translated">容量をリセットする、 <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>、設定、<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>プロパティを目的のサイズ。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to search for in the collection.</source>
          <target state="translated">コレクション内で検索される <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> is contained in the collection.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> がコレクションに含まれているかどうかを示す <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 値を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="visual" /&gt;</ph> is contained in the collection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="visual" /&gt;</ph> がコレクション内に存在する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)">
          <source>The worst-case runtime scenario of this function is <ph id="ph1">`O(n)`</ph>, where <ph id="ph2">`n`</ph> is the number of items in the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">この関数の最悪のシナリオの実行時のシナリオは<ph id="ph1">`O(n)`</ph>ここで、<ph id="ph2">`n`</ph>内の項目数が、<ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualCollection">
          <source>Copies the current collection into the passed array.</source>
          <target state="translated">渡された配列に現在のコレクションをコピーします。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements that are copied from the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> から要素がコピーされる 1 次元 <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">コピーの開始位置となる、<bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
          <source>Copies the items in the collection to an array, starting at a specific array index.</source>
          <target state="translated">指定した配列インデックスを開始位置として、コレクション内の項目を配列にコピーします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> objects (which must have zero-based indexing).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> オブジェクトの配列 (0 から始まるインデックスを使用する必要があります)。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
          <source>The index to start copying from within <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>配列<ept id="p1">&lt;/c&gt;</ept>内のコピーの開始位置を示すインデックス。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
          <source>Copies the current collection into the passed <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> array.</source>
          <target state="translated">渡された <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 配列に現在のコレクションをコピーします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Count">
          <source>Gets the number of elements in the collection.</source>
          <target state="translated">コレクション内の要素の数を取得します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> contains.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> に格納されている要素の数。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 実際には、要素の数、<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> 要素の数を<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>が格納できます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is always less than or equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> 常に以下を<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Count">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>を超える<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>前の要素をコピーし、新しい要素を追加する前に、内部の配列を自動的に再割り当てして要素を追加するときに、リストの容量が 2 倍にします。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.GetEnumerator">
          <source>Retrieves an enumerator that can iterate through the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> を反復処理できる列挙子を取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.GetEnumerator">
          <source>An enumerator that can be used to iterate through the collection.</source>
          <target state="translated">コレクションの反復処理に使用できる列挙子。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to locate in the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 内で検索される <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>Returns the zero-based index of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> の 0 から始まるインデックスを返します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>The index of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> のインデックス。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, -1 is returned.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>に含まれていない、 <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>-1 が返されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>If <ph id="ph1">`null`</ph> is passed to the method, the index of the first entry that has <ph id="ph2">`null`</ph> is returned.</source>
          <target state="translated">場合<ph id="ph1">`null`</ph>メソッドを持つ最初のエントリのインデックスに渡される<ph id="ph2">`null`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)">
          <source>If there is no null entry, -1 is returned.</source>
          <target state="translated">Null のエントリがない場合は、-1 が返されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>The zero-based index at which the value should be inserted.</source>
          <target state="translated">値を挿入する位置の、0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to insert into the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> に挿入する <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>Inserts an element into the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> at the specified index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> 内の指定したインデックスの位置に要素を挿入します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased before the new <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph> is inserted.</source>
          <target state="translated">場合<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>既に同じ<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>の容量、<ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>が増加する前に、新しい<ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph>を挿入します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>, <ph id="ph3">`visual`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">場合<ph id="ph1">`index`</ph>と等しい<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>、<ph id="ph3">`visual`</ph>の末尾に追加された<ph id="ph4">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>Any existing visual objects that are equal to or greater than <ph id="ph1">`index`</ph> are shifted to accommodate the new <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>, and their index values are updated.</source>
          <target state="translated">任意の既存のビジュアル オブジェクトを以上になると、<ph id="ph1">`index`</ph>に合わせて新しいシフト<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>、およびそのインデックス値が更新されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Insert%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Insert%2A&gt;</ph>メソッドが所有者である親、ビジュアル間の親子関係を設定もの<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>、および子<ph id="ph3">`visual`</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">独自のストレージの実装を定義し、使用しないこれらのメソッドを使用して、<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満の値か、<ph id="ph2">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph> より大きい値です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.IsReadOnly">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> が読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsReadOnly">
          <source>The value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> が読み取り専用かどうかを示す値。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsReadOnly">
          <source>This property is always <ph id="ph1">`false`</ph> for all <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.</source>
          <target state="translated">このプロパティは常に<ph id="ph1">`false`</ph>すべて<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.IsSynchronized">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsSynchronized">
          <source>The value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> is synchronized (thread-safe).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> が同期されている (スレッド セーフである) かどうかを示す値。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.IsSynchronized">
          <source>This property is always <ph id="ph1">`false`</ph> for all <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.</source>
          <target state="translated">このプロパティは常に<ph id="ph1">`false`</ph>すべて<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>The zero-based index of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> from which to get or set the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> を取得または設定する <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> の 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that is stored at the zero-based index of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> の 0 から始まるインデックス位置に格納されている <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that is stored at <ph id="ph2">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="index" /&gt;</ph> に格納されている <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>This property provides the ability to access a specific <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> by using an index.</source>
          <target state="translated">このプロパティは、固有の仕様にアクセスする機能を提供<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>で、<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>インデックスを使用します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満か、<ph id="ph2">&lt;paramref name="index" /&gt;</ph> が <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph> 以上です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.Item(System.Int32)">
          <source>The new child element already has a parent, or the value at the specified index is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">新しい子要素には既に親があるか、指定したインデックス位置にある値が <ph id="ph1">&lt;see langword="null" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to remove from the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> から削除する <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>Removes the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> object from the <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> オブジェクトを <ph id="ph2">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> から削除します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</source>
          <target state="translated">削除されたオブジェクトの後ろにある visual オブジェクトは、空いた位置を占めるようにシフトされ、インデックスの値が更新されます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>If <ph id="ph1">`visual`</ph> is <ph id="ph2">`null`</ph>, the first <ph id="ph3">`null`</ph> entry is removed.</source>
          <target state="translated">場合<ph id="ph1">`visual`</ph>は<ph id="ph2">`null`</ph>、最初の<ph id="ph3">`null`</ph>エントリを削除します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>Note that removing a <ph id="ph1">`null`</ph> entry is linear in the size of the collection.</source>
          <target state="translated">削除することに注意してください、<ph id="ph1">`null`</ph>エントリは、コレクションのサイズに比例します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Remove%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Remove%2A&gt;</ph>メソッドは、所有者であるビジュアルで親との間の親子リレーションシップを削除するもの<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>と子要素<ph id="ph3">`visual`</ph>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">独自のストレージの実装を定義し、使用しないこれらのメソッドを使用して、<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>The zero-based index of the visual to remove.</source>
          <target state="translated">削除するビジュアルの 0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>Removes the visual object at the specified index in the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> 内の指定したインデックス位置にあるビジュアル オブジェクトを削除します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</source>
          <target state="translated">削除されたオブジェクトの後ろにある visual オブジェクトは、空いた位置を占めるようにシフトされ、インデックスの値が更新されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveAt%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveAt%2A&gt;</ph>メソッドは、所有者であるビジュアルで親との間の親子リレーションシップを削除するもの<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>と子要素<ph id="ph3">`visual`</ph>です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">独自のストレージの実装を定義し、使用しないこれらのメソッドを使用して、<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero, or <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満か、<ph id="ph2">&lt;paramref name="index" /&gt;</ph> が <ph id="ph3">&lt;see cref="P:System.Windows.Media.VisualCollection.Count" /&gt;</ph> 以上です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The zero-based index of the range of elements to remove.</source>
          <target state="translated">削除する要素の範囲の、0 から始まるインデックス。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The number of elements to remove.</source>
          <target state="translated">削除する要素の数を指定します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>Removes a range of visual objects from the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> からビジュアル オブジェクトの範囲を削除します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</source>
          <target state="translated">削除されたオブジェクトの後ろにある visual オブジェクトは、空いた位置を占めるようにシフトされ、インデックスの値が更新されます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveRange%2A&gt;</ph> method also removes the parent-child relationships between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the range of child visuals.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveRange%2A&gt;</ph>メソッドが親のビジュアル、所有者である間の親子リレーションシップを削除もの<ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>とビジュアルの子の範囲です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
          <target state="translated">さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
          <target state="translated">独自のストレージの実装を定義し、使用しないこれらのメソッドを使用して、<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満か <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not refer to a valid range of elements in the <ph id="ph3">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> および <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が <ph id="ph3">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> 内の要素の有効範囲を参照していません。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.VisualCollection.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> へのアクセスを同期するために使用できるオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.VisualCollection.SyncRoot">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 型の値。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このメンバーは、<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An object that can be used to iterate through the collection.</source>
          <target state="translated">コレクションを反復処理するために使用できるオブジェクト。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>