<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="19eeb062536a84069070c205aaddc936c33cd61d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1ac77-101">
        <see cref="T:System.Windows.Media.Visual" /> オブジェクトの順序付きコレクションを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1ac77-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Visual" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-102">A<xref:System.Windows.Media.VisualCollection>が暗黙的にコンテキストの関係。</span><span class="sxs-lookup"><span data-stu-id="1ac77-102">A <xref:System.Windows.Media.VisualCollection> has implied context affinity.</span></span> <span data-ttu-id="1ac77-103">プロシージャがアクセスを試みた場合、<xref:System.Windows.Media.VisualCollection>所有元のコンテキストとは異なるコンテキストから<xref:System.Windows.Media.ContainerVisual>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-103">If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac77-104">次の例を作成する方法を示しています、<xref:System.Windows.Media.VisualCollection>とメンバーを追加します。</span><span class="sxs-lookup"><span data-stu-id="1ac77-104">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="1ac77-105">サンプル全体については、次を参照してください。 [DrawingVisuals サンプルを使用してテストをヒット](http://go.microsoft.com/fwlink/?LinkID=159994)です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-105">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent">
          <span data-ttu-id="1ac77-106">その <see cref="T:System.Windows.Media.VisualCollection" /> が返される親ビジュアル オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-106">The parent visual object whose <see cref="T:System.Windows.Media.VisualCollection" /> is returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-107">
            <see cref="T:System.Windows.Media.VisualCollection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-107">Initializes a new instance of the <see cref="T:System.Windows.Media.VisualCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="1ac77-108">
            <see cref="T:System.Windows.Media.Visual" /> の末尾に追加する <see cref="T:System.Windows.Media.VisualCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-108">The <see cref="T:System.Windows.Media.Visual" /> to append to the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-109">
            <see cref="T:System.Windows.Media.Visual" /> を <see cref="T:System.Windows.Media.VisualCollection" /> の末尾に追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-109">Appends a <see cref="T:System.Windows.Media.Visual" /> to the end of the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac77-110">
            <paramref name="visual" /> が追加されたコレクション内でのインデックス位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-110">The index in the collection at which <paramref name="visual" /> was added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-111">追加する、<xref:System.Windows.Media.Visual>値がある`null`は許可されており、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="1ac77-111">Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.</span></span>  
  
 <span data-ttu-id="1ac77-112"><xref:System.Windows.Media.VisualCollection.Add%2A>メソッドが所有者である親、ビジュアル間の親子関係を設定もの<xref:System.Windows.Media.VisualCollection>、および子`visual`です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-112">The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="1ac77-113">カスタム クラスの visual の子オブジェクトの基になる記憶域実装大きい低レベルの制御を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1ac77-113">If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="1ac77-114">独自のストレージの実装を定義する必要があり、使用しないこれらのメソッドを使用して、<xref:System.Windows.Media.VisualCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-114">When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1ac77-115">次の例を作成する方法を示しています、<xref:System.Windows.Media.VisualCollection>とメンバーを追加します。</span><span class="sxs-lookup"><span data-stu-id="1ac77-115">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="1ac77-116">サンプル全体については、次を参照してください。 [DrawingVisuals サンプルを使用してテストをヒット](http://go.microsoft.com/fwlink/?LinkID=159994)です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-116">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ac77-117">
            <see cref="T:System.ArgumentException" /> がルート要素である場合、<see cref="T:System.Windows.Media.Visual" /> がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-117">An <see cref="T:System.ArgumentException" /> is thrown if the <see cref="T:System.Windows.Media.Visual" /> is a root element.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac77-118">
            <see cref="T:System.Windows.Media.VisualCollection" /> に格納できる要素の数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-118">Gets or sets the number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac77-119">
            <see cref="T:System.Windows.Media.VisualCollection" /> に格納できる要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-119">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-120">値<xref:System.Windows.Media.VisualCollection.Capacity%2A>は要素の数を<xref:System.Windows.Media.VisualCollection>が格納できます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-120">The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span> <span data-ttu-id="1ac77-121"><xref:System.Windows.Media.VisualCollection.Count%2A> 実際には、ビジュアルの数、<xref:System.Windows.Media.VisualCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-121"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="1ac77-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> 常により大きいまたは等しい<xref:System.Windows.Media.VisualCollection.Count%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>.</span></span> <span data-ttu-id="1ac77-123">場合<xref:System.Windows.Media.VisualCollection.Count%2A>を超える<xref:System.Windows.Media.VisualCollection.Capacity%2A>の容量の要素を追加するときに、<xref:System.Windows.Media.VisualCollection>が増加します。</span><span class="sxs-lookup"><span data-stu-id="1ac77-123">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased.</span></span> <span data-ttu-id="1ac77-124">既定では<xref:System.Windows.Media.VisualCollection.Capacity%2A>は 0 です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-124">By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ac77-125">
            <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> は <see cref="P:System.Windows.Media.VisualCollection.Count" /> より小さい値に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-125">
              <see cref="P:System.Windows.Media.VisualCollection.Capacity" /> is set to a value that is less than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ac77-126">
            <see cref="T:System.Windows.Media.VisualCollection" /> からすべての要素を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-126">Removes all elements from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-127"><xref:System.Windows.Media.VisualCollection.Count%2A>はゼロにリセットします。</span><span class="sxs-lookup"><span data-stu-id="1ac77-127">The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero.</span></span> <span data-ttu-id="1ac77-128">値、<xref:System.Windows.Media.VisualCollection.Capacity%2A>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="1ac77-128">The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="1ac77-129">容量をリセットする、 <xref:System.Windows.Media.VisualCollection>、設定、<xref:System.Windows.Media.VisualCollection.Capacity%2A>プロパティを目的のサイズ。</span><span class="sxs-lookup"><span data-stu-id="1ac77-129">To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="1ac77-130">コレクション内で検索される <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-130">The <see cref="T:System.Windows.Media.Visual" /> to search for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-131">指定した <see cref="T:System.Boolean" /> がコレクションに含まれているかどうかを示す <see cref="T:System.Windows.Media.Visual" /> 値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-131">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified <see cref="T:System.Windows.Media.Visual" /> is contained in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac77-132">
            <paramref name="visual" /> がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-132">
              <see langword="true" /> if <paramref name="visual" /> is contained in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-133">この関数の最悪のシナリオの実行時のシナリオは`O(n)`ここで、`n`内の項目数が、<xref:System.Windows.Media.VisualCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-133">The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1ac77-134">渡された配列に現在のコレクションをコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-134">Copies the current collection into the passed array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="1ac77-135">
            <see cref="T:System.Array" /> から要素がコピーされる 1 次元 <see cref="T:System.Windows.Media.VisualCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-135">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1ac77-136">コピーの開始位置となる、<c>array</c> の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-136">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-137">指定した配列インデックスを開始位置として、コレクション内の項目を配列にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-137">Copies the items in the collection to an array, starting at a specific array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="1ac77-138">
            <see cref="T:System.Windows.Media.Visual" /> オブジェクトの配列 (0 から始まるインデックスを使用する必要があります)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-138">An array of <see cref="T:System.Windows.Media.Visual" /> objects (which must have zero-based indexing).</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="1ac77-139">
            <c>配列</c>内のコピーの開始位置を示すインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-139">The index to start copying from within <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-140">渡された <see cref="T:System.Windows.Media.Visual" /> 配列に現在のコレクションをコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-140">Copies the current collection into the passed <see cref="T:System.Windows.Media.Visual" /> array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac77-141">コレクション内の要素の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-141">Gets the number of elements in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac77-142">
            <see cref="T:System.Windows.Media.VisualCollection" /> に格納されている要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-142">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> contains.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-143"><xref:System.Windows.Media.VisualCollection.Count%2A> 実際には、要素の数、<xref:System.Windows.Media.VisualCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-143"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="1ac77-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> 要素の数を<xref:System.Windows.Media.VisualCollection>が格納できます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span>  
  
 <span data-ttu-id="1ac77-145"><xref:System.Windows.Media.VisualCollection.Count%2A> 常に以下を<xref:System.Windows.Media.VisualCollection.Capacity%2A>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-145"><xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span></span> <span data-ttu-id="1ac77-146">場合<xref:System.Windows.Media.VisualCollection.Count%2A>を超える<xref:System.Windows.Media.VisualCollection.Capacity%2A>前の要素をコピーし、新しい要素を追加する前に、内部の配列を自動的に再割り当てして要素を追加するときに、リストの容量が 2 倍にします。</span><span class="sxs-lookup"><span data-stu-id="1ac77-146">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ac77-147">
            <see cref="T:System.Windows.Media.VisualCollection" /> を反復処理できる列挙子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac77-148">コレクションの反復処理に使用できる列挙子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-148">An enumerator that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="1ac77-149">
            <see cref="T:System.Windows.Media.Visual" /> 内で検索される <see cref="T:System.Windows.Media.VisualCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-149">The <see cref="T:System.Windows.Media.Visual" /> to locate in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-150">
            <see cref="T:System.Windows.Media.Visual" /> の 0 から始まるインデックスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-150">Returns the zero-based index of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac77-151">
            <see cref="T:System.Windows.Media.Visual" /> のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-151">The index of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-152">場合、<xref:System.Windows.Media.Visual>に含まれていない、 <xref:System.Windows.Media.VisualCollection>-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-152">If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned.</span></span> <span data-ttu-id="1ac77-153">場合`null`メソッドを持つ最初のエントリのインデックスに渡される`null`が返されます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-153">If `null` is passed to the method, the index of the first entry that has `null` is returned.</span></span> <span data-ttu-id="1ac77-154">Null のエントリがない場合は、-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-154">If there is no null entry, -1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ac77-155">値を挿入する位置の、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-155">The zero-based index at which the value should be inserted.</span>
          </span>
        </param>
        <param name="visual">
          <span data-ttu-id="1ac77-156">
            <see cref="T:System.Windows.Media.VisualCollection" /> に挿入する <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-156">The <see cref="T:System.Windows.Media.Visual" /> to insert into the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-157">
            <see cref="T:System.Windows.Media.VisualCollection" /> 内の指定したインデックスの位置に要素を挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-157">Inserts an element into the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-158">場合<xref:System.Windows.Media.VisualCollection.Count%2A>既に同じ<xref:System.Windows.Media.VisualCollection.Capacity%2A>の容量、<xref:System.Windows.Media.VisualCollection>が増加する前に、新しい<xref:System.Windows.Media.Visual>を挿入します。</span><span class="sxs-lookup"><span data-stu-id="1ac77-158">If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted.</span></span> <span data-ttu-id="1ac77-159">場合`index`と等しい<xref:System.Windows.Media.VisualCollection.Count%2A>、`visual`の末尾に追加された<xref:System.Windows.Media.VisualCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-159">If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="1ac77-160">任意の既存のビジュアル オブジェクトを以上になると、`index`に合わせて新しいシフト<xref:System.Windows.Media.Visual>、およびそのインデックス値が更新されます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-160">Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.</span></span>  
  
 <span data-ttu-id="1ac77-161"><xref:System.Windows.Media.VisualCollection.Insert%2A>メソッドが所有者である親、ビジュアル間の親子関係を設定もの<xref:System.Windows.Media.VisualCollection>、および子`visual`です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-161">The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="1ac77-162">さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1ac77-162">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="1ac77-163">独自のストレージの実装を定義し、使用しないこれらのメソッドを使用して、<xref:System.Windows.Media.VisualCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-163">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ac77-164">
            <paramref name="index" /> が 0 未満の値か、<see cref="P:System.Windows.Media.VisualCollection.Count" /> より大きい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-164">
              <paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac77-165">
            <see cref="T:System.Windows.Media.VisualCollection" /> が読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-165">Gets a value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac77-166">
            <see cref="T:System.Windows.Media.VisualCollection" /> が読み取り専用かどうかを示す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-166">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-167">このプロパティは常に`false`すべて<xref:System.Windows.Media.VisualCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1ac77-167">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac77-168">
            <see cref="T:System.Windows.Media.VisualCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-168">Gets a value that indicates whether access to the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac77-169">
            <see cref="T:System.Windows.Media.VisualCollection" /> が同期されている (スレッド セーフである) かどうかを示す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-169">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-170">このプロパティは常に`false`すべて<xref:System.Windows.Media.VisualCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1ac77-170">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ac77-171">
            <see cref="T:System.Windows.Media.VisualCollection" /> を取得または設定する <see cref="T:System.Windows.Media.Visual" /> の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-171">The zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" /> from which to get or set the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-172">
            <see cref="T:System.Windows.Media.Visual" /> の 0 から始まるインデックス位置に格納されている <see cref="T:System.Windows.Media.VisualCollection" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-172">Gets or sets the <see cref="T:System.Windows.Media.Visual" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac77-173">
            <paramref name="index" /> に格納されている <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-173">The <see cref="T:System.Windows.Media.Visual" /> that is stored at <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-174">このプロパティは、固有の仕様にアクセスする機能を提供<xref:System.Windows.Media.Visual>で、<xref:System.Windows.Media.VisualCollection>インデックスを使用します。</span><span class="sxs-lookup"><span data-stu-id="1ac77-174">This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ac77-175">
            <paramref name="index" /> が 0 未満か、<paramref name="index" /> が <see cref="P:System.Windows.Media.VisualCollection.Count" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-175">
              <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ac77-176">新しい子要素には既に親があるか、指定したインデックス位置にある値が <see langword="null" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-176">The new child element already has a parent, or the value at the specified index is not <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="1ac77-177">
            <see cref="T:System.Windows.Media.Visual" /> から削除する <see cref="T:System.Windows.Media.VisualCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-177">The <see cref="T:System.Windows.Media.Visual" /> to remove from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-178">指定した <see cref="T:System.Windows.Media.Visual" /> オブジェクトを <see cref="T:System.Windows.Media.VisualCollection" /> から削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-178">Removes the specified <see cref="T:System.Windows.Media.Visual" /> object from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-179">削除されたオブジェクトの後ろにある visual オブジェクトは、空いた位置を占めるようにシフトされ、インデックスの値が更新されます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-179">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span> <span data-ttu-id="1ac77-180">場合`visual`は`null`、最初の`null`エントリを削除します。</span><span class="sxs-lookup"><span data-stu-id="1ac77-180">If `visual` is `null`, the first `null` entry is removed.</span></span> <span data-ttu-id="1ac77-181">削除することに注意してください、`null`エントリは、コレクションのサイズに比例します。</span><span class="sxs-lookup"><span data-stu-id="1ac77-181">Note that removing a `null` entry is linear in the size of the collection.</span></span>  
  
 <span data-ttu-id="1ac77-182"><xref:System.Windows.Media.VisualCollection.Remove%2A>メソッドは、所有者であるビジュアルで親との間の親子リレーションシップを削除するもの<xref:System.Windows.Media.VisualCollection>と子要素`visual`です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-182">The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="1ac77-183">さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1ac77-183">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="1ac77-184">独自のストレージの実装を定義し、使用しないこれらのメソッドを使用して、<xref:System.Windows.Media.VisualCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-184">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ac77-185">削除するビジュアルの 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-185">The zero-based index of the visual to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-186">
            <see cref="T:System.Windows.Media.VisualCollection" /> 内の指定したインデックス位置にあるビジュアル オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-186">Removes the visual object at the specified index in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-187">削除されたオブジェクトの後ろにある visual オブジェクトは、空いた位置を占めるようにシフトされ、インデックスの値が更新されます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-187">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span>  
  
 <span data-ttu-id="1ac77-188"><xref:System.Windows.Media.VisualCollection.RemoveAt%2A>メソッドは、所有者であるビジュアルで親との間の親子リレーションシップを削除するもの<xref:System.Windows.Media.VisualCollection>と子要素`visual`です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-188">The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="1ac77-189">さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1ac77-189">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="1ac77-190">独自のストレージの実装を定義し、使用しないこれらのメソッドを使用して、<xref:System.Windows.Media.VisualCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-190">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ac77-191">
            <paramref name="index" /> が 0 未満か、<paramref name="index" /> が <see cref="P:System.Windows.Media.VisualCollection.Count" /> 以上です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-191">
              <paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1ac77-192">削除する要素の範囲の、0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-192">The zero-based index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1ac77-193">削除する要素の数を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-193">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1ac77-194">
            <see cref="T:System.Windows.Media.VisualCollection" /> からビジュアル オブジェクトの範囲を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-194">Removes a range of visual objects from the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ac77-195">削除されたオブジェクトの後ろにある visual オブジェクトは、空いた位置を占めるようにシフトされ、インデックスの値が更新されます。</span><span class="sxs-lookup"><span data-stu-id="1ac77-195">The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</span></span>  
  
 <span data-ttu-id="1ac77-196"><xref:System.Windows.Media.VisualCollection.RemoveRange%2A>メソッドが親のビジュアル、所有者である間の親子リレーションシップを削除もの<xref:System.Windows.Media.VisualCollection>とビジュアルの子の範囲です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-196">The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.</span></span>  
  
 <span data-ttu-id="1ac77-197">さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1ac77-197">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="1ac77-198">独自のストレージの実装を定義し、使用しないこれらのメソッドを使用して、<xref:System.Windows.Media.VisualCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1ac77-198">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1ac77-199">
            <paramref name="index" /> が 0 未満か <paramref name="count" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-199">
              <paramref name="index" /> is less than zero or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1ac77-200">
            <paramref name="index" /> および <paramref name="count" /> が <see cref="T:System.Windows.Media.VisualCollection" /> 内の要素の有効範囲を参照していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-200">
              <paramref name="index" /> and <paramref name="count" /> do not refer to a valid range of elements in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1ac77-201">
            <see cref="T:System.Windows.Media.VisualCollection" /> へのアクセスを同期するために使用できるオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-201">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1ac77-202">
            <see cref="T:System.Object" /> 型の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-202">A value of type <see cref="T:System.Object" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1ac77-203">このメンバーは、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-203">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
          <span data-ttu-id="1ac77-204">このメンバーの詳細については、「<see cref="M:System.Collections.IEnumerable.GetEnumerator" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-204">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1ac77-205">コレクションを反復処理するために使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1ac77-205">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>