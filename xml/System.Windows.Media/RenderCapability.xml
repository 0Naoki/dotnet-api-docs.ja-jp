<Type Name="RenderCapability" FullName="System.Windows.Media.RenderCapability">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b046f17908107dd244bf36bfccf7022ac29b435a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39915857" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class RenderCapability" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RenderCapability extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.RenderCapability" />
  <TypeSignature Language="VB.NET" Value="Public Class RenderCapability" />
  <TypeSignature Language="C++ CLI" Value="public ref class RenderCapability abstract sealed" />
  <TypeSignature Language="F#" Value="type RenderCapability = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eceac-101">WPF アプリケーションで、関連する <see cref="T:System.Windows.Threading.Dispatcher" /> オブジェクトの現在の描画層の照会、および変更の通知の登録を実行できるようにします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eceac-101">Enables WPF applications to query for the current rendering tier for their associated <see cref="T:System.Windows.Threading.Dispatcher" /> object and to register for notification of changes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eceac-102">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] アプリケーションを実行するデバイスのグラフィックス ハードウェア性能は描画層で決まります。</span><span class="sxs-lookup"><span data-stu-id="eceac-102">A rendering tier defines a level of graphics hardware capability and performance for a device that runs a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application.</span></span> <span data-ttu-id="eceac-103">描画層のレベルに最も影響のグラフィックス ハードウェアの機能、次に示します。</span><span class="sxs-lookup"><span data-stu-id="eceac-103">The features of the graphics hardware that most affect the rendering tier levels are the following:</span></span>  
  
-   <span data-ttu-id="eceac-104">ビデオ RAM: グラフィックス ハードウェアのビデオ メモリの量は、グラフィックスの構築に使用できるバッファーの数とサイズを決定します。</span><span class="sxs-lookup"><span data-stu-id="eceac-104">Video RAM: The amount of video memory on the graphics hardware determines the size and number of buffers that can be used for compositing graphics.</span></span>  
  
-   <span data-ttu-id="eceac-105">ピクセル シェーダー: ピクセル シェーダーは、グラフィックス、ピクセル単位で効果を計算する関数を処理します。</span><span class="sxs-lookup"><span data-stu-id="eceac-105">Pixel Shader: A pixel shader is a graphics processing function that calculates effects on a per-pixel basis.</span></span> <span data-ttu-id="eceac-106">表示されるグラフィックスの解像度によっては、各表示フレームの処理に数百万単位のピクセルが必要になることがあります。</span><span class="sxs-lookup"><span data-stu-id="eceac-106">Depending on the resolution of the displayed graphics, there could be several million pixels that need to be processed for each display frame.</span></span>  
  
-   <span data-ttu-id="eceac-107">頂点シェーダー: 頂点シェーダーは、グラフィックス オブジェクトの頂点データに数学演算を実行する関数を処理します。</span><span class="sxs-lookup"><span data-stu-id="eceac-107">Vertex Shader: A vertex shader is a graphics processing function that performs mathematical operations on the vertex data of the object.</span></span>  
  
-   <span data-ttu-id="eceac-108">マルチ テクスチャ サポート: マルチ テクスチャ サポートは、3 D グラフィックス オブジェクトにブレンド操作中に 2 つまたは複数の異なるテクスチャを適用する機能を指します。</span><span class="sxs-lookup"><span data-stu-id="eceac-108">Multitexture Support: Multitexture support refers to the ability to apply two or more distinct textures during a blending operation on a 3D graphics object.</span></span> <span data-ttu-id="eceac-109">マルチテクスチャ サポートの度合いは、グラフィックス ハードウェア上のマルチテクスチャ ユニットの数で決まります。</span><span class="sxs-lookup"><span data-stu-id="eceac-109">The degree of multitexture support is determined by the number of multitexture units on the graphics hardware.</span></span>  
  
 <span data-ttu-id="eceac-110">ピクセル シェーダー、頂点シェーダー、およびマルチ テクスチャ機能が特定の定義に使用される[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)]さらに、さまざまな表示の層の定義に使用するバージョン レベル[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="eceac-110">The pixel shader, vertex shader, and multitexture features are used to define specific [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version levels, which, in turn, are used to define the different rendering tiers in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="eceac-111">描画層の詳細については、次を参照してください。[グラフィックスの描画層](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md)します。</span><span class="sxs-lookup"><span data-stu-id="eceac-111">For a full description of the rendering tiers, see [Graphics Rendering Tiers](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.RenderOptions" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
  <Members>
    <Member MemberName="IsPixelShaderVersionSupported">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupported (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupported(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupported (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupported(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupported : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">
          <span data-ttu-id="eceac-112">ピクセル シェーダーのメジャー バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-112">The major version of the pixel shader.</span>
          </span>
        </param>
        <param name="minorVersionRequested">
          <span data-ttu-id="eceac-113">ピクセル シェーダーのマイナー バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-113">The minor version of the pixel shader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eceac-114">指定されたピクセル シェーダーのバージョンがサポートされているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-114">Gets a value that indicates whether the specified pixel shader version is supported.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eceac-115">ピクセル シェーダーのバージョンが現在のバージョンの WPF でサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-115">
              <see langword="true" /> if the pixel shader version is supported by the current version of WPF; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eceac-116"><xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A>メソッドを返します。`true`場合とピクセル シェーダーのバージョンが、WPF の現在のバージョンでサポートされている場合、<xref:System.Windows.Media.Effects.Effect>指定したメジャー/マイナー バージョンを使用して GPU で実行できます。</span><span class="sxs-lookup"><span data-stu-id="eceac-116">The <xref:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupported%2A> method returns `true` if the pixel shader version is supported by the current version of WPF, and if an <xref:System.Windows.Media.Effects.Effect> using the specified major/minor version can run on the GPU.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsPixelShaderVersionSupportedInSoftware">
      <MemberSignature Language="C#" Value="public static bool IsPixelShaderVersionSupportedInSoftware (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPixelShaderVersionSupportedInSoftware(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPixelShaderVersionSupportedInSoftware (majorVersionRequested As Short, minorVersionRequested As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPixelShaderVersionSupportedInSoftware(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member IsPixelShaderVersionSupportedInSoftware : int16 * int16 -&gt; bool" Usage="System.Windows.Media.RenderCapability.IsPixelShaderVersionSupportedInSoftware (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">
          <span data-ttu-id="eceac-117">ピクセル シェーダーのメジャー バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-117">The major version of the pixel shader.</span>
          </span>
        </param>
        <param name="minorVersionRequested">
          <span data-ttu-id="eceac-118">ピクセル シェーダーのマイナー バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-118">The minor version of the pixel shader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eceac-119">現在のシステムのソフトウェアで指定されたピクセル シェーダーのバージョンを描画できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-119">Gets a value that indicates whether the specified pixel shader version can be rendered in software on the current system.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eceac-120">現在のシステムのソフトウェアでピクセル シェーダーを描画できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-120">
              <see langword="true" /> if the pixel shader can be rendered in software on the current system; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eceac-121">ソフトウェア レンダリングは、ピクセル シェーダー 2.0 でのみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="eceac-121">Software rendering is only supported for Pixel Shader 2.0.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="IsShaderEffectSoftwareRenderingSupported">
      <MemberSignature Language="C#" Value="public static bool IsShaderEffectSoftwareRenderingSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsShaderEffectSoftwareRenderingSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsShaderEffectSoftwareRenderingSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShaderEffectSoftwareRenderingSupported : bool" Usage="System.Windows.Media.RenderCapability.IsShaderEffectSoftwareRenderingSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("IsShaderEffectSoftwareRenderingSupported property is deprecated.  Use IsPixelShaderVersionSupportedInSoftware static method instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eceac-122">システムがソフトウェアでビットマップ効果を描画できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-122">Gets a value that indicates whether the system can render bitmap effects in software.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eceac-123">システムがソフトウェアでビットマップ効果を描画できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-123">
              <see langword="true" /> if the system can render bitmap effects in software; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="MaxHardwareTextureSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Size MaxHardwareTextureSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Size MaxHardwareTextureSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxHardwareTextureSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Size MaxHardwareTextureSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxHardwareTextureSize : System.Windows.Size" Usage="System.Windows.Media.RenderCapability.MaxHardwareTextureSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eceac-124">基になるハードウェア デバイスのビットマップ作成の最大の幅および高さを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-124">Gets the maximum width and height for bitmap creation of the underlying hardware device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eceac-125">ハードウェアのビットマップ作成の最大の幅および高さを表す <see cref="T:System.Windows.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-125">A <see cref="T:System.Windows.Size" /> that represents the maximum width and height for hardware bitmap creation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eceac-126">複数のデバイスがある場合<xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A>それらの間の最小サイズを返します。</span><span class="sxs-lookup"><span data-stu-id="eceac-126">If there are multiple devices, <xref:System.Windows.Media.RenderCapability.MaxHardwareTextureSize%2A> returns the minimum size among them.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.BitmapCache" />
      </Docs>
    </Member>
    <Member MemberName="MaxPixelShaderInstructionSlots">
      <MemberSignature Language="C#" Value="public static int MaxPixelShaderInstructionSlots (short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxPixelShaderInstructionSlots(int16 majorVersionRequested, int16 minorVersionRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxPixelShaderInstructionSlots (majorVersionRequested As Short, minorVersionRequested As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int MaxPixelShaderInstructionSlots(short majorVersionRequested, short minorVersionRequested);" />
      <MemberSignature Language="F#" Value="static member MaxPixelShaderInstructionSlots : int16 * int16 -&gt; int" Usage="System.Windows.Media.RenderCapability.MaxPixelShaderInstructionSlots (majorVersionRequested, minorVersionRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="majorVersionRequested" Type="System.Int16" />
        <Parameter Name="minorVersionRequested" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="majorVersionRequested">
          <span data-ttu-id="eceac-127">ピクセル シェーダーのメジャー バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-127">The major version of the pixel shader.</span>
          </span>
        </param>
        <param name="minorVersionRequested">
          <span data-ttu-id="eceac-128">ピクセル シェーダーのマイナー バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-128">The minor version of the pixel shader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eceac-129">指定されたピクセル シェーダーのバージョンでサポートされている命令スロットの最大数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-129">Gets the maximum number of instruction slots supported by the specified pixel shader version.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eceac-130">Pixel Shader 2.0 では 96、Pixel Shader 3.0 では 512 以上、または他のバージョンの Pixel Shader では 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-130">96 for Pixel Shader 2.0, 512 or greater for Pixel Shader 3.0, or 0 for any other version of Pixel Shader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eceac-131">Pixel Shader 3.0 でサポートされている命令スロットの数は異なりますが、512 以上では常にします。</span><span class="sxs-lookup"><span data-stu-id="eceac-131">The number of instruction slots supported by Pixel Shader 3.0 varies, but is always 512 or greater.</span></span>  
  
 <span data-ttu-id="eceac-132">Pixel Shader 2.0 と 3.0 のみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="eceac-132">Only Pixel Shader 2.0 and 3.0 are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="Tier">
      <MemberSignature Language="C#" Value="public static int Tier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Tier" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderCapability.Tier" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Tier As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Tier { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Tier : int" Usage="System.Windows.Media.RenderCapability.Tier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eceac-133">現在のスレッドの描画層を示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-133">Gets a value that indicates the rendering tier for the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eceac-134">上位語が現在のスレッドの描画層に対応している <see cref="T:System.Int32" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-134">An <see cref="T:System.Int32" /> value whose high-order word corresponds to the rendering tier for the current thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="eceac-135">.NET Framework 4 より、描画層 1 が再定義され、[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 以上をサポートするグラフィックスのみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="eceac-135">Starting in the .NET Framework 4, rendering tier 1 has been redefined to only include graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 9.0 or greater.</span></span> <span data-ttu-id="eceac-136">[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 または 8 をサポートするグラフィックス ハードウェアは現在、描画層 0 として定義されています。</span><span class="sxs-lookup"><span data-stu-id="eceac-136">Graphics hardware that supports [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] 7 or 8 is now defined as rendering tier 0.</span></span>  
  
 <span data-ttu-id="eceac-137">戻り値では、3 つの値の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="eceac-137">The return value is one of three possible values:</span></span>  
  
|<span data-ttu-id="eceac-138">戻り値</span><span class="sxs-lookup"><span data-stu-id="eceac-138">Return value</span></span>|<span data-ttu-id="eceac-139">描画層</span><span class="sxs-lookup"><span data-stu-id="eceac-139">Rendering tier</span></span>|<span data-ttu-id="eceac-140">メモ</span><span class="sxs-lookup"><span data-stu-id="eceac-140">Notes</span></span>|  
|------------------|--------------------|-----------|  
|<span data-ttu-id="eceac-141">0x00000000</span><span class="sxs-lookup"><span data-stu-id="eceac-141">0x00000000</span></span>|<span data-ttu-id="eceac-142">0</span><span class="sxs-lookup"><span data-stu-id="eceac-142">0</span></span>|<span data-ttu-id="eceac-143">デバイス上のアプリケーションはグラフィックス ハードウェア高速は有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="eceac-143">No graphics hardware acceleration is available for the application on the device.</span></span> <span data-ttu-id="eceac-144">すべてのグラフィックス機能でソフトウェア高速化が利用されます。</span><span class="sxs-lookup"><span data-stu-id="eceac-144">All graphics features use software acceleration.</span></span> <span data-ttu-id="eceac-145">[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] バージョン レベルはバージョン 9.0 より前です。</span><span class="sxs-lookup"><span data-stu-id="eceac-145">The [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version level is less than version 9.0.</span></span>|  
|<span data-ttu-id="eceac-146">0x00010000</span><span class="sxs-lookup"><span data-stu-id="eceac-146">0x00010000</span></span>|<span data-ttu-id="eceac-147">1</span><span class="sxs-lookup"><span data-stu-id="eceac-147">1</span></span>|<span data-ttu-id="eceac-148">ほとんどのグラフィックス機能の[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]必要なシステム リソースの利用をすべて使用されていない場合に、ハードウェア アクセラレータを使用します。</span><span class="sxs-lookup"><span data-stu-id="eceac-148">Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration if the necessary system resources are available and have not been exhausted.</span></span> <span data-ttu-id="eceac-149">これは 9.0 以上のバージョンの [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] に相当します。</span><span class="sxs-lookup"><span data-stu-id="eceac-149">This corresponds to a [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.</span></span>|  
|<span data-ttu-id="eceac-150">0x00020000</span><span class="sxs-lookup"><span data-stu-id="eceac-150">0x00020000</span></span>|<span data-ttu-id="eceac-151">2</span><span class="sxs-lookup"><span data-stu-id="eceac-151">2</span></span>|<span data-ttu-id="eceac-152">ほとんどのグラフィックス機能の[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]提供される、必要なシステム リソースが枯渇していない場合に、ハードウェア アクセラレータを使用します。</span><span class="sxs-lookup"><span data-stu-id="eceac-152">Most of the graphics features of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] will use hardware acceleration provided the necessary system resources have not been exhausted.</span></span> <span data-ttu-id="eceac-153">これは 9.0 以上のバージョンの [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] に相当します。</span><span class="sxs-lookup"><span data-stu-id="eceac-153">This corresponds to a [!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)] version that is greater than or equal to 9.0.</span></span>|  
  
 <span data-ttu-id="eceac-154">次の表は、描画層 1 と描画層 2 のグラフィックス ハードウェア要件の違いをまとめたものです。</span><span class="sxs-lookup"><span data-stu-id="eceac-154">The following table shows the differences in graphics hardware requirements for rendering tier 1 and rendering tier 2:</span></span>  
  
|<span data-ttu-id="eceac-155">機能</span><span class="sxs-lookup"><span data-stu-id="eceac-155">Feature</span></span>|<span data-ttu-id="eceac-156">層 1</span><span class="sxs-lookup"><span data-stu-id="eceac-156">Tier 1</span></span>|<span data-ttu-id="eceac-157">層 2</span><span class="sxs-lookup"><span data-stu-id="eceac-157">Tier 2</span></span>|  
|-------------|------------|------------|  
|[!INCLUDE[TLA2#tla_dx](~/includes/tla2sharptla-dx-md.md)]<span data-ttu-id="eceac-158"> のバージョン</span><span class="sxs-lookup"><span data-stu-id="eceac-158"> version</span></span>|<span data-ttu-id="eceac-159">9.0 以上が要求されます。</span><span class="sxs-lookup"><span data-stu-id="eceac-159">Must be greater than or equal to 9.0.</span></span>|<span data-ttu-id="eceac-160">9.0 以上が要求されます。</span><span class="sxs-lookup"><span data-stu-id="eceac-160">Must be greater than or equal to 9.0.</span></span>|  
|<span data-ttu-id="eceac-161">ビデオ RAM</span><span class="sxs-lookup"><span data-stu-id="eceac-161">Video RAM</span></span>|<span data-ttu-id="eceac-162">60MB 以上が要求されます。</span><span class="sxs-lookup"><span data-stu-id="eceac-162">Must be greater than or equal to 60MB.</span></span>|<span data-ttu-id="eceac-163">120MB 以上が要求されます。</span><span class="sxs-lookup"><span data-stu-id="eceac-163">Must be greater than or equal to 120MB.</span></span>|  
|<span data-ttu-id="eceac-164">ピクセル シェーダー</span><span class="sxs-lookup"><span data-stu-id="eceac-164">Pixel shader</span></span>|<span data-ttu-id="eceac-165">バージョン 2.0 以上が要求されます。</span><span class="sxs-lookup"><span data-stu-id="eceac-165">Version level must greater than or equal to 2.0.</span></span>|<span data-ttu-id="eceac-166">バージョン 2.0 以上が要求されます。</span><span class="sxs-lookup"><span data-stu-id="eceac-166">Version level must greater than or equal to 2.0.</span></span>|  
|<span data-ttu-id="eceac-167">頂点シェーダー</span><span class="sxs-lookup"><span data-stu-id="eceac-167">Vertex shader</span></span>|<span data-ttu-id="eceac-168">要件はありません。</span><span class="sxs-lookup"><span data-stu-id="eceac-168">No requirement.</span></span>|<span data-ttu-id="eceac-169">バージョン 2.0 以上が要求されます。</span><span class="sxs-lookup"><span data-stu-id="eceac-169">Version level must greater than or equal to 2.0.</span></span>|  
|<span data-ttu-id="eceac-170">マルチテクスチャ ユニット</span><span class="sxs-lookup"><span data-stu-id="eceac-170">Multitexture units</span></span>|<span data-ttu-id="eceac-171">要件はありません。</span><span class="sxs-lookup"><span data-stu-id="eceac-171">No requirement.</span></span>|<span data-ttu-id="eceac-172">ユニット数が 4 以上であることが要求されます。</span><span class="sxs-lookup"><span data-stu-id="eceac-172">Number of units must greater than or equal to 4.</span></span>|  
  
 <span data-ttu-id="eceac-173">描画層の定義の詳細については、次を参照してください。[グラフィックスの描画層](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md)します。</span><span class="sxs-lookup"><span data-stu-id="eceac-173">For more information on the definitions for the rendering tiers, see [Graphics Rendering Tiers](~/docs/framework/wpf/advanced/graphics-rendering-tiers.md).</span></span>  
  
 <span data-ttu-id="eceac-174">現在のスレッドに関連付けられていない場合<xref:System.Windows.Threading.Dispatcher>オブジェクト、1 つが自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="eceac-174">If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eceac-175">次の例では、現在のスレッドの描画層を返す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="eceac-175">The following example shows how to return the rendering tier for the current thread.</span></span>  
  
 [!code-csharp[RenderOptions#RenderCapability1](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#rendercapability1)]
 [!code-vb[RenderOptions#RenderCapability1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#rendercapability1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TierChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TierChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TierChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.RenderCapability.TierChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TierChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TierChanged;" />
      <MemberSignature Language="F#" Value="member this.TierChanged : EventHandler " Usage="member this.TierChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eceac-176">現在のスレッドの <see cref="T:System.Windows.Threading.Dispatcher" /> オブジェクトで描画層が変更されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eceac-176">Occurs when the rendering tier has changed for the <see cref="T:System.Windows.Threading.Dispatcher" /> object of the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eceac-177">現在のスレッドに関連付けられていない場合<xref:System.Windows.Threading.Dispatcher>オブジェクト、1 つが自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="eceac-177">If the current thread does not have an associated <xref:System.Windows.Threading.Dispatcher> object, one is automatically created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>