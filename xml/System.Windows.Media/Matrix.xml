<Type Name="Matrix" FullName="System.Windows.Media.Matrix">
  <TypeSignature Language="C#" Value="public struct Matrix : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Matrix extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public Structure Matrix&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Matrix : IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e322a-101">2-D 空間での変換に使用される 3 x 3 アフィン変換行列を表します。</span><span class="sxs-lookup"><span data-stu-id="e322a-101">Represents a 3x3 affine transformation matrix used for transformations in 2-D space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-102">変換に 3 x 3 マトリックスが使用される、 [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] x と y の平面。</span><span class="sxs-lookup"><span data-stu-id="e322a-102">A 3x3 matrix is used for transformations in a [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] x-y plane.</span></span> <span data-ttu-id="e322a-103">アフィン変換行列を乗算するためには、変換後の線形変換、回転などと、傾斜 (傾斜) の任意の数を形成します。</span><span class="sxs-lookup"><span data-stu-id="e322a-103">Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation.</span></span> <span data-ttu-id="e322a-104">アフィン変換行列が最後の列 (0, 0, 1) を指定する必要があるは最初の 2 つの列内のメンバーだけです。</span><span class="sxs-lookup"><span data-stu-id="e322a-104">An affine transformation matrix has its final column equal to (0, 0, 1), so only the members in the first two columns need to be specified.</span></span>  <span data-ttu-id="e322a-105">ベクターが、列ベクターではなく行ベクターとして表されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e322a-105">Note that vectors are expressed as row-vectors, not column vectors.</span></span>  
  
 <span data-ttu-id="e322a-106">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix>行優先順を使用して格納され、次の構造になっています。</span><span class="sxs-lookup"><span data-stu-id="e322a-106">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> is stored using row-major order and has the following structure:</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="e322a-107">0</span><span class="sxs-lookup"><span data-stu-id="e322a-107">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="e322a-108">0</span><span class="sxs-lookup"><span data-stu-id="e322a-108">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="e322a-109">1</span><span class="sxs-lookup"><span data-stu-id="e322a-109">1</span></span>|  
  
 <span data-ttu-id="e322a-110">最後の行メンバー<xref:System.Windows.Media.Matrix.OffsetX%2A>と<xref:System.Windows.Media.Matrix.OffsetY%2A>、平行移動の値を表します。</span><span class="sxs-lookup"><span data-stu-id="e322a-110">The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values.</span></span>  
  
 <span data-ttu-id="e322a-111">メソッドとプロパティで、変換行列は通常、6 つのみのメンバーを持つベクトルとしてよう指定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-111">In methods and properties, the transformation matrix is usually specified as a vector with only six members, as follows:</span></span>  
  
 <span data-ttu-id="e322a-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span><span class="sxs-lookup"><span data-stu-id="e322a-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span></span>  
  
 <span data-ttu-id="e322a-113">使用できますが、<xref:System.Windows.Media.Matrix>個々 のポイントに変換するには、直接構造体、または、 <xref:System.Windows.Media.MatrixTransform> 、オブジェクトを変換する[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]をマトリックスを直接操作せずにオブジェクトを変換できるようにするクラスのセットも提供: <xref:System.Windows.Media.RotateTransform>、 <xref:System.Windows.Media.ScaleTransform>、<xref:System.Windows.Media.SkewTransform>と<xref:System.Windows.Media.TranslateTransform>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-113">Although you can use a <xref:System.Windows.Media.Matrix> structure directly to translate individual points, or with a <xref:System.Windows.Media.MatrixTransform> to transform objects, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] also provides a set of classes that enable you to transform objects without working directly with matrices: <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform>.</span></span>  
  
<a name="xamlAttributeUsage_Matrix"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="e322a-114">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="e322a-114">XAML Attribute Usage</span></span>  
  
```  
<object property="m11, m12, m21, m22, offsetX, offsetY"/>  
- or -  
<object property="Identity"/>  
```  
  
<a name="xamlValues_Matrix"></a>   
## <a name="xaml-values"></a><span data-ttu-id="e322a-115">XAML 値</span><span class="sxs-lookup"><span data-stu-id="e322a-115">XAML Values</span></span>  
 <span data-ttu-id="e322a-116">*m11*</span><span class="sxs-lookup"><span data-stu-id="e322a-116">*m11*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="e322a-117">最初の行とこれの最初の列の値<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-117">The value in the first row and first column of this <xref:System.Windows.Media.Matrix>.</span></span> <span data-ttu-id="e322a-118">詳細については、<xref:System.Windows.Media.Matrix.M11%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e322a-118">For more information, see the <xref:System.Windows.Media.Matrix.M11%2A> property.</span></span>  
  
 <span data-ttu-id="e322a-119">*m12*</span><span class="sxs-lookup"><span data-stu-id="e322a-119">*m12*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="e322a-120">最初の行と 2 番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-120">The value in the first row and second column.</span></span> <span data-ttu-id="e322a-121">詳細については、<xref:System.Windows.Media.Matrix.M12%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e322a-121">For more information, see the <xref:System.Windows.Media.Matrix.M12%2A> property.</span></span>  
  
 <span data-ttu-id="e322a-122">*m21*</span><span class="sxs-lookup"><span data-stu-id="e322a-122">*m21*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="e322a-123">2 番目の行の最初の列の値です。</span><span class="sxs-lookup"><span data-stu-id="e322a-123">The value in the second row and first column.</span></span> <span data-ttu-id="e322a-124">詳細については、<xref:System.Windows.Media.Matrix.M21%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e322a-124">For more information, see the <xref:System.Windows.Media.Matrix.M21%2A> property.</span></span>  
  
 <span data-ttu-id="e322a-125">*m22*</span><span class="sxs-lookup"><span data-stu-id="e322a-125">*m22*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="e322a-126">2 番目の行と 2 番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-126">The value in the second row and second column.</span></span> <span data-ttu-id="e322a-127">詳細については、<xref:System.Windows.Media.Matrix.M22%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e322a-127">For more information, see the <xref:System.Windows.Media.Matrix.M22%2A> property.</span></span>  
  
 <span data-ttu-id="e322a-128">*offsetX*</span><span class="sxs-lookup"><span data-stu-id="e322a-128">*offsetX*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="e322a-129">3 番目の行と列の最初の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-129">The value in the third row and first column.</span></span> <span data-ttu-id="e322a-130">詳細については、<xref:System.Windows.Media.Matrix.OffsetX%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e322a-130">For more information, see the <xref:System.Windows.Media.Matrix.OffsetX%2A> property.</span></span>  
  
 <span data-ttu-id="e322a-131">*offsetY*</span><span class="sxs-lookup"><span data-stu-id="e322a-131">*offsetY*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="e322a-132">3 番目の行と 2 番目の列の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-132">The value in the third row and second column.</span></span> <span data-ttu-id="e322a-133">詳細については、<xref:System.Windows.Media.Matrix.OffsetY%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e322a-133">For more information, see the <xref:System.Windows.Media.Matrix.OffsetY%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 m11, float64 m12, float64 m21, float64 m22, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Double, m12 As Double, m21 As Double, m22 As Double, offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Double" />
        <Parameter Name="m12" Type="System.Double" />
        <Parameter Name="m21" Type="System.Double" />
        <Parameter Name="m22" Type="System.Double" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m11"><span data-ttu-id="e322a-134">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M11" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="e322a-134">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M11" /> coefficient.</span></span></param>
        <param name="m12"><span data-ttu-id="e322a-135">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M12" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="e322a-135">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M12" /> coefficient.</span></span></param>
        <param name="m21"><span data-ttu-id="e322a-136">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M21" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="e322a-136">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M21" /> coefficient.</span></span></param>
        <param name="m22"><span data-ttu-id="e322a-137">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.M22" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="e322a-137">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M22" /> coefficient.</span></span></param>
        <param name="offsetX"><span data-ttu-id="e322a-138">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="e322a-138">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetX" /> coefficient.</span></span></param>
        <param name="offsetY"><span data-ttu-id="e322a-139">新しい <see cref="T:System.Windows.Media.Matrix" /> 構造体の <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 係数。</span><span class="sxs-lookup"><span data-stu-id="e322a-139">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetY" /> coefficient.</span></span></param>
        <summary><span data-ttu-id="e322a-140"><see cref="T:System.Windows.Media.Matrix" /> 構造体の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e322a-140">Initializes a new instance of the <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Windows::Media::Matrix matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="e322a-141">この <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-141">The <see cref="T:System.Windows.Media.Matrix" /> structure to append to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></param>
        <summary><span data-ttu-id="e322a-142">指定した <see cref="T:System.Windows.Media.Matrix" /> 構造体をこの <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-142">Appends the specified <see cref="T:System.Windows.Media.Matrix" /> structure to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-143">この操作は、これを乗算することと同じ<xref:System.Windows.Media.Matrix>パラメーターで構造`matrix`です。</span><span class="sxs-lookup"><span data-stu-id="e322a-143">This operation is the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`.</span></span>  <span data-ttu-id="e322a-144">行列の乗算は可換性ただし、この操作は、パラメーターを乗算することと同じではありません`matrix`この<xref:System.Windows.Media.Matrix>構造体です。 つまり、(この * `matrix`) と同じではありません (`matrix` * この)。</span><span class="sxs-lookup"><span data-stu-id="e322a-144">Matrix multiplication is not commutative, though, so this operation is not the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure; that is, (this * `matrix`) is not the same as (`matrix` * this).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-145">次の例は、追加する方法を示します、<xref:System.Windows.Media.Matrix>を別の構造<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-145">The following example shows how to append a <xref:System.Windows.Media.Matrix> structure to another <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Determinant">
      <MemberSignature Language="C#" Value="public double Determinant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Determinant" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Determinant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Determinant As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Determinant { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-146">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の行列式を取得します。</span><span class="sxs-lookup"><span data-stu-id="e322a-146">Gets the determinant of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="e322a-147">この <see cref="T:System.Windows.Media.Matrix" /> の行列式。</span><span class="sxs-lookup"><span data-stu-id="e322a-147">The determinant of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-148">この例の行列式を取得する方法を示しています、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-148">This example shows how to get the determinant of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixDeterminantExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixdeterminantexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e322a-149">指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体の値が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e322a-149">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures have the same values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e322a-150">A<xref:System.Windows.Media.Matrix>倍精度の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="e322a-150">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="e322a-151">の値、<xref:System.Double>算術演算子は、2 つの比較を実行時に、有効桁数を失うことができます<xref:System.Double>論理的に等価である構造体が失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e322a-151">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-152">次の例は、2 つをチェックする方法を示します<xref:System.Windows.Media.Matrix>構造が等しいかどうか。</span><span class="sxs-lookup"><span data-stu-id="e322a-152">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="e322a-153">比較対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-153">The <see cref="T:System.Object" /> to compare.</span></span></param>
        <summary><span data-ttu-id="e322a-154">指定した <see cref="T:System.Object" /> が、この <see cref="T:System.Windows.Media.Matrix" /> と同じ <see cref="T:System.Windows.Media.Matrix" /> 構造体であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e322a-154">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns>
          <span data-ttu-id="e322a-155"><paramref name="o" /> が、この <see cref="T:System.Windows.Media.Matrix" /> 構造体と同じ <see cref="T:System.Windows.Media.Matrix" /> 構造体の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-155"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" /> structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e322a-156">A<xref:System.Windows.Media.Matrix>倍精度の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="e322a-156">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="e322a-157">の値、<xref:System.Double>算術演算子は、2 つの比較を実行時に、有効桁数を失うことができます<xref:System.Double>論理的に等価である構造体が失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e322a-157">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-158">次の例は、2 つをチェックする方法を示します<xref:System.Windows.Media.Matrix>構造が等しいかどうか。</span><span class="sxs-lookup"><span data-stu-id="e322a-158">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Matrix value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Media.Matrix value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Media::Matrix value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e322a-159">このインスタンスと比較する <see cref="T:System.Windows.Media.Matrix" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="e322a-159">The instance of <see cref="T:System.Windows.Media.Matrix" /> to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="e322a-160">指定した <see cref="T:System.Windows.Media.Matrix" /> 構造体がこのインスタンスと同一であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e322a-160">Determines whether the specified <see cref="T:System.Windows.Media.Matrix" /> structure is identical to this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="e322a-161">インスタンスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-161"><see langword="true" /> if instances are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e322a-162">A<xref:System.Windows.Media.Matrix>倍精度の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="e322a-162">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="e322a-163">の値、<xref:System.Double>算術演算子は、2 つの比較を実行時に、有効桁数を失うことができます<xref:System.Double>論理的に等価である構造体が失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e322a-163">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-164">次の例は、2 つをチェックする方法を示します<xref:System.Windows.Media.Matrix>構造が等しいかどうか。</span><span class="sxs-lookup"><span data-stu-id="e322a-164">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="e322a-165">比較する最初の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-165">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="e322a-166">比較する 2 番目の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-166">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="e322a-167">指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e322a-167">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span></span></summary>
        <returns>
          <span data-ttu-id="e322a-168"><paramref name="matrix1" /> と <paramref name="matrix2" /> が同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-168"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e322a-169">A<xref:System.Windows.Media.Matrix>倍精度の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="e322a-169">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="e322a-170">の値、<xref:System.Double>算術演算子は、2 つの比較を実行時に、有効桁数を失うことができます<xref:System.Double>論理的に等価である構造体が失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e322a-170">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e322a-171">この <see cref="T:System.Windows.Media.Matrix" /> 構造体のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="e322a-171">Returns the hash code for this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="e322a-172">対象のインスタンスのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="e322a-172">The hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInverse">
      <MemberSignature Language="C#" Value="public bool HasInverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.HasInverse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasInverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasInverse { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-173">この <see cref="T:System.Windows.Media.Matrix" /> 構造体が反転可能かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e322a-173">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is invertible.</span></span></summary>
        <value>
          <span data-ttu-id="e322a-174"><see cref="T:System.Windows.Media.Matrix" /> の逆が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-174"><see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> has an inverse; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e322a-175">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e322a-175">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-176">次の例をチェックするかどうか、<xref:System.Windows.Media.Matrix>が反転できます。</span><span class="sxs-lookup"><span data-stu-id="e322a-176">The following example checks whether a <xref:System.Windows.Media.Matrix> is invertible.</span></span> <span data-ttu-id="e322a-177">反転できる場合、<xref:System.Windows.Media.Matrix>が逆です。</span><span class="sxs-lookup"><span data-stu-id="e322a-177">If it is invertible, the <xref:System.Windows.Media.Matrix> is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Matrix Identity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Identity As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Matrix Identity { System::Windows::Media::Matrix get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-178">恒等 <see cref="T:System.Windows.Media.Matrix" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e322a-178">Gets an identity <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="e322a-179">恒等行列。</span><span class="sxs-lookup"><span data-stu-id="e322a-179">An identity matrix.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-180">Id 行列係数 [1, 1]、[2, 2] [3, 3] で、値 1 では、係数の残りの部分では 0 の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-180">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="e322a-181">設定に関連しているこの<xref:System.Windows.Media.Matrix.M11%2A>と<xref:System.Windows.Media.Matrix.M22%2A>1 と<xref:System.Windows.Media.Matrix.M12%2A>、 <xref:System.Windows.Media.Matrix.M21%2A>、 <xref:System.Windows.Media.Matrix.OffsetX%2A>、および<xref:System.Windows.Media.Matrix.OffsetY%2A>を 0 にします。</span><span class="sxs-lookup"><span data-stu-id="e322a-181">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="e322a-182">アフィン行列では、実装を[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]を使用して、 <xref:System.Windows.Media.Matrix>、構造体、係数 [3, 1]、[3, 2]、[3.3] 0,0,1 の値をそれぞれ保持するには暗黙的に指定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-182">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix>, structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="e322a-183">1</span><span class="sxs-lookup"><span data-stu-id="e322a-183">1</span></span>|<span data-ttu-id="e322a-184">0</span><span class="sxs-lookup"><span data-stu-id="e322a-184">0</span></span>|<span data-ttu-id="e322a-185">0</span><span class="sxs-lookup"><span data-stu-id="e322a-185">0</span></span>|  
|<span data-ttu-id="e322a-186">0</span><span class="sxs-lookup"><span data-stu-id="e322a-186">0</span></span>|<span data-ttu-id="e322a-187">1</span><span class="sxs-lookup"><span data-stu-id="e322a-187">1</span></span>|<span data-ttu-id="e322a-188">0</span><span class="sxs-lookup"><span data-stu-id="e322a-188">0</span></span>|  
|<span data-ttu-id="e322a-189">0</span><span class="sxs-lookup"><span data-stu-id="e322a-189">0</span></span>|<span data-ttu-id="e322a-190">0</span><span class="sxs-lookup"><span data-stu-id="e322a-190">0</span></span>|<span data-ttu-id="e322a-191">1</span><span class="sxs-lookup"><span data-stu-id="e322a-191">1</span></span>|  
  
 <span data-ttu-id="e322a-192">Id 行列に、<xref:System.Windows.Media.Matrix.ToString%2A>メソッドは、文字列の係数の代わりに"Id"を返します、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-192">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity" instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-193">次の例は、取得する方法を示します、<xref:System.Windows.Media.Matrix.Identity%2A>行列。</span><span class="sxs-lookup"><span data-stu-id="e322a-193">The following example shows how to retrieve the <xref:System.Windows.Media.Matrix.Identity%2A> matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e322a-194">この <see cref="T:System.Windows.Media.Matrix" /> 構造体を反転します。</span><span class="sxs-lookup"><span data-stu-id="e322a-194">Inverts this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-195">次の例は、場合、<xref:System.Windows.Media.Matrix>構造が反転できます。</span><span class="sxs-lookup"><span data-stu-id="e322a-195">The following example checks if a <xref:System.Windows.Media.Matrix> structure is invertible.</span></span> <span data-ttu-id="e322a-196">反転できる場合、<xref:System.Windows.Media.Matrix>構造体を反転します。</span><span class="sxs-lookup"><span data-stu-id="e322a-196">If it is invertible, the <xref:System.Windows.Media.Matrix> structure is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e322a-197"><see cref="T:System.Windows.Media.Matrix" /> 構造体は反転できません。</span><span class="sxs-lookup"><span data-stu-id="e322a-197">The <see cref="T:System.Windows.Media.Matrix" /> structure is not invertible.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-198">この <see cref="T:System.Windows.Media.Matrix" /> 構造体が恒等行列かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e322a-198">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix.</span></span></summary>
        <value>
          <span data-ttu-id="e322a-199"><see cref="T:System.Windows.Media.Matrix" /> 構造体が恒等行列の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-199"><see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e322a-200">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e322a-200">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-201">Id 行列係数 [1, 1]、[2, 2] [3, 3] で、値 1 では、係数の残りの部分では 0 の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-201">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="e322a-202">設定に関連しているこの<xref:System.Windows.Media.Matrix.M11%2A>と<xref:System.Windows.Media.Matrix.M22%2A>1 と<xref:System.Windows.Media.Matrix.M12%2A>、 <xref:System.Windows.Media.Matrix.M21%2A>、 <xref:System.Windows.Media.Matrix.OffsetX%2A>、および<xref:System.Windows.Media.Matrix.OffsetY%2A>を 0 にします。</span><span class="sxs-lookup"><span data-stu-id="e322a-202">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="e322a-203">アフィン行列では、実装を[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]を使用して、<xref:System.Windows.Media.Matrix>構造体、係数 [3, 1]、[3, 2]、[3.3] 0,0,1 の値をそれぞれ保持するには暗黙的に指定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-203">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="e322a-204">1</span><span class="sxs-lookup"><span data-stu-id="e322a-204">1</span></span>|<span data-ttu-id="e322a-205">0</span><span class="sxs-lookup"><span data-stu-id="e322a-205">0</span></span>|<span data-ttu-id="e322a-206">0</span><span class="sxs-lookup"><span data-stu-id="e322a-206">0</span></span>|  
|<span data-ttu-id="e322a-207">0</span><span class="sxs-lookup"><span data-stu-id="e322a-207">0</span></span>|<span data-ttu-id="e322a-208">1</span><span class="sxs-lookup"><span data-stu-id="e322a-208">1</span></span>|<span data-ttu-id="e322a-209">0</span><span class="sxs-lookup"><span data-stu-id="e322a-209">0</span></span>|  
|<span data-ttu-id="e322a-210">0</span><span class="sxs-lookup"><span data-stu-id="e322a-210">0</span></span>|<span data-ttu-id="e322a-211">0</span><span class="sxs-lookup"><span data-stu-id="e322a-211">0</span></span>|<span data-ttu-id="e322a-212">1</span><span class="sxs-lookup"><span data-stu-id="e322a-212">1</span></span>|  
  
 <span data-ttu-id="e322a-213">Id 行列に、<xref:System.Windows.Media.Matrix.ToString%2A>メソッドは、文字列""、係数ではなくの Id を返します、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-213">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
      </Docs>
    </Member>
    <Member MemberName="M11">
      <MemberSignature Language="C#" Value="public double M11 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M11" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M11" />
      <MemberSignature Language="VB.NET" Value="Public Property M11 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M11 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-214">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 1 行、第 1 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-214">Gets or sets the value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="e322a-215">この <see cref="T:System.Windows.Media.Matrix" /> の第 1 行、第 1 列の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-215">The value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="e322a-216">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="e322a-216">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-217">次の例は、2 を乗算する方法を示しています。<xref:System.Windows.Media.Matrix>に値を代入する方法と構造体、 <xref:System.Windows.Media.Matrix> 、宣言されているとき、および構造体を宣言します。</span><span class="sxs-lookup"><span data-stu-id="e322a-217">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M12">
      <MemberSignature Language="C#" Value="public double M12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M12" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M12" />
      <MemberSignature Language="VB.NET" Value="Public Property M12 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M12 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-218">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 1 行、第 2 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-218">Gets or sets the value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="e322a-219">この <see cref="T:System.Windows.Media.Matrix" /> の第 1 行、第 2 列の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-219">The value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="e322a-220">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="e322a-220">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-221">次の表のレイアウト、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-221">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="e322a-222">0</span><span class="sxs-lookup"><span data-stu-id="e322a-222">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="e322a-223">0</span><span class="sxs-lookup"><span data-stu-id="e322a-223">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="e322a-224">1</span><span class="sxs-lookup"><span data-stu-id="e322a-224">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e322a-225">次の例は、2 を乗算する方法を示しています。<xref:System.Windows.Media.Matrix>に値を代入する方法と構造体、 <xref:System.Windows.Media.Matrix> 、宣言されているとき、および構造体を宣言します。</span><span class="sxs-lookup"><span data-stu-id="e322a-225">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M21">
      <MemberSignature Language="C#" Value="public double M21 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M21" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M21" />
      <MemberSignature Language="VB.NET" Value="Public Property M21 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M21 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-226">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 2 行、第 1 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-226">Gets or sets the value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="e322a-227">この <see cref="T:System.Windows.Media.Matrix" /> の第 2 行、第 1 列の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-227">The value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="e322a-228">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="e322a-228">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-229">次の表のレイアウト、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-229">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="e322a-230">0</span><span class="sxs-lookup"><span data-stu-id="e322a-230">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="e322a-231">0</span><span class="sxs-lookup"><span data-stu-id="e322a-231">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="e322a-232">1</span><span class="sxs-lookup"><span data-stu-id="e322a-232">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e322a-233">次の例は、2 を乗算する方法を示しています。<xref:System.Windows.Media.Matrix>に値を代入する方法と構造体、 <xref:System.Windows.Media.Matrix> 、宣言されているとき、および構造体を宣言します。</span><span class="sxs-lookup"><span data-stu-id="e322a-233">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M22">
      <MemberSignature Language="C#" Value="public double M22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M22" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M22" />
      <MemberSignature Language="VB.NET" Value="Public Property M22 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M22 { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-234">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 2 行、第 2 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-234">Gets or sets the value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="e322a-235">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 2 行、第 2 列の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-235">The value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="e322a-236">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="e322a-236">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-237">次の表のレイアウト、<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-237">The following table shows the layout of a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="e322a-238">0</span><span class="sxs-lookup"><span data-stu-id="e322a-238">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="e322a-239">0</span><span class="sxs-lookup"><span data-stu-id="e322a-239">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="e322a-240">1</span><span class="sxs-lookup"><span data-stu-id="e322a-240">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e322a-241">次の例は、2 を乗算する方法を示しています。<xref:System.Windows.Media.Matrix>に値を代入する方法と構造体、 <xref:System.Windows.Media.Matrix> 、宣言されているとき、および構造体を宣言します。</span><span class="sxs-lookup"><span data-stu-id="e322a-241">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Multiply(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1"><span data-ttu-id="e322a-242">最初に乗算する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-242">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <param name="trans2"><span data-ttu-id="e322a-243">2 番目に乗算する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-243">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <summary><span data-ttu-id="e322a-244"><see cref="T:System.Windows.Media.Matrix" /> 構造体に別の <see cref="T:System.Windows.Media.Matrix" /> 構造体を乗算します。</span><span class="sxs-lookup"><span data-stu-id="e322a-244">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="e322a-245"><paramref name="trans1" /> と <paramref name="trans2" /> を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="e322a-245">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-246">行列乗算は可換ではありません。</span><span class="sxs-lookup"><span data-stu-id="e322a-246">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="e322a-247">乗算`trans1`によって`trans2`を乗算することと同じではない`trans2`によって`trans1`です。</span><span class="sxs-lookup"><span data-stu-id="e322a-247">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-248">次の例は、2 を乗算する方法を示しています。<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-248">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public double OffsetX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetX { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-249">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 1 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-249">Gets or sets the value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="e322a-250">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 1 列の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-250">The value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="e322a-251">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="e322a-251">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-252"><xref:System.Windows.Media.Matrix.OffsetX%2A>プロパティと呼ばれる x 軸に沿った座標領域を平行移動量を指定するためです。</span><span class="sxs-lookup"><span data-stu-id="e322a-252">The <xref:System.Windows.Media.Matrix.OffsetX%2A> property is so named because it specifies the amount to translate the coordinate space along the x-axis.</span></span>  
  
 <span data-ttu-id="e322a-253">次の表のレイアウト、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-253">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="e322a-254">0</span><span class="sxs-lookup"><span data-stu-id="e322a-254">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="e322a-255">0</span><span class="sxs-lookup"><span data-stu-id="e322a-255">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="e322a-256">1</span><span class="sxs-lookup"><span data-stu-id="e322a-256">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public double OffsetY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetY { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e322a-257">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 2 列の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-257">Gets or sets the value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="e322a-258">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の第 3 行、第 2 列の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-258">The value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="e322a-259">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="e322a-259">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-260"><xref:System.Windows.Media.Matrix.OffsetY%2A>プロパティと呼ばれる、y 軸に沿った座標領域を平行移動量を指定するためです。</span><span class="sxs-lookup"><span data-stu-id="e322a-260">The <xref:System.Windows.Media.Matrix.OffsetY%2A> property is so named because it specifies the amount to translate the coordinate space along the y-axis.</span></span>  
  
 <span data-ttu-id="e322a-261">次の表のレイアウト、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-261">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="e322a-262">0</span><span class="sxs-lookup"><span data-stu-id="e322a-262">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="e322a-263">0</span><span class="sxs-lookup"><span data-stu-id="e322a-263">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="e322a-264">1</span><span class="sxs-lookup"><span data-stu-id="e322a-264">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="e322a-265">比較する最初の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-265">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="e322a-266">比較する 2 番目の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-266">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="e322a-267">指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e322a-267">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span></span></summary>
        <returns>
          <span data-ttu-id="e322a-268"><paramref name="matrix1" /> と <paramref name="matrix2" /> が同一である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-268"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e322a-269">A<xref:System.Windows.Media.Matrix>倍精度の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="e322a-269">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="e322a-270">の値、<xref:System.Double>算術演算子は、2 つの比較を実行時に、有効桁数を失うことができます<xref:System.Double>論理的に等価である構造体が失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e322a-270">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-271">次の例は、2 つをチェックする方法を示します<xref:System.Windows.Media.Matrix>構造が等しいかどうか。</span><span class="sxs-lookup"><span data-stu-id="e322a-271">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Media.Matrix.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="e322a-272">比較する最初の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-272">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="e322a-273">比較する 2 番目の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-273">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="e322a-274">指定した 2 つの <see cref="T:System.Windows.Media.Matrix" /> 構造体が異なるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e322a-274">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are not identical.</span></span></summary>
        <returns>
          <span data-ttu-id="e322a-275"><paramref name="matrix1" /> と <paramref name="matrix2" /> が異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-275"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are not identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e322a-276">A<xref:System.Windows.Media.Matrix>倍精度の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="e322a-276">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="e322a-277">の値、<xref:System.Double>算術演算子は、2 つの比較を実行時に、有効桁数を失うことができます<xref:System.Double>論理的に等価である構造体が失敗する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e322a-277">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-278">次の例は、2 つをチェックする方法を示します<xref:System.Windows.Media.Matrix>構造が等しいかどうか。</span><span class="sxs-lookup"><span data-stu-id="e322a-278">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix operator * (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Matrix op_Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix operator *(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1"><span data-ttu-id="e322a-279">最初に乗算する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-279">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <param name="trans2"><span data-ttu-id="e322a-280">2 番目に乗算する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-280">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <summary><span data-ttu-id="e322a-281"><see cref="T:System.Windows.Media.Matrix" /> 構造体に別の <see cref="T:System.Windows.Media.Matrix" /> 構造体を乗算します。</span><span class="sxs-lookup"><span data-stu-id="e322a-281">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="e322a-282"><paramref name="trans1" /> と <paramref name="trans2" /> を乗算した結果。</span><span class="sxs-lookup"><span data-stu-id="e322a-282">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-283">行列乗算は可換ではありません。</span><span class="sxs-lookup"><span data-stu-id="e322a-283">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="e322a-284">乗算`trans1`によって`trans2`を乗算することと同じではない`trans2`によって`trans1`です。</span><span class="sxs-lookup"><span data-stu-id="e322a-284">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-285">次の例は、2 を乗算する方法を示しています。<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-285">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Parse(System::String ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="e322a-286">行列の <see cref="T:System.String" /> 表現。</span><span class="sxs-lookup"><span data-stu-id="e322a-286">The <see cref="T:System.String" /> representation of the matrix.</span></span></param>
        <summary><span data-ttu-id="e322a-287">行列の <see cref="T:System.String" /> 表現を、等価の <see cref="T:System.Windows.Media.Matrix" /> 構造体に変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-287">Converts a <see cref="T:System.String" /> representation of a matrix into the equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="e322a-288">等価の <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-288">The equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-289">次の例に行列の文字列形式に変換する方法を示しています、<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-289">The following example shows how to convert a string representation of a matrix into a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixParseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixparseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public void Prepend (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Prepend(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepend(System::Windows::Media::Matrix matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="e322a-290">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加する <see cref="T:System.Windows.Media.Matrix" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-290">The <see cref="T:System.Windows.Media.Matrix" /> structure to prepend to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></param>
        <summary><span data-ttu-id="e322a-291">指定した <see cref="T:System.Windows.Media.Matrix" /> 構造体をこの <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-291">Prepends the specified <see cref="T:System.Windows.Media.Matrix" /> structure onto this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-292">この操作は、パラメーターを乗算することと同じ`matrix`この<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-292">This operation is the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure.</span></span> <span data-ttu-id="e322a-293">行列の乗算は可換性ただし、この操作は、これを乗算することと同じではないため<xref:System.Windows.Media.Matrix>パラメーターで構造`matrix`です。 つまり、 `matrix` * これはこれと同じ *`matrix`です。</span><span class="sxs-lookup"><span data-stu-id="e322a-293">Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`; that is, `matrix` * this is not the same as this * `matrix`.</span></span>  
  
 <span data-ttu-id="e322a-294">複合変換では、個々 の変換の順序が重要です。</span><span class="sxs-lookup"><span data-stu-id="e322a-294">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="e322a-295">など、回転、まずしてから、スケール、変換、最初に変換する場合、回転し、スケールよりも異なる結果が得です。</span><span class="sxs-lookup"><span data-stu-id="e322a-295">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="e322a-296">順序は重要な理由の 1 つは、座標系の原点を基準の回転とスケーリングのような変換を行うことです。</span><span class="sxs-lookup"><span data-stu-id="e322a-296">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="e322a-297">原点を中心とするオブジェクトをスケーリングすると、原点から離れているオブジェクトをスケーリング異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-297">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="e322a-298">同様に、原点を中心とするオブジェクトを回転させるには、原点から離れているオブジェクトを回転異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-298">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-299">次の例は、前に付加する方法を示しています、<xref:System.Windows.Media.Matrix>別に<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-299">The following example shows how to prepend a <xref:System.Windows.Media.Matrix> onto another <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double angle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="e322a-300">回転角度。</span><span class="sxs-lookup"><span data-stu-id="e322a-300">The angle of rotation.</span></span></param>
        <summary><span data-ttu-id="e322a-301">この <see cref="T:System.Windows.Media.Matrix" /> 構造体の原点を中心とする指定した角度の回転を適用します。</span><span class="sxs-lookup"><span data-stu-id="e322a-301">Applies a rotation of the specified angle about the origin of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-302">次の例を回転させる方法を示しています、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-302">The following example shows how to rotate a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(double angle, double centerX, double centerY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="e322a-303">この行列を回転する角度。</span><span class="sxs-lookup"><span data-stu-id="e322a-303">The angle, in degrees, by which to rotate this matrix.</span></span></param>
        <param name="centerX"><span data-ttu-id="e322a-304">この行列の回転の中心とする点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="e322a-304">The x-coordinate of the point about which to rotate this matrix.</span></span></param>
        <param name="centerY"><span data-ttu-id="e322a-305">この行列の回転の中心とする点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="e322a-305">The y-coordinate of the point about which to rotate this matrix.</span></span></param>
        <summary><span data-ttu-id="e322a-306">指定した点を中心にこの行列を回転します。</span><span class="sxs-lookup"><span data-stu-id="e322a-306">Rotates this matrix about the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-307">次の例を回転させる方法を示しています、<xref:System.Windows.Media.Matrix>指定した点です。</span><span class="sxs-lookup"><span data-stu-id="e322a-307">The following example shows how to rotate a <xref:System.Windows.Media.Matrix> about a specified point.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAtPrepend">
      <MemberSignature Language="C#" Value="public void RotateAtPrepend (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAtPrepend(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAtPrepend (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAtPrepend(double angle, double centerX, double centerY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="e322a-308">回転角度。</span><span class="sxs-lookup"><span data-stu-id="e322a-308">The rotation angle, in degrees.</span></span></param>
        <param name="centerX"><span data-ttu-id="e322a-309">回転の中心の x 座標。</span><span class="sxs-lookup"><span data-stu-id="e322a-309">The x-coordinate of the rotation center.</span></span></param>
        <param name="centerY"><span data-ttu-id="e322a-310">回転の中心の y 座標。</span><span class="sxs-lookup"><span data-stu-id="e322a-310">The y-coordinate of the rotation center.</span></span></param>
        <summary><span data-ttu-id="e322a-311">指定した点における指定した角度の回転を、この <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-311">Prepends a rotation of the specified angle at the specified point to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-312">複合変換では、個々 の変換の順序が重要です。</span><span class="sxs-lookup"><span data-stu-id="e322a-312">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="e322a-313">など、回転、まずしてから、スケール、変換、最初に変換する場合、回転し、スケールよりも異なる結果が得です。</span><span class="sxs-lookup"><span data-stu-id="e322a-313">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="e322a-314">順序は重要な理由の 1 つは、座標系の原点を基準の回転とスケーリングのような変換を行うことです。</span><span class="sxs-lookup"><span data-stu-id="e322a-314">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="e322a-315">原点を中心とするオブジェクトをスケーリングすると、原点から離れているオブジェクトをスケーリング異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-315">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="e322a-316">同様に、原点を中心とするオブジェクトを回転させるには、原点から離れているオブジェクトを回転異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-316">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-317">次の例は、回転をする方法を示しています、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-317">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatePrepend">
      <MemberSignature Language="C#" Value="public void RotatePrepend (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotatePrepend(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotatePrepend (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotatePrepend(double angle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="e322a-318">前に付加する回転角度。</span><span class="sxs-lookup"><span data-stu-id="e322a-318">The angle of rotation to prepend.</span></span></param>
        <summary><span data-ttu-id="e322a-319">指定した角度の回転を、この <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-319">Prepends a rotation of the specified angle to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-320">複合変換では、個々 の変換の順序が重要です。</span><span class="sxs-lookup"><span data-stu-id="e322a-320">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="e322a-321">など、回転、まずしてから、スケール、変換、最初に変換する場合、回転し、スケールよりも異なる結果が得です。</span><span class="sxs-lookup"><span data-stu-id="e322a-321">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="e322a-322">順序は重要な理由の 1 つは、座標系の原点を基準の回転とスケーリングのような変換を行うことです。</span><span class="sxs-lookup"><span data-stu-id="e322a-322">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="e322a-323">原点を中心とするオブジェクトをスケーリングすると、原点から離れているオブジェクトをスケーリング異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-323">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="e322a-324">同様に、原点を中心とするオブジェクトを回転させるには、原点から離れているオブジェクトを回転異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-324">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-325">次の例は、回転をする方法を示しています、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-325">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="e322a-326">この <see cref="T:System.Windows.Media.Matrix" /> を x 軸に沿ってスケーリングする際に使用する値。</span><span class="sxs-lookup"><span data-stu-id="e322a-326">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="e322a-327">この <see cref="T:System.Windows.Media.Matrix" /> を y 軸に沿ってスケーリングする際に使用する値。</span><span class="sxs-lookup"><span data-stu-id="e322a-327">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="e322a-328">指定したスケールのベクターを <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-328">Appends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-329">次の例をスケーリングする方法を示しています、<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-329">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleAt">
      <MemberSignature Language="C#" Value="public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAt(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAt (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAt(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="e322a-330">この <see cref="T:System.Windows.Media.Matrix" /> を x 軸に沿ってスケーリングする量。</span><span class="sxs-lookup"><span data-stu-id="e322a-330">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="e322a-331">この <see cref="T:System.Windows.Media.Matrix" /> を y 軸に沿ってスケーリングする量。</span><span class="sxs-lookup"><span data-stu-id="e322a-331">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <param name="centerX"><span data-ttu-id="e322a-332">スケーリング操作の中心点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="e322a-332">The x-coordinate of the scale operation's center point.</span></span></param>
        <param name="centerY"><span data-ttu-id="e322a-333">スケーリング操作の中心点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="e322a-333">The y-coordinate of the scale operation's center point.</span></span></param>
        <summary><span data-ttu-id="e322a-334">この <see cref="T:System.Windows.Media.Matrix" /> を、指定した点を中心として指定した量だけスケーリングします。</span><span class="sxs-lookup"><span data-stu-id="e322a-334">Scales this <see cref="T:System.Windows.Media.Matrix" /> by the specified amount about the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-335">次の例をスケーリングする方法を示しています、<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-335">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleAtPrepend">
      <MemberSignature Language="C#" Value="public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAtPrepend(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAtPrepend (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAtPrepend(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="e322a-336">x 軸のスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="e322a-336">The x-axis scale factor.</span></span></param>
        <param name="scaleY"><span data-ttu-id="e322a-337">y 軸のスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="e322a-337">The y-axis scale factor.</span></span></param>
        <param name="centerX"><span data-ttu-id="e322a-338">スケーリング操作が実行される点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="e322a-338">The x-coordinate of the point about which the scale operation is performed.</span></span></param>
        <param name="centerY"><span data-ttu-id="e322a-339">スケーリング操作が実行される点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="e322a-339">The y-coordinate of the point about which the scale operation is performed.</span></span></param>
        <summary><span data-ttu-id="e322a-340">この <see cref="T:System.Windows.Media.Matrix" /> の指定した点を中心とする指定したスケールを前に付加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-340">Prepends the specified scale about the specified point of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-341">複合変換では、個々 の変換の順序が重要です。</span><span class="sxs-lookup"><span data-stu-id="e322a-341">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="e322a-342">など、回転、まずしてから、スケール、変換、最初に変換する場合、回転し、スケールよりも異なる結果が得です。</span><span class="sxs-lookup"><span data-stu-id="e322a-342">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="e322a-343">順序は重要な理由の 1 つは、座標系の原点を基準の回転とスケーリングのような変換を行うことです。</span><span class="sxs-lookup"><span data-stu-id="e322a-343">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="e322a-344">原点を中心とするオブジェクトをスケーリングすると、原点から離れているオブジェクトをスケーリング異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-344">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="e322a-345">同様に、原点を中心とするオブジェクトを回転させるには、原点から離れているオブジェクトを回転異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-345">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-346">次の例は、スケールをする方法を示しています、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-346">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalePrepend">
      <MemberSignature Language="C#" Value="public void ScalePrepend (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScalePrepend(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScalePrepend (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScalePrepend(double scaleX, double scaleY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="e322a-347">この <see cref="T:System.Windows.Media.Matrix" /> 構造体を x 軸に沿ってスケーリングする際に使用する値。</span><span class="sxs-lookup"><span data-stu-id="e322a-347">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="e322a-348">この <see cref="T:System.Windows.Media.Matrix" /> 構造体を y 軸に沿ってスケーリングする際に使用する値。</span><span class="sxs-lookup"><span data-stu-id="e322a-348">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the y-axis.</span></span></param>
        <summary><span data-ttu-id="e322a-349">指定したスケールのベクターをこの <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-349">Prepends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-350">複合変換では、個々 の変換の順序が重要です。</span><span class="sxs-lookup"><span data-stu-id="e322a-350">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="e322a-351">など、回転、まずしてから、スケール、変換、最初に変換する場合、回転し、スケールよりも異なる結果が得です。</span><span class="sxs-lookup"><span data-stu-id="e322a-351">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="e322a-352">順序は重要な理由の 1 つは、座標系の原点を基準の回転とスケーリングのような変換を行うことです。</span><span class="sxs-lookup"><span data-stu-id="e322a-352">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="e322a-353">原点を中心とするオブジェクトをスケーリングすると、原点から離れているオブジェクトをスケーリング異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-353">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="e322a-354">同様に、原点を中心とするオブジェクトを回転させるには、原点から離れているオブジェクトを回転異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-354">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-355">次の例は、スケールをする方法を示しています、<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-355">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SetIdentity">
      <MemberSignature Language="C#" Value="public void SetIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SetIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIdentity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIdentity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e322a-356">この <see cref="T:System.Windows.Media.Matrix" /> 構造体を恒等行列に変更します。</span><span class="sxs-lookup"><span data-stu-id="e322a-356">Changes this <see cref="T:System.Windows.Media.Matrix" /> structure into an identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-357">Id 行列係数 [1, 1]、[2, 2] [3, 3] で、値 1 では、係数の残りの部分では 0 の値。</span><span class="sxs-lookup"><span data-stu-id="e322a-357">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="e322a-358">設定に関連しているこの<xref:System.Windows.Media.Matrix.M11%2A>と<xref:System.Windows.Media.Matrix.M22%2A>1 と<xref:System.Windows.Media.Matrix.M12%2A>、 <xref:System.Windows.Media.Matrix.M21%2A>、 <xref:System.Windows.Media.Matrix.OffsetX%2A>、および<xref:System.Windows.Media.Matrix.OffsetY%2A>を 0 にします。</span><span class="sxs-lookup"><span data-stu-id="e322a-358">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="e322a-359">アフィン行列では、実装を[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]を使用して、<xref:System.Windows.Media.Matrix>構造体、係数 [3, 1]、[3, 2]、[3.3] 0,0,1 の値をそれぞれ保持するには暗黙的に指定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-359">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="e322a-360">1</span><span class="sxs-lookup"><span data-stu-id="e322a-360">1</span></span>|<span data-ttu-id="e322a-361">0</span><span class="sxs-lookup"><span data-stu-id="e322a-361">0</span></span>|<span data-ttu-id="e322a-362">0</span><span class="sxs-lookup"><span data-stu-id="e322a-362">0</span></span>|  
|<span data-ttu-id="e322a-363">0</span><span class="sxs-lookup"><span data-stu-id="e322a-363">0</span></span>|<span data-ttu-id="e322a-364">1</span><span class="sxs-lookup"><span data-stu-id="e322a-364">1</span></span>|<span data-ttu-id="e322a-365">0</span><span class="sxs-lookup"><span data-stu-id="e322a-365">0</span></span>|  
|<span data-ttu-id="e322a-366">0</span><span class="sxs-lookup"><span data-stu-id="e322a-366">0</span></span>|<span data-ttu-id="e322a-367">0</span><span class="sxs-lookup"><span data-stu-id="e322a-367">0</span></span>|<span data-ttu-id="e322a-368">1</span><span class="sxs-lookup"><span data-stu-id="e322a-368">1</span></span>|  
  
 <span data-ttu-id="e322a-369">Id 行列に、<xref:System.Windows.Media.Matrix.ToString%2A>メソッドは、文字列""、係数ではなくの Id を返します、<xref:System.Windows.Media.Matrix>です。</span><span class="sxs-lookup"><span data-stu-id="e322a-369">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-370">次の例は、オンにする方法を示しています、<xref:System.Windows.Media.Matrix>単位行列に構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-370">The following example shows how to turn a <xref:System.Windows.Media.Matrix> structure into an identity matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Skew">
      <MemberSignature Language="C#" Value="public void Skew (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Skew(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Skew (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Skew(double skewX, double skewY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX"><span data-ttu-id="e322a-371">この <see cref="T:System.Windows.Media.Matrix" /> を傾斜させる際の x 次元の角度。</span><span class="sxs-lookup"><span data-stu-id="e322a-371">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <param name="skewY"><span data-ttu-id="e322a-372">この <see cref="T:System.Windows.Media.Matrix" /> を傾斜させる際の y 次元の角度。</span><span class="sxs-lookup"><span data-stu-id="e322a-372">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="e322a-373">x 次元と y 次元の指定した角度の傾斜を、この <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-373">Appends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-374">この例では、傾斜、<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-374">This example shows how to skew a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SkewPrepend">
      <MemberSignature Language="C#" Value="public void SkewPrepend (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkewPrepend(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkewPrepend (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkewPrepend(double skewX, double skewY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX"><span data-ttu-id="e322a-375">この <see cref="T:System.Windows.Media.Matrix" /> を傾斜させる際の x 次元の角度。</span><span class="sxs-lookup"><span data-stu-id="e322a-375">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <param name="skewY"><span data-ttu-id="e322a-376">この <see cref="T:System.Windows.Media.Matrix" /> を傾斜させる際の y 次元の角度。</span><span class="sxs-lookup"><span data-stu-id="e322a-376">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="e322a-377">x 次元と y 次元の指定した角度の傾斜を、この <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-377">Prepends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-378">複合変換では、個々 の変換の順序が重要です。</span><span class="sxs-lookup"><span data-stu-id="e322a-378">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="e322a-379">など、回転、まずしてから、スケール、変換、最初に変換する場合、回転し、スケールよりも異なる結果が得です。</span><span class="sxs-lookup"><span data-stu-id="e322a-379">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="e322a-380">順序は重要な理由の 1 つは、座標系の原点を基準の回転とスケーリングのような変換を行うことです。</span><span class="sxs-lookup"><span data-stu-id="e322a-380">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="e322a-381">原点を中心とするオブジェクトをスケーリングすると、原点から離れているオブジェクトをスケーリング異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-381">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="e322a-382">同様に、原点を中心とするオブジェクトを回転させるには、原点から離れているオブジェクトを回転異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-382">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-383">この例にずれを付加する方法を示しています、<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-383">This example shows how to prepend a skew to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e322a-384">使用する書式。</span><span class="sxs-lookup"><span data-stu-id="e322a-384">The format to use.</span></span>  
  
 <span data-ttu-id="e322a-385">- または -</span><span class="sxs-lookup"><span data-stu-id="e322a-385">-or-</span></span>  
  
 <span data-ttu-id="e322a-386"><see cref="T:System.IFormattable" /> 実装の型に対して定義されている既定の書式を使用する場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="e322a-386">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="e322a-387">値を書式設定するために使用するプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="e322a-387">The provider to use to format the value.</span></span>  
  
 <span data-ttu-id="e322a-388">- または -</span><span class="sxs-lookup"><span data-stu-id="e322a-388">-or-</span></span>  
  
 <span data-ttu-id="e322a-389">オペレーティング システムの現在のロケール設定から数値書式情報を取得する場合は、null 参照 (Visual Basic の場合は <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="e322a-389">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="e322a-390">指定された書式を使用して現在のインスタンスの値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="e322a-390">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="e322a-391">指定された書式の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="e322a-391">The value of the current instance in the specified format.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e322a-392">この <see cref="T:System.String" /> 構造体の <see cref="T:System.Windows.Media.Matrix" /> 表現を作成します。</span><span class="sxs-lookup"><span data-stu-id="e322a-392">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-393">この場合<xref:System.Windows.Media.Matrix>構造体は、行列、文字列"Identity"が返されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-393">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e322a-394">この <see cref="T:System.String" /> 構造体の <see cref="T:System.Windows.Media.Matrix" /> 表現を作成します。</span><span class="sxs-lookup"><span data-stu-id="e322a-394">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="e322a-395">この <see cref="T:System.String" /> の <see cref="P:System.Windows.Media.Matrix.M11" />、<see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、および <see cref="P:System.Windows.Media.Matrix.OffsetY" /> の各値を格納する <see cref="T:System.Windows.Media.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-395">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-396">この場合<xref:System.Windows.Media.Matrix>は、<xref:System.Windows.Media.Matrix.Identity%2A>マトリックス、"Identity"が返される文字列。</span><span class="sxs-lookup"><span data-stu-id="e322a-396">If this <xref:System.Windows.Media.Matrix> is an <xref:System.Windows.Media.Matrix.Identity%2A> matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="e322a-397">カルチャ固有の書式設定情報。</span><span class="sxs-lookup"><span data-stu-id="e322a-397">The culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="e322a-398">カルチャ固有の書式設定情報を使用して、この <see cref="T:System.String" /> 構造体の <see cref="T:System.Windows.Media.Matrix" /> 表現を作成します。</span><span class="sxs-lookup"><span data-stu-id="e322a-398">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure with culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="e322a-399">この <see cref="T:System.String" /> の <see cref="P:System.Windows.Media.Matrix.M11" />、<see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、および <see cref="P:System.Windows.Media.Matrix.OffsetY" /> の各値を格納する <see cref="T:System.Windows.Media.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="e322a-399">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-400">この場合<xref:System.Windows.Media.Matrix>構造体は、行列、文字列"Identity"が返されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-400">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e322a-401">指定した点、点の配列、ベクター、またはベクターの配列を、この <see cref="T:System.Windows.Media.Matrix" /> で変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-401">Transforms the specified point, array of points, vector, or array of vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-402">次の例を使用する方法を示しています、<xref:System.Windows.Media.Matrix>ポイントやベクトルを変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-402">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Point Transform (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point Transform(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point Transform(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="e322a-403">変換する点。</span><span class="sxs-lookup"><span data-stu-id="e322a-403">The point to transform.</span></span></param>
        <summary><span data-ttu-id="e322a-404">指定した点を <see cref="T:System.Windows.Media.Matrix" /> で変換し、その結果を返します。</span><span class="sxs-lookup"><span data-stu-id="e322a-404">Transforms the specified point by the <see cref="T:System.Windows.Media.Matrix" /> and returns the result.</span></span></summary>
        <returns><span data-ttu-id="e322a-405">この <see cref="T:System.Windows.Media.Matrix" /> によって <paramref name="point" /> を変換した結果。</span><span class="sxs-lookup"><span data-stu-id="e322a-405">The result of transforming <paramref name="point" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-406">次の例を使用する方法を示しています、<xref:System.Windows.Media.Matrix>ポイントやベクトルを変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-406">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="e322a-407">変換対象の点。</span><span class="sxs-lookup"><span data-stu-id="e322a-407">The points to transform.</span></span> <span data-ttu-id="e322a-408">配列内の元の点は、変換後の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="e322a-408">The original points in the array are replaced by their transformed values.</span></span></param>
        <summary><span data-ttu-id="e322a-409">指定した点をこの <see cref="T:System.Windows.Media.Matrix" /> で変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-409">Transforms the specified points by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-410">次の例を使用する方法を示しています、<xref:System.Windows.Media.Matrix>ポイントやベクトルを変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-410">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Transform (System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Vector Transform(valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Vector Transform(System::Windows::Vector vector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector"><span data-ttu-id="e322a-411">変換するベクトル。</span><span class="sxs-lookup"><span data-stu-id="e322a-411">The vector to transform.</span></span></param>
        <summary><span data-ttu-id="e322a-412">指定したベクターをこの <see cref="T:System.Windows.Media.Matrix" /> で変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-412">Transforms the specified vector by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="e322a-413">この <see cref="T:System.Windows.Media.Matrix" /> によって <paramref name="vector" /> を変換した結果。</span><span class="sxs-lookup"><span data-stu-id="e322a-413">The result of transforming <paramref name="vector" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-414">次の例を使用する方法を示しています、<xref:System.Windows.Media.Matrix>ポイントやベクトルを変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-414">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Vector[] vectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Vector[] vectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (vectors As Vector())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Vector&gt; ^ vectors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vectors" Type="System.Windows.Vector[]" />
      </Parameters>
      <Docs>
        <param name="vectors"><span data-ttu-id="e322a-415">変換するベクター。</span><span class="sxs-lookup"><span data-stu-id="e322a-415">The vectors to transform.</span></span> <span data-ttu-id="e322a-416">配列内の元のベクターは、変換後の値に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="e322a-416">The original vectors in the array are replaced by their transformed values.</span></span></param>
        <summary><span data-ttu-id="e322a-417">指定したベクターをこの <see cref="T:System.Windows.Media.Matrix" /> で変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-417">Transforms the specified vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-418">次の例を使用する方法を示しています、<xref:System.Windows.Media.Matrix>ポイントやベクトルを変換します。</span><span class="sxs-lookup"><span data-stu-id="e322a-418">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(double offsetX, double offsetY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="e322a-419">この <see cref="T:System.Windows.Media.Matrix" /> を x 軸に沿ってオフセットする量。</span><span class="sxs-lookup"><span data-stu-id="e322a-419">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="offsetY"><span data-ttu-id="e322a-420">この <see cref="T:System.Windows.Media.Matrix" /> を y 軸に沿ってオフセットする量。</span><span class="sxs-lookup"><span data-stu-id="e322a-420">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="e322a-421">指定したオフセットの変換をこの <see cref="T:System.Windows.Media.Matrix" /> 構造体に追加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-421">Appends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e322a-422">例を次に翻訳を追加する方法、<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-422">The following example shows how append a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="TranslatePrepend">
      <MemberSignature Language="C#" Value="public void TranslatePrepend (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslatePrepend(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslatePrepend (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslatePrepend(double offsetX, double offsetY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="e322a-423">この <see cref="T:System.Windows.Media.Matrix" /> を x 軸に沿ってオフセットする量。</span><span class="sxs-lookup"><span data-stu-id="e322a-423">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="offsetY"><span data-ttu-id="e322a-424">この <see cref="T:System.Windows.Media.Matrix" /> を y 軸に沿ってオフセットする量。</span><span class="sxs-lookup"><span data-stu-id="e322a-424">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="e322a-425">指定したオフセットの変換をこの <see cref="T:System.Windows.Media.Matrix" /> 構造体の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="e322a-425">Prepends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e322a-426">複合変換では、個々 の変換の順序が重要です。</span><span class="sxs-lookup"><span data-stu-id="e322a-426">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="e322a-427">など、回転、まずしてから、スケール、変換、最初に変換する場合、回転し、スケールよりも異なる結果が得です。</span><span class="sxs-lookup"><span data-stu-id="e322a-427">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="e322a-428">順序は重要な理由の 1 つは、座標系の原点を基準の回転とスケーリングのような変換を行うことです。</span><span class="sxs-lookup"><span data-stu-id="e322a-428">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="e322a-429">原点を中心とするオブジェクトをスケーリングすると、原点から離れているオブジェクトをスケーリング異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-429">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="e322a-430">同様に、原点を中心とするオブジェクトを回転させるには、原点から離れているオブジェクトを回転異なる結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="e322a-430">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e322a-431">例を次に上に翻訳を付加する方法、<xref:System.Windows.Media.Matrix>構造体。</span><span class="sxs-lookup"><span data-stu-id="e322a-431">The following example shows how prepend a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslatePrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>