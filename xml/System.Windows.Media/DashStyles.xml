<Type Name="DashStyles" FullName="System.Windows.Media.DashStyles">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61368fe6b8fb8a63411d0ca1d752295d4bf57110" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668106" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DashStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DashStyles extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DashStyles" />
  <TypeSignature Language="VB.NET" Value="Public Class DashStyles" />
  <TypeSignature Language="C++ CLI" Value="public ref class DashStyles abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定義済みの <see cref="T:System.Windows.Media.DashStyle" /> オブジェクトのセットを実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の図は、下線に適用される異なるダッシュ スタイルの例を示します。  
  
 ![いくつかの異なるダッシュ スタイルを示します。](~/add/media/graphicsdashstyles.gif "複数の異なるダッシュ スタイルを表示します。")  
  
<a name="xamlTextUsage_DashStyles"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用方法  
 このマネージ クラスを宣言することはできません[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]、内の値を割り当てるな静的プロパティを使用することができますが、[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]です。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.DashStyle" />
  </Docs>
  <Members>
    <Member MemberName="Dash">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle Dash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle Dash" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.Dash" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Dash As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ Dash { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>2</c>, <c>2</c> に等しい <see cref="P:System.Windows.Media.DashStyle.Dashes" /> プロパティが設定された <see cref="T:System.Windows.Media.DashStyle" /> を取得します。</summary>
        <value>ペンの <see cref="P:System.Windows.Media.Pen.Thickness" /> の 2 倍の長さがあるダッシュを含み、その後に <see cref="P:System.Windows.Media.Pen.Thickness" /> の 2 倍の長さがあるスペースを含んだシーケンスを示す 2,2 の破線。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の図は、下線に適用される異なるダッシュ スタイルの例を示します。  
  
 ![いくつかの異なるダッシュ スタイルを示します。](~/add/media/graphicsdashstyles.gif "複数の異なるダッシュ スタイルを表示します。")  
  
<a name="xamlAttributeUsage_Dash"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*object* *property* ="{ `DashStyles.Dash`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DashDot">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle DashDot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle DashDot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.DashDot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DashDot As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ DashDot { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>2</c>, <c>2</c>, <c>0</c>, <c>2</c> に等しい <see cref="P:System.Windows.Media.DashStyle.Dashes" /> プロパティが設定された <see cref="T:System.Windows.Media.DashStyle" /> を取得します。</summary>
        <value>破線<c>2</c>、 <c>2</c>、 <c>0</c>、 <c>2</c>です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の図は、下線に適用される異なるダッシュ スタイルの例を示します。  
  
 ![いくつかの異なるダッシュ スタイルを示します。](~/add/media/graphicsdashstyles.gif "複数の異なるダッシュ スタイルを表示します。")  
  
<a name="xamlAttributeUsage_DashDot"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*object* *property* ="{ `DashStyles.DashDot`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DashDotDot">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle DashDotDot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle DashDotDot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.DashDotDot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DashDotDot As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ DashDotDot { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>2</c>, <c>2</c>, <c>0</c>, <c>2</c>, <c>0</c>, <c>2</c> に等しい <see cref="P:System.Windows.Media.DashStyle.Dashes" /> プロパティが設定された <see cref="T:System.Windows.Media.DashStyle" /> を取得します。</summary>
        <value>破線<c>2</c>、 <c>2</c>、 <c>0</c>、 <c>2</c>、 <c>0</c>、 <c>2</c>です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の図は、下線に適用される異なるダッシュ スタイルの例を示します。  
  
 ![いくつかの異なるダッシュ スタイルを示します。](~/add/media/graphicsdashstyles.gif "複数の異なるダッシュ スタイルを表示します。")  
  
<a name="xamlAttributeUsage_DashDotDot"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*object* *property* ="{ `DashStyles.DashDotDot`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dot">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle Dot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle Dot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.Dot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Dot As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ Dot { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>0</c>, <c>2</c> に等しい <see cref="P:System.Windows.Media.DashStyle.Dashes" /> プロパティが設定された <see cref="T:System.Windows.Media.DashStyle" /> を取得します。</summary>
        <value>破線<c>0</c>、 <c>2</c>です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の図は、下線に適用される異なるダッシュ スタイルの例を示します。  
  
 ![いくつかの異なるダッシュ スタイルを示します。](~/add/media/graphicsdashstyles.gif "複数の異なるダッシュ スタイルを表示します。")  
  
<a name="xamlAttributeUsage_Dot"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*object* *property* ="{ `DashStyles.Dot`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Solid">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DashStyle Solid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.DashStyle Solid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DashStyles.Solid" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Solid As DashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::DashStyle ^ Solid { System::Windows::Media::DashStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>空の <see cref="T:System.Windows.Media.DashStyle" /> プロパティが設定された <see cref="P:System.Windows.Media.DashStyle.Dashes" /> を取得します。</summary>
        <value>ダッシュを含まない破線。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、実線を生成し、dash シーケンスを定義しないと同じです。  
  
 次の図は、下線に適用される異なるダッシュ スタイルの例を示します。  
  
 ![いくつかの異なるダッシュ スタイルを示します。](~/add/media/graphicsdashstyles.gif "複数の異なるダッシュ スタイルを表示します。")  
  
<a name="xamlAttributeUsage_Solid"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 <*object* *property* ="{ `DashStyles.Solid`}"/>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>