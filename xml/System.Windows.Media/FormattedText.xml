<Type Name="FormattedText" FullName="System.Windows.Media.FormattedText">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b893a34823f131d7a5e8f16694ab42f4ed8c687b" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48672653" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormattedText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormattedText extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FormattedText" />
  <TypeSignature Language="VB.NET" Value="Public Class FormattedText" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormattedText" />
  <TypeSignature Language="F#" Value="type FormattedText = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Windows Presentation Foundation (WPF) アプリケーションでのテキストの描画に対する低レベルの制御を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.FormattedText>オブジェクトを使用すると、これで、テキスト内の各文字に個別に書式設定できます、複数行のテキストを描画します。 複数の書式が適用されたテキストを次の例に示します。  
  
 ![FormattedText オブジェクトを使用して表示されるテキスト](~/add/media/formattedtext01.jpg "FormattedText オブジェクトを使用して表示されるテキスト")  
書式設定されたテキスト文字列の例  
  
 テキストの特徴の観点から[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]、<xref:System.Windows.Media.FormattedText>グラフィック要素としてテキストを処理するために「低」は考慮します。 内のテキストの他の側面[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]は専用のテキスト コントロールのコンテキスト内のテキストを処理 (<xref:System.Windows.Controls.TextBlock>、 <xref:System.Windows.Controls.TextBox>)、フロー ドキュメント モデルを実装する (を参照してください[フロー ドキュメントの概要](~/docs/framework/wpf/advanced/flow-document-overview.md))、または、のサポート[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]ドキュメント モデル (を参照してください[WPF のドキュメント](~/docs/framework/wpf/advanced/documents-in-wpf.md))。  
  
 Setter メソッドの多く<xref:System.Windows.Media.FormattedText>でサポートされている添付プロパティとの類似点がある<xref:System.Windows.Documents.TextElement>が、<xref:System.Windows.Documents.TextElement>より高度なテキストに適用される添付プロパティ フローのいずれかをサポートまたは[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]します。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Media.FormattedText>オブジェクトし、テキストにいくつかの書式スタイルを適用します。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.GlyphRun" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="textToFormat">表示するテキスト。</param>
        <param name="culture">テキストの特定のカルチャ。</param>
        <param name="flowDirection">テキストを読み取る方向。</param>
        <param name="typeface">テキストの書式設定に使用するフォント ファミリ、太さ、スタイル、および伸縮。</param>
        <param name="emSize">テキストの書式設定に使用するフォント サイズ。</param>
        <param name="foreground">各グリフの塗りつぶしに使用するブラシ。</param>
        <summary>テキスト、カルチャ、フロー方向、タイプフェイス、フォント サイズ、およびブラシを指定して、<see cref="T:System.Windows.Media.FormattedText" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">表示するテキスト。</param>
        <param name="culture">テキストの特定のカルチャ。</param>
        <param name="flowDirection">テキストを読み取る方向。</param>
        <param name="typeface">テキストの書式設定に使用するフォント ファミリ、太さ、スタイル、および伸縮。</param>
        <param name="emSize">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する、テキストの em 単位のフォント サイズ。</param>
        <param name="foreground">各グリフの塗りつぶしに使用するブラシ。</param>
        <param name="pixelsPerDip">スケール ファクターに相当する、ピクセル密度に依存しないピクセルごとの値。 たとえば、画面の DPI が 120 (または 120/96 = 1.25 のため 1.25) の場合は、ピクセル密度に依存しない 1.25 ピクセルが描画されます。 DIP は、デバイスの解像度と DPI に依存しないように WPF が使用する測定単位です。</param>
        <summary>テキスト、カルチャ、フロー方向、タイプフェイス、フォント サイズ、前景ブラシ、および pixelsPerDip 値を指定して、<see cref="T:System.Windows.Media.FormattedText" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="textToFormat">表示するテキスト。</param>
        <param name="culture">テキストの特定のカルチャ。</param>
        <param name="flowDirection">テキストを読み取る方向。</param>
        <param name="typeface">テキストの書式設定に使用するフォント ファミリ、太さ、スタイル、および伸縮。</param>
        <param name="emSize">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する、テキストの em 単位のフォント サイズ。</param>
        <param name="foreground">各グリフの塗りつぶしに使用するブラシ。</param>
        <param name="numberSubstitution">テキストに適用する数字の置換動作。</param>
        <summary>テキスト、カルチャ、フロー方向、タイプフェイス、フォント サイズ、ブラシ、および数字の置換動作を指定して、<see cref="T:System.Windows.Media.FormattedText" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">表示するテキスト。</param>
        <param name="culture">テキストの特定のカルチャ。</param>
        <param name="flowDirection">テキストを読み取る方向。</param>
        <param name="typeface">テキストの書式設定に使用するフォント ファミリ、太さ、スタイル、および伸縮。</param>
        <param name="emSize">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する、テキストの em 単位のフォント サイズ。</param>
        <param name="foreground">各グリフの塗りつぶしに使用するブラシ。</param>
        <param name="numberSubstitution">
          <see cref="T:System.Windows.Media.NumberSubstitution" /> に基づき、テキスト内の数字を表示する方法を指定します。 この値は、<see langword="null" /> の場合もあります。</param>
        <param name="pixelsPerDip">スケール ファクターに相当する、ピクセル密度に依存しないピクセルごとの値。 たとえば、画面の DPI が 120 (または 120/96 = 1.25 のため 1.25) の場合は、ピクセル密度に依存しない 1.25 ピクセルが描画されます。 DIP は、デバイスの解像度と DPI に依存しないように WPF が使用する測定単位です。</param>
        <summary>テキスト、カルチャ、フロー方向、タイプフェイス、フォント サイズ、前景ブラシ、数字の置換動作、および pixelsPerDip 値を指定して、<see cref="T:System.Windows.Media.FormattedText" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * System.Windows.Media.TextFormattingMode -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, textFormattingMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
      </Parameters>
      <Docs>
        <param name="textToFormat">表示するテキスト。</param>
        <param name="culture">テキストの特定のカルチャ。</param>
        <param name="flowDirection">テキストを読み取る方向。</param>
        <param name="typeface">テキストの書式設定に使用するフォント ファミリ、太さ、スタイル、および伸縮。</param>
        <param name="emSize">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する、テキストの em 単位のフォント サイズ。</param>
        <param name="foreground">各グリフの塗りつぶしに使用するブラシ。</param>
        <param name="numberSubstitution">テキストに適用する数字の置換動作。</param>
        <param name="textFormattingMode">テキストに適用される <see cref="T:System.Windows.Media.TextFormattingMode" />。</param>
        <summary>指定されたテキスト、カルチャ、フロー方向、タイプフェイス、フォント サイズ、ブラシ、数字の置換動作、およびテキストの書式設定モードを使用して、<see cref="T:System.Windows.Media.FormattedText" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * System.Windows.Media.TextFormattingMode * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, textFormattingMode, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">表示するテキスト。</param>
        <param name="culture">テキストの特定のカルチャ。</param>
        <param name="flowDirection">テキストを読み取る方向。</param>
        <param name="typeface">テキストの書式設定に使用するフォント ファミリ、太さ、スタイル、および伸縮。</param>
        <param name="emSize">[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定する、テキストの em 単位のフォント サイズ。</param>
        <param name="foreground">各グリフの塗りつぶしに使用するブラシ。</param>
        <param name="numberSubstitution">
          <see cref="T:System.Windows.Media.NumberSubstitution" /> に基づき、テキスト内の数字を表示する方法を指定します。 この値は、<see langword="null" /> の場合もあります。</param>
        <param name="textFormattingMode">WPF のテキスト表示方法に影響を与える書式モード。</param>
        <param name="pixelsPerDip">スケール ファクターに相当する、ピクセル密度に依存しないピクセルごとの値。 たとえば、画面の DPI が 120 (または 120/96 = 1.25 のため 1.25) の場合は、ピクセル密度に依存しない 1.25 ピクセルが描画されます。 DIP は、デバイスの解像度と DPI に依存しないように WPF が使用する測定単位です。</param>
        <summary>テキスト、カルチャ、フロー方向、タイプフェイス、フォント サイズ、前景ブラシ、数字の置換動作、および pixelsPerDip 値を指定して、<see cref="T:System.Windows.Media.FormattedText" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double" Usage="System.Windows.Media.FormattedText.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクトの最初の行の上端から最初の行のベースラインまでの距離を取得します。</summary>
        <value>最初の行の上端から最初の行のベースラインまでの距離 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildGeometry(System::Windows::Point origin);" />
      <MemberSignature Language="F#" Value="member this.BuildGeometry : System.Windows.Point -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildGeometry origin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">結果として得られるジオメトリの左上の原点。</param>
        <summary>書式設定されたテキストを表す <see cref="T:System.Windows.Media.Geometry" /> オブジェクトを返します。グリフや文字装飾など、書式設定されたテキストはすべて対象となります。</summary>
        <returns>書式設定されたテキストの <see cref="T:System.Windows.Media.Geometry" /> オブジェクト表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキストを変換するときに、<xref:System.Windows.Media.Geometry>文字のコレクションでは不要になったオブジェクト-テキスト文字列内の文字を変更することはできません。 ただし、変換されたテキストのストロークおよび塗りつぶしのプロパティを変更することで、テキストの外観を変えることができます。  
  
 次の例では、変換されたテキストの塗りつぶし、ストロークを変更して視覚効果を作成するいくつかの方法を示します。  
  
 ![塗りつぶしとストロークに別の色とテキスト](~/add/media/outlinedtext03.jpg "塗りつぶしとストロークに別の色とテキスト")  
ストロークと塗りつぶしを別々の色に設定した例  
  
 ![ストロークに適用されるイメージ ブラシを含むテキスト](~/add/media/outlinedtext04.jpg "ストロークに適用されるイメージ ブラシを含むテキスト")  
ストロークに適用したイメージ ブラシの例  
  
 変換され、として表示されるテキストを<xref:System.Windows.Media.Geometry>オブジェクトと見えない場合同じとして直接表示されるテキスト。  
  
-   テキストに変換する<xref:System.Windows.Media.Geometry>オブジェクトは、ClearType を使用してレンダリングされません。 さらに、変換後の基準は全体のディスプレイのピクセルにスナップ化されていません。  
  
-   本文のテキストでよく使用されるものなどの小さいフォントでは、読みやすさが失われる、ぼかし、表示、および外観が変わる可能性があります。  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Media.FormattedText>オブジェクトと書式設定されたテキストとその境界ボックスのジオメトリを取得します。  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BuildHighlightGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>書式設定されたテキストの強調表示境界ボックスを表す <see cref="T:System.Windows.Media.Geometry" /> オブジェクトを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin);" />
      <MemberSignature Language="F#" Value="member this.BuildHighlightGeometry : System.Windows.Point -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildHighlightGeometry origin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">強調表示領域の原点。</param>
        <summary>書式設定されたテキストの強調表示境界ボックスを表す <see cref="T:System.Windows.Media.Geometry" /> オブジェクトを返します。</summary>
        <returns>書式設定されたテキストの強調表示境界ボックスを表す <see cref="T:System.Windows.Media.Geometry" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 境界ボックス領域には、指定された位置から始まる全体の書式設定されたテキスト領域が含まれています。`origin`します。 返された<xref:System.Windows.Media.Geometry>オブジェクトが強調表示されたテキストの境界ボックスのみが含まれています、レンダリングされたテキストは含まれません。  
  
 次の例では、ストロークと変換されたテキストの強調表示を変更することで視覚効果を作成する方法を示しています。  
  
 ![ストロークに適用されるイメージ ブラシを含むテキスト](~/add/media/outlinedtext05.jpg "ストロークに適用されるイメージ ブラシを含むテキスト")  
ストロークと強調表示に適用したイメージ ブラシの例  
  
   
  
## Examples  
 次の例を作成する方法を示しています、<xref:System.Windows.Media.FormattedText>オブジェクトと書式設定されたテキストとその境界ボックスのジオメトリを取得します。  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point, startIndex As Integer, count As Integer) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.BuildHighlightGeometry : System.Windows.Point * int * int -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildHighlightGeometry (origin, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="origin">強調表示領域の原点。</param>
        <param name="startIndex">強調表示の境界の対象となる最初の文字のインデックス。</param>
        <param name="count">強調表示の境界に含める文字の数。</param>
        <summary>書式設定されたテキストに含まれる指定した部分文字列の強調表示境界ボックスを表す <see cref="T:System.Windows.Media.Geometry" /> オブジェクトを返します。</summary>
        <returns>書式設定されたテキストの部分文字列の強調表示境界ボックスを表す <see cref="T:System.Windows.Media.Geometry" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返された<xref:System.Windows.Media.Geometry>オブジェクトが強調表示されたテキストの境界ボックスのみが含まれています、レンダリングされたテキストは含まれません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extent">
      <MemberSignature Language="C#" Value="public double Extent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Extent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Extent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extent As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Extent { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Extent : double" Usage="System.Windows.Media.FormattedText.Extent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最初の行の最上部の描画ピクセルから、最後の行の最下部の描画ピクセルまでの距離を取得します。</summary>
        <value>最初の行の最上部の描画ピクセルから、最後の行の最下部の描画ピクセルまでの距離 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エクステントには、行の高さ、基準、またはオーバー ハング外に出る可能性がある装飾的な要素を含む、グリフに存在する可能性がある任意のグラフィック要素が組み込まれています。 この値は行上に表示されるに依存し、使用されません (は使用できません) 行間隔を派生させる。 ただし、ヒット テストのグラフィカルな要素は、段落の上下に整列するために使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.Media.FormattedText.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.FlowDirection" /> オブジェクトの <see cref="T:System.Windows.Media.FormattedText" /> を取得または設定します。</summary>
        <value>書式設定されたテキストの <see cref="T:System.Windows.FlowDirection" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxTextWidths">
      <MemberSignature Language="C#" Value="public double[] GetMaxTextWidths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] GetMaxTextWidths() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.GetMaxTextWidths" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMaxTextWidths () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetMaxTextWidths();" />
      <MemberSignature Language="F#" Value="member this.GetMaxTextWidths : unit -&gt; double[]" Usage="formattedText.GetMaxTextWidths " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テキスト幅の配列を取得します。 この配列の各要素は、連続したテキスト行の最大のテキスト幅を表します。</summary>
        <returns>最大のテキスト幅の配列 (幅はそれぞれ [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキスト行が、配列内の要素の数を超えた場合は、最後の要素の値が残りの行に使用されます。 長さの配列でない場合`null`、配列の値の<xref:System.Windows.Media.FormattedText.GetMaxTextWidths%2A>の代わりに、<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>プロパティの値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Media.FormattedText.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクトの最初の行の上端から最後の行の下端までの距離を示す値を取得します。</summary>
        <value>最初の行の上端から最後の行の下端までの距離 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Media.FormattedText.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト行の行間の高さ (行間隔) を取得します。</summary>
        <value>テキスト行の行間隔 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定行の高さが自動的に計算されはパラメーターとして渡されるフォント値に基づいて、<xref:System.Windows.Media.FormattedText.%23ctor%2A>コンス トラクター。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLineCount">
      <MemberSignature Language="C#" Value="public int MaxLineCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxLineCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLineCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLineCount : int with get, set" Usage="System.Windows.Media.FormattedText.MaxLineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示する行の最大数を取得または設定します。 <see cref="P:System.Windows.Media.FormattedText.MaxLineCount" /> を超えるテキストは表示されません。</summary>
        <value>表示する行の最大数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Media.FormattedText.Trimming%2A>テキストを超えたときにテキストを省略する方法を制御するプロパティが表される、<xref:System.Windows.Media.FormattedText.MaxLineCount%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextHeight">
      <MemberSignature Language="C#" Value="public double MaxTextHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTextHeight : double with get, set" Usage="System.Windows.Media.FormattedText.MaxTextHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト行の最大の高さを取得または設定します。</summary>
        <value>テキスト行の最大の高さ ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示されるテキストの最後の行が最後の全体行内に収まるを<xref:System.Windows.Media.FormattedText.MaxTextHeight%2A>制限または行の数を超えない、<xref:System.Windows.Media.FormattedText.MaxLineCount%2A>プロパティ、早い方です。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Media.FormattedText>オブジェクトし、テキストをいくつかの書式スタイルを適用を含む<xref:System.Windows.Media.FormattedText.MaxTextHeight%2A>します。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextWidth">
      <MemberSignature Language="C#" Value="public double MaxTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTextWidth : double with get, set" Usage="System.Windows.Media.FormattedText.MaxTextWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト行の最大のテキスト幅 (長さ) を取得または設定します。</summary>
        <value>テキスト行の最大のテキスト幅 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキストは折り返さを超えないようにする、<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>制限します。  
  
 行の数の制限内では、グリフの配置端を保持する必要があります。 多くのフォントに若干の配置端オーバー ハング グリフが含まれているために、このようなオーバー ハング余裕を確保する、行の数を超えるには少なくとも 1/6 em (フォント サイズ) の余白が要求を許可します。  
  
 行の数の値がゼロは、無限の線数として扱われます。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Media.FormattedText>オブジェクトし、テキストをいくつかの書式スタイルを適用を含む<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>します。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinWidth : double" Usage="System.Windows.Media.FormattedText.MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したテキスト コンテンツをすべて格納できる最小のテキスト幅を取得します。</summary>
        <value>テキスト ソースの最小のテキスト幅 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の図のテキストは、複数の行を表示するソース テキストの最小のテキスト幅を使用します。 最小のテキスト幅が最大の幅のある単語に対応しています: この場合は、単語「ジャンプ」。 合計幅が最小のテキスト幅を超えない限り、同じ行に複数の単語を表示できることに注意してください。  
  
 ![最小の段落幅を使用してテキスト フォーマッタ](~/add/media/textformatter03.png "最小の段落幅を使用してテキスト フォーマッタ")  
最小のテキスト幅  
  
 値が渡された場合<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>の値以上<xref:System.Windows.Media.FormattedText.MinWidth%2A>、省略記号文字のないテキストが書式設定します。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.Windows.Media.FormattedText.MinWidth%2A>テキストの書式設定された行の最小のテキスト幅を生成するプロパティ。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets3)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangAfter">
      <MemberSignature Language="C#" Value="public double OverhangAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangAfter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangAfter As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangAfter { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangAfter : double" Usage="System.Windows.Media.FormattedText.OverhangAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストの最後の行の下端から最下部の描画ピクセルまでの距離を取得します。</summary>
        <value>最後の行の下端から最下部のインク付きピクセルまでの距離 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最下部の描画ピクセルが行の下端を下回るし、(on またはそれ以上) 内にある場合は負の場合は、値が正の値の行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangLeading">
      <MemberSignature Language="C#" Value="public double OverhangLeading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangLeading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangLeading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangLeading As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangLeading { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangLeading : double" Usage="System.Windows.Media.FormattedText.OverhangLeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の先頭の配置ポイントから先頭の描画ピクセルまでの最大距離を取得します。</summary>
        <value>行の先頭の配置ポイントから先頭の描画ピクセルまでの最大距離 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 先頭の配置ポイントは、先頭の描画ピクセルの前に来る、ときに、値が負の値です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangTrailing">
      <MemberSignature Language="C#" Value="public double OverhangTrailing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangTrailing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangTrailing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangTrailing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangTrailing { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangTrailing : double" Usage="System.Windows.Media.FormattedText.OverhangTrailing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の末尾のインク付きピクセルから末尾の配置ポイントまでの最大距離を取得します。</summary>
        <value>行の末尾のインク付きピクセルから末尾の配置ポイントまでの最大距離 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.FormattedText.OverhangTrailing%2A>後続の描画ピクセルが末尾の配置ポイントの前に来るとき値は正の値になります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.FormattedText.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストを表示する PixelsPerDip を取得または設定します。</summary>
        <value>現在の <see cref="P:System.Windows.Media.FormattedText.PixelsPerDip" /> 値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCulture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>書式設定されたテキストの <see cref="T:System.Globalization.CultureInfo" /> を設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SetCulture : System.Globalization.CultureInfo -&gt; unit" Usage="formattedText.SetCulture culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">テキストの書式設定に使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
        <summary>
          <see cref="T:System.Globalization.CultureInfo" /> オブジェクト内の文字列全体の <see cref="T:System.Windows.Media.FormattedText" /> を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo>クラスは、関連する言語、サブ言語、国/地域、暦、文化的な慣習など、カルチャに固有の情報を保持します。 このクラスでは、カルチャ固有のインスタンスへのアクセスも提供します<xref:System.Globalization.DateTimeFormatInfo>、 <xref:System.Globalization.NumberFormatInfo>、 <xref:System.Globalization.CompareInfo>、および<xref:System.Globalization.TextInfo>します。 これらのオブジェクトには、大文字小文字の区別、日付や数値の書式設定文字列を比較するなど、カルチャに固有の操作に必要な情報が含まれています。  
  
 このメソッドは、テキスト文字列全体のカルチャ情報の値を設定します。 テキスト文字列の一部のカルチャ情報の値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%2CSystem.Int32%2CSystem.Int32%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetCulture : System.Globalization.CultureInfo * int * int -&gt; unit" Usage="formattedText.SetCulture (culture, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">テキストの書式設定に使用する <see cref="T:System.Globalization.CultureInfo" />。</param>
        <param name="startIndex">変更を適用する最初の文字の開始インデックス。</param>
        <param name="count">変更を適用する文字の数。</param>
        <summary>
          <see cref="T:System.Globalization.CultureInfo" /> オブジェクト内の文字の指定したサブセットの <see cref="T:System.Windows.Media.FormattedText" /> を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo>クラスは、関連する言語、サブ言語、国/地域、暦、文化的な慣習など、カルチャに固有の情報を保持します。 このクラスでは、カルチャ固有のインスタンスへのアクセスも提供します<xref:System.Globalization.DateTimeFormatInfo>、 <xref:System.Globalization.NumberFormatInfo>、 <xref:System.Globalization.CompareInfo>、および<xref:System.Globalization.TextInfo>します。 これらのオブジェクトには、大文字小文字の区別、日付や数値の書式設定文字列を比較するなど、カルチャに固有の操作に必要な情報が含まれています。  
  
 テキスト文字列全体のカルチャ情報の値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontFamily">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクトのフォント ファミリを設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : string -&gt; unit" Usage="formattedText.SetFontFamily fontFamily" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fontFamily">テキストの書式設定に使用する <see cref="T:System.Windows.Media.FontFamily" /> を構築する文字列。 フォールバックが可能です。詳細については、<see cref="T:System.Windows.Media.FontFamily" /> のトピックを参照してください。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字列全体のフォント ファミリを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、テキスト文字列全体のフォント ファミリの値を設定します。 テキスト文字列のサブセットのフォント ファミリの値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontFamily%28System.String%2CSystem.Int32%2CSystem.Int32%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : System.Windows.Media.FontFamily -&gt; unit" Usage="formattedText.SetFontFamily fontFamily" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
      </Parameters>
      <Docs>
        <param name="fontFamily">テキストの書式設定に使用する <see cref="T:System.Windows.Media.FontFamily" />。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクトのフォント ファミリを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、テキスト文字列全体のフォント ファミリの値を設定します。 テキスト文字列のサブセットのフォント ファミリの値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontFamily%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : string * int * int -&gt; unit" Usage="formattedText.SetFontFamily (fontFamily, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">テキストの書式設定に使用する <see cref="T:System.Windows.Media.FontFamily" /> を構築する文字列。 フォールバックが可能です。詳細については、<see cref="T:System.Windows.Media.FontFamily" /> のトピックを参照してください。</param>
        <param name="startIndex">フォント ファミリの変更を適用する最初の文字の開始インデックス。</param>
        <param name="count">変更を適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字の指定したサブセットのフォント ファミリを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキスト文字列全体のフォント ファミリの値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontFamily%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : System.Windows.Media.FontFamily * int * int -&gt; unit" Usage="formattedText.SetFontFamily (fontFamily, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">テキストの書式設定に使用する <see cref="T:System.Windows.Media.FontFamily" />。</param>
        <param name="startIndex">フォント ファミリの変更を適用する最初の文字の開始インデックス。</param>
        <param name="count">変更を適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字の指定したサブセットのフォント ファミリを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキスト文字列全体のフォント ファミリの値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontFamily%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontSize">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>フォント サイズを設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize);" />
      <MemberSignature Language="F#" Value="member this.SetFontSize : double -&gt; unit" Usage="formattedText.SetFontSize emSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="emSize">"Em" 単位のフォント サイズ ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字列全体のフォント サイズを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、テキスト文字列全体のフォント サイズの値を設定します。 テキスト文字列のサブセットのフォント サイズの値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontSize%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontSize : double * int * int -&gt; unit" Usage="formattedText.SetFontSize (emSize, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="emSize">"Em" 単位のフォント サイズ ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</param>
        <param name="startIndex">フォント サイズを適用する最初の文字の開始インデックス。</param>
        <param name="count">フォント サイズを適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字の指定したサブセットのフォント サイズを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキスト文字列全体のフォント サイズの値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontSize%2A>メソッド。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Media.FormattedText>オブジェクトし、テキストをいくつかの書式スタイルを適用を含む<xref:System.Windows.Media.FormattedText.SetFontSize%2A>します。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStretch">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクトのフォントの伸縮値を設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch);" />
      <MemberSignature Language="F#" Value="member this.SetFontStretch : System.Windows.FontStretch -&gt; unit" Usage="formattedText.SetFontStretch stretch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
      </Parameters>
      <Docs>
        <param name="stretch">テキストの書式設定に使用する目的の <see cref="T:System.Windows.FontStretch" /> 値。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字列全体のフォントの伸縮値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フォントの伸縮値は、画面にフォントの伸縮する度合いを示します。 <xref:System.Windows.FontStretch> 型のような変換動作をサポートする静的な値の<xref:System.Windows.FontStretches>クラスを初期化するために使用できます<xref:System.Windows.FontStretch>型のパラメーターを入力し、<xref:System.Windows.FontStretch>します。 呼び出すこともできます<xref:System.Windows.FontStretch.FromOpenTypeStretch%2A>を適切に初期化された作成<xref:System.Windows.FontStretch>です。  
  
 このメソッドは、テキスト文字列全体のフォントの伸縮値を設定します。 テキスト文字列のサブセットのフォントの伸縮値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%2CSystem.Int32%2CSystem.Int32%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontStretch : System.Windows.FontStretch * int * int -&gt; unit" Usage="formattedText.SetFontStretch (stretch, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stretch">テキストの書式設定に使用する目的の <see cref="T:System.Windows.FontStretch" /> 値。</param>
        <param name="startIndex">フォントの伸縮を適用する最初の文字の開始インデックス。</param>
        <param name="count">フォントの伸縮を適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字の指定したサブセットに関するフォントの伸縮値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フォントの伸縮値は、画面にフォントの伸縮する度合いを示します。  
  
 <xref:System.Windows.FontStretch> 型のような変換動作をサポートする静的な値の<xref:System.Windows.FontStretches>クラスを初期化するために使用できます<xref:System.Windows.FontStretch>型のパラメーターを入力し、<xref:System.Windows.FontStretch>します。 呼び出すこともできます<xref:System.Windows.FontStretch.FromOpenTypeStretch%2A>を適切に初期化された作成<xref:System.Windows.FontStretch>です。  
  
 テキスト文字列全体のフォントの伸縮値を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStyle">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクトのフォント スタイルを設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style);" />
      <MemberSignature Language="F#" Value="member this.SetFontStyle : System.Windows.FontStyle -&gt; unit" Usage="formattedText.SetFontStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">テキストの書式設定に使用する <see cref="T:System.Windows.FontStyle" /> 値。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字列全体のフォント スタイルを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> 型のような変換動作をサポートする静的な値の<xref:System.Windows.FontStyles>クラスを初期化するために使用できます<xref:System.Windows.FontStyle>型のパラメーターを入力し、<xref:System.Windows.FontStyle>します。  
  
 このメソッドは、テキスト文字列全体のフォント スタイルを設定します。 テキスト文字列のサブセットのフォント スタイルを設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%2CSystem.Int32%2CSystem.Int32%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontStyle : System.Windows.FontStyle * int * int -&gt; unit" Usage="formattedText.SetFontStyle (style, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="style">テキストの書式設定に使用する <see cref="T:System.Windows.FontStyle" /> 値。</param>
        <param name="startIndex">フォント スタイルを適用する最初の文字の開始インデックス。</param>
        <param name="count">フォント スタイルを適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字の指定したサブセットのフォント スタイルを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> 型のような変換動作をサポートする静的な値の<xref:System.Windows.FontStyles>クラスを初期化するために使用できます<xref:System.Windows.FontStyle>型のパラメーターを入力し、<xref:System.Windows.FontStyle>します。  
  
 テキスト文字列全体のフォント スタイルを設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%29>メソッド。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Media.FormattedText>オブジェクトし、テキストをいくつかの書式スタイルを適用を含む<xref:System.Windows.Media.FormattedText.SetFontStyle%2A>します。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontTypeface">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクトのフォント タイプフェイスを設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface);" />
      <MemberSignature Language="F#" Value="member this.SetFontTypeface : System.Windows.Media.Typeface -&gt; unit" Usage="formattedText.SetFontTypeface typeface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
      </Parameters>
      <Docs>
        <param name="typeface">テキストの書式設定に使用する <see cref="T:System.Windows.Media.Typeface" />。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字列全体のフォント タイプフェイスを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> 組み合わせを表す<xref:System.Windows.Media.FontFamily>、 <xref:System.Windows.FontWeight>、 <xref:System.Windows.FontStyle>、および<xref:System.Windows.FontStretch>します。 <xref:System.Windows.Media.Typeface> タイプフェイスに基づいてどのコンストラクトの名前がのもう 1 つは、不連続の値を複数のコンス トラクターをサポートしている<xref:System.Windows.Media.FontFamily>、 <xref:System.Windows.FontWeight>、 <xref:System.Windows.FontStyle>、および<xref:System.Windows.FontStretch>します。  
  
 このメソッドは、テキスト文字列全体のフォント タイプフェイスを設定します。 テキスト文字列のサブセットのフォント タイプフェイスを設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%2CSystem.Int32%2CSystem.Int32%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontTypeface : System.Windows.Media.Typeface * int * int -&gt; unit" Usage="formattedText.SetFontTypeface (typeface, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeface">テキストの書式設定に使用する <see cref="T:System.Windows.Media.Typeface" />。</param>
        <param name="startIndex">タイプフェイスを適用する最初の文字の開始インデックス。</param>
        <param name="count">タイプフェイスを適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字の指定したサブセットのフォント タイプフェイスを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> 組み合わせを表す<xref:System.Windows.Media.FontFamily>、 <xref:System.Windows.FontWeight>、 <xref:System.Windows.FontStyle>、および<xref:System.Windows.FontStretch>します。 <xref:System.Windows.Media.Typeface> タイプフェイスに基づいてどのコンストラクトの名前がのもう 1 つは、不連続の値を複数のコンス トラクターをサポートしている<xref:System.Windows.Media.FontFamily>、 <xref:System.Windows.FontWeight>、 <xref:System.Windows.FontStyle>、および<xref:System.Windows.FontStretch>します。  
  
 テキスト文字列全体のフォント タイプフェイスを設定するには、使用、<xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontWeight">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクトのフォントの太さを設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight);" />
      <MemberSignature Language="F#" Value="member this.SetFontWeight : System.Windows.FontWeight -&gt; unit" Usage="formattedText.SetFontWeight weight" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
      </Parameters>
      <Docs>
        <param name="weight">テキストの書式設定に使用する <see cref="T:System.Windows.FontWeight" />。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字列全体のフォントの太さを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> 型のような変換動作をサポートする静的な値の<xref:System.Windows.FontWeights>クラスを初期化するために使用できます<xref:System.Windows.FontWeight>型のパラメーターを入力し、<xref:System.Windows.FontWeight>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontWeight : System.Windows.FontWeight * int * int -&gt; unit" Usage="formattedText.SetFontWeight (weight, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="weight">テキストの書式設定に使用するフォントの太さ。</param>
        <param name="startIndex">フォントの太さを適用する最初の文字の開始インデックス。</param>
        <param name="count">フォントの太さを適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.FontWeight" /> オブジェクト内の指定したテキストの <see cref="T:System.Windows.Media.FormattedText" /> を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> 型のような変換動作をサポートする静的な値の<xref:System.Windows.FontWeights>クラスを初期化するために使用できます<xref:System.Windows.FontWeight>型のパラメーターを入力し、<xref:System.Windows.FontWeight>します。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Media.FormattedText>オブジェクトし、テキストをいくつかの書式スタイルを適用を含む<xref:System.Windows.Media.FormattedText.SetFontWeight%2A>します。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetForegroundBrush">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>テキストの描画に使用する前景ブラシを変更します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush);" />
      <MemberSignature Language="F#" Value="member this.SetForegroundBrush : System.Windows.Media.Brush -&gt; unit" Usage="formattedText.SetForegroundBrush foregroundBrush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">テキストの前景に使用するブラシ。</param>
        <summary>
          <see cref="T:System.Windows.Media.Brush" /> オブジェクト全体の前景 <see cref="T:System.Windows.Media.FormattedText" /> を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、テキスト文字列全体の前景ブラシを設定します。 テキスト文字列のサブセットの前景ブラシを設定するには、使用、<xref:System.Windows.Media.FormattedText.SetForegroundBrush%28System.Windows.Media.Brush%2CSystem.Int32%2CSystem.Int32%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetForegroundBrush : System.Windows.Media.Brush * int * int -&gt; unit" Usage="formattedText.SetForegroundBrush (foregroundBrush, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">テキストの前景に使用するブラシ。</param>
        <param name="startIndex">前景ブラシを適用する最初の文字の開始インデックス。</param>
        <param name="count">前景ブラシを適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.Media.Brush" /> オブジェクト内の指定したテキストの前景 <see cref="T:System.Windows.Media.FormattedText" /> を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキスト文字列全体の前景ブラシを設定するには、使用、<xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A>メソッド。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Media.FormattedText>オブジェクトし、テキストをいくつかの書式スタイルを適用を含む<xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A>します。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxTextWidths">
      <MemberSignature Language="C#" Value="public void SetMaxTextWidths (double[] maxTextWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMaxTextWidths(float64[] maxTextWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetMaxTextWidths(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMaxTextWidths (maxTextWidths As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMaxTextWidths(cli::array &lt;double&gt; ^ maxTextWidths);" />
      <MemberSignature Language="F#" Value="member this.SetMaxTextWidths : double[] -&gt; unit" Usage="formattedText.SetMaxTextWidths maxTextWidths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxTextWidths" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="maxTextWidths">最大のテキスト幅の配列 (幅はそれぞれ [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定)。</param>
        <summary>行単位の最大のテキスト幅の配列を <see cref="T:System.Windows.Media.FormattedText" /> 内で設定します。 この配列の各要素は、連続したテキスト行の最大のテキスト幅を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキスト行が、配列内の要素の数を超えた場合は、配列の最後の値が残りの行に使用されます。 有効な配列を提供する<xref:System.Windows.Media.FormattedText.SetMaxTextWidths%2A>に指定された任意の値をオーバーライド、<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNumberSubstitution">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクトの数字の置換動作を設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberSignature Language="F#" Value="member this.SetNumberSubstitution : System.Windows.Media.NumberSubstitution -&gt; unit" Usage="formattedText.SetNumberSubstitution numberSubstitution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">テキストに適用する数字の置換動作。これは、<see langword="null" /> でもかまいません。その場合、テキストのカルチャに対応する既定の数字の置換方法が使用されます。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の文字列全体に適用する数字の置換動作を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.NumberSubstitution>クラスは、テキスト内の数字の表示方法を指定します。 このメソッドは、テキスト文字列全体の数字の置換動作を設定します。 テキスト文字列のサブセットの数字の置換動作を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%2CSystem.Int32%2CSystem.Int32%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetNumberSubstitution : System.Windows.Media.NumberSubstitution * int * int -&gt; unit" Usage="formattedText.SetNumberSubstitution (numberSubstitution, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">テキストに適用する数字の置換動作。これは、<see langword="null" /> でもかまいません。その場合、テキストのカルチャに対応する既定の数字の置換方法が使用されます。</param>
        <param name="startIndex">変更を適用する最初の文字の開始インデックス。</param>
        <param name="count">変更を適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内の指定したテキストに適用する数字の置換動作を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.NumberSubstitution>クラスは、テキスト内の数字の表示方法を指定します。 テキスト文字列全体の数字の置換動作を設定するには、使用、<xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetTextDecorations">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.TextDecorationCollection" /> オブジェクトの <see cref="T:System.Windows.Media.FormattedText" /> を設定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations);" />
      <MemberSignature Language="F#" Value="member this.SetTextDecorations : System.Windows.TextDecorationCollection -&gt; unit" Usage="formattedText.SetTextDecorations textDecorations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
      </Parameters>
      <Docs>
        <param name="textDecorations">テキストに適用される <see cref="T:System.Windows.TextDecorationCollection" />。</param>
        <summary>
          <see cref="T:System.Windows.TextDecorationCollection" /> オブジェクト内の文字列全体の <see cref="T:System.Windows.Media.FormattedText" /> を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TextDecorationCollection>クラスをテキストに適用する文字装飾の種類を指定します。 文字装飾の 4 つの種類があります。 ベースライン、下線、取り消し線、および上線。 これらは<xref:System.Windows.TextDecorationLocation>内の各項目に設定されている値、<xref:System.Windows.TextDecorationCollection>します。 一般的です、<xref:System.Windows.TextDecorationCollection>コレクションには、1 つだけの装飾が含まれていますが、プロパティ、コレクションを使用して、同じテキストを複数の文字装飾を適用することより高度な装飾効果を提供します。  
  
 次の図は、テキストの基準としたテキスト装飾の位置を示します。  
  
 ![テキスト装飾位置のダイアグラム](~/add/media/textdecoration01.gif "テキスト装飾位置のダイアグラム")  
文字装飾の種類の例  
  
 このメソッドは、設定、<xref:System.Windows.TextDecorationCollection>全体のテキスト文字列。 設定する、<xref:System.Windows.TextDecorationCollection>テキスト文字列のサブセットを使用して、<xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%2CSystem.Int32%2CSystem.Int32%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetTextDecorations : System.Windows.TextDecorationCollection * int * int -&gt; unit" Usage="formattedText.SetTextDecorations (textDecorations, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textDecorations">テキストに適用される <see cref="T:System.Windows.TextDecorationCollection" />。</param>
        <param name="startIndex">文字装飾を適用する最初の文字の開始インデックス。</param>
        <param name="count">文字装飾を適用する文字の数。</param>
        <summary>
          <see cref="T:System.Windows.TextDecorationCollection" /> オブジェクト内の指定したテキストの <see cref="T:System.Windows.Media.FormattedText" /> を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TextDecorationCollection>クラスをテキストに適用する文字装飾の種類を指定します。 文字装飾の 4 つの種類があります。 ベースライン、下線、取り消し線、および上線。 これらは<xref:System.Windows.TextDecorationLocation>内の各項目に設定されている値、<xref:System.Windows.TextDecorationCollection>します。 一般的です、<xref:System.Windows.TextDecorationCollection>コレクションには、1 つだけの装飾が含まれていますが、プロパティ、コレクションを使用して、同じテキストを複数の文字装飾を適用することより高度な装飾効果を提供します。  
  
 次の図は、テキストの基準としたテキスト装飾の位置を示します。  
  
 ![テキスト装飾位置のダイアグラム](~/add/media/textdecoration01.gif "テキスト装飾位置のダイアグラム")  
文字装飾の種類の例  
  
 設定する、 <xref:System.Windows.TextDecorationCollection> 、全体のテキスト文字列を使用して、<xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%29>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Windows.Media.FormattedText.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されるテキストの文字列を取得します。</summary>
        <value>表示されるテキストの文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、構成された<xref:System.Windows.Media.FormattedText>オブジェクト。 新しいを作成する必要があります<xref:System.Windows.Media.FormattedText>別のテキストを設定するには。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Media.FormattedText.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.FormattedText" /> オブジェクト内のテキストの配置を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.TextAlignment" /> オブジェクト内でのテキストの配置を指定する <see cref="T:System.Windows.Media.FormattedText" /> 値の 1 つ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trimming">
      <MemberSignature Language="C#" Value="public System.Windows.TextTrimming Trimming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextTrimming Trimming" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Trimming" />
      <MemberSignature Language="VB.NET" Value="Public Property Trimming As TextTrimming" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextTrimming Trimming { System::Windows::TextTrimming get(); void set(System::Windows::TextTrimming value); };" />
      <MemberSignature Language="F#" Value="member this.Trimming : System.Windows.TextTrimming with get, set" Usage="System.Windows.Media.FormattedText.Trimming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TextTrimming</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストの省略の指定方法を取得または設定します。</summary>
        <value>テキストの省略の指定方法を指定する、<see cref="T:System.Windows.TextTrimming" /> 値の 1 つ。 既定値は、<see cref="F:System.Windows.TextTrimming.WordEllipsis" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Media.FormattedText.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の先頭の配置ポイントから末尾の配置ポイントまでの幅 (末尾の空白文字を除く) を取得します。</summary>
        <value>行の先頭の配置ポイントから末尾の配置ポイントまでの幅 (末尾の空白文字を除く)。 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数行のテキストの最も長い行が使用される、<xref:System.Windows.Media.FormattedText.Width%2A>値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthIncludingTrailingWhitespace">
      <MemberSignature Language="C#" Value="public double WidthIncludingTrailingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WidthIncludingTrailingWhitespace As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WidthIncludingTrailingWhitespace { double get(); };" />
      <MemberSignature Language="F#" Value="member this.WidthIncludingTrailingWhitespace : double" Usage="System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行の先頭の配置ポイントから末尾の配置ポイントまでの幅 (末尾の空白文字を含む) を取得します。</summary>
        <value>行の先頭の配置ポイントから末尾の配置ポイントまでの幅 (末尾の空白文字を含む)。 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] で指定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複数行のテキストの最も長い行が使用される、<xref:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace%2A>値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>