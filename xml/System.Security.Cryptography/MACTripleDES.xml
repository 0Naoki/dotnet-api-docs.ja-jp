<Type Name="MACTripleDES" FullName="System.Security.Cryptography.MACTripleDES">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c678c069fd41d666fbda841579000c7028978bad" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MACTripleDES extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.MACTripleDES" />
  <TypeSignature Language="VB.NET" Value="Public Class MACTripleDES&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class MACTripleDES : System::Security::Cryptography::KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="019da-101">
        <see cref="T:System.Security.Cryptography.TripleDES" /> を使用して、入力データ <see cref="T:System.Security.Cryptography.CryptoStream" /> の MAC (Message Authentication Code) を計算します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="019da-101">Computes a Message Authentication Code (MAC) using <see cref="T:System.Security.Cryptography.TripleDES" /> for the input data <see cref="T:System.Security.Cryptography.CryptoStream" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019da-102">送信者と受信者に、共有シークレット キーを共有すると、安全でないチャネル経由で送信されたメッセージが改ざんされているかどうかを決定する、MAC を使用できます。</span><span class="sxs-lookup"><span data-stu-id="019da-102">A MAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="019da-103">送信者は、元のデータの MAC を計算し、単一のメッセージとして両方を送信します。</span><span class="sxs-lookup"><span data-stu-id="019da-103">The sender computes the MAC for the original data, and sends both as a single message.</span></span> <span data-ttu-id="019da-104">受信者が受信したメッセージの MAC が再計算され、計算された MAC に送信された MAC が一致することを確認</span><span class="sxs-lookup"><span data-stu-id="019da-104">The receiver recomputes the MAC on the received message, and checks that the computed MAC matches the transmitted MAC.</span></span>  
  
 <span data-ttu-id="019da-105">メッセージを変更し、正しい MAC を再現する秘密キーの知識が必要なため、不一致が MAC 結果や、データを変更します。</span><span class="sxs-lookup"><span data-stu-id="019da-105">Any change to the data or the MAC results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct MAC.</span></span> <span data-ttu-id="019da-106">したがって、コードが一致する場合、メッセージが認証されます。</span><span class="sxs-lookup"><span data-stu-id="019da-106">Therefore, if the codes match, the message is authenticated.</span></span>  
  
 <span data-ttu-id="019da-107"><xref:System.Security.Cryptography.MACTripleDES> 16 ~ 24 バイト長、および 8 バイト長であるハッシュを生成するキーを使用します。</span><span class="sxs-lookup"><span data-stu-id="019da-107"><xref:System.Security.Cryptography.MACTripleDES> uses a key that is 16 or 24 bytes long, and produces a hash sequence that is 8 bytes long.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="019da-108">次の例では、という名前のファイル用の MAC `input.txt`、実行可能ファイルの例では、含まれているフォルダー内に配置されています。</span><span class="sxs-lookup"><span data-stu-id="019da-108">The following example creates a MAC for a file named `input.txt`, which is located in the folder that contains the example executable.</span></span> <span data-ttu-id="019da-109">MAC と元のテキストがという名前のファイルに書き込まれます`encrypted.hsh`同じフォルダーにあります。</span><span class="sxs-lookup"><span data-stu-id="019da-109">The MAC and the original text are written to a file named `encrypted.hsh` in the same folder.</span></span> <span data-ttu-id="019da-110">署名付きのファイルは読み取りしれ MAC が計算テキスト部分では、ファイルのテキストに含まれている MAC に比較します。</span><span class="sxs-lookup"><span data-stu-id="019da-110">The signed file is then read, and the MAC is calculated for the text portion of the file and compared to the MAC that is included with the text.</span></span>  
  
 [!code-csharp[MAC3DES#1](~/samples/snippets/csharp/VS_Snippets_CLR/MAC3DES/CS/program.cs#1)]
 [!code-vb[MAC3DES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MAC3DES/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="019da-111">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="019da-112">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019da-113">このコンス トラクターの既定の実装を使用して<xref:System.Security.Cryptography.TripleDES>です。</span><span class="sxs-lookup"><span data-stu-id="019da-113">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="019da-114">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> 暗号化の共有キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-114">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="019da-115">キー データを指定して、<see cref="T:System.Security.Cryptography.MACTripleDES" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019da-116">このコンス トラクターの既定の実装を使用して<xref:System.Security.Cryptography.TripleDES>です。</span><span class="sxs-lookup"><span data-stu-id="019da-116">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span> <span data-ttu-id="019da-117">`rgbKey`パラメーターは長さが 16 個 24 バイトである必要があります。</span><span class="sxs-lookup"><span data-stu-id="019da-117">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="019da-118">このコンス トラクターを使用する方法の例は、次を参照してください。、<xref:System.Security.Cryptography.MACTripleDES>クラスです。</span><span class="sxs-lookup"><span data-stu-id="019da-118">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.MACTripleDES> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="019da-119">
            <paramref name="rgbKey" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-119">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (string strTripleDES, byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strTripleDES, unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strTripleDES As String, rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(System::String ^ strTripleDES, cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strTripleDES" Type="System.String" />
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strTripleDES">
          <span data-ttu-id="019da-120">使用する <see cref="T:System.Security.Cryptography.TripleDES" /> 実装の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-120">The name of the <see cref="T:System.Security.Cryptography.TripleDES" /> implementation to use.</span>
          </span>
        </param>
        <param name="rgbKey">
          <span data-ttu-id="019da-121">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> 暗号化の共有キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-121">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="019da-122">指定したキー データと <see cref="T:System.Security.Cryptography.TripleDES" /> の指定した実装を使用して、<see cref="T:System.Security.Cryptography.MACTripleDES" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data and using the specified implementation of <see cref="T:System.Security.Cryptography.TripleDES" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019da-123">`strTripleDES`のフレンドリ名がパラメーター、<xref:System.Security.Cryptography.TripleDES>実装の型。</span><span class="sxs-lookup"><span data-stu-id="019da-123">The `strTripleDES` parameter is the friendly name of the <xref:System.Security.Cryptography.TripleDES> implementation type.</span></span> <span data-ttu-id="019da-124">既定の実装は、System.Security.Cryptography.TripleDES です。</span><span class="sxs-lookup"><span data-stu-id="019da-124">The default implementation is System.Security.Cryptography.TripleDES.</span></span>  
  
 <span data-ttu-id="019da-125">`rgbKey`パラメーターは長さが 16 個 24 バイトである必要があります。</span><span class="sxs-lookup"><span data-stu-id="019da-125">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="019da-126">
            <paramref name="rgbKey" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-126">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
          <span data-ttu-id="019da-127">
            <paramref name="strTripleDES" /> パラメーターが、<see cref="T:System.Security.Cryptography.TripleDES" /> 実装の有効な名前ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-127">The <paramref name="strTripleDES" /> parameter is not a valid name of a <see cref="T:System.Security.Cryptography.TripleDES" /> implementation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="019da-128">
            <see cref="M:System.IDisposable.Dispose" /> の実装からメソッドを呼び出した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-128">
              <see langword="true" /> if the method is called from an <see cref="M:System.IDisposable.Dispose" /> implementation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="019da-129">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> インスタンスによって使用されているリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-129">Releases the resources used by the <see cref="T:System.Security.Cryptography.MACTripleDES" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019da-130">このメソッドは、パブリック`Dispose()`メソッドおよび`Finalize`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="019da-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="019da-131">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`disposing パラメーター設定したメソッド`true`です。</span><span class="sxs-lookup"><span data-stu-id="019da-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="019da-132">`Finalize` 呼び出す`Dispose`するメソッドと`false`です。</span><span class="sxs-lookup"><span data-stu-id="019da-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="019da-133">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Security.Cryptography.MACTripleDES> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="019da-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.MACTripleDES> references.</span></span> <span data-ttu-id="019da-134">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="019da-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="019da-135">
              <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="019da-135">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="019da-136">オーバーライドする場合<see langword="Dispose(Boolean)" />を以前の呼び出しで既に破棄されているオブジェクトを参照しないように注意、<see langword="Dispose" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="019da-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="019da-137">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="019da-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="019da-138">詳細については<see langword="Dispose" />と<see langword="Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="019da-138">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgbData, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgbData As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgbData, int ibStart, int cbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgbData">
          <span data-ttu-id="019da-139">入力データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-139">The input data.</span>
          </span>
        </param>
        <param name="ibStart">
          <span data-ttu-id="019da-140">バイト配列内のデータの使用開始位置を示すオフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-140">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="cbSize">
          <span data-ttu-id="019da-141">配列内でデータとして使用されるバイトの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-141">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="019da-142">MAC (Message Authentication Code) を計算するために、オブジェクトに書き込まれたデータを <see cref="T:System.Security.Cryptography.TripleDES" /> 暗号化プログラムにルーティングします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-142">Routes data written to the object into the <see cref="T:System.Security.Cryptography.TripleDES" /> encryptor for computing the Message Authentication Code (MAC).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="019da-143">すべてのデータがオブジェクトに書き込まれた後に、計算された MAC (Message Authentication Code) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-143">Returns the computed Message Authentication Code (MAC) after all data is written to the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="019da-144">計算された MAC。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-144">The computed MAC.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019da-145">すべてのデータが書き込まれると、後でより多くのデータを書き込むことはできません後にのみ、この値を読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="019da-145">You can read this value only after all data is written, and you cannot write more data afterward.</span></span> <span data-ttu-id="019da-146">新しいインスタンスを作成する<xref:System.Security.Cryptography.MACTripleDES>データ用の MAC を計算するデータの個別のセグメントごとにします。</span><span class="sxs-lookup"><span data-stu-id="019da-146">Create a new instance of <xref:System.Security.Cryptography.MACTripleDES> for each separate segment of data to compute the MAC for that data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="019da-147">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> のインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-147">Initializes an instance of <see cref="T:System.Security.Cryptography.MACTripleDES" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019da-148">このメソッドは、クラスの既定のコンス トラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="019da-148">This method calls the default constructor for the class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="019da-149">ハッシュ アルゴリズムで使用する埋め込みモードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-149">Gets or sets the padding mode used in the hashing algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="019da-150">ハッシュ アルゴリズムで使用する埋め込みモード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-150">The padding mode used in the hashing algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="019da-151">ほとんどのプレーン テキスト メッセージは、ブロックが完全に入力するバイト数ので構成されていません。</span><span class="sxs-lookup"><span data-stu-id="019da-151">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="019da-152">多くの場合、最後のブロックを格納するための十分なバイトがありません。</span><span class="sxs-lookup"><span data-stu-id="019da-152">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="019da-153">この場合、テキストに埋め込み文字列が追加されます。</span><span class="sxs-lookup"><span data-stu-id="019da-153">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="019da-154">たとえば、ブロックの長さは 64 ビット、最後のブロックには、40 ビットだけが含まれている場合は、24 ビットのパディングが追加されます。</span><span class="sxs-lookup"><span data-stu-id="019da-154">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="019da-155">参照してください<xref:System.Security.Cryptography.PaddingMode>特定のモードの詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="019da-155">See <xref:System.Security.Cryptography.PaddingMode> for a description of specific modes.</span></span>  
  
 <span data-ttu-id="019da-156">このフィールドには、<xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="019da-156">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="019da-157">埋め込みモードは無効なため、プロパティを設定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="019da-157">The property cannot be set because the padding mode is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>