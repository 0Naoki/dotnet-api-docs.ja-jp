<Type Name="MACTripleDES" FullName="System.Security.Cryptography.MACTripleDES">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9416c5fefd31b893c22dbbb43f9fbe055c4b3c1e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70443238" /></Metadata><TypeSignature Language="C#" Value="public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MACTripleDES extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.MACTripleDES" />
  <TypeSignature Language="VB.NET" Value="Public Class MACTripleDES&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class MACTripleDES : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type MACTripleDES = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d84b4-101"><see cref="T:System.Security.Cryptography.TripleDES" /> を使用して、入力データ <see cref="T:System.Security.Cryptography.CryptoStream" /> の MAC (Message Authentication Code) を計算します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-101">Computes a Message Authentication Code (MAC) using <see cref="T:System.Security.Cryptography.TripleDES" /> for the input data <see cref="T:System.Security.Cryptography.CryptoStream" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d84b4-102">MAC を使用すると、送信側と受信側が秘密キーを共有している場合に、セキュリティで保護されていないチャネルを介して送信されたメッセージが改ざんされていないかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="d84b4-102">A MAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="d84b4-103">送信者は、元のデータの MAC を計算し、両方を1つのメッセージとして送信します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-103">The sender computes the MAC for the original data, and sends both as a single message.</span></span> <span data-ttu-id="d84b4-104">受信者は、受信したメッセージの MAC を再度計算し、計算された MAC が送信された mac と一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-104">The receiver recomputes the MAC on the received message, and checks that the computed MAC matches the transmitted MAC.</span></span>  
  
 <span data-ttu-id="d84b4-105">データまたは MAC を変更した場合、メッセージを変更して正しい MAC を再現するために秘密鍵の知識が必要になるため、不一致が発生します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-105">Any change to the data or the MAC results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct MAC.</span></span> <span data-ttu-id="d84b4-106">したがって、コードが一致する場合、メッセージは認証されます。</span><span class="sxs-lookup"><span data-stu-id="d84b4-106">Therefore, if the codes match, the message is authenticated.</span></span>  
  
 <span data-ttu-id="d84b4-107"><xref:System.Security.Cryptography.MACTripleDES>では、長さが16または24バイトのキーが使用され、8バイトの長さのハッシュシーケンスが生成されます。</span><span class="sxs-lookup"><span data-stu-id="d84b4-107"><xref:System.Security.Cryptography.MACTripleDES> uses a key that is 16 or 24 bytes long, and produces a hash sequence that is 8 bytes long.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d84b4-108">次の例では、という名前`input.txt`のファイルの MAC を作成します。このファイルは、例の実行可能ファイルが含まれているフォルダーに格納されています。</span><span class="sxs-lookup"><span data-stu-id="d84b4-108">The following example creates a MAC for a file named `input.txt`, which is located in the folder that contains the example executable.</span></span> <span data-ttu-id="d84b4-109">MAC と元のテキストは、同じフォルダー内のと`encrypted.hsh`いう名前のファイルに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="d84b4-109">The MAC and the original text are written to a file named `encrypted.hsh` in the same folder.</span></span> <span data-ttu-id="d84b4-110">その後、署名されたファイルが読み取られ、MAC がファイルのテキスト部分に対して計算され、テキストに含まれている MAC と比較されます。</span><span class="sxs-lookup"><span data-stu-id="d84b4-110">The signed file is then read, and the MAC is calculated for the text portion of the file and compared to the MAC that is included with the text.</span></span>  
  
 [!code-csharp[MAC3DES#1](~/samples/snippets/csharp/VS_Snippets_CLR/MAC3DES/CS/program.cs#1)]
 [!code-vb[MAC3DES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MAC3DES/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d84b4-111"><see cref="T:System.Security.Cryptography.MACTripleDES" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d84b4-112"><see cref="T:System.Security.Cryptography.MACTripleDES" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d84b4-113">このコンストラクターは、の既定の<xref:System.Security.Cryptography.TripleDES>実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-113">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.MACTripleDES : byte[] -&gt; System.Security.Cryptography.MACTripleDES" Usage="new System.Security.Cryptography.MACTripleDES rgbKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="d84b4-114"><see cref="T:System.Security.Cryptography.MACTripleDES" /> 暗号化の共有キー。</span><span class="sxs-lookup"><span data-stu-id="d84b4-114">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span></span></param>
        <summary><span data-ttu-id="d84b4-115">キー データを指定して、<see cref="T:System.Security.Cryptography.MACTripleDES" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d84b4-116">このコンストラクターは、の既定の<xref:System.Security.Cryptography.TripleDES>実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-116">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span> <span data-ttu-id="d84b4-117">パラメーター `rgbKey`の長さは、16バイトまたは24バイトである必要があります。</span><span class="sxs-lookup"><span data-stu-id="d84b4-117">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d84b4-118">このコンストラクターの使用方法の例については、 <xref:System.Security.Cryptography.MACTripleDES>クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d84b4-118">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.MACTripleDES> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d84b4-119"><paramref name="rgbKey" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d84b4-119">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (string strTripleDES, byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strTripleDES, unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strTripleDES As String, rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(System::String ^ strTripleDES, cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.MACTripleDES : string * byte[] -&gt; System.Security.Cryptography.MACTripleDES" Usage="new System.Security.Cryptography.MACTripleDES (strTripleDES, rgbKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="strTripleDES" Type="System.String" />
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strTripleDES"><span data-ttu-id="d84b4-120">使用する <see cref="T:System.Security.Cryptography.TripleDES" /> 実装の名前。</span><span class="sxs-lookup"><span data-stu-id="d84b4-120">The name of the <see cref="T:System.Security.Cryptography.TripleDES" /> implementation to use.</span></span></param>
        <param name="rgbKey"><span data-ttu-id="d84b4-121"><see cref="T:System.Security.Cryptography.MACTripleDES" /> 暗号化の共有キー。</span><span class="sxs-lookup"><span data-stu-id="d84b4-121">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span></span></param>
        <summary><span data-ttu-id="d84b4-122">指定したキー データと <see cref="T:System.Security.Cryptography.TripleDES" /> の指定した実装を使用して、<see cref="T:System.Security.Cryptography.MACTripleDES" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data and using the specified implementation of <see cref="T:System.Security.Cryptography.TripleDES" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d84b4-123">パラメーターは、 <xref:System.Security.Cryptography.TripleDES>実装の種類のフレンドリ名です。 `strTripleDES`</span><span class="sxs-lookup"><span data-stu-id="d84b4-123">The `strTripleDES` parameter is the friendly name of the <xref:System.Security.Cryptography.TripleDES> implementation type.</span></span> <span data-ttu-id="d84b4-124">既定の実装は、TripleDES です。</span><span class="sxs-lookup"><span data-stu-id="d84b4-124">The default implementation is System.Security.Cryptography.TripleDES.</span></span>  
  
 <span data-ttu-id="d84b4-125">パラメーター `rgbKey`の長さは、16バイトまたは24バイトである必要があります。</span><span class="sxs-lookup"><span data-stu-id="d84b4-125">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d84b4-126"><paramref name="rgbKey" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d84b4-126">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="d84b4-127"><paramref name="strTripleDES" /> パラメーターが、<see cref="T:System.Security.Cryptography.TripleDES" /> 実装の有効な名前ではありません。</span><span class="sxs-lookup"><span data-stu-id="d84b4-127">The <paramref name="strTripleDES" /> parameter is not a valid name of a <see cref="T:System.Security.Cryptography.TripleDES" /> implementation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="mACTripleDES.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d84b4-128"><see cref="M:System.IDisposable.Dispose" /> の実装からメソッドを呼び出した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d84b4-128"><see langword="true" /> if the method is called from an <see cref="M:System.IDisposable.Dispose" /> implementation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d84b4-129"><see cref="T:System.Security.Cryptography.MACTripleDES" /> インスタンスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-129">Releases the resources used by the <see cref="T:System.Security.Cryptography.MACTripleDES" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d84b4-130">このメソッドは、パブリック`Dispose()`メソッド`Finalize`とメソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d84b4-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="d84b4-131">`Dispose()`disposing パラメーターを`Dispose(Boolean)`に`true`設定して、保護されたメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="d84b4-132">`Finalize`disposing `Dispose`をに設定し`false`てを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="d84b4-133">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Security.Cryptography.MACTripleDES> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.MACTripleDES> references.</span></span> <span data-ttu-id="d84b4-134">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d84b4-135">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d84b4-135">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d84b4-136">をオーバーライド<see langword="Dispose(Boolean)" />する場合は、以前にを<see langword="Dispose" />呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="d84b4-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="d84b4-137">を実装<see langword="Dispose(Boolean)" />する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d84b4-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="d84b4-138"><see langword="Dispose" /> および <see langword="Finalize" /> の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d84b4-138">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MACTripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MACTripleDES ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="mACTripleDES.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d84b4-139"><see cref="T:System.Security.Cryptography.MACTripleDES" /> によって使用されているアンマネージ リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-139">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.MACTripleDES" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgbData, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgbData As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="mACTripleDES.HashCore (rgbData, ibStart, cbSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgbData"><span data-ttu-id="d84b4-140">入力データ。</span><span class="sxs-lookup"><span data-stu-id="d84b4-140">The input data.</span></span></param>
        <param name="ibStart"><span data-ttu-id="d84b4-141">バイト配列内のデータの使用開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="d84b4-141">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cbSize"><span data-ttu-id="d84b4-142">配列内でデータとして使用されるバイトの数。</span><span class="sxs-lookup"><span data-stu-id="d84b4-142">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="d84b4-143">MAC (Message Authentication Code) を計算するために、オブジェクトに書き込まれたデータを <see cref="T:System.Security.Cryptography.TripleDES" /> 暗号化プログラムにルーティングします。</span><span class="sxs-lookup"><span data-stu-id="d84b4-143">Routes data written to the object into the <see cref="T:System.Security.Cryptography.TripleDES" /> encryptor for computing the Message Authentication Code (MAC).</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="mACTripleDES.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d84b4-144">すべてのデータがオブジェクトに書き込まれた後に、計算された MAC (Message Authentication Code) を返します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-144">Returns the computed Message Authentication Code (MAC) after all data is written to the object.</span></span></summary>
        <returns><span data-ttu-id="d84b4-145">計算された MAC。</span><span class="sxs-lookup"><span data-stu-id="d84b4-145">The computed MAC.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d84b4-146">この値は、すべてのデータが書き込まれた後にのみ読み取ることができ、後でさらにデータを書き込むことはできません。</span><span class="sxs-lookup"><span data-stu-id="d84b4-146">You can read this value only after all data is written, and you cannot write more data afterward.</span></span> <span data-ttu-id="d84b4-147">データの個々のセグメント<xref:System.Security.Cryptography.MACTripleDES>に対しての新しいインスタンスを作成し、そのデータの MAC を計算します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-147">Create a new instance of <xref:System.Security.Cryptography.MACTripleDES> for each separate segment of data to compute the MAC for that data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="mACTripleDES.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d84b4-148"><see cref="T:System.Security.Cryptography.MACTripleDES" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-148">Initializes an instance of <see cref="T:System.Security.Cryptography.MACTripleDES" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d84b4-149">このメソッドは、クラスのパラメーターなしのコンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-149">This method calls the parameterless constructor for the class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d84b4-150">ハッシュ アルゴリズムで使用する埋め込みモードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d84b4-150">Gets or sets the padding mode used in the hashing algorithm.</span></span></summary>
        <value><span data-ttu-id="d84b4-151">ハッシュ アルゴリズムで使用する埋め込みモード。</span><span class="sxs-lookup"><span data-stu-id="d84b4-151">The padding mode used in the hashing algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d84b4-152">ほとんどのプレーンテキストメッセージは、ブロックを完全に埋めるバイト数で構成されていません。</span><span class="sxs-lookup"><span data-stu-id="d84b4-152">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="d84b4-153">多くの場合、最後のブロックを埋めるために必要なバイト数が不足しています。</span><span class="sxs-lookup"><span data-stu-id="d84b4-153">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="d84b4-154">これが発生すると、テキストに埋め込み文字列が追加されます。</span><span class="sxs-lookup"><span data-stu-id="d84b4-154">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="d84b4-155">たとえば、ブロック長が64ビットで、最後のブロックに40ビットだけが含まれている場合、24ビットの埋め込みが追加されます。</span><span class="sxs-lookup"><span data-stu-id="d84b4-155">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="d84b4-156">特定<xref:System.Security.Cryptography.PaddingMode>のモードの説明については、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d84b4-156">See <xref:System.Security.Cryptography.PaddingMode> for a description of specific modes.</span></span>  
  
 <span data-ttu-id="d84b4-157">このフィールドには、プロパティ<xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>を使用してアクセスします。</span><span class="sxs-lookup"><span data-stu-id="d84b4-157">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d84b4-158">埋め込みモードは無効なため、プロパティを設定できません。</span><span class="sxs-lookup"><span data-stu-id="d84b4-158">The property cannot be set because the padding mode is invalid.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="d84b4-159">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="d84b4-159">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
