<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RNGCryptoServiceProvider.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50d90389deb17e5813ec2616890e986e3a707ddfa.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d90389deb17e5813ec2616890e986e3a707ddfa</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>Implements a cryptographic Random Number Generator (RNG) using the implementation provided by the cryptographic service provider (CSP).</source>
          <target state="translated">暗号化サービス プロバイダー (CSP : Cryptographic Service Provider) によって提供された実装を使用して、暗号乱数ジェネレーター (RNG : Random Number Generator) を実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">この型は、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">型の直接 dispose を呼び出す、<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>メソッドで、 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>ブロックします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">直接ことのない破棄する場合など、言語コンストラクトを使用して<ph id="ph1">`using`</ph>(C# の場合) または<ph id="ph2">`Using`</ph>(Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスに関するトピック。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>The following code example shows how to create a random number with the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">次のコード例のランダムな数値を作成する方法を示しています、<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>This type is thread safe.</source>
          <target state="translated">この型はスレッド セーフです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.RNGCryptoServiceProvider">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor">
          <source>The following code example shows how to create a random number with the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">次のコード例のランダムな数値を作成する方法を示しています、<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>A byte array.</source>
          <target state="translated">バイト配列。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>This value is ignored.</source>
          <target state="translated">この値は無視されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>This method does not directly initialize the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">このメソッドを直接初期化しない、<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])">
          <source>Calling this method is equivalent to calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%28System.Security.Cryptography.CspParameters%29?title=RNGCryptoServiceProvider(CspParameters)&gt;</ph> constructor and passing <ph id="ph2">`null`</ph>.</source>
          <target state="translated">呼び出すことと同じではこのメソッドを呼び出す、<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%28System.Security.Cryptography.CspParameters%29?title=RNGCryptoServiceProvider(CspParameters)&gt;</ph>コンス トラクターを渡して<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>The parameters to pass to the cryptographic service provider (CSP).</source>
          <target state="translated">暗号化サービス プロバイダー (CSP) に渡すパラメーター。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class with the specified parameters.</source>
          <target state="translated">指定したパラメーターを使用して、<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>The string input.</source>
          <target state="translated">文字列入力。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RNGCryptoServiceProvider" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>This method does not directly initialize the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">このメソッドを直接初期化しない、<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)">
          <source>Calling this method is equivalent to calling the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%28System.Security.Cryptography.CspParameters%29?title=RNGCryptoServiceProvider(CspParameters)&gt;</ph> constructor and passing <ph id="ph2">`null`</ph>.</source>
          <target state="translated">呼び出すことと同じではこのメソッドを呼び出す、<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider.%23ctor%28System.Security.Cryptography.CspParameters%29?title=RNGCryptoServiceProvider(CspParameters)&gt;</ph>コンス トラクターを渡して<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>The array to fill with a cryptographically strong sequence of random values.</source>
          <target state="translated">暗号化に使用するランダムな値の厳密なシーケンスを格納する配列。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>Fills an array of bytes with a cryptographically strong sequence of random values.</source>
          <target state="translated">バイト配列に、暗号化に使用するランダムな値の厳密なシーケンスを設定します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>The length of the byte array determines how many cryptographically strong random bytes are produced.</source>
          <target state="translated">バイト配列の長さは、生成される数の暗号強度が高いランダム バイトを決定します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>This method is thread safe.</source>
          <target state="translated">このメソッドは、スレッド セーフです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>The following code example shows how to create a random number with the <ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph> class.</source>
          <target state="translated">次のコード例のランダムな数値を作成する方法を示しています、<ph id="ph1">&lt;xref:System.Security.Cryptography.RNGCryptoServiceProvider&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">暗号化サービス プロバイダー (CSP) を取得できません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>The array to fill with a cryptographically strong sequence of random nonzero values.</source>
          <target state="translated">暗号化に使用するランダムな 0 以外の値の厳密なシーケンスを格納する配列。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>Fills an array of bytes with a cryptographically strong sequence of random nonzero values.</source>
          <target state="translated">バイト配列に、暗号化に使用するランダムな 0 以外の値の厳密なシーケンスを設定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>The length of the byte array determines how many cryptographically strong random nonzero bytes are produced.</source>
          <target state="translated">バイト配列の長さは、暗号強度が高いランダムな 0 以外バイト数が生成されるを決定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>The following code example creates a random sequence of 100 nonzero bytes and stores it in <ph id="ph1">`random`</ph>.</source>
          <target state="translated">次のコード例は、0 以外の値の 100 バイトのランダム シーケンスを作成しに格納<ph id="ph1">`random`</ph>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">暗号化サービス プロバイダー (CSP) を取得できません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>