<Type Name="HMAC" FullName="System.Security.Cryptography.HMAC">
  <Metadata><Meta Name="ms.openlocfilehash" Value="edd09a05f4067de8ace8b6add31d24dedfac36b5" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58712193" /></Metadata><TypeSignature Language="C#" Value="public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HMAC extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMAC" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HMAC&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMAC abstract : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type HMAC = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ffce3-101">ハッシュ ベース メッセージ認証コード (HMAC) のすべての実装の派生元にする必要のある抽象クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffce3-102">送信者と受信者の共有シークレット キーを使用すると、安全でないチャネル経由で送信されたメッセージを改ざんするかどうかを判断するハッシュ ベース メッセージ認証コード (HMAC) を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-102">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="ffce3-103">送信者は、元のデータのハッシュ値を計算し、1 つのメッセージとして、元のデータと、HMAC の両方を送信します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-103">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="ffce3-104">受信アダプターは受信メッセージのハッシュ値を再計算し、計算されたハッシュ値が送信されたハッシュ値と一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-104">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="ffce3-105">HMAC は、反復的な暗号化ハッシュ関数と、MD5 または sha-1 などの秘密の共有キーと組み合わせて使用できます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-105">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="ffce3-106">HMAC 暗号の強度は、基になるハッシュ関数のプロパティに依存します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-106">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="ffce3-107">メッセージを変更し、適切なハッシュ値を再現する秘密キーの知識が必要なために、データや、ハッシュ値を変更の結果は一致しません場合。</span><span class="sxs-lookup"><span data-stu-id="ffce3-107">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="ffce3-108">そのため、元と計算されたハッシュ値が一致したメッセージが認証されます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-108">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="ffce3-109">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="ffce3-109">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HMAC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffce3-110"><see cref="T:System.Security.Cryptography.HMAC" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int BlockSizeValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSizeValue : int with get, set" Usage="System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffce3-111">ハッシュ値で使用するブロック サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-111">Gets or sets the block size to use in the hash value.</span></span></summary>
        <value><span data-ttu-id="ffce3-112">ハッシュ値で使用するブロック サイズ。</span><span class="sxs-lookup"><span data-stu-id="ffce3-112">The block size to use in the hash value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffce3-113">ハッシュ ベース メッセージ認証コード (HMAC) は、ハッシュ関数を使用して、データ ブロックの基本的な圧縮関数を反復処理するデータはハッシュされています。</span><span class="sxs-lookup"><span data-stu-id="ffce3-113">A Hash-based Message Authentication Code (HMAC) uses a hash function where data is hashed by iterating a basic compression function on blocks of data.</span></span> <span data-ttu-id="ffce3-114"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> このようなブロックのバイト サイズです。</span><span class="sxs-lookup"><span data-stu-id="ffce3-114"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> is the byte size of such a block.</span></span> <span data-ttu-id="ffce3-115">その値は、64 バイトです。</span><span class="sxs-lookup"><span data-stu-id="ffce3-115">Its value is 64 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ffce3-116">ハッシュ ベース メッセージ認証コード (<see cref="T:System.Security.Cryptography.HMAC" />) の実装のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-116">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffce3-117">ハッシュ ベース メッセージ認証コード (HMAC) の既定の実装のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-117">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="ffce3-118">[&lt;cryptoClass&gt; 要素](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md)を使用して既定の設定が変更されていない限り、新しい SHA-1 のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ffce3-118">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffce3-119">既定では、このオーバー ロードは、HMAC の sha-1 の実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-119">By default, this overload uses the SHA-1 implementation of HMAC.</span></span> <span data-ttu-id="ffce3-120">別の実装を指定する場合を使用して、<xref:System.Security.Cryptography.HMAC.Create%28System.String%29>オーバー ロードを代わりに、アルゴリズムの名前を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-120">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithmName As String) As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create(System::String ^ algorithmName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create algorithmName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="algorithmName"><span data-ttu-id="ffce3-121">使用する HMAC 実装。</span><span class="sxs-lookup"><span data-stu-id="ffce3-121">The HMAC implementation to use.</span></span> <span data-ttu-id="ffce3-122"><paramref name="algorithmName" /> パラメーターの有効値、およびそれらの割り当て先のアルゴリズムを次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-122">The following table shows the valid values for the <paramref name="algorithmName" /> parameter and the algorithms they map to.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ffce3-123">パラメーター値</span><span class="sxs-lookup"><span data-stu-id="ffce3-123">Parameter value</span></span> 
 </term><description> <span data-ttu-id="ffce3-124">は</span><span class="sxs-lookup"><span data-stu-id="ffce3-124">Implements</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ffce3-125">System.Security.Cryptography.HMAC</span><span class="sxs-lookup"><span data-stu-id="ffce3-125">System.Security.Cryptography.HMAC</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="ffce3-126">System.Security.Cryptography.KeyedHashAlgorithm</span><span class="sxs-lookup"><span data-stu-id="ffce3-126">System.Security.Cryptography.KeyedHashAlgorithm</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="ffce3-127">HMACMD5</span><span class="sxs-lookup"><span data-stu-id="ffce3-127">HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="ffce3-128">System.Security.Cryptography.HMACMD5</span><span class="sxs-lookup"><span data-stu-id="ffce3-128">System.Security.Cryptography.HMACMD5</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACMD5" /></description></item><item><term> <span data-ttu-id="ffce3-129">HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="ffce3-129">HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="ffce3-130">System.Security.Cryptography.HMACRIPEMD160</span><span class="sxs-lookup"><span data-stu-id="ffce3-130">System.Security.Cryptography.HMACRIPEMD160</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACRIPEMD160" /></description></item><item><term> <span data-ttu-id="ffce3-131">HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="ffce3-131">HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="ffce3-132">System.Security.Cryptography.HMACSHA1</span><span class="sxs-lookup"><span data-stu-id="ffce3-132">System.Security.Cryptography.HMACSHA1</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA1" /></description></item><item><term> <span data-ttu-id="ffce3-133">HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="ffce3-133">HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="ffce3-134">System.Security.Cryptography.HMACSHA256</span><span class="sxs-lookup"><span data-stu-id="ffce3-134">System.Security.Cryptography.HMACSHA256</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA256" /></description></item><item><term> <span data-ttu-id="ffce3-135">HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="ffce3-135">HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="ffce3-136">System.Security.Cryptography.HMACSHA384</span><span class="sxs-lookup"><span data-stu-id="ffce3-136">System.Security.Cryptography.HMACSHA384</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA384" /></description></item><item><term> <span data-ttu-id="ffce3-137">HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="ffce3-137">HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="ffce3-138">System.Security.Cryptography.HMACSHA512</span><span class="sxs-lookup"><span data-stu-id="ffce3-138">System.Security.Cryptography.HMACSHA512</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.HMACSHA512" /></description></item><item><term> <span data-ttu-id="ffce3-139">MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="ffce3-139">MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item><item><term> <span data-ttu-id="ffce3-140">System.Security.Cryptography.MACTripleDES</span><span class="sxs-lookup"><span data-stu-id="ffce3-140">System.Security.Cryptography.MACTripleDES</span></span> 
 </term><description><see cref="T:System.Security.Cryptography.MACTripleDES" /></description></item></list></param>
        <summary><span data-ttu-id="ffce3-141">ハッシュ ベース メッセージ認証コード (HMAC) の指定した実装のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-141">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <returns><span data-ttu-id="ffce3-142">指定した HMAC 実装の新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ffce3-142">A new instance of the specified HMAC implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffce3-143">HMAC は、数など、MD5、sha-1、sha-256、および RIPEMD160 のハッシュ アルゴリズムをサポートします。</span><span class="sxs-lookup"><span data-stu-id="ffce3-143">HMAC supports a number of hash algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="ffce3-144">完全な一覧で、サポートされている値を参照してください、`algorithmName`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="ffce3-144">For the full list, see the supported values for the `algorithmName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hMAC.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ffce3-145">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ffce3-145"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ffce3-146">キー変更が有効な場合、<see cref="T:System.Security.Cryptography.HMAC" /> クラスによって使用されているアンマネージド リソースを解放します。また、オプションで、マネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-146">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffce3-147">このメソッドは、パブリック`Dispose()`メソッドと`Finalize`メソッド。</span><span class="sxs-lookup"><span data-stu-id="ffce3-147">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="ffce3-148">`Dispose()` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-148">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ffce3-149">`Finalize` 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-149">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ffce3-150">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Security.Cryptography.HMAC> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-150">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HMAC> references.</span></span> <span data-ttu-id="ffce3-151">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-151">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ffce3-152">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-152">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="ffce3-153">オーバーライドするときに<see langword="Dispose(Boolean)" />を以前の呼び出しで破棄されたオブジェクトを参照しないように注意、<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-153">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="ffce3-154">実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-154">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="ffce3-155">詳細については<see langword="Dispose" />と<see langword="Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-155">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hMAC.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="hMAC.HashCore (rgb, ib, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="ffce3-156">入力データ。</span><span class="sxs-lookup"><span data-stu-id="ffce3-156">The input data.</span></span></param>
        <param name="ib"><span data-ttu-id="ffce3-157">バイト配列内のデータの使用開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="ffce3-157">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cb"><span data-ttu-id="ffce3-158">配列内でデータとして使用されるバイトの数。</span><span class="sxs-lookup"><span data-stu-id="ffce3-158">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="ffce3-159">派生クラスでオーバーライドされると、ハッシュ値を計算するために、オブジェクトに書き込まれたデータを既定の <see cref="T:System.Security.Cryptography.HMAC" /> ハッシュ アルゴリズムにルーティングします。</span><span class="sxs-lookup"><span data-stu-id="ffce3-159">When overridden in a derived class, routes data written to the object into the default <see cref="T:System.Security.Cryptography.HMAC" /> hash algorithm for computing the hash value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffce3-160">このメソッドは、アプリケーション コードでは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ffce3-160">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="ffce3-161">この抽象メソッドでは、ハッシュ計算を実行します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-161">This abstract method performs the hash computation.</span></span> <span data-ttu-id="ffce3-162">暗号ストリーム オブジェクトに対するすべての書き込みは、この方法でデータを渡します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-162">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="ffce3-163">データのブロックごとに、このメソッドは、データ ストリームの末尾に適切なハッシュ値が返されるようにハッシュ オブジェクトの状態を更新します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-163">For each block of data, this method updates the state of the hash object so that a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="ffce3-164">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="ffce3-164">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="hMAC.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffce3-165">派生クラスでオーバーライドされると、暗号ストリーム オブジェクトによって最後のデータが処理された後に、ハッシュ計算を終了します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-165">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span></span></summary>
        <returns><span data-ttu-id="ffce3-166">バイト配列にした計算済みのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="ffce3-166">The computed hash code in a byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffce3-167">このメソッドは、アプリケーション コードでは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ffce3-167">This method is not called by application code.</span></span> <span data-ttu-id="ffce3-168">このメソッドは、任意の部分計算を終了し、データ ストリームの適切なハッシュ値を返します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-168">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="ffce3-169">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="ffce3-169">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.Security.Cryptography.HMAC.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffce3-170">ハッシュに使用するハッシュ アルゴリズムの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-170">Gets or sets the name of the hash algorithm to use for hashing.</span></span></summary>
        <value><span data-ttu-id="ffce3-171">ハッシュ アルゴリズムの名前。</span><span class="sxs-lookup"><span data-stu-id="ffce3-171">The name of the hash algorithm.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ffce3-172">現在のハッシュ アルゴリズムは変更できません。</span><span class="sxs-lookup"><span data-stu-id="ffce3-172">The current hash algorithm cannot be changed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="hMAC.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ffce3-173"><see cref="T:System.Security.Cryptography.HMAC" /> の既定の実装のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-173">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffce3-174">送信者と受信者の共有シークレット キーを使用すると、安全でないチャネル経由で送信されたメッセージを改ざんするかどうかを判断するハッシュ ベース メッセージ認証コード (HMAC) を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-174">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="ffce3-175">送信者は、元のデータのハッシュ値を計算し、1 つのメッセージとして、元のデータと、HMAC の両方を送信します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-175">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="ffce3-176">受信アダプターは受信メッセージのハッシュ値を再計算し、計算されたハッシュ値が送信されたハッシュ値と一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-176">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="ffce3-177">HMAC は、反復的な暗号化ハッシュ関数と、MD5 または sha-1 などの秘密の共有キーと組み合わせて使用できます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-177">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="ffce3-178">HMAC 暗号の強度は、基になるハッシュ関数のプロパティに依存します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-178">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="ffce3-179">メッセージを変更し、適切なハッシュ値を再現する秘密キーの知識が必要なために、データや、ハッシュ値の変更は一致しない場合になります。</span><span class="sxs-lookup"><span data-stu-id="ffce3-179">Any change to the data or the hash value will result in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="ffce3-180">そのため、元と計算されたハッシュ値が一致したメッセージが認証されます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-180">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.HMAC.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ffce3-181">ハッシュ アルゴリズムで使用するキーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-181">Gets or sets the key to use in the hash algorithm.</span></span></summary>
        <value><span data-ttu-id="ffce3-182">ハッシュ アルゴリズムで使用するキー。</span><span class="sxs-lookup"><span data-stu-id="ffce3-182">The key to use in the hash algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ffce3-183">このプロパティは、キー付きハッシュ アルゴリズムのキーです。</span><span class="sxs-lookup"><span data-stu-id="ffce3-183">This property is the key for the keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="ffce3-184">送信者と受信者の共有シークレット キーを使用すると、安全でないチャネル経由で送信されたメッセージを改ざんするかどうかを判断するハッシュ ベース メッセージ認証コード (HMAC) を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-184">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="ffce3-185">送信者は、元のデータのハッシュ値を計算し、1 つのメッセージとして、元のデータと、HMAC の両方を送信します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-185">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="ffce3-186">受信アダプターは受信メッセージのハッシュ値を再計算し、計算されたハッシュ値が送信されたハッシュ値と一致することを確認します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-186">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="ffce3-187">HMAC は、反復的な暗号化ハッシュ関数と、MD5 または sha-1 などの秘密の共有キーと組み合わせて使用できます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-187">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="ffce3-188">HMAC 暗号の強度は、基になるハッシュ関数のプロパティに依存します。</span><span class="sxs-lookup"><span data-stu-id="ffce3-188">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="ffce3-189">メッセージを変更し、適切なハッシュ値を再現する秘密キーの知識が必要なために、データや、ハッシュ値を変更の結果は一致しません場合。</span><span class="sxs-lookup"><span data-stu-id="ffce3-189">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="ffce3-190">そのため、元と計算されたハッシュ値が一致したメッセージが認証されます。</span><span class="sxs-lookup"><span data-stu-id="ffce3-190">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="ffce3-191">ハッシュが開始された後に、<see cref="P:System.Security.Cryptography.HMAC.Key" /> プロパティを変更しようとしました。</span><span class="sxs-lookup"><span data-stu-id="ffce3-191">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="ffce3-192">暗号化サービス</span><span class="sxs-lookup"><span data-stu-id="ffce3-192">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryHashFinal : Span&lt;byte&gt; *  -&gt; bool" Usage="hMAC.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>