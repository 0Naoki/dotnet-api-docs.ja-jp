<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MaskGenerationMethod.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fa9d1456d4bcc5f87726367673e0e7d5859fce55.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa9d1456d4bcc5f87726367673e0e7d5859fce55</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.MaskGenerationMethod">
          <source>Represents the abstract class from which all mask generator algorithms must derive.</source>
          <target state="translated">すべてのマスク ジェネレーター アルゴリズムの派生元となる抽象クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MaskGenerationMethod">
          <source>Derived classes of <ph id="ph1">&lt;xref:System.Security.Cryptography.MaskGenerationMethod&gt;</ph> compute masks that are used in key exchange algorithms such as Optimal Asymmetric Encryption Padding (OAEP).</source>
          <target state="translated">派生クラスの<ph id="ph1">&lt;xref:System.Security.Cryptography.MaskGenerationMethod&gt;</ph>キー交換アルゴリズムなど OAEP Optimal Asymmetric Encryption Padding () で使用されているマスクを計算します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MaskGenerationMethod">
          <source>This class is used by implementations of key exchange algorithms only for mask generation.</source>
          <target state="translated">このクラスは、マスクの生成にのみキー交換アルゴリズムの実装によって使用されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MaskGenerationMethod">
          <source>Application code does not use this class directly.</source>
          <target state="translated">アプリケーション コードでは、このクラスを直接使用しません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.MaskGenerationMethod">
          <source>The following code example demonstrates how to derive from the <ph id="ph1">&lt;xref:System.Security.Cryptography.MaskGenerationMethod&gt;</ph> class.</source>
          <target state="translated">派生する次のコード例には、<ph id="ph1">&lt;xref:System.Security.Cryptography.MaskGenerationMethod&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MaskGenerationMethod.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MaskGenerationMethod" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MaskGenerationMethod" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)">
          <source>The random seed to use to compute the mask.</source>
          <target state="translated">マスクの計算に使用するランダム シード。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)">
          <source>The length of the generated mask in bytes.</source>
          <target state="translated">生成されるマスクの長さ (バイト単位)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)">
          <source>When overridden in a derived class, generates a mask with the specified length using the specified random seed.</source>
          <target state="translated">派生クラスでオーバーライドされるときに、指定したランダム シードを使用して、指定した長さのマスクを生成します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)">
          <source>A randomly generated mask whose length is equal to the <ph id="ph1">&lt;paramref name="cbReturn" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cbReturn" /&gt;</ph> パラメーターと等しい長さの、ランダムに生成されたマスク。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Security.Cryptography.MaskGenerationMethod.GenerateMask%2A&gt;</ph> to create and return a mask using the specified seed.</source>
          <target state="translated">次のコード例をオーバーライドする方法を示しています、<ph id="ph1">&lt;xref:System.Security.Cryptography.MaskGenerationMethod.GenerateMask%2A&gt;</ph>を作成し、指定されたシードを使用して、マスクを返します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.MaskGenerationMethod&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.Security.Cryptography.MaskGenerationMethod&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)">
          <source>System.Security.Cryptography.MaskGenerationMethod#3</source>
          <target state="translated">System.Security.Cryptography.MaskGenerationMethod#3</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>