<Type Name="CryptoAPITransform" FullName="System.Security.Cryptography.CryptoAPITransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e60ff12f49757a05af66c83547059344283440e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39960981" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CryptoAPITransform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CryptoAPITransform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CryptoAPITransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CryptoAPITransform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoAPITransform sealed : System::Security::Cryptography::ICryptoTransform" />
  <TypeSignature Language="F#" Value="type CryptoAPITransform = class&#xA;    interface ICryptoTransform&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ae8c0-101">データの暗号変換を実行します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae8c0-101">Performs a cryptographic transformation of data.</span>
      </span>
      <span data-ttu-id="ae8c0-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae8c0-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae8c0-103">次のコード例は、のメンバーを使用する方法を示します、<xref:System.Security.Cryptography.CryptoAPITransform>クラス。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-103">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanReuseTransform { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReuseTransform : bool" Usage="System.Security.Cryptography.CryptoAPITransform.CanReuseTransform" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae8c0-104">現在の変換を再利用できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-104">Gets a value indicating whether the current transform can be reused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae8c0-105">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-105">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae8c0-106">次のコード例を呼び出す方法を示します、<xref:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform%2A>プロパティを現在の変換を再利用できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-106">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.CanReuseTransform%2A> property to determine if the current transform can be reused.</span></span> <span data-ttu-id="ae8c0-107">このコード例が示されている例の一部、<xref:System.Security.Cryptography.CryptoAPITransform>クラス。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-107">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTransformMultipleBlocks : bool" Usage="System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae8c0-108">複数のブロックを変換できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-108">Gets a value indicating whether multiple blocks can be transformed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae8c0-109">複数のブロックを変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-109">
              <see langword="true" /> if multiple blocks can be transformed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae8c0-110">次のコード例を呼び出す方法を示します、<xref:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks%2A>プロパティのかどうかは、複数のブロックを変換できます。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-110">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks%2A> property to determine if multiple blocks can be transformed.</span></span> <span data-ttu-id="ae8c0-111">このコード例が示されている例の一部、<xref:System.Security.Cryptography.CryptoAPITransform>クラス。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-111">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="cryptoAPITransform.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae8c0-112">
            <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> メソッドによって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-112">Releases all resources used by the <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae8c0-113">このメソッドは、単純な呼び出しを<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-113">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ae8c0-114">呼び出す`Dispose`によって使用されるリソースの使用、<xref:System.Security.Cryptography.CryptoAPITransform>他の目的で再割り当てします。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-114">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.CryptoAPITransform> to be reallocated for other purposes.</span></span> <span data-ttu-id="ae8c0-115">詳細については`Dispose`を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)します。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-115">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae8c0-116">次のコード例を呼び出す方法を示します、<xref:System.Security.Cryptography.CryptoAPITransform.Clear%2A>を現在の変換で使用されるリソースを解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-116">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.Clear%2A> method to release the resources used by the current transform.</span></span> <span data-ttu-id="ae8c0-117">このコード例が示されている例の一部、<xref:System.Security.Cryptography.CryptoAPITransform>クラス。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-117">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cryptoAPITransform.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae8c0-118">
            <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-118">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae8c0-119">`Dispose` を使い終わったら <xref:System.Security.Cryptography.CryptoAPITransform> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-119">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.CryptoAPITransform>.</span></span> <span data-ttu-id="ae8c0-120">`Dispose` メソッドによって、<xref:System.Security.Cryptography.CryptoAPITransform> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-120">The `Dispose` method leaves the <xref:System.Security.Cryptography.CryptoAPITransform> in an unusable state.</span></span> <span data-ttu-id="ae8c0-121">呼び出した後`Dispose`へのすべての参照を解放する必要があります、<xref:System.Security.Cryptography.CryptoAPITransform>ガベージ コレクターがメモリをクリアできるようにする、<xref:System.Security.Cryptography.CryptoAPITransform>によって占有されていた。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-121">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.CryptoAPITransform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.CryptoAPITransform> was occupying.</span></span>  
  
 <span data-ttu-id="ae8c0-122">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-122">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ae8c0-123">`Dispose` への最後の参照を解放する前に、必ず <xref:System.Security.Cryptography.CryptoAPITransform> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-123">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.CryptoAPITransform>.</span></span> <span data-ttu-id="ae8c0-124">そうしないと、ガベージ コレクターが <xref:System.Security.Cryptography.CryptoAPITransform> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-124">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.CryptoAPITransform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoAPITransform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoAPITransform ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoAPITransform.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBlockSize : int" Usage="System.Security.Cryptography.CryptoAPITransform.InputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae8c0-125">入力ブロック サイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-125">Gets the input block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae8c0-126">入力ブロック サイズ (バイト単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-126">The input block size in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae8c0-127">次のコード例を呼び出す方法を示します、<xref:System.Security.Cryptography.CryptoAPITransform.InputBlockSize%2A>入力ブロック サイズを取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-127">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.InputBlockSize%2A> property to retrieve the input block size.</span></span> <span data-ttu-id="ae8c0-128">このコード例が示されている例の一部、<xref:System.Security.Cryptography.CryptoAPITransform>クラス。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-128">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyHandle">
      <MemberSignature Language="C#" Value="public IntPtr KeyHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int KeyHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.KeyHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr KeyHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyHandle : nativeint" Usage="System.Security.Cryptography.CryptoAPITransform.KeyHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae8c0-129">キー ハンドルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-129">Gets the key handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae8c0-130">キー ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-130">The key handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ae8c0-131">アンマネージ コードを呼び出す機能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-131">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="ae8c0-132">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-132">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputBlockSize : int" Usage="System.Security.Cryptography.CryptoAPITransform.OutputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae8c0-133">出力ブロック サイズを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-133">Gets the output block size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae8c0-134">出力ブロック サイズ (バイト単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-134">The output block size in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae8c0-135">次のコード例を呼び出す方法を示します、<xref:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize%2A>出力ブロック サイズを取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-135">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.OutputBlockSize%2A> property to retrieve the output block size.</span></span> <span data-ttu-id="ae8c0-136">このコード例が示されている例の一部、<xref:System.Security.Cryptography.CryptoAPITransform>クラス。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-136">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="cryptoAPITransform.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae8c0-137">別の暗号化または復号化に使用できるように、<see cref="T:System.Security.Cryptography.CryptoAPITransform" /> の内部状態をリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-137">Resets the internal state of <see cref="T:System.Security.Cryptography.CryptoAPITransform" /> so that it can be used again to do a different encryption or decryption.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae8c0-138"><xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> TransformFinalBlock を呼び出すときに自動的に呼び出されるメソッド。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-138">The <xref:System.Security.Cryptography.CryptoAPITransform.Reset%2A> method is called automatically when you call TransformFinalBlock.</span></span> <span data-ttu-id="ae8c0-139">`Reset`とき、たとえば、暗号化された入力データのガベージし、暗号化を解除できませんが、メソッドは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-139">The `Reset` method is not called when, for example, the encrypted input data is garbage and cannot be decrypted.</span></span> <span data-ttu-id="ae8c0-140">この場合、例外をスローし、`Reset`は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-140">In this case, an exception is thrown and `Reset` is not called.</span></span> <span data-ttu-id="ae8c0-141">手動で呼び出すことができます、`Reset`ここではメソッドです。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-141">You can choose to manually call the `Reset` method in this case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberSignature Language="F#" Value="abstract member TransformBlock : byte[] * int * int * byte[] * int -&gt; int&#xA;override this.TransformBlock : byte[] * int * int * byte[] * int -&gt; int" Usage="cryptoAPITransform.TransformBlock (inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="ae8c0-142">操作の実行対象となる入力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-142">The input on which to perform the operation on.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="ae8c0-143">入力バイト配列内のデータの使用開始位置を示すオフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-143">The offset into the input byte array from which to begin using data from.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="ae8c0-144">データとして使用する入力バイト配列内のバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-144">The number of bytes in the input byte array to use as data.</span>
          </span>
        </param>
        <param name="outputBuffer">
          <span data-ttu-id="ae8c0-145">データを書き込む先の出力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-145">The output to which to write the data to.</span>
          </span>
        </param>
        <param name="outputOffset">
          <span data-ttu-id="ae8c0-146">データの書き込みの開始位置を示す出力バイト配列内のオフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-146">The offset into the output byte array from which to begin writing data from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae8c0-147">入力バイト配列の指定した領域の変換を計算し、結果として得られる変換を出力バイト配列の指定した領域にコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-147">Computes the transformation for the specified region of the input byte array and copies the resulting transformation to the specified region of the output byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae8c0-148">書き込むバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-148">The number of bytes written.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae8c0-149">次のコード例を呼び出す方法を示します、<xref:System.Security.Cryptography.CryptoAPITransform.TransformBlock%2A>メソッドからのバイト列を変換する`currentPosition`で、`sourceBytes`配列にバイトの書き込み、`targetBytes`配列。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-149">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.TransformBlock%2A> method to transform the bytes from `currentPosition` in the `sourceBytes` array, writing the bytes to the `targetBytes` array.</span></span> <span data-ttu-id="ae8c0-150">このコード例が示されている例の一部、<xref:System.Security.Cryptography.CryptoAPITransform>クラス。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-150">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae8c0-151">
            <paramref name="inputBuffer" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-151">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ae8c0-152">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-152">-or-</span>
          </span>
          <span data-ttu-id="ae8c0-153">
            <paramref name="outputBuffer" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-153">The <paramref name="outputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ae8c0-154">入力バッファーの長さが、入力オフセットと入力カウントの合計値より小さい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-154">The length of the input buffer is less than the sum of the input offset and the input count.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ae8c0-155">
            <paramref name="inputOffset" /> が範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-155">
              <paramref name="inputOffset" /> is out of range.</span>
          </span>
          <span data-ttu-id="ae8c0-156">このパラメーターには、負数以外を指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-156">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="F#" Value="abstract member TransformFinalBlock : byte[] * int * int -&gt; byte[]&#xA;override this.TransformFinalBlock : byte[] * int * int -&gt; byte[]" Usage="cryptoAPITransform.TransformFinalBlock (inputBuffer, inputOffset, inputCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer">
          <span data-ttu-id="ae8c0-157">操作の実行対象となる入力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-157">The input on which to perform the operation on.</span>
          </span>
        </param>
        <param name="inputOffset">
          <span data-ttu-id="ae8c0-158">バイト配列内のデータの使用開始位置を示すオフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-158">The offset into the byte array from which to begin using data from.</span>
          </span>
        </param>
        <param name="inputCount">
          <span data-ttu-id="ae8c0-159">バイト配列内でデータとして使用されるバイトの数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-159">The number of bytes in the byte array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae8c0-160">指定したバイト配列の指定した領域の変換を計算します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-160">Computes the transformation for the specified region of the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae8c0-161">計算された変換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-161">The computed transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae8c0-162">次のコード例を呼び出す方法を示します、<xref:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock%2A>バイトの最後のブロックを変換するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-162">The following code example demonstrates how to call the <xref:System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock%2A> method to transform the final block of bytes.</span></span> <span data-ttu-id="ae8c0-163">このコード例が示されている例の一部、<xref:System.Security.Cryptography.CryptoAPITransform>クラス。</span><span class="sxs-lookup"><span data-stu-id="ae8c0-163">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.CryptoAPITransform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoAPITransform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae8c0-164">
            <paramref name="inputBuffer" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-164">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ae8c0-165">
            <paramref name="inputOffset" /> パラメーターが 0 未満。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-165">The <paramref name="inputOffset" /> parameter is less than zero.</span>
          </span>
          <span data-ttu-id="ae8c0-166">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-166">-or-</span>
          </span>
          <span data-ttu-id="ae8c0-167">
            <paramref name="inputCount" /> パラメーターが 0 未満。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-167">The <paramref name="inputCount" /> parameter is less than zero.</span>
          </span>
          <span data-ttu-id="ae8c0-168">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-168">-or-</span>
          </span>
          <span data-ttu-id="ae8c0-169">入力バッファーの長さが、入力オフセットと入力カウントの合計値より小さい値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-169">The length of the input buffer is less than the sum of the input offset and the input count.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ae8c0-170">
            <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" /> 埋め込みが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-170">The <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" /> padding is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ae8c0-171">
            <paramref name="inputOffset" /> パラメーターが範囲外です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-171">The <paramref name="inputOffset" /> parameter is out of range.</span>
          </span>
          <span data-ttu-id="ae8c0-172">このパラメーターには、負数以外を指定する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae8c0-172">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>