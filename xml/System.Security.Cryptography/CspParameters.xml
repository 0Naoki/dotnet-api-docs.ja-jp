<Type Name="CspParameters" FullName="System.Security.Cryptography.CspParameters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6a40a919cf421d510d9da51220f36892705ae3da" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30500666" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CspParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspParameters sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5ec29-101">暗号化の計算を実行する暗号化サービス プロバイダー (CSP) に渡されるパラメーターを格納します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ec29-101">Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations.</span>
      </span>
      <span data-ttu-id="5ec29-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ec29-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-103"><xref:System.Security.Cryptography.CspParameters>クラスは Microsoft 暗号化サービス プロバイダー (Csp) から、アンマネージ Microsoft Cryptography API (CAPI) を内部的に使用するマネージ暗号化クラスに渡すことができるパラメーターを表します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-103">The <xref:System.Security.Cryptography.CspParameters> class represents parameters that you can pass to managed cryptography classes that internally use Microsoft Cryptographic Service Providers (CSPs) from the unmanaged Microsoft Cryptography API (CAPI).</span></span> <span data-ttu-id="5ec29-104">"CryptoServiceProvider"で終わる名前を持つクラスは、対応する CSP のマネージ コード ラッパーです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-104">Classes with names ending in "CryptoServiceProvider" are managed code wrappers for the corresponding CSP.</span></span>  
  
 <span data-ttu-id="5ec29-105">使用して、<xref:System.Security.Cryptography.CspParameters>クラスを次を行うには。</span><span class="sxs-lookup"><span data-stu-id="5ec29-105">Use the <xref:System.Security.Cryptography.CspParameters> class to do the following:</span></span>  
  
-   <span data-ttu-id="5ec29-106">プロバイダーの種類を渡すことによって、特定の CSP を指定、<xref:System.Security.Cryptography.CspParameters.ProviderType>または<xref:System.Security.Cryptography.CspParameters.ProviderName>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-106">Specify a particular CSP by passing the provider type to the <xref:System.Security.Cryptography.CspParameters.ProviderType> or <xref:System.Security.Cryptography.CspParameters.ProviderName> property.</span></span>  <span data-ttu-id="5ec29-107">コンス トラクターのオーバー ロードを使用して CSP を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="5ec29-107">You can also specify a CSP using an overload of the constructor.</span></span>  
  
-   <span data-ttu-id="5ec29-108">暗号化キーを格納するキー コンテナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-108">Create a key container where you can store cryptographic keys.</span></span>  <span data-ttu-id="5ec29-109">キー コンテナーは、暗号化キーを永続化し、悪意のあるサード パーティからシークレットを保持するには、最も安全な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-109">Key containers provide the most secure way to persist cryptographic keys and keep them secret from malicious third parties.</span></span>  <span data-ttu-id="5ec29-110">キー コンテナーの作成の詳細については、次を参照してください。[する方法: キー コンテナーに非対称キーのストア](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)です。</span><span class="sxs-lookup"><span data-stu-id="5ec29-110">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
-   <span data-ttu-id="5ec29-111">非対称署名キーまたは非対称交換キーを使用して、作成するかどうかを指定して、<xref:System.Security.Cryptography.CspParameters.KeyNumber>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-111">Specify whether to create an asymmetric signature key or an asymmetric exchange key using the <xref:System.Security.Cryptography.CspParameters.KeyNumber> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ec29-112">次のコード例を使用して、キー コンテナーを作成、<xref:System.Security.Cryptography.CspParameters>クラスし、コンテナー キーを保存します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-112">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 <span data-ttu-id="5ec29-113">次のコード例では、 <xref:System.Security.Cryptography.CspParameters> Smart Card Cryptographic Service Provider を選択するクラス。</span><span class="sxs-lookup"><span data-stu-id="5ec29-113">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="5ec29-114">署名にし、スマート カードを使用してデータを検証します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-114">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-115">
            <see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-116">
            <see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-117">この形式の<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>を初期化、<xref:System.Security.Cryptography.CspParameters.ProviderType>フィールドの値を`24`、PROV_RSA_AES プロバイダーを指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-117">This form of <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> initializes the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to a value of `24`, which specifies the PROV_RSA_AES provider.</span></span>  <span data-ttu-id="5ec29-118">この既定のプロバイダーと互換性のある、<xref:System.Security.Cryptography.Aes>アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-118">This default provider is compatible with the <xref:System.Security.Cryptography.Aes> algorithm.</span></span>  
  
 <span data-ttu-id="5ec29-119">その他のプロバイダーの種類については、次を参照してください。、<xref:System.Security.Cryptography.CspParameters.ProviderType>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-119">For information about other provider types, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ec29-120">次のコード例を使用して、キー コンテナーを作成、<xref:System.Security.Cryptography.CspParameters>クラスし、コンテナー キーを保存します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-120">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">
          <span data-ttu-id="5ec29-121">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-121">A provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ec29-122">指定したプロバイダーの型コードで <see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-123">使用して、<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>数値の値を渡すことによって、プロバイダーの種類を指定するコンス トラクターは、そのプロバイダーを表します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-123">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="5ec29-124">既定のプロバイダーの種類を表す数値の値は、WinCrypt.h ヘッダー ファイルで定義されます。</span><span class="sxs-lookup"><span data-stu-id="5ec29-124">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="5ec29-125">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.RSA>アルゴリズムの値を渡します`1`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-125">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="5ec29-126">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.DSA>アルゴリズムの値を渡します`13`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-126">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="5ec29-127">その他のプロバイダー型の値については、次を参照してください。、<xref:System.Security.Cryptography.CspParameters.ProviderType>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-127">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="5ec29-128">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5ec29-128">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ec29-129">次のコード例を使用して、キー コンテナーを作成、<xref:System.Security.Cryptography.CspParameters>クラスし、コンテナー キーを保存します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-129">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">
          <span data-ttu-id="5ec29-130">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-130">A provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <param name="strProviderNameIn">
          <span data-ttu-id="5ec29-131">プロバイダー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-131">A provider name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ec29-132">指定したプロバイダーの型コードと名前で <see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-133">使用して、<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>プロバイダーの種類と名前を指定するコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-133">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type and name.</span></span>  
  
 <span data-ttu-id="5ec29-134">必要なプロバイダーの種類を表す数値を渡すことによって、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-134">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="5ec29-135">既定のプロバイダーの種類を表す数値の値は、WinCrypt.h ヘッダー ファイルで定義されます。</span><span class="sxs-lookup"><span data-stu-id="5ec29-135">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="5ec29-136">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.RSA>アルゴリズムの値を渡します`1`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-136">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="5ec29-137">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.DSA>アルゴリズムの値を渡します`13`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-137">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="5ec29-138">その他のプロバイダー型の値については、次を参照してください。、<xref:System.Security.Cryptography.CspParameters.ProviderType>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-138">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="5ec29-139">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5ec29-139">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ec29-140">次のコード例では、 <xref:System.Security.Cryptography.CspParameters> Smart Card Cryptographic Service Provider を選択するクラス。</span><span class="sxs-lookup"><span data-stu-id="5ec29-140">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="5ec29-141">署名にし、スマート カードを使用してデータを検証します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-141">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn, string strContainerNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn, System::String ^ strContainerNameIn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
        <Parameter Name="strContainerNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn">
          <span data-ttu-id="5ec29-142">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-142">The provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <param name="strProviderNameIn">
          <span data-ttu-id="5ec29-143">プロバイダー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-143">A provider name.</span>
          </span>
        </param>
        <param name="strContainerNameIn">
          <span data-ttu-id="5ec29-144">コンテナー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-144">A container name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ec29-145">指定したプロバイダーの型コードと名前、指定したコンテナー名を使って <see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-145">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name, and the specified container name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-146">使用して、<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>コンス トラクター、プロバイダーの種類、プロバイダー名、およびコンテナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-146">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type, a provider name, and a container name.</span></span>  
  
 <span data-ttu-id="5ec29-147">コンテナー名を使用すると、そのコンテナー内のキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-147">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="5ec29-148">必要なプロバイダーの種類を表す数値を渡すことによって、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-148">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="5ec29-149">既定のプロバイダーの種類を表す数値の値は、WinCrypt.h ヘッダー ファイルで定義されます。</span><span class="sxs-lookup"><span data-stu-id="5ec29-149">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="5ec29-150">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.RSA>アルゴリズムの値を渡します`1`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-150">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="5ec29-151">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.DSA>アルゴリズムの値を渡します`13`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-151">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="5ec29-152">その他のプロバイダー型の値については、次を参照してください。、<xref:System.Security.Cryptography.CspParameters.ProviderType>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-152">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="5ec29-153">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5ec29-153">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, native int parentWindowHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="parentWindowHandle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="providerType">
          <span data-ttu-id="5ec29-154">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-154">The provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <param name="providerName">
          <span data-ttu-id="5ec29-155">プロバイダー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-155">A provider name.</span>
          </span>
        </param>
        <param name="keyContainerName">
          <span data-ttu-id="5ec29-156">コンテナー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-156">A container name.</span>
          </span>
        </param>
        <param name="cryptoKeySecurity">
          <span data-ttu-id="5ec29-157">コンテナーに対するアクセス権および監査規則を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-157">An object that represents access rights and audit rules for the container.</span>
          </span>
        </param>
        <param name="parentWindowHandle">
          <span data-ttu-id="5ec29-158">スマート カード パスワード ダイアログの親ウィンドウを識別するハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-158">A handle to the parent window for a smart card password dialog.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ec29-159">プロバイダーの種類、プロバイダー名、コンテナー名、アクセス情報、およびアンマネージ スマート カード パスワード ダイアログを識別するハンドルを使用して、<see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a handle to an unmanaged smart card password dialog.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-160">コンテナー名を使用すると、そのコンテナー内のキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-160">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="5ec29-161">必要なプロバイダーの種類を表す数値を渡すことによって、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-161">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="5ec29-162">既定のプロバイダーの種類を表す数値の値は、WinCrypt.h ヘッダー ファイルで定義されます。</span><span class="sxs-lookup"><span data-stu-id="5ec29-162">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="5ec29-163">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.RSA>アルゴリズムの値を渡します`1`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-163">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="5ec29-164">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.DSA>アルゴリズムの値を渡します`13`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-164">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="5ec29-165">その他のプロバイダー型の値については、次を参照してください。、<xref:System.Security.Cryptography.CspParameters.ProviderType>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-165">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="5ec29-166">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5ec29-166">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, class System.Security.SecureString keyPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, System::Security::SecureString ^ keyPassword);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="keyPassword" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="providerType">
          <span data-ttu-id="5ec29-167">作成するプロバイダーの種類を指定する、プロバイダーの型コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-167">The provider type code that specifies the kind of provider to create.</span>
          </span>
        </param>
        <param name="providerName">
          <span data-ttu-id="5ec29-168">プロバイダー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-168">A provider name.</span>
          </span>
        </param>
        <param name="keyContainerName">
          <span data-ttu-id="5ec29-169">コンテナー名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-169">A container name.</span>
          </span>
        </param>
        <param name="cryptoKeySecurity">
          <span data-ttu-id="5ec29-170">コンテナーに対するアクセス権および監査規則を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-170">An object that represents access rights and audit rules for a container.</span>
          </span>
        </param>
        <param name="keyPassword">
          <span data-ttu-id="5ec29-171">スマート カード キーに関連付けられたパスワード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-171">A password associated with a smart card key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ec29-172">プロバイダーの種類、プロバイダー名、コンテナー名、アクセス情報、およびスマート カード キーに関連付けられたパスワードを使用して、<see cref="T:System.Security.Cryptography.CspParameters" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-172">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a password associated with a smart card key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-173">コンテナー名を使用すると、そのコンテナー内のキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-173">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="5ec29-174">必要なプロバイダーの種類を表す数値を渡すことによって、プロバイダーの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-174">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="5ec29-175">既定のプロバイダーの種類を表す数値の値は、WinCrypt.h ヘッダー ファイルで定義されます。</span><span class="sxs-lookup"><span data-stu-id="5ec29-175">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="5ec29-176">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.RSA>アルゴリズムの値を渡します`1`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-176">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="5ec29-177">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.DSA>アルゴリズムの値を渡します`13`を`dwTypeIn`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5ec29-177">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="5ec29-178">その他のプロバイダー型の値については、次を参照してください。、<xref:System.Security.Cryptography.CspParameters.ProviderType>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-178">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="5ec29-179">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5ec29-179">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); void set(System::Security::AccessControl::CryptoKeySecurity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-180">コンテナーに対するアクセス権および監査規則を表す <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> オブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-180">Gets or sets a <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ec29-181">コンテナーに対するアクセス権および監査規則を表す <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-181">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-182">使用して、<xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A>プロパティを指定する、<xref:System.Security.AccessControl.CryptoKeySecurity>随意アクセス制御の作成を管理するオブジェクトのリスト (DACL) とコンテナーのシステム アクセス制御リスト (SACL)。</span><span class="sxs-lookup"><span data-stu-id="5ec29-182">Use the <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> property to specify a <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspProviderFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CspProviderFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As CspProviderFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspProviderFlags Flags { System::Security::Cryptography::CspProviderFlags get(); void set(System::Security::Cryptography::CspProviderFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspProviderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-183">暗号化サービス プロバイダー (CSP) の動作を変更する <see cref="T:System.Security.Cryptography.CspParameters" /> のフラグを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-183">Represents the flags for <see cref="T:System.Security.Cryptography.CspParameters" /> that modify the behavior of the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ec29-184">列挙値、または列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-184">An enumeration value, or a bitwise combination of enumeration values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5ec29-185">値は有効な列挙値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-185">Value is not a valid enumeration value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName;" />
      <MemberSignature Language="ILAsm" Value=".field public string KeyContainerName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public KeyContainerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ KeyContainerName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-186">
            <see cref="T:System.Security.Cryptography.CspParameters" /> のキー コンテナー名を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-186">Represents the key container name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-187">使用して、<xref:System.Security.Cryptography.CspParameters.KeyContainerName>フィールドをキー コンテナーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-187">Use the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field to specify a name for your key container.</span></span>  <span data-ttu-id="5ec29-188">コンテナー名を使用すると、そのコンテナー内の永続化されたキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-188">You can use the container name to retrieve the persisted key within that container.</span></span>  
  
 <span data-ttu-id="5ec29-189">キー コンテナーの作成の詳細については、次を参照してください。[する方法: キー コンテナーに非対称キーのストア](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)です。</span><span class="sxs-lookup"><span data-stu-id="5ec29-189">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ec29-190">次のコード例を使用して、キー コンテナーを作成、<xref:System.Security.Cryptography.CspParameters>クラスし、コンテナー キーを保存します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-190">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public int KeyNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 KeyNumber" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public KeyNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int KeyNumber;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-191">非対称キーが署名キーとして作成されるか、交換キーとして作成されるかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-191">Specifies whether an asymmetric key is created as a signature key or an exchange key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-192"><xref:System.Security.Cryptography.CspParameters.KeyNumber>フィールド初期化、<xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>プロパティを初期化するとき、<xref:System.Security.Cryptography.CspKeyContainerInfo>オブジェクトを<xref:System.Security.Cryptography.CspParameters>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5ec29-192">The <xref:System.Security.Cryptography.CspParameters.KeyNumber> field initializes the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property when you initialize a <xref:System.Security.Cryptography.CspKeyContainerInfo> object with a <xref:System.Security.Cryptography.CspParameters> object.</span></span>  
  
 <span data-ttu-id="5ec29-193">交換キーは、セッション キーを暗号化に使用される非対称キーのペアです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-193">An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="5ec29-194">使用することができます、<xref:System.Security.Cryptography.KeyNumber.Exchange>値 (`1`)、交換キーを指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-194">You can use the <xref:System.Security.Cryptography.KeyNumber.Exchange> value (`1`) to specify an exchange key.</span></span>  <span data-ttu-id="5ec29-195">この値に対応、`AT_KEYEXCHANGE`で、アンマネージ Microsoft 暗号化 API (CAPI) を使用する値。</span><span class="sxs-lookup"><span data-stu-id="5ec29-195">This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="5ec29-196">署名キーは、デジタル署名されたメッセージやファイルの認証に使用される非対称キーのペアです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-196">A signature key is an asymmetric key pair used for authenticating digitally signed messages or files.</span></span>  <span data-ttu-id="5ec29-197">使用することができます、<xref:System.Security.Cryptography.KeyNumber.Signature>値 (`2`) 署名キーを指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-197">You can use the <xref:System.Security.Cryptography.KeyNumber.Signature> value (`2`) to specify a signature key.</span></span>  <span data-ttu-id="5ec29-198">この値に対応、 `AT_SIGNATURE` CAPI で使用される値。</span><span class="sxs-lookup"><span data-stu-id="5ec29-198">This value corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="5ec29-199">既定では、<xref:System.Security.Cryptography.CspParameters.KeyNumber>フィールドが、交換キーを指定します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-199">By default, the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field specifies an exchange key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ec29-200">次のコード例を使用する方法を示しています、<xref:System.Security.Cryptography.KeyNumber>のキーの種類を指定する列挙体、<xref:System.Security.Cryptography.RSACryptoServiceProvider>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5ec29-200">The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  
  
 [!code-cpp[Cryptography.KeyNumber#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.KeyNumber/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.KeyNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.KeyNumber/CS/sample.cs#1)]
 [!code-vb[Cryptography.KeyNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.KeyNumber/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString KeyPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString KeyPassword" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ KeyPassword { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-201">スマート カード キーに関連付けられたパスワードを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-201">Gets or sets a password associated with a smart card key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ec29-202">スマート カード キーに関連付けられたパスワード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-202">A password associated with a smart card key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-203">使用して、<xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>スマート カード キーのパスワードを入力するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-203">Use the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property to supply a password for a smart card key.</span></span>  <span data-ttu-id="5ec29-204">このプロパティを使用してパスワードを指定するときに、[パスワード] ダイアログ ボックスは、ユーザーには存在しません。</span><span class="sxs-lookup"><span data-stu-id="5ec29-204">When you specify a password using this property, a password dialog box will not be presented to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-205">スマート カード パスワード ダイアログ ボックスのアンマネージ親ウィンドウを識別するハンドルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-205">Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ec29-206">スマート カード パスワード ダイアログ ボックスの親ウィンドウを識別するハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-206">A handle to the parent window for a smart card password dialog box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-207">使用して、<xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A>スマート カードのパスワード ダイアログ ボックスは、アンマネージの親ウィンドウへのハンドルを指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-207">Use the <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> property to specify a handle to the unmanaged parent window for a smart card password dialog box.</span></span>  <span data-ttu-id="5ec29-208">このプロパティを使用してハンドルを指定するときに、スマート カードのパスワード ダイアログ ボックスは、ユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="5ec29-208">When you specify a handle using this property, a smart card password dialog box will be presented to the user.</span></span>  
  
 <span data-ttu-id="5ec29-209">使用して明示的にパスワードを指定して、スマート カードのパスワード ダイアログ ボックスを表示するを回避することができます、<xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-209">You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-210">
            <see cref="T:System.Security.Cryptography.CspParameters" /> のプロバイダー名を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-210">Represents the provider name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-211">プロバイダー名の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5ec29-211">See the Microsoft Cryptography API (CAPI) documentation in the MSDN library for details on provider names.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ProviderType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ProviderType As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ProviderType;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ec29-212">
            <see cref="T:System.Security.Cryptography.CspParameters" /> のプロバイダーの型コードを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ec29-212">Represents the provider type code for <see cref="T:System.Security.Cryptography.CspParameters" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ec29-213">使用して、<xref:System.Security.Cryptography.CspParameters.ProviderType>そのプロバイダーを表す数値を渡すことによって、プロバイダーの種類を指定するフィールドです。</span><span class="sxs-lookup"><span data-stu-id="5ec29-213">Use the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="5ec29-214">既定のプロバイダーの種類を表す数値の値は、WinCrypt.h ヘッダー ファイルで定義されます。</span><span class="sxs-lookup"><span data-stu-id="5ec29-214">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="5ec29-215">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.RSA>クラスの値を渡す`1`です。</span><span class="sxs-lookup"><span data-stu-id="5ec29-215">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> class, pass a value of `1`.</span></span>  
  
-   <span data-ttu-id="5ec29-216">互換性のあるプロバイダーを指定して、<xref:System.Security.Cryptography.DSA>クラスの値を渡す`13`です。</span><span class="sxs-lookup"><span data-stu-id="5ec29-216">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> class, pass a value of `13`.</span></span>  
  
 <span data-ttu-id="5ec29-217">次の表は、プロバイダーの種類と WinCrypt.h ヘッダー ファイルで定義されている対応する数値を示します。</span><span class="sxs-lookup"><span data-stu-id="5ec29-217">The following table lists the provider types and their corresponding numeric values defined in the WinCrypt.h header file.</span></span>  
  
|<span data-ttu-id="5ec29-218">プロバイダーの種類</span><span class="sxs-lookup"><span data-stu-id="5ec29-218">Provider Type</span></span>|<span data-ttu-id="5ec29-219">数値の値</span><span class="sxs-lookup"><span data-stu-id="5ec29-219">Numeric Value</span></span>|  
|-------------------|-------------------|  
|`PROV_RSA_FULL`|<span data-ttu-id="5ec29-220">1</span><span class="sxs-lookup"><span data-stu-id="5ec29-220">1</span></span>|  
|`PROV_RSA_SIG`|<span data-ttu-id="5ec29-221">2</span><span class="sxs-lookup"><span data-stu-id="5ec29-221">2</span></span>|  
|`PROV_DSS`|<span data-ttu-id="5ec29-222">3</span><span class="sxs-lookup"><span data-stu-id="5ec29-222">3</span></span>|  
|`PROV_FORTEZZA`|<span data-ttu-id="5ec29-223">4</span><span class="sxs-lookup"><span data-stu-id="5ec29-223">4</span></span>|  
|`PROV_MS_EXCHANGE`|<span data-ttu-id="5ec29-224">5</span><span class="sxs-lookup"><span data-stu-id="5ec29-224">5</span></span>|  
|`PROV_SSL`|<span data-ttu-id="5ec29-225">6</span><span class="sxs-lookup"><span data-stu-id="5ec29-225">6</span></span>|  
|`PROV_RSA_SCHANNEL`|<span data-ttu-id="5ec29-226">12</span><span class="sxs-lookup"><span data-stu-id="5ec29-226">12</span></span>|  
|`PROV_DSS_DH`|<span data-ttu-id="5ec29-227">13</span><span class="sxs-lookup"><span data-stu-id="5ec29-227">13</span></span>|  
|`PROV_EC_ECDSA_SIG`|<span data-ttu-id="5ec29-228">14</span><span class="sxs-lookup"><span data-stu-id="5ec29-228">14</span></span>|  
|`PROV_EC_ECNRA_SIG`|<span data-ttu-id="5ec29-229">16</span><span class="sxs-lookup"><span data-stu-id="5ec29-229">15</span></span>|  
|`PROV_EC_ECDSA_FULL`|<span data-ttu-id="5ec29-230">16</span><span class="sxs-lookup"><span data-stu-id="5ec29-230">16</span></span>|  
|`PROV_EC_ECNRA_FULL`|<span data-ttu-id="5ec29-231">17</span><span class="sxs-lookup"><span data-stu-id="5ec29-231">17</span></span>|  
|`PROV_DH_SCHANNEL`|<span data-ttu-id="5ec29-232">18</span><span class="sxs-lookup"><span data-stu-id="5ec29-232">18</span></span>|  
|`PROV_SPYRUS_LYNKS`|<span data-ttu-id="5ec29-233">20</span><span class="sxs-lookup"><span data-stu-id="5ec29-233">20</span></span>|  
|`PROV_RNG`|<span data-ttu-id="5ec29-234">21</span><span class="sxs-lookup"><span data-stu-id="5ec29-234">21</span></span>|  
|`PROV_INTEL_SEC`|<span data-ttu-id="5ec29-235">22</span><span class="sxs-lookup"><span data-stu-id="5ec29-235">22</span></span>|  
|`PROV_REPLACE_OWF`|<span data-ttu-id="5ec29-236">23</span><span class="sxs-lookup"><span data-stu-id="5ec29-236">23</span></span>|  
|`PROV_RSA_AES`|<span data-ttu-id="5ec29-237">24</span><span class="sxs-lookup"><span data-stu-id="5ec29-237">24</span></span>|  
  
 <span data-ttu-id="5ec29-238">既定のプロバイダーの種類とその動作の詳細については、MSDN ライブラリの Microsoft Cryptography API (CAPI) ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5ec29-238">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>