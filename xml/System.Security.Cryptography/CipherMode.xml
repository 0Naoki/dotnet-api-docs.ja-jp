<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CipherMode.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c70ff3bf1a311578eeb87faf3ca052f53d7933f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c70ff3bf1a311578eeb87faf3ca052f53d7933f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.CipherMode">
          <source>Specifies the block cipher mode to use for encryption.</source>
          <target state="translated">暗号化に使用するブロック暗号モードを指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Block cipher algorithms encrypt data in block units, rather than a single byte at a time.</source>
          <target state="translated">ブロック暗号アルゴリズムは、一度に 1 バイトではなく、ブロック単位でデータを暗号化します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>The most common block size is 8 bytes.</source>
          <target state="translated">最も一般的なブロック サイズは 8 バイトです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Because each block is heavily processed, block ciphers provide a higher level of security than stream ciphers.</source>
          <target state="translated">各ブロックが処理される頻度の高いために、使用したブロック暗号は、ストリーム暗号よりも高いレベルのセキュリティを提供します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>However, block cipher algorithms tend to execute more slowly than stream ciphers.</source>
          <target state="translated">ただし、ブロック暗号アルゴリズムは、実行ストリーム暗号よりも速度が低下する傾向があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Block ciphers use the same encryption algorithm for each block.</source>
          <target state="translated">ブロック暗号では、各ブロックに対して同じ暗号化アルゴリズムを使用します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Because of this, a block of plain text will always return the same cipher text when encrypted with the same key and algorithm.</source>
          <target state="translated">このため、プレーン テキストのブロックは、同じ暗号化テキストと同じキーとアルゴリズムで暗号化されている場合を常に返します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Because this behavior can be used to crack a cipher, cipher modes are introduced that modify the encryption process based on feedback from earlier block encryptions.</source>
          <target state="translated">この動作を使用して、暗号を解読することができますため、前のブロックの暗号化からのフィードバックに基づく暗号化プロセスを変更できる暗号モードが導入されました。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>The resulting encryption provides a higher level of security than a simple block encryption.</source>
          <target state="translated">結果の暗号化は、単純なブロックの暗号化よりも高いレベルのセキュリティを提供します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>The Cipher Block Chaining (<ph id="ph1">&lt;see langword="CBC" /&gt;</ph>) mode introduces feedback.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CBC" /&gt;</ph> (Cipher Block Chaining) モードは、前のブロックの演算結果を次に引き継ぎます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>Before each plain text block is encrypted, it is combined with the cipher text of the previous block by a bitwise exclusive OR operation.</source>
          <target state="translated">平文の各ブロックは、暗号化される前に、前のブロックの演算結果である暗号文とビットごとの排他的 OR 演算によって組み合わされます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>This ensures that even if the plain text contains many identical blocks, they will each encrypt to a different cipher text block.</source>
          <target state="translated">これにより、平文に同一のブロックが多数含まれている場合でも、それらのブロックはそれぞれ異なった暗号文へと暗号化されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>The initialization vector is combined with the first plain text block by a bitwise exclusive OR operation before the block is encrypted.</source>
          <target state="translated">最初の平文ブロックの場合は、暗号化される前に、ビットごとの排他的 OR 演算によって初期化ベクターと組み合わされます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>If a single bit of the cipher text block is mangled, the corresponding plain text block will also be mangled.</source>
          <target state="translated">暗号文ブロックの 1 つのビットが破損すると、対応する平文ブロックも破損します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>In addition, a bit in the subsequent block, in the same position as the original mangled bit, will be mangled.</source>
          <target state="translated">さらに、後続ブロックの、元の破損ビットと同位置にあるビットも破損してしまいます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>The Cipher Feedback (<ph id="ph1">&lt;see langword="CFB" /&gt;</ph>) mode processes small increments of plain text into cipher text, instead of processing an entire block at a time.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CFB" /&gt;</ph> (Cipher Feedback) モードは、一度に 1 ブロック全体を処理するのではなく、平文を少しずつ処理して暗号文を生成します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>This mode uses a shift register that is one block in length and is divided into sections.</source>
          <target state="translated">このモードでは、長さが 1 ブロックで、複数のセクションに分割されたシフト レジスタを使用します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>For example, if the block size is 8 bytes, with one byte processed at a time, the shift register is divided into eight sections.</source>
          <target state="translated">たとえば、ブロック サイズが 8 バイトで、一度に 1 バイトずつ処理される場合、シフト レジスタは 8 個のセクションに分割されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>If a bit in the cipher text is mangled, one plain text bit is mangled and the shift register is corrupted.</source>
          <target state="translated">暗号文の 1 つのビットが破損すると、対応する平文のビットが 1 つ破損し、シフト レジスタも破損します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>This results in the next several plain text increments being mangled until the bad bit is shifted out of the shift register.</source>
          <target state="translated">この結果、不良なビットがシフト レジスタからシフト アウトするまで、続けて処理される平文中のいくつかのビットも破損してしまいます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>The default feedback size can vary by algorithm, but is typically either 8 bits or the number of bits of the block size.</source>
          <target state="translated">既定のフィードバック サイズはアルゴリズムによって異なる可能性がありますが、通常は 8 ビットまたはブロック サイズのビット数になります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>You can alter the number of feedback bits by using the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /&gt;</ph> property.</source>
          <target state="translated">フィードバックのビット数は、<ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /&gt;</ph> プロパティを使用して変更できます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>Algorithms that support CFB use this property to set the feedback.</source>
          <target state="translated">CFB をサポートするアルゴリズムでは、このプロパティを使用してフィードバックを設定します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CTS">
          <source>The Cipher Text Stealing (<ph id="ph1">&lt;see langword="CTS" /&gt;</ph>) mode handles any length of plain text and produces cipher text whose length matches the plain text length.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="CTS" /&gt;</ph> (Cipher Text Stealing) モードは、任意の長さの平文を処理し、その平文と同じ長さの暗号文を生成します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CTS">
          <source>This mode behaves like the <ph id="ph1">&lt;see langword="CBC" /&gt;</ph> mode for all but the last two blocks of the plain text.</source>
          <target state="translated">このモードは、平文の最後の 2 ブロック以外については、<ph id="ph1">&lt;see langword="CBC" /&gt;</ph> モードと同じように動作します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>The Electronic Codebook (<ph id="ph1">&lt;see langword="ECB" /&gt;</ph>) mode encrypts each block individually.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="ECB" /&gt;</ph> (Electronic Codebook) モードは、各ブロックを個別に暗号化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>Any blocks of plain text that are identical and in the same message, or that are in a different message encrypted with the same key, will be transformed into identical cipher text blocks.</source>
          <target state="translated">同じメッセージに含まれる同一の平文ブロック、または同じキーで暗号化された別のメッセージに含まれる平文ブロックは、同一の暗号文ブロックに変換されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>:  This mode is not recommended because it opens the door for multiple security exploits.</source>
          <target state="translated"><bpt id="p1">**</bpt>重要<ept id="p1">**</ept>: 複数のセキュリティ攻撃を受ける可能性が出てくるため、このモードの使用は推奨されません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>If the plain text to be encrypted contains substantial repetition, it is feasible for the cipher text to be broken one block at a time.</source>
          <target state="translated">暗号化する平文に繰り返しが多い場合、生成された暗号文に含まれるあるブロックが一度に 1 ブロックずつ解読される可能性が高まります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>It is also possible to use block analysis to determine the encryption key.</source>
          <target state="translated">ブロック分析を使用して暗号化キーを判断することもできます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>Also, an active adversary can substitute and exchange individual blocks without detection, which allows blocks to be saved and inserted into the stream at other points without detection.</source>
          <target state="translated">また、悪意のある攻撃者が、攻撃に気付かれることなく個別のブロックを置き換えたり、交換したりすることもできるので、攻撃に気付かれることなくブロックを保存したり、他のポイントでストリームに挿入したりすることも可能になります。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>The Output Feedback (<ph id="ph1">&lt;see langword="OFB" /&gt;</ph>) mode processes small increments of plain text into cipher text instead of processing an entire block at a time.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="OFB" /&gt;</ph> (Output Feedback) モードは、一度に 1 ブロック全体を処理するのではなく、平文を少しずつ処理して暗号文を生成します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>This mode is similar to <ph id="ph1">&lt;see langword="CFB" /&gt;</ph>; the only difference between the two modes is the way that the shift register is filled.</source>
          <target state="translated">このモードは <ph id="ph1">&lt;see langword="CFB" /&gt;</ph> とほとんど同じですが、シフト レジスタへの入力方法だけが異なります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>If a bit in the cipher text is mangled, the corresponding bit of plain text will be mangled.</source>
          <target state="translated">暗号文の 1 つのビットが破損すると、平文の対応するビットが破損します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>However, if there are extra or missing bits from the cipher text, the plain text will be mangled from that point on.</source>
          <target state="translated">ただし、暗号文に余分なビットや欠落しているビットがあると、平文はその位置から破損してしまいます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>