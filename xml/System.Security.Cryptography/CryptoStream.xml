<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CryptoStream.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">360c3a36-c465-4a92-baa7-e17b5430051fe9df8f5e32be435b4f97fa42cf467cb442b69471.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9df8f5e32be435b4f97fa42cf467cb442b69471</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7865e39826e7aaf54da4c7042975153813a31c7</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/16/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.CryptoStream">
          <source>Defines a stream that links data streams to cryptographic transformations.</source>
          <target state="translated">データ ストリームを暗号変換にリンクするストリームを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>The common language runtime uses a stream-oriented design for cryptography.</source>
          <target state="translated">共通言語ランタイムは、暗号ストリーム指向デザインを使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>The core of this design is <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>.</source>
          <target state="translated">この設計のコアは<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>Any cryptographic objects that implement <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> can be chained together with any objects that implement <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, so the streamed output from one object can be fed into the input of another object.</source>
          <target state="translated">任意の暗号オブジェクトを実装する<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>を実装する任意のオブジェクトとをチェーンできる<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>ので、別のオブジェクトの入力に 1 つのオブジェクトからストリーミングされる出力を取り込むことができます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>The intermediate result (the output from the first object) does not need to be stored separately.</source>
          <target state="translated">中間結果 (最初のオブジェクトからの出力) は、別個に格納する必要はありません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">この型は、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly by calling its <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> method, which in turn calls its <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> implementation.</source>
          <target state="translated">型を使用してが完了したら、必要がありますを破棄することの直接または間接的に呼び出すことによってその<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph>メソッドを呼び出してその<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">型の直接 dispose を呼び出す、<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph>メソッドで、 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>ブロックします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">直接ことのない破棄する場合など、言語コンストラクトを使用して<ph id="ph1">`using`</ph>(C# の場合) または<ph id="ph2">`Using`</ph>(Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスに関するトピック。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>You should always explicitly close your <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object after you are done using it by calling the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> method.</source>
          <target state="translated">常に明示的に閉じる必要があります、<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>オブジェクトが完了したらを使用して呼び出すことによって、<ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>Doing so flushes the underlying stream and causes all remaining blocks of data to be processed by the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object.</source>
          <target state="translated">これにより基になるストリームをフラッシュし、残りのすべてのブロックによって処理されるデータの<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>However, if an exception occurs before you call the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> object might not be closed.</source>
          <target state="translated">ただしを呼び出す前に、例外が発生した場合、 <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> 、メソッド、<ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>オブジェクトが終了していない可能性があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>To ensure that the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method always gets called, place your call to the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph> method within the <ph id="ph3">`finally`</ph> block of a <ph id="ph4">`try`</ph><ph id="ph5">/</ph><ph id="ph6">`catch`</ph> statement.</source>
          <target state="translated">いることを確認する、<ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>常にメソッドが呼び出されるへの呼び出しを配置、<ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.Clear%2A&gt;</ph>メソッド内で、<ph id="ph3">`finally`</ph>のブロック、 <ph id="ph4">`try`</ph> <ph id="ph5">/</ph> <ph id="ph6">`catch`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>The following example demonstrates how to use a <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> to encrypt a string.</source>
          <target state="translated">次の例で使用する方法、<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>文字列を暗号化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CryptoStream">
          <source>This method uses <ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph> class with the specified <ph id="ph2">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;</ph> and initialization vector (<ph id="ph3">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph>).</source>
          <target state="translated">このメソッドを使用して<ph id="ph1">&lt;xref:System.Security.Cryptography.RijndaelManaged&gt;</ph>、指定したクラス<ph id="ph2">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A&gt;</ph>および初期化ベクター (<ph id="ph3">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>The stream on which to perform the cryptographic transformation.</source>
          <target state="translated">暗号変換を実行する対象のストリーム。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>The cryptographic transformation that is to be performed on the stream.</source>
          <target state="translated">指定したストリームで実行する暗号変換。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> class with a target data stream, the transformation to use, and the mode of the stream.</source>
          <target state="translated">暗号化の対象とするデータ ストリーム、使用する変換、およびストリームのモードを指定して、<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>Any object that derives from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> can be passed into the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">派生した任意のオブジェクト<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>に渡すことができます、<ph id="ph2">`stream`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source>Any object that implements <ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform&gt;</ph> (such as <ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>) can be passed into the <ph id="ph3">`transform`</ph> parameter.</source>
          <target state="translated">実装する任意のオブジェクト<ph id="ph1">&lt;xref:System.Security.Cryptography.ICryptoTransform&gt;</ph>(など<ph id="ph2">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph>) に渡すことができます、<ph id="ph3">`transform`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source>The stream on which to perform the cryptographic transformation.</source>
          <target state="translated">暗号変換を実行する対象のストリーム。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source>The cryptographic transformation that is to be performed on the stream.</source>
          <target state="translated">指定したストリームで実行する暗号変換。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source>The mode of the stream.</source>
          <target state="translated">ストリームのモード。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to not close the underlying stream when the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> object is disposed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> オブジェクトが破棄されるときに基礎となるストリームを閉じない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.CanRead">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> is readable.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> が読み取り可能かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stream is readable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のストリームが読み取り可能な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.CanSeek">
          <source>Gets a value indicating whether you can seek within the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> 内でシークできるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.CanSeek">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.CanSeek">
          <source>Seeking is not enabled in a <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>, so this method always returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">シークが有効でない、<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>ので、このメソッドは常に返します<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.CanWrite">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> is writable.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> が書き込み可能かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stream is writable; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のストリームが書き込み可能な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Clear">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> によって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Clear">
          <source>This method wraps a call to the type's <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph> implementation.</source>
          <target state="translated">このメソッドは、型への呼び出しをラップ<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Clear">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">呼び出す<ph id="ph1">`Dispose`</ph>によりによって使用されるリソース、<ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph>を他の目的に再割り当てされます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Clear">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept></source>
          <target state="translated">詳細については<ph id="ph1">`Dispose`</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose()`</ph>メソッドおよび<ph id="ph2">`Finalize`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>disposing パラメーター設定したメソッド<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with disposing set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> 呼び出す<ph id="ph2">`Dispose`</ph>するメソッドと<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> パラメーターが <ph id="ph2">`true`</ph> の場合、このメソッドは、この <ph id="ph3">&lt;xref:System.Security.Cryptography.CryptoStream&gt;</ph> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を以前の呼び出しで既に破棄されているオブジェクトを参照しないように注意、<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>Clears all buffers for the current stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">現在のストリームのバッファーをすべてクリアし、バッファー内にあるデータすべてを、基になるデバイスに書き込みます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>.</source>
          <target state="translated">明示的に呼び出す場合を除き、ストリームのフラッシュは、基になるエンコーダー フラッシュされません<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.Flush%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>Setting <ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph>に<ph id="ph2">`true`</ph>に、ストリーム バッファーからデータがフラッシュされますが、エンコーダーの状態はフラッシュされないことを意味します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
          <target state="translated">これにより、次の文字のブロックを正常にエンコードできるように (一部の文字) の状態を保持するエンコーダー。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
          <target state="translated">このシナリオでは、UTF8、UTF7、特定の文字をエンコードするため、エンコーダーは、隣接する文字または文字列を受信した後に影響します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Flush">
          <source>You should call either the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> method to complete flushing the buffer.</source>
          <target state="translated">いずれかを呼び出す必要があります、<ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>メソッドまたは<ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph>メソッドが、バッファーのフラッシュを完了します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">キャンセル要求を監視するためのトークン。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>Clears all buffers for the current stream asynchronously, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</source>
          <target state="translated">現在のストリームのすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous flush operation.</source>
          <target state="translated">非同期のフラッシュ操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>You must preface your call to <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A&gt;</ph> with the <ph id="ph2">`await`</ph> (C#) or <ph id="ph3">`Await`</ph> (Visual Basic) operator to suspend execution of the method until the task is complete.</source>
          <target state="translated">呼び出しを付ける必要があります<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.FlushAsync%2A&gt;</ph>で、 <ph id="ph2">`await`</ph> (c#) または<ph id="ph3">`Await`</ph>(Visual Basic) 演算子をタスクが完了するまでメソッドの実行を中断します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming with Async and Await<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>Async および Await を使用した非同期プログラミング<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">返されるタスクに含まれる完了前に、操作が取り消された場合、<ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>値を<ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">ストリームは破棄されています。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>Updates the underlying data source or repository with the current state of the buffer, then clears the buffer.</source>
          <target state="translated">基になるデータ ソースまたはリポジトリをバッファーの現在の状態に更新し、その後でバッファーをクリアします。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>Calling the <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method will call <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph>.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>メソッドの呼び出しは<ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>If you do not call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>, call <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> to complete flushing the buffer.</source>
          <target state="translated">呼び出さない場合<ph id="ph1">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>、呼び出す<ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph>バッファーのフラッシュを完了します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>Call <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> only when all stream activity is complete.</source>
          <target state="translated">呼び出す<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph>ストリームのすべてのアクティビティが完了したのみです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>The key is corrupt which can cause invalid padding to the stream.</source>
          <target state="translated">キーが破損しており、ストリームに無効な埋め込みが行われる可能性があります。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>The current stream is not writable.</source>
          <target state="translated">現在のストリームが書き込み可能ではありません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.FlushFinalBlock">
          <source>The final block has already been transformed.</source>
          <target state="translated">最後のブロックが既に変換されています。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock">
          <source>Gets a value indicating whether the final buffer block has been written to the underlying stream.</source>
          <target state="translated">最後のバッファー ブロックが基になるストリームに書き込まれたかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the final block has been flushed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">最後のブロックがフラッシュされた場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock">
          <source>This property is set <ph id="ph1">`true`</ph> when the <ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph> method is called.</source>
          <target state="translated">このプロパティは設定<ph id="ph1">`true`</ph>ときに、<ph id="ph2">&lt;xref:System.Security.Cryptography.CryptoStream.FlushFinalBlock%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.Length">
          <source>Gets the length in bytes of the stream.</source>
          <target state="translated">ストリーム長 (バイト単位) を取得します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.Length">
          <source>This property is not supported.</source>
          <target state="translated">このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.Length">
          <source>This property exists only to support inheritance from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, and cannot be used.</source>
          <target state="translated">このプロパティは <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> からの継承をサポートするためだけのもので、使用できません。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.Length">
          <source>This property is not supported.</source>
          <target state="translated">このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.Position">
          <source>Gets or sets the position within the current stream.</source>
          <target state="translated">現在のストリーム内の位置を取得または設定します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.Position">
          <source>This property is not supported.</source>
          <target state="translated">このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.CryptoStream.Position">
          <source>This property exists only to support inheritance from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, and cannot be used.</source>
          <target state="translated">このプロパティは <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> からの継承をサポートするためだけのもので、使用できません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.CryptoStream.Position">
          <source>This property is not supported.</source>
          <target state="translated">このプロパティはサポートされていません。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">バイト配列。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A maximum of <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> bytes are read from the current stream and stored in <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">現在のストリームから <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> で指定された最大バイト数を読み取り、<bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> 内に格納します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin storing the data read from the current stream.</source>
          <target state="translated">現在のストリームから読み取ったデータの格納を開始する位置を示す、<bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">現在のストリームから読み取る最大バイト数。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">現在のストリームからバイト シーケンスを読み取り、読み取ったバイト数だけストリーム内の位置を進めます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">バッファーに読み取られた合計バイト数。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream has been reached.</source>
          <target state="translated">要求されたバイト数をその時点で読み取れなかった場合、この値は要求されたバイト数より小さくなることがあります。ストリームの末尾に達していた場合は 0 になります。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> associated with current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> object does not match the underlying stream.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> オブジェクトと関連付けられた <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> が、使用されているストリームと一致しません。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For example, this exception is thrown when using <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CryptoStreamMode.Read" /&gt;</ph> with an underlying stream that is write only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CryptoStreamMode.Read" /&gt;</ph> を書き込み専用のストリームで使用した場合などに、この例外がスローされます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> パラメーターが 0 未満。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> パラメーターが 0 未満。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Thesum of the <ph id="ph1">&lt;paramref name="count" /&gt;</ph> and <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameters is longer than the length of the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> パラメーターと <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> パラメーターの合計が、バッファーの長さを超えています。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write the data into.</source>
          <target state="translated">データを書き込むバッファー。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing data from the stream.</source>
          <target state="translated">ストリームからのデータの書き込み開始位置を示す <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">読み取る最大バイト数。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">キャンセル要求を監視するためのトークン。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Reads a sequence of bytes from the current stream asynchronously, advances the position within the stream by the number of bytes read, and monitors cancellation requests.</source>
          <target state="translated">現在のストリームから非同期的にバイト シーケンスを読み取り、読み取ったバイト数だけストリーム内の位置を進め、キャンセル要求を監視します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous read operation.</source>
          <target state="translated">非同期の読み取り操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The value of the task object's <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> parameter contains the total number of bytes read into the buffer.</source>
          <target state="translated">タスク オブジェクトの <ph id="ph1">&lt;paramref name="TResult" /&gt;</ph> パラメーターの値には、バッファーに読み込まれるバイトの合計数が含まれます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The result can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.</source>
          <target state="translated">現在使用できるバイト数が要求した数より小さい場合、結果は要求したバイト数より小さくなることがあります。また、ストリームの末尾に到達した場合は 0 になることがあります。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>You must preface your call to <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A&gt;</ph> with the <ph id="ph2">`await`</ph> (C#) or <ph id="ph3">`Await`</ph> (Visual Basic) operator to suspend execution of the method until the task is complete.</source>
          <target state="translated">呼び出しを付ける必要があります<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.ReadAsync%2A&gt;</ph>で、 <ph id="ph2">`await`</ph> (c#) または<ph id="ph3">`Await`</ph>(Visual Basic) 演算子をタスクが完了するまでメソッドの実行を中断します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming with Async and Await<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>Async および Await を使用した非同期プログラミング<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">返されるタスクに含まれる完了前に、操作が取り消された場合、<ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>値を<ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> または <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が負の値です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> と <ph id="ph2">&lt;paramref name="count" /&gt;</ph> の合計が、バッファーの長さよりも大きくなっています。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support reading.</source>
          <target state="translated">ストリームは読み取りをサポートしません。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">ストリームは破棄されています。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous read operation.</source>
          <target state="translated">ストリームは、前の読み取り操作によって現在使用されています。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset relative to the <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept> parameter.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept> パラメーターを基準とするバイト オフセット。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> object indicating the reference point used to obtain the new position.</source>
          <target state="translated">新しい位置を取得するために使用する参照ポイントを示す <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position within the current stream.</source>
          <target state="translated">現在のストリーム内の位置を設定します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This method is not supported.</source>
          <target state="translated">このメソッドはサポートされていません。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This method exists only to support inheritance from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, and cannot be used.</source>
          <target state="translated">継承をサポートするためだけにこのメソッドが存在して<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>、使用することはできません。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This method is not supported.</source>
          <target state="translated">このメソッドはサポートされていません。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)">
          <source>The desired length of the current stream in bytes.</source>
          <target state="translated">現在のストリームの希望の長さ (バイト数)。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)">
          <source>Sets the length of the current stream.</source>
          <target state="translated">現在のストリームの長さを設定します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)">
          <source>This property exists only to support inheritance from <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>, and cannot be used.</source>
          <target state="translated">このプロパティは <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> からの継承をサポートするためだけのもので、使用できません。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.SetLength(System.Int64)">
          <source>This property exists only to support inheritance from <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, and cannot be used.</source>
          <target state="translated">このプロパティは <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> からの継承をサポートするためだけのもので、使用できません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">バイト配列。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method copies <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> bytes from <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> to the current stream.</source>
          <target state="translated">このメソッドは、<bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> から現在のストリームに、<bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> バイト数だけコピーします。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated">現在のストリームへのバイトのコピーを開始する位置を示す、<bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be written to the current stream.</source>
          <target state="translated">現在のストリームに書き込むバイト数。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a sequence of bytes to the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> and advances the current position within the stream by the number of bytes written.</source>
          <target state="translated">バイト シーケンスを現在の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> に書き込み、書き込んだバイト数の分だけストリーム内の現在位置を進めます。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> associated with current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> object does not match the underlying stream.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStreamMode" /&gt;</ph> オブジェクトと関連付けられた <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> が、使用されているストリームと一致しません。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>For example, this exception is thrown when using <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CryptoStreamMode.Write" /&gt;</ph> with an underlying stream that is read only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.CryptoStreamMode.Write" /&gt;</ph> を読み取り専用のストリームで使用した場合などに、この例外がスローされます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> パラメーターが 0 未満。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="count" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> パラメーターが 0 未満。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The sum of the <ph id="ph1">&lt;paramref name="count" /&gt;</ph> and <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> parameters is longer than the length of the buffer.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> パラメーターと <ph id="ph2">&lt;paramref name="offset" /&gt;</ph> パラメーターの合計が、バッファーの長さを超えています。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The buffer to write data from.</source>
          <target state="translated">データの書き込み元となるバッファー。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> from which to begin writing bytes to the stream.</source>
          <target state="translated">ストリームへのバイトの書き込みを開始する位置を示す <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。インデックス番号は 0 から始まります。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込む最大バイト数。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The token to monitor for cancellation requests.</source>
          <target state="translated">キャンセル要求を監視するためのトークン。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The default value is <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="P:System.Threading.CancellationToken.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>Writes a sequence of bytes to the current stream asynchronously, advances the current position within the stream by the number of bytes written, and monitors cancellation requests.</source>
          <target state="translated">現在のストリームにバイト シーケンスを非同期で書き込み、書き込んだバイト数だけストリーム内の現在位置を進め、キャンセル要求を監視します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>A task that represents the asynchronous write operation.</source>
          <target state="translated">非同期の書き込み操作を表すタスク。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>You must preface your call to <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A&gt;</ph> with the <ph id="ph2">`await`</ph> (C#) or <ph id="ph3">`Await`</ph> (Visual Basic) operator to suspend execution of the method until the task is complete.</source>
          <target state="translated">呼び出しを付ける必要があります<ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoStream.WriteAsync%2A&gt;</ph>で、 <ph id="ph2">`await`</ph> (c#) または<ph id="ph3">`Await`</ph>(Visual Basic) 演算子をタスクが完了するまでメソッドの実行を中断します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming with Async and Await<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>Async および Await を使用した非同期プログラミング<ept id="p1">](http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>If the operation is canceled before it completes, the returned task contains the <ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph> value for the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph> property.</source>
          <target state="translated">返されるタスクに含まれる完了前に、操作が取り消された場合、<ph id="ph1">&lt;xref:System.Threading.Tasks.TaskStatus.Canceled&gt;</ph>値を<ph id="ph2">&lt;xref:System.Threading.Tasks.Task.Status%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> または <ph id="ph2">&lt;paramref name="count" /&gt;</ph> が負の値です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The sum of <ph id="ph1">&lt;paramref name="offset" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is larger than the buffer length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> と <ph id="ph2">&lt;paramref name="count" /&gt;</ph> の合計が、バッファーの長さよりも大きいです。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream does not support writing.</source>
          <target state="translated">ストリームは書き込みをサポートしません。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream has been disposed.</source>
          <target state="translated">ストリームは破棄されています。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <source>The stream is currently in use by a previous write operation.</source>
          <target state="translated">ストリームは、前の書き込み操作によって現在使用されています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>