<Type Name="DES" FullName="System.Security.Cryptography.DES">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="697e4ff70b7336ed6edadc26b3c70be31e180a2b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39893764" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DES : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DES extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DES" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DES&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DES abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <TypeSignature Language="F#" Value="type DES = class&#xA;    inherit SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9842b-101">すべての <see cref="T:System.Security.Cryptography.DES" /> の実装の派生元となる DES (Data Encryption Standard) アルゴリズムの基底クラスを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9842b-101">Represents the base class for the Data Encryption Standard (DES) algorithm from which all <see cref="T:System.Security.Cryptography.DES" /> implementations must derive.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9842b-102">このアルゴリズムでは、64 ビットのキー長をサポートします。</span><span class="sxs-lookup"><span data-stu-id="9842b-102">This algorithm supports a key length of 64 bits.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="9842b-103">新しい対称暗号化アルゴリズムでは、Advanced Encryption Standard (AES) では、使用可能です。</span><span class="sxs-lookup"><span data-stu-id="9842b-103">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="9842b-104">使用を検討して、<xref:System.Security.Cryptography.Aes>クラスの代わりに、<xref:System.Security.Cryptography.DES>クラス。</span><span class="sxs-lookup"><span data-stu-id="9842b-104">Consider using the <xref:System.Security.Cryptography.Aes> class instead of the <xref:System.Security.Cryptography.DES> class.</span></span> <span data-ttu-id="9842b-105">使用<xref:System.Security.Cryptography.DES>従来のアプリケーションとデータを互換性のためだけです。</span><span class="sxs-lookup"><span data-stu-id="9842b-105">Use <xref:System.Security.Cryptography.DES> only for compatibility with legacy applications and data.</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9842b-106">
            <see cref="T:System.Security.Cryptography.DES" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DES" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9842b-107">抽象クラスのインスタンスを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="9842b-107">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="9842b-108">アプリケーション コードは派生クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="9842b-108">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="9842b-109">このメソッドは、保護対象のフィールドを初期化、<xref:System.Security.Cryptography.SymmetricAlgorithm>クラスを次の表に示すように既定値にします。</span><span class="sxs-lookup"><span data-stu-id="9842b-109">This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="9842b-110">フィールド</span><span class="sxs-lookup"><span data-stu-id="9842b-110">Field</span></span>|<span data-ttu-id="9842b-111">既定値</span><span class="sxs-lookup"><span data-stu-id="9842b-111">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="9842b-112">64</span><span class="sxs-lookup"><span data-stu-id="9842b-112">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="9842b-113">64</span><span class="sxs-lookup"><span data-stu-id="9842b-113">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="9842b-114">64</span><span class="sxs-lookup"><span data-stu-id="9842b-114">64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9842b-115">暗号オブジェクトのインスタンスを作成して、Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) アルゴリズムを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-115">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.DES" Usage="System.Security.Cryptography.DES.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9842b-116">暗号オブジェクトのインスタンスを作成して、Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) アルゴリズムを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-116">Creates an instance of a cryptographic object to perform the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9842b-117">暗号オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-117">A cryptographic object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9842b-118">インスタンスを作成、<xref:System.Security.Cryptography.DES>のデータを暗号化および暗号化のために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9842b-118">Creates an instance of the <xref:System.Security.Cryptography.DES> object that can be used for encrypting and decrypting data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9842b-119">次のコード例を作成して使用する方法を示しています、<xref:System.Security.Cryptography.DES>暗号化し、ファイル内のデータを復号化オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9842b-119">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="9842b-120">次のコード例を作成して使用する方法を示しています、<xref:System.Security.Cryptography.DES>暗号化し、メモリ内のデータを復号化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9842b-120">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Create.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Create.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Create.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.DES Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.DES Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As DES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::DES ^ Create(System::String ^ algName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.DES" Usage="System.Security.Cryptography.DES.Create algName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DES</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName">
          <span data-ttu-id="9842b-121">使用する <see cref="T:System.Security.Cryptography.DES" /> の特定の実装の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-121">The name of the specific implementation of <see cref="T:System.Security.Cryptography.DES" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9842b-122">暗号オブジェクトのインスタンスを作成して、<see cref="T:System.Security.Cryptography.DES" /> (Data Encryption Standard) アルゴリズムの指定した実装を実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-122">Creates an instance of a cryptographic object to perform the specified implementation of the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9842b-123">暗号オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-123">A cryptographic object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9842b-124">次のコード例を作成して使用する方法を示しています、<xref:System.Security.Cryptography.DES>暗号化し、ファイル内のデータを復号化オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9842b-124">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="9842b-125">次のコード例を作成して使用する方法を示しています、<xref:System.Security.Cryptography.DES>暗号化し、メモリ内のデータを復号化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9842b-125">The following code example shows how to create and use a <xref:System.Security.Cryptography.DES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DES.Createstring.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSemiWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsSemiWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSemiWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSemiWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSemiWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="static member IsSemiWeakKey : byte[] -&gt; bool" Usage="System.Security.Cryptography.DES.IsSemiWeakKey rgbKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="9842b-126">半脆弱性をテストする共有キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-126">The secret key to test for semi-weakness.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9842b-127">指定したキーが半脆弱であるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-127">Determines whether the specified key is semi-weak.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9842b-128">キーが半脆弱である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-128">
              <see langword="true" /> if the key is semi-weak; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9842b-129">半脆弱なキーは、暗号解読しやすいを生成するキーのペアです。</span><span class="sxs-lookup"><span data-stu-id="9842b-129">Semi-weak keys are pairs of keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="9842b-130">テキストが半脆弱なキーで暗号化されている場合は、元のテキストを返します半脆弱なキーのパートナーと結果の暗号を暗号化します。</span><span class="sxs-lookup"><span data-stu-id="9842b-130">If text is encrypted with a semi-weak key, encrypting the resulting cipher with the partner of that semi-weak key returns the original text.</span></span> <span data-ttu-id="9842b-131">ある 6 つ既知半脆弱なキーのペアのデータ暗号化標準 (<xref:System.Security.Cryptography.DES>) アルゴリズム。 このメソッドを半脆弱なキーを確認します。</span><span class="sxs-lookup"><span data-stu-id="9842b-131">There are six known semi-weak key pairs for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those semi-weak keys.</span></span>  
  
 <span data-ttu-id="9842b-132">半脆弱なキーの結果を設定しようとして、<xref:System.Security.Cryptography.CryptographicException>します。</span><span class="sxs-lookup"><span data-stu-id="9842b-132">Attempting to set a semi-weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="9842b-133">ときに<xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A>キーは返されません、セミコロン弱ランダム キーを作成すると呼びます。</span><span class="sxs-lookup"><span data-stu-id="9842b-133">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a semi-weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="9842b-134">
            <paramref name="rgbKey" /> パラメーターのサイズが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-134">The size of the <paramref name="rgbKey" /> parameter is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="static member IsWeakKey : byte[] -&gt; bool" Usage="System.Security.Cryptography.DES.IsWeakKey rgbKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="9842b-135">脆弱性をテストする共有キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-135">The secret key to test for weakness.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9842b-136">指定したキーが脆弱であるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-136">Determines whether the specified key is weak.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9842b-137">キーが脆弱な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-137">
              <see langword="true" /> if the key is weak; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9842b-138">弱いキーは、暗号解読しやすいを生成するキーです。</span><span class="sxs-lookup"><span data-stu-id="9842b-138">Weak keys are keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="9842b-139">テキストは、弱いキーで暗号化されている場合は、元のテキストを返します結果の暗号をもう一度同じ弱いキーで暗号化します。</span><span class="sxs-lookup"><span data-stu-id="9842b-139">If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</span></span> <span data-ttu-id="9842b-140">データ暗号化標準の 4 つの既知の弱いキーがある (<xref:System.Security.Cryptography.DES>) アルゴリズム。 このメソッドは、これらの弱いキーを確認します。</span><span class="sxs-lookup"><span data-stu-id="9842b-140">There are four known weak keys for the Data Encryption Standard (<xref:System.Security.Cryptography.DES>) algorithm; this method checks for those weak keys.</span></span>  
  
 <span data-ttu-id="9842b-141">弱いキー結果を設定しようとして、<xref:System.Security.Cryptography.CryptographicException>します。</span><span class="sxs-lookup"><span data-stu-id="9842b-141">Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="9842b-142">ときに<xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A>と呼ばれるランダムなキーを作成するには、弱いキーが返されません。</span><span class="sxs-lookup"><span data-stu-id="9842b-142">When <xref:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="9842b-143">
            <paramref name="rgbKey" /> パラメーターのサイズが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-143">The size of the <paramref name="rgbKey" /> parameter is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DES.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.DES.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9842b-144">
            <see cref="T:System.Security.Cryptography.DES" /> (Data Encryption Standard) アルゴリズムの共有キーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-144">Gets or sets the secret key for the Data Encryption Standard (<see cref="T:System.Security.Cryptography.DES" />) algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9842b-145">
            <see cref="T:System.Security.Cryptography.DES" /> アルゴリズムの秘密鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-145">The secret key for the <see cref="T:System.Security.Cryptography.DES" /> algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9842b-146">このプロパティが場合`null`使用した場合<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>を呼び出して新しい値をランダムに作成します。</span><span class="sxs-lookup"><span data-stu-id="9842b-146">If this property is `null` when it is used, <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> is called to create a new random value.</span></span>  
  
 <span data-ttu-id="9842b-147">キーの長さでなければなりません<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>します。</span><span class="sxs-lookup"><span data-stu-id="9842b-147">The length of the key must be equal to <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>.</span></span>  
  
 <span data-ttu-id="9842b-148">このアルゴリズムでは、64 ビットのキー長をサポートします。</span><span class="sxs-lookup"><span data-stu-id="9842b-148">This algorithm supports a key length of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9842b-149">キーを <see langword="null" /> に設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-149">An attempt was made to set the key to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9842b-150">長さが <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" /> と等しくないキーを設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-150">An attempt was made to set a key whose length is not equal to <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="9842b-151">脆弱キー (<see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" /> を参照) または半脆弱キー (<see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" /> を参照) を設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9842b-151">An attempt was made to set a weak key (see <see cref="M:System.Security.Cryptography.DES.IsWeakKey(System.Byte[])" />) or a semi-weak key (see <see cref="M:System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>