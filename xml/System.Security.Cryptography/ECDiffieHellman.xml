<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDiffieHellman.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86ccb5a87ea6fe949d656b5a33c34f1f502cb481a4b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb5a87ea6fe949d656b5a33c34f1f502cb481a4b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>Provides an abstract base class that Elliptic Curve Diffie-Hellman (ECDH) algorithm implementations can derive from.</source>
          <target state="translated">ECDH (Elliptic Curve Diffie-Hellman) アルゴリズム実装の派生元にすることができる抽象基本クラスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>This class provides the basic set of operations that all ECDH implementations must support.</source>
          <target state="translated">このクラスは、すべての ECDH 実装がサポートする必要のある操作の基本セットを提供します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>This class serves as the abstract base class for ECDH implementations.</source>
          <target state="translated">このクラスは、ECDH の実装のための抽象基本クラスとして機能します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
          <source>This constructor is called by classes that derive from the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> class.</source>
          <target state="translated">このコンス トラクターがから派生したクラスによって呼び出される、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class is the only implementation that is currently included in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph>クラスに含まれる現在のみ実装されて、<ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.#ctor">
          <source>For information about how to create a new implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt;</ph> method.</source>
          <target state="translated">Diffie-hellman ECDH (Elliptic Curve) アルゴリズムの新しい実装を作成する方法については、次を参照してください。、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>Creates a new instance of an implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">ECDH アルゴリズムの実装の新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create">
          <source>Creates a new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">ECDH アルゴリズムの既定の実装の新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create">
          <source>A new instance of the default implementation of this class.</source>
          <target state="translated">このクラスの既定の実装の新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>The curve to use to generate a new public/private key-pair.</source>
          <target state="translated">新しい公開/秘密キー ペアを生成するために使用する曲線。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>Creates a new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm with a new public/private key-pair generated over the specified curve.</source>
          <target state="translated">指定した曲線に対して生成された新しい公開/秘密キー ペアで ECDH (Elliptic Curve Diffie-Hellman) アルゴリズムの既定の実装の新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>A new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">ECDH (Elliptic Curve Diffie-Hellman) アルゴリズムの既定の実装の新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>curve must validate (that is, it must return true when passed to the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">曲線を検証する必要があります (つまり、true を返さなければなりませんに渡されるときに、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Windows では、特性 2 曲線はサポートされていません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> は検証されません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>The parameters  for the elliptic curve cryptography (ECC) algorithm.</source>
          <target state="translated">楕円曲線暗号 (ECC) アルゴリズムのパラメーター。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>Creates a new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm with the key described by the specified  <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> オブジェクトによって記述されたキーで Elliptic Curve Diffie-Hellman (ECDH) アルゴリズムの既定の実装の新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>A new instance of the default implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">ECDH (Elliptic Curve Diffie-Hellman) アルゴリズムの既定の実装の新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">`parameters`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECParameters.Validate%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`parameters`</ph> 検証する必要があります (つまり、返す必要があります<ph id="ph2">`true`</ph>) に渡されるときに、<ph id="ph3">&lt;xref:System.Security.Cryptography.ECParameters.Validate%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>Parameters over implicit curves are not supported.</source>
          <target state="translated">暗黙的な曲線上のパラメーターはサポートされていません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Windows では、特性 2 曲線はサポートされていません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> は検証されません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>The name of an implementation of the ECDH algorithm.</source>
          <target state="translated">ECDH アルゴリズムの実装の名前。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>Creates a new instance of the specified implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">ECDH (Elliptic Curve Diffie-Hellman) アルゴリズムの指定した実装の新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>A new instance of the specified implementation of this class.</source>
          <target state="translated">このクラスの指定した実装の新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>If the specified algorithm name does not map to an ECDH implementation, this method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定したアルゴリズム名が ECDH 実装にマップされない場合、このメソッドで <ph id="ph1">&lt;see langword="null" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>If you develop your own implementation of an <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%28System.String%29&gt;</ph> method overload to create a custom <ph id="ph3">`algorithm`</ph> string that specifies your implementation.</source>
          <target state="translated">独自の実装を開発する場合、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>オブジェクトを使用する、<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellman.Create%28System.String%29&gt;</ph>カスタムを作成するメソッドのオーバー ロード<ph id="ph3">`algorithm`</ph>実装を指定する文字列。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>The <ph id="ph1">`algorithm`</ph> parameter specifies the name of an implementation of the ECDH algorithm.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph>パラメーター ECDH アルゴリズムの実装の名前を指定します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>The following strings all refer to the same implementation, which is the only implementation currently supported in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>:</source>
          <target state="translated">次の文字列はすべて同じ実装を参照します。この実装は、<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> が現在サポートしている唯一の実装です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>"ECDH"</source>
          <target state="translated">"ECDH"</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>"ECDiffieHellman"</source>
          <target state="translated">"ECDiffieHellman"</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>"ECDiffieHellmanCng"</source>
          <target state="translated">"ECDiffieHellmanCng"</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>"System.Security.Cryptography.ECDiffieHellmanCng"</source>
          <target state="translated">"System.Security.Cryptography.ECDiffieHellmanCng"</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>You can also provide the name of a custom ECDH implementation for the <ph id="ph1">`algorithm`</ph> parameter.</source>
          <target state="translated">カスタム ECDH 実装の名前を指定できますも、<ph id="ph1">`algorithm`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>If you do that, the <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> object will use it to determine whether an ECDH object can be created.</source>
          <target state="translated">実行する場合、 <ph id="ph1">&lt;xref:System.Security.Cryptography.CryptoConfig&gt;</ph> ECDH オブジェクトを作成できるかどうかを決定する、オブジェクトで使用されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.Create(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>Derives bytes that can be used as a key using a hash function .</source>
          <target state="translated">ハッシュ関数を使用してキーとして使用できるバイト数を派生しています。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>The other party's public key.</source>
          <target state="translated">もう一方のパーティの公開キー。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>Derives bytes that can be used as a key using a hash function, given another party's public key and hash algorithm's name.</source>
          <target state="translated">別のパーティの公開キーとハッシュ アルゴリズムの名前を指定し、ハッシュ関数を使用するキーとして使用できるバイトを派生させます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">他のパーティの公開キーとのキー交換からのキー マテリアル。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)">
          <source>This overload calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt;</ph> method passing <ph id="ph2">`null`</ph> as the prepend and append values.</source>
          <target state="translated">このオーバー ロードを呼び出す、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash%2A&gt;</ph>メソッド<ph id="ph2">`null`</ph>prepend として値を追加します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">もう一方のパーティの公開キー。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">ハッシュ前に派生の機密情報の先頭に追加する値。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">ハッシュ前に派生の機密情報に追加する値。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a hash function, given another party's public key, hash algorithm's name, a prepend value and an append value.</source>
          <target state="translated">派生クラスに実装した場合は、別のパーティの公開キー、ハッシュ アルゴリズムの名前、先頭の値、および追加の値を指定し、ハッシュ関数を使用するキーとして使用できるバイトを派生させます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">他のパーティの公開キーとのキー交換からのキー マテリアル。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A derived class must override this method.</source>
          <target state="translated">派生クラスはこのメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellman">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">ハッシュ ベース メッセージ認証コード (HMAC) を使用して、キーとして使用できるバイト数を派生しています。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">もう一方のパーティの公開キー。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The key for the HMAC.</source>
          <target state="translated">HMAC のキー。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">ハッシュ ベース メッセージ認証コード (HMAC) を使用して、キーとして使用できるバイト数を派生しています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">他のパーティの公開キーとのキー交換からのキー マテリアル。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])">
          <source>This overload calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt;</ph> method passing <ph id="ph2">`null`</ph> as the prepend and append values.</source>
          <target state="translated">このオーバー ロードを呼び出す、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac%2A&gt;</ph>メソッド<ph id="ph2">`null`</ph>prepend として値を追加します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">もう一方のパーティの公開キー。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key for the HMAC.</source>
          <target state="translated">HMAC のキー。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">ハッシュ前に派生の機密情報の先頭に追加する値。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">ハッシュ前に派生の機密情報に追加する値。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">派生クラスに実装された場合、ハッシュ ベース メッセージ認証コード (HMAC) を使用して、キーとして使用できるバイト数を派生します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">他のパーティの公開キーとのキー交換からのキー マテリアル。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A derived class must override this method.</source>
          <target state="translated">派生クラスはこのメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The other party's public key.</source>
          <target state="translated">もう一方のパーティの公開キー。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>Derives bytes that can be used as a key, given another party's public key.</source>
          <target state="translated">相手の公開キーを指定した場合に、キーとして使用できるバイトを派生させます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">他のパーティの公開キーとのキー交換からのキー マテリアル。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>For more information about public keys, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph> class.</source>
          <target state="translated">公開キーの詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanPublicKey&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">もう一方のパーティの公開キー。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The ASCII-encoded PRF label.</source>
          <target state="translated">ASCII エンコードされた PRF ラベル。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The 64-byte PRF seed.</source>
          <target state="translated">64 バイト PRF シード。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>When implemented in a derived class, derives bytes that can be used as a key using a Transport Layer Security (TLS) Pseudo-Random Function (PRF) derivation algorithm.</source>
          <target state="translated">派生クラスで実装された場合、トランスポート層セキュリティ (TLS) 擬似ランダム関数 (PRF) 派生アルゴリズムを使用してキーとして使用できるバイトを派生します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">他のパーティの公開キーとのキー交換からのキー マテリアル。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>A derived class must override this method.</source>
          <target state="translated">派生クラスはこのメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プライベート パラメーターを含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)">
          <source>When overridden in a derived class, exports either the public or the public and private key information using the explicit curve form from a working <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> key to an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> structure so that it can be passed to the <ph id="ph3">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph> method.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph3">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph> メソッドに渡すために、処理中の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> キーから <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> 構造体に明示的な曲線フォームを使用して公開または公開および秘密キー情報のいずれかをエクスポートします。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)">
          <source>An object that represents the point on the curve for this key, using the explicit curve format.</source>
          <target state="translated">明示的な曲線形式を使用して、このキーの曲線上のポイントを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportExplicitParameters(System.Boolean)">
          <source>A derived class must override this method.</source>
          <target state="translated">派生クラスはこのメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otehrwise,  <ph id="ph2">&lt;see langword="false" /&gt;</ph> to include public parameters only.</source>
          <target state="translated">プライベート パラメーターを含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は、パブリック パラメーターのみを含める場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>When overridden in a derived class, exports either the public or the public and private key information from a working <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> key to an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> structure so that it can be passed to the <ph id="ph3">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph> method.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph3">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph> メソッドに渡すために、処理中の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> キーから <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> 構造体に公開または公開および秘密キー情報のいずれかをエクスポートします。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>An object that represents the point on the curve for this key.</source>
          <target state="translated">このキーの曲線上のポイントを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>It can be passed to the <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)" /&gt;</ph> メソッドに渡すことができます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>If the curve has a name, the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> property contains named curve parameters; otherwise, it will contain explicit parameters.</source>
          <target state="translated">曲線の名前が、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph>プロパティには、名前付き曲線パラメーターが含まれます。 それ以外の場合、明示的なパラメーターが含まれます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ExportParameters(System.Boolean)">
          <source>A derived class must override this method.</source>
          <target state="translated">派生クラスはこのメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate an ephemeral public/private key pair.</source>
          <target state="translated">一時的な公開/秘密キー ペアを生成するために使用される曲線。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>When overridden in a derived class, generates a new ephemeral public/private key pair for the specified curve.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定した曲線の新しい一時的な公開/秘密キー ペアを生成します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method) and must not be implicit.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> 検証する必要があります (つまり、返す必要があります<ph id="ph2">`true`</ph>) に渡されるときに、<ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph>メソッド) 暗黙の型にすることです。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Windows では、特性 2 曲線はサポートされていません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> は検証されません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>A derived class must override this method.</source>
          <target state="translated">派生クラスはこのメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The curve's parameters to import.</source>
          <target state="translated">インポートする曲線のパラメーター。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>When overridden in a derived class, imports the specified parameters for an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> as an ephemeral key into the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> object.</source>
          <target state="translated">派生クラスでオーバーライドされると、現在の <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> オブジェクトへの一時的なキーとして <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> の指定されたパラメーターをインポートします。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">`parameters`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECParameters.Validate%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`parameters`</ph> 検証する必要があります (つまり、返す必要があります<ph id="ph2">`true`</ph>) に渡されるときに、<ph id="ph3">&lt;xref:System.Security.Cryptography.ECParameters.Validate%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Parameters over implicit curves are not supported.</source>
          <target state="translated">暗黙的な曲線上のパラメーターはサポートされていません。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Windows では、特性 2 曲線はサポートされていません。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> は検証されません。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellman.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>A derived class must override this method.</source>
          <target state="translated">派生クラスはこのメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
          <source>Gets the name of the key exchange algorithm.</source>
          <target state="translated">キー交換アルゴリズムの名前を取得します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
          <source>The name of the key exchange algorithm.</source>
          <target state="translated">キー交換アルゴリズムの名前。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
          <source>The default (non-overridden) implementation of this property returns the string "ECDiffieHellman".</source>
          <target state="translated">このプロパティの既定の (非オーバーライド) 実装は、文字列"ECDiffieHellman"を返します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm">
          <source>This property is inherited from the <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> base class.</source>
          <target state="translated">このプロパティは、<ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph>基本クラスです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellman.PublicKey">
          <source>Gets the public key that is being used by the current Elliptic Curve Diffie-Hellman (ECDH) instance.</source>
          <target state="translated">現在の ECDH インスタンスが使用している公開キーを取得します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.PublicKey">
          <source>The public part of the ECDH key pair that is being used by this <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> instance.</source>
          <target state="translated">ECDH キー ペアの公開部分は、この <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellman" /&gt;</ph> インスタンスにより使用されます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>Gets the name of the signature algorithm.</source>
          <target state="translated">署名アルゴリズムの名前を取得します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>Always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>This property is inherited from the <ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph> base class.</source>
          <target state="translated">このプロパティは、<ph id="ph1">&lt;xref:System.Security.Cryptography.AsymmetricAlgorithm&gt;</ph>基本クラスです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>The Elliptic Curve Diffie-Hellman (ECDH) algorithm is used for key derivation, not digital signature generation.</source>
          <target state="translated">キーの派生で、Diffie-hellman ECDH (Elliptic Curve) アルゴリズムが使用されるデジタル署名の生成。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm">
          <source>Therefore, this property returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">したがって、このプロパティが返されます<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>