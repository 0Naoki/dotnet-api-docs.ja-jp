<Type Name="RSAOAEPKeyExchangeFormatter" FullName="System.Security.Cryptography.RSAOAEPKeyExchangeFormatter">
  <TypeSignature Language="C#" Value="public class RSAOAEPKeyExchangeFormatter : System.Security.Cryptography.AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RSAOAEPKeyExchangeFormatter extends System.Security.Cryptography.AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class RSAOAEPKeyExchangeFormatter&#xA;Inherits AsymmetricKeyExchangeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class RSAOAEPKeyExchangeFormatter : System::Security::Cryptography::AsymmetricKeyExchangeFormatter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.AsymmetricKeyExchangeFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="42969-101"><see cref="T:System.Security.Cryptography.RSA" /> を使用して、OAEP (Optimal Asymmetric Encryption Padding) キー交換データを作成します。</span><span class="sxs-lookup"><span data-stu-id="42969-101">Creates Optimal Asymmetric Encryption Padding (OAEP) key exchange data using <see cref="T:System.Security.Cryptography.RSA" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42969-102">キーの交換は、たとえば秘密情報を作成するセンダ、対称暗号化アルゴリズムのキーとして使用でき、目的の受信者に送信する暗号化を使用するランダムなデータを許可します。</span><span class="sxs-lookup"><span data-stu-id="42969-102">Key exchange allows a sender to create secret information, for example, random data that can be used as a key in a symmetric encryption algorithm, and use encryption to send it to the intended recipient.</span></span>  
  
 <span data-ttu-id="42969-103">使用して<xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter>をキーの交換を受信し、そこから機密情報を抽出します。</span><span class="sxs-lookup"><span data-stu-id="42969-103">Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter> to receive the key exchange and extract the secret information from it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="42969-104">操作の多くの詳細については、キーの交換を成功させるために慎重に行う必要があるために、独自のキーの交換方法を指定すると、基本的な機能から作成していないしようとするを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="42969-104">It is highly recommended that you not attempt to create your own key exchange method from the basic functionality provided, because many details of the operation must be performed carefully in order for the key exchange to be successful.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42969-105">次の例を使用する方法を示しています、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter>メッセージの受信者に、交換キーを作成するクラス。</span><span class="sxs-lookup"><span data-stu-id="42969-105">The following example shows how to use the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> class to create an exchange key for a message recipient.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsaoaepkeyexchangedeformatter2/cs/program.cs#1)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsaoaepkeyexchangedeformatter2/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="42969-106"><see cref="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="42969-106">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSAOAEPKeyExchangeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSAOAEPKeyExchangeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="42969-107"><see cref="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="42969-107">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42969-108">使用して<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey%2A>を呼び出す前に、キーを設定する<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange%2A>です。</span><span class="sxs-lookup"><span data-stu-id="42969-108">Use <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey%2A> to set the key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RSAOAEPKeyExchangeFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RSAOAEPKeyExchangeFormatter(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="42969-109">公開キーを保持している <see cref="T:System.Security.Cryptography.RSA" /> アルゴリズムのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="42969-109">The instance of the <see cref="T:System.Security.Cryptography.RSA" /> algorithm that holds the public key.</span></span></param>
        <summary><span data-ttu-id="42969-110">指定したキーで、<see cref="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="42969-110">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter" /> class with the specified key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42969-111"><paramref name="key" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="42969-111"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateKeyExchange">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="42969-112">暗号化されたキー交換データを作成します。</span><span class="sxs-lookup"><span data-stu-id="42969-112">Creates the encrypted key exchange data.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateKeyExchange">
      <MemberSignature Language="C#" Value="public override byte[] CreateKeyExchange (byte[] rgbData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateKeyExchange(unsigned int8[] rgbData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKeyExchange (rgbData As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateKeyExchange(cli::array &lt;System::Byte&gt; ^ rgbData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbData"><span data-ttu-id="42969-113">キー交換で渡される機密情報。</span><span class="sxs-lookup"><span data-stu-id="42969-113">The secret information to be passed in the key exchange.</span></span></param>
        <summary><span data-ttu-id="42969-114">指定された入力データから暗号化したキー交換データを作成します。</span><span class="sxs-lookup"><span data-stu-id="42969-114">Creates the encrypted key exchange data from the specified input data.</span></span></summary>
        <returns><span data-ttu-id="42969-115">目的の受信者に送信する暗号化されたキー交換データ。</span><span class="sxs-lookup"><span data-stu-id="42969-115">The encrypted key exchange data to be sent to the intended recipient.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42969-116">このデータは、データの暗号化に使用する公開キーに対応する秘密キーの所有者のみが解釈できます。</span><span class="sxs-lookup"><span data-stu-id="42969-116">This data can be interpreted only by the holder of the private key corresponding to the public key used to encrypt the data.</span></span> <span data-ttu-id="42969-117">これにより、目的の受信者のみが機密情報にアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="42969-117">This helps to ensure that only the intended recipient can access the secret information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="42969-118">キーがありません。</span><span class="sxs-lookup"><span data-stu-id="42969-118">The key is missing.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateKeyExchange">
      <MemberSignature Language="C#" Value="public override byte[] CreateKeyExchange (byte[] rgbData, Type symAlgType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateKeyExchange(unsigned int8[] rgbData, class System.Type symAlgType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKeyExchange (rgbData As Byte(), symAlgType As Type) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateKeyExchange(cli::array &lt;System::Byte&gt; ^ rgbData, Type ^ symAlgType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="symAlgType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="rgbData"><span data-ttu-id="42969-119">キー交換で渡される機密情報。</span><span class="sxs-lookup"><span data-stu-id="42969-119">The secret information to be passed in the key exchange.</span></span></param>
        <param name="symAlgType"><span data-ttu-id="42969-120">このパラメーターは、現在のバージョンでは使用されません。</span><span class="sxs-lookup"><span data-stu-id="42969-120">This parameter is not used in the current version.</span></span></param>
        <summary><span data-ttu-id="42969-121">指定された入力データから暗号化したキー交換データを作成します。</span><span class="sxs-lookup"><span data-stu-id="42969-121">Creates the encrypted key exchange data from the specified input data.</span></span></summary>
        <returns><span data-ttu-id="42969-122">目的の受信者に送信する暗号化されたキー交換データ。</span><span class="sxs-lookup"><span data-stu-id="42969-122">The encrypted key exchange data to be sent to the intended recipient.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42969-123">このデータは、データの暗号化に使用する公開キーに対応する秘密キーの所有者のみが解釈できます。</span><span class="sxs-lookup"><span data-stu-id="42969-123">This data can be interpreted only by the holder of the private key corresponding to the public key used to encrypt the data.</span></span> <span data-ttu-id="42969-124">これにより、目的の受信者のみが機密情報にアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="42969-124">This helps to ensure that only the intended recipient can access the secret information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42969-125">次の例を使用する方法を示しています、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange%2A?displayProperty=nameWithType>メソッドをメッセージの受信者に、交換キーを作成します。</span><span class="sxs-lookup"><span data-stu-id="42969-125">The following example shows how to use the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange%2A?displayProperty=nameWithType> method to create an exchange key for a message recipient.</span></span> <span data-ttu-id="42969-126">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter>クラス</span><span class="sxs-lookup"><span data-stu-id="42969-126">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> class</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1keyexchangeformatter2/cs/program.cs#2)]
 [!code-vb[System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.rsapkcs1keyexchangeformatter2/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public byte[] Parameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Parameter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameter As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Parameter { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42969-127">キー交換の作成プロセスでパディングの作成に使用するパラメーターを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="42969-127">Gets or sets the parameter used to create padding in the key exchange creation process.</span></span></summary>
        <value><span data-ttu-id="42969-128">パラメーター値。</span><span class="sxs-lookup"><span data-stu-id="42969-128">The parameter value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="42969-129">次のコード例は、設定する方法を示します、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter%2A>プロパティを<xref:System.Security.Cryptography.RSAParameters.InverseQ>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="42969-129">The following code example demonstrates how to set the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter%2A> property to an <xref:System.Security.Cryptography.RSAParameters.InverseQ> field.</span></span> <span data-ttu-id="42969-130">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="42969-130">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CPP/rsaencoder.cpp#7)]
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CS/rsaencoder.cs#7)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/VB/rsaencoder.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public override string Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Parameters { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42969-131">OAEP (最適非対称暗号化パディング) キー交換のパラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="42969-131">Gets the parameters for the Optimal Asymmetric Encryption Padding (OAEP) key exchange.</span></span></summary>
        <value><span data-ttu-id="42969-132">OAEP キーの交換操作のパラメーターを含む XML 文字列。</span><span class="sxs-lookup"><span data-stu-id="42969-132">An XML string containing the parameters of the OAEP key exchange operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="42969-133">次のコード例を呼び出す方法を示しています、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters%2A>パラメーターの XML 表現を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="42969-133">The following code example demonstrates how to call the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters%2A> property to retrieve an XML representation of the parameters.</span></span> <span data-ttu-id="42969-134">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="42969-134">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CPP/rsaencoder.cpp#13)]
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CS/rsaencoder.cs#13)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/VB/rsaencoder.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rng">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.RandomNumberGenerator Rng { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.RandomNumberGenerator Rng" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng" />
      <MemberSignature Language="VB.NET" Value="Public Property Rng As RandomNumberGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::RandomNumberGenerator ^ Rng { System::Security::Cryptography::RandomNumberGenerator ^ get(); void set(System::Security::Cryptography::RandomNumberGenerator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RandomNumberGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42969-135">キー交換の作成に使用する乱数ジェネレーター アルゴリズムを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="42969-135">Gets or sets the random number generator algorithm to use in the creation of the key exchange.</span></span></summary>
        <value><span data-ttu-id="42969-136">使用する乱数ジェネレーター アルゴリズムのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="42969-136">The instance of a random number generator algorithm to use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42969-137">場合は、このプロパティは`null`の既定乱数ジェネレーター アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="42969-137">If this property is `null`, the default random number generator algorithm is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42969-138">次のコード例は、設定する方法を示します、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng%2A>プロパティをランダムな番号です。</span><span class="sxs-lookup"><span data-stu-id="42969-138">The following code example demonstrates how to set the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng%2A> property to a random number.</span></span> <span data-ttu-id="42969-139">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="42969-139">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CPP/rsaencoder.cpp#6)]
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CS/rsaencoder.cs#6)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/VB/rsaencoder.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKey">
      <MemberSignature Language="C#" Value="public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetKey(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetKey (key As AsymmetricAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="42969-140">公開キーを保持している <see cref="T:System.Security.Cryptography.RSA" /> アルゴリズムのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="42969-140">The instance of the <see cref="T:System.Security.Cryptography.RSA" /> algorithm that holds the public key.</span></span></param>
        <summary><span data-ttu-id="42969-141">キー交換データの暗号化に使用する公開キーを設定します。</span><span class="sxs-lookup"><span data-stu-id="42969-141">Sets the public key to use for encrypting the key exchange data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42969-142">呼び出しの前に、キーを設定する必要があります<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange%2A>です。</span><span class="sxs-lookup"><span data-stu-id="42969-142">You must set the key before calling <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42969-143">次のコード例を使用する方法を示しています、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey%2A>を設定するメソッド、<xref:System.Security.Cryptography.RSA>復号化キー。</span><span class="sxs-lookup"><span data-stu-id="42969-143">The following code example demonstrates how to use the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey%2A> method to set an <xref:System.Security.Cryptography.RSA> key for decryption.</span></span> <span data-ttu-id="42969-144">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="42969-144">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.RSAOAEPKeyExchangeFormatter> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CPP/rsaencoder.cpp#5)]
 [!code-csharp[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/CS/rsaencoder.cs#5)]
 [!code-vb[System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RSAOAEPKeyExchangeDeformatter/VB/rsaencoder.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="42969-145"><paramref name="key" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="42969-145"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>