<Type Name="ToBase64Transform" FullName="System.Security.Cryptography.ToBase64Transform">
  <TypeSignature Language="C#" Value="public class ToBase64Transform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToBase64Transform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ToBase64Transform" />
  <TypeSignature Language="VB.NET" Value="Public Class ToBase64Transform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToBase64Transform : System::Security::Cryptography::ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="92205-101"><see cref="T:System.Security.Cryptography.CryptoStream" /> を base 64 に変換します。</span><span class="sxs-lookup"><span data-stu-id="92205-101">Converts a <see cref="T:System.Security.Cryptography.CryptoStream" /> to base 64.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92205-102">人間ではありません、フォーム内の任意のビット シーケンスを表す base 64 コンテンツ転送エンコード読み取り可能です。</span><span class="sxs-lookup"><span data-stu-id="92205-102">Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92205-103">次のコード例では、メンバーを使用して、<xref:System.Security.Cryptography.ToBase64Transform>クラスです。</span><span class="sxs-lookup"><span data-stu-id="92205-103">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToBase64Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92205-104"><see cref="T:System.Security.Cryptography.ToBase64Transform" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="92205-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92205-105">現在の変換を再利用できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="92205-105">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="92205-106">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="92205-106">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="92205-107">次のコード例を呼び出す方法を示しています、<xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A>プロパティの現在の変換を再利用できます。</span><span class="sxs-lookup"><span data-stu-id="92205-107">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A> property to determine if the current transform can be reused.</span></span> <span data-ttu-id="92205-108">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.ToBase64Transform>クラスです。</span><span class="sxs-lookup"><span data-stu-id="92205-108">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92205-109">複数のブロックを変換できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="92205-109">Gets a value that indicates whether multiple blocks can be transformed.</span></span></summary>
        <value><span data-ttu-id="92205-110">常に <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="92205-110">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92205-111">現在の実装では 1 ブロックだけ変換できる、一度にため、このプロパティは常に`false`です。</span><span class="sxs-lookup"><span data-stu-id="92205-111">In the current implementation, only one block can be transformed at a time, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92205-112">次のコード例を呼び出す方法を示しています、<xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A>複数のブロックを変換できることを確認するメソッド。</span><span class="sxs-lookup"><span data-stu-id="92205-112">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A> method to verify that multiple blocks can be transformed.</span></span> <span data-ttu-id="92205-113">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.ToBase64Transform>クラスです。</span><span class="sxs-lookup"><span data-stu-id="92205-113">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92205-114">
          <see cref="T:System.Security.Cryptography.ToBase64Transform" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="92205-114">Releases all resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92205-115">このメソッドは、単純に<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="92205-115">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="92205-116">呼び出す`Dispose`によりによって使用されるリソース、<xref:System.Security.Cryptography.ToBase64Transform>を他の目的に再割り当てされます。</span><span class="sxs-lookup"><span data-stu-id="92205-116">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.ToBase64Transform> to be reallocated for other purposes.</span></span> <span data-ttu-id="92205-117">詳細については`Dispose`を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)です。</span><span class="sxs-lookup"><span data-stu-id="92205-117">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92205-118">次のコード例を呼び出す方法を示しています、<xref:System.Security.Cryptography.ToBase64Transform.Clear%2A>現在の変換で使用されていないリソースを解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="92205-118">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A> method to free up unused resources by the current transform.</span></span> <span data-ttu-id="92205-119">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.ToBase64Transform>クラスです。</span><span class="sxs-lookup"><span data-stu-id="92205-119">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="92205-120"><see cref="T:System.Security.Cryptography.ToBase64Transform" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="92205-120">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92205-121"><see cref="T:System.Security.Cryptography.ToBase64Transform" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="92205-121">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92205-122">`Dispose` を使い終わったら <xref:System.Security.Cryptography.ToBase64Transform> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="92205-122">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="92205-123">`Dispose` メソッドによって、<xref:System.Security.Cryptography.ToBase64Transform> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="92205-123">The `Dispose` method leaves the <xref:System.Security.Cryptography.ToBase64Transform> in an unusable state.</span></span> <span data-ttu-id="92205-124">呼び出した後`Dispose`へのすべての参照を解放する必要があります、<xref:System.Security.Cryptography.ToBase64Transform>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Security.Cryptography.ToBase64Transform>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="92205-124">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.ToBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ToBase64Transform> was occupying.</span></span>  
  
 <span data-ttu-id="92205-125">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="92205-125">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="92205-126">`Dispose` への最後の参照を解放する前に、必ず <xref:System.Security.Cryptography.ToBase64Transform> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="92205-126">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="92205-127">そうしないと、ガベージ コレクターが <xref:System.Security.Cryptography.ToBase64Transform> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="92205-127">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.ToBase64Transform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="92205-128">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="92205-128"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="92205-129"><see cref="T:System.Security.Cryptography.ToBase64Transform" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="92205-129">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92205-130">このメソッドは、パブリック`Dispose()`メソッドおよび`Finalize`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="92205-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="92205-131">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`disposing パラメーター設定したメソッド`true`です。</span><span class="sxs-lookup"><span data-stu-id="92205-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="92205-132">`Finalize` 呼び出す`Dispose`するメソッドと`false`です。</span><span class="sxs-lookup"><span data-stu-id="92205-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="92205-133">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.Security.Cryptography.ToBase64Transform> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="92205-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ToBase64Transform> references.</span></span> <span data-ttu-id="92205-134">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="92205-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="92205-135"><see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="92205-135"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="92205-136">オーバーライドする場合<see langword="Dispose(Boolean)" />を以前の呼び出しで既に破棄されているオブジェクトを参照しないように注意、<see langword="Dispose" />です。</span><span class="sxs-lookup"><span data-stu-id="92205-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="92205-137">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="92205-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="92205-138">詳細については<see langword="Dispose" />と<see langword="Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)です。</span><span class="sxs-lookup"><span data-stu-id="92205-138">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ToBase64Transform ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="92205-139"><see cref="T:System.Security.Cryptography.ToBase64Transform" /> によって使用されているアンマネージ リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="92205-139">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92205-140">入力ブロック サイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="92205-140">Gets the input block size.</span></span></summary>
        <value><span data-ttu-id="92205-141">入力データ ブロックのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="92205-141">The size of the input data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92205-142">この変換の入力ブロック サイズは、3 バイトです。</span><span class="sxs-lookup"><span data-stu-id="92205-142">The input block size for this transformation is 3 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92205-143">次のコード例を呼び出す方法を示しています、<xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A>プロパティを現在の変換の入力ブロック サイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="92205-143">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A> property to retrieve the input block size of the current transform.</span></span> <span data-ttu-id="92205-144">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.ToBase64Transform>クラスです。</span><span class="sxs-lookup"><span data-stu-id="92205-144">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92205-145">出力ブロック サイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="92205-145">Gets the output block size.</span></span></summary>
        <value><span data-ttu-id="92205-146">出力データ ブロックのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="92205-146">The size of the output data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92205-147">この変換の出力ブロック サイズは、4 バイトです。</span><span class="sxs-lookup"><span data-stu-id="92205-147">The output block size for this transformation is 4 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92205-148">次のコード例を呼び出す方法を示しています、<xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A>出力ブロック サイズのサイズに新しいバイト配列を作成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="92205-148">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A> property to create a new byte array with the size of the output block size.</span></span> <span data-ttu-id="92205-149">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.ToBase64Transform>クラスです。</span><span class="sxs-lookup"><span data-stu-id="92205-149">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="92205-150">base 64 に変換する入力。</span><span class="sxs-lookup"><span data-stu-id="92205-150">The input to compute to base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="92205-151">入力バイト配列内のデータの使用開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="92205-151">The offset into the input byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="92205-152">データとして使用する入力バイト配列内のバイト数。</span><span class="sxs-lookup"><span data-stu-id="92205-152">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="92205-153">結果を書き込む先の出力。</span><span class="sxs-lookup"><span data-stu-id="92205-153">The output to which to write the result.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="92205-154">データの書き込みの開始位置を示す出力バイト配列内のオフセット。</span><span class="sxs-lookup"><span data-stu-id="92205-154">The offset into the output byte array from which to begin writing data.</span></span></param>
        <summary><span data-ttu-id="92205-155">入力バイト配列の指定した領域を base 64 に変換し、その結果を出力バイト配列の指定した領域にコピーします。</span><span class="sxs-lookup"><span data-stu-id="92205-155">Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="92205-156">書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="92205-156">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92205-157"><xref:System.Security.Cryptography.ToBase64Transform>クラスは、ブロックのアルゴリズムの 3 バイトの入力ブロックを処理し、4 バイトの出力ブロックが作成されます。</span><span class="sxs-lookup"><span data-stu-id="92205-157">The <xref:System.Security.Cryptography.ToBase64Transform> class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.</span></span>  <span data-ttu-id="92205-158"><xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A>メソッドは、32 ビットの文字データに 24 ビットの入力のブロックを変換します。</span><span class="sxs-lookup"><span data-stu-id="92205-158">The <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method transforms an input block of 24 bits into 32 bits of character data.</span></span>  <span data-ttu-id="92205-159">ブロックの変換を一致させるために 4 バイトの出力の境界に 3 バイトの入力境界を維持する必要があります。</span><span class="sxs-lookup"><span data-stu-id="92205-159">You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92205-160">次のコード例を呼び出す方法を示しています、<xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A>を反復処理するメソッド`inputBytes`で変換する`blockSize`です。</span><span class="sxs-lookup"><span data-stu-id="92205-160">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method to iterate through `inputBytes` transforming by `blockSize`.</span></span> <span data-ttu-id="92205-161">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.ToBase64Transform>クラスです。</span><span class="sxs-lookup"><span data-stu-id="92205-161">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="92205-162">現在の <see cref="T:System.Security.Cryptography.ToBase64Transform" /> オブジェクトは既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="92205-162">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="92205-163">データ サイズが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="92205-163">The data size is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="92205-164"><paramref name="inputBuffer" /> パラメーターに無効なオフセット長が含まれています。</span><span class="sxs-lookup"><span data-stu-id="92205-164">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span></span>  
  
 <span data-ttu-id="92205-165">- または -</span><span class="sxs-lookup"><span data-stu-id="92205-165">-or-</span></span>  
  
 <span data-ttu-id="92205-166"><paramref name="inputCount" /> パラメーターには無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="92205-166">The <paramref name="inputCount" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="92205-167"><paramref name="inputBuffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="92205-167">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="92205-168"><paramref name="inputBuffer" /> パラメーターには、負でない数が必要です。</span><span class="sxs-lookup"><span data-stu-id="92205-168">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="92205-169">base 64 に変換する入力。</span><span class="sxs-lookup"><span data-stu-id="92205-169">The input to convert to base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="92205-170">バイト配列内のデータの使用開始位置を示すオフセット。</span><span class="sxs-lookup"><span data-stu-id="92205-170">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="92205-171">バイト配列内でデータとして使用されるバイトの数。</span><span class="sxs-lookup"><span data-stu-id="92205-171">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="92205-172">指定したバイト配列の指定した領域を base 64 に変換します。</span><span class="sxs-lookup"><span data-stu-id="92205-172">Converts the specified region of the specified byte array to base 64.</span></span></summary>
        <returns><span data-ttu-id="92205-173">計算された変換後の base 64。</span><span class="sxs-lookup"><span data-stu-id="92205-173">The computed base 64 conversion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="92205-174">次のコード例を呼び出す方法を示しています、<xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A>データの最後のブロックを変換するメソッド。</span><span class="sxs-lookup"><span data-stu-id="92205-174">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A> method to transform the final block of data.</span></span> <span data-ttu-id="92205-175">このコード例に示されている例の一部である、<xref:System.Security.Cryptography.ToBase64Transform>クラスです。</span><span class="sxs-lookup"><span data-stu-id="92205-175">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="92205-176">現在の <see cref="T:System.Security.Cryptography.ToBase64Transform" /> オブジェクトは既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="92205-176">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="92205-177"><paramref name="inputBuffer" /> パラメーターに無効なオフセット長が含まれています。</span><span class="sxs-lookup"><span data-stu-id="92205-177">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span></span>  
  
 <span data-ttu-id="92205-178">- または -</span><span class="sxs-lookup"><span data-stu-id="92205-178">-or-</span></span>  
  
 <span data-ttu-id="92205-179"><paramref name="inputCount" /> パラメーターには無効な値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="92205-179">The <paramref name="inputCount" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="92205-180"><paramref name="inputBuffer" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="92205-180">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="92205-181"><paramref name="inputBuffer" /> パラメーターには、負でない数が必要です。</span><span class="sxs-lookup"><span data-stu-id="92205-181">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>