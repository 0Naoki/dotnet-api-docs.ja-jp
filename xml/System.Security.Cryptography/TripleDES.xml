<Type Name="TripleDES" FullName="System.Security.Cryptography.TripleDES">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a182e9c6851fb4dd7d1c17dde87b77a6a9131e7b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39935660" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TripleDES : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TripleDES extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.TripleDES" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TripleDES&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class TripleDES abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <TypeSignature Language="F#" Value="type TripleDES = class&#xA;    inherit SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="13a77-101">すべての <see cref="T:System.Security.Cryptography.TripleDES" /> 実装の派生元となる Triple DES (Data Encryption Standard) アルゴリズムの基底クラスを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="13a77-101">Represents the base class for Triple Data Encryption Standard algorithms from which all <see cref="T:System.Security.Cryptography.TripleDES" /> implementations must derive.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a77-102"><xref:System.Security.Cryptography.TripleDES> 3 つの連続するイテレーションを使用して、<xref:System.Security.Cryptography.DES>アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="13a77-102"><xref:System.Security.Cryptography.TripleDES> uses three successive iterations of the <xref:System.Security.Cryptography.DES> algorithm.</span></span> <span data-ttu-id="13a77-103">2 つまたは 3 つの 56 ビット キーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="13a77-103">It can use either two or three 56-bit keys.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13a77-104">新しい対称暗号化アルゴリズムでは、Advanced Encryption Standard (AES) では、使用可能です。</span><span class="sxs-lookup"><span data-stu-id="13a77-104">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="13a77-105">使用を検討して、<xref:System.Security.Cryptography.Aes>クラスとその派生クラスの代わりに、<xref:System.Security.Cryptography.TripleDES>クラス。</span><span class="sxs-lookup"><span data-stu-id="13a77-105">Consider using the <xref:System.Security.Cryptography.Aes> class and its derived classes instead of the <xref:System.Security.Cryptography.TripleDES> class.</span></span> <span data-ttu-id="13a77-106">使用<xref:System.Security.Cryptography.TripleDES>従来のアプリケーションとデータを互換性のためだけです。</span><span class="sxs-lookup"><span data-stu-id="13a77-106">Use <xref:System.Security.Cryptography.TripleDES> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="13a77-107">このアルゴリズムでは、64 ビット単位で 192 ビットから 128 ビット キー長をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="13a77-107">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a77-108">次のコード例のメソッドでは<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>指定のキーを持つ (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) および初期化ベクター (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) で指定されたファイルの暗号化に`inName`します。</span><span class="sxs-lookup"><span data-stu-id="13a77-108">The following code example method uses <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`.</span></span> <span data-ttu-id="13a77-109">指定されたファイルを暗号化された結果を出力し`outName`します。</span><span class="sxs-lookup"><span data-stu-id="13a77-109">It then outputs the encrypted result to the file specified by `outName`.</span></span>  
  
 [!code-cpp[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/CS/source.cs#1)]
 [!code-vb[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/VB/source.vb#1)]  
  
 <span data-ttu-id="13a77-110">復号化は、同じ方法で処理できます。使用して、<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A>の代わりに<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>します。</span><span class="sxs-lookup"><span data-stu-id="13a77-110">Decryption can be handled in the same way; use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>.</span></span> <span data-ttu-id="13a77-111">同じキー (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) および初期化ベクター (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 暗号化に使用される暗号化を解除するのには、ファイルを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="13a77-111">The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Cryptography.Aes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13a77-112">
            <see cref="T:System.Security.Cryptography.TripleDES" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.TripleDES" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a77-113">抽象クラスのインスタンスを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="13a77-113">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="13a77-114">アプリケーション コードは派生クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="13a77-114">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="13a77-115">このメソッドは、保護対象のフィールドを初期化、<xref:System.Security.Cryptography.SymmetricAlgorithm>クラスの既定値を次の表に記載します。</span><span class="sxs-lookup"><span data-stu-id="13a77-115">This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values listed in the following table.</span></span>  
  
|<span data-ttu-id="13a77-116">フィールド</span><span class="sxs-lookup"><span data-stu-id="13a77-116">Field</span></span>|<span data-ttu-id="13a77-117">既定値</span><span class="sxs-lookup"><span data-stu-id="13a77-117">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="13a77-118">192</span><span class="sxs-lookup"><span data-stu-id="13a77-118">192</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="13a77-119">64</span><span class="sxs-lookup"><span data-stu-id="13a77-119">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="13a77-120">64</span><span class="sxs-lookup"><span data-stu-id="13a77-120">64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13a77-121">
            <see cref="T:System.Security.Cryptography.TripleDES" /> アルゴリズムを実行するための暗号オブジェクトのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-121">Creates an instance of a cryptographic object to perform the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.TripleDES Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.TripleDES Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As TripleDES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::TripleDES ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.TripleDES" Usage="System.Security.Cryptography.TripleDES.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.TripleDES</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13a77-122">
            <see cref="T:System.Security.Cryptography.TripleDES" /> アルゴリズムを実行するための暗号オブジェクトのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-122">Creates an instance of a cryptographic object to perform the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13a77-123">暗号オブジェクトのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-123">An instance of a cryptographic object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a77-124"><xref:System.Security.Cryptography.TripleDES> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="13a77-124">Creates a new instance of the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13a77-125">次のコード例を作成して使用する方法を示しています、<xref:System.Security.Cryptography.TripleDES>暗号化し、ファイル内のデータを復号化オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="13a77-125">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Create.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Create.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Create.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="13a77-126">次のコード例を作成して使用する方法を示しています、<xref:System.Security.Cryptography.TripleDES>暗号化し、メモリ内のデータを復号化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="13a77-126">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Create.Memory/CPP/memoryexample.cpp#1)]
 [!code-vb[Cryptography.3DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Create.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.TripleDES Create (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.TripleDES Create(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (str As String) As TripleDES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::TripleDES ^ Create(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.TripleDES" Usage="System.Security.Cryptography.TripleDES.Create str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.TripleDES</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="13a77-127">使用する <see cref="T:System.Security.Cryptography.TripleDES" /> の特定の実装の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-127">The name of the specific implementation of <see cref="T:System.Security.Cryptography.TripleDES" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13a77-128">
            <see cref="T:System.Security.Cryptography.TripleDES" /> アルゴリズムの指定した実装を実行する暗号オブジェクトのインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-128">Creates an instance of a cryptographic object to perform the specified implementation of the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13a77-129">暗号オブジェクトのインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-129">An instance of a cryptographic object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13a77-130">次のコード例を作成して使用する方法を示しています、<xref:System.Security.Cryptography.TripleDES>暗号化し、ファイル内のデータを復号化オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="13a77-130">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="13a77-131">次のコード例を作成して使用する方法を示しています、<xref:System.Security.Cryptography.TripleDES>暗号化し、メモリ内のデータを復号化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="13a77-131">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="static member IsWeakKey : byte[] -&gt; bool" Usage="System.Security.Cryptography.TripleDES.IsWeakKey rgbKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="13a77-132">脆弱性をテストする共有キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-132">The secret key to test for weakness.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13a77-133">指定したキーが脆弱であるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-133">Determines whether the specified key is weak.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13a77-134">キーが脆弱な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-134">
              <see langword="true" /> if the key is weak; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a77-135">弱いキーは、暗号解読しやすいを生成するキーです。</span><span class="sxs-lookup"><span data-stu-id="13a77-135">Weak keys are keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="13a77-136">テキストは、弱いキーで暗号化されている場合は、元のテキストを返します結果の暗号をもう一度同じ弱いキーで暗号化します。</span><span class="sxs-lookup"><span data-stu-id="13a77-136">If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</span></span> <span data-ttu-id="13a77-137">最初の 64 ビットは、最後の 64 ビットと同じ場合は、128 ビット モードで、キーが脆弱です。</span><span class="sxs-lookup"><span data-stu-id="13a77-137">In 128-bit mode, if the first 64 bits are the same as the last 64 bits, the key is weak.</span></span> <span data-ttu-id="13a77-138">最初の 64 ビットは 2 つ目の 64 ビットの場合と同じ場合、または 2 つ目の 64 ビットは、最後の 64 ビットと同じ場合は 192 ビット モードで、キーが脆弱です。</span><span class="sxs-lookup"><span data-stu-id="13a77-138">In 192-bit mode, if the first 64 bits are the same as the second 64 bits or if the second 64 bits are the same as the last 64 bits, the key is weak.</span></span>  
  
 <span data-ttu-id="13a77-139">弱いキー結果を設定しようとして、<xref:System.Security.Cryptography.CryptographicException>します。</span><span class="sxs-lookup"><span data-stu-id="13a77-139">Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="13a77-140">ときに<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A>と呼ばれるランダムなキーを作成するには、弱いキーが返されません。</span><span class="sxs-lookup"><span data-stu-id="13a77-140">When <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="13a77-141">
            <paramref name="rgbKey" /> パラメーターのサイズが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-141">The size of the <paramref name="rgbKey" /> parameter is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.TripleDES.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="13a77-142">
            <see cref="T:System.Security.Cryptography.TripleDES" /> アルゴリズムの秘密鍵を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-142">Gets or sets the secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="13a77-143">
            <see cref="T:System.Security.Cryptography.TripleDES" /> アルゴリズムの秘密鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-143">The secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13a77-144">このアルゴリズムでは、64 ビット単位で 192 ビットから 128 ビット キー長をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="13a77-144">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13a77-145">キーを <see langword="null" /> に設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-145">An attempt was made to set the key to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="13a77-146">正しくない長さのキーを設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-146">An attempt was made to set a key whose length is invalid.</span>
          </span>
          <span data-ttu-id="13a77-147">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-147">-or-</span>
          </span>
          <span data-ttu-id="13a77-148">弱いキーを設定しようとしました (<see cref="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" /> をご覧ください)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="13a77-148">An attempt was made to set a weak key (see <see cref="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalBlockSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.LegalBlockSizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalBlockSizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalBlockSizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.TripleDES.LegalBlockSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalKeySizes : System.Security.Cryptography.KeySizes[]" Usage="System.Security.Cryptography.TripleDES.LegalKeySizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>