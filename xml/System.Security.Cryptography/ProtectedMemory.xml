<Type Name="ProtectedMemory" FullName="System.Security.Cryptography.ProtectedMemory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5c1f8311e87e0855b794c3f1307c0ab7ce720c66" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30496536" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProtectedMemory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedMemory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedMemory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedMemory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedMemory sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>メモリの保護と保護解除のためのメソッドを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスは、データ保護 API (DPAPI) Windows XP およびそれ以降のオペレーティング システムで使用するアクセスを提供します。 これは、サービスは、オペレーティング システムによって提供され、追加のライブラリが不要です。 メモリ内の機密データの暗号化を提供します。  
  
 クラスから成る 2 つのラッパー、アンマネージの DPAPI の<xref:System.Security.Cryptography.ProtectedMemory.Protect%2A>と<xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A>です。 これら 2 つのメソッドは、暗号化し、メモリ内のデータを復号化に使用できます。  
  
   
  
## Examples  
 次の例では、データ保護を使用する方法を示します。  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Protect(unsigned int8[] userData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Protect (userData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Protect(cli::array &lt;System::Byte&gt; ^ userData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">保護するメモリ内データを格納しているバイト配列。 この配列のサイズは、16 バイトの倍数である必要があります。</param>
        <param name="scope">メモリ保護のスコープを指定する列挙値の 1 つ。</param>
        <summary>指定されたデータを保護します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、メモリ内のデータの保護に使用できます。 メソッドが、データのコピーを行いませんが、所定のバイト配列を暗号化に注意してください。 `userData`パラメーターは 16 バイトの長さまたは 16 バイトの倍数である必要があります。  
  
 このメソッドのサポートは、Windows XP 以降のオペレーティング システムで使用できます。  
  
   
  
## Examples  
 次のコード例では、データ保護を使用する方法を示します。  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="userData" /> の長さは 16 バイトか、16 バイトの倍数である必要があります。</exception>
        <exception cref="T:System.NotSupportedException">このメソッドがオペレーティング システムでサポートされていません。 このメソッドは、Windows 2000 以降のオペレーティング システムでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userData" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unprotect(unsigned int8[] encryptedData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unprotect (encryptedData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">復号化するメモリ内のバイト配列。</param>
        <param name="scope">メモリ保護のスコープを指定する列挙値の 1 つ。</param>
        <summary>
          <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> メソッドを使用して保護されたメモリ内データの保護を解除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して暗号化されたメモリ内のデータを復号化に使用できます、<xref:System.Security.Cryptography.ProtectedMemory.Protect%2A>メソッドです。  
  
 このメソッドのサポートは、Windows XP 以降のオペレーティング システムで使用できます。  
  
   
  
## Examples  
 次の例では、データ保護を使用する方法を示します。  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドがオペレーティング システムでサポートされていません。 このメソッドは、Windows 2000 以降のオペレーティング システムでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encryptedData" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="encryptedData" /> が空です。  
  
 - または -  
  
 この呼び出しは実装されていません。  
  
 - または -  
  
 NTSTATUS にエラーが含まれています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>