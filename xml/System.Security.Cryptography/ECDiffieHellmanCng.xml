<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ECDiffieHellmanCng.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5286bf918255ea8d29ba319f459e569551d533740.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">286bf918255ea8d29ba319f459e569551d533740</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Provides a Cryptography Next Generation (CNG) implementation of the Elliptic Curve Diffie-Hellman (ECDH) algorithm.</source>
          <target state="translated">ECDH (Elliptic Curve Diffie-Hellman) アルゴリズムの CNG (Cryptography Next Generation) 実装を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>This class is used to perform cryptographic operations.</source>
          <target state="translated">このクラスは、暗号化操作の実行に使用されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class enables two parties to exchange private key material even if they are communicating through a public channel.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph>クラスをパブリック チャネルを介して通信している場合でも、秘密キー マテリアルを交換する 2 つのパーティを有効にします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Both parties can calculate the same secret value, which is referred to as the <bpt id="p1">*</bpt>secret agreement<ept id="p1">*</ept> in the managed Diffie-Hellman classes.</source>
          <target state="translated">両方のパーティが同じシークレット、値を計算と呼ばれる、<bpt id="p1">*</bpt>秘密協定<ept id="p1">*</ept>マネージ Diffie-hellman クラスでします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The secret agreement can then be used for a variety of purposes, including as a symmetric key.</source>
          <target state="translated">秘密協定は、さまざまな目的で、対称キーとして使用できます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>However, instead of exposing the secret agreement directly, the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class does some post-processing on the agreement before providing the value.</source>
          <target state="translated">秘密協定を直接公開するのではなく、ただし、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph>クラスがいくつかの値を提供する前に、アグリーメントで後処理できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>This post processing is referred to as the <bpt id="p1">*</bpt>key derivation function (KDF)<ept id="p1">*</ept>; you can select which KDF you want to use and set its parameters through a set of properties on the instance of the Diffie-Hellman object.</source>
          <target state="translated">この後の処理と呼びます、<bpt id="p1">*</bpt>キー派生関数 (KDF)<ept id="p1">*</ept>; を使用し、Diffie-hellman オブジェクトのインスタンスのプロパティのセットをそのパラメーターを設定するどの KDF を選択することができます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Key derivation function</source>
          <target state="translated">キー派生関数</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Properties</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> - The hash algorithm that is used to process the secret agreement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> -秘密協定を処理するために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> - An optional byte array to prepend to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph> -先頭ハッシュする前に、秘密のアグリーメントに追加する省略可能なバイト配列。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> - An optional byte array to append to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> ハッシュの前に、シークレットのアグリーメントに追加する省略可能なバイト配列。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> - The hash algorithm that is used to process the secret agreement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm%2A&gt;</ph> -秘密協定を処理するために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph>- An optional byte array to prepend to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A&gt;</ph>-先頭ハッシュする前に、秘密のアグリーメントに追加する省略可能なバイト配列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> - An optional byte array to append to the secret agreement before hashing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A&gt;</ph> ハッシュの前に、シークレットのアグリーメントに追加する省略可能なバイト配列。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A&gt;</ph> - The label for key derivation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Label%2A&gt;</ph> キー派生のラベル。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A&gt;</ph> - The seed for key derivation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.Seed%2A&gt;</ph> -キーを派生させるためのシードです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The result of passing the secret agreement through the key derivation function is a byte array that may be used as key material for your application.</source>
          <target state="translated">キー派生関数を通じた秘密協定を渡す場合の結果は、アプリケーションのキー マテリアルとして使用できるをバイト配列です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The number of bytes of key material generated is dependent on the key derivation function; for example, SHA-256 will generate 256 bits of key material, whereas SHA-512 will generate 512 bits of key material.The basic flow of an ECDH key exchange is as follows:</source>
          <target state="translated">生成されたキー マテリアルのバイト数が、キー派生関数に依存します。たとえば、SHA 256 であっても、sha-512 512 ビットのキー マテリアルが生成されますが、256 ビットのキー マテリアルが生成されます。ECDH キー交換の基本的な流れは次のとおりです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice and Bob create a key pair to use for the Diffie-Hellman key exchange operation</source>
          <target state="translated">Alice と Bob Diffie-hellman キー交換操作に使用するキー ペアを作成します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice and Bob configure the KDF using parameters the agree on.</source>
          <target state="translated">Alice と Bob パラメーターを使用して、同意するを KDF に構成します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice sends Bob her public key.</source>
          <target state="translated">Alice は、Bob に公開キーを送信します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Bob sends Alice his public key.</source>
          <target state="translated">Bob は、公開鍵を Alice に送信します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Alice and Bob use each other's public keys to generate the secret agreement, and apply the KDF to the secret agreement to generate key material.</source>
          <target state="translated">Alice と Bob は、互いの公開キーを使用して秘密協定を生成し、キー マテリアルを生成する秘密協定に、KDF を適用します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class to establish a key exchange and how to use that key to encrypt a message that can be sent over a public channel and decrypted by the receiver.</source>
          <target state="translated">次の例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph>クラス キーの交換およびそのキーを使用してパブリック チャネル経由で送信および受信機によって復号化が可能なメッセージを暗号化する方法を確立するためにします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class with a random key pair.</source>
          <target state="translated">ランダムなキーのペアで、<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor">
          <source>The random key pair has a default public key length of 521 bits.</source>
          <target state="translated">ランダムなキー ペアは、521 ビットの既定の公開キー長を持ちます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>The size of the key.</source>
          <target state="translated">キーのサイズです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>Valid key sizes are 256, 384, and 521 bits.</source>
          <target state="translated">有効なキー サイズは、256 ビット、384 ビット、521 ビットです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class with a random key pair, using the specified key size.</source>
          <target state="translated">指定されたキー サイズを使用して、ランダムなキー ペアで、<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>The random key pair will have the public key length defined by the <ph id="ph1">`keySize`</ph> parameter.</source>
          <target state="translated">ランダムなキー ペアがによって定義されたパブリック キーの長さが、<ph id="ph1">`keySize`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> specifies an invalid length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> に指定された長さが無効です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">Cryptography Next Generation (CNG) クラスは、このシステムではサポートされていません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>The key that will be used as input to the cryptographic operations performed by the current object.</source>
          <target state="translated">現在のオブジェクトが実行する暗号化操作への入力として使用するキー。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class by using the specified <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> オブジェクトを使用して、<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not specify an Elliptic Curve Diffie-Hellman (ECDH) algorithm group.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> に、ECDH アルゴリズム グループが指定されていません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)">
          <source>Cryptography Next Generation (CNG) classes are not supported on this system.</source>
          <target state="translated">Cryptography Next Generation (CNG) クラスは、このシステムではサポートされていません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate the public/private key pair.</source>
          <target state="translated">公開/秘密キー ペアを生成するために使用される曲線。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class whose public/private key pair is generated over the specified curve.</source>
          <target state="translated">指定した曲線に対して生成された公開/秘密キー ペアの <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> クラスの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return <ph id="ph2">`true`</ph>) when passed to the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method and must be either a named or explicit prime.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> 検証する必要があります (つまり、返す必要があります<ph id="ph2">`true`</ph>) に渡されるときに、<ph id="ph3">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph>メソッド名前付きまたは明示的な素数のいずれかを指定する必要があります。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> は検証されません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Derives bytes that can be used as a key using a hash function .</source>
          <target state="translated">ハッシュ関数を使用してキーとして使用できるバイト数を派生しています。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">もう一方のパーティの公開キー。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The hash algorithm  to use to derive the key material.</source>
          <target state="translated">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">ハッシュ前に派生の機密情報の先頭に追加する値。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">ハッシュ前に派生の機密情報に追加する値。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>Derives bytes that can be used as a key using a hash function, given another party's public key, hash algorithm's name, a prepend value and an append value.</source>
          <target state="translated">別のパーティの公開キー、ハッシュ アルゴリズムの名前、先頭の値、および追加の値を指定し、ハッシュ関数を使用するキーとして使用できるバイトを派生させます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">他のパーティの公開キーとのキー交換からのキー マテリアル。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>If the value of <ph id="ph1">`secretPrepend`</ph> or <ph id="ph2">`secretAppend`</ph> is <ph id="ph3">`null`</ph>, they are treated as empty arrays.</source>
          <target state="translated">場合の値<ph id="ph1">`secretPrepend`</ph>または<ph id="ph2">`secretAppend`</ph>は<ph id="ph3">`null`</ph>、空の配列として扱われます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> が ECDH キーではありません。または正しいサイズではありません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">は <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])">
          <source>All other errors.</source>
          <target state="translated">上記以外のすべてのエラー。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">ハッシュ ベース メッセージ認証コード (HMAC) を使用して、キーとして使用できるバイト数を派生しています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">もう一方のパーティの公開キー。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The hash algorithm to use to derive the key material.</source>
          <target state="translated">キー マテリアルを派生させるために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key for the HMAC.</source>
          <target state="translated">HMAC のキー。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to prepend to the derived secret before hashing.</source>
          <target state="translated">ハッシュ前に派生の機密情報の先頭に追加する値。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>A value to append to the derived secret before hashing.</source>
          <target state="translated">ハッシュ前に派生の機密情報に追加する値。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>Derives bytes that can be used as a key using a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated">ハッシュ ベース メッセージ認証コード (HMAC) を使用して、キーとして使用できるバイト数を派生しています。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">他のパーティの公開キーとのキー交換からのキー マテリアル。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>If the value of <ph id="ph1">`secretPrepend`</ph> or <ph id="ph2">`secretAppend`</ph> is <ph id="ph3">`null`</ph>, they are treated as empty arrays.</source>
          <target state="translated">場合の値<ph id="ph1">`secretPrepend`</ph>または<ph id="ph2">`secretAppend`</ph>は<ph id="ph3">`null`</ph>、空の配列として扱われます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>If the value of <ph id="ph1">`hmacKey`</ph> is <ph id="ph2">`null`</ph>, the result of the Elliptic Curve Diffie-Hellman (ECDH) algorithm will be used as the HMAC key.</source>
          <target state="translated">場合の値<ph id="ph1">`hmacKey`</ph>は<ph id="ph2">`null`</ph>、Diffie-hellman ECDH (Elliptic Curve) アルゴリズムの結果は、HMAC キーとして使用されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> が ECDH キーではありません。または正しいサイズではありません。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">は <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])">
          <source>All other errors.</source>
          <target state="translated">上記以外のすべてのエラー。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Derives the key material that is generated from the secret agreement between two parties.</source>
          <target state="translated">二者の間の秘密協定から生成されたキー マテリアルを派生させます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The Elliptic Curve Diffie-Hellman (ECDH) algorithm accepts the private key and the other party’s public key as input, and produces the secret agreement as output.</source>
          <target state="translated">Diffie-hellman ECDH (Elliptic Curve) アルゴリズムは秘密キーと、入力として、他のパーティの公開キーを受け付けるし、出力として秘密協定を生成します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The key derivation function (KDF) then takes the secret agreement and produces the key material as output.</source>
          <target state="translated">キー派生機能 (KDF) は、秘密協定を受け取りし、出力としてキー マテリアルを生成します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</source>
          <target state="translated">キー交換で相手から取得した ECDH (Elliptic Curve Diffie-Hellman) キーの公開部分を格納したオブジェクト。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>Derives the key material that is generated from the secret agreement between two parties, given a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">相手の公開キーを格納した <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> オブジェクトを指定した場合に、二者の間の秘密協定から生成されたキー マテリアルを派生させます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>A byte array that contains the key material.</source>
          <target state="translated">キー マテリアルを格納したバイト配列。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">現在のオブジェクトの秘密キーと指定した公開キーから計算された秘密協定から、この情報は生成されます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>Either its <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /&gt;</ph> property does not specify <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /&gt;</ph> or its key size does not match the key size of this instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Security.Cryptography.CngKey.AlgorithmGroup" /&gt;</ph> プロパティで <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman" /&gt;</ph> が指定されていないか、キー サイズが現在のインスタンスのキー サイズと一致していません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>This object's <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /&gt;</ph> property specifies the <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph> key derivation function, but either <ph id="ph3">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /&gt;</ph> or <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">このオブジェクトの <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction" /&gt;</ph> プロパティでは <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph> キー派生関数を指定しますが、<ph id="ph3">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Label" /&gt;</ph> または <ph id="ph4">&lt;see cref="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed" /&gt;</ph> のどちらか一方は <ph id="ph5">&lt;see langword="null" /&gt;</ph> にします。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)">
          <source>All other errors.</source>
          <target state="translated">上記以外のすべてのエラー。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The public key from the other party in the key exchange.</source>
          <target state="translated">キー交換で相手から取得した公開キー。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>Derives the key material that is generated from the secret agreement between two parties, given an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">相手の公開キーを格納した <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> オブジェクトを指定した場合に、二者の間の秘密協定から生成されたキー マテリアルを派生させます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>A byte array that contains the key material.</source>
          <target state="translated">キー マテリアルを格納したバイト配列。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>This information is generated from the secret agreement that is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">現在のオブジェクトの秘密キーと指定した公開キーから計算された秘密協定から、この情報は生成されます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> key.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCngPublicKey" /&gt;</ph> キーではありません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The other party's public key.</source>
          <target state="translated">もう一方のパーティの公開キー。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The ASCII-encoded PRF label.</source>
          <target state="translated">ASCII エンコードされた PRF ラベル。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The 64-byte PRF seed.</source>
          <target state="translated">64 バイト PRF シード。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>Derives bytes that can be used as a key using a Transport Layer Security (TLS) Pseudo-Random Function (PRF) derivation algorithm.</source>
          <target state="translated">トランスポート層セキュリティ (TLS) 擬似ランダム関数 (PRF) 派生アルゴリズムを使用してキーとして使用できるバイトを派生します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>The key material from the key exchange with the other party’s public key.</source>
          <target state="translated">他のパーティの公開キーとのキー交換からのキー マテリアル。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="prfLabel" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prfLabel" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> が ECDH キーではありません。または正しいサイズではありません。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> is not exactly 64 bytes in length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="prfSeed" /&gt;</ph> は 64 バイト長に完全には一致しません。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])">
          <source>All other cryptographic errors.</source>
          <target state="translated">すべてのその他の暗号化エラー。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Gets a handle to the secret agreement generated between two parties.</source>
          <target state="translated">二者の間で生成された秘密協定のハンドルを取得します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A&gt;</ph> method overloads are for advanced users who need a handle to the raw secret agreement instead of the key material.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle%2A&gt;</ph>メソッドのオーバー ロードは、キー マテリアルではなく生秘密協定へのハンドルが必要な高度なユーザーです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>The secret agreement handle can be used in platform invoke calls to perform any work that is not wrapped by the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph> class.</source>
          <target state="translated">秘密協定ハンドルは、プラットフォームで使用できる呼び出しによってラップされていないすべての作業を実行するが、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>An object that contains the public part of the Elliptic Curve Diffie-Hellman (ECDH) key from the other party in the key exchange.</source>
          <target state="translated">キー交換で相手から取得した ECDH (Elliptic Curve Diffie-Hellman) キーの公開部分を格納したオブジェクト。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>Gets a handle to the secret agreement generated between two parties, given a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">相手の公開キーを格納した <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> オブジェクトを指定した場合に、二者の間で生成された秘密協定のハンドルを取得します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>A handle to the secret agreement.</source>
          <target state="translated">秘密協定を識別するハンドル。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>This information is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">現在のオブジェクトの秘密キーと指定した公開キーから、この情報は計算されます。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an ECDH key, or it is not the correct size.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> が ECDH キーではありません。または正しいサイズではありません。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>All other errors.</source>
          <target state="translated">上記以外のすべてのエラー。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">アンマネージ コードを呼び出すアクセス許可。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>Demand value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">要求値:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>The public key from the other party in the key exchange.</source>
          <target state="translated">キー交換で相手から取得した公開キー。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>Gets a handle to the secret agreement generated between two parties, given an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> object that contains the second party's public key.</source>
          <target state="translated">相手の公開キーを格納した <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> オブジェクトを指定した場合に、二者の間で生成された秘密協定のハンドルを取得します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>A handle to the secret agreement.</source>
          <target state="translated">秘密協定を識別するハンドル。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source>This information is calculated from the current object's private key and the specified public key.</source>
          <target state="translated">現在のオブジェクトの秘密キーと指定した公開キーから、この情報は計算されます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)">
          <source><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> key.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="otherPartyPublicKey" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanPublicKey" /&gt;</ph> キーではありません。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プライベート パラメーターを含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>Exports the key and explicit curve parameters used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object into an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> オブジェクトによって使用されているキーと明示的な曲線パラメーターを <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> オブジェクトにエクスポートします。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>The key and explicit curve parameters used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> オブジェクトによって使用されているキーと明示的な曲線パラメーター。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>The method cannot obtain curve values.</source>
          <target state="translated">メソッドは曲線の値を取得できません。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>Explicit export is not supported by this platform.</source>
          <target state="translated">明示的なエクスポートは、このプラットフォームではサポートされていません。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)">
          <source>Windows 10 or higher is required.</source>
          <target state="translated">Windows 10 以降が必要です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プライベート パラメーターを含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>Exports the key used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object into an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> オブジェクトが使用するキーを <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.ECParameters" /&gt;</ph> オブジェクトにエクスポートします。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>The key and named curve parameters used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> オブジェクトによって使用されているキーと名前付き曲線パラメーター。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>If the key was created as a named curve, the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType&gt;</ph> field contains named curve parameters;          otherwise,  it contains explicit parameters.</source>
          <target state="translated">名前付きの曲線として、キーが作成された場合、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECParameters.Curve?displayProperty=nameWithType&gt;</ph>フィールドには、名前付きの曲線のパラメーターが含まれています。         それ以外の場合、明示的なパラメーターが含まれています。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)">
          <source>The method cannot obtain curve values.</source>
          <target state="translated">メソッドは曲線の値を取得できません。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Deserializes the key information from an XML string.</source>
          <target state="translated">XML 文字列のキー情報を逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">逆シリアル化する XML ベースのキー情報。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>This method is not implemented.</source>
          <target state="translated">このメソッドは実装されていません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>To deserialize an XML key, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">XML キーを逆シリアル化を使用して、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString%28System.String%2CSystem.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph>オーバー ロードを代用します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)">
          <source>This method was not overridden for this instance.</source>
          <target state="translated">このメソッドは、このインスタンス向けにオーバーライドされていません。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The XML-based key information to be deserialized.</source>
          <target state="translated">逆シリアル化する XML ベースのキー情報。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">XML 文字列の形式を指定する列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">現在使用できる唯一の形式は、<ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Deserializes the key information from an XML string by using the specified format.</source>
          <target state="translated">指定した形式を使用して、XML 文字列からキー情報を逆シリアル化します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> is malformed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xml" /&gt;</ph> の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効な形式を指定しています。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">使用できる唯一の値は、<ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)">
          <source>All other errors.</source>
          <target state="translated">上記以外のすべてのエラー。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>The curve used to generate an ephemeral public/private key pair.</source>
          <target state="translated">一時的な公開/秘密キー ペアを生成するために使用される曲線。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Generates a new ephemeral public/private key pair for the specified curve.</source>
          <target state="translated">指定した曲線の新しい一時的な公開/秘密キー ペアを生成します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">`curve`</ph> must validate (that is, it must return true when passed to the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph> method) and must not be implicit.</source>
          <target state="translated"><ph id="ph1">`curve`</ph> 検証する必要があります (つまり、true を返さなければなりませんに渡されるときに、<ph id="ph2">&lt;xref:System.Security.Cryptography.ECCurve.Validate%2A?displayProperty=nameWithType&gt;</ph>メソッド) 暗黙の型にすることです。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source>Characteristic-2 curves are not supported on Windows.</source>
          <target state="translated">Windows では、特性 2 曲線はサポートされていません。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)">
          <source><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="curve" /&gt;</ph> は検証されません。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>Gets or sets the hash algorithm to use when generating key material.</source>
          <target state="translated">キー マテリアルの生成時に使用するハッシュ アルゴリズムを取得または設定します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>An object that specifies the hash algorithm.</source>
          <target state="translated">ハッシュ アルゴリズムを指定するオブジェクト。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>This property is used by Cryptography Next Generation (CNG) objects only if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> value is set in the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property.</source>
          <target state="translated">このプロパティは、Cryptography Next Generation (CNG) のオブジェクトの場合のみ、使用、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph>または<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph>値が設定されて、<ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>This property accepts the following algorithms: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>.</source>
          <target state="translated">このプロパティでは、次のアルゴリズム: <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.MD5%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha1%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha384%2A&gt;</ph>、および<ph id="ph5">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha512%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>Other custom hash algorithms may also be used.</source>
          <target state="translated">その他のカスタムのハッシュ アルゴリズムも使用できます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>The default algorithm is <ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>.</source>
          <target state="translated">既定のアルゴリズムは<ph id="ph1">&lt;xref:System.Security.Cryptography.CngAlgorithm.Sha256%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm">
          <source>The value is <ph id="ph1">&lt;see langword="null." /&gt;</ph></source>
          <target state="translated">値が <ph id="ph1">&lt;see langword="null." /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>Gets or sets the Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</source>
          <target state="translated">キー マテリアル派生時に使用するハッシュ メッセージ認証コード (HMAC: Hash-based Message Authentication Code) キーを取得または設定します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>The Hash-based Message Authentication Code (HMAC) key to use when deriving key material.</source>
          <target state="translated">キー マテリアルの派生時に使用するハッシュ メッセージ認証コード (HMAC) キー。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>This property applies only when the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> value is set in the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property, and the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">このプロパティは適用される場合にのみ、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph>値が設定されて、<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph>プロパティ、および<ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey%2A&gt;</ph>プロパティは<ph id="ph4">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.HmacKey">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">既定では、値は <ph id="ph1">`null`</ph> です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The curve's parameters to import.</source>
          <target state="translated">インポートする曲線のパラメーター。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>Imports the specified parameters for an <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> object as a key into the current instance.</source>
          <target state="translated">キーとして <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECCurve" /&gt;</ph> オブジェクトに指定したパラメーターを現在のインスタンスにインポートします。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A&gt;</ph> method replaces the existing key that this object is working with by creating a         new <ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters%2A&gt;</ph>メソッドは、このオブジェクトは連携し、新しいを作成している既存のキーを置き換えます<ph id="ph2">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> contains only the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph> field, then only a public key is imported.</source>
          <target state="translated">場合<ph id="ph1">`parameters`</ph>のみが含まれています、<ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Q&gt;</ph>フィールドに、公開キーのみをインポートし、します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>If <ph id="ph1">`parameters`</ph> also contains <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>, then a full key pair is be imported.</source>
          <target state="translated">場合<ph id="ph1">`parameters`</ph>も含まれている<ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.D&gt;</ph>は、完全なキー ペアをインポートし、します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source>The <ph id="ph1">`parameter`</ph> <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph> value specifies the type of the curve to import.</source>
          <target state="translated"><ph id="ph1">`parameter`</ph> <ph id="ph2">&lt;xref:System.Security.Cryptography.ECParameters.Curve&gt;</ph>値をインポートする曲線の種類を指定します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> does not validate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> は検証されません。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that cannot be imported..</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> はインポートできない曲線を参照します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)">
          <source><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> references a curve that is not supported by this platform.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="parameters" /&gt;</ph> はこのプラットフォームでサポートされていない曲線を参照します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
          <source>Specifies the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> that is used by the current object for cryptographic operations.</source>
          <target state="translated">現在のオブジェクトが暗号化操作のために使用する <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CngKey" /&gt;</ph> を指定します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Key">
          <source>The key pair used by this object to perform cryptographic operations.</source>
          <target state="translated">このオブジェクトが暗号化操作を実行するために使用するキー ペア。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>Gets or sets the key derivation function for the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> クラスのキー派生関数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /&gt;</ph> enumeration values: <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction" /&gt;</ph> 列挙値である <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls" /&gt;</ph> のうちのいずれか。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>This property specifies the key derivation function that is used to transform the secret agreement into key material.</source>
          <target state="translated">このプロパティは、キー マテリアルに秘密協定を変換に使用されるキーの派生関数を指定します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction">
          <source>The enumeration value is out of range.</source>
          <target state="translated">列挙値が範囲外です。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>Gets or sets the label value that is used for key derivation.</source>
          <target state="translated">キー派生で使用されるラベル値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>The label value.</source>
          <target state="translated">ラベル値。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph> value is set in the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property.</source>
          <target state="translated">場合、この値がキー派生の使用は、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph>値が設定されて、<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Label">
          <source>By default, it is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">既定では<ph id="ph1">`null`</ph>します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
          <source>Gets the public key that can be used by another <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> object to generate a shared secret agreement.</source>
          <target state="translated">別の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> オブジェクトが共有秘密協定を生成するために使用できる公開キーを取得します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.PublicKey">
          <source>The public key that is associated with this instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /&gt;</ph> オブジェクトの現在のインスタンスに関連付けられている公開キー。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>Gets or sets a value that will be appended to the secret agreement when generating key material.</source>
          <target state="translated">キー マテリアル生成時に秘密協定に追加される値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>The value that is appended to the secret agreement.</source>
          <target state="translated">秘密協定に追加される値。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph> key derivation function (KDF) is used.</source>
          <target state="translated">場合、この値がキー派生の使用は、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash&gt;</ph>または<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph>キー派生関数 (KDF) を使用します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>The value is appended to the secret agreement, and the combined value is passed to the KDF to generate the key material.</source>
          <target state="translated">秘密協定に値が追加され、キー マテリアルを生成する KDF を総合した値が渡されます。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">既定では、値は <ph id="ph1">`null`</ph> です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>Gets or sets a value that will be added to the beginning of the secret agreement when deriving key material.</source>
          <target state="translated">キー マテリアル派生時に秘密協定の開始部分に追加される値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>The value that is appended to the beginning of the secret agreement during key derivation.</source>
          <target state="translated">キー派生時に秘密協定の開始部分に追加される値。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property is set to one of the following values:</source>
          <target state="translated">場合、この値がキー派生の使用は、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph>プロパティは、次の値のいずれかに設定します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>The value is prepended to the secret agreement, and the combined value is passed to the key derivation function (KDF) to generate the key material.</source>
          <target state="translated">シークレットのアグリーメントに追加され、キー マテリアルを生成するには、キー派生関数 (KDF) を総合した値が渡されます。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">既定では、値は <ph id="ph1">`null`</ph> です。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>Gets or sets the seed value that will be used when deriving key material.</source>
          <target state="translated">キー マテリアル派生時に使用されるシード値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>The seed value.</source>
          <target state="translated">シード値。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph>.</source>
          <target state="translated">場合、この値がキー派生の使用は、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph>プロパティに設定されている<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.Seed">
          <source>By default, the value is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">既定では、値は <ph id="ph1">`null`</ph> です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.ECDiffieHellmanCng">
          <source>Serializes the key information to an XML string.</source>
          <target state="translated">キー情報を XML 文字列にシリアル化します。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プライベート パラメーターを含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>This method is not implemented.</source>
          <target state="translated">このメソッドは実装されていません。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>Not applicable.</source>
          <target state="translated">該当なし。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>To convert the current key to an XML representation, use the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph> overload instead.</source>
          <target state="translated">現在のキーを XML 表現に変換するを使用して、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString%28System.Security.Cryptography.ECKeyXmlFormat%29&gt;</ph>オーバー ロードを代用します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)">
          <source>This method was not overridden for this instance.</source>
          <target state="translated">このメソッドは、このインスタンス向けにオーバーライドされていません。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>One of the enumeration values that specifies the format of the XML string.</source>
          <target state="translated">XML 文字列の形式を指定する列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only currently accepted format is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">現在使用できる唯一の形式は、<ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>Serializes the key information to an XML string by using the specified format.</source>
          <target state="translated">指定した形式を使用して、キー情報を XML 文字列にシリアル化します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>A string object that contains the key information, serialized to an XML string, according to the requested format.</source>
          <target state="translated">要求された形式に従って XML 文字列にシリアル化されたキー情報を格納している文字列オブジェクト。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> specifies an invalid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効な形式を指定しています。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)">
          <source>The only accepted value is <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph>.</source>
          <target state="translated">使用できる唯一の値は、<ph id="ph1">&lt;see cref="F:System.Security.Cryptography.ECKeyXmlFormat.Rfc4050" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source>Gets a value that indicates whether the secret agreement is used as a Hash-based Message Authentication Code (HMAC) key to derive key material.</source>
          <target state="translated">キー マテリアルを派生させるハッシュ メッセージ認証コード (HMAC) キーとして秘密協定が使用されるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the secret agreement is used as an HMAC key to derive key material; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">キー マテリアルを派生させる HMAC キーとして秘密協定が使用される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source>This value is used for key derivation if the <ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph>.</source>
          <target state="translated">場合、この値がキー派生の使用は、<ph id="ph1">&lt;xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A&gt;</ph>プロパティに設定されている<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey">
          <source>By default, the value is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定では、値は <ph id="ph1">`false`</ph> です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>