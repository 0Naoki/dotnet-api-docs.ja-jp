<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DSA.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5796560acc71d2e1faf7c90cabba3fd9be96b0fd6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">796560acc71d2e1faf7c90cabba3fd9be96b0fd6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSA">
          <source>Represents the abstract base class from which all implementations of the Digital Signature Algorithm (<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>) must inherit.</source>
          <target state="translated">デジタル署名アルゴリズム (<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>) のすべての実装が継承する必要のある抽象基底クラスを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> class and derived classes to create digital signatures that help protect the integrity of your data.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph>クラスと派生クラスで、データの整合性を保護するためのデジタル署名を作成します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph> provides an implementation of this class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSACryptoServiceProvider&gt;</ph>このクラスの実装を提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</source>
          <target state="translated">公開キー システムを使用して、メッセージのデジタル署名、送信者はまず、メッセージ ダイジェストを作成するメッセージをハッシュ関数を適用します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</source>
          <target state="translated">送信者は、送信者の個人用の署名を作成する、送信側の秘密キーで、メッセージ ダイジェストを暗号化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</source>
          <target state="translated">メッセージと署名を受信したときに、受信者は、メッセージ ダイジェストを復元する送信者の公開キーを使用して署名を復号化され、送信者が使用されるのと同じハッシュ アルゴリズムを使用してメッセージをハッシュします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</source>
          <target state="translated">場合は、送信者から受け取ったメッセージ ダイジェストを受信者が完全に一致する計算、メッセージ ダイジェスト、受信側はメッセージが転送中に変更されなかったことを想定できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</source>
          <target state="translated">送信者の公開キーは、一般的な知識があるため、すべてのユーザーが、署名を検証できることに注意してください。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>Newer asymmetric algorithms are available.</source>
          <target state="translated">新しい非対称アルゴリズムを利用できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>Consider using the <ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsa&gt;</ph> class, or the <ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph> class instead of the <ph id="ph4">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> class.</source>
          <target state="translated">使用を検討して、<ph id="ph1">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>クラス、<ph id="ph2">&lt;xref:System.Security.Cryptography.ECDsa&gt;</ph>クラス、または<ph id="ph3">&lt;xref:System.Security.Cryptography.ECDiffieHellman&gt;</ph>クラスの代わりに、<ph id="ph4">&lt;xref:System.Security.Cryptography.DSA&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>Use <ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph> only for compatibility with legacy applications and data.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph>レガシ アプリケーションとデータとの互換性のみです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.DSA">
          <source>This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</source>
          <target state="translated">このアルゴリズムは、64 ビット単位で、1024 ビットから 512 ビットのキー長をサポートします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSA">
          <source>Creates a cryptographic object used to perform the asymmetric algorithm.</source>
          <target state="translated">非対称アルゴリズムを実行するために使用する暗号オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.Create">
          <source>Creates the default cryptographic object used to perform the asymmetric algorithm.</source>
          <target state="translated">非対称アルゴリズムを実行するために使用する既定の暗号オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.Create">
          <source>A cryptographic object used to perform the asymmetric algorithm.</source>
          <target state="translated">非対象アルゴリズムを実行するために使用する暗号オブジェクト。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.Create(System.String)">
          <source>The name of the specific implementation of <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> to use.</source>
          <target state="translated">使用する <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> の特定の実装の名前。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.Create(System.String)">
          <source>Creates the specified cryptographic object used to perform the asymmetric algorithm.</source>
          <target state="translated">非対称アルゴリズムを実行するために使用する指定された暗号オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.Create(System.String)">
          <source>A cryptographic object used to perform the asymmetric algorithm.</source>
          <target state="translated">非対象アルゴリズムを実行するために使用する暗号オブジェクト。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.DSA.Create(System.String)">
          <source>For <ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph>, use the name System.Security.Cryptography.DSA.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.DSA&gt;</ph>System.Security.Cryptography.DSA の名前を使用します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.CreateSignature(System.Byte[])">
          <source>The data to be signed.</source>
          <target state="translated">署名する対象のデータ。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.CreateSignature(System.Byte[])">
          <source>When overridden in a derived class, creates the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定されたデータの <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 署名を作成します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.CreateSignature(System.Byte[])">
          <source>The digital signature for the specified data.</source>
          <target state="translated">指定したデータに対するデジタル署名。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.ExportParameters(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プライベート パラメーターを含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.ExportParameters(System.Boolean)">
          <source>When overridden in a derived class, exports the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSAParameters" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、<ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSAParameters" /&gt;</ph> をエクスポートします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.ExportParameters(System.Boolean)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> のパラメーター。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.FromXmlString(System.String)">
          <source>The XML string to use to reconstruct the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> オブジェクトの再構築に使用する XML 文字列。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.FromXmlString(System.String)">
          <source>Reconstructs a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> object from an XML string.</source>
          <target state="translated">XML 文字列から <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> オブジェクトを再構築します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.FromXmlString(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="xmlString" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlString" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.FromXmlString(System.String)">
          <source>The format of the <ph id="ph1">&lt;paramref name="xmlString" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlString" /&gt;</ph> パラメーターの書式が有効ではありません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSA">
          <source>Computes the hash value of binary data.</source>
          <target state="translated">バイナリ データのハッシュ値を計算します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>The binary stream to hash.</source>
          <target state="translated">ハッシュするバイナリ ストリーム。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>The algorithm to use to hash the data.</source>
          <target state="translated">データのハッシュに使用するアルゴリズム。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>When overridden in a derived class, computes the hash value of a specified binary stream by using a specified hashing algorithm.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したハッシュ アルゴリズムを使用して、指定したバイナリ ストリームのハッシュ値が計算されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hashed data.</source>
          <target state="translated">ハッシュされたデータ。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>A derived class must override this method.</source>
          <target state="translated">派生クラスはこのメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The data to be hashed.</source>
          <target state="translated">ハッシュされるデータ。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The index of the first byte in <bpt id="p1">&lt;c&gt;</bpt>data<ept id="p1">&lt;/c&gt;</ept> that is to be hashed.</source>
          <target state="translated">ハッシュされる<bpt id="p1">&lt;c&gt;</bpt>データ<ept id="p1">&lt;/c&gt;</ept>の最初のバイトのインデックス。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The number of bytes to hash.</source>
          <target state="translated">ハッシュするバイト数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The algorithm to use to hash the data.</source>
          <target state="translated">データのハッシュに使用するアルゴリズム。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>When overridden in a derived class, computes the hash value of a specified portion of a byte array by using a specified hashing algorithm.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定したハッシュ アルゴリズムを使用して、指定したバイト配列部分のハッシュ値が計算されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hashed data.</source>
          <target state="translated">ハッシュされたデータ。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>A derived class must override this method.</source>
          <target state="translated">派生クラスはこのメソッドをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>The parameters for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> のパラメーター。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.ImportParameters(System.Security.Cryptography.DSAParameters)">
          <source>When overridden in a derived class, imports the specified <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSAParameters" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定された <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSAParameters" /&gt;</ph> をインポートします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSA">
          <source>Computes the hash value of the specified data and signs it.</source>
          <target state="translated">指定したデータのハッシュ値を計算し、それに署名します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">ハッシュを計算する対象の入力データ。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">ハッシュ値を作成するために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>Computes the hash value of the specified byte array using the specified hash algorithm and signs the resulting hash value.</source>
          <target state="translated">指定したハッシュ アルゴリズムを使用して、指定したバイト配列のハッシュ値を計算し、結果のハッシュ値に署名します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The DSA signature for the specified data.</source>
          <target state="translated">指定されたデータの DSA 署名。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">は <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>The input stream for which to compute the hash.</source>
          <target state="translated">ハッシュを計算する対象の入力ストリーム。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">ハッシュ値を作成するために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>Computes the hash value of the specified stream using the specified hash algorithm and signs the resulting hash value.</source>
          <target state="translated">指定したハッシュ アルゴリズムを使用して、指定したストリームのハッシュ値を計算し、結果のハッシュ値に署名します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>The DSA signature for the specified data.</source>
          <target state="translated">指定されたデータの DSA 署名。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">は <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The input data for which to compute the hash.</source>
          <target state="translated">ハッシュを計算する対象の入力データ。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The offset into the array at which to begin using data.</source>
          <target state="translated">配列内のデータの使用開始位置を示すオフセット。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The number of bytes in the array to use as data.</source>
          <target state="translated">配列内でデータとして使用されるバイトの数。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm to use to create the hash value.</source>
          <target state="translated">ハッシュ値を作成するために使用するハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>Computes the hash value of a portion of the specified byte array using the specified hash algorithm and signs the resulting hash value.</source>
          <target state="translated">指定したハッシュ アルゴリズムを使用して、指定したバイト配列の一部分のハッシュ値を計算し、結果のハッシュ値に署名します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The DSA signature for the specified data.</source>
          <target state="translated">指定されたデータの DSA 署名。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">は <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> – 1 results in an index that is beyond the upper bound of <ph id="ph4">&lt;paramref name="data" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> – 1 の結果は、<ph id="ph4">&lt;paramref name="data" /&gt;</ph> の上限を超えるインデックスになります。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.ToXmlString(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include private parameters; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プライベート パラメーターを含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.ToXmlString(System.Boolean)">
          <source>Creates and returns an XML string representation of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> オブジェクトの XML 文字列形式を作成して返します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.ToXmlString(System.Boolean)">
          <source>An XML string encoding of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> オブジェクトの XML 文字列エンコーディング。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.DSA">
          <source>Verifies that a digital signature is valid.</source>
          <target state="translated">デジタル署名が有効であることを確認します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The signed data.</source>
          <target state="translated">署名されるデータ。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The signature data to be verified.</source>
          <target state="translated">検証する署名データ。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">データのハッシュ値を作成するために使用されるハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>Verifies that a digital signature is valid by calculating the hash value of the specified data using the specified hash algorithm and comparing it to the provided signature.</source>
          <target state="translated">指定したハッシュ アルゴリズムを使用して、指定したデータのハッシュ値を計算し、これを指定した署名と比較することによって、デジタル署名が有効であることを確認します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the digital signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">デジタル署名が有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signature" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">は <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The signed data.</source>
          <target state="translated">署名されるデータ。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The signature data to be verified.</source>
          <target state="translated">検証する署名データ。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">データのハッシュ値を作成するために使用されるハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>Verifies that a digital signature is valid by calculating the hash value of the specified stream using the specified hash algorithm and comparing it to the provided signature.</source>
          <target state="translated">指定したハッシュ アルゴリズムを使用して、指定したストリームのハッシュ値を計算し、これを指定した署名と比較することによって、デジタル署名が有効であることを確認します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the digital signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">デジタル署名が有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signature" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">は <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The signed data.</source>
          <target state="translated">署名されるデータ。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The starting index at which to compute the hash.</source>
          <target state="translated">ハッシュを計算する位置を示す開始インデックス。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The number of bytes to hash.</source>
          <target state="translated">ハッシュするバイト数。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The signature data to be verified.</source>
          <target state="translated">検証する署名データ。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm used to create the hash value of the data.</source>
          <target state="translated">データのハッシュ値を作成するために使用されるハッシュ アルゴリズム。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>Verifies that a digital signature is valid by calculating the hash value of the data in a portion of a byte array using the specified hash algorithm and comparing it to the provided signature.</source>
          <target state="translated">指定したハッシュ アルゴリズムを使用して、バイト配列の部分のデータのハッシュ値を計算し、これを指定した署名と比較することによって、デジタル署名が有効であることを確認します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the digital signature is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">デジタル署名が有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="data" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="data" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="signature" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="signature" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hashAlgorithm" /&gt;</ph>.<ph id="ph2">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">は <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> – 1 results in an index that is beyond the upper bound of <ph id="ph4">&lt;paramref name="data" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;paramref name="count" /&gt;</ph> – 1 の結果は、<ph id="ph4">&lt;paramref name="data" /&gt;</ph> の上限を超えるインデックスになります。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])">
          <source>The hash of the data signed with <bpt id="p1">&lt;c&gt;</bpt>rgbSignature<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>rgbSignature<ept id="p1">&lt;/c&gt;</ept> で署名したデータのハッシュ。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])">
          <source>The signature to be verified for <bpt id="p1">&lt;c&gt;</bpt>rgbData<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>rgbData<ept id="p1">&lt;/c&gt;</ept> の検証対象の署名。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])">
          <source>When overridden in a derived class, verifies the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> signature for the specified data.</source>
          <target state="translated">派生クラスでオーバーライドされると、指定されたデータの <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph> 署名を検証します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.DSA.VerifySignature(System.Byte[],System.Byte[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="rgbSignature" /&gt;</ph> matches the signature computed using the specified hash algorithm and key on <ph id="ph3">&lt;paramref name="rgbHash" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="rgbSignature" /&gt;</ph> が、指定したハッシュ アルゴリズムとキーを使用して <ph id="ph3">&lt;paramref name="rgbHash" /&gt;</ph> に対して算出された署名と一致する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>