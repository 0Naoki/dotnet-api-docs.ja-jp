<Type Name="Rijndael" FullName="System.Security.Cryptography.Rijndael">
  <TypeSignature Language="C#" Value="public abstract class Rijndael : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Rijndael extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rijndael" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Rijndael&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rijndael abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8b56d-101"><see cref="T:System.Security.Cryptography.Rijndael" /> 対称暗号化アルゴリズムのすべての実装の継承元となる基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-101">Represents the base class from which all implementations of the <see cref="T:System.Security.Cryptography.Rijndael" /> symmetric encryption algorithm must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b56d-102">このアルゴリズムは、128、192 ビット、または 256 ビットのキーの長さをサポートしています。256 ビットを使用します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-102">This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits.</span></span> <span data-ttu-id="8b56d-103">このアルゴリズムは、128、192 ビット、または 256 ビットの数値のブロック サイズをサポートしています。既定の 128 ビット (<xref:System.Security.Cryptography.Aes>-互換性のある)。</span><span class="sxs-lookup"><span data-stu-id="8b56d-103">This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).</span></span>  
  
 <span data-ttu-id="8b56d-104"><xref:System.Security.Cryptography.Rijndael>クラスは、先行タスク、<xref:System.Security.Cryptography.Aes>アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="8b56d-104">The <xref:System.Security.Cryptography.Rijndael> class is the predecessor of the <xref:System.Security.Cryptography.Aes> algorithm.</span></span> <span data-ttu-id="8b56d-105">使用する必要があります、<xref:System.Security.Cryptography.Aes>の代わりにアルゴリズム<xref:System.Security.Cryptography.Rijndael>です。</span><span class="sxs-lookup"><span data-stu-id="8b56d-105">You should use the <xref:System.Security.Cryptography.Aes> algorithm instead of <xref:System.Security.Cryptography.Rijndael>.</span></span> <span data-ttu-id="8b56d-106">詳細については、エントリを参照してください。 [Rijndael 間の相違点および AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET セキュリティ ブログ。</span><span class="sxs-lookup"><span data-stu-id="8b56d-106">For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b56d-107">次のコード例では、<xref:System.Security.Cryptography.Rijndael>クラスを暗号化およびデータを復号化します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-107">The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Rijndael ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rijndael.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Rijndael();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b56d-108">
          <see cref="T:System.Security.Cryptography.Rijndael" /> の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-108">Initializes a new instance of <see cref="T:System.Security.Cryptography.Rijndael" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b56d-109">抽象クラスのインスタンスを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="8b56d-109">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="8b56d-110">アプリケーション コードでは、派生クラスの新しいインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="8b56d-110">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="8b56d-111">このメソッドは、保護対象のフィールドを初期化します。<xref:System.Security.Cryptography.SymmetricAlgorithm>を次の表に一覧表示の既定値です。</span><span class="sxs-lookup"><span data-stu-id="8b56d-111">This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table.</span></span>  
  
|<span data-ttu-id="8b56d-112">フィールド</span><span class="sxs-lookup"><span data-stu-id="8b56d-112">Field</span></span>|<span data-ttu-id="8b56d-113">既定値</span><span class="sxs-lookup"><span data-stu-id="8b56d-113">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="8b56d-114">256</span><span class="sxs-lookup"><span data-stu-id="8b56d-114">256</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="8b56d-115">128</span><span class="sxs-lookup"><span data-stu-id="8b56d-115">128</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="8b56d-116">128</span><span class="sxs-lookup"><span data-stu-id="8b56d-116">128</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8b56d-117">次のコード例では、<xref:System.Security.Cryptography.Rijndael>クラスを暗号化およびデータを復号化します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-117">The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b56d-118"><see cref="T:System.Security.Cryptography.Rijndael" /> アルゴリズムを実行する暗号オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-118">Creates a cryptographic object to perform the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Rijndael Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Rijndael Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rijndael.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As Rijndael" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Rijndael ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Rijndael</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b56d-119"><see cref="T:System.Security.Cryptography.Rijndael" /> アルゴリズムを実行する暗号オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-119">Creates a cryptographic object to perform the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="8b56d-120">暗号オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b56d-120">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b56d-121">既定の実装<xref:System.Security.Cryptography.Rijndael>は<xref:System.Security.Cryptography.RijndaelManaged>します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-121">The default implementation of <xref:System.Security.Cryptography.Rijndael> is <xref:System.Security.Cryptography.RijndaelManaged>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b56d-122">次のコード例では、<xref:System.Security.Cryptography.Rijndael>クラスを暗号化およびデータを復号化します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-122">The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="8b56d-123">連邦情報処理標準 (FIPS) モードが有効にされた状態でアルゴリズムが使用されましたが、このアルゴリズムは FIPS 準拠ではありません。 </span><span class="sxs-lookup"><span data-stu-id="8b56d-123">The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Rijndael Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Rijndael Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rijndael.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As Rijndael" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Rijndael ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Rijndael</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="8b56d-124">作成する、<see cref="T:System.Security.Cryptography.Rijndael" /> の特定の実装の名前。</span><span class="sxs-lookup"><span data-stu-id="8b56d-124">The name of the specific implementation of <see cref="T:System.Security.Cryptography.Rijndael" /> to create.</span></span></param>
        <summary><span data-ttu-id="8b56d-125"><see cref="T:System.Security.Cryptography.Rijndael" /> アルゴリズムの特定の実装を実行する暗号オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8b56d-125">Creates a cryptographic object to perform the specified implementation of the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="8b56d-126">暗号オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b56d-126">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b56d-127">使用できる値は、`algName`パラメーターは`Rijndael`と`System.Security.Cryptography.RijndaelManaged`です。</span><span class="sxs-lookup"><span data-stu-id="8b56d-127">Acceptable values for the `algName` parameter are `Rijndael` and `System.Security.Cryptography.RijndaelManaged`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="8b56d-128">連邦情報処理規格 (FIPS: Federal Information Processing Standard) モードが有効になっていますが、<paramref name="algName" /> パラメーターによって定義されたアルゴリズムは、FIPS 準拠ではありません。</span><span class="sxs-lookup"><span data-stu-id="8b56d-128">The algorithm described by the <paramref name="algName" /> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>