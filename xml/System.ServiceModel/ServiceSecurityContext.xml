<Type Name="ServiceSecurityContext" FullName="System.ServiceModel.ServiceSecurityContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd107cd2aacb71d21780087d0905599a535db6fd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36410481" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceSecurityContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceSecurityContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceSecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceSecurityContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceSecurityContext" />
  <TypeSignature Language="F#" Value="type ServiceSecurityContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>リモート パーティのセキュリティ コンテキストを表します。 クライアントではサービス ID を、サービスではクライアント ID を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このデータは、メッセージの <xref:System.ServiceModel.Security.SecurityMessageProperty> の一部です。  
  
 このクラスを使用して、リモート デスクトップについての情報を取得する*セキュリティ コンテキスト*実行時にします。 クライアントが認証され、メソッドへのアクセスを承認されると、セキュリティ コンテキストが作成されます。 メッセージの認証および承認に成功すると、クライアントの現在のサービス インスタンスのセキュリティ情報を、このクラスのインスタンスから取得できます。  
  
 <xref:System.ServiceModel.ServiceSecurityContext> のインスタンスは、<xref:System.ServiceModel.OperationContext.Current%2A> クラスの <xref:System.ServiceModel.OperationContext> プロパティから取得できます。または、次の例に示すように、サービス操作メソッドの中から使用できます。  
  
## <a name="parsing-a-claimset"></a>ClaimSet の解析  
 このクラスは一般的に、メソッドにアクセスする際に、クライアントを識別するか承認することを目的として、現在のクレーム セットを取得するために使用します。 <xref:System.IdentityModel.Claims.ClaimSet> クラスは、<xref:System.IdentityModel.Claims.Claim> オブジェクトのコレクションを格納し、それぞれを解析して、特定のクレームが存在するかどうかを確認できます。 指定されたクレームが提供される場合は、承認を与えることができます。 この機能は、<xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> クラスの <xref:System.ServiceModel.ServiceAuthorizationManager> メソッドをオーバーライドすることで提供されます。  完全な例では、次を参照してください。、[承認ポリシー](~/docs/framework/wcf/samples/authorization-policy.md)です。  
  
## <a name="cookie-mode-and-isauthenticated"></a>クッキー モードと IsAuthenticated  
 状況によっては、リモート クライアントが匿名ユーザーとして認証される場合でも、<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A> インターフェイスの <xref:System.Security.Principal.IIdentity> プロパティが `true` を返すことに注意してください。 (<xref:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity%2A> プロパティは、<xref:System.Security.Principal.IIdentity> インターフェイスの実装を返します)。これは、次の状況に該当する場合に発生します。  
  
-   サービスが Windows 認証を使用する。  
  
-   サービスが、匿名ログオンを許可する。  
  
-   バインディングでは、 [ &lt;customBinding&gt;](~/docs/framework/configure-apps/file-schema/wcf/custombinding.md)です。  
  
-   カスタム バインディングに `<security>` 要素が含まれている。  
  
-   `<security>`要素が含まれています、 [ &lt;secureConversationBootstrap&gt; ](~/docs/framework/configure-apps/file-schema/wcf/secureconversationbootstrap.md)で、`requireSecurityContextCancellation`属性に設定`false`です。  
  
   
  
## Examples  
 次の例では、<xref:System.ServiceModel.ServiceSecurityContext> クラスを使用して、現在のセキュリティ コンテキストに関する情報を提供しています。 このコードは、<xref:System.IO.StreamWriter> クラスのインスタンスを作成して、情報をファイルに書き込みます。  
  
 [!code-csharp[ServiceSecurityContext#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicesecuritycontext/cs/source.cs#1)]
 [!code-vb[ServiceSecurityContext#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicesecuritycontext/vb/source.vb#1)]  
  
 次の例は、<xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> を使用してクレーム セットを解析する <xref:System.ServiceModel.ServiceSecurityContext> メソッドの実装を示しています。  
  
 [!code-csharp[ServiceSecurityContext#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicesecuritycontext/cs/source.cs#2)]
 [!code-vb[ServiceSecurityContext#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicesecuritycontext/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.OperationContext.Current" />
    <altmember cref="T:System.ServiceModel.OperationContext" />
    <altmember cref="T:System.IdentityModel.Claims.Claim" />
    <altmember cref="T:System.IdentityModel.Claims.ClaimSet" />
    <altmember cref="T:System.ServiceModel.ServiceAuthorizationManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.ServiceSecurityContext" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityContext (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityContext(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ authorizationPolicies);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceSecurityContext : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; -&gt; System.ServiceModel.ServiceSecurityContext" Usage="new System.ServiceModel.ServiceSecurityContext authorizationPolicies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizationPolicies" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="authorizationPolicies">承認ポリシーを格納する <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> 型の <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</param>
        <summary>ポリシー オブジェクトのコレクションを使用して、<see cref="T:System.ServiceModel.ServiceSecurityContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、既定のポリシー チェーン エンジンを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Policy.AuthorizationContext authorizationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityContext(System::IdentityModel::Policy::AuthorizationContext ^ authorizationContext);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceSecurityContext : System.IdentityModel.Policy.AuthorizationContext -&gt; System.ServiceModel.ServiceSecurityContext" Usage="new System.ServiceModel.ServiceSecurityContext authorizationContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizationContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
      </Parameters>
      <Docs>
        <param name="authorizationContext">承認情報を含む <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />。</param>
        <summary>指定した承認パラメーターを使用して、<see cref="T:System.ServiceModel.ServiceSecurityContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、このコンストラクターは、アプリケーションが独自のポリシー チェーン エンジンを実行するシナリオで使用し、結果は <xref:System.IdentityModel.Policy.AuthorizationContext> になります。 既定のポリシー エンジンでは、<xref:System.IdentityModel.Policy.IAuthorizationPolicy> のコレクションをパラメーターとして使用するコンストラクターを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceSecurityContext (System.IdentityModel.Policy.AuthorizationContext authorizationContext, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Policy.AuthorizationContext authorizationContext, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; authorizationPolicies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceSecurityContext(System::IdentityModel::Policy::AuthorizationContext ^ authorizationContext, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ authorizationPolicies);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceSecurityContext : System.IdentityModel.Policy.AuthorizationContext * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; -&gt; System.ServiceModel.ServiceSecurityContext" Usage="new System.ServiceModel.ServiceSecurityContext (authorizationContext, authorizationPolicies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authorizationContext" Type="System.IdentityModel.Policy.AuthorizationContext" />
        <Parameter Name="authorizationPolicies" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" />
      </Parameters>
      <Docs>
        <param name="authorizationContext">承認の設定値を格納する <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />。</param>
        <param name="authorizationPolicies">承認ポリシーを格納する <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> 型の <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />。</param>
        <summary>指定した承認パラメーターとポリシーのコレクションを使用して、<see cref="T:System.ServiceModel.ServiceSecurityContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.ServiceSecurityContext Anonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.ServiceSecurityContext Anonymous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Anonymous As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::ServiceSecurityContext ^ Anonymous { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Anonymous : System.ServiceModel.ServiceSecurityContext" Usage="System.ServiceModel.ServiceSecurityContext.Anonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>匿名パーティを表すために通常使用されるクレーム、ID、およびその他のコンテキスト データの空のコレクションを格納する <see cref="T:System.ServiceModel.ServiceSecurityContext" /> クラスのインスタンスを返します。</summary>
        <value>
          <see cref="T:System.ServiceModel.ServiceSecurityContext" /> の空のインスタンス。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationContext">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Policy.AuthorizationContext AuthorizationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Policy.AuthorizationContext AuthorizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthorizationContext As AuthorizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Policy::AuthorizationContext ^ AuthorizationContext { System::IdentityModel::Policy::AuthorizationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthorizationContext : System.IdentityModel.Policy.AuthorizationContext" Usage="System.ServiceModel.ServiceSecurityContext.AuthorizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Policy.AuthorizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このクラスのインスタンスの承認情報を取得します。  <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> は、アプリケーションがパーティの情報を問い合わせて取得できる <see cref="T:System.IdentityModel.Claims.ClaimSet" /> のコレクションを格納します。</summary>
        <value>承認の設定値を格納する <see cref="T:System.IdentityModel.Policy.AuthorizationContext" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationPolicies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; AuthorizationPolicies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; AuthorizationPolicies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ AuthorizationPolicies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ get(); void set(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthorizationPolicies : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; with get, set" Usage="System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このクラスのインスタンスに関連付けられたポリシーのコレクションを取得します。</summary>
        <value>ポリシーを格納する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 型の <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [ID モデルを使用したクレームと承認の管理](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.ServiceSecurityContext Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.ServiceSecurityContext Current" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::ServiceSecurityContext ^ Current { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.ServiceModel.ServiceSecurityContext" Usage="System.ServiceModel.ServiceSecurityContext.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.ServiceModel.ServiceSecurityContext" /> を取得します。</summary>
        <value>現在の <see cref="T:System.ServiceModel.ServiceSecurityContext" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.ServiceModel.ServiceSecurityContext.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のクライアントが、サービスに対する資格情報を提供しているかどうかを示す値を取得します。</summary>
        <value>クライアントが資格情報を提供している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IIdentity PrimaryIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity PrimaryIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IIdentity ^ PrimaryIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryIdentity : System.Security.Principal.IIdentity" Usage="System.ServiceModel.ServiceSecurityContext.PrimaryIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の設定に関連付けられたプライマリ ID を取得します。</summary>
        <value>現在の設定に関連付けられた <see cref="T:System.Security.Principal.IIdentity" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プライマリ ID は、現在のユーザーを認証するために使用される資格情報から取得されます。 資格情報が X.509 証明書の場合、ID は、サブジェクト名と拇印をこの順序で連結したものになります。 サブジェクト名とサムプリントは、セミコロンと空白で区切られます。 証明書のサブジェクト フィールドが `null` の場合、プライマリ ID には、セミコロン、スペース、およびサムプリントだけが含まれます。  
  
 双方向メッセージ交換パターンが Kerberos 直接認証で使用される場合、このプロパティはコールバック上で空になり、Claimset も空です。 そうでない場合に*SspiNegotiated* Kerberos の代わりに使用されます。  
  
 Kerberos リクエスター トークンはクライアントでのみ使用し、サービスを表します。 生成される承認ポリシーには、1 つのクレームと SPN が含まれ、したがって、クレームには ID が含まれません。 ほとんどの場合、<xref:System.ServiceModel.ServiceSecurityContext> はクライアントでは使用されないので問題ありません。 コールバック時の双方向シナリオでは、コールバックによってこのプロパティが検査されると、匿名 ID が得られます。  
  
   
  
## Examples  
 使用する例については、 `PrimaryIdentity` 、証明書を使用してクライアントを承認するためにプロパティを参照してください[する方法: セキュリティ コンテキストを調べて](~/docs/framework/wcf/how-to-examine-the-security-context.md)です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="System.ServiceModel.ServiceSecurityContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の設定の Windows ID を取得します。</summary>
        <value>Windows ドメイン ユーザーを表す <see cref="T:System.Security.Principal.WindowsIdentity" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リモート パーティを Windows アカウントに関連付けることができない場合は、<xref:System.Security.Principal.WindowsIdentity.IsAnonymous%2A> プロパティに `true` が設定されます。  
  
   
  
## Examples  
 <xref:System.Security.Permissions.PrincipalPermissionAttribute>  
  
 <xref:System.Security.Principal.IPrincipal>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>