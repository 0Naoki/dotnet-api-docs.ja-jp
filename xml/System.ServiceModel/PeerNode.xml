<Type Name="PeerNode" FullName="System.ServiceModel.PeerNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="edcfab01ad9b7d8e19ed4d5b707fa45a28545b75" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37612248" /></Metadata><TypeSignature Language="C#" Value="public sealed class PeerNode : System.ServiceModel.IOnlineStatus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PeerNode extends System.Object implements class System.ServiceModel.IOnlineStatus" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerNode" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PeerNode&#xA;Implements IOnlineStatus" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNode sealed : System::ServiceModel::IOnlineStatus" />
  <TypeSignature Language="F#" Value="type PeerNode = class&#xA;    interface IOnlineStatus" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IOnlineStatus</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="71dcd-101">特定のピア メッシュに参加するアプリケーションによって使用されるピア ノードのインスタンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-101">Defines the instance of of a peer node used by an application participating in a specific peer mesh.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71dcd-102">ピア ノードは、各チャネルのバインドに提供される <xref:System.ServiceModel.EndpointAddress> で、共通の URI およびホスト名をチャネルが共有している限り、メッシュ内に複数のピア チャネルをホストできます。</span><span class="sxs-lookup"><span data-stu-id="71dcd-102">A peer node can host multiple peer channels within the mesh as long as they share a common URI and host name in the <xref:System.ServiceModel.EndpointAddress> supplied to the binding for each channel.</span></span>  
  
 <span data-ttu-id="71dcd-103">1 つのピア ノードに対して定義した複数のピア チャネルを別々のバインドを使用して作成する場合、<xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>、<xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>、および <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> プロパティは、すべてのバインドで同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="71dcd-103">If two or more peer channels defined for a peer node are created with separate bindings, then the <xref:System.ServiceModel.NetPeerTcpBinding.Port%2A>, <xref:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress%2A>, and <xref:System.ServiceModel.NetPeerTcpBinding.Resolver%2A> properties must be identical on all bindings.</span></span>  
  
 <span data-ttu-id="71dcd-104">同じピア ノード インスタンス用に最初のチャネル バインドが 1 つ作成された後に、さらにチャネル バインドが作成される場合は、これと後続のバインドの <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> プロパティが、最初のチャネル バインドに設定された <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> プロパティの値以下になる必要があります。</span><span class="sxs-lookup"><span data-stu-id="71dcd-104">If a subsequent channel binding is created after the first one for the same peer node instance, then the <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property on this and subsequent bindings must be less than or equal to the value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> property as set on the first channel binding.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsOnline">
      <MemberSignature Language="C#" Value="public bool IsOnline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnline" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerNode.IsOnline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnline : bool" Usage="System.ServiceModel.PeerNode.IsOnline" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IOnlineStatus.IsOnline</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71dcd-105">ピア ノードがオンラインであり、ピア メッシュ内の近隣ノードにメッセージを送信できる状態かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-105">Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.</span></span></summary>
        <value><span data-ttu-id="71dcd-106">ピア ノードがオンラインの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="71dcd-106"><see langword="true" /> if the peer node is online; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71dcd-107">"オンライン" は、ピア ノードに、使用可能な近隣ノードがあることを示します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-107">"Online" indicates that a peer node has available neighbor nodes.</span></span> <span data-ttu-id="71dcd-108">"オフライン" は、ピア ノードに、使用可能な近隣ノードがないことを示します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-108">"Offline" indicates that a peer node has no available neighbors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessagePropagationFilter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerMessagePropagationFilter MessagePropagationFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerMessagePropagationFilter MessagePropagationFilter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerNode.MessagePropagationFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property MessagePropagationFilter As PeerMessagePropagationFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerMessagePropagationFilter ^ MessagePropagationFilter { System::ServiceModel::PeerMessagePropagationFilter ^ get(); void set(System::ServiceModel::PeerMessagePropagationFilter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessagePropagationFilter : System.ServiceModel.PeerMessagePropagationFilter with get, set" Usage="System.ServiceModel.PeerNode.MessagePropagationFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerMessagePropagationFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71dcd-109">ピア チャネル経由で受信したメッセージに対するカスタム フィルターを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-109">Gets and sets a custom filter for messages received over the peer channel.</span></span></summary>
        <value><span data-ttu-id="71dcd-110">カスタム メッセージ フィルターを格納する <see cref="T:System.ServiceModel.PeerMessagePropagationFilter" />。</span><span class="sxs-lookup"><span data-stu-id="71dcd-110"><see cref="T:System.ServiceModel.PeerMessagePropagationFilter" /> that contains a custom message filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71dcd-111">メッセージ フィルターは、派生型である必要があります。また、それに定義されている任意のカスタム機能を使用するために、その型に再キャストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="71dcd-111">The message filter must be a derived type and should be recast to that type to use any custom features defined on it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71dcd-112">リッスン用のチャネルが開かれていません。</span><span class="sxs-lookup"><span data-stu-id="71dcd-112">No channel is open for listening.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offline">
      <MemberSignature Language="C#" Value="public event EventHandler Offline;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Offline" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.PeerNode.Offline" />
      <MemberSignature Language="VB.NET" Value="Public Event Offline As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Offline;" />
      <MemberSignature Language="F#" Value="member this.Offline : EventHandler " Usage="member this.Offline : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.IOnlineStatus.Offline</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71dcd-113">ピア ノードがピア メッシュからオフラインになると通知します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-113">Signals when the peer node goes offline from the peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71dcd-114">オフライン ピア ノードには、接続可能なピア メッシュ内に近隣ノードがありません。</span><span class="sxs-lookup"><span data-stu-id="71dcd-114">An offline peer node has no neighbor nodes within the peer mesh to which it can connect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Online">
      <MemberSignature Language="C#" Value="public event EventHandler Online;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Online" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.PeerNode.Online" />
      <MemberSignature Language="VB.NET" Value="Public Event Online As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Online;" />
      <MemberSignature Language="F#" Value="member this.Online : EventHandler " Usage="member this.Online : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.IOnlineStatus.Online</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71dcd-115">ピア ノードがピア メッシュ内でオンラインになると通知します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-115">Signals when a peer node comes online within the peer mesh.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71dcd-116">オンライン ピア ノードには、接続されるピアメッシュ内に少なくとも 1 つの近隣ノードがあります。</span><span class="sxs-lookup"><span data-stu-id="71dcd-116">An online peer node has at least one neighbor node within the peer mesh to which it is connected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerNode.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="System.ServiceModel.PeerNode.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71dcd-117">ピア ノードがリッスンしているネットワーク ポートを取得します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-117">Gets the network port on which the peer node is listening.</span></span></summary>
        <value><span data-ttu-id="71dcd-118">ピア ノードがリッスンしているネットワーク ポートを指定する <see cref="T:System.Int32" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-118"><see cref="T:System.Int32" /> that specifies the network port on which the peer node is listening.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71dcd-119">リッスン用のチャネルが開かれていません。</span><span class="sxs-lookup"><span data-stu-id="71dcd-119">No channel is open for listening.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshConnection">
      <MemberSignature Language="C#" Value="public void RefreshConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RefreshConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerNode.RefreshConnection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshConnection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshConnection();" />
      <MemberSignature Language="F#" Value="member this.RefreshConnection : unit -&gt; unit" Usage="peerNode.RefreshConnection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71dcd-120">ピア メッシュとの接続を更新します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-120">Refreshes the connection with the peer mesh.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="71dcd-121">リッスン用のチャネルが開かれていません。</span><span class="sxs-lookup"><span data-stu-id="71dcd-121">No channel is open for listening.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="71dcd-122">更新操作がタイムアウトしました。</span><span class="sxs-lookup"><span data-stu-id="71dcd-122">The refresh operation timed out.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="71dcd-123">更新試行中に、ネットワーク エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="71dcd-123">A network error occurred during the refresh attempt.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException"><span data-ttu-id="71dcd-124">更新試行中に、接続が中断しました。</span><span class="sxs-lookup"><span data-stu-id="71dcd-124">The connection aborted during the refresh attempt.</span></span></exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="71dcd-125">更新試行中に、接続エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="71dcd-125">The connection faulted during the refresh attempt.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerNode.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerNode.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="71dcd-126">ピア ノードの文字列表現を提供します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-126">Provides a string representation of a peer node.</span></span></summary>
        <returns><span data-ttu-id="71dcd-127">ピア ノードのメッシュ ID が設定されている場合はメッシュ ID を含む <see cref="T:System.String" /> 値。それ以外の場合はピア ノードの型を返します。</span><span class="sxs-lookup"><span data-stu-id="71dcd-127"><see cref="T:System.String" /> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>