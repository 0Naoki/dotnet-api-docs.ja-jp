<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InvalidMessageContractException.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ce63eaf384b21aca6b33dc27267e6283a5e58e2a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce63eaf384b21aca6b33dc27267e6283a5e58e2a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>Represents a message contract that is not valid.</source>
          <target state="translated">無効なメッセージ コントラクトを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> is thrown when custom attribute usage results in the generation of an invalid service description.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> は、カスタム属性を使用した結果、無効なサービス記述が生成された場合にスローされます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>For example, if a <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute?displayProperty=nameWithType&gt;</ph> type has multiple parts with the same name, or a method has multiple parameters with the same name.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.ServiceModel.MessageContractAttribute?displayProperty=nameWithType&gt;</ph> 型に同名の部分が複数あったり、メソッドに同名の複数のパラメーターが含まれている場合などがこれに該当します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>The following code example shows a contract and service that throws an <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> that says <ph id="ph2">`operand`</ph> appears more than once in the message.</source>
          <target state="translated">次のコード例は、<ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> がメッセージ内で複数回使用されていることを通知する <ph id="ph2">`operand`</ph> をスローするコントラクトとサービスを示しています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.InvalidMessageContractException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor">
          <source>Creates a new <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> object.</source>
          <target state="translated">新しい <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
          <source>The message for the exception.</source>
          <target state="translated">例外のメッセージ。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class using the specified message.</source>
          <target state="translated">指定したメッセージを使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
          <source>Creates a new <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> object using the <ph id="ph2">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> を使用して新しい <ph id="ph2">`message`</ph> オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The serialization information.</source>
          <target state="translated">シリアル化情報。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The stream from which to deserialize.</source>
          <target state="translated">逆シリアル化するストリーム。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class when deserializing from a stream into an object.</source>
          <target state="translated">ストリームからオブジェクトに逆シリアル化するときに、<ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Creates a new <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> object from the stream on deserialization.</source>
          <target state="translated">逆シリアル化時にストリームから <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">例外メッセージ。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
          <source>The inner exception.</source>
          <target state="translated">内部例外。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> class that uses the specified message and inner exception.</source>
          <target state="translated">指定したメッセージと内部例外を使用する <ph id="ph1">&lt;see cref="T:System.ServiceModel.InvalidMessageContractException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
          <source>Creates a new <ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> object from the <ph id="ph2">`message`</ph> and <ph id="ph3">`innerException`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.InvalidMessageContractException&gt;</ph> と<ph id="ph2">`message`</ph> から新しい <ph id="ph3">`innerException`</ph> オブジェクトを作成します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>