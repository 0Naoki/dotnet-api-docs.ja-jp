<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceHostBase.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72fce7ccd2bf8016fb1dcf9f2adc8ea71e125b8287.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fce7ccd2bf8016fb1dcf9f2adc8ea71e125b8287</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHostBase">
          <source>Extends the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> class to implement hosts that expose custom programming models.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> クラスを拡張して、カスタム プログラミング モデルを公開するホストを実装します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHostBase">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> class to create hosts that provide a custom programming model.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> クラスを拡張して、カスタム プログラミング モデルを提供するホストを作成します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHostBase">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service programming model uses the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> サービス プログラミング モデルでは、<ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> クラスを使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHostBase">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">このクラスから派生するマネージ C++ ユーザーに対する特別な注意 :</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHostBase">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">クリーンアップ コードは、デストラクターではなく (On)(Begin)Close (または OnAbort のどちらか一方または両方) に置いてください。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHostBase">
          <source>Avoid destructors; they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">デストラクターは使用しないでください。使用すると、コンパイラが <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> を自動生成します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHostBase">
          <source>Avoid non-reference members; they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">非参照メンバーを使用しないでください。使用すると、コンパイラが <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> を自動生成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHostBase">
          <source>Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">ファイナライザーを使用しないでください。使用する場合は、ビルド警告を抑制し、<ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> を呼び出し、ファイナライザー自体を (On)(Begin)Close (または OnAbort のどちらか一方または両方) から呼び出して、自動生成される <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> の動作をエミュレートする必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceHostBase">
          <source>This sample uses the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class, which is derived from <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph>.</source>
          <target state="translated">このサンプルでは、<ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> から派生した <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> クラスを使用します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base address for services hosted on the current host.</source>
          <target state="translated">現在のホストでホストされるサービスのベースアドレスを含む <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
          <source>Adds a base address to the service host.</source>
          <target state="translated">サービス ホストにベース アドレスを追加します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
          <source>This property allows users extending <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> to provide the base address after the host is constructed.</source>
          <target state="translated">このプロパティは、ホストの構築後に、ユーザーが <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> を拡張してベース アドレスを提供できるようにします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.AddBaseAddress%28System.Uri%29&gt;</ph> can be used to add base addresses to an existing host, but throws an exception if the description is already initialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.AddBaseAddress%28System.Uri%29&gt;</ph> を使用して既存のホストにベース アドレスを追加できますが、記述が既に初期化されている場合は例外がスローされます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="baseAddress" /&gt;</ph> cannot be called.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseAddress" /&gt;</ph> を呼び出すことができません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints">
          <source>Adds service endpoints for all base addresses in each contract found in the service host with the default binding.</source>
          <target state="translated">既定のバインドを使用して、サービス ホストで検出された各コントラクト内のすべてのベース アドレスのサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints">
          <source>A read-only collection of default endpoints.</source>
          <target state="translated">既定のエンドポイントの読み取り専用コレクション。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceHostBase">
          <source>Adds the service endpoints to the service hosted.</source>
          <target state="translated">ホストされるサービスにサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The service endpoint.</source>
          <target state="translated">サービス エンドポイント。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Adds the specified service endpoint to the hosted service.</source>
          <target state="translated">ホストされるサービスに指定されたサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>When using the method, the service host does a "by-configuration-name" validation on the contract description.</source>
          <target state="translated">メソッドを使用する場合、サービス ホストはコントラクトの説明に"によって-構成-name"検証は。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>In other words, the host verifies that <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A&gt;</ph> exists in the list of configuration names of the service contracts implemented by the service.</source>
          <target state="translated">つまり、ホストを検証する<ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A&gt;</ph>サービスによって実装されたサービス コントラクトの構成名の一覧に存在します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>If the validation passes, the description in the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> is used as it is, even if the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> reflected from the service is different.</source>
          <target state="translated">かどうか、検証が成功で説明、<ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>これは、使用場合でも、<ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>から反映された、サービスが異なる。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>As an example, assume that the description in the ServiceEndpoint and the contract description reflected from the service have the same name, but different operation behaviors.</source>
          <target state="translated">たとえば、ServiceEndpoint の説明と、サービスから反映されたコントラクトの説明がある名が同じで、さまざまな操作の動作と仮定します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The implication of only "by-configuration-name" validation is that there is no validation that the behaviors are the same and there are one updates to one description because of another description.</source>
          <target state="translated">「構成の名前による」検証のみの影響は、検証の動作は同じと更新があるいずれか 1 つの説明を別の説明のためのことがないことです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>If the <ph id="ph1">`address`</ph> is a relative URI, one of the base addresses of the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
          <target state="translated"><ph id="ph1">`address`</ph> が相対 URI の場合、(バインド プロトコルに応じて) <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> のベース アドレスの 1 つがエンドポイントのベース アドレスとして使用されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source><ph id="ph1">&lt;paramref name="Endpoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Endpoint" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The host is not in a Created or an Opening state or there is no <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> for the hosted service.</source>
          <target state="translated">ホストが Created 状態でも Opening 状態でもないか、ホストされるサービスの <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> がありません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;paramref name="Address" /&gt;</ph>, <ph id="ph2">&lt;paramref name="Binding" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="Contract" /&gt;</ph> property is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="Address" /&gt;</ph> プロパティ、<ph id="ph2">&lt;paramref name="Binding" /&gt;</ph> プロパティ、または <ph id="ph3">&lt;paramref name="Contract" /&gt;</ph> プロパティが <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
          <source>The contract implemented by the endpoint.</source>
          <target state="translated">エンドポイントにより実装されたコントラクト。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">追加されたエンドポイントの <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
          <source>The address for the endpoint added.</source>
          <target state="translated">追加されるエンドポイントのアドレス。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
          <source>This can be an absolute or relative URI.</source>
          <target state="translated">これは、絶対 URI または相対 URI です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
          <source>If it is a relative URI, one of the base address of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
          <target state="translated">相対 URI の場合、(バインディング プロトコルに応じて) <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> のベース アドレスの 1 つがエンドポイントのベース アドレスとして使用されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</source>
          <target state="translated">指定されたコントラクト、バインディング、およびエンドポイント アドレスを持つホストされるサービスに、サービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">ホストされるサービスに追加された <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> or is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>、<ph id="ph2">&lt;paramref name="binding" /&gt;</ph>、または<ph id="ph3">&lt;paramref name="address" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
          <source>The host is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> or an <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state or there is no <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> for the hosted service and so an endpoint cannot be added or the binding lacks a transport of binding scheme.</source>
          <target state="translated">ホストが <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> 状態でも <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態でもありません。または、ホストされるサービスの <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> がないので、エンドポイントを追加できません。あるいは、バンディングにバインディング スキームのトランスポートが不足しています。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The contract implemented by the endpoint.</source>
          <target state="translated">エンドポイントにより実装されたコントラクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">追加されたエンドポイントの <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address for the endpoint added.</source>
          <target state="translated">追加されたエンドポイントのアドレスを格納する <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>This can be an absolute or relative URI.</source>
          <target state="translated">これは、絶対 URI または相対 URI です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>If it is a relative URI, one of the base address of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
          <target state="translated">相対 URI の場合、(バインディング プロトコルに応じて) <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> のベース アドレスの 1 つがエンドポイントのベース アドレスとして使用されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and a URI that contains the endpoint address.</source>
          <target state="translated">指定したコントラクト、バインド、およびエンドポイント アドレスを含む URI を使用して、ホストされるサービスにサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">ホストされるサービスに追加された <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> or is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>、<ph id="ph2">&lt;paramref name="binding" /&gt;</ph>、または<ph id="ph3">&lt;paramref name="address" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
          <source>The host is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> or an <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state or there is no <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> for the hosted service and so an endpoint cannot be added.</source>
          <target state="translated">ホストが <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> 状態でも <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態でもありません。または、ホストされるサービスの <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> がないので、エンドポイントを追加できません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The contract implemented by the endpoint.</source>
          <target state="translated">エンドポイントにより実装されたコントラクト。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">追加されたエンドポイントの <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The address for the endpoint added.</source>
          <target state="translated">追加されるエンドポイントのアドレス。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>This address can be an absolute or relative URI.</source>
          <target state="translated">このアドレスは、絶対 URI でも相対 URI でもかまいません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>If it is a relative URI, one of the base address of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
          <target state="translated">相対 URI の場合、(バインディング プロトコルに応じて) <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> のベース アドレスの 1 つがエンドポイントのベース アドレスとして使用されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address which the endpoint listens to for incoming messages.</source>
          <target state="translated">エンドポイントが受信メッセージをリッスンするアドレスが含まれている <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>This URI can be relative or absolute.</source>
          <target state="translated">この URI は相対 URI でも絶対 URI でもかまいません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, endpoint address and URI that contains the address at which it listens.</source>
          <target state="translated">コントラクト、バインド、エンドポイント アドレス、およびサービスがリッスンするアドレスを表す URI を指定して、ホストされるサービスにサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">ホストされるサービスに追加された <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>If the <ph id="ph1">`address`</ph> is a relative URI, one of the base addresses of the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
          <target state="translated"><ph id="ph1">`address`</ph> が相対 URI の場合、(バインド プロトコルに応じて) <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> のベース アドレスの 1 つがエンドポイントのベース アドレスとして使用されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> or is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>、<ph id="ph2">&lt;paramref name="binding" /&gt;</ph>、または<ph id="ph3">&lt;paramref name="address" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
          <source>The host is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> or an <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state or there is no <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> for the hosted service and so an endpoint cannot be added.</source>
          <target state="translated">ホストが <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> 状態でも <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態でもありません。または、ホストされるサービスの <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> がないので、エンドポイントを追加できません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The contract implemented by the endpoint.</source>
          <target state="translated">エンドポイントにより実装されたコントラクト。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> for the endpoint added.</source>
          <target state="translated">追加されたエンドポイントの <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address for the endpoint added.</source>
          <target state="translated">追加されたエンドポイントのアドレスを格納する <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>If it is a relative URI, one of the base address of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
          <target state="translated">相対 URI の場合、(バインディング プロトコルに応じて) <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHost" /&gt;</ph> のベース アドレスの 1 つがエンドポイントのベース アドレスとして使用されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the address at which the endpoint listens for incoming messages.</source>
          <target state="translated">エンドポイントが受信メッセージをリッスンするアドレスを含む <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>Adds a service endpoint to the hosted service with the specified contract, binding, and URIs that contain the endpoint and listening addresses.</source>
          <target state="translated">コントラクト、バインド、およびエンドポイント アドレスとリッスン アドレスを含む URI を指定して、ホストされるサービスにサービス エンドポイントを追加します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> added to the hosted service.</source>
          <target state="translated">ホストされるサービスに追加された <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>This URI can be absolute or relative.</source>
          <target state="translated">この URI は絶対 URI でも相対 URI でもかまいません。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="binding" /&gt;</ph> or <ph id="ph3">&lt;paramref name="address" /&gt;</ph> or is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="implementedContract" /&gt;</ph>、<ph id="ph2">&lt;paramref name="binding" /&gt;</ph>、または<ph id="ph3">&lt;paramref name="address" /&gt;</ph> が <ph id="ph4">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
          <source>The host is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> or an <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state or there is no <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> for the hosted service and so an endpoint cannot be added.</source>
          <target state="translated">ホストが <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> 状態でも <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態でもありません。または、ホストされるサービスの <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> がないので、エンドポイントを追加できません。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration">
          <source>Loads the service description information from the configuration file and applies it to the runtime being constructed.</source>
          <target state="translated">サービス記述情報を構成ファイルから読み込み、構築中のランタイムにその情報を適用します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration">
          <source>The description of the service hosted is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ホストされたサービスの記述が <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.Authentication">
          <source>Gets the service authentication behavior.</source>
          <target state="translated">サービスの認証動作を取得します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.Authentication">
          <source>The service authentication behavior.</source>
          <target state="translated">サービスの認証動作。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.Authorization">
          <source>Gets the authorization behavior for the service hosted.</source>
          <target state="translated">ホストされるサービスの承認動作を取得します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.Authorization">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" /&gt;</ph> for the service hosted.</source>
          <target state="translated">ホストされるサービスの <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.BaseAddresses">
          <source>Gets the base addresses used by the hosted service.</source>
          <target state="translated">ホストされるサービスによって使用されるベース アドレスを取得します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.BaseAddresses">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base addresses for the hosted service.</source>
          <target state="translated">ホストされるサービスのベース アドレスを格納する <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 型の <ph id="ph2">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers">
          <source>Gets the collection of channel dispatchers used by the service host.</source>
          <target state="translated">サービス ホストによって使用されるチャネル ディスパッチャーのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" /&gt;</ph> that contains the channel dispatchers used by the service host.</source>
          <target state="translated">サービス ホストによって使用されるチャネル ディスパッチャーを含む <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
          <source>Gets or sets the interval of time allowed for the service host to close.</source>
          <target state="translated">サービス ホストを閉じておける期間を取得または設定します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time allowed for the service host to close.</source>
          <target state="translated">サービス ホストを閉じておける期間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
          <source>The value, in milliseconds, is less than zero or is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).</source>
          <target state="translated">ミリ秒単位の値がゼロ未満であるか、または <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> (2,147,483,647 または 16 進表記で 0X7FFFFFFF) よりも大きくなっています。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
          <source>The host is in an <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">ホストは <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態にあり、変更できません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
          <source>The host is already in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">ホストは既に <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態にあり、変更できません。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
          <source>The host is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">ホストは <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態にあり、変更できません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph> objects for the service.</source>
          <target state="translated">サービスの <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> オブジェクトを格納している <ph id="ph2">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>When implemented in a derived class, creates the description of the hosted service.</source>
          <target state="translated">派生クラスで実装された場合は、ホストされるサービスの記述を作成します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> for the hosted service.</source>
          <target state="translated">ホストされるサービスの <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.Credentials">
          <source>Gets the credential for the service hosted.</source>
          <target state="translated">ホストされるサービスの資格情報を取得します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.Credentials">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceCredentials" /&gt;</ph> for the service hosted.</source>
          <target state="translated">ホストされるサービスの <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceCredentials" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout">
          <source>Gets the default interval of time allowed for the service host to close.</source>
          <target state="translated">サービス ホストを閉じておける既定の期間を取得します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the default interval of time allowed for the service host to close.</source>
          <target state="translated">サービス ホストを閉じておける既定の期間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout">
          <source>Gets the default interval of time allowed for the service host to open.</source>
          <target state="translated">サービス ホストを開いておける既定の期間を取得します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the default interval of time allowed for the service host to open.</source>
          <target state="translated">サービス ホストを開いておける既定の期間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.Description">
          <source>Gets the description of the service hosted.</source>
          <target state="translated">ホストされるサービスの記述を取得します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.Description">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph> for the hosted service.</source>
          <target state="translated">ホストされるサービスの <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceDescription" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.Extensions">
          <source>Gets the extensions for the current specified service host.</source>
          <target state="translated">現在の指定されたサービス ホストの拡張機能を取得します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.Extensions">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.IExtensionCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.IExtensionCollection`1" /&gt;</ph> 型の <ph id="ph2">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.ImplementedContracts">
          <source>Retrieves the contracts implemented by the service hosted.</source>
          <target state="translated">ホストされるサービスによって実装されるコントラクトを取得します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.ImplementedContracts">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph> objects for the service.</source>
          <target state="translated">サービスの <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt;</ph> オブジェクトを格納している <ph id="ph2">&lt;see cref="T:System.ServiceModel.Description.ContractDescription" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
          <source>The number of messages by which to increase the flow control limit.</source>
          <target state="translated">フロー制御制限を増やすために追加するメッセージの数。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
          <source>Increases the limit on the flow rate of messages to the hosted service by a specified increment.</source>
          <target state="translated">ホストされるサービスへのメッセージのフロー レートの制限を、指定した値で増分します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
          <source>The new limit after the increment is added.</source>
          <target state="translated">増分値が追加された後の新しい制限。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
          <source>This limit can be accessed using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A&gt;</ph> property.</source>
          <target state="translated">この制限は、<ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A&gt;</ph> プロパティを使用してアクセスできます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
          <source>The value is less than zero.</source>
          <target state="translated">値が 0 未満です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph> that contains the base addresses for the service hosted.</source>
          <target state="translated">ホストされるサービスのベース アドレスを含む <ph id="ph1">&lt;see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)">
          <source>Creates and initializes the service host with the contract and service descriptions.</source>
          <target state="translated">コントラクトとサービスの記述を指定して、サービス ホストの作成と初期化を行います。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
          <source>Initializes the runtime for the service host.</source>
          <target state="translated">サービス ホストのランタイムを初期化します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
          <source>The description of the service hosted is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ホストされたサービスの記述が <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ServiceElement" /&gt;</ph> to be loaded from configuration.</source>
          <target state="translated">構成から読み込まれる <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ServiceElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
          <source>Loads the service element from the configuration file of the hosted service.</source>
          <target state="translated">ホストされるサービスの構成ファイルからサービス要素を読み込みます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
          <source><ph id="ph1">&lt;paramref name="serviceSection" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceSection" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
          <source>The description of the service hosted is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">ホストされたサービスの記述が <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
          <source>Gets or sets the flow control limit for messages received by the service hosted.</source>
          <target state="translated">ホストされるサービスによって受信されるメッセージのフロー制御制限を取得または設定します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
          <source>The flow control limit for messages received by the service hosted.</source>
          <target state="translated">ホストされるサービスによって受信されるメッセージのフロー制御制限。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
          <source>This limit can be incremented using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29&gt;</ph> method.</source>
          <target state="translated">この制限は、<ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29&gt;</ph> メソッドを使用して増分できます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
          <source>The value is less than zero.</source>
          <target state="translated">値が 0 未満です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnAbort">
          <source>Aborts the service.</source>
          <target state="translated">サービスを中止します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on-close operation has to complete before timing out.</source>
          <target state="translated">終了時の操作がタイム アウトまでに完了する必要がある時間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation on-close completion.</source>
          <target state="translated">非同期終了時操作の完了通知を受信する <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on-close operation.</source>
          <target state="translated">非同期終了時操作に関連付けられている状態情報を保持するオブジェクト。アプリケーションで指定します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation invoked on the close of the service host.</source>
          <target state="translated">サービス ホストの終了時に呼び出される非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous on-close operation.</source>
          <target state="translated">非同期終了時操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on-open operation has to complete before timing out.</source>
          <target state="translated">開始時の操作がタイムアウトまでに完了する必要がある時間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation on-open completion.</source>
          <target state="translated">非同期開始操作の完了通知を受信する <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on-open operation.</source>
          <target state="translated">非同期開始時操作に関連付けられた状態情報を格納するオブジェクト。アプリケーションによって指定されます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation invoked on the opening of the service host.</source>
          <target state="translated">サービス ホストの開始時に呼び出される非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous on-open operation.</source>
          <target state="translated">非同期開始時操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on-close operation has to complete before timing out.</source>
          <target state="translated">終了時の操作がタイム アウトまでに完了する必要がある時間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <source>Closes down the hosted service, including their channel dispatchers and associated instance contexts and listeners.</source>
          <target state="translated">ホストされるサービスを、チャネル ディスパッチャー、関連付けられたインスタンス コンテキスト、およびリスナーを含めて終了します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <source>Calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29&gt;</ph> does the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29&gt;</ph> を呼び出すと、以下の操作が行われます。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <source>Closes all input to <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph>, which also closes their associated <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> instances.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> へのすべての入力を閉じます。それぞれに関連付けられた <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> インスタンスも同時に閉じます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <source>This stops any new channels from being accepting.</source>
          <target state="translated">この結果、すべての新しいチャネルの受け入れは停止されます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <source>Calls <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A&gt;</ph> on all <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects, which mean they stop accepting new messages.</source>
          <target state="translated">すべての <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A&gt;</ph> オブジェクトに対して <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> を呼び出します。これは、新しいメッセージの受け入れが停止されることを意味します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <source>Waits for all <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects to close down, which happens when their associated channels finish sending all pending messages.</source>
          <target state="translated">すべての <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> オブジェクトが閉じるまで待機します。オブジェクトは、関連付けられたチャネルが保留中のすべてのメッセージの送信を終了したときに閉じます。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <source>Closes the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects associated with the host.</source>
          <target state="translated">ホストに関連付けられた <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> オブジェクトを閉じます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnClosed">
          <source>Releases resources used by the service host.</source>
          <target state="translated">サービス ホストによって使用されているリソースを解放します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> メソッドの呼び出しで返された <ph id="ph2">&lt;see cref="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation invoked on the closing of the service host.</source>
          <target state="translated">サービス ホストの終了時に呼び出された非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> メソッドの呼び出しで返された <ph id="ph2">&lt;see cref="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation invoked on the opening of the service host.</source>
          <target state="translated">サービス ホストの開始時に呼び出された非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on-open operation has to complete before timing out.</source>
          <target state="translated">開始時の操作がタイムアウトまでに完了する必要がある時間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)">
          <source>Opens the channel dispatchers.</source>
          <target state="translated">チャネル ディスパッチャーを開きます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.OnOpened">
          <source>Gets the service credentials,service authentication and authorization behavior for the hosted service.</source>
          <target state="translated">ホストされるサービスのサービス資格情報、サービス認証およびサービス承認動作を取得します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.OnOpened">
          <source>Once these behaviors are initialized when opening the service, they cannot be changed.</source>
          <target state="translated">これらの動作は、サービスを開くときに初期化された後は変更できません。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
          <source>Gets or sets the interval of time allowed for the service host to open.</source>
          <target state="translated">サービス ホストを開いておける期間を取得または設定します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time allowed for the service host to open.</source>
          <target state="translated">サービス ホストを開いておける期間を指定する <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
          <source>The value is less than zero or is larger than <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).</source>
          <target state="translated">値がゼロ未満であるか、または <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> (2,147,483,647 または 16 進表記で 0X7FFFFFFF) よりも大きくなっています。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
          <source>The host is in an <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">ホストは <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> 状態にあり、変更できません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
          <source>The host is already in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">ホストは既に <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態にあり、変更できません。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
          <source>The host is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">ホストは <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態にあり、変更できません。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters">
          <source>Releases the service and channel dispatcher performance counters for the hosted service.</source>
          <target state="translated">ホストされるサービスの、サービスとチャネル ディスパッチャーのパフォーマンス カウンターを解放します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters">
          <source>This method is invoked when calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29&gt;</ph> and</source>
          <target state="translated">このメソッドが呼び出されるのは、<ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29&gt;</ph> および </target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)">
          <source>The service endpoint.</source>
          <target state="translated">サービス エンドポイント。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)">
          <source>The endpoint address.</source>
          <target state="translated">エンドポイント アドレス。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)">
          <source>Sets the endpoint address of the specified endpoint to the specified address.</source>
          <target state="translated">指定されたエンドポイントのエンドポイント アドレスを指定されたアドレスに設定します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose">
          <source>Closes the service host.</source>
          <target state="translated">サービス ホストを閉じます。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <source>Occurs when an unknown message is received.</source>
          <target state="translated">不明のメッセージが受信されたときに発生します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <source>When using <ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph>, exposing a hosting endpoint, and a <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.UnknownMessageReceived&gt;</ph> exception is thrown, the host passes the message to the event handler.</source>
          <target state="translated">使用する場合<ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph>、ホストのエンドポイントを公開して、<ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.UnknownMessageReceived&gt;</ph>ホストは、イベント ハンドラーにメッセージを渡す、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <source>If an attempt is made to read this message an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">このメッセージを読み取ろうとしましたが行われた場合、<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <source>The description of the exception will say "This message cannot support the operation because it has been read."</source>
          <target state="translated">例外のという説明が「このメッセージ操作をサポートできません読み取られているためです」</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <source>The WCF infrastructure reads the message while extracting the message parameters.</source>
          <target state="translated">WCF インフラストラクチャでは、メッセージのパラメーターを抽出中にメッセージを読み取ります。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <source>This message is then passed to the event handler and any attempt to read it causes an exception.</source>
          <target state="translated">このメッセージは、イベント ハンドラーに渡されを読み取るしようとすると例外が発生します。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <source>If you need to access message parameters in your <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> handler from a hosting endpoint, define the hosting endpoint contract using MessageContract and place the needed data into a message header.</source>
          <target state="translated">メッセージ パラメーターにアクセスする必要がある場合、<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>ホスティングのエンドポイントからハンドラーは MessageContract を使用してホストのエンドポイントのコントラクトを定義して、メッセージ ヘッダーに必要なデータを配置します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <source>For more information about hosting endpoints, see <bpt id="p1">[</bpt>Workflow Service Host Extensibility<ept id="p1">](~/docs/framework/wcf/feature-details/workflow-service-host-extensibility.md)</ept></source>
          <target state="translated">詳細については、エンドポイントをホストしている、次を参照してください<bpt id="p1">[</bpt>ワークフロー サービス ホストの拡張機能。<ept id="p1">](~/docs/framework/wcf/feature-details/workflow-service-host-extensibility.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>