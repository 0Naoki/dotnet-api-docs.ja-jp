<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContractAttribute.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c1f28fb8a14f8b80f71fd5be9ea08dd61b7ec57.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c1f28fb8a14f8b80f71fd5be9ea08dd61b7ec57</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Indicates that a method defines an operation that is part of a service contract in a Windows Communication Foundation (WCF) application.</source>
          <target state="translated">メソッドが、Windows Communication Foundation (WCF) アプリケーションのサービス コントラクトの一部である操作を定義することを示します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> to a method to indicate that the method implements a service operation as part of a service contract (specified by a <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> attribute).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> をメソッドに適用して、そのメソッドが、サービス操作を (<ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> 属性によって指定される) サービス コントラクトの一部として実装することを示します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> properties to control the structure of the operation and the values expressed in metadata:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> プロパティを使用して、操作の構造とメタデータ内に表現される値を制御します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property specifies the action that uniquely identifies this operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> プロパティは、この操作を一意に識別するアクションを指定します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> dispatches request messages to methods based on their action.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> では、それらのアクションに基づいて要求メッセージをメソッドにディスパッチします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property indicates that the operation is implemented or can be called asynchronously using a Begin/End method pair.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> プロパティは、この操作が、Begin/End メソッド ペアを使用して実装される、または非同期呼び出しが可能であることを示します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> property indicates whether the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> プロパティは、<ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> プロパティが明示的に設定されているかどうかを示します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property indicates that the operation only consists of a single input message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> プロパティは、この操作が、単一の入力メッセージのみで構成されることを示します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The operation has no associated output message.</source>
          <target state="translated">この操作には、関連付けられた出力メッセージがありません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property specifies whether this operation can be the initial operation in a session.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> プロパティは、この操作が、セッションの最初の操作になることができるかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> property specifies whether <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> attempts to terminate the current session after the operation completes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> プロパティは、この操作の完了後に、<ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> が現在のセッションを終了するかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property specifies the message-level security that an operation requires at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> プロパティは、操作が実行時に必要とするメッセージ レベルのセキュリティを指定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> property specifies the action of the reply message for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> プロパティは、この操作に対する応答メッセージのアクションを指定します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute declares that a method is an operation in a service contract.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 属性は、メソッドがサービス コントラクト内の操作であることを宣言します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Only methods attributed with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> are exposed as service operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> 属性を設定したメソッドだけが、サービス操作として公開されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>A service contract without any methods marked with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> exposes no operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> でマークされたメソッドを持たないサービス コントラクトには、公開される操作がありません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property indicates that a pair of <ph id="ph2">`Begin`</ph><ph id="ph3">\&lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; and <ph id="ph4">`End`</ph><ph id="ph5">\&lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; methods form a single operation implemented asynchronously (whether on the client or the service).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph>プロパティが示す 1 組の<ph id="ph2">`Begin`</ph> <ph id="ph3">\&lt;</ph> <bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; と<ph id="ph4">`End`</ph> <ph id="ph5">\&lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; メソッドは、1 回の操作に非同期的に実装されている (クライアントまたはサービスでかどうか) を形成します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The ability of a service to implement operations asynchronously is a service implementation detail and is not exposed in metadata (such as Web Services Description Language (WSDL)).</source>
          <target state="translated">サービスが操作を非同期に実装する能力はサービス実装の詳細であり、メタデータ (Web サービス記述言語 (WSDL) など) には公開されません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Similarly, clients can choose to invoke operations asynchronously independent of how the service method is implemented.</source>
          <target state="translated">同様に、クライアントは、サービス メソッドの実装方法とは無関係に、操作を非同期で呼び出すことを選択できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Calling service operations asynchronously in the client is recommended when a service method takes some time but must return information directly to the client.</source>
          <target state="translated">クライアント内でのサービス操作の非同期での呼び出しは、サービス メソッドの実行に多少の時間がかかるが、情報をクライアントに直接返す必要がある場合に使用することをお勧めします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property indicates that a method does not return any value at all, including an empty underlying response message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> プロパティは、メソッドが、基になる空の応答メッセージも含めてまったく値を返さないことを示します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>This type of method is useful for notifications or event-style communication.</source>
          <target state="translated">この種のメソッドは、通知やイベント スタイルの通信に便利です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Methods of this kind cannot return a reply message so the method's declaration must return <ph id="ph1">`void`</ph>.</source>
          <target state="translated">この種のメソッドは応答メッセージを返すことができないため、メソッドの宣言では <ph id="ph1">`void`</ph> を返す必要があります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>When programmatically retrieving the information store in this attribute, use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> class instead of reflection.</source>
          <target state="translated">この属性で、インフォメーション ストアをプログラムで取得するには、使用して、<ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>リフレクションではなくクラスです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, (the default), even methods that return <ph id="ph3">`void`</ph> are two-way methods at the underlying message level.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> プロパティが <ph id="ph2">`false`</ph> (既定) に設定されている場合は、<ph id="ph3">`void`</ph> を返すメソッドであっても、基になるメッセージ レベルでは双方向メソッドとなります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</source>
          <target state="translated">この場合、インフラストラクチャは、空のメッセージを作成して送信することで、メソッドが戻ったことを呼び出し元に示します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Using this approach enables the application and the infrastructure to send error information (such as a SOAP fault) back to the client.</source>
          <target state="translated">このアプローチを使用して、アプリケーションとインフラストラクチャは、エラー情報 (SOAP エラーなど) をクライアントに返信できます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> to <ph id="ph2">`true`</ph> is the only way to prevent the creation and dispatch of a reply message.</source>
          <target state="translated">応答メッセージの作成とディスパッチを回避する唯一の方法は、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> を <ph id="ph2">`true`</ph> に設定することです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>One-Way Services<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>一方向サービス<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties can be used not only to modify the default action of SOAP messages but also to create handlers for unrecognized messages or to disable adding actions for direct message programming.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> プロパティと <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> プロパティを使用すると、SOAP メッセージの既定のアクションを変更するだけではなく、認識されないメッセージ用のハンドラーを作成したり、ダイレクト メッセージ プログラミングでのアクションの追加を無効にしたりできます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property to prevent clients from calling a particular service operation prior to other operations.</source>
          <target state="translated">クライアントが他の操作の前に特定のサービス操作を呼び出すことができないようにするには、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> プロパティを使用します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> property to have <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> close the channel after clients call a particular service operation.</source>
          <target state="translated">クライアントが特定のサービス操作を呼び出した後で <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> がチャネルを閉じるように設定するには、<ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> プロパティを使用します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>セッションを使用した<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property enables you to specify on the operation contract whether the operation messages are signed, encrypted, or signed and encrypted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> プロパティを使用して、操作メッセージが署名、暗号化、または署名と暗号化の対象になるかどうかを操作コントラクトに対して指定できます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>If a binding cannot provide the security level required by the contract, an exception is thrown at run time.</source>
          <target state="translated">コントラクトによって要求されるセキュリティ レベルがバインドで提供できない場合は、実行時に例外がスローされます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> and <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph>と<bpt id="p1">[</bpt>について保護レベル<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The following code example shows a simple service contract with one operation.</source>
          <target state="translated">次のコード例は、1 つの操作を持つ単純なサービスを示しています。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The following example is a service that implements an implicit service contract that specifies three operations.</source>
          <target state="translated">次の例は、3 つの操作を指定する暗黙のサービス コントラクトを実装するサービスです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Two of the operations are two-way operations, which return underlying response messages to the caller no matter what the return value is.</source>
          <target state="translated">操作のうちの 2 つは双方向操作であり、戻り値の内容に関係なく、基になる応答メッセージを呼び出し元に返します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The third operation receives a call, an underlying inbound message, but returns no underlying response message.</source>
          <target state="translated">3 つ目の操作は、呼び出しと基になる受信メッセージを受信しますが、基になる応答メッセージは返しません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContractAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContractAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Gets or sets the WS-Addressing action of the request message.</source>
          <target state="translated">要求メッセージの WS-Addressing アクションを取得または設定します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The action to use in generating the WS-Addressing Action header.</source>
          <target state="translated">WS-Addressing アクション ヘッダーの生成で使用するアクション。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property to control the action of the method's input message.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph>メソッドの動作を制御するプロパティのメッセージを入力します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Because <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> uses this action to dispatch an incoming message to the appropriate method, messages used within a contract operation must have unique actions.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> では、このアクションを使用して、受信メッセージを適切なメソッドにディスパッチするため、コントラクト操作の中で使用されるメッセージは、一意のアクションを持っている必要があります。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The default action value is a combination of the contract namespace (the default value is "<ph id="ph1">http://tempuri.org/</ph>"), the contract name (interface name or the class name, if no explicit service interface is used), the operation name, and an additional string ("Response") if the message is a correlated response.</source>
          <target state="translated">既定のアクション値がコントラクトの名前空間の組み合わせ (既定値は"<ph id="ph1">http://tempuri.org/</ph>")、コントラクト名 (インターフェイス名またはクラス名、サービスの明示的なインターフェイスを使用しない場合)、操作名およびその他の文字列 ("Response") 場合メッセージは、相関応答です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>You can override this default with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property.</source>
          <target state="translated">この既定値は、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> プロパティを使用してオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>To indicate that a service operation handles all messages that the service receives but cannot be directed to a service operation, specify the value "*" (an asterisk).</source>
          <target state="translated">サービスが受信したが、サービス操作にダイレクトできないすべてのメッセージを処理するサービス操作であることを示すには、値 "*" (アスタリスク) を指定します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>This type of operation, called an unmatched message handler, must have one of following method signatures, or a <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown:</source>
          <target state="translated">不一致メッセージ ハンドラーと呼ばれるこの種の操作は、以下のメソッド署名のいずれかを持つ必要があります。これに該当しない場合は、<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The service operation can take only a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object and return a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object.</source>
          <target state="translated">サービス操作は <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> オブジェクトだけを受け取ることができ、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The service operation can take only a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object and return nothing (that is, return <ph id="ph2">`void`</ph>).</source>
          <target state="translated">サービス操作は <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> オブジェクトだけを受け取ることができ、何も返しません (つまり<ph id="ph2">`void`</ph> を返します)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>A service contract can have only one service operation with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "*".</source>
          <target state="translated">サービス コントラクトは、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> プロパティが "*" に設定されたサービス操作を 1 つだけ持つことができます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Any group of service contracts hosted at the same listenUri that a service class implements can have many service operations with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" when the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">サービス クラスを実装する同一の listenUri でホストされているサービス コントラクトのすべてのグループは、多数のサービス操作を持つを持つことができます、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph>プロパティに設定"<ph id="ph2">\*</ph>"ときに、<ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>プロパティに設定されている<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>However, only one of those service operations can have the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property set to true.</source>
          <target state="translated">ただし、これらのサービス操作の 1 つだけ持つことができます、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph>プロパティに設定"<ph id="ph2">\*</ph>"および<ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>プロパティが true に設定します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>For more details, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The following example is a service that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties to explicitly control the SOAP actions of both the input and output (or reply) messages, and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to control the name of the operation in metadata.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> プロパティと <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> プロパティを使用して入力メッセージと出力 (または応答) メッセージの両方の SOAP アクションを明示的に制御し、<ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> プロパティを使用してメタデータ内の操作の名前を制御するサービスを次の例に示します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Finally, the application also uses an <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> value of "*" to indicate a method that handles unrecognized messages.</source>
          <target state="translated">さらに、このアプリケーションでは、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> 値 "*" を使用して、認識されないメッセージを処理するメソッドを示しています。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>A service that implements this contract sends messages that look like the following example:</source>
          <target state="translated">このコントラクトを実装するサービスは、次の例のようなメッセージを送信します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">値が <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Indicates that an operation is implemented asynchronously using a <ph id="ph1">&lt;see langword="Begin" /&gt;</ph><ph id="ph2">&amp;lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph3">&amp;gt;</ph> and <ph id="ph4">&lt;see langword="End" /&gt;</ph><ph id="ph5">&amp;lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept><ph id="ph6">&amp;gt;</ph> method pair in a service contract.</source>
          <target state="translated">サービス コントラクト内で <ph id="ph1">&lt;see langword="Begin" /&gt;</ph><ph id="ph2">&amp;lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph3">&amp;gt;</ph> メソッドと <ph id="ph4">&lt;see langword="End" /&gt;</ph><ph id="ph5">&amp;lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept><ph id="ph6">&amp;gt;</ph> メソッドのペアを使用して、操作が非同期的に実装されることを示します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="Begin" /&gt;</ph><ph id="ph3">&amp;lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph4">&amp;gt;</ph>method is matched by an <ph id="ph5">&lt;see langword="End" /&gt;</ph><ph id="ph6">&amp;lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept><ph id="ph7">&amp;gt;</ph> method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 場合、 <ph id="ph2">&lt;see langword="Begin" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> <bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph4">&amp;gt;</ph>で一致するメソッド、 <ph id="ph5">&lt;see langword="End" /&gt;</ph> <ph id="ph6">&amp;lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept> <ph id="ph7">&amp;gt;</ph>メソッドによって処理されることができ、サービス インターフェイス; で非同期メソッドのペアとして実装されている操作としてのインフラストラクチャそれ以外の場合、<ph id="ph8">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property to build service operations that can be called asynchronously on the server, the client, or both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> プロパティを使用して、サーバー、クライアント、またはその両方で非同期に呼び出すことができるサービス操作を構築します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property informs the runtime that a <ph id="ph2">`Begin`</ph> method has a matched <ph id="ph3">`End`</ph> method that conforms to the .NET Framework asynchronous method design pattern.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> プロパティは、<ph id="ph2">`Begin`</ph> メソッドに、.NET Framework 非同期メソッド設計パターンに準拠している一致 <ph id="ph3">`End`</ph> メソッドがあることをランタイムに通知します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Building server asynchronous methods that implement a service operation increases server scalability and performance without affecting the clients of the service, and is recommended when a service operation must return something to the client after performing a lengthy operation that can be performed asynchronously.</source>
          <target state="translated">サービス操作を実装したサーバー非同期メソッドを構築すると、サーバーのスケーラビリティとパフォーマンスが向上し、サービスのクライアントは影響がありません。このため、非同期に実行可能な、時間がかかる操作の実行後に、サービス操作がクライアントに何かを返す必要がある場合は、この処理を行うことをお勧めします。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Clients remain unaffected because the asynchronous method pair on the server is an implementation detail that does not affect the underlying Web Services Description Language (WSDL) description of the operation.</source>
          <target state="translated">サーバー上の非同期のメソッド ペアは、操作の基になる Web サービス記述言語 (WSDL) の説明に影響しないため、クライアントに影響が出ることはありません。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Such methods appear to clients as a single operation with <ph id="ph1">`&lt;input&gt;`</ph> and correlated <ph id="ph2">`&lt;output&gt;`</ph> messages.</source>
          <target state="translated">このようなメソッドを伴う単独操作としてクライアントに表示<ph id="ph1">`&lt;input&gt;`</ph>と相関<ph id="ph2">`&lt;output&gt;`</ph>メッセージ。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> automatically routes inbound messages to the <ph id="ph2">`Begin`</ph><ph id="ph3">\&lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; method and routes the results of the <ph id="ph4">`End`</ph><ph id="ph5">\&lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; call to the outbound message.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 自動的に受信メッセージをルーティング、 <ph id="ph2">`Begin`</ph> <ph id="ph3">\&lt;</ph> <bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; メソッドの結果をルーティングし、 <ph id="ph4">`End`</ph> <ph id="ph5">\&lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; への呼び出し送信メッセージ。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Client channels, therefore, can represent the method pair as either a single synchronous operation or as an asynchronous operation pair.</source>
          <target state="translated">したがって、クライアントのチャネルは、このメソッド ペアを単一の同期操作または非同期操作ペアのいずれかとして表現できます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>In no case does the client representation affect the asynchronous implementation on the server in any way.</source>
          <target state="translated">どちらの場合もクライアントの表現は、サーバー上の非同期実装にまったく影響を与えません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Client contracts can use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property to indicate an asynchronous method pair that the client can use to invoke the operation asynchronously.</source>
          <target state="translated">クライアントのコントラクトは、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> プロパティを使用して、クライアントが操作を非同期で呼び出すために使用できる非同期のメソッド ペアを示すことができます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Typically, client applications use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> tool and the <ph id="ph1">`/async`</ph> option to generate a <ph id="ph2">`Begin`</ph><ph id="ph3">\&lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; and <ph id="ph4">`End`</ph><ph id="ph5">\&lt;</ph><bpt id="p3">*</bpt>methodName<ept id="p3">*</ept>&gt; method pair that the client can use to invoke the operation asynchronously.</source>
          <target state="translated">通常、クライアント アプリケーションを使用して、 <bpt id="p1">[</bpt>ServiceModel メタデータ ユーティリティ ツール (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>ツールおよび<ph id="ph1">`/async`</ph>を生成するオプション、 <ph id="ph2">`Begin`</ph> <ph id="ph3">\&lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; と<ph id="ph4">`End`</ph> <ph id="ph5">\&lt;</ph> <bpt id="p3">*</bpt>methodName<ept id="p3">*</ept>&gt;、クライアントを使用して、操作を非同期に呼び出すメソッドのペア。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>If a service operation has both an asynchronous and a synchronous version, the default behavior on the service is to invoke the synchronous version.</source>
          <target state="translated">サービス操作に非同期バージョンと同期バージョンがある場合、サービス上の既定の動作は同期バージョンの呼び出しです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>The following code example shows a client channel to a service contract that includes both a synchronous version of <ph id="ph1">`Add`</ph> and an asynchronous version.</source>
          <target state="translated">次のコード例は、<ph id="ph1">`Add`</ph> の同期バージョンと非同期バージョンの両方を含むサービス コントラクトへのクライアント チャネルを示しています。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>If the contract interface is used on the client, both the <ph id="ph1">`BeginAdd`</ph> and the <ph id="ph2">`Add`</ph> operation invoke a method on the server that may or may not be synchronous.</source>
          <target state="translated">クライアント上でコントラクト インターフェイスが使用される場合、<ph id="ph1">`BeginAdd`</ph> と <ph id="ph2">`Add`</ph> 操作はどちらも、メソッドをサーバー上で呼び出します。このメソッドは、同期である場合もそうでない場合もあります。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>If the contract is used to implement the service, the default is that incoming requests are dispatched to the synchronous method.</source>
          <target state="translated">コントラクトを使用してサービスを実装した場合、既定では、受信要求が同期メソッドにディスパッチされます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source>Gets a value that indicates whether the messages for this operation must be encrypted, signed, or both.</source>
          <target state="translated">この操作のメッセージの暗号化、署名、または両方が必要かどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /&gt;</ph> property is set to a value other than <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /&gt;</ph> プロパティが <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph> 以外の値に設定されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> property to determine whether a specific protection level is required by the messages of this operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> プロパティを使用して、この操作のメッセージによって特定の保護レベルが要求されるかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists).</source>
          <target state="translated">メソッドが (セッションが存在する場合に) サーバー上でセッションを開始できる操作を実装するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is permitted to initiate a session on the server, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">サーバーでのセッションの開始操作が許可されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property controls whether an operation can be the first operation called when a session is created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> プロパティは、ある操作を、セッションが作成されるときに呼び出される最初の操作にできるかどうかを制御します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The value of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph> must be either <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Allowed&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.SessionMode.Required&gt;</ph> and the binding used must require or allow sessions for the <ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property to work properly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph> の値が <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Allowed&gt;</ph> または <ph id="ph3">&lt;xref:System.ServiceModel.SessionMode.Required&gt;</ph> である必要があります。さらに、<ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> プロパティが正常に機能するには、使用されるバインディングがセッションを要求または許可する必要があります。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The default is <ph id="ph1">`true`</ph>, which means that an operation can be the first one called on a channel.</source>
          <target state="translated">既定値は <ph id="ph1">`true`</ph> で、操作をチャネルで最初に呼び出される操作にできることを意味します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Subsequent calls to the initiating method have no effect, other than to call the method.</source>
          <target state="translated">開始メソッドのそれ以降の呼び出しでは、そのメソッドを呼び出す以外の機能はありません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>No other sessions are created.</source>
          <target state="translated">他のセッションは作成されません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If the contract does not make use of a session, setting <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> to <ph id="ph2">`false`</ph> is ignored.</source>
          <target state="translated">コントラクトがセッションを使用しない場合は、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> に設定された <ph id="ph2">`false`</ph> は無視されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Typically, you set <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> to <ph id="ph2">`false`</ph> to force clients to call another method on the service before they can invoke this one.</source>
          <target state="translated">通常は、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> を <ph id="ph2">`false`</ph> に設定して、クライアントが、このメソッドを呼び出す前にサービスで他のメソッドを呼び出すようにします。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>For example, if your service has a series of operations that depend on an order ID number, you can set <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> to <ph id="ph2">`true`</ph> for a <ph id="ph3">`GetOrderId`</ph> service operation and set all remaining service operations to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">たとえば、サービスに注文 ID 番号に依存する一連の操作がある場合は、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> サービス操作の <ph id="ph2">`true`</ph> に <ph id="ph3">`GetOrderId`</ph> を設定し、それ以外のすべてのサービス操作に <ph id="ph4">`false`</ph> を設定できます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>This ensures that each new client obtains an order ID prior to using the other methods exposed by the service.</source>
          <target state="translated">これにより、新しいクライアントが、サービスにより公開される他のメソッドを使用する前に注文 ID を取得することが保証されます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>There is an interaction between <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> プロパティと <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> プロパティには、相関関係があります。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>A service contract can have only one service operation with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "*".</source>
          <target state="translated">サービス コントラクトは、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> プロパティが "*" に設定されたサービス操作を 1 つだけ持つことができます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Any group of service contracts hosted at the same listen URI that a service class implements can have many service operations with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" when the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">同一のリッスン URI、サービス クラスを実装するでホストされているサービス コントラクトのすべてのグループは、多数のサービス操作を持つを持つことができます、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph>プロパティに設定"<ph id="ph2">\*</ph>"ときに、<ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>プロパティに設定されている<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>However, only one of those service methods can have the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">ただし、これらのサービス操作の 1 つだけ持つことができます、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph>プロパティに設定"<ph id="ph2">\*</ph>"および<ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>プロパティに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If a service receives a message for a non-initiating operation, the service returns an ActionNotSupported SOAP fault.</source>
          <target state="translated">開始以外の操作のメッセージを受信した場合、サービスは ActionNotSupported SOAP エラーを返します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The client experiences this as an <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph>.</source>
          <target state="translated">これにより、クライアントでは <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> が発生します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If a client calls a non-initiating operation first, the client runtime throws an <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">クライアントが開始以外の操作を最初に呼び出した場合、クライアントのランタイムは <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph> をスローします。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>For more information, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>セッションを使用した<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The following example is a service that implements a service contract that specifies three methods.</source>
          <target state="translated">次の例は、3 つのメソッドを指定するサービス コントラクトを実装するサービスです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The service requires a session.</source>
          <target state="translated">このサービスは、セッションを必要とします。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If a caller's first call is to any operation other than <ph id="ph1">`MethodOne`</ph>, the channel is refused and an exception is thrown.</source>
          <target state="translated">呼び出し元の最初の呼び出しが <ph id="ph1">`MethodOne`</ph> 以外の操作である場合、チャネルは拒否され、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>When a caller initiates a session by calling <ph id="ph1">`MethodOne`</ph>, that caller can terminate the communication session at any time by calling <ph id="ph2">`MethodThree`</ph>.</source>
          <target state="translated">呼び出し元が <ph id="ph1">`MethodOne`</ph> を呼び出してセッションを開始した場合、呼び出し元は <ph id="ph2">`MethodThree`</ph> を呼び出すことでいつでも通信セッションを終了できます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source><ph id="ph1">`MethodTwo`</ph> can be called any number of times during a session.</source>
          <target state="translated"><ph id="ph1">`MethodTwo`</ph> は、セッション中に何回でも呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Gets or sets a value that indicates whether an operation returns a reply message.</source>
          <target state="translated">操作が応答メッセージを返すかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method receives a request message and returns no reply message; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このメソッドが要求メッセージを受け取り、応答メッセージを返さない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property to indicate that an operation does not return a reply message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> プロパティを使用して、操作が応答メッセージを返さないことを指定します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>This type of operation is useful for notifications or event-style communication, especially in two-way communication.</source>
          <target state="translated">この種類の操作は、特に双方向の通信での通知またはイベントスタイルの通信に便利です。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Without waiting for an underlying response message, callers of one-way operations have no direct way to detect a failure in processing the request message.</source>
          <target state="translated">基になる応答メッセージを待機しないため、一方向操作の呼び出し元には、要求メッセージの処理中に発生したエラーを検出する直接的な方法がありません </target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>(Service applications that use reliable channels and one-way operations can detect a message delivery failure at the channel level.</source>
          <target state="translated">(信頼できるチャネルと一方向操作を使用するサービス アプリケーションは、チャネル レベルでメッセージ配信エラーを検出できます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>For details, see <bpt id="p1">[</bpt>Reliable Sessions Overview<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md)</ept>.)</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>信頼できるセッションの概要<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md)</ept>。)</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>In duplex (or two-way) service-oriented applications in which the client and server communicate with each other independently, a client channel can use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property on its methods to indicate that the service can make one-way calls to the client that the client can treat as events.</source>
          <target state="translated">クライアントとサーバーが互いに独立して通信する二重 (双方向) サービス指向アプリケーションでは、クライアント チャネルは、そのメソッドで <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> プロパティを使用して、サービスがクライアントへの一方向の呼び出しを実行できることを示すことができます。クライアントでは、この呼び出しをイベントとして処理できます。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>No return call or message is generated because the service does not expect any response message.</source>
          <target state="translated">サービスは応答メッセージの受信を想定していないため、返信の呼び出しやメッセージは生成されません。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> (the default), even methods that return <ph id="ph3">`void`</ph> result in a reply message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> プロパティが <ph id="ph2">`false`</ph> (既定) に設定されている場合は、<ph id="ph3">`void`</ph> を返すメソッドであっても、応答メッセージが返されます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</source>
          <target state="translated">この場合、インフラストラクチャは、空のメッセージを作成して送信することで、メソッドが戻ったことを呼び出し元に示します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>(Using this approach enables the infrastructure to send SOAP faults back to the client.) Setting <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> to <ph id="ph2">`true`</ph> is the only way to cancel the creation and dispatch of a response message.</source>
          <target state="translated">(このアプローチを使用して、インフラストラクチャは、SOAP エラーをクライアントに返信できます)。応答メッセージの作成とディスパッチをキャンセルする唯一の方法は、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> を <ph id="ph2">`true`</ph> に設定することです。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>One-way methods must not return a value or have <ph id="ph1">`ref`</ph> or <ph id="ph2">`out`</ph> parameters; otherwise a <ph id="ph3">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph> exception is thrown.</source>
          <target state="translated">一方向メソッドは、値を返すことも、<ph id="ph1">`ref`</ph> パラメーターと <ph id="ph2">`out`</ph> パラメーターのどちらを持つこともできません。これらに該当する場合は <ph id="ph3">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph> 例外がスローされます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Specifying that an operation is a one-way operation means only that there is no response message.</source>
          <target state="translated">操作が一方向操作であることを指定することは、応答メッセージが返されないことだけを意味します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>It is possible to block if a connection cannot be made, or the outbound message is very large, or if the service cannot read inbound information fast enough.</source>
          <target state="translated">接続できない場合、送信メッセージが非常に大きい場合、またはサービスによる受信メッセージの読み取りに時間がかかりすぎる場合は、ブロックすることができます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>If a client requires a non-blocking call, generate <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> operations.</source>
          <target state="translated">クライアントがブロック不可の呼び出しを必要とする場合は、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> 操作を生成してください。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>For more information, see <bpt id="p1">[</bpt>One-Way Services<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept> and <bpt id="p2">[</bpt>Accessing Services Using a WCF Client<ept id="p2">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>一方向サービス<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>と<bpt id="p2">[</bpt>にアクセスするサービスの WCF クライアントを使用して<ept id="p2">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>The following example is a service that implements a service contract that specifies three operations.</source>
          <target state="translated">次の例は、3 つの操作を指定するサービス コントラクトを実装するサービスです。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Two of the methods implement two-way operations, which return underlying response messages to the caller no matter what the return value is.</source>
          <target state="translated">その中の 2 つのメソッドは双方向操作であり、戻り値の内容に関係なく、基になる応答メッセージを呼び出し元に返します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>The third method implements an operation that receives a call (an underlying inbound message) but returns no underlying response message.</source>
          <target state="translated">3 つ目のメソッドは、呼び出し (基になる受信メッセージ) を受信しますが、基になる応答メッセージは返しません。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</source>
          <target state="translated">応答メッセージが存在する場合に、そのメッセージの送信後にセッションを終了するようにサービス操作がサーバーに指示するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation causes the server to close the session, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">操作によってサーバーがセッションを終了する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> property to indicate that calling a service operation terminates the communication session.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> プロパティを使用して、サービス操作の呼び出しで通信セッションを終了することを示します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>In a client application, a value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> set to <ph id="ph2">`true`</ph> instructs <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> to close the channel after the reply arrives.</source>
          <target state="translated">クライアント アプリケーションでは、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> に設定された <ph id="ph2">`true`</ph> の値により、応答の到着後にチャネルを閉じることが <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> に指示されます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>In a service, a timer is set and the channel aborts if the client does not close the channel within that period.</source>
          <target state="translated">サービスでは、タイマーが設定され、その期間内にクライアントがチャネルを閉じない場合はチャネルを中止します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>For more information about using this property with sessions, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</source>
          <target state="translated">セッションでこのプロパティを使用する方法の詳細については、次を参照してください。<bpt id="p1">[</bpt>セッションを使用した<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>If a caller is listening for the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> event for an <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> operation, it is possible to block when the response is received.</source>
          <target state="translated">呼び出し元が <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> 操作の <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> イベントをリッスンしている場合、応答の受信時にブロックすることができます。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The proper way to handle this is to schedule work on another thread when <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> is raised and then immediately return from that event handler.</source>
          <target state="translated">これを処理する適切な方法として、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> が発生し、その直後に該当のイベント ハンドラーから制御が返されたときに、別のスレッドで処理するようにスケジュールを設定します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The following example is a service that implements a service contract that specifies three operations.</source>
          <target state="translated">次の例は、3 つの操作を指定するサービス コントラクトを実装するサービスです。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The service requires a stateful connection.</source>
          <target state="translated">このサービスは、ステートフル接続を必要とします。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>If a caller's first call is to any operation other than <ph id="ph1">`MethodOne`</ph>, the channel is refused and an exception is thrown.</source>
          <target state="translated">呼び出し元の最初の呼び出しが <ph id="ph1">`MethodOne`</ph> 以外の操作である場合、チャネルは拒否され、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>When a caller initiates a session by calling <ph id="ph1">`MethodOne`</ph>, that caller can terminate the communication session at any time by calling <ph id="ph2">`MethodThree`</ph>.</source>
          <target state="translated">呼び出し元が <ph id="ph1">`MethodOne`</ph> を呼び出してセッションを開始した場合、呼び出し元は <ph id="ph2">`MethodThree`</ph> を呼び出すことでいつでも通信セッションを終了できます。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source><ph id="ph1">`MethodTwo`</ph> can be called any number of times during a session.</source>
          <target state="translated"><ph id="ph1">`MethodTwo`</ph> は、セッション中に何回でも呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>Gets or sets the name of the operation.</source>
          <target state="translated">操作の名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The name of the operation.</source>
          <target state="translated">操作の名前。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to override the &lt;<ph id="ph2">`operation`</ph>&gt; element name in WSDL.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph>にオーバーライドするプロパティ、&lt;<ph id="ph2">`operation`</ph>&gt; WSDL 内の要素名。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The default operation name is the name of the implementing method.</source>
          <target state="translated">既定の操作名は、実装するメソッドの名前です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to declare the name of the operation as exposed in metadata.</source>
          <target state="translated">メタデータ内に公開される操作の名前を、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> プロパティを使用して宣言する方法を、次のコード例に示します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.Name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.Name" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The value is an empty string.</source>
          <target state="translated">値が空の文字列です。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>Gets or sets a value that specifies whether the messages of an operation must be encrypted, signed, or both.</source>
          <target state="translated">操作のメッセージの暗号化、署名、または両方が必要かどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property to control whether the messages of an operation must be encrypted, signed, or both.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> プロパティを使用して、操作のメッセージの暗号化、署名、または両方が必要かどうかを制御します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The value set here is the default value for all messages specified for this operation unless a narrower scope overrides this value.</source>
          <target state="translated">ここで設定される値は、この操作で指定されるすべてのメッセージの既定値です。より狭いスコープでこの値をオーバーライドする場合は除きます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</source>
          <target state="translated">ランタイムでの保護動作は、次のプロパティで設定された保護レベル値の組み合わせであることに注意してください。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>These properties have a hierarchical structure.</source>
          <target state="translated">こうしたプロパティは、階層構造を持ちます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</source>
          <target state="translated">最も外側の値を設定すると、それより狭いスコープで異なる値を明示的に設定していなければ、より狭いスコープでその既定の設定が定まります。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</source>
          <target state="translated">この場合、外側の値は特に設定された値を除いて、それより狭いすべてのスコープで既定の設定として残ります。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> が <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> に設定され、他のより狭いスコープに保護レベル設定が存在しない場合、操作コントラクト内のすべてのメッセージが暗号化および署名されます。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>If, however, one of those operations has the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</source>
          <target state="translated">ただし、こうした操作の 1 つで <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> が <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph> に設定されている場合、その操作のメッセージは署名されますが、コントラクト内の他のすべてのメッセージは暗号化および署名されます。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>For details about protection levels and their assumptions and scopes, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">保護レベル、前提条件、およびスコープに関する詳細については、「<bpt id="p1">[</bpt>について保護レベル<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The scopes at which these values are set are:</source>
          <target state="translated">こうした値が設定されるスコープは次のとおりです。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> の <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph> プロパティ。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> の <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph> プロパティ。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">コントラクト上で明示的に指定された保護レベルが存在せず、基になるバインドで (トランスポート レベルまたはメッセージ レベルを問わず) セキュリティをサポートする場合、コントラクト全体の有効な保護レベルは <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>If the binding does not support security (such as <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> for the whole contract.</source>
          <target state="translated">バインドで (<ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> などの) セキュリティをサポートしない場合、コントラクト全体の有効な <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> は <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">したがって、コントラクトで <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> を指定している場合でも、エンドポイント バインドによってはクライアントが要求するメッセージ レベルまたはトランスポート レベルのセキュリティ保護が異なる場合があります。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">値が、<ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>Gets or sets the value of the SOAP action for the reply message of the operation.</source>
          <target state="translated">操作の応答メッセージの SOAP アクションの値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>The value of the SOAP action for the reply message.</source>
          <target state="translated">応答メッセージの SOAP アクションの値。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>In addition to specifying a particular value for the action header of the reply message, you can also specify the string "*" (an asterisk).</source>
          <target state="translated">応答メッセージのアクション ヘッダーには、値のほかに文字列 "*" (アスタリスク) を指定することもできます。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>Specifying an asterisk in the service instructs <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> not to add a reply action to the message, which is useful if you are programming against messages directly.</source>
          <target state="translated">サービスにアスタリスクを指定すると、メッセージに応答アクションを追加しないように <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> に指示することになります。これは、メッセージに対処するためのプログラミングを直接行う場合に便利です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>Specifying an asterisk in a client application instructs <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> not to validate the reply action.</source>
          <target state="translated">クライアント アプリケーションにアスタリスクを指定すると、応答アクションを評価しないように <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> に指示することになります。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>The following example is a service that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties to explicitly control the SOAP actions of both the input and output (or reply) messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> プロパティと <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> プロパティを使用して、入力メッセージと出力 (または応答) メッセージの両方の SOAP アクションを明示的に制御するサービスを、次の例に示します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>It also uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to declare the name of the operation as exposed in metadata.</source>
          <target state="translated">ここでは、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> プロパティを使用して、メタデータ内に公開される操作の名前も宣言します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>