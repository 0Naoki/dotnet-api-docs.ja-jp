<Type Name="ServiceAuthorizationManager" FullName="System.ServiceModel.ServiceAuthorizationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb8b224e0af352327ba689599af40714db192391" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39928910" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceAuthorizationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceAuthorizationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceAuthorizationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceAuthorizationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceAuthorizationManager" />
  <TypeSignature Language="F#" Value="type ServiceAuthorizationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="14641-101">サービス操作の承認アクセス チェックを行います。</span>
      <span class="sxs-lookup">
        <span data-stu-id="14641-101">Provides authorization access checking for service operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14641-102">このクラスは、すべてのポリシー (ユーザーが実行を許可されていることを定義するルール) を評価し、それらのポリシーをクライアントによるクレームと比較し、その結果である <xref:System.IdentityModel.Policy.AuthorizationContext> を <xref:System.ServiceModel.ServiceSecurityContext> に設定し、呼び出し元による特定の操作へのアクセスを許可するか、拒否するかを決定する承認を行います。</span><span class="sxs-lookup"><span data-stu-id="14641-102">This class is responsible for evaluating all policies (rules that define what a user is allowed to do), comparing the policies to claims made by a client, setting the resulting <xref:System.IdentityModel.Policy.AuthorizationContext> to the <xref:System.ServiceModel.ServiceSecurityContext>, and providing the authorization decision whether to allow or deny access for a given service operation for a caller.</span></span>  
  
 <span data-ttu-id="14641-103"><xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>メソッドがリソースへのアクセスを試行するたびに、Windows Communication Foundation (WCF) インフラストラクチャによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="14641-103">The <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method is called by the Windows Communication Foundation (WCF) infrastructure each time an attempt to access a resource is made.</span></span> <span data-ttu-id="14641-104">このメソッドは、アクセスの許可または拒否を表す `true` または `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="14641-104">The method returns `true` or `false` to allow or deny access, respectively.</span></span>  
  
 <span data-ttu-id="14641-105"><xref:System.ServiceModel.ServiceAuthorizationManager> 、WCF の一部である*Id モデル*インフラストラクチャ。</span><span class="sxs-lookup"><span data-stu-id="14641-105">The <xref:System.ServiceModel.ServiceAuthorizationManager> is part of the WCF*Identity Model* infrastructure.</span></span> <span data-ttu-id="14641-106">この ID モデルでは、カスタム承認ポリシーとカスタム承認スキームを作成できます。</span><span class="sxs-lookup"><span data-stu-id="14641-106">The Identity Model enables you to create custom authorization policies and custom authorization schemes.</span></span> <span data-ttu-id="14641-107">Id モデルのしくみの詳細については、次を参照してください。[管理クレームと Id モデルでの承認](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)します。</span><span class="sxs-lookup"><span data-stu-id="14641-107">For more information about how the Identity Model works, see [Managing Claims and Authorization with the Identity Model](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md).</span></span>  
  
## <a name="custom-authorization"></a><span data-ttu-id="14641-108">カスタム承認</span><span class="sxs-lookup"><span data-stu-id="14641-108">Custom Authorization</span></span>  
 <span data-ttu-id="14641-109">このクラスは、一切の承認は行わず、ユーザーがすべてのサービス操作にアクセスすることを許可します。</span><span class="sxs-lookup"><span data-stu-id="14641-109">This class does not perform any authorization and allows users to access all service operations.</span></span> <span data-ttu-id="14641-110">限定的な承認を行うには、カスタム ポリシーをチェックするカスタム承認マネージャーを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="14641-110">To provide more restrictive authorization, you must create a custom authorization manager that checks custom policies.</span></span> <span data-ttu-id="14641-111">これを行うには、このクラスから継承して <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="14641-111">To do this, inherit from this class and override the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method.</span></span> <span data-ttu-id="14641-112">派生クラスのインスタンスは、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A> プロパティを介して指定します。</span><span class="sxs-lookup"><span data-stu-id="14641-112">Specify the instance of the derived class through the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A> property.</span></span>  
  
 <span data-ttu-id="14641-113"><xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> でアプリケーションは、<xref:System.ServiceModel.OperationContext> オブジェクトを使用して呼び出し元の ID (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>) にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="14641-113">In <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>, the application can use the <xref:System.ServiceModel.OperationContext> object to access the caller identity (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>).</span></span>  
  
 <span data-ttu-id="14641-114"><xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> オブジェクトを返す <xref:System.ServiceModel.Channels.MessageHeaders> プロパティを取得することで、アプリケーションはサービス (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) および操作 (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>) にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="14641-114">By getting the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> property, which returns a <xref:System.ServiceModel.Channels.MessageHeaders> object, the application can access the service (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>), and the operation (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>).</span></span>  
  
 <span data-ttu-id="14641-115"><xref:System.ServiceModel.OperationContext.RequestContext%2A> オブジェクトを返す <xref:System.ServiceModel.Channels.RequestContext> プロパティを取得することで、アプリケーションは要求メッセージ全体 (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>) にアクセスし、それに応じて承認決定を実行できます。</span><span class="sxs-lookup"><span data-stu-id="14641-115">By getting the <xref:System.ServiceModel.OperationContext.RequestContext%2A> property, which returns a <xref:System.ServiceModel.Channels.RequestContext> object, the application can access the entire request message (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>) and perform the authorization decision accordingly.</span></span>  
  
 <span data-ttu-id="14641-116">例については、次を参照してください。[方法: サービスのカスタム承認マネージャーを作成する](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)します。</span><span class="sxs-lookup"><span data-stu-id="14641-116">For an example, see [How to: Create a Custom Authorization Manager for a Service](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md).</span></span>  
  
 <span data-ttu-id="14641-117">カスタム承認ポリシーを作成するには、<xref:System.IdentityModel.Policy.IAuthorizationPolicy> クラスを実装します。</span><span class="sxs-lookup"><span data-stu-id="14641-117">To create custom authorization policies, implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> class.</span></span>  <span data-ttu-id="14641-118">例については、次を参照してください。[方法: カスタム承認ポリシーの作成](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)です。</span><span class="sxs-lookup"><span data-stu-id="14641-118">For an example, see [How to: Create a Custom Authorization Policy](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md).</span></span>  
  
 <span data-ttu-id="14641-119">カスタム クレームを作成するには、<xref:System.IdentityModel.Claims.Claim> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="14641-119">To create a custom claim, use the <xref:System.IdentityModel.Claims.Claim> class.</span></span>  <span data-ttu-id="14641-120">例については、次を参照してください。[方法: カスタム クレームを作成](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)です。</span><span class="sxs-lookup"><span data-stu-id="14641-120">For an example, see [How to: Create a Custom Claim](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md).</span></span> <span data-ttu-id="14641-121">カスタム クレームを比較するように、クレームを比較する必要があります[方法: クレームの比較](~/docs/framework/wcf/extending/how-to-compare-claims.md)します。</span><span class="sxs-lookup"><span data-stu-id="14641-121">To compare custom claims, you must compare claims, as shown in [How to: Compare Claims](~/docs/framework/wcf/extending/how-to-compare-claims.md).</span></span>  
  
 <span data-ttu-id="14641-122">詳細については、次を参照してください。[カスタム承認](~/docs/framework/wcf/extending/custom-authorization.md)します。</span><span class="sxs-lookup"><span data-stu-id="14641-122">For more information, see [Custom Authorization](~/docs/framework/wcf/extending/custom-authorization.md).</span></span>  
  
 <span data-ttu-id="14641-123">使用してカスタム承認マネージャーの種類を設定することができます、 [ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)クライアント アプリケーション構成ファイル。</span><span class="sxs-lookup"><span data-stu-id="14641-123">You can set the type of a custom authorization manager using the [&lt;serviceAuthorization&gt;](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) in a client application configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14641-124">`MyServiceAuthorizationManager` から継承され、<xref:System.ServiceModel.ServiceAuthorizationManager> メソッドをオーバーライドする、<xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> という名前のクラスのコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="14641-124">The following example shows a class named `MyServiceAuthorizationManager` that inherits from the <xref:System.ServiceModel.ServiceAuthorizationManager> and overrides the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method.</span></span>  
  
 [!code-csharp[c_CustomAuthMgr#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#2)]
 [!code-vb[c_CustomAuthMgr#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Claims.ClaimSet" />
    <altmember cref="T:System.IdentityModel.Claims.Claim" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceAuthorizationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceAuthorizationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="14641-125">
            <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-125">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckAccess">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="14641-126">指定された操作コンテキストとオプションのメッセージの承認をチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-126">Checks authorization for the given operation context and optional message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">
          <span data-ttu-id="14641-127">
            <see cref="T:System.ServiceModel.OperationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-127">The <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14641-128">指定された操作コンテキストの承認をチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-128">Checks authorization for the given operation context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14641-129">アクセスが許可されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-129">
              <see langword="true" /> if access is granted; otherwise; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="14641-130">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-130">The default is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14641-131">通常、アプリケーションは、このメソッドの代わりに、<xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="14641-131">In general, applications should override <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> instead of this method.</span></span>  
  
 <span data-ttu-id="14641-132">アプリケーションが <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A> に対して別のポリシー セットを関連付けるか、または導入する場合、または、別のポリシー評価 (チェーン) モデルを提供する場合は、<xref:System.ServiceModel.ServiceSecurityContext> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="14641-132">Override <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A> if the application associates or introduces a different set of policies for the resulting <xref:System.ServiceModel.ServiceSecurityContext> or provide a different policy evaluation (chaining) model.</span></span>  
  
 <span data-ttu-id="14641-133">このメソッドは、<xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="14641-133">This method is responsible for calling <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14641-134">次のコードは、このメソッドをオーバーライドして、カスタム アクセス制御要件を指定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="14641-134">The following code shows how to override this method to enforce custom access control requirements.</span></span>  
  
 [!code-csharp[c_Federation#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#1)]
 [!code-vb[c_Federation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public virtual bool CheckAccess (System.ServiceModel.OperationContext operationContext, ref System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckAccess(class System.ServiceModel.OperationContext operationContext, class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckAccess(System::ServiceModel::OperationContext ^ operationContext, System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool&#xA;override this.CheckAccess : System.ServiceModel.OperationContext *  -&gt; bool" Usage="serviceAuthorizationManager.CheckAccess (operationContext, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="operationContext">
          <span data-ttu-id="14641-135">
            <see cref="T:System.ServiceModel.OperationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-135">The <see cref="T:System.ServiceModel.OperationContext" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="14641-136">承認を決定するために検査される <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-136">The <see cref="T:System.ServiceModel.Channels.Message" /> to be examined to determine authorization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14641-137">メッセージへのアクセスが必要なときに、指定された操作コンテキストの承認をチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-137">Checks authorization for the given operation context when access to a message is required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14641-138">アクセスが許可されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-138">
              <see langword="true" /> if access is granted; otherwise; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="14641-139">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-139">The default is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14641-140">一般に、アプリケーションは、このメソッドの代わりに <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>をオーバーライドします。このメソッドは、承認決定がメッセージ本文に依存する場合にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="14641-140">In general, applications should override <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> instead of this method, which should only be used if the authorization decision depends on the message body.</span></span> <span data-ttu-id="14641-141">パフォーマンスの問題があるので、可能であればアプリケーションを再デザインして、承認決定でメッセージ本文にアクセスする必要がないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="14641-141">Because of performance issues, if possible you should redesign your application so that the authorization decision does not require access to the message body.</span></span>  
  
 <span data-ttu-id="14641-142">アプリケーションが、結果の <xref:System.ServiceModel.ServiceSecurityContext><xref:System.ServiceModel.Channels.Message>および に対して別のポリシー セットを関連付けるか、または導入する場合、または、別のポリシー評価 (チェーン) モデルを提供する場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="14641-142">Override this method if the application associates or introduces a different set of policies for the resulting <xref:System.ServiceModel.ServiceSecurityContext> and <xref:System.ServiceModel.Channels.Message> or provide a different policy evaluation (chaining) model.</span></span>  
  
 <span data-ttu-id="14641-143">このメソッドは、<xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="14641-143">This method is responsible for calling <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14641-144">次のコードは、このメソッドをオーバーライドして、メッセージ本文にアクセスする必要があるカスタム アクセス制御要件を指定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="14641-144">The following code shows how to override this method to enforce custom access control requirements that require access to the message body.</span></span>  
  
 [!code-csharp[c_Federation#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_federation/cs/source.cs#6)]
 [!code-vb[c_Federation#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federation/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccessCore">
      <MemberSignature Language="C#" Value="protected virtual bool CheckAccessCore (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckAccessCore(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckAccessCore(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool&#xA;override this.CheckAccessCore : System.ServiceModel.OperationContext -&gt; bool" Usage="serviceAuthorizationManager.CheckAccessCore operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">
          <span data-ttu-id="14641-145">現在の承認要求に対する <see cref="T:System.ServiceModel.OperationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-145">The <see cref="T:System.ServiceModel.OperationContext" /> for the current authorization request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14641-146">指定された操作コンテキストの承認を、既定のポリシー評価に基づいてチェックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-146">Checks authorization for the given operation context based on default policy evaluation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14641-147">アクセスが許可されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-147">
              <see langword="true" /> if access is granted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="14641-148">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-148">The default is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14641-149">通常、<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> は、既定のポリシーの評価結果です。</span><span class="sxs-lookup"><span data-stu-id="14641-149"><xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> is generally the result from the default policy evaluation.</span></span>  
  
 <span data-ttu-id="14641-150">カスタム承認決定を行うには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="14641-150">Override this method to provide custom authorization decisions.</span></span>  
  
 <span data-ttu-id="14641-151">このメソッドを使用して、受信したトークンから推測されるクレーム セット、または外部承認ポリシーを介して追加されたクレーム セットに基づいて、承認決定を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="14641-151">This method can be used to make authorization decisions based on claim sets that are inferred based on incoming tokens, or added through external authorization policies.</span></span> <span data-ttu-id="14641-152">承認決定は、受信メッセージのプロパティ (アクション ヘッダーなど) に基づいて行うこともできます。</span><span class="sxs-lookup"><span data-stu-id="14641-152">It can also make authorization decisions based on properties of the incoming message: for example, the action header.</span></span>  
  
 <span data-ttu-id="14641-153">このメソッドでアプリケーションは、`operationContext` パラメーターを使用して呼び出し元 ID (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>) にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="14641-153">In this method, the application can use the `operationContext` parameter to access the caller identity (<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A>).</span></span> <span data-ttu-id="14641-154"><xref:System.ServiceModel.Channels.RequestContext> プロパティから <xref:System.ServiceModel.OperationContext.RequestContext%2A> オブジェクトを返すことで、アプリケーションは要求メッセージ全体 (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>) にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="14641-154">By returning the <xref:System.ServiceModel.Channels.RequestContext> object from the <xref:System.ServiceModel.OperationContext.RequestContext%2A> property, the application can access the entire request message (<xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A>).</span></span> <span data-ttu-id="14641-155"><xref:System.ServiceModel.Channels.MessageHeaders> プロパティから <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> オブジェクトを返すことで、アプリケーションは、サービス URL (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) および操作 (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>) にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="14641-155">By returning the <xref:System.ServiceModel.Channels.MessageHeaders> object from the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A> property, the application can access the service URL (<xref:System.ServiceModel.Channels.MessageHeaders.To%2A>) and the operation (<xref:System.ServiceModel.Channels.MessageHeaders.Action%2A>).</span></span> <span data-ttu-id="14641-156">この情報により、アプリケーションは適宜承認決定を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="14641-156">With this information, the application can perform the authorization decision accordingly.</span></span>  
  
 <span data-ttu-id="14641-157">ユーザーが行ったクレームは、<xref:System.IdentityModel.Claims.ClaimSet> の <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> プロパティによって返される `AuthorizationContext` 内にあります。</span><span class="sxs-lookup"><span data-stu-id="14641-157">The claims made by a user are found in the <xref:System.IdentityModel.Claims.ClaimSet> returned by the <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A> property of the `AuthorizationContext`.</span></span> <span data-ttu-id="14641-158">現在の `AuthorizationContext` は、<xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> クラスの <xref:System.ServiceModel.OperationContext> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="14641-158">The current `AuthorizationContext` is returned by the <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> property of the <xref:System.ServiceModel.OperationContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14641-159"><xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> メソッドのオーバーライドを次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="14641-159">The following example shows an override of the <xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A> method.</span></span>  
  
 [!code-csharp[c_CustomAuthMgr#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customauthmgr/cs/c_customauthmgr.cs#6)]
 [!code-vb[c_CustomAuthMgr#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customauthmgr/vb/c_customauthmgr.vb#6)]  
  
 <span data-ttu-id="14641-160">別の例では、次を参照してください。[方法: サービスのカスタム承認マネージャーを作成する](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)します。</span><span class="sxs-lookup"><span data-stu-id="14641-160">For another example, see [How to: Create a Custom Authorization Manager for a Service](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationPolicies">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies (System.ServiceModel.OperationContext operationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; GetAuthorizationPolicies(class System.ServiceModel.OperationContext operationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ GetAuthorizationPolicies(System::ServiceModel::OperationContext ^ operationContext);" />
      <MemberSignature Language="F#" Value="abstract member GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;&#xA;override this.GetAuthorizationPolicies : System.ServiceModel.OperationContext -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="serviceAuthorizationManager.GetAuthorizationPolicies operationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationContext" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="operationContext">
          <span data-ttu-id="14641-161">現在の承認要求の <see cref="T:System.ServiceModel.OperationContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-161">The <see cref="T:System.ServiceModel.OperationContext" /> of the current authorization request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14641-162">ポリシー評価に参加するポリシーのセットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-162">Gets the set of policies that participate in policy evaluation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14641-163">
            <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 型の <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14641-163">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14641-164">Windows Communication Foundation (WCF) の実装では、承認ポリシーの既定のセットを提供します。</span><span class="sxs-lookup"><span data-stu-id="14641-164">The Windows Communication Foundation (WCF) implementation provides a default set of authorization policies.</span></span> <span data-ttu-id="14641-165">この中には、要求元の資格情報を格納するプライマリ トークン、サポートするすべてのトークン、トランスポート トークンが含まれ、指定された場合は外部トークンも含まれます。</span><span class="sxs-lookup"><span data-stu-id="14641-165">These include the primary token that contains the credentials of the requester and all supporting tokens, transport tokens, and external policies if specified.</span></span>  
  
 <span data-ttu-id="14641-166">この実装をオーバーライドして、ポリシーの別のセットを用意できます。</span><span class="sxs-lookup"><span data-stu-id="14641-166">You can override this implementation and provide a different set of policies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>