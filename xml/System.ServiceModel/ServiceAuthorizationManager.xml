<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceAuthorizationManager.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f6051cb9cb7ad9093ff1526e35c2b3d09a26dfc19.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6051cb9cb7ad9093ff1526e35c2b3d09a26dfc19</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Provides authorization access checking for service operations.</source>
          <target state="translated">サービス操作の承認アクセス チェックを行います。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>This class is responsible for evaluating all policies (rules that define what a user is allowed to do), comparing the policies to claims made by a client, setting the resulting <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph>, and providing the authorization decision whether to allow or deny access for a given service operation for a caller.</source>
          <target state="translated">このクラスは、すべてのポリシー (ユーザーが実行を許可されていることを定義するルール) を評価し、それらのポリシーをクライアントによるクレームと比較し、その結果である <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph> を <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> に設定し、呼び出し元による特定の操作へのアクセスを許可するか、拒否するかを決定する承認を行います。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method is called by the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> infrastructure each time an attempt to access a resource is made.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> メソッドは、リソースへのアクセスが試行されるたびに <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> インフラストラクチャによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The method returns <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> to allow or deny access, respectively.</source>
          <target state="translated">このメソッドは、アクセスの許可または拒否を表す <ph id="ph1">`true`</ph> または <ph id="ph2">`false`</ph> を返します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> is part of the <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph><bpt id="p1">*</bpt>Identity Model<ept id="p1">*</ept> infrastructure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph>の一部である、 <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> <bpt id="p1">*</bpt>Id モデル<ept id="p1">*</ept>インフラストラクチャです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The Identity Model enables you to create custom authorization policies and custom authorization schemes.</source>
          <target state="translated">この ID モデルでは、カスタム承認ポリシーとカスタム承認スキームを作成できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> how the Identity Model works, see <bpt id="p1">[</bpt>Managing Claims and Authorization with the Identity Model<ept id="p1">](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> Id モデルの動作を参照してください。<bpt id="p1">[</bpt>管理クレームと Id モデル承認<ept id="p1">](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Custom Authorization</source>
          <target state="translated">カスタム承認</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>This class does not perform any authorization and allows users to access all service operations.</source>
          <target state="translated">このクラスは、一切の承認は行わず、ユーザーがすべてのサービス操作にアクセスすることを許可します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To provide more restrictive authorization, you must create a custom authorization manager that checks custom policies.</source>
          <target state="translated">限定的な承認を行うには、カスタム ポリシーをチェックするカスタム承認マネージャーを作成する必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To do this, inherit from this class and override the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
          <target state="translated">これを行うには、このクラスから継承して <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> メソッドを上書きします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Specify the instance of the derived class through the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A&gt;</ph> property.</source>
          <target state="translated">派生クラスのインスタンスは、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A&gt;</ph> プロパティを介して指定します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>In <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>, the application can use the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object to access the caller identity (<ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> でアプリケーションは、<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> オブジェクトを使用して呼び出し元の ID (<ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>) にアクセスできます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>By getting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> property, which returns a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> object, the application can access the service (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>), and the operation (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> オブジェクトを返す <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> プロパティを取得することで、アプリケーションはサービス (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>) および操作 (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>) にアクセスします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>By getting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property, which returns a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object, the application can access the entire request message (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>) and perform the authorization decision accordingly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> オブジェクトを返す <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> プロパティを取得することで、アプリケーションは要求メッセージ全体 (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>) にアクセスし、それに応じて承認決定を実行できます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Manager for a Service<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>.</source>
          <target state="translated">例については、次を参照してください。<bpt id="p1">[</bpt>する方法: サービスのカスタム承認マネージャーを作成する<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To create custom authorization policies, implement the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> class.</source>
          <target state="translated">カスタム承認ポリシーを作成するには、<ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> クラスを実装します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Policy<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)</ept>.</source>
          <target state="translated">例については、次を参照してください。<bpt id="p1">[</bpt>する方法: カスタム承認ポリシーの作成<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To create a custom claim, use the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> class.</source>
          <target state="translated">カスタム クレームを作成するには、<ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> クラスを使用します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Claim<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)</ept>.</source>
          <target state="translated">例については、次を参照してください。<bpt id="p1">[</bpt>する方法: カスタム クレームを作成<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>To compare custom claims, you must compare claims, as shown in <bpt id="p1">[</bpt>How to: Compare Claims<ept id="p1">](~/docs/framework/wcf/extending/how-to-compare-claims.md)</ept>.</source>
          <target state="translated">ようにカスタム クレームを比較する信頼性情報を比較する必要があります<bpt id="p1">[</bpt>する方法: クレームの比較<ept id="p1">](~/docs/framework/wcf/extending/how-to-compare-claims.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Authorization<ept id="p1">](~/docs/framework/wcf/extending/custom-authorization.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>カスタム承認<ept id="p1">](~/docs/framework/wcf/extending/custom-authorization.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>You can set the type of a custom authorization manager using the <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>serviceAuthorization<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)</ept> in a client application configuration file.</source>
          <target state="translated">使用してカスタム承認マネージャーの種類を設定することができます、 <bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>serviceAuthorization<ph id="ph2">&amp;gt;</ph> <ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)</ept>クライアント アプリケーション構成ファイルにします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>The following example shows a class named <ph id="ph1">`MyServiceAuthorizationManager`</ph> that inherits from the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> and overrides the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`MyServiceAuthorizationManager`</ph> から継承され、<ph id="ph2">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> メソッドを上書きする、<ph id="ph3">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> という名前のクラスのコード例を次に示します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceAuthorizationManager" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ServiceAuthorizationManager">
          <source>Checks authorization for the given operation context and optional message.</source>
          <target state="translated">指定された操作コンテキストとオプションのメッセージの承認をチェックします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>Checks authorization for the given operation context.</source>
          <target state="translated">指定された操作コンテキストの承認をチェックします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access is granted; otherwise; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アクセスが許可されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>In general, applications should override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> instead of this method.</source>
          <target state="translated">通常、アプリケーションは、このメソッドの代わりに、<ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> を上書きします。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A&gt;</ph> if the application associates or introduces a different set of policies for the resulting <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> or provide a different policy evaluation (chaining) model.</source>
          <target state="translated">アプリケーションが <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A&gt;</ph> に対して別のポリシー セットを関連付けるか、または導入する場合、または、別のポリシー評価 (チェーン) モデルを提供する場合は、<ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>This method is responsible for calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
          <source>The following code shows how to override this method to enforce custom access control requirements.</source>
          <target state="translated">次のコードは、このメソッドをオーバーライドして、カスタム アクセス制御要件を指定する方法を示しています。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to be examined to determine authorization.</source>
          <target state="translated">承認を決定するために検査される <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>Checks authorization for the given operation context when access to a message is required.</source>
          <target state="translated">メッセージへのアクセスが必要なときに、指定された操作コンテキストの承認をチェックします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access is granted; otherwise; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アクセスが許可されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>In general, applications should override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> instead of this method, which should only be used if the authorization decision depends on the message body.</source>
          <target state="translated">一般に、アプリケーションは、このメソッドの代わりに <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>をオーバーライドします。このメソッドは、承認決定がメッセージ本文に依存する場合にのみ使用されます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>Because of performance issues, if possible you should redesign your application so that the authorization decision does not require access to the message body.</source>
          <target state="translated">パフォーマンスの問題があるので、可能であればアプリケーションを再デザインして、承認決定でメッセージ本文にアクセスする必要がないようにしてください。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>Override this method if the application associates or introduces a different set of policies for the resulting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> or provide a different policy evaluation (chaining) model.</source>
          <target state="translated">アプリケーションが、結果の <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph><ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>および に対して別のポリシー セットを関連付けるか、または導入する場合、または、別のポリシー評価 (チェーン) モデルを提供する場合は、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>This method is responsible for calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
          <source>The following code shows how to override this method to enforce custom access control requirements that require access to the message body.</source>
          <target state="translated">次のコードは、このメソッドをオーバーライドして、メッセージ本文にアクセスする必要があるカスタム アクセス制御要件を指定する方法を示しています。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> for the current authorization request.</source>
          <target state="translated">現在の承認要求に対する <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>Checks authorization for the given operation context based on default policy evaluation.</source>
          <target state="translated">指定された操作コンテキストの承認を、既定のポリシー評価に基づいてチェックします。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access is granted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アクセスが許可されている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> is generally the result from the default policy evaluation.</source>
          <target state="translated">通常、<ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> は、既定のポリシーの評価結果です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>Override this method to provide custom authorization decisions.</source>
          <target state="translated">カスタム承認決定を行うには、このメソッドを上書きします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>This method can be used to make authorization decisions based on claim sets that are inferred based on incoming tokens, or added through external authorization policies.</source>
          <target state="translated">このメソッドを使用して、受信したトークンから推測されるクレーム セット、または外部承認ポリシーを介して追加されたクレーム セットに基づいて、承認決定を行うことができます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>It can also make authorization decisions based on properties of the incoming message: for example, the action header.</source>
          <target state="translated">承認決定は、受信メッセージのプロパティ (アクション ヘッダーなど) に基づいて行うこともできます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>In this method, the application can use the <ph id="ph1">`operationContext`</ph> parameter to access the caller identity (<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>).</source>
          <target state="translated">このメソッドでアプリケーションは、<ph id="ph1">`operationContext`</ph> パラメーターを使用して呼び出し元 ID (<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>) にアクセスできます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>By returning the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object from the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property, the application can access the entire request message (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> プロパティから <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> オブジェクトを返すことで、アプリケーションは要求メッセージ全体 (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>) にアクセスできます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>By returning the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> object from the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> property, the application can access the service URL (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>) and the operation (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> プロパティから <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> オブジェクトを返すことで、アプリケーションは、サービス URL (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>) および操作 (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>) にアクセスできます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>With this information, the application can perform the authorization decision accordingly.</source>
          <target state="translated">この情報により、アプリケーションは適宜承認決定を行うことができます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The claims made by a user are found in the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A&gt;</ph> property of the <ph id="ph3">`AuthorizationContext`</ph>.</source>
          <target state="translated">ユーザーが行ったクレームは、<ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> の <ph id="ph2">&lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A&gt;</ph> プロパティによって返される <ph id="ph3">`AuthorizationContext`</ph> 内にあります。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The current <ph id="ph1">`AuthorizationContext`</ph> is returned by the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class.</source>
          <target state="translated">現在の <ph id="ph1">`AuthorizationContext`</ph> は、<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> クラスの <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> プロパティによって返されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>The following example shows an override of the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> メソッドのオーバーライドを次の例に示します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
          <source>For another example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Manager for a Service<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>.</source>
          <target state="translated">別の例では、次を参照してください。<bpt id="p1">[</bpt>する方法: サービスのカスタム承認マネージャーを作成する<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph> of the current authorization request.</source>
          <target state="translated">現在の承認要求の <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>Gets the set of policies that participate in policy evaluation.</source>
          <target state="translated">ポリシー評価に参加するポリシーのセットを取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 型の <ph id="ph2">&lt;see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> implementation provides a default set of authorization policies.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> の実装には、承認ポリシーの既定のセットが用意されています。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>These include the primary token that contains the credentials of the requester and all supporting tokens, transport tokens, and external policies if specified.</source>
          <target state="translated">この中には、要求元の資格情報を格納するプライマリ トークン、サポートするすべてのトークン、トランスポート トークンが含まれ、指定された場合は外部トークンも含まれます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
          <source>You can override this implementation and provide a different set of policies.</source>
          <target state="translated">この実装を上書きして、ポリシーの別のセットを用意できます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>