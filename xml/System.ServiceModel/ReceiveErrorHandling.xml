<Type Name="ReceiveErrorHandling" FullName="System.ServiceModel.ReceiveErrorHandling">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acb32fca02aaed6e8e028a11968f658c39420ee8" /><Meta Name="ms.sourcegitcommit" Value="406d23aba879fbb482c6da0f64c8ef9494f6a944" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="07/31/2019" /><Meta Name="ms.locfileid" Value="68686327" /></Metadata><TypeSignature Language="C#" Value="public enum ReceiveErrorHandling" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ReceiveErrorHandling extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ReceiveErrorHandling" />
  <TypeSignature Language="VB.NET" Value="Public Enum ReceiveErrorHandling" />
  <TypeSignature Language="C++ CLI" Value="public enum class ReceiveErrorHandling" />
  <TypeSignature Language="F#" Value="type ReceiveErrorHandling = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="b645c-101">有害なメッセージの処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="b645c-101">Specifies handling for poison messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b645c-102">*有害なメッセージ*とは、アプリケーションへの配信が繰り返し失敗するメッセージです。</span><span class="sxs-lookup"><span data-stu-id="b645c-102">A *poison message* is a message that fails repeated attempts to deliver to the application.</span></span> <span data-ttu-id="b645c-103">これは、メッセージ キュー (MSMQ) ベースのバインディングを使用している場合にのみ適用できます。</span><span class="sxs-lookup"><span data-stu-id="b645c-103">This is applicable only when using a Message Queuing (MSMQ)-based binding.</span></span> <span data-ttu-id="b645c-104">既定値は `Fault` です。これにより、リスナーでエラーが発生し、その結果、ServiceHost でもエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="b645c-104">The default value is `Fault`, which faults the listener and therefore the ServiceHost.</span></span> <span data-ttu-id="b645c-105">有害メッセージが原因でサービスが失敗した場合は、<xref:System.ServiceModel.MsmqPoisonMessageException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b645c-105">In the case where the service was to fault because of a poison message, a <xref:System.ServiceModel.MsmqPoisonMessageException> is thrown.</span></span> <span data-ttu-id="b645c-106">この例外は、System.Messaging API を使用してメッセージを移動させるために使用できる MSMQ メッセージの `LookupId` を含みます。</span><span class="sxs-lookup"><span data-stu-id="b645c-106">The exception contains the `LookupId` of the MSMQ message that can be used to move the message out of the way using System.Messaging API.</span></span> <span data-ttu-id="b645c-107"><xref:System.ServiceModel.ReceiveErrorHandling> 列挙体の一部の値 (`Reject` や `Move` など) は、[!INCLUDE[wv](~/includes/wv-md.md)] でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="b645c-107">Certain values of the <xref:System.ServiceModel.ReceiveErrorHandling> enumeration such as `Reject` and `Move` are only available on [!INCLUDE[wv](~/includes/wv-md.md)].</span></span> <span data-ttu-id="b645c-108">有害メッセージの処理は、<xref:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling%2A> プロパティをこの列挙体のいずれかの値に設定することで制御します。</span><span class="sxs-lookup"><span data-stu-id="b645c-108">You control poison message handling by setting the <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling%2A> property to one of the values of this enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b645c-109">次の構成コードは、このプロパティをサービス構成ファイルの中に設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b645c-109">The following configuration code illustrates how to set this property in the service configuration file:</span></span>  
  
 [!code-xml[S_UE_MSMQ_Poison#5](~/samples/snippets/xml/VS_Snippets_CFX/s_ue_msmq_poison/common/serviceapp.config#5)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/wcf/feature-details/poison-message-handling.md"><span data-ttu-id="b645c-110">有害メッセージ処理</span><span class="sxs-lookup"><span data-stu-id="b645c-110">Poison Message Handling</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms751472(v=vs.90)"><span data-ttu-id="b645c-111">MSMQ 3.0 での有害メッセージ処理</span><span class="sxs-lookup"><span data-stu-id="b645c-111">Poison Message Handling in MSMQ 3.0</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="Drop" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Drop = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Drop" />
      <MemberSignature Language="VB.NET" Value="Drop" />
      <MemberSignature Language="C++ CLI" Value="Drop" />
      <MemberSignature Language="F#" Value="Drop = 1" Usage="System.ServiceModel.ReceiveErrorHandling.Drop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b645c-112">このオプションは、有害メッセージを破棄します。</span><span class="sxs-lookup"><span data-stu-id="b645c-112">This option drops the poison message.</span></span> <span data-ttu-id="b645c-113">メッセージは、アプリケーションに配信されません。</span><span class="sxs-lookup"><span data-stu-id="b645c-113">The message never gets delivered to the application.</span></span> <span data-ttu-id="b645c-114">この時点でメッセージの TTL の有効期限が既に切れている場合、メッセージは、送信側の配信不能キューに表示される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b645c-114">If the message's TTL had already expired at this point, then the message may appear in the sender's Dead Letter Queue.</span></span> <span data-ttu-id="b645c-115">有効期限が切れていない場合は、どこにも表示されません。</span><span class="sxs-lookup"><span data-stu-id="b645c-115">If not, the message does not appear anywhere.</span></span> <span data-ttu-id="b645c-116">このオプションは、メッセージが失われてもユーザーにとって問題がないことを示します。</span><span class="sxs-lookup"><span data-stu-id="b645c-116">This option indicates that the user does not really care if the message is lost.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="Fault" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Fault = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Fault" />
      <MemberSignature Language="VB.NET" Value="Fault" />
      <MemberSignature Language="C++ CLI" Value="Fault" />
      <MemberSignature Language="F#" Value="Fault = 0" Usage="System.ServiceModel.ReceiveErrorHandling.Fault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b645c-117">このオプションは、ServiceHost のエラーの原因になったリスナーにエラーを送信します。</span><span class="sxs-lookup"><span data-stu-id="b645c-117">This option sends a fault to the listener that caused the ServiceHost to fault.</span></span> <span data-ttu-id="b645c-118">アプリケーションでキューのメッセージの処理を継続するには、なんらかの外部機構によってアプリケーション キューからメッセージを削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b645c-118">The message must be removed from the application queue by some external mechanism before the application can continue to process messages from the queue.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="Move" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Move = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Move" />
      <MemberSignature Language="VB.NET" Value="Move" />
      <MemberSignature Language="C++ CLI" Value="Move" />
      <MemberSignature Language="F#" Value="Move = 3" Usage="System.ServiceModel.ReceiveErrorHandling.Move" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b645c-119">これは、有害メッセージを有害メッセージ キューに移動して、後で有害メッセージ処理アプリケーションで処理できるようにします。</span><span class="sxs-lookup"><span data-stu-id="b645c-119">This moves the poison message to a Poison Message Queue for later processing by a poison message handling application.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Reject">
      <MemberSignature Language="C#" Value="Reject" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.ReceiveErrorHandling Reject = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.ReceiveErrorHandling.Reject" />
      <MemberSignature Language="VB.NET" Value="Reject" />
      <MemberSignature Language="C++ CLI" Value="Reject" />
      <MemberSignature Language="F#" Value="Reject = 2" Usage="System.ServiceModel.ReceiveErrorHandling.Reject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="b645c-120">これは、アプリケーションでメッセージを受信できないという否定応答を送信側キュー マネージャーに返信するようメッセージ キュー (MSMQ) に指示します。</span><span class="sxs-lookup"><span data-stu-id="b645c-120">This instructs MSMQ to send a negative acknowledgement back to the sending queue manager that the message cannot be received by the application.</span></span> <span data-ttu-id="b645c-121">メッセージは、送信側キュー マネージャーの配信不能キューに置かれます。</span><span class="sxs-lookup"><span data-stu-id="b645c-121">The message is placed in the sending queue manager's Dead Letter Queue.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
