<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientBase`1.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca456f4fe2c2a82a7b7977946454a5c6766d6ee0382cb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4fe2c2a82a7b7977946454a5c6766d6ee0382cb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>The channel to be used to connect to the service.</source>
          <target state="translated">サービスに接続するために使用されるチャネル。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientBase`1">
          <source>Provides the base implementation used to create Windows Communication Foundation (WCF) client objects that can call services.</source>
          <target state="translated">サービスを呼び出すことができる Windows Communication Foundation (WCF) クライアント オブジェクトを作成するために使用する基本実装を用意します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Extend the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class to create a custom <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object that can be used to connect to a service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> クラスを拡張して、サービスに接続するために使用できるカスタム <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> クライアント オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Typically, the <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client base class is extended by a tool such as the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> on your behalf.</source>
          <target state="translated">通常、<ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>クライアント基本クラスが拡張されているツールを使用してなど、 <bpt id="p1">[</bpt>ServiceModel メタデータ ユーティリティ ツール (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>あなたの代理として。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>For an example, see the Example section.</source>
          <target state="translated">例については、「使用例」のセクションを参照してください。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class can be used quickly and easily by developers who prefer objects to the use of the interfaces and the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> は、開発者がインターフェイスと <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> クラスではなくオブジェクトの使用を希望する場合に、容易に使用できるクラスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>In all cases this class wraps or exposes the methods and functionality of the <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> class and the <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">どのような場合でも、このクラスは、<ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> クラスと <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel?displayProperty=nameWithType&gt;</ph> インターフェイスのメソッドと機能をラップまたは公開します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>As when using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> class, you can create the class and modify the endpoint, channel factory, or security information prior to making any calls or calling <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.Open%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> クラスを使用しているときは、任意の呼び出しを行うとき、または <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.Open%2A&gt;</ph> を呼び出す前に、このクラスを作成して、エンドポイント、チャネル ファクトリ、またはセキュリティ情報を変更できます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>WCF Client Overview<ept id="p1">](~/docs/framework/wcf/wcf-client-overview.md)</ept> and <bpt id="p2">[</bpt>Accessing Services Using a WCF Client<ept id="p2">](~/docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>WCF クライアントの概要<ept id="p1">](~/docs/framework/wcf/wcf-client-overview.md)</ept>と<bpt id="p2">[</bpt>WCF クライアントを使用してサービスにアクセスする<ept id="p2">](~/docs/framework/wcf/accessing-services-using-a-wcf-client.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">このクラスから派生するマネージ C++ ユーザーに対する特別な注意 :</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Put your clean-up code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">クリーンアップ コードは、デストラクターではなく (On)(Begin)Close (または OnAbort のどちらか一方または両方) に置いてください。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Avoid destructors: they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">デストラクターは使用しないでください。使用すると、コンパイラが <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> を自動生成します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Avoid non-reference members: they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">非参照メンバーを使用しないでください。使用すると、コンパイラが <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> を自動生成します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">ファイナライザーを使用しないでください。使用する場合は、ビルド警告を抑制し、<ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> を呼び出し、ファイナライザー自体を (On)(Begin)Close (または OnAbort のどちらか一方または両方) から呼び出して、自動生成される <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> の動作をエミュレートする必要があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>The following code example shows how the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> extends the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class to create a <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client class.</source>
          <target state="translated">次のコード例に示す方法、 <bpt id="p1">[</bpt>ServiceModel メタデータ ユーティリティ ツール (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>拡張、<ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph>クラスを作成する、<ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>クライアント クラスです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientBase`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>Use to create a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object from the endpoint information in the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイル内のエンドポイント情報から <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> クライアント オブジェクトを作成するために使用します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientBase`1">
          <source>The main function of the constructor is to create a <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> where the type parameter is the type of the target service contract.</source>
          <target state="translated">コンストラクターの主な機能は、type パラメーターがターゲットのサービス コントラクトの型である <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601?displayProperty=nameWithType&gt;</ph> を作成することです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the default target endpoint from the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイルの既定のターゲット エンドポイントを使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>Use this constructor to create a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object to invoke a service.</source>
          <target state="translated">このコンストラクターを使用して、サービスを起動する <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> クライアント オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>This constructor uses the type parameter as the target contract and the binding and address information from the application configuration file.</source>
          <target state="translated">このコンストラクターは、ターゲット コントラクトとしての型パラメーターと、アプリケーション構成ファイルのバインド情報とアドレス情報を使用します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>The following code example shows how a client uses this constructor in a <ph id="ph1">`SampleServiceClient`</ph> class that extends the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class.</source>
          <target state="translated">次のコード例は、クライアントが <ph id="ph1">`SampleServiceClient`</ph> クラスを拡張する <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> クラスの中でこのコンストラクターをどのように使用するかを示しています。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor">
          <source>Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</source>
          <target state="translated">構成ファイルに既定のエンドポイント情報がないか、複数のエンドポイントがあります。または、構成ファイルがありません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint for a service that allows clients to find and communicate with the service.</source>
          <target state="translated">クライアントがサービスを検索してサービスと通信できるようにするサービス エンドポイント。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified  <ph id="ph2">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph2">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> を使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイル内のエンドポイントの名前。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the configuration information specified in the application configuration file by <ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> によるアプリケーション構成ファイルに指定された構成情報を使用して、<ph id="ph2">&lt;paramref name="endpointConfigurationName" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>Use this constructor when there is more than one target endpoint in the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイル内で複数のターゲット エンドポイントが存在する場合にこのコンストラクターを使用します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>This value is the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element.</source>
          <target state="translated">この値は、<ph id="ph1">`name`</ph>クライアントの属性<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>エンドポイント<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>The specified endpoint information is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定されたエンドポイント情報が <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">エンドポイントが見つからないか、エンドポイント コントラクトが有効ではありません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The binding with which to make calls to the service.</source>
          <target state="translated">サービスを呼び出すために使用されるバインディング。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The address of the service endpoint.</source>
          <target state="translated">サービス エンドポイントのアドレス。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified binding and target address.</source>
          <target state="translated">指定したバインドとターゲット アドレスを使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">リモート アドレスが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph> as the callback object in a duplex conversation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスを双方向通信でのコールバック オブジェクトとして使用する <ph id="ph2">&lt;paramref name="callbackInstance" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>Use this constructor when the service contract requires a callback service instance.</source>
          <target state="translated">このコンストラクターは、サービス コントラクトがコールバック サービス インスタンスを必要とする場合に使用します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>The target endpoint is constructed from the type parameter and information in the application configuration file.</source>
          <target state="translated">ターゲット エンドポイントは、型パラメーターと、アプリケーション構成ファイルの情報から構築されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>The following code example shows how to use this constructor with a <ph id="ph1">`SampleDuplexHelloClient`</ph> class to pass a callback object that listens for messages from the service.</source>
          <target state="translated">次のコード例は、このコンストラクターと <ph id="ph1">`SampleDuplexHelloClient`</ph> クラスを使用して、サービスから送信されるメッセージをリッスンするコールバック オブジェクトを渡す方法を示しています。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>The callback instance is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">コールバック インスタンスが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
          <source>Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</source>
          <target state="translated">構成ファイルに既定のエンドポイント情報がないか、複数のエンドポイントがあります。または、構成ファイルがありません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイル内のエンドポイントの名前。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>The address of the service.</source>
          <target state="translated">サービスのアドレス。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified target address and endpoint information.</source>
          <target state="translated">指定したターゲット アドレスとエンドポイント情報を使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>Use this constructor to determine the target endpoint information from the name of the endpoint in an application configuration file (The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element) and the specified address.</source>
          <target state="translated">このコンス トラクターを使用して、アプリケーション構成ファイル内のエンドポイントの名前からターゲット エンドポイント情報を決定 (を見つけることによって、対象の値がある、<ph id="ph1">`name`</ph>クライアントの属性<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>エンドポイント<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept>要素) と指定したアドレス。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">リモート アドレスが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">エンドポイントが見つからないか、エンドポイント コントラクトが有効ではありません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイル内のエンドポイントの名前。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>The address of the service.</source>
          <target state="translated">サービスのアドレス。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>Use this constructor to determine the target endpoint information from the name of the endpoint in an application configuration file (The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element) and the specified address.</source>
          <target state="translated">このコンス トラクターを使用して、アプリケーション構成ファイル内のエンドポイントの名前からターゲット エンドポイント情報を決定 (を見つけることによって、対象の値がある、<ph id="ph1">`name`</ph>クライアントの属性<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>エンドポイント<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept>要素) と指定したアドレス。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">リモート アドレスが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">エンドポイントが見つからないか、エンドポイント コントラクトが有効ではありません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
          <source>The endpoint for a service that allows clients to find and communicate with the service.</source>
          <target state="translated">クライアントがサービスを検索してサービスと通信できるようにするサービス エンドポイント。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified  <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> and  <ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> objects.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトと <ph id="ph2">&lt;see cref="T:System.ServiceModel.InstanceContext" /&gt;</ph> オブジェクトを使用して、<ph id="ph3">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイル内のエンドポイントの名前。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class using the specified callback service and endpoint configuration information.</source>
          <target state="translated">指定したコールバック サービスとエンドポイント構成情報を使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the client application configuration file.</source>
          <target state="translated">このコンストラクターを使用して、ターゲットのサービスのコールバック コントラクトを実装するサービス オブジェクトを渡し、クライアント アプリケーション構成ファイルからのターゲット エンドポイント情報を特定します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element.</source>
          <target state="translated">見つけることによって、対象の値がある、<ph id="ph1">`name`</ph>クライアントの属性<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>エンドポイント<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept>要素。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The endpoint is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">エンドポイントが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">エンドポイントが見つからないか、エンドポイント コントラクトが有効ではありません。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The binding with which to call the service.</source>
          <target state="translated">サービスを呼び出すバインド。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The address of the service endpoint.</source>
          <target state="translated">サービス エンドポイントのアドレス。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">リモート アドレスが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイル内のエンドポイントの名前。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The address of the service.</source>
          <target state="translated">サービスのアドレス。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the name of the endpoint in an application configuration file (The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element) and the specified address.</source>
          <target state="translated">このコンス トラクターを使用してターゲット サービス用のコールバック コントラクトを実装するサービス オブジェクトを渡すし、アプリケーション構成ファイル内のエンドポイントの名前からターゲット エンドポイント情報を決定する (を見つけることによって、対象の値がある、<ph id="ph1">`name`</ph>クライアントの属性<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>エンドポイント<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept>要素) と指定したアドレス。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">リモート アドレスが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">エンドポイントが見つからないか、エンドポイント コントラクトが有効ではありません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>The name of the endpoint in the application configuration file.</source>
          <target state="translated">アプリケーション構成ファイル内のエンドポイントの名前。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>The address of the service.</source>
          <target state="translated">サービスのアドレス。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the name of the endpoint in an application configuration file (The target value is located by finding the <ph id="ph1">`name`</ph> attribute of the client <bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>endpoint<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept> element) and the specified address.</source>
          <target state="translated">このコンス トラクターを使用してターゲット サービス用のコールバック コントラクトを実装するサービス オブジェクトを渡すし、アプリケーション構成ファイル内のエンドポイントの名前からターゲット エンドポイント情報を決定する (を見つけることによって、対象の値がある、<ph id="ph1">`name`</ph>クライアントの属性<bpt id="p1">[</bpt><ph id="ph2">&amp;lt;</ph>エンドポイント<ph id="ph3">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpoint-of-client.md)</ept>要素) と指定したアドレス。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>The remote address is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">リモート アドレスが <ph id="ph1">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
          <source>The endpoint cannot be found or the endpoint contract is not valid.</source>
          <target state="translated">エンドポイントが見つからないか、エンドポイント コントラクトが有効ではありません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.Abort">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition immediately from its current state into the closed state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを、現在の状態から Closed 状態に直ちに遷移させます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.Abort">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.CacheSetting">
          <source>Gets or sets the cache setting.</source>
          <target state="translated">キャッシュ設定を取得または設定します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.CacheSetting">
          <source>The cache setting.</source>
          <target state="translated">キャッシュ設定。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.Channel">
          <source>Gets the inner channel used to send messages to variously configured service endpoints.</source>
          <target state="translated">さまざまな構成のサービス エンドポイントにメッセージを送信するために使用する内部チャネルを取得します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.Channel">
          <source>A channel of a specified type.</source>
          <target state="translated">指定された種類のチャネル。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.ChannelFactory">
          <source>Gets the underlying <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory`1" /&gt;</ph> object.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory`1" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ChannelFactory">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory`1" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ChannelFactory">
          <source>Used to obtain the inner channel factory that handles creation of the channel to the service.</source>
          <target state="translated">サービスへのチャネルの作成を処理する内部チャネル ファクトリを取得するために使用されます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.ClientCredentials">
          <source>Gets the client credentials used to call an operation.</source>
          <target state="translated">操作を呼び出すために使用されるクライアント資格情報を取得します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ClientCredentials">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> that represents the proof of identity presented by the client.</source>
          <target state="translated">クライアントにより提示される ID の証明を表す <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ClientCredentials">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property to configure the credentials that the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> object uses to connect to the service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> プロパティを使用して、<ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> オブジェクトがサービスに接続するために使用する資格情報を構成します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.ClientCredentials">
          <source>The following code shows how to use the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property to set the username and password prior to calling the service.</source>
          <target state="translated">次のコードは、<ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> プロパティを使用して、サービスを呼び出す前に、ユーザー名とパスワードを設定する方法を示しています。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.Close">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition from its current state into the closed state.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを、現在の状態から Closed 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.Close">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.CreateChannel">
          <source>Returns a new channel to the service.</source>
          <target state="translated">サービスへの新しいチャネルを返します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.CreateChannel">
          <source>A channel of the type of the service contract.</source>
          <target state="translated">サービス コントラクト型のチャネル。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.CreateChannel">
          <source>Returns the channel created by the inner channel factory.</source>
          <target state="translated">内部チャネル ファクトリにより作成されたチャネルを返します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.CreateChannel">
          <source>Exceptions thrown by <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> can be expected here.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType&gt;</ph> によって例外がスローされる可能性があります。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
          <source>Instructs the inner channel to display a user interface if one is required to initialize the channel prior to using it.</source>
          <target state="translated">使用前にチャネルを初期化するときにユーザー インターフェイスが必要な場合は、ユーザー インターフェイスを表示するように内部チャネルに指示します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
          <source>Call the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A&gt;</ph> method if the inner channel requires user interaction prior to constructing the channel.</source>
          <target state="translated">チャネルを構築する前に、内部チャネルがユーザー操作を必要とする場合は、<ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
          <source>For example, if a user must enter a username and password to secure the channel, that custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph> can be invoked by calling this method.</source>
          <target state="translated">たとえば、チャネルをセキュリティで保護するために、ユーザーがユーザー名とパスワードを入力する必要がある場合は、このメソッドを呼び出すことで、入力用のカスタム <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer?displayProperty=nameWithType&gt;</ph> を呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.Endpoint">
          <source>Gets the target endpoint for the service to which the <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client can connect.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> クライアントが接続できるサービスのターゲット エンドポイントを取得します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.Endpoint">
          <source>The target endpoint.</source>
          <target state="translated">ターゲット エンドポイント。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.Endpoint">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.Endpoint%2A&gt;</ph> property to obtain the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> object to inspect or modify prior to using the <ph id="ph3">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.Endpoint%2A&gt;</ph> プロパティを使用して、<ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> オブジェクトを使用する前に、検査または変更するための <ph id="ph3">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
          <source>The type that is identified as reference or numeric by the keyword.</source>
          <target state="translated">キーワードによって参照または数値として識別される型。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
          <source>Replicates the behavior of the default keyword in C#.</source>
          <target state="translated">C# の既定のキーワードの動作をレプリケートします。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;see langword="T" /&gt;</ph> is a reference type and zero if <ph id="ph3">&lt;see langword="T" /&gt;</ph> is a numeric value type.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> が参照型の場合は <ph id="ph2">&lt;see langword="T" /&gt;</ph><ph id="ph3">&lt;see langword="T" /&gt;</ph>を返し、 が数値型の場合は 0 を返します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.InnerChannel">
          <source>Gets the underlying <ph id="ph1">&lt;see cref="T:System.ServiceModel.IClientChannel" /&gt;</ph> implementation.</source>
          <target state="translated">基になる <ph id="ph1">&lt;see cref="T:System.ServiceModel.IClientChannel" /&gt;</ph> 実装を取得します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.InnerChannel">
          <source>The client channel for the <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client object.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> クライアント オブジェクト用のクライアント チャネル。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.InnerChannel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.InnerChannel%2A&gt;</ph> property to obtain the <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel?displayProperty=nameWithType&gt;</ph> that is used to connect to the service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.InnerChannel%2A&gt;</ph> プロパティを使用して、サービスに接続するために使用される <ph id="ph2">&lt;xref:System.ServiceModel.IClientChannel?displayProperty=nameWithType&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>A delegate that is used for calling the asynchronous operation.</source>
          <target state="translated">非同期操作を呼び出すために使用されるデリゲート。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>The input values to the asynchronous call.</source>
          <target state="translated">非同期呼び出しに対する入力値。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>A delegate that is used to end the asynchronous call after it has completed.</source>
          <target state="translated">非同期呼び出しが完了した後、それを終了するために使用されるデリゲート。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>A client-supplied callback that is invoked when the asynchronous method is complete.</source>
          <target state="translated">非同期メソッドが完了したときに呼び出されるクライアント提供のコールバック。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>The callback is passed to the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /&gt;</ph>.</source>
          <target state="translated">コールバックは <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" /&gt;</ph> に渡されます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>userState<ept id="p1">&lt;/c&gt;</ept> object to associate with the asynchronous call.</source>
          <target state="translated">非同期呼び出しに関連付けられた <bpt id="p1">&lt;c&gt;</bpt>userState<ept id="p1">&lt;/c&gt;</ept> オブジェクト。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>Provides support for implementing the event-based asynchronous pattern.</source>
          <target state="translated">イベント ベースの非同期パターンをサポートします。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> this pattern, see <bpt id="p1">[</bpt>Event-based Asynchronous Pattern Overview<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept>.</source>
          <target state="translated">このパターン<ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph>、「<bpt id="p1">[</bpt>イベント ベースの非同期パターンの概要<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase`1.BeginOperationDelegate{`0},System.Object[],System.ServiceModel.ClientBase`1.EndOperationDelegate{`0},System.Threading.SendOrPostCallback,System.Object)">
          <source>Provide a unique value, such as a GUID or hash code, in the <ph id="ph1">`userState`</ph> parameter for each call to <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.InvokeAsync%28System.ServiceModel.ClientBase%7B%600%7D.BeginOperationDelegate%2CSystem.Object%5B%5D%2CSystem.ServiceModel.ClientBase%7B%600%7D.EndOperationDelegate%2CSystem.Threading.SendOrPostCallback%2CSystem.Object%29&gt;</ph>, and when each operation is completed, your event handler can determine which instance of the operation raised the completion event.</source>
          <target state="translated"><ph id="ph1">`userState`</ph> の各呼び出しに対して、<ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.InvokeAsync%28System.ServiceModel.ClientBase%7B%600%7D.BeginOperationDelegate%2CSystem.Object%5B%5D%2CSystem.ServiceModel.ClientBase%7B%600%7D.EndOperationDelegate%2CSystem.Threading.SendOrPostCallback%2CSystem.Object%29&gt;</ph> パラメーターで GUID やハッシュ コードなどの一意な値を指定すると、各操作が完了したときに、どの操作のインスタンスが完了イベントを発生させたのかをイベント ハンドラーが確認できます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.Open">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition from the created state into the opened state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを、Created 状態から Opened 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.Open">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientBase`1.State">
          <source>Gets the current state of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトの現在の状態を取得します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.State">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> of the object.</source>
          <target state="translated">オブジェクトの <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> の値。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientBase`1.State">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
          <source>Explicit implementation of the <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> メソッドの明示的な実装です。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
          <source>Closes the client object.</source>
          <target state="translated">クライアント オブジェクトを閉じます。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientBase`1">
          <source>Begins an asynchronous operation to close the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> を閉じるための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source>The method that receives the callback on completion.</source>
          <target state="translated">完了時のコールバックを受信するメソッド。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source>The state data.</source>
          <target state="translated">状態データ。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> を閉じるための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated">非同期の close 操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The period within which the call must complete.</source>
          <target state="translated">その時間内に呼び出しを完了する必要がある時間。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The callback object invoked when the operation completes.</source>
          <target state="translated">操作が完了したときに呼び出されるコールバック オブジェクト。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state data.</source>
          <target state="translated">状態データ。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> with a specified timeout.</source>
          <target state="translated">指定したタイムアウトで <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> を閉じるための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous begin close operation.</source>
          <target state="translated">非同期のクローズ開始操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientBase`1">
          <source>Begins an asynchronous operation to open the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを開くための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source>The method that receives the callback on completion.</source>
          <target state="translated">完了時のコールバックを受信するメソッド。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source>The state data.</source>
          <target state="translated">状態データ。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを開くための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">非同期の open 操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time within which the call must complete.</source>
          <target state="translated">呼び出しを完了する必要のある時間。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method that receives the callback on completion.</source>
          <target state="translated">完了時のコールバックを受信するメソッド。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state data.</source>
          <target state="translated">状態データ。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object within a specified interval of time.</source>
          <target state="translated">指定した時間内で <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを開くための非同期操作を開始します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated">非同期の open 操作を参照する <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
          <source>The time within which the call must complete.</source>
          <target state="translated">呼び出しを完了する必要のある時間。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition from its current state into the closed state.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを、現在の状態から Closed 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> used to complete the asynchronous close operation.</source>
          <target state="translated">非同期のクローズ操作を完了するために使用される <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation to close the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを閉じるための非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> used to complete the asynchronous end open operation.</source>
          <target state="translated">非同期のオープン終了操作を完了するために使用される <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation to open the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを開くための非同期操作を完了します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
          <source>The time period within which the call must complete.</source>
          <target state="translated">その時間内に呼び出しを完了する必要がある時間。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
          <source>Causes the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> object to transition from the created state into the opened state within a specified interval of time.</source>
          <target state="translated">指定した時間内に、<ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientBase`1" /&gt;</ph> オブジェクトを、Created 状態から Opened 状態に遷移させます。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph>「<ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>