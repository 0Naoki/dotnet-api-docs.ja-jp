<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageHeaderException.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac552636a684489a9b2f3801f597fda6c95da186d3c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52636a684489a9b2f3801f597fda6c95da186d3c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.MessageHeaderException">
          <source>The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.</source>
          <target state="translated">SOAP メッセージを処理するときに、メッセージ ヘッダーに関する想定が満たされないときにスローされる例外です。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>This exception is typically thrown when there are too many headers or headers are missing from the message.</source>
          <target state="translated">通常、この例外は、ヘッダーが多すぎるか、メッセージにヘッダーが見つからない場合にスローされます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>This can include infrastructure headers such as the Action and Reliable Message headers.</source>
          <target state="translated">Action ヘッダーや Reliable Message ヘッダーなどのインフラストラクチャ ヘッダーが含まれることがあります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>This exception derives from <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, which in turn derives from <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
          <target state="translated">この例外は <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> から派生し、その例外は <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> から派生します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> class represents a class of recoverable errors that may be thrown during communication between endpoints and that robust <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client and service applications are expected to handle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> クラスは、エンドポイント間の通信中にスローされる可能性があり、堅牢な <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> のクライアント アプリケーションとサービス アプリケーションが処理することを想定している回復可能なエラー クラスを表します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>To prevent the more generic <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> handler from catching the more specific <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, catch this exception prior to handling <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
          <target state="translated">より汎用的な <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> ハンドラーが詳細な <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> をキャッチしないようにするには、<ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> を処理する前にこの例外をキャッチします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.MessageHeaderException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>If you want to pass an error message to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">ユーザーにエラー メッセージを渡す場合は、<ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%29&gt;</ph> コンストラクターを使用します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>If you want to pass an error message and a reference to the inner exception that is the cause of the exception to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> constructor.</source>
          <target state="translated">例外の原因となった内部例外のエラー メッセージとその参照をユーザーに渡す場合は、<ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> コンストラクターを使用します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>If you want to pass serialization information and streaming context, use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> constructor.</source>
          <target state="translated">シリアル化情報およびストリーム コンテキストを渡す場合は、<ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> コンストラクターを使用します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>The message carried in the exception.</source>
          <target state="translated">例外に含まれるメッセージ。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class with the specified message.</source>
          <target state="translated">指定したメッセージを使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>Use this constructor when you want to pass an error message to the user.</source>
          <target state="translated">エラー メッセージをユーザーに渡す場合は、このコンストラクターを使用します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>The content of the message parameter should be understandable to the intended users.</source>
          <target state="translated">メッセージ パラメーターの内容は、想定されるユーザーが理解できるものであることが必要です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">スローされている例外に関するシリアル化済みオブジェクト データを保持している <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          <target state="translated">転送元または転送先についてのコンテキスト情報を含む <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class used to deserialize data into a <ph id="ph2">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> object.</source>
          <target state="translated">データを <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> オブジェクトに逆シリアル化するために使用される <ph id="ph2">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to restore the exception object transmitted over a stream.</source>
          <target state="translated">このコンストラクターは、ストリームを介して送信される例外オブジェクトを復元する逆シリアル化中に呼び出されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
          <source>The exception message.</source>
          <target state="translated">例外メッセージ。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          <target state="translated">複数のメッセージ ヘッダーが重複する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、メッセージ ヘッダーが存在しない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.</source>
          <target state="translated">指定したメッセージと、メッセージ ヘッダーが重複しているか失われていることを示す値を使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">例外メッセージ。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that contains the inner exception that caused the exception.</source>
          <target state="translated">例外を引き起こした内部例外を格納する <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message and the inner exception that caused the exception.</source>
          <target state="translated">指定したメッセージと、例外の原因となった内部例外を使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>Use this constructor when you want to pass an error message and information about an inner exception up to the user.</source>
          <target state="translated">内部例外についてのエラー メッセージと情報をユーザーに渡す場合にこのコンストラクターを使用します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The content of the message parameter should be understandable to the intended users.</source>
          <target state="translated">メッセージ パラメーターの内容は、想定されるユーザーが理解できるものであることが必要です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">前の例外の直接の結果としてスローされる例外は、<ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティに前の例外への参照を含んでいる場合があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor or a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic) if the <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティは、コンストラクターに渡される値と同じ値を返します。また、<ph id="ph2">`null`</ph> プロパティが内部例外の値をコンストラクターに提供しない場合は、<ph id="ph3">`Nothing`</ph> 参照 (Visual Basic では <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph>) を返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>The exception message.</source>
          <target state="translated">例外メッセージ。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>The name of the message header.</source>
          <target state="translated">メッセージ ヘッダーの名前。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>The namespace of the message header.</source>
          <target state="translated">メッセージ ヘッダーの名前空間。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace.</source>
          <target state="translated">指定したメッセージ、ヘッダー名、および名前空間を使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>The exception message.</source>
          <target state="translated">例外メッセージ。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>The name of the message header.</source>
          <target state="translated">メッセージ ヘッダーの名前。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>The namespace of the message header.</source>
          <target state="translated">メッセージ ヘッダーの名前空間。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          <target state="translated">複数のメッセージ ヘッダーが重複する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、メッセージ ヘッダーが存在しない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.</source>
          <target state="translated">指定したメッセージ、ヘッダー名と名前空間、およびメッセージ ヘッダーが重複しているか失われていることを示す値を使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">例外メッセージ。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The name of the message header.</source>
          <target state="translated">メッセージ ヘッダーの名前。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The namespace of the message header.</source>
          <target state="translated">メッセージ ヘッダーの名前空間。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that contains the inner exception that caused the exception.</source>
          <target state="translated">例外を引き起こした内部例外を格納する <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace, and the inner exception that caused the exception.</source>
          <target state="translated">指定したメッセージ、ヘッダー名と名前空間、および例外の原因となった内部例外を使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">例外メッセージ。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The name of the message header.</source>
          <target state="translated">メッセージ ヘッダーの名前。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The namespace of the message header.</source>
          <target state="translated">メッセージ ヘッダーの名前空間。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          <target state="translated">複数のメッセージ ヘッダーが重複する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、メッセージ ヘッダーが存在しない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that contains the inner exception that caused the exception.</source>
          <target state="translated">例外を引き起こした内部例外を格納する <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.</source>
          <target state="translated">指定したメッセージ、ヘッダー名と名前空間、メッセージ ヘッダーが重複しているか失われていることを示す値、および例外の原因となった内部例外を使用して、<ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageHeaderException.HeaderName">
          <source>Gets the name of the SOAP header that caused the exception.</source>
          <target state="translated">例外の原因となった SOAP ヘッダーの名前を取得します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageHeaderException.HeaderName">
          <source>The name of the SOAP header.</source>
          <target state="translated">SOAP ヘッダーの名前。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
          <source>Gets the namespace of the SOAP header that caused the exception.</source>
          <target state="translated">例外の原因となった SOAP ヘッダーの名前空間を取得します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
          <source>The namespace of the SOAP header.</source>
          <target state="translated">SOAP ヘッダーの名前空間。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
          <source>Gets a value that indicates whether there are multiple message headers or no message headers.</source>
          <target state="translated">複数のメッセージ ヘッダーが存在するか、メッセージ ヘッダーが存在しないかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          <target state="translated">複数のメッセージ ヘッダーが重複する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、メッセージ ヘッダーが存在しない場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>