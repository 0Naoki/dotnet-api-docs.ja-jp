<Type Name="DataTemplateSelector" FullName="System.Windows.Controls.DataTemplateSelector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="478559aaf0f2fa99be891dcbdf485d4c9490fcd1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36567079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTemplateSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplateSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DataTemplateSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplateSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplateSelector" />
  <TypeSignature Language="F#" Value="type DataTemplateSelector = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d8141-101">データ オブジェクトとデータ バインド要素に基づいて <see cref="T:System.Windows.DataTemplate" /> を選択する方法を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8141-101">Provides a way to choose a <see cref="T:System.Windows.DataTemplate" /> based on the data object and the data-bound element.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8141-102">通常、作成、 <xref:System.Windows.Controls.DataTemplateSelector> 1 つ以上ある場合<xref:System.Windows.DataTemplate>オブジェクトの同じ型を選択する、独自のロジックを指定する、<xref:System.Windows.DataTemplate>各データ オブジェクトのプロパティに基づいて適用します。</span><span class="sxs-lookup"><span data-stu-id="d8141-102">Typically, you create a <xref:System.Windows.Controls.DataTemplateSelector> when you have more than one <xref:System.Windows.DataTemplate> for the same type of objects and you want to supply your own logic to choose a <xref:System.Windows.DataTemplate> to apply based on the properties of each data object.</span></span> <span data-ttu-id="d8141-103">別のオブジェクトがある場合の種類を設定、<xref:System.Windows.DataTemplate.DataType%2A>プロパティを<xref:System.Windows.DataTemplate>です。</span><span class="sxs-lookup"><span data-stu-id="d8141-103">Note that if you have objects of different types you can set the <xref:System.Windows.DataTemplate.DataType%2A> property on the <xref:System.Windows.DataTemplate>.</span></span> <span data-ttu-id="d8141-104">実行するかどうかは、作成する必要はありません、<xref:System.Windows.Controls.DataTemplateSelector>です。</span><span class="sxs-lookup"><span data-stu-id="d8141-104">If you do that then there is no need to create a <xref:System.Windows.Controls.DataTemplateSelector>.</span></span> <span data-ttu-id="d8141-105">さらに、さまざまなプロパティを持つ同じ型のオブジェクトがある場合は、することができますも検討を使用して、<xref:System.Windows.DataTrigger>またはデータ コンバーター。</span><span class="sxs-lookup"><span data-stu-id="d8141-105">Furthermore, if you have objects of the same type but with different properties, you can also consider using a <xref:System.Windows.DataTrigger> or a data converter.</span></span> <span data-ttu-id="d8141-106">詳しくは「 [データ テンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d8141-106">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
 <span data-ttu-id="d8141-107">テンプレート セレクターを作成するから継承するクラスを作成<xref:System.Windows.Controls.DataTemplateSelector>をオーバーライドし、<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8141-107">To create a template selector, create a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="d8141-108">クラスが定義される要素のテンプレート セレクター プロパティに、クラスのインスタンスを割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="d8141-108">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8141-109">この例では、バインディング ソースは、一連の`Task`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d8141-109">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="d8141-110">プロパティの 1 つ、`Task`オブジェクトが`Priority`です。</span><span class="sxs-lookup"><span data-stu-id="d8141-110">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="d8141-111">定義されている、2 つのデータ テンプレートが`myTaskTemplate`と`importantTaskTemplate`です。</span><span class="sxs-lookup"><span data-stu-id="d8141-111">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="d8141-112">選択するためのロジックを提供する<xref:System.Windows.DataTemplate>に基づいて、使用するのには、`Priority`値のデータ オブジェクトのサブクラスを作成<xref:System.Windows.Controls.DataTemplateSelector>をオーバーライドし、<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8141-112">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="d8141-113">次の例で、<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>メソッドの値に基づいて、適切なテンプレートを返すロジックの提供、`Priority`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d8141-113">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="d8141-114">エンベロープのリソースに返されるテンプレートが見つかった<xref:System.Windows.Window>要素。</span><span class="sxs-lookup"><span data-stu-id="d8141-114">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="d8141-115">その後、リソースとして `TaskListDataTemplateSelector` を宣言できます。</span><span class="sxs-lookup"><span data-stu-id="d8141-115">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="d8141-116">テンプレート セレクター リソースを使用するには、それを割り当てる、<xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A>のプロパティ、<xref:System.Windows.Controls.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="d8141-116">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="d8141-117"><xref:System.Windows.Controls.ListBox>呼び出し、<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>のメソッド、`TaskListDataTemplateSelector`基になるコレクション内の項目の各します。</span><span class="sxs-lookup"><span data-stu-id="d8141-117">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="d8141-118">呼び出しでは、項目パラメーターとしてデータ オブジェクトを渡します。</span><span class="sxs-lookup"><span data-stu-id="d8141-118">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="d8141-119"><xref:System.Windows.DataTemplate>によって返される、メソッドはそのデータ オブジェクトに適用されます。</span><span class="sxs-lookup"><span data-stu-id="d8141-119">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="d8141-120">完全なサンプルについては、「[Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)」(データ テンプレート サンプルの概要) をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d8141-120">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplateSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplateSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8141-121">
            <see cref="T:System.Windows.Controls.DataTemplateSelector" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8141-121">Initializes a new instance of the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DataTemplate SelectTemplate (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DataTemplate SelectTemplate(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectTemplate (item As Object, container As DependencyObject) As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DataTemplate ^ SelectTemplate(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="abstract member SelectTemplate : obj * System.Windows.DependencyObject -&gt; System.Windows.DataTemplate&#xA;override this.SelectTemplate : obj * System.Windows.DependencyObject -&gt; System.Windows.DataTemplate" Usage="dataTemplateSelector.SelectTemplate (item, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="d8141-122">テンプレートを選択する対象となるデータ オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8141-122">The data object for which to select the template.</span>
          </span>
        </param>
        <param name="container">
          <span data-ttu-id="d8141-123">データ バインドされたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8141-123">The data-bound object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8141-124">派生クラスでオーバーライドされると、カスタム ロジックに基づいて <see cref="T:System.Windows.DataTemplate" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8141-124">When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate" /> based on custom logic.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8141-125">
            <see cref="T:System.Windows.DataTemplate" /> または <see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8141-125">Returns a <see cref="T:System.Windows.DataTemplate" /> or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d8141-126">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8141-126">The default value is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8141-127">通常、同じ種類のオブジェクトに対して定義されている 1 つ以上のデータ テンプレートがある場合は、テンプレート セレクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8141-127">Typically, you use a template selector when you have more than one data template defined for the same type of objects.</span></span> <span data-ttu-id="d8141-128">たとえば、バインディング ソースがリスト student オブジェクトの一覧場合パートタイム受講者に、特定のテンプレートを適用します。</span><span class="sxs-lookup"><span data-stu-id="d8141-128">For example, if your binding source is list a list of student objects and you want to apply a particular template to the part-time students.</span></span> <span data-ttu-id="d8141-129">継承するクラスを作成することでこれを行う<xref:System.Windows.Controls.DataTemplateSelector>をオーバーライドして、<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8141-129">You can do this by creating a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and overriding the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="d8141-130">クラスが定義される要素のテンプレート セレクター プロパティに、クラスのインスタンスを割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="d8141-130">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8141-131">この例では、バインディング ソースは、一連の`Task`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d8141-131">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="d8141-132">プロパティの 1 つ、`Task`オブジェクトが`Priority`です。</span><span class="sxs-lookup"><span data-stu-id="d8141-132">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="d8141-133">定義されている、2 つのデータ テンプレートが`myTaskTemplate`と`importantTaskTemplate`です。</span><span class="sxs-lookup"><span data-stu-id="d8141-133">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="d8141-134">選択するためのロジックを提供する<xref:System.Windows.DataTemplate>に基づいて、使用するのには、`Priority`値のデータ オブジェクトのサブクラスを作成<xref:System.Windows.Controls.DataTemplateSelector>をオーバーライドし、<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8141-134">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="d8141-135">次の例で、<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>メソッドの値に基づいて、適切なテンプレートを返すロジックの提供、`Priority`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d8141-135">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="d8141-136">エンベロープのリソースに返されるテンプレートが見つかった<xref:System.Windows.Window>要素。</span><span class="sxs-lookup"><span data-stu-id="d8141-136">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="d8141-137">その後、リソースとして `TaskListDataTemplateSelector` を宣言できます。</span><span class="sxs-lookup"><span data-stu-id="d8141-137">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="d8141-138">テンプレート セレクター リソースを使用するには、それを割り当てる、<xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A>のプロパティ、<xref:System.Windows.Controls.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="d8141-138">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="d8141-139"><xref:System.Windows.Controls.ListBox>呼び出し、<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>のメソッド、`TaskListDataTemplateSelector`基になるコレクション内の項目の各します。</span><span class="sxs-lookup"><span data-stu-id="d8141-139">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="d8141-140">呼び出しでは、項目パラメーターとしてデータ オブジェクトを渡します。</span><span class="sxs-lookup"><span data-stu-id="d8141-140">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="d8141-141"><xref:System.Windows.DataTemplate>によって返される、メソッドはそのデータ オブジェクトに適用されます。</span><span class="sxs-lookup"><span data-stu-id="d8141-141">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="d8141-142">完全なサンプルについては、「[Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)」(データ テンプレート サンプルの概要) をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="d8141-142">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>