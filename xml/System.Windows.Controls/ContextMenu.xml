<Type Name="ContextMenu" FullName="System.Windows.Controls.ContextMenu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b61d08ff26f03905be6366a346a360f3032fc5a" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52594288" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContextMenu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type ContextMenu = class&#xA;    inherit MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="aa482-101">コントロールのコンテキストに固有の機能をそのコントロールで公開するためのポップアップ メニューを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aa482-101">Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-102"><xref:System.Windows.Controls.ContextMenu> <xref:System.Windows.Controls.ItemsControl>、任意の型 (文字列、画像、パネルなど) のオブジェクトのコレクションを含めることを意味することができます。</span><span class="sxs-lookup"><span data-stu-id="aa482-102"><xref:System.Windows.Controls.ContextMenu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="aa482-103">詳細については、<xref:System.Windows.Controls.ItemsControl> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="aa482-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="aa482-104">プロパティ、<xref:System.Windows.Controls.ContextMenu>の動作と位置を定義するクラスを使用、<xref:System.Windows.Controls.ContextMenu>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-104">The properties of the <xref:System.Windows.Controls.ContextMenu> class are used to define the position and behavior of the <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 <span data-ttu-id="aa482-105">A<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>できますが、<xref:System.Windows.Controls.ContextMenu>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-105">A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a <xref:System.Windows.Controls.ContextMenu>.</span></span>  <span data-ttu-id="aa482-106">割り当てた場合、<xref:System.Windows.Controls.ContextMenu>を<xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>または<xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType>プロパティ、<xref:System.Windows.Controls.ContextMenuService>クラス ユーザーとの対話に応答のコンテキスト メニューの操作を処理します。</span><span class="sxs-lookup"><span data-stu-id="aa482-106">If you assign a <xref:System.Windows.Controls.ContextMenu> to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction.</span></span> <span data-ttu-id="aa482-107">作業の一部、<xref:System.Windows.Controls.ContextMenuService>を開いて、<xref:System.Windows.Controls.ContextMenu>ユーザーがコントロール上でマウスの右ボタンをクリックするとします。</span><span class="sxs-lookup"><span data-stu-id="aa482-107">Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the <xref:System.Windows.Controls.ContextMenu> when the user clicks the right mouse button over the control.</span></span>  
  
 <span data-ttu-id="aa482-108">次のプロパティが定義されている、<xref:System.Windows.Controls.ContextMenu>と<xref:System.Windows.Controls.ContextMenuService>クラス。</span><span class="sxs-lookup"><span data-stu-id="aa482-108">The following properties are defined by the <xref:System.Windows.Controls.ContextMenu> and <xref:System.Windows.Controls.ContextMenuService> classes.</span></span>  <span data-ttu-id="aa482-109">両方でこれらのプロパティのいずれかに設定されている場合<xref:System.Windows.Controls.ContextMenu>と<xref:System.Windows.Controls.ContextMenuService>、プロパティの値から、<xref:System.Windows.Controls.ContextMenuService>使用されます。</span><span class="sxs-lookup"><span data-stu-id="aa482-109">If any of these properties are set on both <xref:System.Windows.Controls.ContextMenu> and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.</span></span>  
  
-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  
  
 <span data-ttu-id="aa482-110">A<xref:System.Windows.Controls.ContextMenu>内で自動的に配置されますが、<xref:System.Windows.Controls.Primitives.Popup>コントロール。</span><span class="sxs-lookup"><span data-stu-id="aa482-110">A <xref:System.Windows.Controls.ContextMenu> is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="aa482-111">この動作は変更できません。</span><span class="sxs-lookup"><span data-stu-id="aa482-111">This behavior cannot be changed.</span></span>  
  
## <a name="customizing-the-contextmenu-control"></a><span data-ttu-id="aa482-112">ContextMenu コントロールのカスタマイズ</span><span class="sxs-lookup"><span data-stu-id="aa482-112">Customizing the ContextMenu Control</span></span>  
 <span data-ttu-id="aa482-113">複数に同じプロパティの設定を適用する<xref:System.Windows.Controls.ContextMenu>コントロールを使用して、<xref:System.Windows.FrameworkElement.Style%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="aa482-113">To apply the same property settings to multiple <xref:System.Windows.Controls.ContextMenu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="aa482-114">既定値を変更する<xref:System.Windows.Controls.ControlTemplate>固有の外観を制御します。</span><span class="sxs-lookup"><span data-stu-id="aa482-114">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="aa482-115">作成の詳細については、<xref:System.Windows.Controls.ControlTemplate>を参照してください[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。</span><span class="sxs-lookup"><span data-stu-id="aa482-115">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="aa482-116">パーツとに固有の状態を表示する、<xref:System.Windows.Controls.ContextMenu>を参照してください[ContextMenu のスタイルとテンプレート](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md)します。</span><span class="sxs-lookup"><span data-stu-id="aa482-116">To see the parts and states that are specific to the <xref:System.Windows.Controls.ContextMenu>, see [ContextMenu Styles and Templates](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="aa482-117">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aa482-117">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="aa482-118">プロパティが既定のスタイルによって設定されている場合は、アプリケーションでコントロールが表示されたら、既定値から、プロパティが変更可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aa482-118">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="aa482-119">デスクトップ テーマでは、アプリケーションが実行されている場合は、使用、既定のスタイルが決定されます。</span><span class="sxs-lookup"><span data-stu-id="aa482-119">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="aa482-120">詳細については、次を参照してください。[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)します。</span><span class="sxs-lookup"><span data-stu-id="aa482-120">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa482-121">ビジュアルのプロパティの設定はのみ、効果がそのプロパティが両方に存在する場合は<xref:System.Windows.Controls.ContextMenu>コントロールの既定のテンプレートとを使用して設定をします。</span><span class="sxs-lookup"><span data-stu-id="aa482-121">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ContextMenu> control's default template and is set by using a .</span></span> <span data-ttu-id="aa482-122">"を変更するビジュアル構造体のコントロールのセクションではビジュアルのプロパティの一覧を検索できます[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。</span><span class="sxs-lookup"><span data-stu-id="aa482-122">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa482-123">次の例では、作成、<xref:System.Windows.Controls.ContextMenu>のテキストを操作する、<xref:System.Windows.Controls.TextBox>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-123">The following example creates a <xref:System.Windows.Controls.ContextMenu> that manipulates the text of a <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="aa482-124">サブスクリプションし、のイベントを処理する方法を示します<xref:System.Windows.Controls.MenuItem>内のオブジェクト、<xref:System.Windows.Controls.ContextMenu>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-124">The example demonstrates how to subscribe to and handle the events of <xref:System.Windows.Controls.MenuItem> objects in a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-xaml[ContextMenu#Events](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#events)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ContextMenuService" />
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa482-125">
            <see cref="T:System.Windows.Controls.ContextMenu" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-125">Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : System.Windows.RoutedEventHandler " Usage="member this.Closed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-126">
            <see cref="T:System.Windows.Controls.ContextMenu" /> の特定のインスタンスが閉じたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-126">Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Closed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="aa482-127">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="aa482-127">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-128">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-128">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  
|<span data-ttu-id="aa482-129">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="aa482-129">Routing strategy</span></span>|<span data-ttu-id="aa482-130">バブル</span><span class="sxs-lookup"><span data-stu-id="aa482-130">Bubbling</span></span>|  
|<span data-ttu-id="aa482-131">Delegate</span><span class="sxs-lookup"><span data-stu-id="aa482-131">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="aa482-132">次の例では、<xref:System.Windows.Controls.ContextMenu>イベント:<xref:System.Windows.Controls.ContextMenu.Opened>と<xref:System.Windows.Controls.ContextMenu.Closed>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-132">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClosedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-133">
            <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> ルーティング イベントを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-133">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomPopupPlacementCallback : System.Windows.Controls.Primitives.CustomPopupPlacementCallback with get, set" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-134">画面上で <see cref="T:System.Windows.Controls.ContextMenu" /> を配置する場所を示すコールバックを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-134">Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu" /> should be placed on the screen.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-135">
            <see cref="T:System.Windows.Controls.ContextMenu" /> の位置を示すコールバック。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-135">A callback that specifies the location of the <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-136"><xref:System.Windows.Controls.ContextMenu.Placement%2A>にプロパティを設定する必要があります<xref:System.Windows.Controls.Primitives.PlacementMode.Custom>使用されるコールバック デリゲート。</span><span class="sxs-lookup"><span data-stu-id="aa482-136">The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> for the callback delegate to be used.</span></span>  
  
 <span data-ttu-id="aa482-137"><xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback>デリゲートを定義されている可能性のあるポイントの配列が返された、<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-137">The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span></span> <span data-ttu-id="aa482-138">容量を最大限に高める、ポイントを選択する、コンテキスト メニューが表示されたら、<xref:System.Windows.Controls.ToolTip>ウィンドウが表示されています。</span><span class="sxs-lookup"><span data-stu-id="aa482-138">When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.</span></span>  
  
 <span data-ttu-id="aa482-139">動作は、ポップアップの場合と同じです。</span><span class="sxs-lookup"><span data-stu-id="aa482-139">The behavior is the same as it is for the popup.</span></span>  <span data-ttu-id="aa482-140">詳細については、次を参照してください。[方法: ポップアップのカスタム位置を指定](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md)と[ポップアップの配置のサンプル](https://go.microsoft.com/fwlink/?LinkID=160032)します。</span><span class="sxs-lookup"><span data-stu-id="aa482-140">For more information, see [How to: Specify a Custom Popup Position](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) and [Popup Placement Sample](https://go.microsoft.com/fwlink/?LinkID=160032).</span></span>  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa482-141">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="aa482-141">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-142">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-142">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="aa482-143">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="aa482-143">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa482-144">なし</span><span class="sxs-lookup"><span data-stu-id="aa482-144">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPopupPlacementCallbackProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-145">
            <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-145">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-146">コントロールがスクロールをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-146">Gets a value that indicates whether the control supports scrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-147">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-147">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-148">コントロールに、<xref:System.Windows.Controls.ScrollViewer>そのスタイルであり、カスタムのキーボード スクロール動作、<xref:System.Windows.Controls.ListBox.HandlesScrolling%2A>返す必要があります`true`します。</span><span class="sxs-lookup"><span data-stu-id="aa482-148">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasDropShadow : bool with get, set" Usage="System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-149">コンテキスト メニューがドロップ シャドウを伴って表示されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-149">Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-150">コンテキスト メニューがドロップ シャドウを伴って表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-150">
              <see langword="true" /> if the context menu appears with a dropped shadow; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa482-151">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-151">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-152">ときに、<xref:System.Windows.Controls.ContextMenu>が開き、値は、の値に設定が<xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-152">When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="aa482-153">このプロパティを設定`true`場合影響を与えません、<xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>プロパティは`false`します。</span><span class="sxs-lookup"><span data-stu-id="aa482-153">Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property is `false`.</span></span>  
  
<a name="dependencyPropertyInfo_"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa482-154">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="aa482-154">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-155">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-155">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  
|<span data-ttu-id="aa482-156">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="aa482-156">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa482-157">なし</span><span class="sxs-lookup"><span data-stu-id="aa482-157">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa482-158"><xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> プロパティを使用する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="aa482-158">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> property.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasDropShadowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-159">
            <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-159">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-160">対象の左開始位置からポップアップの配置ポイントまでの横方向の距離を取得または指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-160">Get or sets the horizontal distance between the target origin and the popup alignment point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-161">対象の左開始位置からポップアップの配置ポイントまでの横方向の距離。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-161">The horizontal distance between the target origin and the popup alignment point.</span>
          </span>
          <span data-ttu-id="aa482-162">ターゲットの始点とポップアップ配置ポイントについては、次を参照してください。[ポップアップの配置動作](~/docs/framework/wpf/controls/popup-placement-behavior.md)します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-162">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          </span>
          <span data-ttu-id="aa482-163">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-163">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-164">配置することができます、<xref:System.Windows.Controls.ContextMenu>を設定して、 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>、 <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>、 <xref:System.Windows.Controls.ContextMenu.Placement%2A>、 <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>、および<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="aa482-164">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="aa482-165">これらのプロパティと同じ働きは、<xref:System.Windows.Controls.Primitives.Popup>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-165">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="aa482-166">詳細については、「[Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aa482-166">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa482-167">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="aa482-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-168">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-168">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  
|<span data-ttu-id="aa482-169">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="aa482-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa482-170">なし</span><span class="sxs-lookup"><span data-stu-id="aa482-170">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="aa482-171">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="aa482-171">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or –  
<object HorizontalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="aa482-172">XAML 値</span><span class="sxs-lookup"><span data-stu-id="aa482-172">XAML Values</span></span>  
 <span data-ttu-id="aa482-173">*double*</span><span class="sxs-lookup"><span data-stu-id="aa482-173">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="aa482-174">文字列表現を<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="aa482-174">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="aa482-175">これは、[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]測定します。</span><span class="sxs-lookup"><span data-stu-id="aa482-175">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="aa482-176">文字列が必要な 10 進数のポイントを明示的に含まれません。</span><span class="sxs-lookup"><span data-stu-id="aa482-176">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="aa482-177">値のインスタンス`1`は許容されます。</span><span class="sxs-lookup"><span data-stu-id="aa482-177">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="aa482-178">同じ<xref:System.Double>プロパティの値のセクションで説明したように範囲の制限が適用されます。</span><span class="sxs-lookup"><span data-stu-id="aa482-178">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="aa482-179">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="aa482-179">*qualifiedDouble*</span></span>  
 <span data-ttu-id="aa482-180">A*二重*値、上記と続く単位の次の宣言文字列のいずれか: `px`、 `in`、 `cm`、`pt`します。</span><span class="sxs-lookup"><span data-stu-id="aa482-180">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="aa482-181">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="aa482-181">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="aa482-182">`in` インチです。1 in 96px = =</span><span class="sxs-lookup"><span data-stu-id="aa482-182">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="aa482-183">`cm` センチメートル; は、します。1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="aa482-183">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="aa482-184">`pt` ポイントです。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="aa482-184">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="aa482-185">**注**多くの場合 double 型の値を自動に設定できますが、<xref:System.Windows.Controls.ContextMenu>オフセットが Auto に設定されている場合は表示されません。</span><span class="sxs-lookup"><span data-stu-id="aa482-185">**Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa482-186">次の例は、使用する方法を示します、 <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> 、プロパティ、<xref:System.Windows.Controls.ContextMenu>ボタンの親に関連の指定した位置を開きます。</span><span class="sxs-lookup"><span data-stu-id="aa482-186">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-187">
            <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-187">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-188">
            <see cref="T:System.Windows.Controls.ContextMenu" /> が表示されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-188">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-189">
            <see cref="T:System.Windows.Controls.ContextMenu" /> が可視の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-189">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa482-190">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-190">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-191">ときに<xref:System.Windows.Controls.ContextMenu.IsOpen%2A>に設定されている`true`、マウスのキャプチャに設定されている、<xref:System.Windows.Controls.ContextMenu>とそのサブツリーです。</span><span class="sxs-lookup"><span data-stu-id="aa482-191">When <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa482-192">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="aa482-192">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-193">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-193">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  
|<span data-ttu-id="aa482-194">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="aa482-194">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="aa482-195">この例を確認する方法を示して かどうか、<xref:System.Windows.Controls.ContextMenu.IsOpen%2A>プロパティに設定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="aa482-195">This example shows how to check to determine whether the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[ContextMenu#ContextMenuIsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenuisopen)]
 [!code-vb[ContextMenu#ContextMenuIsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenuisopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-196">
            <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-196">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="aa482-197">
            <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-197">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa482-198">
            <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> イベントが発生すると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-198">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contextMenu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aa482-199">この <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> に対応する <see cref="T:System.Windows.Controls.ContextMenu" /> オブジェクトを作成して返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-199">Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aa482-200">この <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> に対応する <see cref="T:System.Windows.Controls.ContextMenu" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-200">A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contextMenu.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="aa482-201">
            <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-201">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa482-202">
            <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> プロパティが変更されたことを報告します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-202">Reports that the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="aa482-203">
            <see cref="E:System.Windows.UIElement.KeyDown" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-203">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa482-204">
            <see cref="E:System.Windows.ContentElement.KeyDown" /> イベントが <see cref="T:System.Windows.Controls.ContextMenu" /> 内のオブジェクトによって起動されると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-204">Called when a <see cref="E:System.Windows.ContentElement.KeyDown" /> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="aa482-205">
            <see cref="E:System.Windows.UIElement.KeyUp" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-205">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa482-206">
            <see cref="E:System.Windows.ContentElement.KeyUp" /> イベントに応答します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-206">Responds to the <see cref="E:System.Windows.ContentElement.KeyUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="aa482-207">
            <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-207">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa482-208">
            <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> イベントが発生すると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-208">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="contextMenu.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="aa482-209">前にコンテキスト メニューが関連付けられていたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-209">The object that the context menu was previously attached to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa482-210">コンテキスト メニューのビジュアル親が変更されるときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-210">Called when a context menu's visual parent changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : System.Windows.RoutedEventHandler " Usage="member this.Opened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-211">ショートカット メニューの特定のインスタンスが開いたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-211">Occurs when a particular instance of a context menu opens.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Opened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="aa482-212">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="aa482-212">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-213">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-213">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  
|<span data-ttu-id="aa482-214">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="aa482-214">Routing strategy</span></span>|<span data-ttu-id="aa482-215">バブル</span><span class="sxs-lookup"><span data-stu-id="aa482-215">Bubbling</span></span>|  
|<span data-ttu-id="aa482-216">Delegate</span><span class="sxs-lookup"><span data-stu-id="aa482-216">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="aa482-217">次の例では、<xref:System.Windows.Controls.ContextMenu>イベント:<xref:System.Windows.Controls.ContextMenu.Opened>と<xref:System.Windows.Controls.ContextMenu.Closed>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-217">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="OpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent OpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent OpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ OpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-218">
            <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> ルーティング イベントを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-218">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Controls.Primitives.PlacementMode with get, set" Usage="System.Windows.Controls.ContextMenu.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-219">
            <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> の <see cref="T:System.Windows.Controls.ContextMenu" /> プロパティを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-219">Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> property of a <see cref="T:System.Windows.Controls.ContextMenu" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-220">
            <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> 列挙体のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-220">One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration.</span>
          </span>
          <span data-ttu-id="aa482-221">既定値は、<see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-221">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-222">ときに、<xref:System.Windows.Controls.ContextMenu>に割り当てられている、<xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>または<xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType>プロパティ、<xref:System.Windows.Controls.ContextMenuService>このプロパティの値を変更するときに、<xref:System.Windows.Controls.ContextMenu>が開きます。</span><span class="sxs-lookup"><span data-stu-id="aa482-222">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="aa482-223">ユーザーが開いた場合、 <xref:System.Windows.Controls.ContextMenu> 、マウスを使用して<xref:System.Windows.Controls.ContextMenu.Placement%2A>に設定されている<xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-223">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span></span>  <span data-ttu-id="aa482-224">ユーザーが開いた場合、 <xref:System.Windows.Controls.ContextMenu> 、キーボードを使用して<xref:System.Windows.Controls.ContextMenu.Placement%2A>に設定されている<xref:System.Windows.Controls.Primitives.PlacementMode.Center>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-224">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span></span>  <span data-ttu-id="aa482-225">位置を変更する場合、 <xref:System.Windows.Controls.ContextMenu>、設定、<xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType>プロパティを<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-225">If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="aa482-226">配置することができます、<xref:System.Windows.Controls.ContextMenu>を設定して、 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>、 <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>、 <xref:System.Windows.Controls.ContextMenu.Placement%2A>、 <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>、および<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="aa482-226">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="aa482-227">これらのプロパティと同じ働きは、<xref:System.Windows.Controls.Primitives.Popup>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-227">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="aa482-228">詳細については、「[Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aa482-228">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa482-229">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="aa482-229">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-230">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-230">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  
|<span data-ttu-id="aa482-231">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="aa482-231">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa482-232">なし</span><span class="sxs-lookup"><span data-stu-id="aa482-232">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa482-233">次の例は、使用する方法を示します、<xref:System.Windows.Controls.ContextMenu.Placement%2A>プロパティと場所を指定する配置モード、<xref:System.Windows.Controls.ContextMenu>が配置されます。</span><span class="sxs-lookup"><span data-stu-id="aa482-233">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.Placement%2A> property and a placement mode to specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-234">
            <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-234">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementRectangle : System.Windows.Rect with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-235">コンテキスト メニューが開くときに配置の基準となる領域を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-235">Gets or sets the area relative to which the context menu is positioned when it opens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-236">コンテキスト メニューの配置に使用される四角形を定義する領域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-236">The area that defines the rectangle that is used to position the context menu.</span>
          </span>
          <span data-ttu-id="aa482-237">既定値は、<see cref="P:System.Windows.Rect.Empty" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-237">The default is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-238">配置することができます、<xref:System.Windows.Controls.ContextMenu>を設定して、 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>、 <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>、 <xref:System.Windows.Controls.ContextMenu.Placement%2A>、 <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>、および<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="aa482-238">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="aa482-239">これらのプロパティと同じ働きは、<xref:System.Windows.Controls.Primitives.Popup>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-239">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="aa482-240">詳細については、「[Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aa482-240">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa482-241">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="aa482-241">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-242">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-242">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  
|<span data-ttu-id="aa482-243">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="aa482-243">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa482-244">なし</span><span class="sxs-lookup"><span data-stu-id="aa482-244">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa482-245">次の例は、使用する方法を示します、<xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>プロパティ場所を指定し、<xref:System.Windows.Controls.ContextMenu>が配置されます。</span><span class="sxs-lookup"><span data-stu-id="aa482-245">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> property and specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementRectangleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-246">
            <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-246">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-247">
            <see cref="T:System.Windows.UIElement" /> が開くときに配置の基準となる <see cref="T:System.Windows.Controls.ContextMenu" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-247">Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-248">
            <see cref="T:System.Windows.Controls.ContextMenu" /> が開くときに配置の基準となる要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-248">The element relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span>
          </span>
          <span data-ttu-id="aa482-249">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-249">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-250">ときに、<xref:System.Windows.Controls.ContextMenu>に割り当てられている、<xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>または<xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType>プロパティ、<xref:System.Windows.Controls.ContextMenuService>を所有している、このプロパティの値を変更<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>ときに、<xref:System.Windows.Controls.ContextMenu>が開きます。</span><span class="sxs-lookup"><span data-stu-id="aa482-250">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="aa482-251">別の使用を<xref:System.Windows.UIElement>、設定、<xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="aa482-251">To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa482-252">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="aa482-252">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-253">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-253">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  
|<span data-ttu-id="aa482-254">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="aa482-254">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa482-255">なし</span><span class="sxs-lookup"><span data-stu-id="aa482-255">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa482-256">ターゲットを<xref:System.Windows.Controls.ContextMenu>親となっています。</span><span class="sxs-lookup"><span data-stu-id="aa482-256">The target of a <xref:System.Windows.Controls.ContextMenu> is its parent.</span></span> <span data-ttu-id="aa482-257">次の例を使用する方法を示して、<xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>の親を検索するプロパティ、<xref:System.Windows.Controls.ContextMenu>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-257">The following examples show how to use the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> property to find the parent of a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-csharp[TabControlwithContextMenu#3](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlwithContextMenu/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[TabControlwithContextMenu#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlwithContextMenu/visualbasic/pane1.xaml.vb#3)]  
  
 [!code-csharp[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlContextMenu_snip/CSharp/Pane1.xaml.cs#fromitemcontainer)]
 [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlContextMenu_snip/visualbasic/pane1.xaml.vb#fromitemcontainer)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-258">
            <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-258">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="contextMenu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="aa482-259">指定した項目を表示するために使用する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-259">Element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="aa482-260">指定した項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-260">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aa482-261">指定した要素に指定した項目が表示されるように準備します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-261">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-262">要素の準備をバインドの設定、スタイルの適用を行うことがあり。</span><span class="sxs-lookup"><span data-stu-id="aa482-262">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-263">
            <see cref="T:System.Windows.Controls.ContextMenu" /> が自動的に閉じるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-263">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should close automatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-264">
            <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> プロパティが <see langword="true" /> に変更されるまでメニューを開いたままにする場合は <see langword="false" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-264">
              <see langword="true" /> if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> property changes to <see langword="false" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="aa482-265">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-265">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa482-266">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="aa482-266">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-267">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-267">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  
|<span data-ttu-id="aa482-268">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="aa482-268">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa482-269">なし</span><span class="sxs-lookup"><span data-stu-id="aa482-269">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="aa482-270">次の例では、<xref:System.Windows.Controls.ContextMenu.StaysOpen%2A>プロパティを変更するイベントが発生するまでに、開いたままをコンテキスト メニューを作成、<xref:System.Windows.Controls.ContextMenu.IsOpen%2A>プロパティを`false`します。</span><span class="sxs-lookup"><span data-stu-id="aa482-270">The following example uses the <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> property to make a context menu that will stay open until an event occurs that changes the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property to `false`.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-271">
            <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-271">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-272">対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離を取得または指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-272">Get or sets the vertical distance between the target origin and the popup alignment point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aa482-273">対象の左開始位置からポップアップの配置ポイントまでの縦方向の距離。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-273">The vertical distance between the target origin and the popup alignment point.</span>
          </span>
          <span data-ttu-id="aa482-274">ターゲットの始点とポップアップ配置ポイントについては、次を参照してください。[ポップアップの配置動作](~/docs/framework/wpf/controls/popup-placement-behavior.md)します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-274">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span>
          </span>
          <span data-ttu-id="aa482-275">既定値は 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-275">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aa482-276">配置することができます、<xref:System.Windows.Controls.ContextMenu>を設定して、 <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>、 <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>、 <xref:System.Windows.Controls.ContextMenu.Placement%2A>、 <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>、および<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="aa482-276">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="aa482-277">これらのプロパティと同じ働きは、<xref:System.Windows.Controls.Primitives.Popup>します。</span><span class="sxs-lookup"><span data-stu-id="aa482-277">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="aa482-278">詳細については、「[Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aa482-278">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="aa482-279">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="aa482-279">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="aa482-280">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="aa482-280">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  
|<span data-ttu-id="aa482-281">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="aa482-281">Metadata properties set to `true`</span></span>|<span data-ttu-id="aa482-282">なし</span><span class="sxs-lookup"><span data-stu-id="aa482-282">None</span></span>|  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="aa482-283">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="aa482-283">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or –  
<object VerticalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="aa482-284">XAML 値</span><span class="sxs-lookup"><span data-stu-id="aa482-284">XAML Values</span></span>  
 <span data-ttu-id="aa482-285">*double*</span><span class="sxs-lookup"><span data-stu-id="aa482-285">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="aa482-286">文字列表現を<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="aa482-286">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="aa482-287">これは、[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]測定します。</span><span class="sxs-lookup"><span data-stu-id="aa482-287">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="aa482-288">文字列が必要な 10 進数のポイントを明示的に含まれません。</span><span class="sxs-lookup"><span data-stu-id="aa482-288">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="aa482-289">たとえば、値の`1`は許容されます。</span><span class="sxs-lookup"><span data-stu-id="aa482-289">For instance, a value of `1` is acceptable.</span></span> <span data-ttu-id="aa482-290">同じ<xref:System.Double>プロパティの値のセクションで説明したように範囲の制限が適用されます。</span><span class="sxs-lookup"><span data-stu-id="aa482-290">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="aa482-291">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="aa482-291">*qualifiedDouble*</span></span>  
 <span data-ttu-id="aa482-292">A*二重*値、上記と続く単位の次の宣言文字列のいずれか: `px`、 `in`、 `cm`、`pt`します。</span><span class="sxs-lookup"><span data-stu-id="aa482-292">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="aa482-293">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="aa482-293">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="aa482-294">`in` インチです。1 in 96px = =</span><span class="sxs-lookup"><span data-stu-id="aa482-294">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="aa482-295">`cm` センチメートル; は、します。1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="aa482-295">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="aa482-296">`pt` ポイントです。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="aa482-296">`pt` is points; 1pt==(96/72) px</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aa482-297">多くの場合を double 型の値を Auto に設定することがありますが、<xref:System.Windows.Controls.ContextMenu>オフセットが Auto に設定されている場合は表示されません。</span><span class="sxs-lookup"><span data-stu-id="aa482-297">In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aa482-298">次の例は、使用する方法を示します、 <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> 、プロパティ、<xref:System.Windows.Controls.ContextMenu>ボタンの親に関連の指定した位置を開きます。</span><span class="sxs-lookup"><span data-stu-id="aa482-298">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aa482-299">
            <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aa482-299">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>