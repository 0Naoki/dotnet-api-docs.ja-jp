<Type Name="Button" FullName="System.Windows.Controls.Button">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e26ef8d736010eb85a2596b3b5d7c6aa7fddea97" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Button : System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Button extends System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits ButtonBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Windows::Controls::Primitives::ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d6562-101">
        <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> イベントに反応する Windows ボタン コントロールを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d6562-101">Represents a Windows button control, which reacts to the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6562-102"><xref:System.Windows.Controls.Button>クラスから直接継承、<xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType>クラスです。</span><span class="sxs-lookup"><span data-stu-id="d6562-102">The <xref:System.Windows.Controls.Button> class inherits directly from the <xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="d6562-103">**コンテンツ モデル:** <xref:System.Windows.Controls.Button>は、<xref:System.Windows.Controls.ContentControl>です。</span><span class="sxs-lookup"><span data-stu-id="d6562-103">**Content Model:** <xref:System.Windows.Controls.Button> is a <xref:System.Windows.Controls.ContentControl>.</span></span> <span data-ttu-id="d6562-104">そのコンテンツ プロパティは<xref:System.Windows.Controls.ContentControl.Content%2A>します。</span><span class="sxs-lookup"><span data-stu-id="d6562-104">Its content property is <xref:System.Windows.Controls.ContentControl.Content%2A>.</span></span>  
  
 <span data-ttu-id="d6562-105">処理、 <xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType> 、ユーザーがクリックしたときに応答するイベント、<xref:System.Windows.Controls.Button>です。</span><span class="sxs-lookup"><span data-stu-id="d6562-105">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType> event to respond when the user clicks a <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="d6562-106"><xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A>メソッド マーク、<xref:System.Windows.UIElement.MouseLeftButtonDown>イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="d6562-106">The <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled.</span></span> <span data-ttu-id="d6562-107">応答する、<xref:System.Windows.UIElement.MouseLeftButtonDown>イベント、イベント ハンドラーをアタッチ、<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>イベント、または呼び出し<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>で`handledEventsToo`'éý'`true`です。</span><span class="sxs-lookup"><span data-stu-id="d6562-107">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-button-control"></a><span data-ttu-id="d6562-108">ボタン コントロールのカスタマイズ</span><span class="sxs-lookup"><span data-stu-id="d6562-108">Customizing the Button Control</span></span>  
 <span data-ttu-id="d6562-109">設定を適用する、同じプロパティを複数<xref:System.Windows.Controls.Button>、コントロールを使用して、<xref:System.Windows.FrameworkElement.Style%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d6562-109">To apply the same property settings to multiple <xref:System.Windows.Controls.Button> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="d6562-110">既定値を変更することができます<xref:System.Windows.Controls.ControlTemplate>コントロールの外観を一意にします。</span><span class="sxs-lookup"><span data-stu-id="d6562-110">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="d6562-111">作成の詳細については、<xref:System.Windows.Controls.ControlTemplate>を参照してください[、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)です。</span><span class="sxs-lookup"><span data-stu-id="d6562-111">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="d6562-112">部分とに固有の状態を表示する、<xref:System.Windows.Controls.Button>を参照してください[ボタンのスタイルとテンプレート](~/docs/framework/wpf/controls/button-styles-and-templates.md)です。</span><span class="sxs-lookup"><span data-stu-id="d6562-112">To see the parts and states that are specific to the <xref:System.Windows.Controls.Button>, see [Button Styles and Templates](~/docs/framework/wpf/controls/button-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="d6562-113">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。</span><span class="sxs-lookup"><span data-stu-id="d6562-113">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="d6562-114">プロパティが既定のスタイルが設定されている場合は、アプリケーションでコントロールが表示されたら既定値から、プロパティが変更可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d6562-114">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="d6562-115">既定のスタイルは、いるデスクトップ テーマによっては、アプリケーションが実行されている場合は使用が決定されます。</span><span class="sxs-lookup"><span data-stu-id="d6562-115">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="d6562-116">詳細については、次を参照してください。 [WPF テーマの既定の](http://go.microsoft.com/fwlink/?LinkID=158252)します。</span><span class="sxs-lookup"><span data-stu-id="d6562-116">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6562-117">Visual プロパティの設定はのみに効果が場合、このプロパティは、両方に存在<xref:System.Windows.Controls.Button>コントロールの既定のテンプレートとを使用して設定をします。</span><span class="sxs-lookup"><span data-stu-id="d6562-117">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Button> control's default template and is set by using a .</span></span> <span data-ttu-id="d6562-118">「を変更する、Visual 構造の制御」 セクションで visual のプロパティの一覧を検索できる[、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)です。</span><span class="sxs-lookup"><span data-stu-id="d6562-118">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6562-119">次の例では、次の 3 つの異なる方法でクリックに応答する 3 つのボタンを示します。</span><span class="sxs-lookup"><span data-stu-id="d6562-119">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="d6562-120">ホバー時: 最初のボタンは、ユーザーがボタンの上をマウスを置くとに色を変更します。</span><span class="sxs-lookup"><span data-stu-id="d6562-120">Hover: the first button changes colors when the user hovers with the mouse over the button.</span></span>  
  
-   <span data-ttu-id="d6562-121">キーを押します。 2 番目のボタンは、ボタンの上にマウス ポインターが、マウスを押すことが必要です。</span><span class="sxs-lookup"><span data-stu-id="d6562-121">Press: the second button requires that the mouse be pressed while the mouse pointer is over the button.</span></span>  
  
-   <span data-ttu-id="d6562-122">リリース: マウスが押され、ボタンにリリースするまで、3 番目はボタンの背景色をリセットされませんしません。</span><span class="sxs-lookup"><span data-stu-id="d6562-122">Release: the third does not reset the background color of the buttons until the mouse is pressed and released on the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d6562-123">
            <see cref="T:System.Windows.Controls.Button" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.Button" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancel">
      <MemberSignature Language="C#" Value="public bool IsCancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsCancel" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6562-124">
            <see cref="T:System.Windows.Controls.Button" /> が [キャンセル] ボタンかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-124">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is a Cancel button.</span>
          </span>
          <span data-ttu-id="d6562-125">Esc キーを押すと、[キャンセル] ボタンを有効化することができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-125">A user can activate the Cancel button by pressing the ESC key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6562-126">
            <see cref="T:System.Windows.Controls.Button" /> が [キャンセル] ボタンである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-126">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is a Cancel button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d6562-127">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-127">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6562-128">設定すると、<xref:System.Windows.Controls.Button.IsCancel%2A>するボタンのプロパティ`true`、作成する、<xref:System.Windows.Controls.Button>で登録されている、<xref:System.Windows.Input.AccessKeyManager>です。</span><span class="sxs-lookup"><span data-stu-id="d6562-128">When you set the <xref:System.Windows.Controls.Button.IsCancel%2A> property of a button to `true`, you create a <xref:System.Windows.Controls.Button> that is registered with the <xref:System.Windows.Input.AccessKeyManager>.</span></span> <span data-ttu-id="d6562-129">ユーザーが ESC キーを押したときに、ボタンがアクティブ化します。</span><span class="sxs-lookup"><span data-stu-id="d6562-129">The button is then activated when a user presses the ESC key.</span></span>  
  
<a name="dependencyPropertyInfo_IsCancel"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d6562-130">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="d6562-130">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d6562-131">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="d6562-131">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsCancelProperty>|  
|<span data-ttu-id="d6562-132">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="d6562-132">Metadata properties set to `true`</span></span>|<span data-ttu-id="d6562-133">なし</span><span class="sxs-lookup"><span data-stu-id="d6562-133">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d6562-134">次の例では、このプロパティを使用して、[キャンセル] ボタンを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d6562-134">The following example shows how to use this property to create a Cancel button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCancelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCancelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsCancelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCancelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCancelProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6562-135">
            <see cref="P:System.Windows.Controls.Button.IsCancel" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-135">Identifies the <see cref="P:System.Windows.Controls.Button.IsCancel" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6562-136">
            <see cref="T:System.Windows.Controls.Button" /> ボタンが既定のボタンかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-136">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the default button.</span>
          </span>
          <span data-ttu-id="d6562-137">ユーザーが Enter キーを押すと既定のボタンが呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-137">A user invokes the default button by pressing the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6562-138">
            <see cref="T:System.Windows.Controls.Button" /> が既定のボタンである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-138">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is the default button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d6562-139">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-139">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6562-140">設定すると、<xref:System.Windows.Controls.Button.IsDefault%2A>するボタンのプロパティ`true`、ボタンを登録する、<xref:System.Windows.Input.AccessKeyManager>できるように、ユーザーが ENTER キーを押すと、ボタンを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6562-140">When you set the <xref:System.Windows.Controls.Button.IsDefault%2A> property of a button to `true`, you register the button with the <xref:System.Windows.Input.AccessKeyManager> so that a user can invoke the button by pressing the ENTER key.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefault"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d6562-141">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="d6562-141">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d6562-142">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="d6562-142">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultProperty>|  
|<span data-ttu-id="d6562-143">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="d6562-143">Metadata properties set to `true`</span></span>|<span data-ttu-id="d6562-144">なし</span><span class="sxs-lookup"><span data-stu-id="d6562-144">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d6562-145">次の例では、既定のボタンとしてボタンを指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d6562-145">The following example shows how to specify a button as the default button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaulted">
      <MemberSignature Language="C#" Value="public bool IsDefaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaulted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaulted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6562-146">
            <see cref="T:System.Windows.Controls.Button" /> が、ユーザーが Enter を押すとアクティブ化されるボタンかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-146">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the button that is activated when a user presses ENTER.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6562-147">ユーザーが Enter を押すとボタンがアクティブ化される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-147">
              <see langword="true" /> if the button is activated when the user presses ENTER; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d6562-148">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-148">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6562-149"><xref:System.Windows.Controls.Button.IsDefaulted%2A>プロパティは`true`ときに、<xref:System.Windows.Controls.Button.IsDefault%2A>プロパティに設定されている`true`フォーカスがあるコントロールでは入力として入力は受け付けられません。</span><span class="sxs-lookup"><span data-stu-id="d6562-149">The <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` when the <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true` and the control that has focus does not accept ENTER as input.</span></span>  <span data-ttu-id="d6562-150">たとえば、**実行** ダイアログ ボックス、 **ok**ボタンは既定のボタンです。</span><span class="sxs-lookup"><span data-stu-id="d6562-150">For example, in the **Run** dialog box, the **OK** button is the default button.</span></span> <span data-ttu-id="d6562-151">テキスト ボックスにフォーカスがあるときに<xref:System.Windows.Controls.Button.IsDefaulted%2A>上、 **[ok]**ボタンは`true`のため、ユーザーが ENTER キーを押して、ボタンをアクティブ化します。</span><span class="sxs-lookup"><span data-stu-id="d6562-151">When focus is on the text box, <xref:System.Windows.Controls.Button.IsDefaulted%2A> on the **OK** button is `true` because a user can activate the button by pressing ENTER.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6562-152">既定のボタンにフォーカスが<xref:System.Windows.Controls.Button.IsDefaulted%2A>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="d6562-152">If the default button has focus, <xref:System.Windows.Controls.Button.IsDefaulted%2A> is `false`.</span></span> <span data-ttu-id="d6562-153">これは、ため、<xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A>メソッドは、入力を処理し、必要はありません<xref:System.Windows.Controls.Button.IsDefaulted%2A>に設定する`true`です。</span><span class="sxs-lookup"><span data-stu-id="d6562-153">This is because the <xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A> method handles ENTER, and it is not necessary for <xref:System.Windows.Controls.Button.IsDefaulted%2A> to be set to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefaulted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="d6562-154">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="d6562-154">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d6562-155">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="d6562-155">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultedProperty>|  
|<span data-ttu-id="d6562-156">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="d6562-156">Metadata properties set to `true`</span></span>|<span data-ttu-id="d6562-157">なし</span><span class="sxs-lookup"><span data-stu-id="d6562-157">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d6562-158">次の例を確認する方法を示して かどうか、<xref:System.Windows.Controls.Button.IsDefaulted%2A>プロパティは`true`の既定のボタンです。</span><span class="sxs-lookup"><span data-stu-id="d6562-158">The following example shows how to determine whether the <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` for a default button.</span></span>  
  
 [!code-csharp[ButtonProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml.cs#3)]
 [!code-vb[ButtonProps_snip#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ButtonProps_snip/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6562-159">
            <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-159">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6562-160">
            <see cref="P:System.Windows.Controls.Button.IsDefault" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-160">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefault" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d6562-161">
            <see cref="T:System.Windows.Controls.Button" /> がクリックされたときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-161">Called when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d6562-162">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-162">Creates an appropriate <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d6562-163">このコントロールの <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6562-163">A <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>