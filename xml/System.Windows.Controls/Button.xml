<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Button.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e26ef8d736010eb85a2596b3b5d7c6aa7fddea97.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e26ef8d736010eb85a2596b3b5d7c6aa7fddea97</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Button">
          <source>Represents a Windows button control, which reacts to the <ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /&gt;</ph> イベントに反応する Windows ボタン コントロールを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> class inherits directly from the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>クラスから直接継承、<ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source><bpt id="p1">**</bpt>Content Model:<ept id="p1">**</ept> <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>コンテンツ モデル:<ept id="p1">**</ept> <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>は、<ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>Its content property is <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph>.</source>
          <target state="translated">そのコンテンツ プロパティは<ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType&gt;</ph> event to respond when the user clicks a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">処理、 <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType&gt;</ph> 、ユーザーがクリックしたときに応答するイベント、<ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt;</ph> method marks the <ph id="ph2">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> event as handled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A&gt;</ph>メソッド マーク、<ph id="ph2">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph>イベントを処理します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>To respond to the <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> event, attach an event handler to the <ph id="ph2">&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt;</ph> event, or call <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> with <ph id="ph4">`handledEventsToo`</ph> set to <ph id="ph5">`true`</ph>.</source>
          <target state="translated">応答する、<ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph>イベント、イベント ハンドラーをアタッチ、<ph id="ph2">&lt;xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown&gt;</ph>イベント、または呼び出し<ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph>で<ph id="ph4">`handledEventsToo`</ph>'éý'<ph id="ph5">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>Customizing the Button Control</source>
          <target state="translated">ボタン コントロールのカスタマイズ</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>To apply the same property settings to multiple <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> controls, use the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property.</source>
          <target state="translated">設定を適用する、同じプロパティを複数<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>、コントロールを使用して、<ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>You can modify the default <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to give the control a unique appearance.</source>
          <target state="translated">既定値を変更することができます<ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>コントロールの外観を一意にします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>For more information about creating a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">作成の詳細については、<ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>を参照してください<bpt id="p1">[</bpt>、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>To see the parts and states that are specific to the <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>, see <bpt id="p1">[</bpt>Button Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/button-styles-and-templates.md)</ept>.</source>
          <target state="translated">部分とに固有の状態を表示する、<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>を参照してください<bpt id="p1">[</bpt>ボタンのスタイルとテンプレート<ept id="p1">](~/docs/framework/wpf/controls/button-styles-and-templates.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">プロパティが既定のスタイルが設定されている場合は、アプリケーションでコントロールが表示されたら既定値から、プロパティが変更可能性があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">既定のスタイルは、いるデスクトップ テーマによっては、アプリケーションが実行されている場合は使用が決定されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>WPF テーマの既定の<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>Setting a visual property will only have an effect if that property is both present in <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> control's default template and is set by using a .</source>
          <target state="translated">Visual プロパティの設定はのみに効果が場合、このプロパティは、両方に存在<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>コントロールの既定のテンプレートとを使用して設定をします。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">「を変更する、Visual 構造の制御」 セクションで visual のプロパティの一覧を検索できる<bpt id="p1">[</bpt>、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>The following example shows three buttons that respond to clicks in three different ways.</source>
          <target state="translated">次の例では、次の 3 つの異なる方法でクリックに応答する 3 つのボタンを示します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>Hover: the first button changes colors when the user hovers with the mouse over the button.</source>
          <target state="translated">ホバー時: 最初のボタンは、ユーザーがボタンの上をマウスを置くとに色を変更します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>Press: the second button requires that the mouse be pressed while the mouse pointer is over the button.</source>
          <target state="translated">キーを押します。 2 番目のボタンは、ボタンの上にマウス ポインターが、マウスを押すことが必要です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Button">
          <source>Release: the third does not reset the background color of the buttons until the mouse is pressed and released on the button.</source>
          <target state="translated">リリース: マウスが押され、ボタンにリリースするまで、3 番目はボタンの背景色をリセットされませんしません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Button.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>Gets or sets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> is a Cancel button.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> が [キャンセル] ボタンかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>A user can activate the Cancel button by pressing the ESC key.</source>
          <target state="translated">Esc キーを押すと、[キャンセル] ボタンを有効化することができます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsCancel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> is a Cancel button; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> が [キャンセル] ボタンである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt;</ph> property of a button to <ph id="ph2">`true`</ph>, you create a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> that is registered with the <ph id="ph4">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph>.</source>
          <target state="translated">設定すると、<ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt;</ph>するボタンのプロパティ<ph id="ph2">`true`</ph>、作成する、<ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph>で登録されている、<ph id="ph4">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>The button is then activated when a user presses the ESC key.</source>
          <target state="translated">ユーザーが ESC キーを押したときに、ボタンがアクティブ化します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>Dependency Property Information</source>
          <target state="translated">依存プロパティ情報</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>Identifier field</source>
          <target state="translated">識別子のフィールド</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">メタデータ プロパティに設定します。 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>None</source>
          <target state="translated">なし</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsCancel">
          <source>The following example shows how to use this property to create a Cancel button.</source>
          <target state="translated">次の例では、このプロパティを使用して、[キャンセル] ボタンを作成する方法を示します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Button.IsCancelProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Button.IsCancel" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.Button.IsCancel" /&gt;</ph> 依存関係プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Button.IsDefault">
          <source>Gets or sets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> is the default button.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> ボタンが既定のボタンかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Button.IsDefault">
          <source>A user invokes the default button by pressing the ENTER key.</source>
          <target state="translated">ユーザーが Enter キーを押すと既定のボタンが呼び出されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefault">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> is the default button; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> が既定のボタンである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefault">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefault">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefault%2A&gt;</ph> property of a button to <ph id="ph2">`true`</ph>, you register the button with the <ph id="ph3">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> so that a user can invoke the button by pressing the ENTER key.</source>
          <target state="translated">設定すると、<ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefault%2A&gt;</ph>するボタンのプロパティ<ph id="ph2">`true`</ph>、ボタンを登録する、<ph id="ph3">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph>できるように、ユーザーが ENTER キーを押すと、ボタンを呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefault">
          <source>Dependency Property Information</source>
          <target state="translated">依存プロパティ情報</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefault">
          <source>Identifier field</source>
          <target state="translated">識別子のフィールド</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefault">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">メタデータ プロパティに設定します。 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefault">
          <source>None</source>
          <target state="translated">なし</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefault">
          <source>The following example shows how to specify a button as the default button.</source>
          <target state="translated">次の例では、既定のボタンとしてボタンを指定する方法を示します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> is the button that is activated when a user presses ENTER.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> が、ユーザーが Enter を押すとアクティブ化されるボタンかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the button is activated when the user presses ENTER; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ユーザーが Enter を押すとボタンがアクティブ化される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph> property is <ph id="ph2">`true`</ph> when the <ph id="ph3">&lt;xref:System.Windows.Controls.Button.IsDefault%2A&gt;</ph> property is set to <ph id="ph4">`true`</ph> and the control that has focus does not accept ENTER as input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>ときに、<ph id="ph3">&lt;xref:System.Windows.Controls.Button.IsDefault%2A&gt;</ph>プロパティに設定されている<ph id="ph4">`true`</ph>フォーカスがあるコントロールでは入力として入力は受け付けられません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>For example, in the <bpt id="p1">**</bpt>Run<ept id="p1">**</ept> dialog box, the <bpt id="p2">**</bpt>OK<ept id="p2">**</ept> button is the default button.</source>
          <target state="translated">たとえば、<bpt id="p1">**</bpt>実行<ept id="p1">**</ept> ダイアログ ボックス、 <bpt id="p2">**</bpt>ok<ept id="p2">**</ept>ボタンは既定のボタンです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>When focus is on the text box, <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph> on the <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> button is <ph id="ph2">`true`</ph> because a user can activate the button by pressing ENTER.</source>
          <target state="translated">テキスト ボックスにフォーカスがあるときに<ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph>上、 <bpt id="p1">**</bpt>[ok]<ept id="p1">**</ept>ボタンは<ph id="ph2">`true`</ph>のため、ユーザーが ENTER キーを押して、ボタンをアクティブ化します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>If the default button has focus, <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">既定のボタンにフォーカスが<ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph>は<ph id="ph2">`false`</ph>します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>This is because the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A&gt;</ph> method handles ENTER, and it is not necessary for <ph id="ph2">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph> to be set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">これは、ため、<ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A&gt;</ph>メソッドは、入力を処理し、必要はありません<ph id="ph2">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph>に設定する<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>Dependency Property Information</source>
          <target state="translated">依存プロパティ情報</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>Identifier field</source>
          <target state="translated">識別子のフィールド</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">メタデータ プロパティに設定します。 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>None</source>
          <target state="translated">なし</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Button.IsDefaulted">
          <source>The following example shows how to determine whether the <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph> property is <ph id="ph2">`true`</ph> for a default button.</source>
          <target state="translated">次の例を確認する方法を示して かどうか、<ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefaulted%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>の既定のボタンです。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Button.IsDefaultedProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Button.IsDefaulted" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.Button.IsDefaulted" /&gt;</ph> 依存関係プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Button.IsDefaultProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Button.IsDefault" /&gt;</ph> dependency property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Controls.Button.IsDefault" /&gt;</ph> 依存関係プロパティを識別します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Button.OnClick">
          <source>Called when a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> is clicked.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.Button" /&gt;</ph> がクリックされたときに呼び出されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Button.OnCreateAutomationPeer">
          <source>Creates an appropriate <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /&gt;</ph> for this control as part of the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure.</source>
          <target state="translated"><ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> インフラストラクチャの一部として、このコントロールに適切な <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Button.OnCreateAutomationPeer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /&gt;</ph> for this control.</source>
          <target state="translated">このコントロールの <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>