<Type Name="DatePicker" FullName="System.Windows.Controls.DatePicker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a50257ece4e8a002ab87b0134607f51df713d9d7" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52738466" /></Metadata><TypeSignature Language="C#" Value="public class DatePicker : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DatePicker extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DatePicker" />
  <TypeSignature Language="VB.NET" Value="Public Class DatePicker&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class DatePicker : System::Windows::Controls::Control" />
  <TypeSignature Language="F#" Value="type DatePicker = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_Root", Type=typeof(System.Windows.Controls.Grid))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_TextBox", Type=typeof(System.Windows.Controls.Primitives.DatePickerTextBox))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_Button", Type=typeof(System.Windows.Controls.Button))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザーが日付を選択できるコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.DatePicker>コントロールによりユーザーはテキスト フィールドにいずれかを入力するか、ドロップダウンを使用して日付を選択する<xref:System.Windows.Controls.Calendar>コントロール。  
  
 多くを<xref:System.Windows.Controls.DatePicker>コントロールのプロパティは、その組み込みを管理するため<xref:System.Windows.Controls.Calendar>と同等のプロパティとまったく同様に関数<xref:System.Windows.Controls.Calendar>します。 具体的には、 <xref:System.Windows.Controls.DatePicker.IsTodayHighlighted%2A?displayProperty=nameWithType>、 <xref:System.Windows.Controls.DatePicker.FirstDayOfWeek%2A?displayProperty=nameWithType>、 <xref:System.Windows.Controls.DatePicker.BlackoutDates%2A?displayProperty=nameWithType>、 <xref:System.Windows.Controls.DatePicker.DisplayDateStart%2A?displayProperty=nameWithType>、 <xref:System.Windows.Controls.DatePicker.DisplayDateEnd%2A?displayProperty=nameWithType>、 <xref:System.Windows.Controls.DatePicker.DisplayDate%2A?displayProperty=nameWithType>、および<xref:System.Windows.Controls.DatePicker.SelectedDate%2A?displayProperty=nameWithType>プロパティ関数と同様に、<xref:System.Windows.Controls.Calendar>の対応します。  詳細については、「 <xref:System.Windows.Controls.Calendar> 」を参照してください。  
  
 ユーザーが日付を入力設定テキスト フィールドに直接、<xref:System.Windows.Controls.DatePicker.Text%2A>プロパティ。 場合、<xref:System.Windows.Controls.DatePicker>有効な日付を入力した文字列を変換することはできません、<xref:System.Windows.Controls.DatePicker.DateValidationError>イベントが発生します。 既定では、これにより、イベント ハンドラーが例外<xref:System.Windows.Controls.DatePicker.DateValidationError>を設定できます、<xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A>プロパティを`false`と例外が発生しているようにします。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.DatePicker>はグレゴリオ暦だけをサポートしています。  
  
## <a name="customizing-the-datepicker-control"></a>DatePicker コントロールをカスタマイズします。  
 複数に同じプロパティの設定を適用する<xref:System.Windows.Controls.DatePicker>コントロールを使用して、<xref:System.Windows.FrameworkElement.Style%2A>プロパティ。 既定値を変更する<xref:System.Windows.Controls.ControlTemplate>固有の外観を制御します。 作成の詳細については、<xref:System.Windows.Controls.ControlTemplate>を参照してください[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。 パーツとに固有の状態を表示する、<xref:System.Windows.Controls.DatePicker>を参照してください[DatePicker のスタイルとテンプレート](~/docs/framework/wpf/controls/datepicker-styles-and-templates.md)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する可能性があります。 プロパティが既定のスタイルによって設定されている場合は、アプリケーションでコントロールが表示されたら、既定値から、プロパティが変更可能性があります。 デスクトップ テーマでは、アプリケーションが実行されている場合は、使用、既定のスタイルが決定されます。  詳細については、次を参照してください。[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  ビジュアルのプロパティの設定はのみ、効果がそのプロパティが両方のボタン コントロールの既定のテンプレート内に存在しを使用して設定した場合、します。 "を変更するビジュアル構造体のコントロールのセクションではビジュアルのプロパティの一覧を検索できます[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。  
  
<a name="xamlObjectElementUsage_DatePicker"></a>   
## <a name="xaml-object-element-usage"></a>XAML オブジェクト要素の使用方法  
  
```  
<DatePicker .../>  
```  
  
   
  
## Examples  
 次の図は、<xref:System.Windows.Controls.DatePicker>します。  
  
 ![DatePicker コントロール](~/add/media/ndp-datepicker.png "DatePicker コントロール")  
DatePicker コントロール  
  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>前の図に示すようにします。 <xref:System.Windows.Controls.DatePicker>は次の処理します。  
  
-   曜日と月の名前を省略しない形式の日付を表示します。  
  
-   2009 年の日付のみを表示するドロップダウン カレンダーを制限します。  
  
-   月曜日を週の最初の曜日として表示されます。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatePicker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DatePicker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Controls.DatePicker" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackoutDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.BlackoutDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlackoutDates As CalendarBlackoutDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarBlackoutDatesCollection ^ BlackoutDates { System::Windows::Controls::CalendarBlackoutDatesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BlackoutDates : System.Windows.Controls.CalendarBlackoutDatesCollection" Usage="System.Windows.Controls.DatePicker.BlackoutDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarBlackoutDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または選択不可としてマークされている日付のコレクションを設定します。</summary>
        <value>選択できない日付のコレクション。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコレクション内の日付は、ドロップダウン カレンダーで無効として表示されます。  ユーザーが選択可能でない日付を入力する場合、<xref:System.Windows.Controls.DatePicker.DateValidationError>イベントが発生します。  
  
 すべて過去の日付選択可能な使用することができます、<xref:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast%2A>このプロパティによって返されるコレクションによって提供されるメソッド。  
  
 既に選択されているときに、このコレクションに日付を追加または指定した範囲外の日付を追加する<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>と<xref:System.Windows.Controls.DatePicker.DisplayDateEnd%2A>により、<xref:System.ArgumentOutOfRangeException>します。  
  
<a name="xamlPropertyElementUsage_BlackoutDates"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.BlackoutDates>  
    oneOrMoreCalendarDateRanges  
  </object.BlackoutDates>  
</object>  
```  
  
<a name="xamlValues_BlackoutDates"></a>   
## <a name="xaml-values"></a>XAML 値  
 *oneOrMoreCalendarDateRanges*  
 型の 1 つまたは複数のオブジェクト要素<xref:System.Windows.Controls.CalendarDateRange>します。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>を 2009 年 8 月の日付を表示および各土曜日と日曜日が選択可能ではないことを指定します。  
  
 [!code-csharp[DatePickerSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[DatePickerSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[DatePickerSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#2)]  
  
 <xref:System.Windows.Controls.DatePicker>ハンドル、<xref:System.Windows.Controls.DatePicker.DateValidationError>イベントは、次のコードに示すようにします。 ユーザーが選択可能でない日付を入力した場合は、メッセージを表示します。 有効な日付でないテキストを入力すると、例外がスローされます。  
  
 [!code-csharp[DatePickerSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[DatePickerSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#3)]  
  
 前の例では、次の図のような出力を生成します。  
  
 ![選択可能な日付を含む DatePicker](~/add/media/ndp-datepickblackout.png "ある選択可能な日付を含む DatePicker")  
選択できない日付を含む DatePicker  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler CalendarClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler CalendarClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.CalendarClosed" />
      <MemberSignature Language="VB.NET" Value="Public Event CalendarClosed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ CalendarClosed;" />
      <MemberSignature Language="F#" Value="member this.CalendarClosed : System.Windows.RoutedEventHandler " Usage="member this.CalendarClosed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、ドロップダウン リスト<see cref="T:System.Windows.Controls.Calendar" />が閉じられました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarClosed"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker CalendarClosed="eventhandler"/>  
```  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>をユーザーに詳細な手順を説明します。  ユーザーが開くか閉じる、<xref:System.Windows.Controls.Calendar>指示を更新します。  
  
 [!code-xaml[DatePickerSnippets#7](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#7)]  
  
 [!code-csharp[DatePickerSnippets#8](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#8)]
 [!code-vb[DatePickerSnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarOpened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler CalendarOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler CalendarOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.CalendarOpened" />
      <MemberSignature Language="VB.NET" Value="Public Event CalendarOpened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ CalendarOpened;" />
      <MemberSignature Language="F#" Value="member this.CalendarOpened : System.Windows.RoutedEventHandler " Usage="member this.CalendarOpened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、ドロップダウン リスト<see cref="T:System.Windows.Controls.Calendar" />が開かれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarOpened"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker CalendarOpened="eventhandler"/>  
```  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>をユーザーに詳細な手順を説明します。  ユーザーが開くか閉じる、<xref:System.Windows.Controls.Calendar>指示を更新します。  
  
 [!code-xaml[DatePickerSnippets#7](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#7)]  
  
 [!code-csharp[DatePickerSnippets#8](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#8)]
 [!code-vb[DatePickerSnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.CalendarStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.DatePicker.CalendarStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカレンダーを表示するときに使用するスタイルを設定します。</summary>
        <value>カレンダーを表示するときに使用するスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Windows.Controls.DatePicker.CalendarStyle%2A>ドロップダウン カレンダーの外観を指定するプロパティ。  
  
<a name="dependencyPropertyInfo_CalendarStyle"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.CalendarStyleProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
<a name="xamlAttributeUsage_CalendarStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker CalendarStyle="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlValues_CalendarStyle"></a>   
## <a name="xaml-values"></a>XAML 値  
 *resourceExtension*  
 次のいずれか:`StaticResource`または`DynamicResource`します。 詳細については、「[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)」を参照してください。  
  
 *styleResourceKey*  
 要求されているテンプレートを識別するキー。 このキーは、既存のリソースで、<xref:System.Windows.ResourceDictionary>します。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Style>の<xref:System.Windows.Controls.Calendar>にスタイルを割り当てると、<xref:System.Windows.Controls.DatePicker.CalendarStyle%2A>プロパティ。  
  
 [!code-xaml[DatePickerSnippets#6](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.CalendarStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.CalendarStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateValidationError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; DateValidationError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; DateValidationError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.DateValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Event DateValidationError As EventHandler(Of DatePickerDateValidationErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::DatePickerDateValidationErrorEventArgs ^&gt; ^ DateValidationError;" />
      <MemberSignature Language="F#" Value="member this.DateValidationError : EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; " Usage="member this.DateValidationError : System.EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに<see cref="P:System.Windows.Controls.DatePicker.Text" />日付として解釈できないか、日付を選択できない場合の値に設定されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 後に、<xref:System.Windows.Controls.DatePicker.DateValidationError>設定すると、イベントが発生、<xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A?displayProperty=nameWithType>プロパティを`true`、次の例外のいずれかが発生します。  
  
|例外の種類|条件|  
|--------------------|---------------|  
|<xref:System.FormatException>|有効な日付を入力したテキストを解析できないし、例外が抑制されません。|  
|<xref:System.ArgumentOutOfRangeException>|入力したテキストを選択できない日付を解析します。|  
  
<a name="xamlAttributeUsage_DateValidationError"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker DateValidationError="eventhandler"/>  
```  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>を 2009 年 8 月の日付を表示および各土曜日と日曜日が選択可能ではないことを指定します。  
  
 [!code-csharp[DatePickerSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[DatePickerSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[DatePickerSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#2)]  
  
 <xref:System.Windows.Controls.DatePicker>ハンドル、<xref:System.Windows.Controls.DatePicker.DateValidationError>イベントは、次のコードに示すようにします。 ユーザーが選択可能でない日付を入力した場合は、メッセージを表示します。 有効な日付でないテキストを入力すると、例外がスローされます。  
  
 [!code-csharp[DatePickerSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[DatePickerSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDate">
      <MemberSignature Language="C#" Value="public DateTime DisplayDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DisplayDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.DisplayDate" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DisplayDate { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDate : DateTime with get, set" Usage="System.Windows.Controls.DatePicker.DisplayDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示する日付を設定します。</summary>
        <value>表示する日付。 既定値は <see cref="P:System.DateTime.Today" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに影響する、<xref:System.Windows.Controls.Calendar>の<xref:System.Windows.Controls.DatePicker>します。  詳細については、<xref:System.Windows.Controls.Calendar.DisplayDate%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_DisplayDate"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.DisplayDateProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 このプロパティにより、開発者は場合に表示する日付を指定する<xref:System.Windows.Controls.DatePicker.SelectedDate%2A>は`null`します。  
  
<a name="xamlAttributeUsage_DisplayDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker DisplayDate="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDate"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)トピック。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>は初期化のカレンダーを開いていると、2009 年 7 月 7 日を表示します。  
  
 [!code-xaml[DatePickerSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された日付が、<see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> で定義された範囲内にありません。  および <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> を参照してください。</exception>
        <altmember cref="P:System.Windows.Controls.Calendar.DisplayDate" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEnd">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateEnd As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateEnd { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateEnd : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.DatePicker.DisplayDateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示する最後の日付を設定します。</summary>
        <value>最後の日付を表示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに影響する、<xref:System.Windows.Controls.Calendar>の<xref:System.Windows.Controls.DatePicker>します。  詳細については、<xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_DisplayDateEnd"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.DisplayDateEndProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateEnd"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker DisplayDateEnd="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateEnd"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)トピック。  
  
   
  
## Examples  
 次の例では、作成、 <xref:System.Windows.Controls.DatePicker> 2009 年の日付のみを表示するドロップダウン カレンダーを制限します。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateEndProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateEndProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateEndProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateEndProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.DisplayDateEndProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.DisplayDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.DisplayDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStart">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateStart As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateStart { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateStart : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.DatePicker.DisplayDateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示する最初の日付を設定します。</summary>
        <value>最初の日付を表示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに影響する、<xref:System.Windows.Controls.Calendar>の<xref:System.Windows.Controls.DatePicker>します。  詳細については、<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_DisplayDateStart"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.DisplayDateStartProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateStart"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker DisplayDateStart="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateStart"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)トピック。  
  
   
  
## Examples  
 次の例では、作成、 <xref:System.Windows.Controls.DatePicker> 2009 年の日付のみを表示するドロップダウン カレンダーを制限します。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Calendar.DisplayDateStart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateStartProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateStartProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateStartProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateStartProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.DisplayDateStartProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Windows.Controls.DatePicker.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または週の始まりと見なされる日を設定します。</summary>
        <value>A<see cref="T:System.DayOfWeek" />週の始まりを表します。 既定値は、<see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />は、現在のカルチャによって決まります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに影響する、<xref:System.Windows.Controls.Calendar>の<xref:System.Windows.Controls.DatePicker>します。  詳細については、<xref:System.Windows.Controls.Calendar.FirstDayOfWeek%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_FirstDayOfWeek"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
<a name="xamlAttributeUsage_FirstDayOfWeek"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<DatePicker **FirstDayOfWeek**="<xref:System.DayOfWeek>"/>  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>月曜が週の最初の日を表示します。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FirstDayOfWeekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FirstDayOfWeekProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FirstDayOfWeekProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FirstDayOfWeekProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FirstDayOfWeekProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.FirstDayOfWeekProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal override bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.Controls.DatePicker.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.DatePicker" /> にフォーカスがあるかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Windows.Controls.DatePicker" /> にフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.IsDropDownOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDropDownOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDropDownOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDropDownOpen : bool with get, set" Usage="System.Windows.Controls.DatePicker.IsDropDownOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、ドロップダウン リスト<see cref="T:System.Windows.Controls.Calendar" />がオープンかクローズします。</summary>
        <value><see langword="true" /> 場合、<see cref="T:System.Windows.Controls.Calendar" />が開きます。 それ以外<see langword="false" />します。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.IsDropDownOpenProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 このプロパティの設定、<xref:System.Windows.Controls.Calendar>ドロップダウンを開くまたは閉じる。  
  
<a name="xamlAttributeUsage_IsDropDownOpen"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker IsDropDownOpen="bool"/>  
```  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>を開いてその暦を使用して初期化し、2009 年 7 月 7 日を表示します。  
  
 [!code-xaml[DatePickerSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDropDownOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDropDownOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDropDownOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.IsDropDownOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlighted">
      <MemberSignature Language="C#" Value="public bool IsTodayHighlighted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTodayHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTodayHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTodayHighlighted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTodayHighlighted : bool with get, set" Usage="System.Windows.Controls.DatePicker.IsTodayHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在の日付が強調表示するかどうかを示す値を設定します。</summary>
        <value><see langword="true" /> 場合は、現在の日付が強調表示されます。それ以外の場合、<see langword="false" />します。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに影響する、<xref:System.Windows.Controls.Calendar>の<xref:System.Windows.Controls.DatePicker>します。  詳細については、<xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_IsTodayHighlighted"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
<a name="xamlAttributeUsage_IsTodayHighlighted"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker IsTodayHighlighted="bool"/>  
```  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>現在の日付を強調表示しません。  
  
 [!code-xaml[DatePickerSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" />
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTodayHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTodayHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTodayHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTodayHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTodayHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.IsTodayHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="datePicker.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビジュアル ツリーを構築、<see cref="T:System.Windows.Controls.DatePicker" />新しいテンプレートを適用した場合を制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション コードや、レイアウト パスの再構築などの内部プロセスが呼び出すたびに、このメソッドが呼び出され、<xref:System.Windows.FrameworkElement.ApplyTemplate%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalendarClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnCalendarClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCalendarClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCalendarClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCalendarClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCalendarClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnCalendarClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="datePicker.OnCalendarClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>発生させる、<see cref="E:System.Windows.Controls.DatePicker.CalendarClosed" />ルーティング イベント。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCalendarOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnCalendarOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCalendarOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCalendarOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCalendarOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCalendarOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnCalendarOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="datePicker.OnCalendarOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>発生させる、<see cref="E:System.Windows.Controls.DatePicker.CalendarOpened" />ルーティング イベント。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="datePicker.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します、<see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />オートメーション インフラストラクチャで使用します。</summary>
        <returns>A<see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" />の<see cref="T:System.Windows.Controls.DatePicker" />オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、新しい作成<xref:System.Windows.Automation.Peers.DatePickerAutomationPeer>コントロール インスタンスの場合は、1 つのインスタンスが作成されていない。 それ以外を返します、<xref:System.Windows.Automation.Peers.DatePickerAutomationPeer>以前に作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDateValidationError">
      <MemberSignature Language="C#" Value="protected virtual void OnDateValidationError (System.Windows.Controls.DatePickerDateValidationErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDateValidationError(class System.Windows.Controls.DatePickerDateValidationErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDateValidationError (e As DatePickerDateValidationErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDateValidationError(System::Windows::Controls::DatePickerDateValidationErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDateValidationError : System.Windows.Controls.DatePickerDateValidationErrorEventArgs -&gt; unit&#xA;override this.OnDateValidationError : System.Windows.Controls.DatePickerDateValidationErrorEventArgs -&gt; unit" Usage="datePicker.OnDateValidationError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />。</param>
        <summary><see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedDateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedDateChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedDateChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedDateChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedDateChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedDateChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit&#xA;override this.OnSelectedDateChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="datePicker.OnSelectedDateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>発生させる、<see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" />ルーティング イベント。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールで発生し、<xref:System.Windows.Controls.DatePicker.SelectedDateChanged>を呼び出してイベント<xref:System.Windows.UIElement.RaiseEvent%2A>します。 詳細については、次を参照してください。[ルーティング イベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドするときに<see cref="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para></block>
      </Docs>
    </Member>
    <Member MemberName="SelectedDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; SelectedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SelectedDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.SelectedDate" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedDate As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; SelectedDate { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDate : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.DatePicker.SelectedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在選択されている日付を設定します。</summary>
        <value>現在選択されている日付。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに影響する、<xref:System.Windows.Controls.Calendar>の<xref:System.Windows.Controls.DatePicker>します。  詳細については、<xref:System.Windows.Controls.Calendar.SelectedDate%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_SelectedDate"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.SelectedDateProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_SelectedDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker SelectedDate="dateTimeString"/>  
```  
  
<a name="xamlValues_SelectedDate"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)トピック。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>日が 2009 年 8 月 10日を選択します。  例にもバインド、<xref:System.Windows.Controls.DatePicker.Text%2A?displayProperty=nameWithType>プロパティを<xref:System.Windows.Controls.TextBlock>します。  
  
 [!code-xaml[DatePickerSnippets#5](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">定義された範囲で指定した日付でない<see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />と<see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />、または指定した日付が、<see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" />コレクション。</exception>
        <altmember cref="P:System.Windows.Controls.Calendar.SelectedDate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedDateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.SelectedDateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedDateChanged As EventHandler(Of SelectionChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::SelectionChangedEventArgs ^&gt; ^ SelectedDateChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedDateChanged : EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " Usage="member this.SelectedDateChanged : System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、<see cref="P:System.Windows.Controls.DatePicker.SelectedDate" />プロパティを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectedDatesChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker SelectedDateChanged="eventhandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedDateChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedDateChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.SelectedDateChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectedDateChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDateChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.DatePicker.SelectedDateChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> ルーティング イベントを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DatePickerFormat SelectedDateFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DatePickerFormat SelectedDateFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.SelectedDateFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedDateFormat As DatePickerFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DatePickerFormat SelectedDateFormat { System::Windows::Controls::DatePickerFormat get(); void set(System::Windows::Controls::DatePickerFormat value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDateFormat : System.Windows.Controls.DatePickerFormat with get, set" Usage="System.Windows.Controls.DatePicker.SelectedDateFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DatePickerFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または選択した日付を表示するために使用される形式を設定します。</summary>
        <value>選択した日付を表示するために使用される形式。 既定値は <see cref="F:System.Windows.Controls.DatePickerFormat.Long" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectedDateFormat"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.SelectedDateFormatProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
<a name="xamlAttributeUsage_SelectedDateFormat"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<DatePicker **SelectedDateFormat**="<xref:System.Windows.Controls.DatePickerFormat>"/>  
  
   
  
## Examples  
 次の例を作成する<xref:System.Windows.Controls.DatePicker>曜日と月の名前を省略しない形式の日付を表示します。  
  
 [!code-csharp[DatePickerSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[DatePickerSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した形式が無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedDateFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDateFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.SelectedDateFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.SelectedDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.SelectedDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.DatePicker.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>によって表示されるテキストを取得、 <see cref="T:System.Windows.Controls.DatePicker" />、または選択した日付を設定します。</summary>
        <value>によって表示されるテキスト、<see cref="T:System.Windows.Controls.DatePicker" />します。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーが設定できる、<xref:System.Windows.Controls.DatePicker.SelectedDate%2A>の<xref:System.Windows.Controls.DatePicker>でそのテキスト ボックスに入力した日付。 <xref:System.Windows.Controls.DatePicker>日付としてこのプロパティに入力した任意の文字列の解析を試みます。 中に、<xref:System.Windows.Controls.DatePicker.Text%2A>によって解析できる任意の文字列にプロパティを設定することができます、<xref:System.DateTime.Parse%2A>メソッドの日付の値に返される文字列の形式が依存、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>プロパティ。 つまり、<xref:System.Windows.Controls.DatePicker>とは異なる、ユーザーが入力した文字列を表示することがあります。  
  
 場合<xref:System.Windows.Controls.DatePicker.Text%2A>の日付を選択可能であり、有効に設定されている、<xref:System.Windows.Controls.DatePicker.DateValidationError>イベントが発生します。 処理する場合、<xref:System.Windows.Controls.DatePicker.DateValidationError>イベントとセット、<xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A>プロパティを`true`、<xref:System.FormatException>または<xref:System.ArgumentOutOfRangeException>が発生します。  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.DatePicker.TextProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
<a name="xamlAttributeUsage_Text"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<DatePicker Text="dateTimeString"/>  
```  
  
<a name="xamlValues_Text"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)トピック。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.DatePicker>日が 2009 年 8 月 10日を選択します。  例にもバインド、<xref:System.Windows.Controls.DatePicker.Text%2A?displayProperty=nameWithType>プロパティを<xref:System.Windows.Controls.TextBlock>します。 <xref:System.Windows.Controls.DatePicker.SelectedDateFormat%2A>プロパティに設定されて<xref:System.Windows.Controls.DatePickerFormat.Long>、<xref:System.Windows.Controls.DatePicker>と<xref:System.Windows.Controls.TextBlock>曜日の日付を使用して、表示の表記を使用して、月名の場合でも、ユーザーが日付の短い形式を入力します。  
  
 [!code-xaml[DatePickerSnippets#5](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.DatePicker.DateValidationError" />
        <altmember cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.DatePicker.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Controls.DatePicker.Text" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="datePicker.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択した日付のテキスト表現を提供します。</summary>
        <returns>選択した日付または空の文字列のテキスト表現場合<see cref="P:System.Windows.Controls.DatePicker.SelectedDate" />は<see langword="null" />します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>