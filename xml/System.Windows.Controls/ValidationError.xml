<Type Name="ValidationError" FullName="System.Windows.Controls.ValidationError">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b2996cf2a2e1602f33bcff31c18b03120fa756a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37579672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ValidationError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationError extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationError" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationError" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationError" />
  <TypeSignature Language="F#" Value="type ValidationError = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Controls.ValidationRule" /> が検証エラーを報告したときにバインディング エンジンによって作成されるか、<see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> メソッドで明示的に作成された検証エラーを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディング モデルで検証規則を関連付けることができます、<xref:System.Windows.Data.Binding>オブジェクト。 コンバーターが呼び出される前に、ターゲットからソース値の転送中に検証が行われます。 次に、検証プロセスについて説明します。  
  
1.  値は、ソース プロパティに、ターゲット プロパティから転送されているが、ときに、データ バインディング エンジン最初に削除<xref:System.Windows.Controls.ValidationError>に追加されている可能性があります、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされた要素のプロパティをアタッチします。 そのため、任意のカスタム検証規則が定義されているかどうかがチェックされます<xref:System.Windows.Data.Binding>が呼び出す場合、<xref:System.Windows.Controls.ValidationRule.Validate%2A>各<xref:System.Windows.Controls.ValidationRule>までが失敗したのいずれかまたはまでそれらのすべてに合格します。  
  
2.  合格しないカスタム ルールがある場合、バインディング エンジンは、作成、<xref:System.Windows.Controls.ValidationError>オブジェクトし、それを追加、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされた要素のコレクション。 ときに<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>空ではない、<xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType>要素の添付プロパティに設定されて`true`します。 また場合、<xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>のプロパティ、<xref:System.Windows.Data.Binding>に設定されている`true`、バインディング エンジンが発生し、<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>要素にイベントをアタッチします。  
  
3.  このオプションを場合は、すべてのルールを渡すと、1 つが存在する場合にし、バインディング エンジンは、コンバーターを呼び出します。  
  
4.  コンバーターが成功した場合、バインディング エンジンは、ソース プロパティの set アクセス操作子を呼び出します。  
  
5.  バインディングがある場合、<xref:System.Windows.Controls.ExceptionValidationRule>関連付けられていると、バインディング エンジンがあるかどうかをチェック 3 または 4 のステップ中に例外がスローされた、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>します。 使用することができます、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>例外を処理するためのカスタム ハンドラーを提供するコールバック。 場合、<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>がで指定されていない、 <xref:System.Windows.Data.Binding>、バインディング エンジンが作成されます、<xref:System.Windows.Controls.ValidationError>例外に追加します、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>バインドされた要素のコレクション。  
  
 どちらの方向 (ターゲットからソースまたはターゲットをソース) に有効な値の転送がクリアされます、<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>添付プロパティ。  
  
   
  
## Examples  
 次の例は、スタイルのトリガーを作成する、<xref:System.Windows.Controls.ToolTip>検証エラー メッセージを報告します。 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>添付プロパティのコレクションを返します<xref:System.Windows.Controls.ValidationError>オブジェクトがバインドされている要素。  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ValidationError" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleInError As ValidationRule, bindingInError As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationError : System.Windows.Controls.ValidationRule * obj -&gt; System.Windows.Controls.ValidationError" Usage="new System.Windows.Controls.ValidationError (ruleInError, bindingInError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ruleInError">検証エラーを検出した規則。</param>
        <param name="bindingInError">検証エラーを含む <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト。</param>
        <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Controls.ValidationError" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError, System::Object ^ errorContent, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationError : System.Windows.Controls.ValidationRule * obj * obj * Exception -&gt; System.Windows.Controls.ValidationError" Usage="new System.Windows.Controls.ValidationError (ruleInError, bindingInError, errorContent, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
        <Parameter Name="errorContent" Type="System.Object" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ruleInError">検証エラーを検出した規則。</param>
        <param name="bindingInError">検証エラーを含む <see cref="T:System.Windows.Data.BindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト。</param>
        <param name="errorContent">エラーに関する情報。</param>
        <param name="exception">検証エラーの原因となった例外。 このパラメーターは省略可能で、<see langword="null" /> に設定できます。</param>
        <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Controls.ValidationError" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingInError">
      <MemberSignature Language="C#" Value="public object BindingInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BindingInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.BindingInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingInError As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BindingInError { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingInError : obj" Usage="System.Windows.Controls.ValidationError.BindingInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Data.BindingExpression" /> の <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトを取得します。 オブジェクトは明示的に無効とマークされるか、失敗した検証規則が含まれます。</summary>
        <value>この <see cref="T:System.Windows.Data.BindingExpression" /> の <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクトまたは <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorContent : obj with get, set" Usage="System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エラーを説明する文字列など、この <see cref="T:System.Windows.Controls.ValidationError" /> に追加のコンテキストを提供するオブジェクトを取得または設定します。</summary>
        <value>この <see cref="T:System.Windows.Controls.ValidationError" /> に追加のコンテキストを提供するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ErrorContent"></a>   
## <a name="xaml-text-usage"></a>XAML テキストの使用状況  
 例については、例を参照してください。  
  
   
  
## Examples  
 次の例は、スタイルのトリガーを作成する、<xref:System.Windows.Controls.ToolTip>検証エラー メッセージを報告します。 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>添付プロパティのコレクションを返します<xref:System.Windows.Controls.ValidationError>オブジェクトがバインドされている要素。  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Windows.Controls.ValidationError.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エラーが例外の結果である場合に、この <see cref="T:System.Exception" /> の原因となった <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトを取得または設定します。</summary>
        <value>エラーが例外の結果である場合の <see cref="T:System.Exception" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleInError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationRule RuleInError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationRule RuleInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.RuleInError" />
      <MemberSignature Language="VB.NET" Value="Public Property RuleInError As ValidationRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationRule ^ RuleInError { System::Windows::Controls::ValidationRule ^ get(); void set(System::Windows::Controls::ValidationRule ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RuleInError : System.Windows.Controls.ValidationRule with get, set" Usage="System.Windows.Controls.ValidationError.RuleInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エラーが検証規則の結果である場合に、この <see cref="T:System.Windows.Controls.ValidationRule" /> の原因となった <see cref="T:System.Windows.Controls.ValidationError" /> オブジェクトを取得または設定します。</summary>
        <value>エラーが検証規則の結果である場合の <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>