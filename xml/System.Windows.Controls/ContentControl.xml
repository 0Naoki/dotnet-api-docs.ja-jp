<Type Name="ContentControl" FullName="System.Windows.Controls.ContentControl">
  <TypeSignature Language="C#" Value="public class ContentControl : System.Windows.Controls.Control, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentControl extends System.Windows.Controls.Control implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContentControl" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentControl&#xA;Inherits Control&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentControl : System::Windows::Controls::Control, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Content")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Content")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c81e0-101">任意の種類のコンテンツが 1 つあるコントロールを表します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-101">Represents a control with a single piece of content of any type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c81e0-102"><xref:System.Windows.Controls.ContentControl>共通言語ランタイム オブジェクトの任意の型を含めることができます (文字列など、または<xref:System.DateTime>オブジェクト)、または<xref:System.Windows.UIElement>オブジェクト (など、<xref:System.Windows.Shapes.Rectangle>または<xref:System.Windows.Controls.Panel>)。</span><span class="sxs-lookup"><span data-stu-id="c81e0-102">The <xref:System.Windows.Controls.ContentControl> can contain any type of common language runtime object (such as a string or a <xref:System.DateTime> object) or a <xref:System.Windows.UIElement> object (such as a <xref:System.Windows.Shapes.Rectangle> or a <xref:System.Windows.Controls.Panel>).</span></span> <span data-ttu-id="c81e0-103">これによりなどのコントロールに豊富なコンテンツを追加する<xref:System.Windows.Controls.Button>と<xref:System.Windows.Controls.CheckBox>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-103">This enables you to add rich content to controls such as <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.CheckBox>.</span></span>  
  
 <span data-ttu-id="c81e0-104">次の図に 4 つのボタンが<xref:System.Windows.Controls.ContentControl.Content%2A>プロパティは、次のいずれかに設定します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-104">The following illustration shows four buttons whose <xref:System.Windows.Controls.ContentControl.Content%2A> property is set to one of the following:</span></span>  
  
-   <span data-ttu-id="c81e0-105">文字列。</span><span class="sxs-lookup"><span data-stu-id="c81e0-105">A string.</span></span>  
  
-   <span data-ttu-id="c81e0-106"><xref:System.DateTime> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-106">A <xref:System.DateTime> object.</span></span>  
  
-   <span data-ttu-id="c81e0-107"><xref:System.Windows.UIElement> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-107">A <xref:System.Windows.UIElement> object.</span></span>  
  
-   <span data-ttu-id="c81e0-108">A<xref:System.Windows.Controls.Panel>を含むその他のコントロール<xref:System.Windows.UIElement>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-108">A <xref:System.Windows.Controls.Panel> control that contains other <xref:System.Windows.UIElement> objects.</span></span>  
  
 <span data-ttu-id="c81e0-109">![4 つのボタン](~/add/media/controlcontentmodelbuttons.PNG "4 つのボタン")</span><span class="sxs-lookup"><span data-stu-id="c81e0-109">![Four buttons](~/add/media/controlcontentmodelbuttons.PNG "Four buttons")</span></span>  
<span data-ttu-id="c81e0-110">さまざまな種類のコンテンツの 4 つのボタン</span><span class="sxs-lookup"><span data-stu-id="c81e0-110">Four buttons with different types of content</span></span>  
  
 <span data-ttu-id="c81e0-111">A<xref:System.Windows.Controls.ContentControl>制限の既定のスタイルがします。</span><span class="sxs-lookup"><span data-stu-id="c81e0-111">A <xref:System.Windows.Controls.ContentControl> has a limited default style.</span></span> <span data-ttu-id="c81e0-112">新規に作成することができます、コントロールの外観を向上する場合は、<xref:System.Windows.DataTemplate>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-112">If you want to enhance the appearance of the control, you can create a new <xref:System.Windows.DataTemplate>.</span></span> <span data-ttu-id="c81e0-113">詳しくは「 [データ テンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c81e0-113">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span> <span data-ttu-id="c81e0-114">別の一般的なシナリオは、<xref:System.Windows.Controls.ContentControl>で選択した項目に関する詳細情報を表示、<xref:System.Windows.Controls.ItemsControl>コントロール。</span><span class="sxs-lookup"><span data-stu-id="c81e0-114">Another typical scenario is to use the <xref:System.Windows.Controls.ContentControl> to show more information about an item selected in an <xref:System.Windows.Controls.ItemsControl> control.</span></span> <span data-ttu-id="c81e0-115">詳細については、次を参照してください。[する方法: コレクションと選択内容に基づいて情報を表示するバインド](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md)です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-115">For more information, see [How to: Bind to a Collection and Display Information Based on Selection](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md).</span></span>  
  
 <span data-ttu-id="c81e0-116">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。</span><span class="sxs-lookup"><span data-stu-id="c81e0-116">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="c81e0-117">プロパティが既定のスタイルが設定されている場合は、アプリケーションでコントロールが表示されたら既定値から、プロパティが変更可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c81e0-117">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="c81e0-118">既定のスタイルは、いるデスクトップ テーマによっては、アプリケーションが実行されている場合は使用が決定されます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-118">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="c81e0-119">詳細については、次を参照してください。 [WPF テーマの既定の](http://go.microsoft.com/fwlink/?LinkID=158252)します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-119">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c81e0-120">次の例では、「解説」セクションに示すように 4 つのボタンを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-120">The following example demonstrates how to create the four buttons shown in the Remarks section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c81e0-121">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]バージョンの例を使用、`<Button.Content>`の各ボタンのコンテンツの周囲のタグを必要はありません。</span><span class="sxs-lookup"><span data-stu-id="c81e0-121">Although the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] version of the example could use the `<Button.Content>` tags around the content of each button, it is not necessary.</span></span> <span data-ttu-id="c81e0-122">詳細については、次を参照してください。 [XAML の概要 (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-122">For more information, see [XAML Overview (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span></span>  
  
 [!code-xaml[ControlContentOverviewSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[ControlContentOverviewSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#2)]
 [!code-vb[ControlContentOverviewSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#2)]  
  
 <span data-ttu-id="c81e0-123">次の例スタイルを作成する方法を示しています、<xref:System.Windows.Controls.ContentControl>コントロールに拡張の外観を持つようにします。</span><span class="sxs-lookup"><span data-stu-id="c81e0-123">The following example shows how to make a style for a <xref:System.Windows.Controls.ContentControl> so that the control has an enhanced visual appearance.</span></span>  
  
 [!code-xaml[ContentControl#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml#1)]  
[!code-xaml[ContentControl#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c81e0-124"><see cref="T:System.Windows.Controls.ContentControl" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-124">Initializes a new instance of the <see cref="T:System.Windows.Controls.ContentControl" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected virtual void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddChild (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddChild(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c81e0-125">追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-125">The object to add.</span></span></param>
        <summary><span data-ttu-id="c81e0-126">指定されたオブジェクトを <see cref="T:System.Windows.Controls.ContentControl" /> の子として追加します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-126">Adds a specified object as the child of a <see cref="T:System.Windows.Controls.ContentControl" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected virtual void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="c81e0-127">追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="c81e0-127">The string to add.</span></span></param>
        <summary><span data-ttu-id="c81e0-128">指定された文字列を <see cref="T:System.Windows.Controls.ContentControl" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-128">Adds a specified text string to a <see cref="T:System.Windows.Controls.ContentControl" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-129"><see cref="T:System.Windows.Controls.ContentControl" /> のコンテンツを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-129">Gets or sets the content of a <see cref="T:System.Windows.Controls.ContentControl" />.</span></span></summary>
        <value><span data-ttu-id="c81e0-130">コントロールのコンテンツを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-130">An object that contains the control's content.</span></span> <span data-ttu-id="c81e0-131">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-131">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c81e0-132"><xref:System.Windows.Controls.ContentControl.Content%2A>プロパティの型は<xref:System.Object>配置することができますに制限はありません、<xref:System.Windows.Controls.ContentControl>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-132">Because the <xref:System.Windows.Controls.ContentControl.Content%2A> property is of type <xref:System.Object>, there are no restrictions on what you can put in a <xref:System.Windows.Controls.ContentControl>.</span></span> <span data-ttu-id="c81e0-133"><xref:System.Windows.Controls.ContentControl.Content%2A>によって表示される、<xref:System.Windows.Controls.ContentPresenter>には、<xref:System.Windows.Controls.ControlTemplate>の<xref:System.Windows.Controls.ContentControl>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-133">The <xref:System.Windows.Controls.ContentControl.Content%2A> is displayed by a <xref:System.Windows.Controls.ContentPresenter>, which is in the <xref:System.Windows.Controls.ControlTemplate> of the <xref:System.Windows.Controls.ContentControl>.</span></span>  <span data-ttu-id="c81e0-134">各<xref:System.Windows.Controls.ContentControl>入力[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]が、 <xref:System.Windows.Controls.ContentPresenter> 、既定の<xref:System.Windows.Controls.ControlTemplate>します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-134">Every <xref:System.Windows.Controls.ContentControl> type in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] has a <xref:System.Windows.Controls.ContentPresenter> in its default <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="c81e0-135">方法の詳細については<xref:System.Windows.Controls.ContentPresenter>表示<xref:System.Windows.Controls.ContentControl.Content%2A>を参照してください<xref:System.Windows.Controls.ContentPresenter>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-135">For more information about how the <xref:System.Windows.Controls.ContentPresenter> displays <xref:System.Windows.Controls.ContentControl.Content%2A>, see <xref:System.Windows.Controls.ContentPresenter>.</span></span>  
  
<a name="dependencyPropertyInfo_Content"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c81e0-136">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c81e0-136">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c81e0-137">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c81e0-137">Identifier field</span></span>|<xref:System.Windows.Controls.ContentControl.ContentProperty>|  
|<span data-ttu-id="c81e0-138">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c81e0-138">Metadata properties set to `true`</span></span>|<span data-ttu-id="c81e0-139">なし</span><span class="sxs-lookup"><span data-stu-id="c81e0-139">None</span></span>|  
  
<a name="xamlAttributeUsage_Content"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c81e0-140">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="c81e0-140">XAML Attribute Usage</span></span>  
  
```  
<object Content="content"/>  
```  
  
<a name="xamlPropertyElementUsage_Content"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="c81e0-141">XAML プロパティ要素の使用</span><span class="sxs-lookup"><span data-stu-id="c81e0-141">XAML Property Element Usage</span></span>  
  
```  
<object> content</object>  
```  
  
<a name="xamlValues_Content"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c81e0-142">XAML 値</span><span class="sxs-lookup"><span data-stu-id="c81e0-142">XAML Values</span></span>  
 `Content`  
 <span data-ttu-id="c81e0-143">テキストまたは 1 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-143">Text or a single object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c81e0-144">次の例は、次の 4 つを作成する方法を示します<xref:System.Windows.Controls.Button>と制御<xref:System.Windows.Controls.ContentControl.Content%2A>次のいずれかに設定します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-144">The following example demonstrates how to create four <xref:System.Windows.Controls.Button> controls with <xref:System.Windows.Controls.ContentControl.Content%2A> set to one of the following:</span></span>  
  
-   <span data-ttu-id="c81e0-145">文字列。</span><span class="sxs-lookup"><span data-stu-id="c81e0-145">A string.</span></span>  
  
-   <span data-ttu-id="c81e0-146"><xref:System.DateTime> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-146">A <xref:System.DateTime> object.</span></span>  
  
-   <span data-ttu-id="c81e0-147"><xref:System.Windows.UIElement> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-147">A <xref:System.Windows.UIElement> object.</span></span>  
  
-   <span data-ttu-id="c81e0-148">A<xref:System.Windows.Controls.Panel>を含むその他のコントロール<xref:System.Windows.UIElement>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-148">A <xref:System.Windows.Controls.Panel> control that contains other <xref:System.Windows.UIElement> objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c81e0-149">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]バージョンの例を使用、`<Button.Content>`の各ボタンのコンテンツの周囲のタグを必要はありません。</span><span class="sxs-lookup"><span data-stu-id="c81e0-149">Although the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] version of the example could use the `<Button.Content>` tags around the content of each button, it is not necessary.</span></span> <span data-ttu-id="c81e0-150">詳細については、次を参照してください。 [XAML の概要 (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md)です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-150">For more information, see [XAML Overview (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span></span>  
  
 [!code-xaml[ControlContentOverviewSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[ControlContentOverviewSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#2)]
 [!code-vb[ControlContentOverviewSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#2)]  
  
 <span data-ttu-id="c81e0-151">次の図は、前の例で作成された 4 つのボタンを示します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-151">The following illustration shows the four buttons created in the previous example.</span></span>  
  
 <span data-ttu-id="c81e0-152">![4 つのボタン](~/add/media/controlcontentmodelbuttons.PNG "4 つのボタン")</span><span class="sxs-lookup"><span data-stu-id="c81e0-152">![Four buttons](~/add/media/controlcontentmodelbuttons.PNG "Four buttons")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-153"><see cref="P:System.Windows.Controls.ContentControl.Content" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-153">Identifies the <see cref="P:System.Windows.Controls.ContentControl.Content" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormat">
      <MemberSignature Language="C#" Value="public string ContentStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.ContentStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-154"><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-154">Gets or sets a composite string that specifies how to format the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property if it is displayed as a string.</span></span></summary>
        <value><span data-ttu-id="c81e0-155"><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが文字列として表示される場合に、その書式を指定する複合文字列。</span><span class="sxs-lookup"><span data-stu-id="c81e0-155">A composite string that specifies how to format the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property if it is displayed as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c81e0-156"><xref:System.Windows.Controls.ContentControl.ContentStringFormat%2A> 定義済み、複合、またはカスタムの文字列形式にすることができます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-156"><xref:System.Windows.Controls.ContentControl.ContentStringFormat%2A> can be a predefined, composite, or custom string format.</span></span> <span data-ttu-id="c81e0-157">文字列形式の詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-157">For more information about string formats, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  <span data-ttu-id="c81e0-158">設定した場合、<xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>または<xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A>のプロパティ、 <xref:System.Windows.Controls.ContentControl>、<xref:System.Windows.Controls.ContentControl.ContentStringFormat%2A>プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-158">If you set the <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> or <xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A> property of a <xref:System.Windows.Controls.ContentControl>, the <xref:System.Windows.Controls.ContentControl.ContentStringFormat%2A> property is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c81e0-159">次の例の形式を指定する<xref:System.DateTime>オブジェクトを設定して、<xref:System.Windows.Controls.ContentControl.ContentStringFormat%2A>プロパティに、<xref:System.Windows.Style>を適用して、<xref:System.Windows.Style>を 2 つ<xref:System.Windows.Controls.Label>から継承されるオブジェクト<xref:System.Windows.Controls.ContentControl>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-159">The following example specifies the format of <xref:System.DateTime> objects by setting the <xref:System.Windows.Controls.ContentControl.ContentStringFormat%2A> property in a <xref:System.Windows.Style> and applying the <xref:System.Windows.Style> to two <xref:System.Windows.Controls.Label> objects, which inherit from <xref:System.Windows.Controls.ContentControl>.</span></span>  
  
 [!code-xaml[ContentStringSnippets#ContentControl](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#contentcontrol)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.ContentStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentStringFormatProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-160"><see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-160">Identifies the <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ContentTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-161"><see cref="T:System.Windows.Controls.ContentControl" /> のコンテンツを表示するために使用するデータ テンプレートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-161">Gets or sets the data template used to display the content of the <see cref="T:System.Windows.Controls.ContentControl" />.</span></span></summary>
        <value><span data-ttu-id="c81e0-162">データ テンプレート。</span><span class="sxs-lookup"><span data-stu-id="c81e0-162">A data template.</span></span> <span data-ttu-id="c81e0-163">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-163">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c81e0-164">このプロパティを設定、<xref:System.Windows.DataTemplate>の外観を指定する、<xref:System.Windows.Controls.ContentControl>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-164">Set this property to a <xref:System.Windows.DataTemplate> to specify the appearance of the <xref:System.Windows.Controls.ContentControl>.</span></span> <span data-ttu-id="c81e0-165">データ テンプレートの詳細については、次を参照してください。[データ テンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-165">For more information on data templates, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_ContentTemplate"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c81e0-166">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="c81e0-166">XAML Attribute Usage</span></span>  
  
```  
<object ContentTemplate="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlValues_ContentTemplate"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c81e0-167">XAML 値</span><span class="sxs-lookup"><span data-stu-id="c81e0-167">XAML Values</span></span>  
 <span data-ttu-id="c81e0-168">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="c81e0-168">*resourceExtension*</span></span>  
 <span data-ttu-id="c81e0-169">リソースを参照する、テンプレート、いずれかの方法を識別するマークアップ拡張機能`StaticResource`または`DynamicResource`です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-169">A markup extension that identifies how to reference the template resource, either `StaticResource` or `DynamicResource`.</span></span> <span data-ttu-id="c81e0-170">参照してください[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-170">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="c81e0-171">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="c81e0-171">*styleResourceKey*</span></span>  
 <span data-ttu-id="c81e0-172">要求されたテンプレート セレクターを識別するキー。</span><span class="sxs-lookup"><span data-stu-id="c81e0-172">The key that identifies the requested template selector.</span></span> <span data-ttu-id="c81e0-173">このキーは既存のリソースを<xref:System.Windows.ResourceDictionary>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-173">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c81e0-174">プロパティ要素構文は、技術的に可能ですが、推奨されません。</span><span class="sxs-lookup"><span data-stu-id="c81e0-174">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="c81e0-175">詳細については、次を参照してください。[インライン スタイルとテンプレート](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-175">For more information, see [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span>  
  
<a name="dependencyPropertyInfo_ContentTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c81e0-176">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c81e0-176">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c81e0-177">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c81e0-177">Identifier field</span></span>|<xref:System.Windows.Controls.ContentControl.ContentTemplateProperty>|  
|<span data-ttu-id="c81e0-178">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c81e0-178">Metadata properties set to `true`</span></span>|<span data-ttu-id="c81e0-179">なし</span><span class="sxs-lookup"><span data-stu-id="c81e0-179">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c81e0-180">次の例では、テンプレートのコンテンツを作成し、コンテンツ コントロールに、テンプレートを適用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-180">The following examples show how to create a content template and apply the template to a content control.</span></span>  
  
 [!code-xaml[ContentControl#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml#2)]  
  
 [!code-xaml[ContentControl#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.ContentTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-181"><see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-181">Identifies the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ContentTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ContentTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ContentTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-182">アプリケーション作成者がテンプレートを選択するためのカスタム ロジックを提供できるようにするテンプレート セレクターを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-182">Gets or sets a template selector that enables an application writer to provide custom template-selection logic.</span></span></summary>
        <value><span data-ttu-id="c81e0-183">データ テンプレート セレクター。</span><span class="sxs-lookup"><span data-stu-id="c81e0-183">A data template selector.</span></span> <span data-ttu-id="c81e0-184">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-184">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c81e0-185">通常、作成、 <xref:System.Windows.Controls.DataTemplateSelector> 1 つ以上ある場合<xref:System.Windows.DataTemplate>オブジェクトの同じ型を選択する、独自のロジックを指定する、<xref:System.Windows.DataTemplate>各データ オブジェクトのプロパティに基づいて適用します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-185">Typically, you create a <xref:System.Windows.Controls.DataTemplateSelector> when you have more than one <xref:System.Windows.DataTemplate> for the same type of objects and you want to supply your own logic to choose a <xref:System.Windows.DataTemplate> to apply based on the properties of each data object.</span></span> <span data-ttu-id="c81e0-186">別のオブジェクトがある場合の種類を設定、<xref:System.Windows.DataTemplate.DataType%2A>プロパティを<xref:System.Windows.DataTemplate>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-186">Note that if you have objects of different types you can set the <xref:System.Windows.DataTemplate.DataType%2A> property on the <xref:System.Windows.DataTemplate>.</span></span> <span data-ttu-id="c81e0-187">実行するかどうかは、作成する必要はありません、<xref:System.Windows.Controls.DataTemplateSelector>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-187">If you do that, then there is no need to create a <xref:System.Windows.Controls.DataTemplateSelector>.</span></span> <span data-ttu-id="c81e0-188">さらに、さまざまなプロパティを持つ同じ型のオブジェクトがある場合は、することができますも検討を使用して、<xref:System.Windows.DataTrigger>またはデータ コンバーター。</span><span class="sxs-lookup"><span data-stu-id="c81e0-188">Furthermore, if you have objects of the same type but with different properties, you can also consider using a <xref:System.Windows.DataTrigger> or a data converter.</span></span> <span data-ttu-id="c81e0-189">詳しくは「 [データ テンプレートの概要](~/docs/framework/wpf/data/data-templating-overview.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="c81e0-189">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
 <span data-ttu-id="c81e0-190">テンプレート セレクターを作成するから継承するクラスを作成<xref:System.Windows.Controls.DataTemplateSelector>をオーバーライドし、<xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="c81e0-190">To create a template selector, create a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="c81e0-191">クラスを定義した後は、要素のテンプレート セレクター プロパティに、クラスのインスタンスを割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-191">After your class is defined, you can assign an instance of the class to the template selector property of your element.</span></span>  
  
 <span data-ttu-id="c81e0-192">両方の<xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A>と<xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>プロパティを設定し、このプロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-192">If both the <xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A> and the <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> properties are set, then this property is ignored.</span></span>  
  
<a name="xamlAttributeUsage_ContentTemplateSelector"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c81e0-193">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="c81e0-193">XAML Attribute Usage</span></span>  
  
```  
<object ContentTemplateSelector="{ResourceExtension TemplateSelectorKey}"/>  
```  
  
<a name="xamlValues_ContentTemplateSelector"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c81e0-194">XAML 値</span><span class="sxs-lookup"><span data-stu-id="c81e0-194">XAML Values</span></span>  
 <span data-ttu-id="c81e0-195">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="c81e0-195">*ResourceExtension*</span></span>  
 <span data-ttu-id="c81e0-196">リソースを参照する、テンプレート、いずれかの方法を識別するマークアップ拡張機能`StaticResource`または`DynamicResource`です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-196">A markup extension that identifies how to reference the template resource, either `StaticResource` or `DynamicResource`.</span></span> <span data-ttu-id="c81e0-197">参照してください[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-197">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="c81e0-198">*TemplateSelectorKey*</span><span class="sxs-lookup"><span data-stu-id="c81e0-198">*TemplateSelectorKey*</span></span>  
 <span data-ttu-id="c81e0-199">要求されたテンプレート セレクターを識別するキー。</span><span class="sxs-lookup"><span data-stu-id="c81e0-199">The key that identifies the requested template selector.</span></span> <span data-ttu-id="c81e0-200">このキーは既存のリソースを<xref:System.Windows.ResourceDictionary>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-200">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
<a name="dependencyPropertyInfo_ContentTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c81e0-201">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c81e0-201">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c81e0-202">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c81e0-202">Identifier field</span></span>|<xref:System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty>|  
|<span data-ttu-id="c81e0-203">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c81e0-203">Metadata properties set to `true`</span></span>|<span data-ttu-id="c81e0-204">なし</span><span class="sxs-lookup"><span data-stu-id="c81e0-204">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c81e0-205"><xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A> プロパティを使用する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-205">The following example shows how to use the <xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A> property.</span></span> <span data-ttu-id="c81e0-206">次の例で選択した項目のバインド、<xref:System.Windows.Controls.ComboBox>を<xref:System.Windows.Controls.ContentControl.Content%2A>のプロパティ、<xref:System.Windows.Controls.Label>から継承される<xref:System.Windows.Controls.ContentControl>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-206">This example binds the selected item in a <xref:System.Windows.Controls.ComboBox> to the <xref:System.Windows.Controls.ContentControl.Content%2A> property of a <xref:System.Windows.Controls.Label>, which inherits from <xref:System.Windows.Controls.ContentControl>.</span></span>  <span data-ttu-id="c81e0-207">選択された項目の値が黒の四角形に表示されます、ユーザーが 5 未満の値を選択すると、<xref:System.Windows.Controls.Label>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-207">When the user selects a value below 5, the value of the selected item appears in a black square in the <xref:System.Windows.Controls.Label>.</span></span>  <span data-ttu-id="c81e0-208">上またはをユーザーが 5 である値を選択したときに、緑の楕円に値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-208">When the user selects a value that is 5 or above, the value appears in a green ellipse.</span></span> <span data-ttu-id="c81e0-209">例でこれを行う 2 つ作成することで<xref:System.Windows.DataTemplate>オブジェクトおよび<xref:System.Windows.Controls.DataTemplateSelector>に設定されています、<xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A>プロパティし、適切な選択<xref:System.Windows.DataTemplate>選択された項目の値に基づきます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-209">The example accomplishes this by creating two <xref:System.Windows.DataTemplate> objects and a <xref:System.Windows.Controls.DataTemplateSelector>, which is set to the <xref:System.Windows.Controls.ContentControl.ContentTemplateSelector%2A> property and chooses the appropriate <xref:System.Windows.DataTemplate> based on the value of the selected item.</span></span>  
  
 [!code-xaml[ContentControlTemplateSelector#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControlTemplateSelector/CSharp/Window1.xaml#1)]  
[!code-csharp[ContentControlTemplateSelector#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControlTemplateSelector/CSharp/Window1.xaml.cs#2)]
[!code-vb[ContentControlTemplateSelector#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentControlTemplateSelector/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentTemplateSelectorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-210"><see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-210">Identifies the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasContent">
      <MemberSignature Language="C#" Value="public bool HasContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.HasContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-211"><see cref="T:System.Windows.Controls.ContentControl" /> にコンテンツが含まれているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-211">Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ContentControl" /> contains content.</span></span></summary>
        <value>
          <span data-ttu-id="c81e0-212"><see cref="T:System.Windows.Controls.ContentControl" /> にコンテンツが含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c81e0-212"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ContentControl" /> has content; otherwise <see langword="false" />.</span></span> <span data-ttu-id="c81e0-213">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-213">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c81e0-214">場合、<xref:System.Windows.Controls.ContentControl.Content%2A>プロパティは`null`、このプロパティを返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-214">If the <xref:System.Windows.Controls.ContentControl.Content%2A> property is `null`, this property returns `false`.</span></span>  
  
<a name="dependencyPropertyInfo_HasContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c81e0-215">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c81e0-215">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c81e0-216">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="c81e0-216">Identifier field</span></span>|<xref:System.Windows.Controls.ContentControl.HasContentProperty>|  
|<span data-ttu-id="c81e0-217">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="c81e0-217">Metadata properties set to `true`</span></span>|<span data-ttu-id="c81e0-218">なし</span><span class="sxs-lookup"><span data-stu-id="c81e0-218">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c81e0-219">次の例を使用する方法を示しています、<xref:System.Windows.Controls.ContentControl.HasContent%2A>コンテンツ コントロールがコンテンツを含むかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="c81e0-219">The following example shows how to use the <xref:System.Windows.Controls.ContentControl.HasContent%2A> property to determine whether a content control contains content.</span></span>  
  
 [!code-csharp[ContentControl#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentControl/CSharp/Page1.xaml.cs#4)]
 [!code-vb[ContentControl#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentControl/VisualBasic/Page1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContentControl.HasContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasContentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-220"><see cref="P:System.Windows.Controls.ContentControl.HasContent" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-220">Identifies the <see cref="P:System.Windows.Controls.ContentControl.HasContent" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContentControl.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c81e0-221">コンテンツ コントロールの論理上の子要素に対する列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-221">Gets an enumerator to the content control's logical child elements.</span></span></summary>
        <value><span data-ttu-id="c81e0-222">列挙子。</span><span class="sxs-lookup"><span data-stu-id="c81e0-222">An enumerator.</span></span> <span data-ttu-id="c81e0-223">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-223">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent"><span data-ttu-id="c81e0-224"><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの変更前の値。</span><span class="sxs-lookup"><span data-stu-id="c81e0-224">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</span></span></param>
        <param name="newContent"><span data-ttu-id="c81e0-225"><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティの新しい値。</span><span class="sxs-lookup"><span data-stu-id="c81e0-225">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property.</span></span></param>
        <summary><span data-ttu-id="c81e0-226"><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティが変更されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-226">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentStringFormatChanged (string oldContentStringFormat, string newContentStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentStringFormatChanged(string oldContentStringFormat, string newContentStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.OnContentStringFormatChanged(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentStringFormatChanged (oldContentStringFormat As String, newContentStringFormat As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentStringFormatChanged(System::String ^ oldContentStringFormat, System::String ^ newContentStringFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentStringFormat" Type="System.String" />
        <Parameter Name="newContentStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldContentStringFormat"><span data-ttu-id="c81e0-227"><see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> の変更前の値。</span><span class="sxs-lookup"><span data-stu-id="c81e0-227">The old value of <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />.</span></span></param>
        <param name="newContentStringFormat"><span data-ttu-id="c81e0-228"><see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> の新しい値。</span><span class="sxs-lookup"><span data-stu-id="c81e0-228">The new value of <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" />.</span></span></param>
        <summary><span data-ttu-id="c81e0-229"><see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-229">Occurs when the <see cref="P:System.Windows.Controls.ContentControl.ContentStringFormat" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateChanged (System.Windows.DataTemplate oldContentTemplate, System.Windows.DataTemplate newContentTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateChanged(class System.Windows.DataTemplate oldContentTemplate, class System.Windows.DataTemplate newContentTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateChanged (oldContentTemplate As DataTemplate, newContentTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateChanged(System::Windows::DataTemplate ^ oldContentTemplate, System::Windows::DataTemplate ^ newContentTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newContentTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplate"><span data-ttu-id="c81e0-230"><see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> プロパティの変更前の値。</span><span class="sxs-lookup"><span data-stu-id="c81e0-230">The old value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> property.</span></span></param>
        <param name="newContentTemplate"><span data-ttu-id="c81e0-231"><see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> プロパティの新しい値。</span><span class="sxs-lookup"><span data-stu-id="c81e0-231">The new value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> property.</span></span></param>
        <summary><span data-ttu-id="c81e0-232"><see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> プロパティが変更されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-232">Called when the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContentTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, System.Windows.Controls.DataTemplateSelector newContentTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldContentTemplateSelector, class System.Windows.Controls.DataTemplateSelector newContentTemplateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentTemplateSelectorChanged (oldContentTemplateSelector As DataTemplateSelector, newContentTemplateSelector As DataTemplateSelector)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentTemplateSelectorChanged(System::Windows::Controls::DataTemplateSelector ^ oldContentTemplateSelector, System::Windows::Controls::DataTemplateSelector ^ newContentTemplateSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newContentTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldContentTemplateSelector"><span data-ttu-id="c81e0-233"><see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> プロパティの変更前の値。</span><span class="sxs-lookup"><span data-stu-id="c81e0-233">The old value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> property.</span></span></param>
        <param name="newContentTemplateSelector"><span data-ttu-id="c81e0-234"><see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> プロパティの新しい値。</span><span class="sxs-lookup"><span data-stu-id="c81e0-234">The new value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> property.</span></span></param>
        <summary><span data-ttu-id="c81e0-235"><see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> プロパティが変更されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c81e0-235">Called when the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeContent">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSerializeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.ShouldSerializeContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeContent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSerializeContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c81e0-236"><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティを永続化する必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-236">Indicates whether the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property should be persisted.</span></span></summary>
        <returns>
          <span data-ttu-id="c81e0-237"><see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティを永続化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c81e0-237"><see langword="true" /> if the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property should be persisted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c81e0-238">これは、`ShouldSerialize`ためメソッドが用意されて、<xref:System.Windows.Controls.ContentControl.Content%2A>プロパティには、単純な既定値にありません。</span><span class="sxs-lookup"><span data-stu-id="c81e0-238">This `ShouldSerialize` method is provided because the <xref:System.Windows.Controls.ContentControl.Content%2A> property does not have a simple default value.</span></span> <span data-ttu-id="c81e0-239">このメソッドは、既定値から、プロパティが変更されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="c81e0-239">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="c81e0-240">いずれかをデザイナーを開発している場合に通常、このメソッドが呼び出す、<xref:System.Windows.Controls.ContentControl>やコントロールを組み込む独自の開発、<xref:System.Windows.Controls.ContentControl>です。</span><span class="sxs-lookup"><span data-stu-id="c81e0-240">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Controls.ContentControl> or developing your own control incorporating the <xref:System.Windows.Controls.ContentControl>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c81e0-241">子として追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c81e0-241">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="c81e0-242">この型またはメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="c81e0-242">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContentControl.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="c81e0-243">オブジェクトに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="c81e0-243">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="c81e0-244">この型またはメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="c81e0-244">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>