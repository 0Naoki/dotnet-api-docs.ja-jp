<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CheckBox.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a6b9f7797d7f03c51c0d80411e3531c0e2dfe1e9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6b9f7797d7f03c51c0d80411e3531c0e2dfe1e9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.CheckBox">
          <source>Represents a control that a user can select and clear.</source>
          <target state="translated">ユーザーがオンまたはオフにできるコントロールを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> controls inherit from <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ToggleButton&gt;</ph> and can have three states: checked (selected), unchecked (cleared), and indeterminate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> コントロールから継承<ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ToggleButton&gt;</ph>3 つの状態を持つことができます: チェック (選択されている)、チェックを行わない (オフ)、および不確定です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph>は、 <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>、任意の型 (文字列、画像、パネルなど) の 1 つのオブジェクトに含めることを意味します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> class.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> クラスを参照してください。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>Customizing the CheckBox Control</source>
          <target state="translated">CheckBox コントロールをカスタマイズします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>To apply the same property settings to multiple <ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> controls, use the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property.</source>
          <target state="translated">設定を適用する、同じプロパティを複数<ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph>、コントロールを使用して、<ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>You can modify the default <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to give the control a unique appearance.</source>
          <target state="translated">既定値を変更することができます<ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>コントロールの外観を一意にします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>For more information about creating a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">作成の詳細については、<ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>を参照してください<bpt id="p1">[</bpt>、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>To see the parts and states that are specific to the <ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph>, see <bpt id="p1">[</bpt>CheckBox Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md)</ept>.</source>
          <target state="translated">部分とに固有の状態を表示する、<ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph>を参照してください<bpt id="p1">[</bpt>チェック ボックスのスタイルとテンプレート<ept id="p1">](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">プロパティが既定のスタイルが設定されている場合は、アプリケーションでコントロールが表示されたら既定値から、プロパティが変更可能性があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">既定のスタイルは、いるデスクトップ テーマによっては、アプリケーションが実行されている場合は使用が決定されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>WPF テーマの既定の<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>Setting a visual property will only have an effect if that property is both present in <ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> control's default template and is set by using a .</source>
          <target state="translated">Visual プロパティの設定はのみに効果が場合、このプロパティは、両方に存在<ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph>コントロールの既定のテンプレートとを使用して設定をします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">「を変更する、Visual 構造の制御」 セクションで visual のプロパティの一覧を検索できる<bpt id="p1">[</bpt>、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.CheckBox">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> and handles the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.Checked&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.Unchecked&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.Indeterminate&gt;</ph> events.</source>
          <target state="translated">次の例を作成、<ph id="ph1">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph>し、処理、 <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.Checked&gt;</ph>、 <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.Unchecked&gt;</ph>、および<ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.Indeterminate&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.CheckBox.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.AccessKeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Input.AccessKeyEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <source>Called when the access key for a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph> is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph> のアクセス キーの使用時に呼び出されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph> の <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> を作成します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Responds to a <ph id="ph1">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph><ph id="ph2">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Controls.CheckBox" /&gt;</ph><ph id="ph2">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> イベントに応答します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>This implementation marks the <ph id="ph1">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> event as handled by setting the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property of the event data to <ph id="ph3">`true`</ph> when the user presses the plus or the minus key.</source>
          <target state="translated">この実装を示します、<ph id="ph1">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph>イベントを処理するには、<ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph>にイベント データのプロパティ<ph id="ph3">`true`</ph>プラスまたはマイナス記号キー キーが押されたとき。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>This method sets <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A&gt;</ph> to <ph id="ph2">`true`</ph> when the user presses the plus key and to <ph id="ph3">`false`</ph> when the user presses the minus key.</source>
          <target state="translated">このメソッドは設定<ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A&gt;</ph>に<ph id="ph2">`true`</ph>プラス キーを押すと<ph id="ph3">`false`</ph>マイナス キーを押したときにします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">オーバーライドする場合は<ph id="ph1">&lt;see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" /&gt;</ph>、常の基本実装を呼び出す、<ph id="ph2">&lt;see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" /&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">基底の実装の呼び出しに失敗すると、基本クラスが、最終的なクラスの実行時の動作を変更する可能性があります、クラスのハンドラーでイベントを処理できなくなります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">要件に応じて、特別な処理の前後の基本実装を呼び出すことができます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>