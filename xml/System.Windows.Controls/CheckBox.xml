<Type Name="CheckBox" FullName="System.Windows.Controls.CheckBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="220cae075f203e35b542b359640dc74f93229e89" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52600871" /></Metadata><TypeSignature Language="C#" Value="public class CheckBox : System.Windows.Controls.Primitives.ToggleButton" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CheckBox extends System.Windows.Controls.Primitives.ToggleButton" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.CheckBox" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckBox&#xA;Inherits ToggleButton" />
  <TypeSignature Language="C++ CLI" Value="public ref class CheckBox : System::Windows::Controls::Primitives::ToggleButton" />
  <TypeSignature Language="F#" Value="type CheckBox = class&#xA;    inherit ToggleButton" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.ToggleButton</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("CheckStateChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.CheckBox)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e61c9-101">ユーザーがオンまたはオフにできるコントロールを表します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-101">Represents a control that a user can select and clear.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e61c9-102"><xref:System.Windows.Controls.CheckBox> コントロールから継承<xref:System.Windows.Controls.Primitives.ToggleButton>3 つの状態と: (選択されている) をオンになってチェックを行わない (オフ)、不定です。</span><span class="sxs-lookup"><span data-stu-id="e61c9-102"><xref:System.Windows.Controls.CheckBox> controls inherit from <xref:System.Windows.Controls.Primitives.ToggleButton> and can have three states: checked (selected), unchecked (cleared), and indeterminate.</span></span>  
  
 <span data-ttu-id="e61c9-103">A<xref:System.Windows.Controls.CheckBox>は、 <xref:System.Windows.Controls.ContentControl>、つまり、ある任意の型 (文字列、イメージ、パネルなど) の 1 つのオブジェクトを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="e61c9-103">A <xref:System.Windows.Controls.CheckBox> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="e61c9-104">詳細については、<xref:System.Windows.Controls.ContentControl> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e61c9-104">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-checkbox-control"></a><span data-ttu-id="e61c9-105">チェック ボックス コントロールをカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="e61c9-105">Customizing the CheckBox Control</span></span>  
 <span data-ttu-id="e61c9-106">複数に同じプロパティの設定を適用する<xref:System.Windows.Controls.CheckBox>コントロールを使用して、<xref:System.Windows.FrameworkElement.Style%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e61c9-106">To apply the same property settings to multiple <xref:System.Windows.Controls.CheckBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="e61c9-107">既定値を変更する<xref:System.Windows.Controls.ControlTemplate>固有の外観を制御します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-107">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="e61c9-108">作成の詳細については、<xref:System.Windows.Controls.ControlTemplate>を参照してください[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-108">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="e61c9-109">パーツとに固有の状態を表示する、<xref:System.Windows.Controls.CheckBox>を参照してください[CheckBox のスタイルとテンプレート](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md)します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-109">To see the parts and states that are specific to the <xref:System.Windows.Controls.CheckBox>, see [CheckBox Styles and Templates](~/docs/framework/wpf/controls/checkbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="e61c9-110">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e61c9-110">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="e61c9-111">プロパティが既定のスタイルによって設定されている場合は、アプリケーションでコントロールが表示されたら、既定値から、プロパティが変更可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e61c9-111">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="e61c9-112">デスクトップ テーマでは、アプリケーションが実行されている場合は、使用、既定のスタイルが決定されます。</span><span class="sxs-lookup"><span data-stu-id="e61c9-112">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="e61c9-113">詳細については、次を参照してください。[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-113">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e61c9-114">ビジュアルのプロパティの設定はのみ、効果がそのプロパティが両方に存在する場合は<xref:System.Windows.Controls.CheckBox>コントロールの既定のテンプレートとを使用して設定をします。</span><span class="sxs-lookup"><span data-stu-id="e61c9-114">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.CheckBox> control's default template and is set by using a .</span></span> <span data-ttu-id="e61c9-115">"を変更するビジュアル構造体のコントロールのセクションではビジュアルのプロパティの一覧を検索できます[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-115">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e61c9-116">次の例では、作成、<xref:System.Windows.Controls.CheckBox>し、処理、 <xref:System.Windows.Controls.Primitives.ToggleButton.Checked>、 <xref:System.Windows.Controls.Primitives.ToggleButton.Unchecked>、および<xref:System.Windows.Controls.Primitives.ToggleButton.Indeterminate>イベント。</span><span class="sxs-lookup"><span data-stu-id="e61c9-116">The following example creates a <xref:System.Windows.Controls.CheckBox> and handles the <xref:System.Windows.Controls.Primitives.ToggleButton.Checked>, <xref:System.Windows.Controls.Primitives.ToggleButton.Unchecked>, and <xref:System.Windows.Controls.Primitives.ToggleButton.Indeterminate> events.</span></span>  
  
 [!code-xaml[CheckBox_Snippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml#4)]  
  
 [!code-csharp[CheckBox_Snippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/CheckBox_Snippets/CSharp/Window1.xaml.cs#5)]
 [!code-vb[CheckBox_Snippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CheckBox_Snippets/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="e61c9-117">WPF コントロール ギャラリー サンプル</span><span class="sxs-lookup"><span data-stu-id="e61c9-117">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e61c9-118"><see cref="T:System.Windows.Controls.CheckBox" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-118">Initializes a new instance of the <see cref="T:System.Windows.Controls.CheckBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="checkBox.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e61c9-119">イベント データを格納している <see cref="T:System.Windows.Input.AccessKeyEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e61c9-119">The <see cref="T:System.Windows.Input.AccessKeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e61c9-120"><see cref="T:System.Windows.Controls.CheckBox" /> のアクセス キーの使用時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e61c9-120">Called when the access key for a <see cref="T:System.Windows.Controls.CheckBox" /> is invoked.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="checkBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e61c9-121"><see cref="T:System.Windows.Controls.CheckBox" /> の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-121">Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.CheckBox" />.</span></span></summary>
        <returns><span data-ttu-id="e61c9-122"><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.CheckBox" />。</span><span class="sxs-lookup"><span data-stu-id="e61c9-122">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.CheckBox" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="checkBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e61c9-123">イベント データを格納している <see cref="T:System.Windows.Input.KeyEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e61c9-123">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e61c9-124"><see cref="T:System.Windows.Controls.CheckBox" /><see cref="E:System.Windows.UIElement.KeyDown" /> イベントに応答します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-124">Responds to a <see cref="T:System.Windows.Controls.CheckBox" /><see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e61c9-125">この実装をマーク、<xref:System.Windows.UIElement.KeyDown>イベントを処理するには、<xref:System.Windows.RoutedEventArgs.Handled%2A>にイベント データのプロパティ`true`ユーザーがプラスまたはマイナス記号キーを押すとします。</span><span class="sxs-lookup"><span data-stu-id="e61c9-125">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user presses the plus or the minus key.</span></span>  
  
 <span data-ttu-id="e61c9-126">このメソッドは、設定<xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A>に`true`、プラス キーを押すとする`false`マイナス記号キーを押したときにします。</span><span class="sxs-lookup"><span data-stu-id="e61c9-126">This method sets <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> to `true` when the user presses the plus key and to `false` when the user presses the minus key.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e61c9-127">オーバーライドする場合<see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />、常基本実装を呼び出して、<see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />実装します。</span><span class="sxs-lookup"><span data-stu-id="e61c9-127">If you override <see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="e61c9-128">基本の実装の呼び出しに失敗すると、基底クラスが最後のクラスの実行時の動作が変わる可能性のある、クラス ハンドラーでイベントを処理できなくなります。</span><span class="sxs-lookup"><span data-stu-id="e61c9-128">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="e61c9-129">要件に応じて前に、または後、特別な処理の基本実装を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e61c9-129">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>