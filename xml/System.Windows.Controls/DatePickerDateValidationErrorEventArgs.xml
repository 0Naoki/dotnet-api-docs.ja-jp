<Type Name="DatePickerDateValidationErrorEventArgs" FullName="System.Windows.Controls.DatePickerDateValidationErrorEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f3ebf358c8a51a02ea43c7849b3718e059376917" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30617616" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DatePickerDateValidationErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DatePickerDateValidationErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DatePickerDateValidationErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DatePickerDateValidationErrorEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.DatePicker.DateValidationError?displayProperty=nameWithType>イベントが発生したときに<xref:System.Windows.Controls.DatePicker.Text%2A?displayProperty=nameWithType>を日付として解釈できないまたは日付を選択できない場合の値に設定します。 このイベントをサブスクライブし、設定して、例外が発生するかどうかを指定することができます、<xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A>プロパティです。 場合<xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A?displayProperty=nameWithType>は`true`、次の例外のいずれかが発生します。  
  
|例外の種類|条件|  
|--------------------|---------------|  
|<xref:System.FormatException>|有効な日付を入力したテキストを解析できませんし、例外が抑制されていません。|  
|<xref:System.ArgumentOutOfRangeException>|入力したテキストを選択できない日付を解析します。|  
  
 場合<xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A?displayProperty=nameWithType>は`false`アプリケーションが通常どおり実行を継続します。  
  
   
  
## Examples  
 次の例を作成、<xref:System.Windows.Controls.DatePicker>を 2009 年 8 月に日付を表示し、各土曜日と日曜日が選択可能ではないことを指定します。 <xref:System.Windows.Controls.DatePicker>ハンドル、<xref:System.Windows.Controls.DatePicker.DateValidationError>イベント。 場合は、選択できない日付を入力すると、メッセージを表示します。 有効な日付ではないテキストを入力すると、例外がスローされます。  
  
 [!code-csharp[DatePickerSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[DatePickerSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[DatePickerSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#2)]  
  
 [!code-csharp[DatePickerSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[DatePickerSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatePickerDateValidationErrorEventArgs (Exception exception, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.#ctor(System.Exception,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DatePickerDateValidationErrorEventArgs(Exception ^ exception, System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">
          <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントからの最初の例外。</param>
        <param name="text">
          <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントの原因となったテキスト。</param>
        <summary>
          <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントに関連付けられた最初の例外を取得します。</summary>
        <value>検証エラーに関連付けられた例外。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントの原因となったテキストを取得または設定します。</summary>
        <value>検証エラーの原因となったテキスト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowException { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.Exception" /> をスローするかどうかを示す値を取得または設定します。</summary>
        <value>
          例外をスローする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>