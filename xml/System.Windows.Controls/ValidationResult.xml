<Type Name="ValidationResult" FullName="System.Windows.Controls.ValidationResult">
  <TypeSignature Language="C#" Value="public class ValidationResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationResult" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationResult" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8b09b-101"><see cref="T:System.Windows.Controls.ValidationRule" />.<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /> メソッドによって返された結果を表します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-101">Represents the result returned by the <see cref="T:System.Windows.Controls.ValidationRule" />.<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /></span></span> <span data-ttu-id="8b09b-102">このメソッドは、チェック後の値が <see cref="T:System.Windows.Controls.ValidationRule" /> に合致しているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-102">method that indicates whether the checked value passed the <see cref="T:System.Windows.Controls.ValidationRule" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b09b-103">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディング モデルを使用すると、関連付ける<xref:System.Windows.Data.Binding.ValidationRules%2A>で、<xref:System.Windows.Data.Binding>または<xref:System.Windows.Data.MultiBinding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b09b-103">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="8b09b-104">サブクラス化してカスタム規則を作成することができます、<xref:System.Windows.Controls.ValidationRule>クラスと実装、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8b09b-104">You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="8b09b-105"><xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドを返します、<xref:System.Windows.Controls.ValidationResult>チェック済みの値が有効かどうかを報告するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b09b-105">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.</span></span>  
  
 <span data-ttu-id="8b09b-106">検証プロセスの詳細についてを参照してください「データの検証」[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b09b-106">For a detailed discussion of the validation process, see "Data Validation" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b09b-107">次の例では、入力値または下限と上限の外部数字以外の文字が含まれている場合は無効としてマークされる検証規則の実装を示します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-107">The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds.</span></span> <span data-ttu-id="8b09b-108">値が有効でない場合、<xref:System.Windows.Controls.ValidationResult.ErrorContent%2A>プロパティおよび<xref:System.Windows.Controls.ValidationResult.IsValid%2A>、返されたプロパティ<xref:System.Windows.Controls.ValidationResult>適切なエラー メッセージに設定されてと`false`それぞれします。</span><span class="sxs-lookup"><span data-stu-id="8b09b-108">If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.</span></span>  
  
 <span data-ttu-id="8b09b-109">完了の例では、次を参照してください。[する方法: バインド検証を実装する](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b09b-109">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationResult (bool isValid, object errorContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isValid, object errorContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isValid As Boolean, errorContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationResult(bool isValid, System::Object ^ errorContent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isValid" Type="System.Boolean" />
        <Parameter Name="errorContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="isValid"><span data-ttu-id="8b09b-110"><see cref="T:System.Windows.Controls.ValidationRule" /> でチェックした値が有効かどうか。</span><span class="sxs-lookup"><span data-stu-id="8b09b-110">Whether or not the value checked against the <see cref="T:System.Windows.Controls.ValidationRule" /> is valid.</span></span></param>
        <param name="errorContent"><span data-ttu-id="8b09b-111">無効性に関する情報。</span><span class="sxs-lookup"><span data-stu-id="8b09b-111">Information about the invalidity.</span></span></param>
        <summary><span data-ttu-id="8b09b-112"><see cref="T:System.Windows.Controls.ValidationResult" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-112">Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationResult" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b09b-113">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディング モデルを使用すると、関連付ける<xref:System.Windows.Data.Binding.ValidationRules%2A>で、<xref:System.Windows.Data.Binding>または<xref:System.Windows.Data.MultiBinding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b09b-113">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="8b09b-114">サブクラス化してカスタム規則を作成することができます、<xref:System.Windows.Controls.ValidationRule>クラスと実装、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8b09b-114">You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="8b09b-115"><xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドを返します、<xref:System.Windows.Controls.ValidationResult>チェック済みの値が有効かどうかを報告するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b09b-115">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.</span></span>  
  
 <span data-ttu-id="8b09b-116">検証プロセスの詳細についてを参照してください「データの検証」[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b09b-116">For a detailed discussion of the validation process, see "Data Validation" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b09b-117">次の例では、入力値または下限と上限の外部数字以外の文字が含まれている場合は無効としてマークされる検証規則の実装を示します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-117">The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds.</span></span> <span data-ttu-id="8b09b-118">値が有効でない場合、<xref:System.Windows.Controls.ValidationResult.ErrorContent%2A>プロパティおよび<xref:System.Windows.Controls.ValidationResult.IsValid%2A>、返されたプロパティ<xref:System.Windows.Controls.ValidationResult>適切なエラー メッセージに設定されてと`false`それぞれします。</span><span class="sxs-lookup"><span data-stu-id="8b09b-118">If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.</span></span>  
  
 <span data-ttu-id="8b09b-119">完了の例では、次を参照してください。[する方法: バインド検証を実装する](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b09b-119">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8b09b-120">比較対象の <see cref="T:System.Windows.Controls.ValidationResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="8b09b-120">The <see cref="T:System.Windows.Controls.ValidationResult" /> instance to compare.</span></span></param>
        <summary><span data-ttu-id="8b09b-121">指定したインスタンスと <see cref="T:System.Windows.Controls.ValidationResult" /> の現在のインスタンスを比較し、値が等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-121">Compares the specified instance and the current instance of <see cref="T:System.Windows.Controls.ValidationResult" /> for value equality.</span></span></summary>
        <returns>
          <span data-ttu-id="8b09b-122"><paramref name="obj" /> および <see cref="T:System.Windows.Controls.ValidationResult" /> のこのインスタンスが同じ値を持つ場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8b09b-122"><see langword="true" /> if <paramref name="obj" /> and this instance of <see cref="T:System.Windows.Controls.ValidationResult" />.have the same values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b09b-123">このメソッドは、演算子のオーバーライドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="8b09b-123">This method is called by the operator overrides.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b09b-124">無効性に関する追加情報を提供するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-124">Gets an object that provides additional information about the invalidity.</span></span></summary>
        <value><span data-ttu-id="8b09b-125">無効性に関する追加情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b09b-125">An object that provides additional information about the invalidity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b09b-126">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディング モデルを使用すると、関連付ける<xref:System.Windows.Data.Binding.ValidationRules%2A>で、<xref:System.Windows.Data.Binding>または<xref:System.Windows.Data.MultiBinding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b09b-126">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="8b09b-127">サブクラス化してカスタム規則を作成することができます、<xref:System.Windows.Controls.ValidationRule>クラスと実装、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8b09b-127">You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="8b09b-128"><xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドを返します、<xref:System.Windows.Controls.ValidationResult>チェック済みの値が有効かどうかを報告するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b09b-128">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.</span></span>  
  
 <span data-ttu-id="8b09b-129">検証プロセスの詳細についてを参照してください「データの検証」[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b09b-129">For a detailed discussion of the validation process, see "Data Validation" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b09b-130">次の例では、入力値または下限と上限の外部数字以外の文字が含まれている場合は無効としてマークされる検証規則の実装を示します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-130">The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds.</span></span> <span data-ttu-id="8b09b-131">値が有効でない場合、<xref:System.Windows.Controls.ValidationResult.ErrorContent%2A>プロパティおよび<xref:System.Windows.Controls.ValidationResult.IsValid%2A>、返されたプロパティ<xref:System.Windows.Controls.ValidationResult>適切なエラー メッセージに設定されてと`false`それぞれします。</span><span class="sxs-lookup"><span data-stu-id="8b09b-131">If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.</span></span>  
  
 <span data-ttu-id="8b09b-132">完了の例では、次を参照してください。[する方法: バインド検証を実装する](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b09b-132">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8b09b-133">この <see cref="T:System.Windows.Controls.ValidationResult" /> のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-133">Returns the hash code for this <see cref="T:System.Windows.Controls.ValidationResult" />.</span></span></summary>
        <returns><span data-ttu-id="8b09b-134">この <see cref="T:System.Windows.Controls.ValidationResult" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="8b09b-134">The hash code for this <see cref="T:System.Windows.Controls.ValidationResult" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b09b-135"><see cref="T:System.Windows.Controls.ValidationRule" /> に関してチェックされた値が有効かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-135">Gets a value that indicates whether the value checked against the <see cref="T:System.Windows.Controls.ValidationRule" /> is valid.</span></span></summary>
        <value>
          <span data-ttu-id="8b09b-136">値が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b09b-136"><see langword="true" /> if the value is valid; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8b09b-137">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="8b09b-137">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b09b-138">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]データ バインディング モデルを使用すると、関連付ける<xref:System.Windows.Data.Binding.ValidationRules%2A>で、<xref:System.Windows.Data.Binding>または<xref:System.Windows.Data.MultiBinding>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b09b-138">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="8b09b-139">サブクラス化してカスタム規則を作成することができます、<xref:System.Windows.Controls.ValidationRule>クラスと実装、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="8b09b-139">You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="8b09b-140"><xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドを返します、<xref:System.Windows.Controls.ValidationResult>チェック済みの値が有効かどうかを報告するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8b09b-140">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.</span></span>  
  
 <span data-ttu-id="8b09b-141">検証プロセスの詳細についてを参照してください「データの検証」[データ バインディングの概要](~/docs/framework/wpf/data/data-binding-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b09b-141">For a detailed discussion of the validation process, see "Data Validation" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b09b-142">次の例では、入力値または下限と上限の外部数字以外の文字が含まれている場合は無効としてマークされる検証規則の実装を示します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-142">The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds.</span></span> <span data-ttu-id="8b09b-143">値が有効でない場合、<xref:System.Windows.Controls.ValidationResult.ErrorContent%2A>プロパティおよび<xref:System.Windows.Controls.ValidationResult.IsValid%2A>、返されたプロパティ<xref:System.Windows.Controls.ValidationResult>適切なエラー メッセージに設定されてと`false`それぞれします。</span><span class="sxs-lookup"><span data-stu-id="8b09b-143">If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.</span></span>  
  
 <span data-ttu-id="8b09b-144">完了の例では、次を参照してください。[する方法: バインド検証を実装する](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)です。</span><span class="sxs-lookup"><span data-stu-id="8b09b-144">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Controls.ValidationResult left, class System.Windows.Controls.ValidationResult right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValidationResult, right As ValidationResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::ValidationResult ^ left, System::Windows::Controls::ValidationResult ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Controls.ValidationResult" />
        <Parameter Name="right" Type="System.Windows.Controls.ValidationResult" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8b09b-145">比較する 1 番目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="8b09b-145">The first instance to compare.</span></span></param>
        <param name="right"><span data-ttu-id="8b09b-146">比較する 2 番目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="8b09b-146">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="8b09b-147">2 つの <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクトの値が等しいかどうかを比較します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-147">Compares two <see cref="T:System.Windows.Controls.ValidationResult" /> objects for value equality.</span></span></summary>
        <returns>
          <span data-ttu-id="8b09b-148">2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b09b-148"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Controls.ValidationResult left, class System.Windows.Controls.ValidationResult right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValidationResult, right As ValidationResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::ValidationResult ^ left, System::Windows::Controls::ValidationResult ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Controls.ValidationResult" />
        <Parameter Name="right" Type="System.Windows.Controls.ValidationResult" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8b09b-149">比較する 1 番目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="8b09b-149">The first instance to compare.</span></span></param>
        <param name="right"><span data-ttu-id="8b09b-150">比較する 2 番目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="8b09b-150">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="8b09b-151">2 つの <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクトを比較し、値が等しくないかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-151">Compares two <see cref="T:System.Windows.Controls.ValidationResult" /> objects for value inequality.</span></span></summary>
        <returns>
          <span data-ttu-id="8b09b-152">値が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8b09b-152"><see langword="true" /> if the values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidResult">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ValidationResult ValidResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Controls.ValidationResult ValidResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.ValidResult" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ValidResult As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Controls::ValidationResult ^ ValidResult { System::Windows::Controls::ValidationResult ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b09b-153"><see cref="T:System.Windows.Controls.ValidationResult" /> の有効なインスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="8b09b-153">Gets a valid instance of <see cref="T:System.Windows.Controls.ValidationResult" />.</span></span></summary>
        <value><span data-ttu-id="8b09b-154"><see cref="T:System.Windows.Controls.ValidationResult" /> の有効なインスタンス。</span><span class="sxs-lookup"><span data-stu-id="8b09b-154">A valid instance of <see cref="T:System.Windows.Controls.ValidationResult" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>