<Type Name="Page" FullName="System.Windows.Controls.Page">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1200989638063ef9d96c09fd17579d79ef64daf4" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48757322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Page : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Page extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Page" />
  <TypeSignature Language="VB.NET" Value="Public Class Page&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class Page : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type Page = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Content")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c625d-101">Windows Internet Explorer、<see cref="T:System.Windows.Navigation.NavigationWindow" />、および <see cref="T:System.Windows.Controls.Frame" /> でナビゲーションおよびホストできるコンテンツのページをカプセル化します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c625d-101">Encapsulates a page of content that can be navigated to and hosted by Windows Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow" />, and <see cref="T:System.Windows.Controls.Frame" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-102"><xref:System.Windows.Controls.Page> コンテンツを移動でき、キーのメンバーは次のページをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="c625d-102"><xref:System.Windows.Controls.Page> encapsulates a page of content that can be navigated, and has the following key members:</span></span>  
  
-   <span data-ttu-id="c625d-103">**有効期間管理**:<xref:System.Windows.Controls.Page.KeepAlive%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-103">**Lifetime Management**: <xref:System.Windows.Controls.Page.KeepAlive%2A>.</span></span>  
  
-   <span data-ttu-id="c625d-104">**ナビゲーション**:<xref:System.Windows.Controls.Page.NavigationService%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-104">**Navigation**: <xref:System.Windows.Controls.Page.NavigationService%2A>.</span></span>  
  
-   <span data-ttu-id="c625d-105">**外観**: <xref:System.Windows.Controls.Page.Background%2A>、 <xref:System.Windows.Controls.Page.Content%2A>、 <xref:System.Windows.Controls.Page.FontFamily%2A>、 <xref:System.Windows.Controls.Page.FontSize%2A>、 <xref:System.Windows.Controls.Page.Foreground%2A>、 <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>、 <xref:System.Windows.Controls.Page.Template%2A>、<xref:System.Windows.Controls.Page.Title%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-105">**Appearance**: <xref:System.Windows.Controls.Page.Background%2A>, <xref:System.Windows.Controls.Page.Content%2A>, <xref:System.Windows.Controls.Page.FontFamily%2A>, <xref:System.Windows.Controls.Page.FontSize%2A>, <xref:System.Windows.Controls.Page.Foreground%2A>, <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>, <xref:System.Windows.Controls.Page.Template%2A>, <xref:System.Windows.Controls.Page.Title%2A>.</span></span>  
  
-   <span data-ttu-id="c625d-106">**ホスト ウィンドウの外観**: <xref:System.Windows.Controls.Page.WindowHeight%2A>、 <xref:System.Windows.Controls.Page.WindowWidth%2A>、<xref:System.Windows.Controls.Page.WindowTitle%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-106">**Host Window Appearance**: <xref:System.Windows.Controls.Page.WindowHeight%2A>, <xref:System.Windows.Controls.Page.WindowWidth%2A>, <xref:System.Windows.Controls.Page.WindowTitle%2A>.</span></span>  
  
 <span data-ttu-id="c625d-107">ページは、マークアップ、マークアップと分離コード、またはコードを使用して定義できます。</span><span class="sxs-lookup"><span data-stu-id="c625d-107">A page can be defined by using markup, markup and code-behind, or code.</span></span> <span data-ttu-id="c625d-108">1 ページでは、パッケージのコンテンツを移動するための推奨される方法は、次の理由です。</span><span class="sxs-lookup"><span data-stu-id="c625d-108">A page is the preferred way to package content for navigation, for the following reasons:</span></span>  
  
-   <span data-ttu-id="c625d-109">定義、再利用、および管理を簡単になります。</span><span class="sxs-lookup"><span data-stu-id="c625d-109">It is easy to define, reuse, and manage.</span></span>  
  
-   <span data-ttu-id="c625d-110">アクセスし、使用して、、<xref:System.Windows.Navigation.NavigationService>を移動します。</span><span class="sxs-lookup"><span data-stu-id="c625d-110">It can access and use the <xref:System.Windows.Navigation.NavigationService> that navigated to it.</span></span>  
  
-   <span data-ttu-id="c625d-111">タイトル、幅、高さ、およびナビゲーションを変更することができます[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]そのホスト ウィンドウの (<xref:System.Windows.Controls.Page.WindowTitle%2A>、 <xref:System.Windows.Controls.Page.WindowWidth%2A>、 <xref:System.Windows.Controls.Page.WindowHeight%2A>、 <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>)。</span><span class="sxs-lookup"><span data-stu-id="c625d-111">It can alter the title, width, height, and navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of its host window (<xref:System.Windows.Controls.Page.WindowTitle%2A>, <xref:System.Windows.Controls.Page.WindowWidth%2A>, <xref:System.Windows.Controls.Page.WindowHeight%2A>, <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>).</span></span>  
  
-   <span data-ttu-id="c625d-112">デザイナー サポートがある[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="c625d-112">It has designer support in [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)].</span></span>  
  
 <span data-ttu-id="c625d-113">ページをホストできる<xref:System.Windows.Window>、 <xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>、またはブラウザーから。</span><span class="sxs-lookup"><span data-stu-id="c625d-113">A page can be hosted from <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, or from a browser.</span></span> <span data-ttu-id="c625d-114">ホストされるように、ページが表示できます。</span><span class="sxs-lookup"><span data-stu-id="c625d-114">To be hosted, a page can be:</span></span>  
  
-   <span data-ttu-id="c625d-115">直接の子、 <xref:System.Windows.Window>、 <xref:System.Windows.Navigation.NavigationWindow>、または<xref:System.Windows.Controls.Frame>要素[!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="c625d-115">The direct child of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or <xref:System.Windows.Controls.Frame> element in [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)].</span></span>  
  
-   <span data-ttu-id="c625d-116">インスタンス化され、設定の値として、`Content`プロパティの<xref:System.Windows.Window>、 <xref:System.Windows.Navigation.NavigationWindow>、および<xref:System.Windows.Controls.Frame>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-116">Instantiated and set as the value of the `Content` property of <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, and <xref:System.Windows.Controls.Frame>.</span></span>  
  
-   <span data-ttu-id="c625d-117">設定として、[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]のソース、`Source`いずれかのプロパティ<xref:System.Windows.Navigation.NavigationWindow>または<xref:System.Windows.Controls.Frame>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-117">Set as the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] source of the `Source` property of either <xref:System.Windows.Navigation.NavigationWindow> or <xref:System.Windows.Controls.Frame>.</span></span>  
  
-   <span data-ttu-id="c625d-118">設定として、<xref:System.Windows.Application.StartupUri%2A>でスタンドアロン アプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="c625d-118">Set as the <xref:System.Windows.Application.StartupUri%2A> in a standalone application.</span></span>  
  
-   <span data-ttu-id="c625d-119">設定として、<xref:System.Windows.Application.StartupUri%2A>で、[!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="c625d-119">Set as the <xref:System.Windows.Application.StartupUri%2A> in an [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)].</span></span>  
  
 <span data-ttu-id="c625d-120">アプリケーションは、次のメカニズムを使用して間をナビゲートできます 2 つまたは複数のページを通常は。</span><span class="sxs-lookup"><span data-stu-id="c625d-120">An application typically has two or more pages, which can be navigated between using the following mechanisms:</span></span>  
  
-   <span data-ttu-id="c625d-121">使用して宣言によって<xref:System.Windows.Documents.Hyperlink>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-121">Declaratively by using <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
-   <span data-ttu-id="c625d-122">使用してプログラムで<xref:System.Windows.Navigation.NavigationService>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-122">Programmatically by using <xref:System.Windows.Navigation.NavigationService>.</span></span>  
  
-   <span data-ttu-id="c625d-123">ナビゲーションを使用して、視覚的に[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]など、ホストの[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]、 <xref:System.Windows.Navigation.NavigationWindow>、および<xref:System.Windows.Controls.Frame>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-123">Visually by using the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of the host, including [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], <xref:System.Windows.Navigation.NavigationWindow>, and <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="c625d-124">ページ関数を使用して構造化ナビゲーション (<xref:System.Windows.Navigation.PageFunction%601>) を参照してください[構造化ナビゲーションの概要](~/docs/framework/wpf/app-development/structured-navigation-overview.md)と[ナビゲーション トポロジの概要](~/docs/framework/wpf/app-development/navigation-topologies-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="c625d-124">For structured navigation using page functions (<xref:System.Windows.Navigation.PageFunction%601>), see [Structured Navigation Overview](~/docs/framework/wpf/app-development/structured-navigation-overview.md) and [Navigation Topologies Overview](~/docs/framework/wpf/app-development/navigation-topologies-overview.md).</span></span>  
  
 <span data-ttu-id="c625d-125">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c625d-125">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="c625d-126">プロパティが既定のスタイルによって設定されている場合は、アプリケーションでコントロールが表示されたら、既定値から、プロパティが変更可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c625d-126">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="c625d-127">デスクトップ テーマでは、アプリケーションが実行されている場合は、使用、既定のスタイルが決定されます。</span><span class="sxs-lookup"><span data-stu-id="c625d-127">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="c625d-128">詳細については、次を参照してください。[既定の WPF テーマ](http://go.microsoft.com/fwlink/?LinkID=158252)します。</span><span class="sxs-lookup"><span data-stu-id="c625d-128">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c625d-129">次の例は、標準的なページのマークアップのみを使用して定義します。</span><span class="sxs-lookup"><span data-stu-id="c625d-129">The following example shows how a standard page is defined using only markup:</span></span>  
  
 [!code-xaml[PageSnippets#MarkupPageMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/MarkupPage.xaml#markuppagemarkup)]  
  
 <span data-ttu-id="c625d-130">コードのみを使用して標準的なページを定義する方法を例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="c625d-130">The following example shows how a standard page is defined using only code:</span></span>  
  
 [!code-csharp[PageSnippets#CodePageCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/CodePage.cs#codepagecodebehind)]
 [!code-vb[PageSnippets#CodePageCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageSnippets/visualbasic/codepage.vb#codepagecodebehind)]  
  
 <span data-ttu-id="c625d-131">次の例は、標準的なページのマークアップと分離コードの組み合わせを使用して定義します。</span><span class="sxs-lookup"><span data-stu-id="c625d-131">The following example shows how a standard page is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[PageSnippets#MarkupAndCodeBehindPageMARKUP](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/MarkupAndCodeBehindPage.xaml#markupandcodebehindpagemarkup)]  
  
 [!code-csharp[PageSnippets#MarkupAndCodeBehindPageCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageSnippets/CSharp/MarkupAndCodeBehindPage.xaml.cs#markupandcodebehindpagecodebehind)]
 [!code-vb[PageSnippets#MarkupAndCodeBehindPageCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageSnippets/visualbasic/markupandcodebehindpage.xaml.vb#markupandcodebehindpagecodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Navigation.PageFunction`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Page ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Page();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c625d-132">
            <see cref="T:System.Windows.Controls.Page" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-132">Initializes a new instance of the <see cref="T:System.Windows.Controls.Page" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-133">場合、<xref:System.Windows.Controls.Page>がされるキープ アライブされず (を参照してください<xref:System.Windows.Controls.Page.KeepAlive%2A>)、許可する既定のコンス トラクターを実装する必要がある[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]に背面に移動したときの新しいインスタンスを作成またはナビゲーション履歴を転送します。</span><span class="sxs-lookup"><span data-stu-id="c625d-133">If a <xref:System.Windows.Controls.Page> is not being kept alive (see <xref:System.Windows.Controls.Page.KeepAlive%2A>), it needs to implement a default constructor to allow [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] to create a new instance of it when navigated to in back or forward navigation history.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="page.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds">
          <span data-ttu-id="c625d-134">子要素の配置に使用されるサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-134">The size to use to arrange the child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c625d-135">
            <see cref="T:System.Windows.Controls.Page" /> のコンテンツ (子要素) を配置します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-135">Arranges the content (child elements) of the <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c625d-136">ページの配置後のサイズを表す <see cref="T:System.Windows.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-136">A <see cref="T:System.Windows.Size" /> that represents the arranged size of the page.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Page.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-137">
            <see cref="T:System.Windows.Controls.Page" /> の背景を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-137">Gets or sets the background for a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-138">
            <see cref="T:System.Windows.Media.Brush" /> の背景を描画するために使用される <see cref="T:System.Windows.Controls.Page" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-138">The <see cref="T:System.Windows.Media.Brush" /> that <see cref="T:System.Windows.Controls.Page" /> uses to paint its background.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PageBackground"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c625d-139">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c625d-139">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c625d-140">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="c625d-140">Identifier field</span></span>|<xref:System.Windows.Controls.Page.BackgroundProperty>|  
|<span data-ttu-id="c625d-141">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="c625d-141">Metadata properties set to `true`</span></span>|<span data-ttu-id="c625d-142"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="c625d-142"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-143">
            <see cref="P:System.Windows.Controls.Page.Background" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-143">Identifies the <see cref="P:System.Windows.Controls.Page.Background" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Controls.Page.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-144">
            <see cref="T:System.Windows.Controls.Page" /> のコンテンツを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-144">Gets or sets the content of a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-145">
            <see cref="T:System.Windows.Controls.Page" /> のコンテンツが格納されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-145">An object that contains the content of a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
          <span data-ttu-id="c625d-146">既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-146">The default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-147">A <xref:System.Windows.Controls.Page> 1 つの子要素のみを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="c625d-147">A <xref:System.Windows.Controls.Page> can have only a single child element.</span></span> <span data-ttu-id="c625d-148">上の他のすべての要素を<xref:System.Windows.Controls.Page>その要素の子孫である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c625d-148">All other elements on a <xref:System.Windows.Controls.Page> must be descendents of that element.</span></span> <span data-ttu-id="c625d-149">コンテンツでは、通常、<xref:System.Windows.Controls.Page>レイアウト要素をホスト-など<xref:System.Windows.Controls.Grid>、<xref:System.Windows.Controls.StackPanel>と<xref:System.Windows.Controls.DockPanel>-のコンテンツをホストする、 <xref:System.Windows.Controls.Page>。</span><span class="sxs-lookup"><span data-stu-id="c625d-149">Typically, the content of a <xref:System.Windows.Controls.Page> hosts a layout element—such as <xref:System.Windows.Controls.Grid>, <xref:System.Windows.Controls.StackPanel>, and <xref:System.Windows.Controls.DockPanel>—that hosts the content of the <xref:System.Windows.Controls.Page>.</span></span>  
  
<a name="dependencyPropertyInfo_PageContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c625d-150">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c625d-150">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c625d-151">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="c625d-151">Identifier field</span></span>|<xref:System.Windows.Controls.Page.ContentProperty>|  
|<span data-ttu-id="c625d-152">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="c625d-152">Metadata properties set to `true`</span></span>|<span data-ttu-id="c625d-153">なし</span><span class="sxs-lookup"><span data-stu-id="c625d-153">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.ContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-154">
            <see cref="P:System.Windows.Controls.Page.Content" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-154">Identifies the <see cref="P:System.Windows.Controls.Page.Content" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamily">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamily FontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamily FontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.FontFamily" />
      <MemberSignature Language="VB.NET" Value="Public Property FontFamily As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamily ^ FontFamily { System::Windows::Media::FontFamily ^ get(); void set(System::Windows::Media::FontFamily ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FontFamily : System.Windows.Media.FontFamily with get, set" Usage="System.Windows.Controls.Page.FontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-155">指定したフォント ファミリの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-155">Gets or sets the name of the specified font family.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-156">
            <see cref="T:System.Windows.Media.FontFamily" /> のコンテンツのフォント ファミリである <see cref="T:System.Windows.Controls.Page" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-156">A <see cref="T:System.Windows.Media.FontFamily" /> that is the font family for the content of a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
          <span data-ttu-id="c625d-157">既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-157">The default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PageFontFamily"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c625d-158">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c625d-158">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c625d-159">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="c625d-159">Identifier field</span></span>|<xref:System.Windows.Controls.Page.FontFamilyProperty>|  
|<span data-ttu-id="c625d-160">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="c625d-160">Metadata properties set to `true`</span></span>|<span data-ttu-id="c625d-161"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="c625d-161"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamilyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontFamilyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontFamilyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.FontFamilyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontFamilyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontFamilyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontFamilyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.FontFamilyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-162">
            <see cref="P:System.Windows.Controls.Page.FontFamily" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-162">Identifies the <see cref="P:System.Windows.Controls.Page.FontFamily" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-163"><xref:System.Windows.Controls.Page.FontFamily%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="c625d-163">The identifier for the <xref:System.Windows.Controls.Page.FontFamily%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="c625d-164">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="c625d-164">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSize">
      <MemberSignature Language="C#" Value="public double FontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.FontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property FontSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double FontSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.FontSize : double with get, set" Usage="System.Windows.Controls.Page.FontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.FontSizeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-165">フォント サイズを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-165">Gets or sets the font size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-166">
            <see cref="T:System.Windows.Controls.Page" /> のコンテンツのフォント サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-166">The font size for the content of a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
          <span data-ttu-id="c625d-167">既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontSize" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-167">The default is <see cref="P:System.Windows.SystemFonts.MessageFontSize" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-168">フォント サイズは正の数との範囲内である必要があります、<xref:System.Windows.SystemFonts.MessageFontSize%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-168">The font size must be a positive number and in the range of the <xref:System.Windows.SystemFonts.MessageFontSize%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_PageFontSize"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c625d-169">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c625d-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c625d-170">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="c625d-170">Identifier field</span></span>|<xref:System.Windows.Controls.Page.FontSizeProperty>|  
|<span data-ttu-id="c625d-171">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="c625d-171">Metadata properties set to `true`</span></span>|<span data-ttu-id="c625d-172"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="c625d-172"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.FontSizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FontSizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FontSizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FontSizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.FontSizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-173">
            <see cref="P:System.Windows.Controls.Page.FontSize" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-173">Identifies the <see cref="P:System.Windows.Controls.Page.FontSize" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-174"><xref:System.Windows.Controls.Page.FontSize%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="c625d-174">The identifier for the <xref:System.Windows.Controls.Page.FontSize%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="c625d-175">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="c625d-175">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Foreground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Foreground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Foreground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Foreground" />
      <MemberSignature Language="VB.NET" Value="Public Property Foreground As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Foreground { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Foreground : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Page.Foreground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-176">
            <see cref="T:System.Windows.Controls.Page" /> の前景を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-176">Gets or sets the foreground for a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-177">
            <see cref="T:System.Windows.Media.Brush" /> の前景を描画するために使用される <see cref="T:System.Windows.Controls.Page" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-177">The <see cref="T:System.Windows.Media.Brush" /> that <see cref="T:System.Windows.Controls.Page" /> uses to paint its foreground.</span>
          </span>
          <span data-ttu-id="c625d-178">既定値は、<see cref="P:System.Windows.Media.Brushes.Black" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-178">The default is <see cref="P:System.Windows.Media.Brushes.Black" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PageForeground"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c625d-179">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c625d-179">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c625d-180">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="c625d-180">Identifier field</span></span>|<xref:System.Windows.Controls.Page.ForegroundProperty>|  
|<span data-ttu-id="c625d-181">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="c625d-181">Metadata properties set to `true`</span></span>|<span data-ttu-id="c625d-182"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="c625d-182"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForegroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForegroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.ForegroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForegroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForegroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ForegroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.ForegroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-183">
            <see cref="P:System.Windows.Controls.Page.Foreground" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-183">Identifies the <see cref="P:System.Windows.Controls.Page.Foreground" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-184"><xref:System.Windows.Controls.Page.Foreground%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="c625d-184">The identifier for the <xref:System.Windows.Controls.Page.Foreground%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="c625d-185">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="c625d-185">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Windows.Controls.Page.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-186">
            <see cref="T:System.Windows.Controls.Page" /> のインスタンスがナビゲーション履歴に保持されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-186">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Page" /> instance is retained in navigation history.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-187">ナビゲーション履歴に <see cref="T:System.Windows.Controls.Page" /> のインスタンスを保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-187">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Page" /> instance is retained in navigation history; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c625d-188">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-188">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-189">ページが最初の新しいインスタンスを移動すると、<xref:System.Windows.Controls.Page>クラスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="c625d-189">When a page is first navigated to, a new instance of the <xref:System.Windows.Controls.Page> class is created.</span></span> <span data-ttu-id="c625d-190">(戻るまたは進む) からページが移動したとき、ページのエントリは、ナビゲーション履歴に追加されます。</span><span class="sxs-lookup"><span data-stu-id="c625d-190">When a page is navigated away from (either back or forward), an entry for the page is added to navigation history.</span></span> <span data-ttu-id="c625d-191">既定では、エントリは、ページ オブジェクトを参照していません。</span><span class="sxs-lookup"><span data-stu-id="c625d-191">By default, the entry does not reference the page object.</span></span> <span data-ttu-id="c625d-192">代わりに、エントリには、ページのパック uniform resource identifier (URI) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c625d-192">Instead, the entry contains a pack uniform resource identifier (URI) for the page.</span></span> <span data-ttu-id="c625d-193">ページのエントリを移動して、ナビゲーション履歴を使用する、パック URI を使用して、ページの新しいインスタンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="c625d-193">When the entry for the page is navigated to using navigation history, the pack URI is used to create a new instance of the page.</span></span> <span data-ttu-id="c625d-194">この動作は、過剰なメモリの使用を回避するために、既定値: 特に重要なコンテンツ量のメモリを簡単に使用できるページのインスタンスを保持します。</span><span class="sxs-lookup"><span data-stu-id="c625d-194">This behavior is the default, to avoid excessive memory use: retaining page instances can quickly consume memory, particularly those with a nontrivial amount of content.</span></span> <span data-ttu-id="c625d-195">この問題は、バックエンドに格納できるエントリの数とのナビゲーション履歴スタックを前方に制限がないという事実によって拡張されました。</span><span class="sxs-lookup"><span data-stu-id="c625d-195">This problem is augmented by the fact that there is no limit to the number of entries that can be stored in the back and forward stacks of navigation history.</span></span> <span data-ttu-id="c625d-196">これに対し、ページのパック Uri を格納すると、メモリ消費量の実質的な影響はありませんが、します。</span><span class="sxs-lookup"><span data-stu-id="c625d-196">In contrast, storing pack URIs for pages has virtually no impact on memory consumption.</span></span>  
  
 <span data-ttu-id="c625d-197">ページの新しいインスタンスを作成する主な副作用は、ページの状態が別に記憶のページの 1 つのインスタンスからされません。</span><span class="sxs-lookup"><span data-stu-id="c625d-197">The main side effect of creating new instances of a page is that page state is not remembered from one instance of a page to another.</span></span> <span data-ttu-id="c625d-198">このような場合は、Windows Presentation Foundation は、状態を記憶するためのいくつかの手法を提供します。</span><span class="sxs-lookup"><span data-stu-id="c625d-198">In these cases, Windows Presentation Foundation offers several techniques for remembering state.</span></span>  
  
 <span data-ttu-id="c625d-199">ページを維持するには設定、<xref:System.Windows.Controls.Page.KeepAlive%2A>プロパティを`true`(既定値は`false`)。</span><span class="sxs-lookup"><span data-stu-id="c625d-199">To keep a page alive, you set the <xref:System.Windows.Controls.Page.KeepAlive%2A> property to `true` (the default is `false`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c625d-200">インスタンスを作成し、コードのみを使用してに移動するページ (たとえば、呼び出し<xref:System.Windows.Navigation.NavigationService.Navigate%2A>)、保持では自動的に。</span><span class="sxs-lookup"><span data-stu-id="c625d-200">Pages that are instantiated and navigated to using only code (for example, calling <xref:System.Windows.Navigation.NavigationService.Navigate%2A>), are automatically kept alive.</span></span>  
  
 <span data-ttu-id="c625d-201">設定はしないで<xref:System.Windows.Controls.Page.KeepAlive%2A>に`true`する必要がある場合を除き、します。</span><span class="sxs-lookup"><span data-stu-id="c625d-201">You should avoid setting <xref:System.Windows.Controls.Page.KeepAlive%2A> to `true` unless you need to:</span></span>  
  
-   <span data-ttu-id="c625d-202">大量のコンテンツをページには、インスタンス化に時間がかかることがあります。</span><span class="sxs-lookup"><span data-stu-id="c625d-202">When a page has a lot of content, it may take a long time to instantiate.</span></span> <span data-ttu-id="c625d-203">場合は、ページがキープ アライブされず、ページに頻繁にナビゲートすると、ページを常にインスタンス化のコストは、ユーザー エクスペリエンスに悪影響を及ぼす可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c625d-203">If the page is not kept alive, and the page is frequently navigated to, the cost of constantly instantiating the page may have a negative impact on the user experience.</span></span> <span data-ttu-id="c625d-204">ただし、パフォーマンスの観点からする必要があります、既定の設定に依存し、アプリケーションのパフォーマンスのプロファイルテストは、読み込み時間、アプリケーションに必要な範囲の下にあるページを識別する、有効のまま保持するように設定する、問題を解決する方法の 1 つことがあります。</span><span class="sxs-lookup"><span data-stu-id="c625d-204">However, from a performance perspective, you should rely on the default settings and profile your application's performance; if testing identifies pages with load times that fall below the range required for your application, configuring the pages to be kept alive may be one way to solve the problem.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c625d-205">ナビゲーション履歴には有効のまま保持するページのエントリは保持されません、[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]との間でナビゲートする場合に戻すと、[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="c625d-205">Entries for pages that are kept alive are not retained in navigation history of an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] if a user navigates away from and back to the [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)].</span></span> <span data-ttu-id="c625d-206">ナビゲーション履歴には、キープ ア ライブされないはページの履歴項目のみが保持されます。</span><span class="sxs-lookup"><span data-stu-id="c625d-206">Only journal entries for pages that are not kept alive are retained in navigation history.</span></span>  
  
<a name="dependencyPropertyInfo_PageKeepAlive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c625d-207">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c625d-207">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c625d-208">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="c625d-208">Identifier field</span></span>|<xref:System.Windows.Controls.Page.KeepAliveProperty>|  
|<span data-ttu-id="c625d-209">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="c625d-209">Metadata properties set to `true`</span></span>|<span data-ttu-id="c625d-210">なし</span><span class="sxs-lookup"><span data-stu-id="c625d-210">None</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="c625d-211">この依存関係プロパティのメタデータ型が<xref:System.Windows.PropertyMetadata>ではなく、<xref:System.Windows.FrameworkPropertyMetadata>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-211">The metadata type on this dependency property is <xref:System.Windows.PropertyMetadata>, not <xref:System.Windows.FrameworkPropertyMetadata>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c625d-212">次の例は、使用する方法を示します[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]のインスタンスを保持する、<xref:System.Windows.Controls.Page>複数ナビゲーション間をまたいでクラス。</span><span class="sxs-lookup"><span data-stu-id="c625d-212">The following example shows how to use [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] to retain an instance of the <xref:System.Windows.Controls.Page> class across multiple navigations.</span></span>  
  
 [!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAML1](~/samples/snippets/xaml/VS_Snippets_Wpf/PageKeepAliveSnippets/XAML/HomePage.xaml#setpagekeepalivexaml1)]  
[!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAML2](~/samples/snippets/xaml/VS_Snippets_Wpf/PageKeepAliveSnippets/XAML/HomePage.xaml#setpagekeepalivexaml2)]  
  
 [!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAMLForLang1](~/samples/snippets/csharp/VS_Snippets_Wpf/PageKeepAliveSnippets/CSharp/HomePage.xaml#setpagekeepalivexamlforlang1)]  
[!code-xaml[PageKeepAliveSnippets#SetPageKeepAliveXAMLForLang2](~/samples/snippets/csharp/VS_Snippets_Wpf/PageKeepAliveSnippets/CSharp/HomePage.xaml#setpagekeepalivexamlforlang2)]  
  
 [!code-csharp[PageKeepAliveSnippets#SetPageKeepAliveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageKeepAliveSnippets/CSharp/HomePage.xaml.cs#setpagekeepalivecodebehind)]
 [!code-vb[PageKeepAliveSnippets#SetPageKeepAliveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageKeepAliveSnippets/visualbasic/homepage.xaml.vb#setpagekeepalivecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.JournalEntry.KeepAlive" />
      </Docs>
    </Member>
    <Member MemberName="KeepAliveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeepAliveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeepAliveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.KeepAliveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeepAliveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeepAliveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeepAliveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.KeepAliveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-213">
            <see cref="P:System.Windows.Controls.Page.KeepAlive" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-213">Identifies the <see cref="P:System.Windows.Controls.Page.KeepAlive" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-214"><xref:System.Windows.Controls.Page.KeepAlive%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="c625d-214">The identifier for the <xref:System.Windows.Controls.Page.KeepAlive%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="c625d-215">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="c625d-215">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.Page.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-216">
            <see cref="T:System.Windows.Controls.Page" /> の論理上の子要素に対する列挙子を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-216">Returns an enumerator for the logical child elements of a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-217">
            <see cref="T:System.Collections.IEnumerator" /> の論理上の子要素に対する <see cref="T:System.Windows.Controls.Page" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-217">The <see cref="T:System.Collections.IEnumerator" /> for the logical child elements of a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="page.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <span data-ttu-id="c625d-218">ウィンドウで子に割り当てることができる領域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-218">The available area that the window can give to its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c625d-219">
            <see cref="T:System.Windows.Controls.Page" /> の子要素のサイズを測定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-219">Measures the child elements of the <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c625d-220">ウィンドウの実際のサイズである <see cref="T:System.Windows.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-220">A <see cref="T:System.Windows.Size" /> that is the actual size of the window.</span>
          </span>
          <span data-ttu-id="c625d-221">親がスクロール バーを追加する必要がある場合などは、このメソッドにより、ウィンドウの実際のサイズより大きな値が返されることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-221">The method may return a larger value, in which case the parent may need to add scroll bars.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationService">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationService NavigationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.NavigationService NavigationService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.NavigationService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationService As NavigationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Navigation::NavigationService ^ NavigationService { System::Windows::Navigation::NavigationService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigationService : System.Windows.Navigation.NavigationService" Usage="System.Windows.Controls.Page.NavigationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-222">ページのホストがナビゲーションの管理のために使用しているナビゲーション サービスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-222">Gets the navigation service that the host of the page is using to manage navigation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-223">ページのホストがナビゲーションの管理のために使用している <see cref="T:System.Windows.Navigation.NavigationService" /> オブジェクト。ホストがナビゲーションをサポートしない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-223">The <see cref="T:System.Windows.Navigation.NavigationService" /> object that the host of the page is using to manage navigation, or <see langword="null" /> if the host does not support navigation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-224">など、ホストの複数の種類でホストされるページ<xref:System.Windows.Window>、 <xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>、およびブラウザー。</span><span class="sxs-lookup"><span data-stu-id="c625d-224">Pages can be hosted by multiple types of hosts, including <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, and a browser.</span></span>  
  
 <span data-ttu-id="c625d-225">多くの場合、ページは、ページのナビゲーションのサポートを提供する、ホストのナビゲーションと統合する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c625d-225">Pages often need to integrate with their host's navigation to provide in-page navigation support.</span></span> <span data-ttu-id="c625d-226">ただし、ため、ページはご存知ないかもしれませんが、ホストのある実行時にそのためには、ホストのナビゲーションのメンバーと直接統合ことはできません。</span><span class="sxs-lookup"><span data-stu-id="c625d-226">However, because a page may not know what its host will be at run time, it cannot integrate directly with its host's navigation members to do so.</span></span>  
  
 <span data-ttu-id="c625d-227">ブラウザー スタイルのナビゲーションをサポートしでカプセル化するサービスは、ナビゲーション サービスを使用する代わりに、試行できます、<xref:System.Windows.Navigation.NavigationService>クラス。</span><span class="sxs-lookup"><span data-stu-id="c625d-227">Instead, it can attempt to use a navigation service, which is a service that supports browser-style navigation and is encapsulated by the <xref:System.Windows.Navigation.NavigationService> class.</span></span> <span data-ttu-id="c625d-228">独自に作成することはできません<xref:System.Windows.Navigation.NavigationService>インスタンス、ただしします。</span><span class="sxs-lookup"><span data-stu-id="c625d-228">You cannot create your own <xref:System.Windows.Navigation.NavigationService> instance, though.</span></span> <span data-ttu-id="c625d-229">代わりに、ホストの種類をなど<xref:System.Windows.Navigation.NavigationWindow>、 <xref:System.Windows.Controls.Frame>、ブラウザーを作成、独自または<xref:System.Windows.Navigation.NavigationService>インスタンスからアクセスできる、<xref:System.Windows.Controls.Page.NavigationService%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="c625d-229">Instead, host types such as <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, or a browser create their own <xref:System.Windows.Navigation.NavigationService> instance that you can access from the <xref:System.Windows.Controls.Page.NavigationService%2A> property.</span></span>  
  
 <span data-ttu-id="c625d-230">ナビゲーション サービスから返される、<xref:System.Windows.Controls.Page.NavigationService%2A>プロパティは、のインスタンス、<xref:System.Windows.Navigation.NavigationService>ビジュアル ツリーを最初のナビゲーターによって管理されているクラス。</span><span class="sxs-lookup"><span data-stu-id="c625d-230">The navigation service that is returned from the <xref:System.Windows.Controls.Page.NavigationService%2A> property is the instance of the <xref:System.Windows.Navigation.NavigationService> class that is managed by the first navigator up the visual tree.</span></span> <span data-ttu-id="c625d-231">1 つが存在しない場合`null`返されるか、ページのホストがナビゲーションをサポートしていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="c625d-231">If one is not found, `null` is returned, indicating a page's host does not support navigation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c625d-232"><xref:System.Windows.Window>クラスは、ナビゲーションをサポートしていませんし、ナビゲーション サービスを提供しません。</span><span class="sxs-lookup"><span data-stu-id="c625d-232">The <xref:System.Windows.Window> class does not support navigation and does not provide a navigation service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c625d-233">どのページを確認ナビゲーション サービスが使用可能な場合はし、そうである場合は使用前のページに戻るには、次の例です。</span><span class="sxs-lookup"><span data-stu-id="c625d-233">The following example shows how a page can check if a navigation service is available and, if so, use it to navigate back to the previous page.</span></span>  
  
 [!code-csharp[PageNavigationServiceSnippets#GetPageNavigationServiceCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageNavigationServiceSnippets/CSharp/HomePage.xaml.cs#getpagenavigationservicecodebehind)]
 [!code-vb[PageNavigationServiceSnippets#GetPageNavigationServiceCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageNavigationServiceSnippets/visualbasic/homepage.xaml.vb#getpagenavigationservicecodebehind)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="abstract member OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit&#xA;override this.OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="page.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate">
          <span data-ttu-id="c625d-234">古いテンプレート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-234">The old template.</span>
          </span>
        </param>
        <param name="newTemplate">
          <span data-ttu-id="c625d-235">新しいテンプレート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-235">The new template.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c625d-236">
            <see cref="T:System.Windows.Controls.Page" /> のテンプレートが変更されたときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-236">Called when the template for a <see cref="T:System.Windows.Controls.Page" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-237">以下を参照してください。<xref:System.Windows.Controls.Control.OnTemplateChanged%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c625d-237">See <xref:System.Windows.Controls.Control.OnTemplateChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Page.Template" />
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="page.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="c625d-238">直前の親。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-238">The previous parent.</span>
          </span>
          <span data-ttu-id="c625d-239">
            <see cref="T:System.Windows.DependencyObject" /> の直前の親がなかった場合は <see langword="null" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-239">Set to <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c625d-240">
            <see cref="T:System.Windows.Controls.Page" /> の親が変更されると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-240">Called when the parent of the <see cref="T:System.Windows.Controls.Page" /> is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.UIElement.OnVisualParentChanged%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c625d-241">新しい親が <see cref="T:System.Windows.Window" /> でも <see cref="T:System.Windows.Controls.Frame" /> でもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-241">The new parent is neither a <see cref="T:System.Windows.Window" /> nor a <see cref="T:System.Windows.Controls.Frame" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeShowsNavigationUI">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeShowsNavigationUI ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeShowsNavigationUI() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeShowsNavigationUI" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeShowsNavigationUI () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeShowsNavigationUI();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeShowsNavigationUI : unit -&gt; bool" Usage="page.ShouldSerializeShowsNavigationUI " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c625d-242">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> プロパティのシリアル化動作の決定を許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-242">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c625d-243">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-243">
              <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTitle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTitle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTitle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeTitle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTitle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTitle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTitle : unit -&gt; bool" Usage="page.ShouldSerializeTitle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c625d-244">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.Title" /> プロパティのシリアル化動作の決定を許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-244">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.Title" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c625d-245">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-245">
              <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWindowHeight">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWindowHeight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWindowHeight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeWindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWindowHeight () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWindowHeight();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWindowHeight : unit -&gt; bool" Usage="page.ShouldSerializeWindowHeight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c625d-246">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.WindowHeight" /> プロパティのシリアル化動作の決定を許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-246">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowHeight" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c625d-247">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-247">
              <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWindowTitle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWindowTitle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWindowTitle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeWindowTitle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWindowTitle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWindowTitle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWindowTitle : unit -&gt; bool" Usage="page.ShouldSerializeWindowTitle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c625d-248">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.WindowTitle" /> プロパティのシリアル化動作の決定を許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-248">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowTitle" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c625d-249">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-249">
              <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeWindowWidth">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeWindowWidth ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeWindowWidth() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.ShouldSerializeWindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeWindowWidth () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeWindowWidth();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeWindowWidth : unit -&gt; bool" Usage="page.ShouldSerializeWindowWidth " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c625d-250">派生クラスに対し、<see cref="P:System.Windows.Controls.Page.WindowWidth" /> プロパティのシリアル化動作の決定を許可します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-250">Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowWidth" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c625d-251">コンテンツをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-251">
              <see langword="true" /> if the content should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowsNavigationUI">
      <MemberSignature Language="C#" Value="public bool ShowsNavigationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowsNavigationUI" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.ShowsNavigationUI" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowsNavigationUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowsNavigationUI { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowsNavigationUI : bool with get, set" Usage="System.Windows.Controls.Page.ShowsNavigationUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-252">[!INCLUDE[TLA#tla_ie6](~/includes/tlasharptla-ie6-md.md)] の <see cref="T:System.Windows.Navigation.NavigationWindow" /> のナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] を表示するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-252">Gets or sets a value that indicates whether the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of a <see cref="T:System.Windows.Navigation.NavigationWindow" /> on [!INCLUDE[TLA#tla_ie6](~/includes/tlasharptla-ie6-md.md)] is visible.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-253">ホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> のナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] が表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-253">
              <see langword="true" /> if the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of a host <see cref="T:System.Windows.Navigation.NavigationWindow" /> is visible; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-254"><xref:System.Windows.Navigation.NavigationWindow> ナビゲーションを表示します。[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]既定で有効にするブラウザー スタイル forwards と backwards のナビゲーションにします。</span><span class="sxs-lookup"><span data-stu-id="c625d-254"><xref:System.Windows.Navigation.NavigationWindow> displays navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] by default to enable browser-style forwards and backwards navigation.</span></span> <span data-ttu-id="c625d-255">ページとして設定されている場合、 <xref:System.Windows.Application.StartupUri%2A>、<xref:System.Windows.Application>が自動的に開きます、<xref:System.Windows.Navigation.NavigationWindow>でページをホストします。</span><span class="sxs-lookup"><span data-stu-id="c625d-255">If a page is set as the <xref:System.Windows.Application.StartupUri%2A>, <xref:System.Windows.Application> automatically opens a <xref:System.Windows.Navigation.NavigationWindow> to host the page in.</span></span> <span data-ttu-id="c625d-256">かどうか、ページは、既定値を使用しないしない<xref:System.Windows.Navigation.NavigationWindow>ナビゲーション[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]、設定できます<xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>に`false`します。</span><span class="sxs-lookup"><span data-stu-id="c625d-256">If the page does not want to use the default <xref:System.Windows.Navigation.NavigationWindow> navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], it can set <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c625d-257">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]は、ナビゲーションと統合されません[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]の[!INCLUDE[TLA#tla_ie6](~/includes/tlasharptla-ie6-md.md)]、独自のナビゲーションを提供します[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]、表示または設定によって非表示にするには、これ<xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-257">Because [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] does not integrate with the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for [!INCLUDE[TLA#tla_ie6](~/includes/tlasharptla-ie6-md.md)], it provides its own navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], which can be shown or hidden by setting <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>.</span></span> [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] <span data-ttu-id="c625d-258">統合は、[!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)]ナビゲーション[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]ので設定<xref:System.Windows.Controls.Page.ShowsNavigationUI%2A>内のページに[!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)]も何も起こりません。</span><span class="sxs-lookup"><span data-stu-id="c625d-258"> does integrate with the [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], so setting <xref:System.Windows.Controls.Page.ShowsNavigationUI%2A> on pages in [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c625d-259">次の例は、使用する方法を示します[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]ナビゲーションを非表示にする[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]の<xref:System.Windows.Navigation.NavigationWindow>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-259">The following example shows how to use [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] to hide the navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] of a <xref:System.Windows.Navigation.NavigationWindow>.</span></span>  
  
 [!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAML1](~/samples/snippets/xaml/VS_Snippets_Wpf/PageShowsNavigationUISnippets/XAML/HomePage.xaml#setpageshowsnavigationuixaml1)]  
[!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAML2](~/samples/snippets/xaml/VS_Snippets_Wpf/PageShowsNavigationUISnippets/XAML/HomePage.xaml#setpageshowsnavigationuixaml2)]  
  
 [!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAMLLang1](~/samples/snippets/csharp/VS_Snippets_Wpf/PageShowsNavigationUISnippets/CSharp/HomePage.xaml#setpageshowsnavigationuixamllang1)]  
[!code-xaml[PageShowsNavigationUISnippets#SetPageShowsNavigationUIXAMLLang2](~/samples/snippets/csharp/VS_Snippets_Wpf/PageShowsNavigationUISnippets/CSharp/HomePage.xaml#setpageshowsnavigationuixamllang2)]  
  
 [!code-csharp[PageShowsNavigationUISnippets#SetPageShowsNavigationUICODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/PageShowsNavigationUISnippets/CSharp/HomePage.xaml.cs#setpageshowsnavigationuicodebehind)]
 [!code-vb[PageShowsNavigationUISnippets#SetPageShowsNavigationUICODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PageShowsNavigationUISnippets/visualbasic/homepage.xaml.vb#setpageshowsnavigationuicodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c625d-260">
            <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" />、<see cref="T:System.Windows.Controls.Page" />、またはブラウザーでホストされていない <see cref="T:System.Windows.Window" /> インスタンスで <see cref="T:System.Windows.Navigation.NavigationWindow" /> プロパティが検査されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-260">The <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI" /> property is inspected on a <see cref="T:System.Windows.Controls.Page" /> instance that is not hosted by a <see cref="T:System.Windows.Window" />, <see cref="T:System.Windows.Navigation.NavigationWindow" />, or a browser.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (obj As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ obj) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="c625d-261">追加する子オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-261">The child object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c625d-262">このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-262">For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-263">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c625d-263">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c625d-264">これは、<xref:System.Windows.Controls.Page> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c625d-264">It can be used only when the <xref:System.Windows.Controls.Page> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string str);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Page.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (str As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ str) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="c625d-265">オブジェクトに追加するテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-265">The text to add to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c625d-266">このメンバーの詳細については、「<see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-266">For a description of this member, see <see cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-267">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="c625d-267">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c625d-268">これは、<xref:System.Windows.Controls.Page> のインスタンスが <xref:System.Windows.Markup.IAddChild> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="c625d-268">It can be used only when the <xref:System.Windows.Controls.Page> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Template">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ControlTemplate Template { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ControlTemplate Template" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Template" />
      <MemberSignature Language="VB.NET" Value="Public Property Template As ControlTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ControlTemplate ^ Template { System::Windows::Controls::ControlTemplate ^ get(); void set(System::Windows::Controls::ControlTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Template : System.Windows.Controls.ControlTemplate with get, set" Usage="System.Windows.Controls.Page.Template" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ControlTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-269">
            <see cref="T:System.Windows.Controls.Page" /> のコントロール テンプレートを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-269">Gets or sets the control template for a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-270">
            <see cref="T:System.Windows.Controls.ControlTemplate" /> の <see cref="T:System.Windows.Controls.Page" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-270">The <see cref="T:System.Windows.Controls.ControlTemplate" /> for a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ContentTemplate"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c625d-271">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="c625d-271">XAML Attribute Usage</span></span>  
  
```  
<object Template="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlValues_ContentTemplate"></a>   
## <a name="xaml-values"></a><span data-ttu-id="c625d-272">XAML 値</span><span class="sxs-lookup"><span data-stu-id="c625d-272">XAML Values</span></span>  
 <span data-ttu-id="c625d-273">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="c625d-273">*resourceExtension*</span></span>  
 <span data-ttu-id="c625d-274">か、テンプレート リソースを参照する方法を示すマークアップ拡張機能`StaticResource`または`DynamicResource`します。</span><span class="sxs-lookup"><span data-stu-id="c625d-274">A markup extension that identifies how to reference the template resource, either `StaticResource` or `DynamicResource`.</span></span> <span data-ttu-id="c625d-275">参照してください[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)します。</span><span class="sxs-lookup"><span data-stu-id="c625d-275">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="c625d-276">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="c625d-276">*styleResourceKey*</span></span>  
 <span data-ttu-id="c625d-277">要求されたテンプレート セレクターを識別するキー。</span><span class="sxs-lookup"><span data-stu-id="c625d-277">The key that identifies the requested template selector.</span></span> <span data-ttu-id="c625d-278">このキーは、既存のリソースで、<xref:System.Windows.ResourceDictionary>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-278">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c625d-279">プロパティ要素構文は技術的に可能であれば、推奨されません。</span><span class="sxs-lookup"><span data-stu-id="c625d-279">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="c625d-280">詳細については、次を参照してください。[インライン スタイルおよびテンプレート](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)します。</span><span class="sxs-lookup"><span data-stu-id="c625d-280">For more information, see [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span>  
  
<a name="dependencyPropertyInfo_PageTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c625d-281">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c625d-281">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c625d-282">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="c625d-282">Identifier field</span></span>|<xref:System.Windows.Controls.Page.TemplateProperty>|  
|<span data-ttu-id="c625d-283">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="c625d-283">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.TemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.TemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-284">
            <see cref="P:System.Windows.Controls.Page.Template" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-284">Identifies the <see cref="P:System.Windows.Controls.Page.Template" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Controls.Page.Title" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IWindowService.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-285">
            <see cref="T:System.Windows.Controls.Page" /> のタイトルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-285">Gets or sets the title of the <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-286">
            <see cref="T:System.Windows.Controls.Page" /> のタイトル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-286">The title of the <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-287">値、<xref:System.Windows.Controls.Page.Title%2A>プロパティはでは表示されません<xref:System.Windows.Controls.Page>をホストしているウィンドウのタイトル バーから表示されることも、<xref:System.Windows.Controls.Page>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-287">The value of the <xref:System.Windows.Controls.Page.Title%2A> property is not displayed by <xref:System.Windows.Controls.Page>, nor is it displayed from the title bar of the window that is hosting a <xref:System.Windows.Controls.Page>.</span></span> <span data-ttu-id="c625d-288">設定する代わりに、<xref:System.Windows.Controls.Page.WindowTitle%2A>ホスト ウィンドウのタイトルを変更します。</span><span class="sxs-lookup"><span data-stu-id="c625d-288">Instead, you set <xref:System.Windows.Controls.Page.WindowTitle%2A> to change the title of a host window.</span></span>  
  
 <span data-ttu-id="c625d-289"><xref:System.Windows.Controls.Page.Title%2A> 移動のコンテンツのナビゲーション履歴エントリの名前を生成しても使用できます。</span><span class="sxs-lookup"><span data-stu-id="c625d-289"><xref:System.Windows.Controls.Page.Title%2A> can also be used to generate the name of the navigation history entry for a piece of navigated content.</span></span> <span data-ttu-id="c625d-290">次のデータを使用して、優先順位、ナビゲーション履歴エントリ名を自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="c625d-290">The following pieces of data are used to automatically construct a navigation history entry name, in order of precedence:</span></span>  
  
-   <span data-ttu-id="c625d-291">関連付けられている<xref:System.Windows.Navigation.JournalEntry.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c625d-291">The attached <xref:System.Windows.Navigation.JournalEntry.Name%2A> attribute.</span></span>  
  
-   <span data-ttu-id="c625d-292"><xref:System.Windows.Controls.Page.Title%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="c625d-292">The <xref:System.Windows.Controls.Page.Title%2A> property.</span></span>  
  
-   <span data-ttu-id="c625d-293"><xref:System.Windows.Controls.Page.WindowTitle%2A>プロパティおよび[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]現在のページ</span><span class="sxs-lookup"><span data-stu-id="c625d-293">The <xref:System.Windows.Controls.Page.WindowTitle%2A> property and the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the current page</span></span>  
  
-   <span data-ttu-id="c625d-294">現在のページの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c625d-294">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the current page.</span></span>  
  
 <span data-ttu-id="c625d-295">関連付けられている場合は、<xref:System.Windows.Navigation.CustomContentState>オブジェクトのナビゲーション履歴のコンテンツに指定できます表示される名前のナビゲーション履歴エントリにオーバーライドすることで<xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-295">If you have associated a <xref:System.Windows.Navigation.CustomContentState> object with a piece of content in navigation history, you can specify the name that appears in the navigation history entry by overriding <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_PageTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c625d-296">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="c625d-296">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c625d-297">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="c625d-297">Identifier field</span></span>|<xref:System.Windows.Controls.Page.TitleProperty>|  
|<span data-ttu-id="c625d-298">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="c625d-298">Metadata properties set to `true`</span></span>|<span data-ttu-id="c625d-299">なし</span><span class="sxs-lookup"><span data-stu-id="c625d-299">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Page.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Page.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-300">
            <see cref="P:System.Windows.Controls.Page.Title" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-300">Identifies the <see cref="P:System.Windows.Controls.Page.Title" /> dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-301"><xref:System.Windows.Controls.Page.Title%2A> 依存関係プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="c625d-301">The identifier for the <xref:System.Windows.Controls.Page.Title%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="c625d-302">依存関係プロパティの概要</span><span class="sxs-lookup"><span data-stu-id="c625d-302">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public double WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WindowHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.WindowHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WindowHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.WindowHeight : double with get, set" Usage="System.Windows.Controls.Page.WindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-303">
            <see cref="T:System.Windows.Window" /> のホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> または <see cref="T:System.Windows.Controls.Page" /> の高さを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-303">Gets or sets the height of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-304">
            <see cref="T:System.Windows.Controls.Page" /> を直接ホストするウィンドウの高さ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-304">The height of a window that directly hosts a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-305"><xref:System.Windows.Controls.Page.WindowHeight%2A> ときにのみ適用されますが、<xref:System.Windows.Controls.Page>が含まれています ウィンドウで直接ホストされています。</span><span class="sxs-lookup"><span data-stu-id="c625d-305"><xref:System.Windows.Controls.Page.WindowHeight%2A> is only applied when a <xref:System.Windows.Controls.Page> is hosted directly by a window, which includes:</span></span>  
  
-   <xref:System.Windows.Window>  
  
-   <xref:System.Windows.Navigation.NavigationWindow>  
  
-   [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]  
  
 <span data-ttu-id="c625d-306">場合、<xref:System.Windows.Controls.Page>によってホストされている、<xref:System.Windows.Controls.Frame>設定<xref:System.Windows.Controls.Page.WindowHeight%2A>、影響を与えませんの値を取得することもできます<xref:System.Windows.Controls.Page.WindowHeight%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-306">If a <xref:System.Windows.Controls.Page> is hosted by a <xref:System.Windows.Controls.Frame>, setting <xref:System.Windows.Controls.Page.WindowHeight%2A> has no effect, but you can still get the value of <xref:System.Windows.Controls.Page.WindowHeight%2A>.</span></span>  
  
 <span data-ttu-id="c625d-307">A<xref:System.Windows.Controls.Page>で、[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]のみを使用して<xref:System.Windows.Controls.Page.WindowHeight%2A>の高さを変更する[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]; を設定して高さを変更できません<xref:System.Windows.FrameworkElement.Height%2A>、 <xref:System.Windows.FrameworkElement.MinHeight%2A>、または<xref:System.Windows.FrameworkElement.MaxHeight%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-307">A <xref:System.Windows.Controls.Page> in an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] can only use <xref:System.Windows.Controls.Page.WindowHeight%2A> to change the height of [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]; the height cannot be changed by setting <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.MinHeight%2A>, or <xref:System.Windows.FrameworkElement.MaxHeight%2A>.</span></span>  
  
 <span data-ttu-id="c625d-308">最小の高さ、[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]ウィンドウが 150 ピクセルです。</span><span class="sxs-lookup"><span data-stu-id="c625d-308">The minimum height of the [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] window is 150 pixels.</span></span> <span data-ttu-id="c625d-309">ブラウザーによってホストされるページ、つまり、値の<xref:System.Windows.Controls.Page.WindowHeight%2A>全体の高さの原因となる場合、適用されないことが、 [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] 150 未満のピクセルのウィンドウ。</span><span class="sxs-lookup"><span data-stu-id="c625d-309">For browser-hosted pages, this means that the value of <xref:System.Windows.Controls.Page.WindowHeight%2A> may not be applied if it would cause the total height of the [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] window to be less than 150 pixels.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c625d-310">次の例では、ページからウィンドウの高さを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c625d-310">The following example shows how to set the height of a window from a page.</span></span>  
  
 [!code-xaml[HOWTONavigationSnippets#SetPageWindowHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/SetWindowHeightPage.xaml#setpagewindowheightxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowTitle">
      <MemberSignature Language="C#" Value="public string WindowTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WindowTitle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.WindowTitle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WindowTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTitle : string with get, set" Usage="System.Windows.Controls.Page.WindowTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Title)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-311">
            <see cref="T:System.Windows.Window" /> のホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> またはホスト <see cref="T:System.Windows.Controls.Page" /> のタイトルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-311">Gets or sets the title of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-312">
            <see cref="T:System.Windows.Controls.Page" /> を直接ホストするウィンドウのタイトル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-312">The title of a window that directly hosts the <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-313">既定では、ページをホストするウィンドウのタイトルを含む<xref:System.Windows.Navigation.NavigationWindow>と[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]が現在ホストされているファイルの名前を指定します (ページが緩やかな場合は、.xaml 拡張子を持つ[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]、か、ページが、の一部である場合は、.xbap拡張子[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]).</span><span class="sxs-lookup"><span data-stu-id="c625d-313">By default, the title of a window that hosts a page, including <xref:System.Windows.Navigation.NavigationWindow> and [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], is the name of the file that is currently being hosted (with an .xaml extension if the page is loose [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], or an .xbap extension if the page is part of an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]).</span></span>  
  
 <span data-ttu-id="c625d-314">ページが既定値を設定して変更できますその<xref:System.Windows.Controls.Page.WindowTitle%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="c625d-314">A page can change the default by setting its <xref:System.Windows.Controls.Page.WindowTitle%2A> property.</span></span>  
  
 <span data-ttu-id="c625d-315">別のページを設定するまで、ページは、この方法でウィンドウのタイトルを設定、いったんウィンドウのタイトルは変更されません<xref:System.Windows.Controls.Page.WindowTitle%2A>を別の値。</span><span class="sxs-lookup"><span data-stu-id="c625d-315">Once a page sets the title of a window in this way, the window's title does not change until another page sets <xref:System.Windows.Controls.Page.WindowTitle%2A> with a different value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c625d-316"><xref:System.Windows.Controls.Page> 、最上位のウィンドウでのコンテンツの項目である必要があります<xref:System.Windows.Controls.Page.WindowTitle%2A>; 効果がある場合に、<xref:System.Windows.Controls.Page>内でホストされている、 <xref:System.Windows.Controls.Frame>、設定など、<xref:System.Windows.Controls.Page.WindowTitle%2A>ホスト ウィンドウのタイトルを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="c625d-316">The <xref:System.Windows.Controls.Page> must be the topmost piece of content in a window for <xref:System.Windows.Controls.Page.WindowTitle%2A> to have an effect; if a <xref:System.Windows.Controls.Page> is hosted within a <xref:System.Windows.Controls.Frame>, for example, setting <xref:System.Windows.Controls.Page.WindowTitle%2A> does not change the title of the host window.</span></span>  
  
 <span data-ttu-id="c625d-317"><xref:System.Windows.Controls.Page.WindowTitle%2A> 移動のコンテンツのナビゲーション履歴エントリの名前を生成しても使用できます。</span><span class="sxs-lookup"><span data-stu-id="c625d-317"><xref:System.Windows.Controls.Page.WindowTitle%2A> can also be used to generate the name of the navigation history entry for a piece of navigated content.</span></span> <span data-ttu-id="c625d-318">次のデータを使用して、優先順位、ナビゲーション履歴エントリ名を自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="c625d-318">The following pieces of data are used to automatically construct a navigation history entry name, in order of precedence:</span></span>  
  
-   <span data-ttu-id="c625d-319">関連付けられている<xref:System.Windows.Navigation.JournalEntry.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c625d-319">The attached <xref:System.Windows.Navigation.JournalEntry.Name%2A> attribute.</span></span>  
  
-   <span data-ttu-id="c625d-320"><xref:System.Windows.Controls.Page.Title%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="c625d-320">The <xref:System.Windows.Controls.Page.Title%2A> property.</span></span>  
  
-   <span data-ttu-id="c625d-321"><xref:System.Windows.Controls.Page.WindowTitle%2A>プロパティおよび[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]現在のページ</span><span class="sxs-lookup"><span data-stu-id="c625d-321">The <xref:System.Windows.Controls.Page.WindowTitle%2A> property and the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the current page</span></span>  
  
-   <span data-ttu-id="c625d-322">現在のページの [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c625d-322">The [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the current page.</span></span>  
  
 <span data-ttu-id="c625d-323">関連付けられている場合は、<xref:System.Windows.Navigation.CustomContentState>オブジェクトのナビゲーション履歴内のコンテンツを含む、オーバーライドすることで、ナビゲーション履歴の要素の名前値を指定できます<xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-323">If you have associated a <xref:System.Windows.Navigation.CustomContentState> object with a piece of content in navigation history, you can specify the name value of a navigation history element by overriding <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c625d-324">次の例では、ページからウィンドウのタイトルを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c625d-324">The following example shows how to set the title of a window from a page.</span></span>  
  
 [!code-xaml[HOWTONavigationSnippets#SetPageWindowTitleXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/SetWindowTitlePage.xaml#setpagewindowtitlexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public double WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WindowWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Page.WindowWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WindowWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.WindowWidth : double with get, set" Usage="System.Windows.Controls.Page.WindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c625d-325">
            <see cref="T:System.Windows.Window" /> のホスト <see cref="T:System.Windows.Navigation.NavigationWindow" /> または <see cref="T:System.Windows.Controls.Page" /> の幅を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-325">Gets or sets the width of the host <see cref="T:System.Windows.Window" /> or <see cref="T:System.Windows.Navigation.NavigationWindow" /> of a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c625d-326">
            <see cref="T:System.Windows.Controls.Page" /> を直接ホストするウィンドウの幅。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c625d-326">The width of a window that directly hosts a <see cref="T:System.Windows.Controls.Page" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c625d-327"><xref:System.Windows.Controls.Page.WindowWidth%2A> ときにのみ適用されますが、<xref:System.Windows.Controls.Page>が含まれています ウィンドウで直接ホストされています。</span><span class="sxs-lookup"><span data-stu-id="c625d-327"><xref:System.Windows.Controls.Page.WindowWidth%2A> is only applied when a <xref:System.Windows.Controls.Page> is hosted directly by a window, which includes:</span></span>  
  
-   <xref:System.Windows.Window>  
  
-   <xref:System.Windows.Navigation.NavigationWindow>  
  
-   [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]  
  
 <span data-ttu-id="c625d-328">場合、<xref:System.Windows.Controls.Page>によってホストされている、<xref:System.Windows.Controls.Frame>設定<xref:System.Windows.Controls.Page.WindowWidth%2A>、影響を与えませんの値を取得することもできます<xref:System.Windows.Controls.Page.WindowWidth%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-328">If a <xref:System.Windows.Controls.Page> is hosted by a <xref:System.Windows.Controls.Frame>, setting <xref:System.Windows.Controls.Page.WindowWidth%2A> has no effect, but you can still get the value of <xref:System.Windows.Controls.Page.WindowWidth%2A>.</span></span>  
  
 <span data-ttu-id="c625d-329">A<xref:System.Windows.Controls.Page>で、[!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)]のみを使用して<xref:System.Windows.Controls.Page.WindowWidth%2A>の幅を変更する[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]; を設定して、幅を変更できません<xref:System.Windows.FrameworkElement.Width%2A>、 <xref:System.Windows.FrameworkElement.MinWidth%2A>、または<xref:System.Windows.FrameworkElement.MaxWidth%2A>します。</span><span class="sxs-lookup"><span data-stu-id="c625d-329">A <xref:System.Windows.Controls.Page> in an [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] can only use <xref:System.Windows.Controls.Page.WindowWidth%2A> to change the width of [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]; the width cannot be changed by setting <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.MinWidth%2A>, or <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span>  
  
 <span data-ttu-id="c625d-330">最小の幅、[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]ウィンドウは 250 ピクセルです。</span><span class="sxs-lookup"><span data-stu-id="c625d-330">The minimum width of the [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] window is 250 pixels.</span></span> <span data-ttu-id="c625d-331">ブラウザーによってホストされるページ、つまり、値の<xref:System.Windows.Controls.Page.WindowWidth%2A>全体の幅が発生する場合、適用されないことが、[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]未満 250 ピクセルのウィンドウ。</span><span class="sxs-lookup"><span data-stu-id="c625d-331">For browser-hosted pages, this means that the value of <xref:System.Windows.Controls.Page.WindowWidth%2A> may not be applied if it would cause the total width of the [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)] window to be less than 250 pixels.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c625d-332">次の例では、ページからウィンドウの幅を設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c625d-332">The following example shows how to set the width of a window from a page.</span></span>  
  
 [!code-xaml[HOWTONavigationSnippets#SetPageWindowWidthXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/SetWindowWidthPage.xaml#setpagewindowwidthxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>