<Type Name="MenuItem" FullName="System.Windows.Controls.MenuItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a19278c7892f31790ef5ecdfa46e80c19907ed1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuItem : System.Windows.Controls.HeaderedItemsControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi MenuItem extends System.Windows.Controls.HeaderedItemsControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuItem&#xA;Inherits HeaderedItemsControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem : System::Windows::Controls::HeaderedItemsControl, System::Windows::Input::ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.HeaderedItemsControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.MenuItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="332f2-101">Represents a selectable item inside a <see cref="T:System.Windows.Controls.Menu" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="332f2-101">Represents a selectable item inside a <see cref="T:System.Windows.Controls.Menu" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-102"><xref:System.Windows.Controls.MenuItem> <xref:System.Windows.Controls.HeaderedItemsControl>、つまり、ヘッダーとオブジェクトのコレクション任意の型 (文字列、イメージ、パネルなど) を指定できます。</span><span class="sxs-lookup"><span data-stu-id="332f2-102"><xref:System.Windows.Controls.MenuItem> is a <xref:System.Windows.Controls.HeaderedItemsControl>, which means its header and collection of objects can be of any type (such as string, image, or panel).</span></span> <span data-ttu-id="332f2-103">詳細については、<xref:System.Windows.Controls.HeaderedItemsControl> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="332f2-103">For more information, see the <xref:System.Windows.Controls.HeaderedItemsControl> class.</span></span>  
  
 <span data-ttu-id="332f2-104">A<xref:System.Windows.Controls.MenuItem>サブメニューを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="332f2-104">A <xref:System.Windows.Controls.MenuItem> can have submenus.</span></span> <span data-ttu-id="332f2-105">サブメニューの<xref:System.Windows.Controls.MenuItem>内のオブジェクトの構成、<xref:System.Windows.Controls.ItemCollection>の<xref:System.Windows.Controls.MenuItem>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-105">The submenu of the <xref:System.Windows.Controls.MenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemCollection> of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="332f2-106">通常、<xref:System.Windows.Controls.MenuItem>を含むその他の<xref:System.Windows.Controls.MenuItem>入れ子になったサブメニューを作成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="332f2-106">It is common for a <xref:System.Windows.Controls.MenuItem> to contain other <xref:System.Windows.Controls.MenuItem> objects to create nested submenus.</span></span>  
  
 <span data-ttu-id="332f2-107">A<xref:System.Windows.Controls.MenuItem>関数がいくつかのいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="332f2-107">A <xref:System.Windows.Controls.MenuItem> can have one of several functions:</span></span>  
  
-   <span data-ttu-id="332f2-108">コマンドを呼び出すことを選択することができます。</span><span class="sxs-lookup"><span data-stu-id="332f2-108">It can be selected to invoke a command.</span></span>  
  
-   <span data-ttu-id="332f2-109">他のメニュー項目の区切り記号があります。</span><span class="sxs-lookup"><span data-stu-id="332f2-109">It can be a separator for other menu items.</span></span>  
  
-   <span data-ttu-id="332f2-110">サブメニューのヘッダーがあります。</span><span class="sxs-lookup"><span data-stu-id="332f2-110">It can be a header for a submenu.</span></span>  
  
-   <span data-ttu-id="332f2-111">Checked または unchecked があります。</span><span class="sxs-lookup"><span data-stu-id="332f2-111">It can be checked or unchecked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="332f2-112">既定では、<xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>の<xref:System.Windows.Controls.MenuItem>に設定されている<xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-112">By default, the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> of a <xref:System.Windows.Controls.MenuItem> is set to <xref:System.Windows.HorizontalAlignment.Stretch?displayProperty=nameWithType>.</span></span> <span data-ttu-id="332f2-113">既定の水平方向の位置、<xref:System.Windows.Controls.StackPanel>は<xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="332f2-113">The default horizontal position of a <xref:System.Windows.Controls.StackPanel> is <xref:System.Windows.HorizontalAlignment.Center?displayProperty=nameWithType>.</span></span> <span data-ttu-id="332f2-114">設定した場合、<xref:System.Windows.FrameworkElement.Width%2A>のプロパティ、<xref:System.Windows.Controls.MenuItem>を通じて、 <xref:System.Windows.Controls.StackPanel>、スタック パネル の既定値に適用され、項目が中央に配置します。</span><span class="sxs-lookup"><span data-stu-id="332f2-114">If you set the <xref:System.Windows.FrameworkElement.Width%2A> property of a <xref:System.Windows.Controls.MenuItem> through a <xref:System.Windows.Controls.StackPanel>, the stack panel's default is applied and the item is centered.</span></span>  
  
 <span data-ttu-id="332f2-115"><xref:System.Windows.Controls.MenuItem>ハンドル、<xref:System.Windows.UIElement.MouseDown>にイベント ハンドラーをアタッチするための場合、イベント<xref:System.Windows.UIElement.MouseDown>ハンドラーは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="332f2-115">The <xref:System.Windows.Controls.MenuItem> handles the <xref:System.Windows.UIElement.MouseDown> event, so if you attach an event handler to <xref:System.Windows.UIElement.MouseDown>, your handler will never be called.</span></span>  <span data-ttu-id="332f2-116">サブスクライブする独自のハンドラーを追加する、<xref:System.Windows.UIElement.PreviewMouseDown>イベントまたはサブスクライブを<xref:System.Windows.UIElement.MouseDown>を呼び出して<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>で`handledEventsToo`に設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="332f2-116">To add your own handler, subscribe to the <xref:System.Windows.UIElement.PreviewMouseDown> event or subscribe to <xref:System.Windows.UIElement.MouseDown> by calling <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-menuitem-control"></a><span data-ttu-id="332f2-117">MenuItem コントロールのカスタマイズ</span><span class="sxs-lookup"><span data-stu-id="332f2-117">Customizing the MenuItem Control</span></span>  
 <span data-ttu-id="332f2-118">設定を適用する、同じプロパティを複数<xref:System.Windows.Controls.MenuItem>、コントロールを使用して、<xref:System.Windows.FrameworkElement.Style%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="332f2-118">To apply the same property settings to multiple <xref:System.Windows.Controls.MenuItem> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="332f2-119">既定値を変更することができます<xref:System.Windows.Controls.ControlTemplate>コントロールの外観を一意にします。</span><span class="sxs-lookup"><span data-stu-id="332f2-119">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="332f2-120">作成の詳細については、<xref:System.Windows.Controls.ControlTemplate>を参照してください[、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)です。</span><span class="sxs-lookup"><span data-stu-id="332f2-120">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="332f2-121">部分とに固有の状態を表示する、<xref:System.Windows.Controls.MenuItem>を参照してください[メニュー スタイルとテンプレート](~/docs/framework/wpf/controls/menu-styles-and-templates.md)です。</span><span class="sxs-lookup"><span data-stu-id="332f2-121">To see the parts and states that are specific to the <xref:System.Windows.Controls.MenuItem>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="332f2-122">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。</span><span class="sxs-lookup"><span data-stu-id="332f2-122">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="332f2-123">プロパティが既定のスタイルが設定されている場合は、アプリケーションでコントロールが表示されたら既定値から、プロパティが変更可能性があります。</span><span class="sxs-lookup"><span data-stu-id="332f2-123">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="332f2-124">既定のスタイルは、いるデスクトップ テーマによっては、アプリケーションが実行されている場合は使用が決定されます。</span><span class="sxs-lookup"><span data-stu-id="332f2-124">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="332f2-125">詳細については、次を参照してください。 [WPF テーマの既定の](http://go.microsoft.com/fwlink/?LinkID=158252)します。</span><span class="sxs-lookup"><span data-stu-id="332f2-125">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="332f2-126">Visual プロパティの設定はのみに効果が場合、このプロパティは、両方に存在<xref:System.Windows.Controls.MenuItem>コントロールの既定のテンプレートとを使用して設定をします。</span><span class="sxs-lookup"><span data-stu-id="332f2-126">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.MenuItem> control's default template and is set by using a .</span></span> <span data-ttu-id="332f2-127">「を変更する、Visual 構造の制御」 セクションで visual のプロパティの一覧を検索できる[、ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)です。</span><span class="sxs-lookup"><span data-stu-id="332f2-127">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332f2-128">次の例を作成、<xref:System.Windows.Controls.Menu>内のテキストを操作する、<xref:System.Windows.Controls.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-128">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="332f2-129"><xref:System.Windows.Controls.Menu>が含まれています<xref:System.Windows.Controls.MenuItem>使用するオブジェクト、 <xref:System.Windows.Controls.MenuItem.Command%2A>、 <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>、および<xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>プロパティおよび<xref:System.Windows.Controls.MenuItem.Checked>、 <xref:System.Windows.Controls.MenuItem.Unchecked>、および<xref:System.Windows.Controls.MenuItem.Click>イベント。</span><span class="sxs-lookup"><span data-stu-id="332f2-129">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Menu" />
    <altmember cref="T:System.Windows.Controls.ContextMenu" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332f2-130">Initializes a new instance of the <see cref="T:System.Windows.Controls.MenuItem" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-130">Initializes a new instance of the <see cref="T:System.Windows.Controls.MenuItem" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Checked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Checked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Checked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Checked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-131">Occurs when a menu item is checked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-131">Occurs when a menu item is checked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Checked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="332f2-132">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="332f2-132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-133">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-133">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CheckedEvent>|  
|<span data-ttu-id="332f2-134">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="332f2-134">Routing strategy</span></span>|<span data-ttu-id="332f2-135">バブル</span><span class="sxs-lookup"><span data-stu-id="332f2-135">Bubbling</span></span>|  
|<span data-ttu-id="332f2-136">Delegate</span><span class="sxs-lookup"><span data-stu-id="332f2-136">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-137">次の例では、処理、<xref:System.Windows.Controls.MenuItem.Checked>イベント。</span><span class="sxs-lookup"><span data-stu-id="332f2-137">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Checked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CheckedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-138">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-138">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-139">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-139">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-140"><xref:System.Windows.Controls.MenuItem.Click>場合イベントは発生しません、<xref:System.Windows.Controls.MenuItem>サブメニューがします。</span><span class="sxs-lookup"><span data-stu-id="332f2-140">The <xref:System.Windows.Controls.MenuItem.Click> event does not occur if the <xref:System.Windows.Controls.MenuItem> has a submenu.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="332f2-141">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="332f2-141">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-142">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-142">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ClickEvent>|  
|<span data-ttu-id="332f2-143">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="332f2-143">Routing strategy</span></span>|<span data-ttu-id="332f2-144">バブル</span><span class="sxs-lookup"><span data-stu-id="332f2-144">Bubbling</span></span>|  
|<span data-ttu-id="332f2-145">Delegate</span><span class="sxs-lookup"><span data-stu-id="332f2-145">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-146">次の例を作成、<xref:System.Windows.Controls.Menu>内のテキストを操作する、<xref:System.Windows.Controls.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-146">The following example creates a <xref:System.Windows.Controls.Menu> to manipulate text in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="332f2-147"><xref:System.Windows.Controls.Menu>が含まれています<xref:System.Windows.Controls.MenuItem>使用するオブジェクト、 <xref:System.Windows.Controls.MenuItem.Command%2A>、 <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>、および<xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>プロパティおよび<xref:System.Windows.Controls.MenuItem.Checked>、 <xref:System.Windows.Controls.MenuItem.Unchecked>、および<xref:System.Windows.Controls.MenuItem.Click>イベント。</span><span class="sxs-lookup"><span data-stu-id="332f2-147">The <xref:System.Windows.Controls.Menu> contains <xref:System.Windows.Controls.MenuItem> objects that use the <xref:System.Windows.Controls.MenuItem.Command%2A>, <xref:System.Windows.Controls.MenuItem.IsCheckable%2A>, and <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> properties and the <xref:System.Windows.Controls.MenuItem.Checked>, <xref:System.Windows.Controls.MenuItem.Unchecked>, and <xref:System.Windows.Controls.MenuItem.Click> events.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#1)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-148">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Click" /> routed event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-148">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-149">このイベントは、マウスの左ボタン クリックに対応します。</span><span class="sxs-lookup"><span data-stu-id="332f2-149">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-150">Gets or sets the command associated with the menu item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-150">Gets or sets the command associated with the menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-151">関連付けられているコマンド、<see cref="T:System.Windows.Controls.MenuItem" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-151">The command associated with the <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
          <span data-ttu-id="332f2-152">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-152">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-153">このプロパティは、特定のコマンドを関連付けるには使用<xref:System.Windows.Controls.MenuItem>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="332f2-153">This property is used to associate a command with a particular <xref:System.Windows.Controls.MenuItem> instance.</span></span> <span data-ttu-id="332f2-154">次の使用例、**コピー**コマンドと、<xref:System.Windows.Controls.MenuItem>入力ジェスチャ テキストが自動的に提供し、 **Ctrl + C**です。</span><span class="sxs-lookup"><span data-stu-id="332f2-154">The following example associates the **Copy** command with a <xref:System.Windows.Controls.MenuItem> and automatically supplies the input gesture text **Ctrl+C**.</span></span> <span data-ttu-id="332f2-155">例は設定されません、<xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>プロパティ、ですが、<xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>の<xref:System.Windows.Controls.MenuItem>「コピー」を実行時にします。</span><span class="sxs-lookup"><span data-stu-id="332f2-155">The example does not set the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> property, but the <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> for the <xref:System.Windows.Controls.MenuItem> is "Copy" at run time.</span></span>  <span data-ttu-id="332f2-156">別のヘッダーを指定することができます、<xref:System.Windows.Controls.MenuItem>別にする場合。</span><span class="sxs-lookup"><span data-stu-id="332f2-156">You can specify another header for the <xref:System.Windows.Controls.MenuItem> if you want it to be different.</span></span> <span data-ttu-id="332f2-157">目的のコマンドにバインドする方法については、次を参照してください。 [MenuItem にコマンドを追加](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370)です。</span><span class="sxs-lookup"><span data-stu-id="332f2-157">For information on how to bind to the desired command, see [Add a Command to a MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370).</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemcommand)]  
  
 <span data-ttu-id="332f2-158">コマンドが発生したときに、<xref:System.Windows.Controls.MenuItem>がクリックされた — 直後、<xref:System.Windows.Controls.MenuItem.Click>イベント。</span><span class="sxs-lookup"><span data-stu-id="332f2-158">A command is raised when a <xref:System.Windows.Controls.MenuItem> is clicked—just after the <xref:System.Windows.Controls.MenuItem.Click> event.</span></span> <span data-ttu-id="332f2-159">コマンドは、次の優先順位に従って要素で発生します。</span><span class="sxs-lookup"><span data-stu-id="332f2-159">The command is raised on the element according to the following priorities:</span></span>  
  
1.  <span data-ttu-id="332f2-160">場合<xref:System.Windows.Controls.MenuItem.CommandTarget%2A>に設定されている、 <xref:System.Windows.Controls.MenuItem>、その要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="332f2-160">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is set on the <xref:System.Windows.Controls.MenuItem>, that element is used.</span></span>  
  
2.  <span data-ttu-id="332f2-161"><xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>の<xref:System.Windows.Controls.ContextMenu>を格納している、<xref:System.Windows.Controls.MenuItem>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-161">The <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> of a <xref:System.Windows.Controls.ContextMenu> that contains the <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
3.  <span data-ttu-id="332f2-162">含むメイン ウィンドウのフォーカス ターゲット、<xref:System.Windows.Controls.Menu>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-162">The focus target of the main window that contains a <xref:System.Windows.Controls.Menu>.</span></span>  
  
4.  <span data-ttu-id="332f2-163"><xref:System.Windows.Controls.MenuItem>がクリックしてされました。</span><span class="sxs-lookup"><span data-stu-id="332f2-163">The <xref:System.Windows.Controls.MenuItem> that was clicked.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-164">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-164">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-165">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-165">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandProperty>|  
|<span data-ttu-id="332f2-166">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-166">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-167">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-167">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-168">次の例では、プロパティを使用して、コマンドにコマンドをメニュー項目に関連付ける方法を示します。</span><span class="sxs-lookup"><span data-stu-id="332f2-168">The following examples show how to use the command property to associate commands with menu items.</span></span>  
  
 [!code-xaml[MenuEvent#8](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#8)]  
  
 [!code-csharp[MenuEvent#9](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-169">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-169">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-170">パラメーターに渡す、<see cref="P:System.Windows.Controls.MenuItem.Command" />のプロパティ、<see cref="T:System.Windows.Controls.MenuItem" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-170">The parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command" /> property of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
          <span data-ttu-id="332f2-171">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-171">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-172">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-172">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-173">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-173">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandParameterProperty>|  
|<span data-ttu-id="332f2-174">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-174">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-175">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-175">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-176">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-176">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandParameter" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-177">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Command" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-177">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Command" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-178">Gets or sets the target element on which to raise the specified command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-178">Gets or sets the target element on which to raise the specified command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-179">指定されたコマンドが実行される要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-179">The element on which to raise the specified command.</span>
          </span>
          <span data-ttu-id="332f2-180">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-180">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-181"><xref:System.Windows.Controls.MenuItem.CommandTarget%2A>プロパティは、コマンドが発生した要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="332f2-181">The <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> property specifies the element where the command occurs.</span></span> <span data-ttu-id="332f2-182">場合<xref:System.Windows.Controls.MenuItem.CommandTarget%2A>がキーボード フォーカスを持つ要素が、コマンドを受け取るが、設定されていません。</span><span class="sxs-lookup"><span data-stu-id="332f2-182">If <xref:System.Windows.Controls.MenuItem.CommandTarget%2A> is not set, the element that has keyboard focus will receive the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-183">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-183">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-184">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-184">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.CommandTargetProperty>|  
|<span data-ttu-id="332f2-185">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-185">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-186">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-186">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-187">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-187">Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332f2-188">Creates or identifies the element used to display a specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-188">Creates or identifies the element used to display a specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="332f2-189">The element used to display a specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-189">The element used to display a specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-190">Gets whether the control supports scrolling.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-190">Gets whether the control supports scrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-191">常に <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-191">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-192">コントロールがある場合、<xref:System.Windows.Controls.ScrollViewer>スタイルにあり、スクロール動作、カスタム キーボード<xref:System.Windows.Controls.ListBox.HandlesScrolling%2A>返す必要があります`true`です。</span><span class="sxs-lookup"><span data-stu-id="332f2-192">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public object Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Icon { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-193">Gets or sets the icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-193">Gets or sets the icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-194">表示されるアイコン、<see cref="T:System.Windows.Controls.MenuItem" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-194">The icon that appears in a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
          <span data-ttu-id="332f2-195">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-195">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-196">多く<xref:System.Windows.Controls.Menu>コントロールにテキストだけがある、<xref:System.Windows.Controls.MenuItem>要素。</span><span class="sxs-lookup"><span data-stu-id="332f2-196">Many <xref:System.Windows.Controls.Menu> controls have more than just text in the <xref:System.Windows.Controls.MenuItem> elements.</span></span> <span data-ttu-id="332f2-197">多くの場合は、アイコン、チェック マーク、アクセラレータ、およびサブメニューを示す矢印です。</span><span class="sxs-lookup"><span data-stu-id="332f2-197">Often there are icons, check marks, accelerators, and arrows to indicate submenus.</span></span>  
  
<a name="dependencyPropertyInfo_Icon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-198">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-198">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-199">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-199">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IconProperty>|  
|<span data-ttu-id="332f2-200">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-200">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-201">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-201">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-202">次の例では、アイコン、メニュー項目を作成します。</span><span class="sxs-lookup"><span data-stu-id="332f2-202">The following example creates a menu item with an icon.</span></span>  
  
 [!code-xaml[MenuItems_snip#MenuItemIcon](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#menuitemicon)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-203">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Icon" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-203">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Icon" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputGestureText">
      <MemberSignature Language="C#" Value="public string InputGestureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputGestureText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.InputGestureText" />
      <MemberSignature Language="VB.NET" Value="Public Property InputGestureText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputGestureText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-204">Sets the text describing an input gesture that will call the command tied to the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-204">Sets the text describing an input gesture that will call the command tied to the specified item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-205">などの入力のジェスチャについて説明するテキスト**Ctrl + C**の**コピー**コマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-205">The text that describes the input gesture, such as **Ctrl+C** for the **Copy** command.</span>
          </span>
          <span data-ttu-id="332f2-206">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-206">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-207">このプロパティは、メニュー項目に入力ジェスチャを関連付けません単に文字列をメニュー項目に追加します。</span><span class="sxs-lookup"><span data-stu-id="332f2-207">This property does not associate the input gesture with the menu item; it simply adds text to the menu item.</span></span> <span data-ttu-id="332f2-208">アプリケーションでは、アクションを実行するために、ユーザーの入力を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="332f2-208">The application must handle the user's input to carry out the action.</span></span>  <span data-ttu-id="332f2-209">コマンドをメニュー項目に関連付ける方法については、次を参照してください。<xref:System.Windows.Controls.MenuItem.Command%2A>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-209">For information on how to associate a command with a menu item, see <xref:System.Windows.Controls.MenuItem.Command%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_InputGestureText"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-210">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-210">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-211">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-211">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.InputGestureTextProperty>|  
|<span data-ttu-id="332f2-212">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-212">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-213">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-213">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-214">次の例を使用する方法を示して、<xref:System.Windows.Controls.MenuItem.InputGestureText%2A>メニュー項目にキーボード ショートカット テキストを割り当てるプロパティをします。</span><span class="sxs-lookup"><span data-stu-id="332f2-214">The following examples show how to use the <xref:System.Windows.Controls.MenuItem.InputGestureText%2A> property to assign keyboard shortcuts text to menu items.</span></span>  
  
 [!code-xaml[MenuEvent#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#6)]  
  
 [!code-csharp[MenuEvent#7](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputGestureTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputGestureTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputGestureTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.InputGestureTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputGestureTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputGestureTextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-215">Identifies the <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-215">Identifies the <see cref="P:System.Windows.Controls.MenuItem.InputGestureText" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckable">
      <MemberSignature Language="C#" Value="public bool IsCheckable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCheckable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsCheckable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCheckable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCheckable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-216">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> can be checked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-216">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> can be checked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-217">
            <see langword="true" /> 場合は、メニュー項目をチェックすることができます。それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-217">
              <see langword="true" /> if the menu item can be checked; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-218">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-218">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsCheckable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-219">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-219">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-220">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-220">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckableProperty>|  
|<span data-ttu-id="332f2-221">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-221">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-222">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-222">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-223">次の例は、作成する方法を示しています。<xref:System.Windows.Controls.MenuItem>いるコントロールをユーザーがクリックしたときにオンになっています。</span><span class="sxs-lookup"><span data-stu-id="332f2-223">The following example shows how to make <xref:System.Windows.Controls.MenuItem> controls that are checked when a user clicks them.</span></span>  
  
 [!code-xaml[MenuEvent#11](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuEvent/CSharp/Pane1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-224">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-224">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsCheckable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChecked">
      <MemberSignature Language="C#" Value="public bool IsChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property IsChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsChecked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-225">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MenuItem" /> is checked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-225">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MenuItem" /> is checked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-226">
            <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.MenuItem" /> 、それ以外のチェック<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-226">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is checked; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-227">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-227">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsChecked"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-228">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-228">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-229">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-229">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsCheckedProperty>|  
|<span data-ttu-id="332f2-230">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-230">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-231"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="332f2-231"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-232">例を次にどのように<xref:System.Windows.Controls.MenuItem.IsChecked%2A>メニュー項目の前にあるチェック ボックスをオンにプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="332f2-232">The following example shows how the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property can be used to place a check mark in front of a menu item.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#6](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#6)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCheckedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCheckedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsCheckedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCheckedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCheckedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-233">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-233">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-234">Gets a value that indicates whether the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property is <see langword="true" /> for the current menu item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-234">Gets a value that indicates whether the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property is <see langword="true" /> for the current menu item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-235">
            <see langword="true" /> 場合、<see cref="T:System.Windows.Controls.MenuItem" />することができます。 それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-235">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> can be selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighted">
      <MemberSignature Language="C#" Value="public bool IsHighlighted { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsHighlighted {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-236">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-236">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-237">
            <see langword="true" /> 場合、<see cref="T:System.Windows.Controls.MenuItem" />が強調表示された場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-237">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is highlighted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-238">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-238">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-239">.NET Framework のバージョン 3.0 Service Pack 1 以降、<xref:System.Windows.Controls.MenuItem.IsHighlighted%2A>プロパティは、保護されている set アクセス操作子。</span><span class="sxs-lookup"><span data-stu-id="332f2-239">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsHighlighted%2A> property has a protected setter.</span></span> <span data-ttu-id="332f2-240">この機能を使用するのには、アプリケーションが .NET Framework version 3.5 を対象する必要があります。</span><span class="sxs-lookup"><span data-stu-id="332f2-240">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="332f2-241">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="332f2-241">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHighlighted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-242">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-243">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-243">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsHighlightedProperty>|  
|<span data-ttu-id="332f2-244">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-244">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-245">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-245">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-246">次の例では、メニュー項目が強調表示されているかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="332f2-246">The following example shows how to determine whether a menu item is highlighted.</span></span>  
  
 [!code-csharp[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#menuitemishighlighted)]
 [!code-vb[MenuItems_snip#MenuItemIsHighlighted](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#menuitemishighlighted)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHighlightedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-247">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-247">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="332f2-248">Specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-248">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-249">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-249">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="332f2-250">
            <see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-250">
              <see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-251">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-251">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-252">
            <see langword="true" /> 場合、<see cref="T:System.Windows.Controls.MenuItem" />が押された状態であるそれ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-252">
              <see langword="true" /> if a <see cref="T:System.Windows.Controls.MenuItem" /> is pressed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-253">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-253">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-254">.NET Framework のバージョン 3.0 Service Pack 1 以降、<xref:System.Windows.Controls.MenuItem.IsPressed%2A>プロパティは、保護されている set アクセス操作子。</span><span class="sxs-lookup"><span data-stu-id="332f2-254">Starting with the .NET Framework version 3.0 Service Pack 1, the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property has a protected setter.</span></span> <span data-ttu-id="332f2-255">この機能を使用するのには、アプリケーションが .NET Framework version 3.5 を対象する必要があります。</span><span class="sxs-lookup"><span data-stu-id="332f2-255">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="332f2-256">詳細については、「[.NET Framework のバージョンおよび依存関係](~/docs/framework/migration-guide/versions-and-dependencies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="332f2-256">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-257">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-257">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-258">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-258">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsPressedProperty>|  
|<span data-ttu-id="332f2-259">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-259">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-260">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-260">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-261">次の例を使用する方法を示しています、<xref:System.Windows.Controls.MenuItem.IsPressed%2A>メニュー項目スタイルのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="332f2-261">The following example shows how to use the <xref:System.Windows.Controls.MenuItem.IsPressed%2A> property in a menu item style.</span></span> <span data-ttu-id="332f2-262">メニュー項目が押されたとき、スタイルの前景、テキストのサイズ、テキストのスタイルを変更します。</span><span class="sxs-lookup"><span data-stu-id="332f2-262">When the menu item is pressed, the style of its foreground, text size, and text style change.</span></span>  
  
 [!code-xaml[MenuItemsStyle_snip#MenuItemsIsPressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemsStyle_snip/CSharp/MyApp.xaml#menuitemsispressed)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-263">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-263">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsPressed" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpen">
      <MemberSignature Language="C#" Value="public bool IsSubmenuOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubmenuOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSubmenuOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubmenuOpen { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-264">Gets or sets a value that indicates whether the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-264">Gets or sets a value that indicates whether the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-265">
            <see langword="true" /> 場合のサブメニュー、<see cref="T:System.Windows.Controls.MenuItem" />が開かれている場合は、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-265">
              <see langword="true" /> if the submenu of the <see cref="T:System.Windows.Controls.MenuItem" /> is open; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-266">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-266">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-267">ときに<xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A>に設定されている`true`、マウスのキャプチャに設定されている、<xref:System.Windows.Controls.MenuItem>とそのサブツリーします。</span><span class="sxs-lookup"><span data-stu-id="332f2-267">When <xref:System.Windows.Controls.MenuItem.IsSubmenuOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.MenuItem> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsSubmenuOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-268">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-268">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-269">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-269">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty>|  
|<span data-ttu-id="332f2-270">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-270">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-271">次の例のサブメニューを開く方法を示しています、<xref:System.Windows.Controls.MenuItem>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-271">The following example shows how to open a submenu of a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="332f2-272">この例では、<xref:System.Windows.Controls.MenuItem>と呼ばれる`fileMenu`が含まれています、<xref:System.Windows.Controls.MenuItem>と呼ばれる`recentFiles`サブメニューを含むです。</span><span class="sxs-lookup"><span data-stu-id="332f2-272">In this example, the <xref:System.Windows.Controls.MenuItem> called `fileMenu` contains a <xref:System.Windows.Controls.MenuItem> called `recentFiles` that has a submenu.</span></span> <span data-ttu-id="332f2-273">ときに`fileMenu`が開かれると、<xref:System.Windows.Controls.MenuItem.SubmenuOpened>イベントが発生し、`FileMenu_Opened`イベント ハンドラーのサブメニューが開きます`recentFiles`です。</span><span class="sxs-lookup"><span data-stu-id="332f2-273">When `fileMenu` is opened, the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event is raised and the `FileMenu_Opened` event handler opens the submenu of `recentFiles`.</span></span>  
  
 [!code-xaml[MenuItems_snip#IsSubMenuOpenMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#issubmenuopenmenu)]  
  
 [!code-csharp[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#issubmenuopen)]
 [!code-vb[MenuItems_snip#IsSubMenuOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#issubmenuopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmenuOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSubmenuOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSubmenuOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSubmenuOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSubmenuOpenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-274">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-274">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimation">
      <MemberSignature Language="C#" Value="public bool IsSuspendingPopupAnimation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSuspendingPopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSuspendingPopupAnimation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSuspendingPopupAnimation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-275">Gets whether a menu suspends animations on its <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-275">Gets whether a menu suspends animations on its <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-276">
            <see langword="true" /> 場合は、メニューは、自身のポップアップでアニメーションを中断する必要があります。それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-276">
              <see langword="true" /> if the menu should suspend animations on its popup; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-277">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-277">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSuspendingPopupAnimation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-278">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-278">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-279">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-279">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty>|  
|<span data-ttu-id="332f2-280">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-280">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-281">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-281">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuspendingPopupAnimationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSuspendingPopupAnimationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSuspendingPopupAnimationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-282">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-282">Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerTemplateSelector ItemContainerTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerTemplateSelector As ItemContainerTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ItemContainerTemplateSelector ^ ItemContainerTemplateSelector { System::Windows::Controls::ItemContainerTemplateSelector ^ get(); void set(System::Windows::Controls::ItemContainerTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-283">Gets or sets the custom logic for choosing a template used to display each item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-283">Gets or sets the custom logic for choosing a template used to display each item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-284">ロジックを提供し、項目コンテナーを返すカスタム オブジェクトです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-284">A custom object that provides logic and returns an item container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-285">使用して、<xref:System.Windows.Controls.ItemContainerTemplateSelector>かをコレクション内の項目は、同じ種類と、項目コンテナーを選択するカスタム ロジックを指定する必要があります。 別のアイテムのコンテナーを選択します。</span><span class="sxs-lookup"><span data-stu-id="332f2-285">Use an <xref:System.Windows.Controls.ItemContainerTemplateSelector> to choose different item containers if the items in your collection are the same type and you need to provide custom logic to choose the item container.</span></span>  
  
<a name="dependencyPropertyInfo_ItemContainerTemplateSelector"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-286">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-286">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-287">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-287">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty>|  
|<span data-ttu-id="332f2-288">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-288">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-289">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-289">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.ItemContainerTemplateSelectorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemContainerTemplateSelectorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemContainerTemplateSelectorProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-290">Identifies the <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-290">Identifies the <see cref="P:System.Windows.Controls.MenuItem.ItemContainerTemplateSelector" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-291">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-291">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-292">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is invoked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-292">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is invoked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332f2-293">Called when the template's tree is generated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-293">Called when the template's tree is generated.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnChecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-294">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-294">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-295">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-295">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="true" />.</span>
          </span>
          <span data-ttu-id="332f2-296">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-296">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Checked" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-297">コントロールで発生し、<xref:System.Windows.Controls.MenuItem.Checked>を呼び出してイベント<xref:System.Windows.UIElement.RaiseEvent%2A>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-297">The control raises the <xref:System.Windows.Controls.MenuItem.Checked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="332f2-298">詳細については、次を参照してください。[ルーティング イベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="332f2-298">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="332f2-299">オーバーライドする場合<see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="332f2-299">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332f2-300">Called when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked and raises a <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-300">Called when a <see cref="T:System.Windows.Controls.MenuItem" /> is clicked and raises a <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-301">継承する場合<xref:System.Windows.Controls.MenuItem>、次の動作を取得する基本クラスを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="332f2-301">If you inherit from <xref:System.Windows.Controls.MenuItem>, be sure to call the base class to get the following behavior.</span></span>  
  
-   <span data-ttu-id="332f2-302">切り替え、<xref:System.Windows.Controls.MenuItem.IsChecked%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="332f2-302">Toggling of the <xref:System.Windows.Controls.MenuItem.IsChecked%2A> property.</span></span>  
  
-   <span data-ttu-id="332f2-303">メニュー項目に設定されている重点を置きます。</span><span class="sxs-lookup"><span data-stu-id="332f2-303">Focus being set to the menu item.</span></span>  
  
-   <span data-ttu-id="332f2-304">オートメーションでは、イベントを起動します。</span><span class="sxs-lookup"><span data-stu-id="332f2-304">Automation invoke event.</span></span>  
  
-   <span data-ttu-id="332f2-305"><xref:System.Windows.Controls.MenuItem.Click> イベント。</span><span class="sxs-lookup"><span data-stu-id="332f2-305"><xref:System.Windows.Controls.MenuItem.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="332f2-306">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-306">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="332f2-307">A <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> for this <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-307">A <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer" /> for this <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-308">The event data for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-308">The event data for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-309">Announces that the keyboard is focused on this element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-309">Announces that the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-310">The event data for the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-310">The event data for the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-311">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" /> and raises an <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-311">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" /> and raises an <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-312">The event data for the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-312">The event data for the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-313">Called when the focus is no longer on or within a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-313">Called when the focus is no longer on or within a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-314">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-314">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-315">Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-315">Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-316">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-316">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-317">Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-317">Responds to the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-318">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-318">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-319">Called whenever the mouse enters a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-319">Called whenever the mouse enters a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-320">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-320">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-321">Called whenever the mouse leaves a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-321">Called whenever the mouse leaves a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-322">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-322">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-323">Called when the left mouse button is pressed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-323">Called when the left mouse button is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-324">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-324">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-325">Called when the left mouse button is released.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-325">Called when the left mouse button is released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-326">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-326">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-327">Called when the mouse is moved over a menu item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-327">Called when the mouse is moved over a menu item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-328">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-328">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-329">Called when the right mouse button is pressed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-329">Called when the right mouse button is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-330">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-330">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-331">Called when the right mouse button is released.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-331">Called when the right mouse button is released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-332">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-332">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-333">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-333">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="332f2-334">この例を使用する方法を示しています、<xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="332f2-334">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuClosed%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSubmenuOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnSubmenuOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSubmenuOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSubmenuOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSubmenuOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-335">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-335">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-336">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is opened.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-336">Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem" /> is opened.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="332f2-337">この例を使用する方法を示しています、<xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="332f2-337">This example shows how to use the <xref:System.Windows.Controls.MenuItem.OnSubmenuOpened%2A> method.</span></span>  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnchecked">
      <MemberSignature Language="C#" Value="protected virtual void OnUnchecked (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUnchecked(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUnchecked (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUnchecked(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="332f2-338">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-338">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-339">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-339">Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked" /> property becomes <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-340">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-340">This method raises the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-341">コントロールで発生し、<xref:System.Windows.Controls.MenuItem.Unchecked>を呼び出してイベント<xref:System.Windows.UIElement.RaiseEvent%2A>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-341">The control raises the <xref:System.Windows.Controls.MenuItem.Unchecked> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="332f2-342">詳細については、次を参照してください。[ルーティング イベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="332f2-342">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="332f2-343">オーバーライドする場合<see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="332f2-343">When overriding <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="332f2-344">Old value of the parent of the visual, or null if the visual did not have a parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-344">Old value of the parent of the visual, or null if the visual did not have a parent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-345">Called when the parent of the visual <see cref="T:System.Windows.Controls.MenuItem" /> changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-345">Called when the parent of the visual <see cref="T:System.Windows.Controls.MenuItem" /> changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="332f2-346">Element used to display the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-346">Element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="332f2-347">Specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-347">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-348">Prepares the specified element to display the specified item.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-348">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-349">要素の準備可能性があります、バインドの設定、スタイルの適用を必要とします。</span><span class="sxs-lookup"><span data-stu-id="332f2-349">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.MenuItemRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.MenuItemRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.Role" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Role As MenuItemRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::MenuItemRole Role { System::Windows::Controls::MenuItemRole get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.MenuItemRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-350">Gets a value that indicates the role of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-350">Gets a value that indicates the role of a <see cref="T:System.Windows.Controls.MenuItem" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-351">
            <see cref="T:System.Windows.Controls.MenuItemRole" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-351">One of the <see cref="T:System.Windows.Controls.MenuItemRole" /> values.</span>
          </span>
          <span data-ttu-id="332f2-352">既定値は、<see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-352">The default is <see cref="F:System.Windows.Controls.MenuItemRole.TopLevelItem" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-353">値<xref:System.Windows.Controls.MenuItem.Role%2A>へのリレーションシップによって異なります、<xref:System.Windows.Controls.Menu>およびその他の<xref:System.Windows.Controls.MenuItem>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="332f2-353">The value of <xref:System.Windows.Controls.MenuItem.Role%2A> depends on the relationship to the <xref:System.Windows.Controls.Menu> and other <xref:System.Windows.Controls.MenuItem> objects.</span></span>  
  
<a name="dependencyPropertyInfo_Role"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-354">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-354">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-355">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-355">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.RoleProperty>|  
|<span data-ttu-id="332f2-356">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-356">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-357">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-357">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RoleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RoleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.RoleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RoleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RoleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-358">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Role" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-358">Identifies the <see cref="P:System.Windows.Controls.MenuItem.Role" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SeparatorStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SeparatorStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SeparatorStyleKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SeparatorStyleKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SeparatorStyleKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-359">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-359">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-360">適用されるスタイルのリソース キー、<see cref="T:System.Windows.Controls.MenuItem" />ときに、<see cref="T:System.Windows.Controls.MenuItem" />は、<see cref="T:System.Windows.Controls.Separator" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-360">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a <see cref="T:System.Windows.Controls.Separator" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-361">このプロパティのスタイルを使用する、<xref:System.Windows.Controls.Separator>メニューにします。</span><span class="sxs-lookup"><span data-stu-id="332f2-361">Use this property to change the style of a <xref:System.Windows.Controls.Separator> in a menu.</span></span>  
  
<a name="xamlAttributeUsage_SeparatorStyleKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="332f2-362">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="332f2-362">XAML Attribute Usage</span></span>  
 <span data-ttu-id="332f2-363"><*object* *property*={ **MenuItem.SeparatorStyleKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="332f2-363"><*object* *property*={ **MenuItem.SeparatorStyleKey**}`"`/></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="332f2-364">次の例は、スタイルには、このプロパティを使用する方法を示しています、<xref:System.Windows.Controls.Separator>で、<xref:System.Windows.Controls.Menu>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-364">The following example shows how to use this property to style a <xref:System.Windows.Controls.Separator> in a <xref:System.Windows.Controls.Menu>.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="332f2-365">Container to which the style will be applied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-365">Container to which the style will be applied.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="332f2-366">Item to which the container belongs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-366">Item to which the container belongs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="332f2-367">Used to determine whether to apply a style to the item container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-367">Used to determine whether to apply a style to the item container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="332f2-368">
            <see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> is not a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-368">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.MenuItem" /> is not a <see cref="T:System.Windows.Controls.Separator" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClick">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnClick" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnClick As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnClick { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-369">Gets or sets a value that indicates that the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-369">Gets or sets a value that indicates that the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-370">
            <see langword="true" /> 場合にこのサブメニュー<see cref="T:System.Windows.Controls.MenuItem" />があるこの項目がクリックされた、それ以外の場合を閉じないでください<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-370">
              <see langword="true" /> if the submenu in which this <see cref="T:System.Windows.Controls.MenuItem" /> is located should not close when this item is clicked; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-371">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-371">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnClick"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-372">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-372">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-373">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-373">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty>|  
|<span data-ttu-id="332f2-374">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-374">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-375">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-375">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-376">次の例では、<xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A>サブメニュー項目がクリックされたときに閉じませんをで項目を作成するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="332f2-376">The following example uses the <xref:System.Windows.Controls.MenuItem.StaysOpenOnClick%2A> property to create an item in a submenu that does not close when the item is clicked.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuStaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenustaysopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnClickProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnClickProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnClickProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnClickProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnClickProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-377">Identifies the <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-377">Identifies the <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuClosed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuClosed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-378">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-378">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="false" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuClosed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="332f2-379">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="332f2-379">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-380">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-380">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuClosedEvent>|  
|<span data-ttu-id="332f2-381">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="332f2-381">Routing strategy</span></span>|<span data-ttu-id="332f2-382">バブル</span><span class="sxs-lookup"><span data-stu-id="332f2-382">Bubbling</span></span>|  
|<span data-ttu-id="332f2-383">Delegate</span><span class="sxs-lookup"><span data-stu-id="332f2-383">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-384">次の例は、通話と処理、<xref:System.Windows.Controls.MenuItem.SubmenuClosed>イベント。</span><span class="sxs-lookup"><span data-stu-id="332f2-384">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuClosed> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventclosed2)]
 [!code-vb[MenuItems_snip#SubmenuEventClosed2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventclosed2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-385">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> routed event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-385">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-386">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-386">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-387">適用されるスタイルのリソース キー、<see cref="T:System.Windows.Controls.MenuItem" />ときに、<see cref="T:System.Windows.Controls.MenuItem" />サブメニューのヘッダーです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-387">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a submenu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-388">このプロパティのスタイルを使用する、<xref:System.Windows.Controls.MenuItem>が<xref:System.Windows.Controls.MenuItem.Role%2A>プロパティに設定されている<xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-388">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="332f2-389">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="332f2-389">XAML Attribute Usage</span></span>  
 <span data-ttu-id="332f2-390"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="332f2-390"><*object* *property*={ **MenuItem.SubmenuHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SubmenuItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SubmenuItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.SubmenuItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SubmenuItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ SubmenuItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-391">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-391">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-392">適用されるスタイルのリソース キー、<see cref="T:System.Windows.Controls.MenuItem" />ときに、<see cref="T:System.Windows.Controls.MenuItem" />サブメニューがします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-392">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a submenu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-393">このプロパティのスタイルを使用する、<xref:System.Windows.Controls.MenuItem>が<xref:System.Windows.Controls.MenuItem.Role%2A>プロパティに設定されている<xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-393">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.SubmenuItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_SubmenuItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="332f2-394">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="332f2-394">XAML Attribute Usage</span></span>  
 <span data-ttu-id="332f2-395"><*object* *property*={ **MenuItem.SubmenuItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="332f2-395"><*object* *property*={ **MenuItem.SubmenuItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SubmenuOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SubmenuOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.SubmenuOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubmenuOpened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SubmenuOpened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-396">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-396">Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen" /> property changes to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SubmenuOpened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="332f2-397">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="332f2-397">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-398">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-398">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.SubmenuOpenedEvent>|  
|<span data-ttu-id="332f2-399">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="332f2-399">Routing strategy</span></span>|<span data-ttu-id="332f2-400">バブル</span><span class="sxs-lookup"><span data-stu-id="332f2-400">Bubbling</span></span>|  
|<span data-ttu-id="332f2-401">Delegate</span><span class="sxs-lookup"><span data-stu-id="332f2-401">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-402">次の例は、通話と処理、<xref:System.Windows.Controls.MenuItem.SubmenuOpened>イベント。</span><span class="sxs-lookup"><span data-stu-id="332f2-402">The following examples demonstrate calling and handling the <xref:System.Windows.Controls.MenuItem.SubmenuOpened> event.</span></span>  
  
 [!code-xaml[MenuItems_snip#SubmenuEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml#submenuevents1)]  
  
 [!code-csharp[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItems_snip/CSharp/Pane1.xaml.cs#submenueventopened2)]
 [!code-vb[MenuItems_snip#SubmenuEventOpened2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItems_snip/visualbasic/pane1.xaml.vb#submenueventopened2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SubmenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SubmenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SubmenuOpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SubmenuOpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-403">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> routed event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-403">Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelHeaderTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelHeaderTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelHeaderTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelHeaderTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelHeaderTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelHeaderTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-404">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-404">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-405">適用されるスタイルのリソース キー、<see cref="T:System.Windows.Controls.MenuItem" />ときに、<see cref="T:System.Windows.Controls.MenuItem" />トップレベル メニューのヘッダーです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-405">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when the <see cref="T:System.Windows.Controls.MenuItem" /> is a header of a top-level menu.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-406">このプロパティのスタイルを使用する、<xref:System.Windows.Controls.MenuItem>が<xref:System.Windows.Controls.MenuItem.Role%2A>プロパティに設定されている<xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-406">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelHeader?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelHeaderTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="332f2-407">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="332f2-407">XAML Attribute Usage</span></span>  
 <span data-ttu-id="332f2-408"><*object* *property*={ **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="332f2-408"><*object* *property*={ **MenuItem.TopLevelHeaderTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelItemTemplateKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TopLevelItemTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TopLevelItemTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TopLevelItemTemplateKey As ResourceKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::ResourceKey ^ TopLevelItemTemplateKey { System::Windows::ResourceKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-409">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-409">Gets the resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-410">適用されるスタイルのリソース キー、<see cref="T:System.Windows.Controls.MenuItem" />である場合、最上位<see cref="T:System.Windows.Controls.MenuItem" />コマンドを呼び出すことができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-410">The resource key for a style applied to a <see cref="T:System.Windows.Controls.MenuItem" /> when it is a top-level <see cref="T:System.Windows.Controls.MenuItem" /> that can invoke commands.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-411">このプロパティのスタイルを使用する、<xref:System.Windows.Controls.MenuItem>が<xref:System.Windows.Controls.MenuItem.Role%2A>プロパティに設定されている<xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-411">Use this property to change the style of a <xref:System.Windows.Controls.MenuItem> whose <xref:System.Windows.Controls.MenuItem.Role%2A> property is set to <xref:System.Windows.Controls.MenuItemRole.TopLevelItem?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_TopLevelItemTemplateKey"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="332f2-412">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="332f2-412">XAML Attribute Usage</span></span>  
 <span data-ttu-id="332f2-413"><*object* *property*={ **MenuItem.TopLevelItemTemplateKey**}`"`/></span><span class="sxs-lookup"><span data-stu-id="332f2-413"><*object* *property*={ **MenuItem.TopLevelItemTemplateKey**}`"`/></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unchecked">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unchecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unchecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.MenuItem.Unchecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unchecked As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unchecked;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-414">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is unchecked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-414">Occurs when a <see cref="T:System.Windows.Controls.MenuItem" /> is unchecked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Unchecked"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="332f2-415">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="332f2-415">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-416">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-416">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UncheckedEvent>|  
|<span data-ttu-id="332f2-417">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="332f2-417">Routing strategy</span></span>|<span data-ttu-id="332f2-418">バブル</span><span class="sxs-lookup"><span data-stu-id="332f2-418">Bubbling</span></span>|  
|<span data-ttu-id="332f2-419">Delegate</span><span class="sxs-lookup"><span data-stu-id="332f2-419">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="332f2-420">次の例では、処理、<xref:System.Windows.Controls.MenuItem.Unchecked>イベント。</span><span class="sxs-lookup"><span data-stu-id="332f2-420">The following example demonstrates handling the <xref:System.Windows.Controls.MenuItem.Unchecked> event.</span></span>  
  
 [!code-xaml[MenuItemCommandsAndEvents#3](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#4](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#4)]
 [!code-vb[MenuItemCommandsAndEvents#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UncheckedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UncheckedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UncheckedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UncheckedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UncheckedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UncheckedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-421">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-421">Identifies the <see cref="E:System.Windows.Controls.MenuItem.Unchecked" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplate">
      <MemberSignature Language="C#" Value="public bool UsesItemContainerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesItemContainerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesItemContainerTemplate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesItemContainerTemplate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-422">Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-422">Gets or sets a value that indicates whether the menu selects different item containers, depending on the type of the item in the underlying collection or some other heuristic.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="332f2-423">
            <see langword="true" /> メニュー選択別のアイテムのコンテナーです。それ以外の場合、<see langword="false" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-423">
              <see langword="true" /> the menu selects different item containers; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-424">登録済みの既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-424">The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="332f2-425">新機能に影響を与える値の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-425">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="332f2-426">このプロパティは、コレクションにバインドしてメニューを作成する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="332f2-426">This property is useful if you want to create a menu by binding to a collection.</span></span>  <span data-ttu-id="332f2-427">項目コンテナーは、コレクション内のオブジェクトを表示する UI 要素です。</span><span class="sxs-lookup"><span data-stu-id="332f2-427">The item container is the UI element that displays the object in a collection.</span></span> <span data-ttu-id="332f2-428">含むメニューを作成するコレクションにバインドする<xref:System.Windows.Controls.MenuItem>オブジェクトおよび<xref:System.Windows.Controls.Separator>オブジェクト、設定、<xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A>プロパティを true し、作成、<xref:System.Windows.Controls.ItemContainerTemplate>コレクション内のオブジェクトの種類ごとにします。</span><span class="sxs-lookup"><span data-stu-id="332f2-428">If you want to bind to a collection to create a menu that contains <xref:System.Windows.Controls.MenuItem> objects and <xref:System.Windows.Controls.Separator> objects, set the <xref:System.Windows.Controls.Primitives.MenuBase.UsesItemContainerTemplate%2A> property to true and create an <xref:System.Windows.Controls.ItemContainerTemplate> for each type of object in your collection.</span></span>  <span data-ttu-id="332f2-429">各<xref:System.Windows.Controls.ItemContainerTemplate>いずれかを指定する必要があります、<xref:System.Windows.Controls.MenuItem>または<xref:System.Windows.Controls.Separator>です。</span><span class="sxs-lookup"><span data-stu-id="332f2-429">Each <xref:System.Windows.Controls.ItemContainerTemplate> must contain either a <xref:System.Windows.Controls.MenuItem> or a <xref:System.Windows.Controls.Separator>.</span></span>  
  
<a name="dependencyPropertyInfo_UsesItemContainerTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="332f2-430">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="332f2-430">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="332f2-431">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="332f2-431">Identifier field</span></span>|<xref:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty>|  
|<span data-ttu-id="332f2-432">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="332f2-432">Metadata properties set to `true`</span></span>|<span data-ttu-id="332f2-433">なし</span><span class="sxs-lookup"><span data-stu-id="332f2-433">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesItemContainerTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UsesItemContainerTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UsesItemContainerTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.MenuItem.UsesItemContainerTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UsesItemContainerTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UsesItemContainerTemplateProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="332f2-434">Identifies the <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="332f2-434">Identifies the <see cref="P:System.Windows.Controls.MenuItem.UsesItemContainerTemplate" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>