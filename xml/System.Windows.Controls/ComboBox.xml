<Type Name="ComboBox" FullName="System.Windows.Controls.ComboBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c85f6e991fc29987000c08df8217f969c0dac89" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52597278" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBox : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComboBox extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ComboBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBox : System::Windows::Controls::Primitives::Selector" />
  <TypeSignature Language="F#" Value="type ComboBox = class&#xA;    inherit Selector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ComboBoxItem))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_EditableTextBox", Type=typeof(System.Windows.Controls.TextBox))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="60c21-101">コントロールの矢印をクリックして表示または非表示にすることができるドロップダウン リストが付いた選択コントロールを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="60c21-101">Represents a selection control with a drop-down list that can be shown or hidden by clicking the arrow on the control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-102"><xref:System.Windows.Controls.ComboBox>ユーザーはドロップダウン リストから項目を選択する、または必要に応じて、コントロールのテキスト ボックスに新しいテキストを入力できます。</span><span class="sxs-lookup"><span data-stu-id="60c21-102">The <xref:System.Windows.Controls.ComboBox> allows the user to select an item from a drop-down list or optionally to enter new text in the text box of the control.</span></span> <span data-ttu-id="60c21-103"><xref:System.Windows.Controls.ComboBox> <xref:System.Windows.Controls.ItemsControl>、任意の型 (文字列、画像、パネルなど) のオブジェクトのコレクションを含めることを意味することができます。</span><span class="sxs-lookup"><span data-stu-id="60c21-103"><xref:System.Windows.Controls.ComboBox> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="60c21-104">詳細については、<xref:System.Windows.Controls.ItemsControl> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="60c21-104">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="60c21-105"><xref:System.Windows.Controls.ComboBox.IsEditable%2A>と<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>プロパティを指定する方法、<xref:System.Windows.Controls.ComboBox>とき、ユーザーは、次のいずれかの動作します。</span><span class="sxs-lookup"><span data-stu-id="60c21-105">The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:</span></span>  
  
-   <span data-ttu-id="60c21-106">入力した文字列内の項目を選択する、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-106">Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="60c21-107">内の項目に対応していない文字列を入力、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-107">Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="60c21-108">テキスト ボックス内にある文字列の一部を選択します。</span><span class="sxs-lookup"><span data-stu-id="60c21-108">Selects part of the string that is in the text box.</span></span>  
  
-   <span data-ttu-id="60c21-109">コピーまたはテキスト ボックスに値を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="60c21-109">Copies or pastes a value into the text box.</span></span>  
  
 <span data-ttu-id="60c21-110">次の表に、ユーザーは、の値に応じて、実行できないアクション<xref:System.Windows.Controls.ComboBox.IsEditable%2A>と<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-110">The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.</span></span>  
  
||<span data-ttu-id="60c21-111"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> は `true` です</span><span class="sxs-lookup"><span data-stu-id="60c21-111"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`</span></span>|<span data-ttu-id="60c21-112"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> は `false` です</span><span class="sxs-lookup"><span data-stu-id="60c21-112"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`</span></span>|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="60c21-113"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> は `true` です</span><span class="sxs-lookup"><span data-stu-id="60c21-113"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`</span></span>|<span data-ttu-id="60c21-114">-内の項目を選択することはできません、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-114">-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-115">-内の項目に対応していない文字列を入力しますことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-115">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-116">文字列の一部を選択可能、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-116">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="60c21-117">の内の文字列をコピーことができます、<xref:System.Windows.Controls.ComboBox>テキスト ボックスに文字列を貼り付けることはできませんが、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-117">-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|<span data-ttu-id="60c21-118">項目を選択可能、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-118">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-119">の内の項目に対応していない文字列を入力ことができます、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-119">-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-120">文字列の一部を選択可能、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-120">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="60c21-121">のコピーまたは内の文字列を貼り付けことができます、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-121">-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|  
|<span data-ttu-id="60c21-122"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> は `false` です</span><span class="sxs-lookup"><span data-stu-id="60c21-122"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`</span></span>|<span data-ttu-id="60c21-123">項目を選択可能、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-123">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-124">-内の項目に対応していない文字列を入力しますことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-124">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-125">-内の文字列の一部を選択することはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-125">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-126">のコピーまたは内の文字列を貼り付けことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-126">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|<span data-ttu-id="60c21-127">項目を選択可能、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-127">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-128">-内の項目に対応していない文字列を入力しますことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-128">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-129">-内の文字列の一部を選択することはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-129">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-130">のコピーまたは内の文字列を貼り付けことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-130">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|  
  
 <span data-ttu-id="60c21-131"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>プロパティがの場合のみ有効<xref:System.Windows.Controls.ComboBox.IsEditable%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="60c21-131">The <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> property has an effect only if <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`.</span></span>  
  
 <span data-ttu-id="60c21-132"><xref:System.Windows.Controls.ComboBox>は、 <xref:System.Windows.Controls.ItemsControl>、単純な文字列以外のコンテンツを表示できるようにします。</span><span class="sxs-lookup"><span data-stu-id="60c21-132">The <xref:System.Windows.Controls.ComboBox> is an <xref:System.Windows.Controls.ItemsControl>, so it can display content other than simple strings.</span></span>  <span data-ttu-id="60c21-133">たとえば、作成、<xref:System.Windows.Controls.ComboBox>イメージの一覧を格納しています。</span><span class="sxs-lookup"><span data-stu-id="60c21-133">For example, you can create a <xref:System.Windows.Controls.ComboBox> that contains a list of images.</span></span> <span data-ttu-id="60c21-134">内の文字列以外のコンテンツがある場合、<xref:System.Windows.Controls.ComboBox>に無意味な文字列が表示される、<xref:System.Windows.Controls.ComboBox>ときにドロップダウン リストが非表示になります。</span><span class="sxs-lookup"><span data-stu-id="60c21-134">When you have content other than strings in the <xref:System.Windows.Controls.ComboBox>, a nonsensical string might appear in the <xref:System.Windows.Controls.ComboBox> when the drop-down list is hidden.</span></span> <span data-ttu-id="60c21-135">文字列を表示する、<xref:System.Windows.Controls.ComboBox>文字列以外の項目が含まれている、使用、<xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType>または<xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType>添付プロパティ。</span><span class="sxs-lookup"><span data-stu-id="60c21-135">To display a string in the <xref:System.Windows.Controls.ComboBox> when it contains non-string items, use the <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> or <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> attached property.</span></span>  
  
## <a name="customizing-the-combobox-control"></a><span data-ttu-id="60c21-136">コンボ ボックス コントロールをカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="60c21-136">Customizing the ComboBox Control</span></span>  
 <span data-ttu-id="60c21-137">複数に同じプロパティの設定を適用する<xref:System.Windows.Controls.ComboBox>コントロールを使用して、<xref:System.Windows.FrameworkElement.Style%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="60c21-137">To apply the same property settings to multiple <xref:System.Windows.Controls.ComboBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="60c21-138">既定値を変更する<xref:System.Windows.Controls.ControlTemplate>固有の外観を制御します。</span><span class="sxs-lookup"><span data-stu-id="60c21-138">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="60c21-139">作成の詳細については、<xref:System.Windows.Controls.ControlTemplate>を参照してください[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。</span><span class="sxs-lookup"><span data-stu-id="60c21-139">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="60c21-140">パーツとに固有の状態を表示する、<xref:System.Windows.Controls.ComboBox>を参照してください[ComboBox のスタイルとテンプレート](~/docs/framework/wpf/controls/combobox-styles-and-templates.md)します。</span><span class="sxs-lookup"><span data-stu-id="60c21-140">To see the parts and states that are specific to the <xref:System.Windows.Controls.ComboBox>, see [ComboBox Styles and Templates](~/docs/framework/wpf/controls/combobox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="60c21-141">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="60c21-141">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="60c21-142">プロパティが既定のスタイルによって設定されている場合は、アプリケーションでコントロールが表示されたら、既定値から、プロパティが変更可能性があります。</span><span class="sxs-lookup"><span data-stu-id="60c21-142">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="60c21-143">デスクトップ テーマでは、アプリケーションが実行されている場合は、使用、既定のスタイルが決定されます。</span><span class="sxs-lookup"><span data-stu-id="60c21-143">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="60c21-144">詳細については、次を参照してください。[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)します。</span><span class="sxs-lookup"><span data-stu-id="60c21-144">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c21-145">ビジュアルのプロパティの設定はのみ、効果がそのプロパティが両方に存在する場合は<xref:System.Windows.Controls.ComboBox>コントロールの既定のテンプレートとを使用して設定をします。</span><span class="sxs-lookup"><span data-stu-id="60c21-145">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ComboBox> control's default template and is set by using a .</span></span> <span data-ttu-id="60c21-146">"を変更するビジュアル構造体のコントロールのセクションではビジュアルのプロパティの一覧を検索できます[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。</span><span class="sxs-lookup"><span data-stu-id="60c21-146">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c21-147">次の例では、作成、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-147">The following example creates a <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="60c21-148">例では、設定、<xref:System.Windows.Controls.ComboBox>バインドすることによって、<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>プロパティ型のコレクション オブジェクトを`VacationSpots`します。</span><span class="sxs-lookup"><span data-stu-id="60c21-148">The example populates the <xref:System.Windows.Controls.ComboBox> by binding the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to a collection object of type `VacationSpots`.</span></span> <span data-ttu-id="60c21-149">例でも作成、<xref:System.Windows.Controls.TextBlock>の選択項目を表示する、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-149">The example also creates a <xref:System.Windows.Controls.TextBlock> that displays the selected item of the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 [!code-xaml[ComboBoxItems#ComboBoxClass](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#comboboxclass)]  
  
 <span data-ttu-id="60c21-150">次の例は、コレクション オブジェクトを定義する、<xref:System.Windows.Controls.ComboBox>前の例ではバインドします。</span><span class="sxs-lookup"><span data-stu-id="60c21-150">The following example defines the collection object that the <xref:System.Windows.Controls.ComboBox> in the preceding example binds to.</span></span>  
  
 [!code-csharp[ComboBoxItems#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml.cs#data)]
 [!code-vb[ComboBoxItems#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxItems/VIsualBasic/Window1.xaml.vb#data)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ComboBoxItem" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053">
      <span data-ttu-id="60c21-151">WPF コントロール ギャラリー サンプル</span>
      <span class="sxs-lookup">
        <span data-stu-id="60c21-151">WPF Controls Gallery Sample</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c21-152">
            <see cref="T:System.Windows.Controls.ComboBox" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-152">Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBox" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownClosed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownClosed;" />
      <MemberSignature Language="F#" Value="member this.DropDownClosed : EventHandler " Usage="member this.DropDownClosed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-153">コンボ ボックスのドロップダウン リストが閉じたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-153">Occurs when the drop-down list of the combo box closes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="60c21-154">次の例では、イベント ハンドラーを割り当てる方法と処理する方法を示しています、<xref:System.Windows.Controls.ComboBox.DropDownOpened>と<xref:System.Windows.Controls.ComboBox.DropDownClosed>イベント。</span><span class="sxs-lookup"><span data-stu-id="60c21-154">The following example shows how to assign event handlers and how to handle the <xref:System.Windows.Controls.ComboBox.DropDownOpened> and <xref:System.Windows.Controls.ComboBox.DropDownClosed> events.</span></span>  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownOpened">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DropDownOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DropDownOpened;" />
      <MemberSignature Language="F#" Value="member this.DropDownOpened : EventHandler " Usage="member this.DropDownOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-155">コンボ ボックスのドロップダウン リストが開いたときに発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-155">Occurs when the drop-down list of the combo box opens.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="60c21-156">次の例では、イベント ハンドラーを割り当てるし、処理する方法を示しています、<xref:System.Windows.Controls.ComboBox.DropDownOpened>と<xref:System.Windows.Controls.ComboBox.DropDownClosed>イベント。</span><span class="sxs-lookup"><span data-stu-id="60c21-156">The following example shows how to assign event handlers and handle the <xref:System.Windows.Controls.ComboBox.DropDownOpened> and <xref:System.Windows.Controls.ComboBox.DropDownClosed> events.</span></span>  
  
 [!code-xaml[ComboBoxSimple#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="comboBox.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c21-157">指定された項目の表示に使用する要素を作成または識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-157">Creates or identifies the element used to display the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c21-158">指定された項目を表示するために使用する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-158">The element used to display the specified item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ComboBox.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-159">コンボ ボックスがスクロールをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-159">Gets a value that indicates whether a combo box supports scrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-160">
            <see cref="T:System.Windows.Controls.ComboBox" /> がスクロールをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-160">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> supports scrolling; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="60c21-161">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-161">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-162">コントロールに、<xref:System.Windows.Controls.ScrollViewer>そのスタイルであり、カスタムのキーボード スクロール動作、<xref:System.Windows.Controls.ListBox.HandlesScrolling%2A>返す必要があります`true`します。</span><span class="sxs-lookup"><span data-stu-id="60c21-162">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal override bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-163">
            <see cref="T:System.Windows.Controls.ComboBox" /> にフォーカスがあるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-163">Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ComboBox" /> has focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-164">
            <see cref="T:System.Windows.Controls.ComboBox" /> にフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-164">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> has focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsDropDownOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDropDownOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDropDownOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDropDownOpen : bool with get, set" Usage="System.Windows.Controls.ComboBox.IsDropDownOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-165">コンボ ボックスのドロップダウンが現在開かれているかどうかを示す値を、取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-165">Gets or sets a value that indicates whether the drop-down for a combo box is currently open.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-166">ドロップダウン部分が開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-166">
              <see langword="true" /> if the drop-down is open; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="60c21-167">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-167">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="60c21-168">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="60c21-168">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="60c21-169">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="60c21-169">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.IsDropDownOpenProperty>|  
|<span data-ttu-id="60c21-170">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="60c21-170">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="60c21-171">次の例は、使用する方法を示します、<xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A>コンボ ボックスの開始時に、ドロップダウン コントロールでコンボ ボックスを作成するプロパティが開かれました。</span><span class="sxs-lookup"><span data-stu-id="60c21-171">The following example shows how to use the <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property to create a combo box with the drop down control opened when the combo box is initiated.</span></span>  
  
 [!code-xaml[ComboBoxStyles#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDropDownOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDropDownOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDropDownOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.IsDropDownOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-172">
            <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-172">Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsEditable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEditable : bool with get, set" Usage="System.Windows.Controls.ComboBox.IsEditable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-173">
            <see cref="T:System.Windows.Controls.ComboBox" /> のテキスト ボックス内のテキストの編集を有効または無効にする値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-173">Gets or sets a value that enables or disables editing of the text in text box of the <see cref="T:System.Windows.Controls.ComboBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-174">
            <see cref="T:System.Windows.Controls.ComboBox" /> が編集可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-174">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> can be edited; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="60c21-175">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-175">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-176"><xref:System.Windows.Controls.ComboBox.IsEditable%2A>と<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>プロパティを指定する方法、<xref:System.Windows.Controls.ComboBox>とき、ユーザーは、次のいずれかの動作します。</span><span class="sxs-lookup"><span data-stu-id="60c21-176">The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:</span></span>  
  
-   <span data-ttu-id="60c21-177">入力した文字列内の項目を選択する、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-177">Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="60c21-178">内の項目に対応していない文字列を入力、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-178">Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="60c21-179">テキスト ボックス内にある文字列の一部を選択します。</span><span class="sxs-lookup"><span data-stu-id="60c21-179">Selects part of the string that is in the text box.</span></span>  
  
-   <span data-ttu-id="60c21-180">コピーまたはテキスト ボックスに値を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="60c21-180">Copies or pastes a value into the text box.</span></span>  
  
 <span data-ttu-id="60c21-181">次の表に、ユーザーは、の値に応じて、実行できないアクション<xref:System.Windows.Controls.ComboBox.IsEditable%2A>と<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-181">The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.</span></span>  
  
||<span data-ttu-id="60c21-182"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> は `true` です</span><span class="sxs-lookup"><span data-stu-id="60c21-182"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`</span></span>|<span data-ttu-id="60c21-183"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> は `false` です</span><span class="sxs-lookup"><span data-stu-id="60c21-183"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`</span></span>|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="60c21-184"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> は `true` です</span><span class="sxs-lookup"><span data-stu-id="60c21-184"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`</span></span>|<span data-ttu-id="60c21-185">-内の項目を選択することはできません、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-185">-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-186">-内の項目に対応していない文字列を入力しますことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-186">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-187">文字列の一部を選択可能、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-187">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="60c21-188">の内の文字列をコピーことができます、<xref:System.Windows.Controls.ComboBox>テキスト ボックスに文字列を貼り付けることはできませんが、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-188">-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|<span data-ttu-id="60c21-189">項目を選択可能、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-189">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-190">の内の項目に対応していない文字列を入力ことができます、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-190">-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-191">文字列の一部を選択可能、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-191">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="60c21-192">のコピーまたは内の文字列を貼り付けことができます、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-192">-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|  
|<span data-ttu-id="60c21-193"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> は `false` です</span><span class="sxs-lookup"><span data-stu-id="60c21-193"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`</span></span>|<span data-ttu-id="60c21-194">項目を選択可能、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-194">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-195">-内の項目に対応していない文字列を入力しますことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-195">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-196">-内の文字列の一部を選択することはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-196">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-197">のコピーまたは内の文字列を貼り付けことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-197">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|<span data-ttu-id="60c21-198">項目を選択可能、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-198">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-199">-内の項目に対応していない文字列を入力しますことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-199">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-200">-内の文字列の一部を選択することはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-200">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-201">のコピーまたは内の文字列を貼り付けことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-201">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|  
  
 <span data-ttu-id="60c21-202">ときに<xref:System.Windows.Controls.ComboBox.IsEditable%2A>と等しい`false`、<xref:System.Windows.Controls.ComboBox>を使用して、<xref:System.Windows.Controls.ContentPresenter>とき項目には、現在選択されている表示する<xref:System.Windows.Controls.ComboBox.IsEditable%2A>と等しい`true`、<xref:System.Windows.Controls.TextBox>代わりに、この目的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="60c21-202">When <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `false`, the <xref:System.Windows.Controls.ComboBox> uses a <xref:System.Windows.Controls.ContentPresenter> to display the currently selected item; when <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `true`, a <xref:System.Windows.Controls.TextBox> is used for this purpose instead.</span></span> <span data-ttu-id="60c21-203">なお、<xref:System.Windows.Controls.TextBox>するプレーン テキストとにのみ表示されます、<xref:System.Windows.Controls.ComboBoxItem>画像などのプレーン テキスト コンテンツを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="60c21-203">Note that a <xref:System.Windows.Controls.TextBox> only displays plain text, and that a <xref:System.Windows.Controls.ComboBoxItem> may include non-plain text content, such as images.</span></span>  
  
<a name="dependencyPropertyInfo_IsEditable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="60c21-204">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="60c21-204">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="60c21-205">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="60c21-205">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.IsEditableProperty>|  
|<span data-ttu-id="60c21-206">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="60c21-206">Metadata properties set to `true`</span></span>|<span data-ttu-id="60c21-207">なし</span><span class="sxs-lookup"><span data-stu-id="60c21-207">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="60c21-208">次の例では、作成<xref:System.Windows.Controls.ComboBox>テキストではなく項目としてイメージを格納しているコントロール。</span><span class="sxs-lookup"><span data-stu-id="60c21-208">The following examples create <xref:System.Windows.Controls.ComboBox> controls that contain images as items instead of text.</span></span> <span data-ttu-id="60c21-209">場合、<xref:System.Windows.Controls.ComboBox.IsEditable%2A>プロパティに設定されて`true`、<xref:System.Windows.Controls.TextBox>イメージのによって返される値を表示します<xref:System.Object.ToString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="60c21-209">If the <xref:System.Windows.Controls.ComboBox.IsEditable%2A> property is set to `true`, the <xref:System.Windows.Controls.TextBox> displays the value returned by the image's <xref:System.Object.ToString%2A> method.</span></span> <span data-ttu-id="60c21-210">回避するために、 <xref:System.Windows.Controls.TextBox> 、予期しないテキストを使用して、<xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType>と<xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType>プロパティを表示するテキストを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="60c21-210">To avoid a <xref:System.Windows.Controls.TextBox> with unexpected text, use the <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=nameWithType> and <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=nameWithType> properties to assign text to be displayed.</span></span>  
  
 [!code-xaml[ComboBoxProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#1)]  
  
 [!code-xaml[ComboBoxProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#2)]  
  
 <span data-ttu-id="60c21-211">別のソリューションは、使用する、<xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="60c21-211">Another solution is to use the <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> property.</span></span> <span data-ttu-id="60c21-212">ドロップダウン コントロール、<xref:System.Windows.Controls.ComboBox>イメージは表示されませんが、割り当てられているテキストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="60c21-212">The drop-down control of the <xref:System.Windows.Controls.ComboBox> will not display the images but will display the text you assigned.</span></span>  
  
 <span data-ttu-id="60c21-213">次の例は、<xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="60c21-213">The following example shows how to use <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>.</span></span>  
  
 [!code-xaml[ComboBoxProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEditableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEditableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsEditableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEditableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEditableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEditableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.IsEditableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-214">
            <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-214">Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="comboBox.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="60c21-215">指定した項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-215">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-216">指定された項目が独自の <c>ItemContainer</c> であるか (または独自のコンテナーとすることが可能か) どうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-216">Determines if the specified item is (or is eligible to be) its own <c>ItemContainer</c>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c21-217">項目が自身の <c>ItemContainer</c> である場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-217">
              <see langword="true" /> if the item is its own <c>ItemContainer</c>; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Windows.Controls.ComboBox.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-218">選択専用モードを有効にする値を取得または設定します。選択専用モードでは、コンボ ボックスの内容は選択可能ですが、編集することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-218">Gets or sets a value that enables selection-only mode, in which the contents of the combo box are selectable but not editable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-219">
            <see langword="true" /> が読み取り専用である場合は <see cref="T:System.Windows.Controls.ComboBox" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-219">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="60c21-220">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-220">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-221"><xref:System.Windows.Controls.ComboBox.IsEditable%2A>と<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>プロパティを指定する方法、<xref:System.Windows.Controls.ComboBox>とき、ユーザーは、次のいずれかの動作します。</span><span class="sxs-lookup"><span data-stu-id="60c21-221">The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:</span></span>  
  
-   <span data-ttu-id="60c21-222">入力した文字列内の項目を選択する、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-222">Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="60c21-223">内の項目に対応していない文字列を入力、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-223">Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
-   <span data-ttu-id="60c21-224">テキスト ボックス内にある文字列の一部を選択します。</span><span class="sxs-lookup"><span data-stu-id="60c21-224">Selects part of the string that is in the text box.</span></span>  
  
-   <span data-ttu-id="60c21-225">コピーまたはテキスト ボックスに値を貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="60c21-225">Copies or pastes a value into the text box.</span></span>  
  
 <span data-ttu-id="60c21-226">次の表に、ユーザーは、の値に応じて、実行できないアクション<xref:System.Windows.Controls.ComboBox.IsEditable%2A>と<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-226">The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.</span></span>  
  
||<span data-ttu-id="60c21-227"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> は `true` です</span><span class="sxs-lookup"><span data-stu-id="60c21-227"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`</span></span>|<span data-ttu-id="60c21-228"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> は `false` です</span><span class="sxs-lookup"><span data-stu-id="60c21-228"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`</span></span>|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="60c21-229"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> は `true` です</span><span class="sxs-lookup"><span data-stu-id="60c21-229"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`</span></span>|<span data-ttu-id="60c21-230">-内の項目を選択することはできません、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-230">-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-231">-内の項目に対応していない文字列を入力しますことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-231">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-232">文字列の一部を選択可能、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-232">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="60c21-233">の内の文字列をコピーことができます、<xref:System.Windows.Controls.ComboBox>テキスト ボックスに文字列を貼り付けることはできませんが、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-233">-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|<span data-ttu-id="60c21-234">項目を選択可能、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-234">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-235">の内の項目に対応していない文字列を入力ことができます、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-235">-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-236">文字列の一部を選択可能、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-236">-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span><br /><span data-ttu-id="60c21-237">のコピーまたは内の文字列を貼り付けことができます、<xref:System.Windows.Controls.ComboBox>テキスト ボックス。</span><span class="sxs-lookup"><span data-stu-id="60c21-237">-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.</span></span>|  
|<span data-ttu-id="60c21-238"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> は `false` です</span><span class="sxs-lookup"><span data-stu-id="60c21-238"><xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`</span></span>|<span data-ttu-id="60c21-239">項目を選択可能、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-239">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-240">-内の項目に対応していない文字列を入力しますことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-240">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-241">-内の文字列の一部を選択することはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-241">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-242">のコピーまたは内の文字列を貼り付けことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-242">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|<span data-ttu-id="60c21-243">項目を選択可能、<xref:System.Windows.Controls.ComboBox>で文字列を入力します。</span><span class="sxs-lookup"><span data-stu-id="60c21-243">-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.</span></span><br /><span data-ttu-id="60c21-244">-内の項目に対応していない文字列を入力しますことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-244">-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-245">-内の文字列の一部を選択することはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-245">-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.</span></span><br /><span data-ttu-id="60c21-246">のコピーまたは内の文字列を貼り付けことはできません、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-246">-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.</span></span>|  
  
 <span data-ttu-id="60c21-247">ときに<xref:System.Windows.Controls.ComboBox.IsEditable%2A>と等しい`false`、<xref:System.Windows.Controls.ComboBox>を使用して、<xref:System.Windows.Controls.ContentPresenter>とき項目には、現在選択されている表示する<xref:System.Windows.Controls.ComboBox.IsEditable%2A>と等しい`true`、<xref:System.Windows.Controls.TextBox>代わりに、この目的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="60c21-247">When <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `false`, the <xref:System.Windows.Controls.ComboBox> uses a <xref:System.Windows.Controls.ContentPresenter> to display the currently selected item; when <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is equal to `true`, a <xref:System.Windows.Controls.TextBox> is used for this purpose instead.</span></span> <span data-ttu-id="60c21-248">なお、<xref:System.Windows.Controls.TextBox>するプレーン テキストとにのみ表示されます、<xref:System.Windows.Controls.ComboBoxItem>画像などのプレーン テキスト コンテンツを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="60c21-248">Note that a <xref:System.Windows.Controls.TextBox> only displays plain text, and that a <xref:System.Windows.Controls.ComboBoxItem> may include non-plain text content, such as images.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="60c21-249">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="60c21-249">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="60c21-250">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="60c21-250">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.IsReadOnlyProperty>|  
|<span data-ttu-id="60c21-251">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="60c21-251">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="60c21-252">次の例は、<xref:System.Windows.Controls.ComboBox>が編集可能で<xref:System.Windows.Controls.TextBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-252">The following example shows a <xref:System.Windows.Controls.ComboBox> with an editable <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="60c21-253"><xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>プロパティに設定されて`true`にテキストを入力することはできませんので、<xref:System.Windows.Controls.TextBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-253">The <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> property is set to `true`, so the user cannot enter text into the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-254">
            <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-254">Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionBoxHighlighted">
      <MemberSignature Language="C#" Value="public bool IsSelectionBoxHighlighted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionBoxHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionBoxHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionBoxHighlighted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionBoxHighlighted : bool" Usage="System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-255">
            <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> が強調表示されるかどうかを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-255">Gets whether the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-256">
            <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> が強調表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-256">
              <see langword="true" /> if the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> is highlighted; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-257">このプロパティは、依存関係プロパティです。</span><span class="sxs-lookup"><span data-stu-id="60c21-257">This property is a dependency property.</span></span> <span data-ttu-id="60c21-258">ただし、依存関係プロパティの識別子のフィールドを<xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A>パブリックではありません。</span><span class="sxs-lookup"><span data-stu-id="60c21-258">However, the dependency property identifier field for <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> is not public.</span></span> <span data-ttu-id="60c21-259">そのため、プロパティ システム操作の呼び出しなどの依存関係プロパティの識別子を必要とするバックアップの依存関係プロパティを使用することはできません<xref:System.Windows.DependencyObject.GetValue%2A>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-259">Therefore, you cannot use the backing dependency property for property system operations that require the dependency property identifier, such as calls to <xref:System.Windows.DependencyObject.GetValue%2A>.</span></span> <span data-ttu-id="60c21-260">ただし、引き続き使用できます<xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A>プロパティ トリガーとして。</span><span class="sxs-lookup"><span data-stu-id="60c21-260">However, you can still use <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> as a property trigger.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeight">
      <MemberSignature Language="C#" Value="public double MaxDropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxDropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDropDownHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxDropDownHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDropDownHeight : double with get, set" Usage="System.Windows.Controls.ComboBox.MaxDropDownHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-261">コンボ ボックス ドロップダウンの最大の高さを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-261">Gets or sets the maximum height for a combo box drop-down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-262">取得または設定する高さを表す倍精度浮動小数点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-262">A double that represents the height that is retrieved or the height to set.</span>
          </span>
          <span data-ttu-id="60c21-263">このプロパティ システムに対して定義されている既定値は、画面の最大の高さのパラメーターの 3 分の 1 を基に計算された値です。ただし、この既定値は、さまざまなコントロール テンプレートによってオーバーライドされる可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-263">The default value as defined to the property system is a calculated value based on taking a one-third fraction of the system max screen height parameters, but this default is potentially overridden by various control templates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-264">自動サイズは、既定ではありませんし、可能性のある親要素で使用可能なサイズを超えるサイズの一覧になります。</span><span class="sxs-lookup"><span data-stu-id="60c21-264">Auto sizing is not the default, and will result in the drop down size potentially exceeding the available size in the parent element.</span></span> <span data-ttu-id="60c21-265">これは通常は望ましくありません。</span><span class="sxs-lookup"><span data-stu-id="60c21-265">This is not typically desirable.</span></span>  
  
<a name="dependencyPropertyInfo_MaxDropDownHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="60c21-266">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="60c21-266">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="60c21-267">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="60c21-267">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty>|  
|<span data-ttu-id="60c21-268">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="60c21-268">Metadata properties set to `true`</span></span>|<span data-ttu-id="60c21-269">なし</span><span class="sxs-lookup"><span data-stu-id="60c21-269">None</span></span>|  
  
<a name="xamlAttributeUsage_MaxDropDownHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="60c21-270">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="60c21-270">XAML Attribute Usage</span></span>  
  
```  
<object MaxDropDownHeight="double"/>  
- or –  
<object MaxDropDownHeight ="qualifiedDouble"/>  
- or -  
<object MaxDropDownHeight ="Auto"/>  
```  
  
<a name="xamlValues_MaxDropDownHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="60c21-271">XAML 値</span><span class="sxs-lookup"><span data-stu-id="60c21-271">XAML Values</span></span>  
 <span data-ttu-id="60c21-272">*double*</span><span class="sxs-lookup"><span data-stu-id="60c21-272">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="60c21-273">文字列表現を<xref:System.Double>値。</span><span class="sxs-lookup"><span data-stu-id="60c21-273">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="60c21-274">これは、[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]測定します。</span><span class="sxs-lookup"><span data-stu-id="60c21-274">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="60c21-275">文字列が必要な 10 進数のポイントを明示的に含まれません。</span><span class="sxs-lookup"><span data-stu-id="60c21-275">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="60c21-276">値のインスタンス`1`は許容されます。</span><span class="sxs-lookup"><span data-stu-id="60c21-276">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="60c21-277">同じ<xref:System.Double>プロパティの値のセクションで説明したように範囲の制限が適用されます。</span><span class="sxs-lookup"><span data-stu-id="60c21-277">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="60c21-278">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="60c21-278">*qualifiedDouble*</span></span>  
 <span data-ttu-id="60c21-279">A*二重*値、上記と続く単位の次の宣言文字列のいずれか: `px`、 `in`、 `cm`、`pt`します。</span><span class="sxs-lookup"><span data-stu-id="60c21-279">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="60c21-280">`px` (既定値) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="60c21-280">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="60c21-281">`in` インチです。1 in 96px = =</span><span class="sxs-lookup"><span data-stu-id="60c21-281">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="60c21-282">`cm` センチメートル; は、します。1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="60c21-282">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="60c21-283">`pt` ポイントです。1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="60c21-283">`pt` is points; 1pt==(96/72) px</span></span>  
  
 `Auto`  
 <span data-ttu-id="60c21-284">自動サイズ調整の動作を有効にします。</span><span class="sxs-lookup"><span data-stu-id="60c21-284">Enables autosizing behavior.</span></span> <span data-ttu-id="60c21-285">「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="60c21-285">See Remarks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c21-286">次の例は、使用する方法を示します、<xref:System.Windows.Controls.ComboBox.MaxDropDownHeight%2A>の高さを指定するプロパティ、<xref:System.Windows.Controls.ComboBox>コントロールのドロップダウン リスト。</span><span class="sxs-lookup"><span data-stu-id="60c21-286">The following example shows how to use the <xref:System.Windows.Controls.ComboBox.MaxDropDownHeight%2A> property to specify the height of the <xref:System.Windows.Controls.ComboBox> control's drop-down.</span></span>  
  
 [!code-xaml[ComboBoxStyles#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxDropDownHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxDropDownHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxDropDownHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxDropDownHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxDropDownHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.MaxDropDownHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-287">
            <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-287">Identifies the <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="comboBox.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c21-288">
            <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> の呼び出し時に呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-288">Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> is called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="comboBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="60c21-289">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] インフラストラクチャの一部として、このコントロールに適切な <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> を実装します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-289">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="60c21-290">型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-290">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownClosed : EventArgs -&gt; unit&#xA;override this.OnDropDownClosed : EventArgs -&gt; unit" Usage="comboBox.OnDropDownClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="60c21-291">
            <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-291">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-292">コンボ ボックスのポップアップが閉じたときに報告します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-292">Reports when a combo box's popup closes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownOpened (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownOpened(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDropDownOpened (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDropDownOpened(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDropDownOpened : EventArgs -&gt; unit&#xA;override this.OnDropDownOpened : EventArgs -&gt; unit" Usage="comboBox.OnDropDownOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="60c21-293">
            <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-293">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-294">コンボ ボックスのポップアップが開いたときに報告します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-294">Reports when a combo box's popup opens.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="comboBox.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="60c21-295">
            <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-295">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-296">
            <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> プロパティが変更されたことを報告します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-296">Reports that the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> property changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="comboBox.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="60c21-297">
            <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-297">The event data for the <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-298">
            <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> プロパティが変更されたときに呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-298">Called when the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="comboBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="60c21-299">イベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-299">Event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-300">
            <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 添付ルーティング イベントが発生すると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-300">Invoked when a <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="comboBox.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="60c21-301">
            <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントのイベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-301">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-302">マウスの左ボタンが離されたことを報告するために呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-302">Called to report that the left mouse button was released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="comboBox.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="60c21-303">イベント データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-303">Event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-304">
            <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 添付ルーティング イベントが発生すると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-304">Invoked when a <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached routed event occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectionChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectionChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectionChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="comboBox.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="60c21-305">
            <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" /> のデータを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-305">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-306">
            <see cref="T:System.Windows.Controls.ComboBox" /> イベントを発生させることにより、<see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> の選択項目の変更に応答します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-306">Responds to a <see cref="T:System.Windows.Controls.ComboBox" /> selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="comboBox.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="60c21-307">指定した項目を表示するために使用する要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-307">Element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="60c21-308">指定した項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-308">Specified item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="60c21-309">指定した要素に指定した項目が表示されるように準備します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-309">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-310">要素の準備をバインドの設定、スタイルの適用を行うことがあり。</span><span class="sxs-lookup"><span data-stu-id="60c21-310">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItem">
      <MemberSignature Language="C#" Value="public object SelectionBoxItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectionBoxItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectionBoxItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBoxItem : obj" Usage="System.Windows.Controls.ComboBox.SelectionBoxItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-311">選択ボックスに表示される項目を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-311">Gets the item that is displayed in the selection box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-312">選択された項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-312">The selected item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-313"><xref:System.Windows.Controls.ControlTemplate>の<xref:System.Windows.Controls.ComboBox>で選択したアイテムを表示するこのプロパティを使用して、<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-313">The <xref:System.Windows.Controls.ControlTemplate> of the <xref:System.Windows.Controls.ComboBox> uses this property to show the selected item in the <xref:System.Windows.Controls.ComboBox>.</span></span>  <span data-ttu-id="60c21-314">選択項目を取得する、<xref:System.Windows.Controls.ComboBox>の外部、<xref:System.Windows.Controls.ControlTemplate>を使用して、<xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A?displayProperty=nameWithType>このプロパティではなくプロパティ。</span><span class="sxs-lookup"><span data-stu-id="60c21-314">To get the selected item of the <xref:System.Windows.Controls.ComboBox> outside of the <xref:System.Windows.Controls.ControlTemplate>, use the <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A?displayProperty=nameWithType> property instead of this property.</span></span>  
  
<a name="xamlAttributeUsage_SelectionBoxItem"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="60c21-315">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="60c21-315">XAML Attribute Usage</span></span>  
  
```  
<object property="{TemplateBinding SelectionBoxItem}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItem"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="60c21-316">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="60c21-316">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="60c21-317">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="60c21-317">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemProperty>|  
|<span data-ttu-id="60c21-318">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="60c21-318">Metadata properties set to `true`</span></span>|<span data-ttu-id="60c21-319">なし</span><span class="sxs-lookup"><span data-stu-id="60c21-319">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="60c21-320">次の例では、バインド、<xref:System.Windows.Controls.ContentPresenter.Content%2A>のプロパティを<xref:System.Windows.Controls.ContentPresenter>を<xref:System.Windows.Controls.ComboBox.SelectionBoxItem%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="60c21-320">The following example binds the <xref:System.Windows.Controls.ContentPresenter.Content%2A> property of a <xref:System.Windows.Controls.ContentPresenter> to the <xref:System.Windows.Controls.ComboBox.SelectionBoxItem%2A> property.</span></span> <span data-ttu-id="60c21-321"><xref:System.Windows.Controls.ContentPresenter>の一部である、<xref:System.Windows.Controls.ControlTemplate>の<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-321">The <xref:System.Windows.Controls.ContentPresenter> is part of the <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="60c21-322">完全なサンプルについては、[Styling with ControlTemplates Sample](https://go.microsoft.com/fwlink/?LinkID=160041)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="60c21-322">For the complete sample, see [Styling with ControlTemplates Sample](https://go.microsoft.com/fwlink/?LinkID=160041).</span></span>  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBoxItemProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-323">
            <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-323">Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormat">
      <MemberSignature Language="C#" Value="public string SelectionBoxItemStringFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectionBoxItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectionBoxItemStringFormat { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBoxItemStringFormat : string" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-324">選択ボックス内の選択した項目が文字列として表示される場合に、その書式を指定する複合文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-324">Gets a composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-325">選択ボックス内の選択した項目が文字列として表示される場合に、その書式を指定する複合文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-325">A composite string that specifies how to format the selected item in the selection box if it is displayed as a string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemStringFormatProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBoxItemStringFormatProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-326">
            <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-326">Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate SelectionBoxItemTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate SelectionBoxItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectionBoxItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ SelectionBoxItemTemplate { System::Windows::DataTemplate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBoxItemTemplate : System.Windows.DataTemplate" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-327">選択ボックスの内容の項目テンプレートを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-327">Gets the item template of the selection box content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-328">項目テンプレート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-328">An item template.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectionBoxItemTemplate"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="60c21-329">XAML 属性の使用方法</span><span class="sxs-lookup"><span data-stu-id="60c21-329">XAML Attribute Usage</span></span>  
  
```  
<object property="{TemplateBinding SelectionBoxItemTemplate}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItemTemplate"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="60c21-330">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="60c21-330">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="60c21-331">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="60c21-331">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty>|  
|<span data-ttu-id="60c21-332">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="60c21-332">Metadata properties set to `true`</span></span>|<span data-ttu-id="60c21-333">なし</span><span class="sxs-lookup"><span data-stu-id="60c21-333">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="60c21-334">次の例では、バインド、<xref:System.Windows.Controls.ContentPresenter.Content%2A>のプロパティを<xref:System.Windows.Controls.ContentPresenter>を<xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="60c21-334">The following example binds the <xref:System.Windows.Controls.ContentPresenter.Content%2A> property of a <xref:System.Windows.Controls.ContentPresenter> to the <xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate%2A> property.</span></span> <span data-ttu-id="60c21-335"><xref:System.Windows.Controls.ContentPresenter>の一部である、<xref:System.Windows.Controls.ControlTemplate>の<xref:System.Windows.Controls.ComboBox>します。</span><span class="sxs-lookup"><span data-stu-id="60c21-335">The <xref:System.Windows.Controls.ContentPresenter> is part of the <xref:System.Windows.Controls.ControlTemplate> for the <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="60c21-336">完全なサンプルについては、[Styling with ControlTemplates Sample](https://go.microsoft.com/fwlink/?LinkID=160041)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="60c21-336">For the complete sample, see [Styling with ControlTemplates Sample](https://go.microsoft.com/fwlink/?LinkID=160041).</span></span>  
  
 [!code-xaml[ControlTemplateExamples#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBoxItemTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBoxItemTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-337">
            <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-337">Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefix">
      <MemberSignature Language="C#" Value="public bool ShouldPreserveUserEnteredPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPreserveUserEnteredPrefix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPreserveUserEnteredPrefix { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldPreserveUserEnteredPrefix : bool with get, set" Usage="System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-338">
            <see cref="T:System.Windows.Controls.ComboBox" /> がユーザー入力を保持するか、または一致する項目で入力を置き換えるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-338">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ComboBox" /> keeps the user's input or replaces the input with a matching item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-339">
            <see cref="T:System.Windows.Controls.ComboBox" /> がユーザーの入力を保持する場合は <see langword="true" />。<see cref="T:System.Windows.Controls.ComboBox" /> が入力を対応する項目で置き換える場合は <see langword="false" />。登録されている既定は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-339">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> keeps the user's input; <see langword="false" /> if the <see cref="T:System.Windows.Controls.ComboBox" /> replaces the input with a matching item The registered default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="60c21-340">値が何に影響の詳細については、次を参照してください。[依存関係プロパティの値の優先順位](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-340">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-341">既定では、ユーザーに文字列を入力すると、<xref:System.Windows.Controls.ComboBox>その項目のいずれかに一致して、項目が選択されている、ユーザーが入力したテキストが置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="60c21-341">By default, when the user types a string into the <xref:System.Windows.Controls.ComboBox> that matches one of its items, the item is selected and the text that the user typed is replaced.</span></span>  <span data-ttu-id="60c21-342">大文字小文字を変更するユーザーが入力したテキストがある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="60c21-342">This can cause the text that the user entered to change case.</span></span> <span data-ttu-id="60c21-343">場合、<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A>プロパティに設定されて`true`、 <xref:System.Windows.Controls.ComboBox> 、一致する項目を選択しますが、ユーザーが入力したテキストを保持します。</span><span class="sxs-lookup"><span data-stu-id="60c21-343">If the <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> property is set to `true`, the <xref:System.Windows.Controls.ComboBox> selects the matching item, but preserves the text that the user entered.</span></span>   <span data-ttu-id="60c21-344">などとする<xref:System.Windows.Controls.ComboBox>を含む、文字列「こんにちは」(大文字の H) ユーザーが入力した「こんにちは」(小文字 h) でします。</span><span class="sxs-lookup"><span data-stu-id="60c21-344">For example, suppose that a <xref:System.Windows.Controls.ComboBox> contains the string, "Hello" (with a capital H) and the user enters "hello" (with a lowercase h).</span></span>  <span data-ttu-id="60c21-345">場合<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A>は`false`、<xref:System.Windows.Controls.ComboBox>コレクションに一致する項目の「こんにちは,」を選択し、そのテキスト ボックスにその文字列を設定します。</span><span class="sxs-lookup"><span data-stu-id="60c21-345">If <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> is `false`, the <xref:System.Windows.Controls.ComboBox> selects the matching item, "Hello," in its collection and populates its text box with that string.</span></span>    <span data-ttu-id="60c21-346">場合<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A>は`true`、コレクションから「こんにちは」が選択されているにもかかわらず、テキスト ボックスでは、「こんにちは」と表示</span><span class="sxs-lookup"><span data-stu-id="60c21-346">If <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> is `true`, "Hello" is selected from the collection, but the text box says "hello."</span></span>  
  
<a name="dependencyPropertyInfo_ShouldPreserveUserEnteredPrefix"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="60c21-347">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="60c21-347">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="60c21-348">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="60c21-348">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty>|  
|<span data-ttu-id="60c21-349">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="60c21-349">Metadata properties set to `true`</span></span>|<span data-ttu-id="60c21-350">なし</span><span class="sxs-lookup"><span data-stu-id="60c21-350">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefixProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShouldPreserveUserEnteredPrefixProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShouldPreserveUserEnteredPrefixProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-351">
            <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-351">Identifies the <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEdit">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpenOnEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpenOnEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpenOnEdit : bool with get, set" Usage="System.Windows.Controls.ComboBox.StaysOpenOnEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-352">開いている <see cref="T:System.Windows.Controls.ComboBox" /> にドロップダウン コントロールが表示されている場合、ユーザーが <see cref="T:System.Windows.Controls.TextBox" /> をクリックしたときに、このコンボ ボックスが開いたままになるかどうかを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-352">Gets or sets whether a <see cref="T:System.Windows.Controls.ComboBox" /> that is open and displays a drop-down control will remain open when a user clicks the <see cref="T:System.Windows.Controls.TextBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-353">ユーザーがテキスト領域をクリックして編集を開始したときに、ドロップダウン コントロールを開いたままにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-353">
              <see langword="true" /> to keep the drop-down control open when the user clicks on the text area to start editing; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="60c21-354">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-354">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpenOnEdit"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="60c21-355">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="60c21-355">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="60c21-356">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="60c21-356">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty>|  
|<span data-ttu-id="60c21-357">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="60c21-357">Metadata properties set to `true`</span></span>|<span data-ttu-id="60c21-358">なし</span><span class="sxs-lookup"><span data-stu-id="60c21-358">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="60c21-359">この例は、使用する方法を示します、<xref:System.Windows.Controls.ComboBox.StaysOpenOnEdit%2A>コンボ ボックスのドロップダウン コントロールを作成するプロパティを開いたまま、ユーザーがテキスト ボックスに情報を入力中にします。</span><span class="sxs-lookup"><span data-stu-id="60c21-359">This example shows how to use the <xref:System.Windows.Controls.ComboBox.StaysOpenOnEdit%2A> property to create a combo box whose drop-down control stays open while the user enters information into the text box.</span></span>  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEditProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnEditProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnEditProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenOnEditProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenOnEditProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenOnEditProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.StaysOpenOnEditProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-360">
            <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-360">Identifies the <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.ComboBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-361">現在選択されている項目のテキストを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-361">Gets or sets the text of the currently selected item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="60c21-362">現在選択されている項目の文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-362">The string of the currently selected item.</span>
          </span>
          <span data-ttu-id="60c21-363">既定値は、空の文字列 ("") です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-363">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c21-364">ときに、<xref:System.Windows.Controls.ComboBox.IsEditable%2A>プロパティは`true`、テキスト ボックスに入力された最初のテキストを配置するこのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="60c21-364">When the <xref:System.Windows.Controls.ComboBox.IsEditable%2A> property is `true`, setting this property places initial text entered in the text box.</span></span> <span data-ttu-id="60c21-365">ときに<xref:System.Windows.Controls.ComboBox.IsEditable%2A>は`false`、この値の設定も何も起こりません。</span><span class="sxs-lookup"><span data-stu-id="60c21-365">When <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`, setting this value has no effect.</span></span>  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="60c21-366">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="60c21-366">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="60c21-367">識別子フィールドです。</span><span class="sxs-lookup"><span data-stu-id="60c21-367">Identifier field</span></span>|<xref:System.Windows.Controls.ComboBox.TextProperty>|  
|<span data-ttu-id="60c21-368">メタデータのプロパティを設定するには `true`</span><span class="sxs-lookup"><span data-stu-id="60c21-368">Metadata properties set to `true`</span></span>|<span data-ttu-id="60c21-369"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>、 <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="60c21-369"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="60c21-370">この例では、どのように<xref:System.Windows.Controls.ComboBox.Text%2A>にテキストを設定するプロパティを使用できます、<xref:System.Windows.Controls.TextBox>ユーザーは、選択する前にします。</span><span class="sxs-lookup"><span data-stu-id="60c21-370">This example shows how the <xref:System.Windows.Controls.ComboBox.Text%2A> property can be used to set text into the <xref:System.Windows.Controls.TextBox> before the user makes a selection.</span></span>  
  
 [!code-xaml[ComboBoxItems#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="60c21-371">
            <see cref="P:System.Windows.Controls.ComboBox.Text" /> 依存関係プロパティを識別します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="60c21-371">Identifies the <see cref="P:System.Windows.Controls.ComboBox.Text" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>