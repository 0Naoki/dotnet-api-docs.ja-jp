<Type Name="Calendar" FullName="System.Windows.Controls.Calendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76bc5e4d17ff014be5d63285b2041246dc35fdf8" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52590284" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Calendar : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Calendar extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Calendar" />
  <TypeSignature Language="VB.NET" Value="Public Class Calendar&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class Calendar : System::Windows::Controls::Control" />
  <TypeSignature Language="F#" Value="type Calendar = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_Root", Type=typeof(System.Windows.Controls.Panel))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_CalendarItem", Type=typeof(System.Windows.Controls.Primitives.CalendarItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>視覚的な予定表の表示を使用して、ユーザーが日付を選択できるようにするコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Controls.Calendar>単独、またはドロップダウン リストの一部としてコントロールを使用できる、<xref:System.Windows.Controls.DatePicker>コントロール。 詳細については、「<xref:System.Windows.Controls.DatePicker>」を参照してください。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Calendar>はグレゴリオ暦だけをサポートしています。  
  
 次の表に、一般に関連付けられているタスクに関する情報を提供する、<xref:System.Windows.Controls.Calendar>します。  
  
|タスク|実装|  
|----------|--------------------|  
|<xref:System.Windows.Controls.Calendar> 1 か月、1 年、または 10 年を表示します。|設定、<xref:System.Windows.Controls.Calendar.DisplayMode%2A>プロパティを 1 か月、年、または 10 年間です。|  
|ユーザーが日付を選択するかどうか、日付の範囲または複数の日付の範囲を指定します。|使用して、<xref:System.Windows.Controls.Calendar.SelectionMode%2A>します。|  
|指定の日付を選択することはできません。|<xref:System.Windows.Controls.Calendar.BlackoutDates%2A> プロパティを使用します。|  
|日付の範囲を指定する、<xref:System.Windows.Controls.Calendar>が表示されます。|<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> プロパティおよび <xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A> プロパティを使用します。|  
|現在の日付が強調表示されているかどうかを指定します。|<xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A> プロパティを使用します。 既定では、<xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A>は`true`します。|  
|サイズを変更、<xref:System.Windows.Controls.Calendar>します。|使用して、<xref:System.Windows.Controls.Viewbox>設定や、<xref:System.Windows.FrameworkElement.LayoutTransform%2A>プロパティを<xref:System.Windows.Media.ScaleTransform>。  設定した場合、<xref:System.Windows.FrameworkElement.Width%2A>と<xref:System.Windows.FrameworkElement.Height%2A>のプロパティを<xref:System.Windows.Controls.Calendar>、実際の予定表では、そのサイズは変更されません。|  
  
 <xref:System.Windows.Controls.Calendar>コントロールがマウスまたはキーボードを使用して基本的なナビゲーションを提供します。 次の表では、キーボード ナビゲーションをまとめたものです。  
  
|キーの組み合わせ|<xref:System.Windows.Controls.Calendar.DisplayMode%2A>|アクション|  
|---------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|------------|  
|矢印|<xref:System.Windows.Controls.CalendarMode.Month>|変更、<xref:System.Windows.Controls.Calendar.SelectedDate%2A>プロパティ場合、<xref:System.Windows.Controls.Calendar.SelectionMode%2A>プロパティに設定されていない<xref:System.Windows.Controls.CalendarSelectionMode.None>します。|  
|矢印|<xref:System.Windows.Controls.CalendarMode.Year>|月の変更、<xref:System.Windows.Controls.Calendar.DisplayDate%2A>プロパティ。  なお、<xref:System.Windows.Controls.Calendar.SelectedDate%2A>は変わりません。|  
|矢印|<xref:System.Windows.Controls.CalendarMode.Decade>|年を変更、<xref:System.Windows.Controls.Calendar.DisplayDate%2A>します。  なお、<xref:System.Windows.Controls.Calendar.SelectedDate%2A>は変わりません。|  
|SHIFT + 方向キー|<xref:System.Windows.Controls.CalendarMode.Month>|場合<xref:System.Windows.Controls.Calendar.SelectionMode%2A>に設定されていない<xref:System.Windows.Controls.CalendarSelectionMode.SingleDate>または<xref:System.Windows.Controls.CalendarSelectionMode.None>、選択した日付の範囲が広がります。|  
|ホーム|<xref:System.Windows.Controls.CalendarMode.Month>|変更、<xref:System.Windows.Controls.Calendar.SelectedDate%2A>現在の月の最初の日にします。|  
|ホーム|<xref:System.Windows.Controls.CalendarMode.Year>|月の変更、<xref:System.Windows.Controls.Calendar.DisplayDate%2A>年の最初の月にします。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A>は変わりません。|  
|ホーム|<xref:System.Windows.Controls.CalendarMode.Decade>|年を変更、 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 10 年の最初の年にします。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A>は変わりません。|  
|End|<xref:System.Windows.Controls.CalendarMode.Month>|変更、<xref:System.Windows.Controls.Calendar.SelectedDate%2A>現在の月の最終日にします。|  
|End|<xref:System.Windows.Controls.CalendarMode.Year>|月の変更、<xref:System.Windows.Controls.Calendar.DisplayDate%2A>年の過去 1 か月にします。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A>は変わりません。|  
|End|<xref:System.Windows.Controls.CalendarMode.Decade>|年を変更、 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 10 年の最後の年にします。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A>は変わりません。|  
|Ctrl + ↑|どれでも可|次に大きい<xref:System.Windows.Controls.Calendar.DisplayMode%2A>します。 場合<xref:System.Windows.Controls.Calendar.DisplayMode%2A>は既に<xref:System.Windows.Controls.CalendarMode.Decade>操作はありません。|  
|Ctrl +↓|どれでも可|次に小さい<xref:System.Windows.Controls.Calendar.DisplayMode%2A>します。 場合<xref:System.Windows.Controls.Calendar.DisplayMode%2A>は既に<xref:System.Windows.Controls.CalendarMode.Month>操作はありません。|  
|Space キーまたは ENTER|<xref:System.Windows.Controls.CalendarMode.Year> または <xref:System.Windows.Controls.CalendarMode.Decade>|スイッチ<xref:System.Windows.Controls.Calendar.DisplayMode%2A>を<xref:System.Windows.Controls.CalendarMode.Month>または<xref:System.Windows.Controls.CalendarMode.Year>フォーカスがあるアイテムによって表されます。|  
  
## <a name="customizing-the-calendar-control"></a>予定表コントロールのカスタマイズ  
 複数に同じプロパティの設定を適用する<xref:System.Windows.Controls.Calendar>コントロールを使用して、<xref:System.Windows.FrameworkElement.Style%2A>プロパティ。 既定値を変更する<xref:System.Windows.Controls.ControlTemplate>固有の外観を制御します。 作成の詳細については、<xref:System.Windows.Controls.ControlTemplate>を参照してください[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。  パーツとに固有の状態を表示する、<xref:System.Windows.Controls.Calendar>を参照してください[カレンダーのスタイルとテンプレート](~/docs/framework/wpf/controls/calendar-styles-and-templates.md)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する可能性があります。  プロパティが既定のスタイルによって設定されている場合は、アプリケーションでコントロールが表示されたら、既定値から、プロパティが変更可能性があります。 デスクトップ テーマでは、アプリケーションが実行されている場合は、使用、既定のスタイルが決定されます。  詳細については、次を参照してください。[既定の WPF テーマ](https://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  ビジュアルのプロパティの設定はのみ、効果がそのプロパティが両方に存在する場合は<xref:System.Windows.Controls.Calendar>コントロールの既定のテンプレートとを使用して設定をします。 "を変更するビジュアル構造体のコントロールのセクションではビジュアルのプロパティの一覧を検索できます[ControlTemplate の作成による既存のコントロールの外観のカスタマイズ](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)します。  
  
<a name="xamlObjectElementUsage_Calendar"></a>   
## <a name="xaml-object-element-usage"></a>XAML オブジェクト要素の使用方法  
  
```  
<Calendar .../>  
```  
  
   
  
## Examples  
 次の図は 2 つ<xref:System.Windows.Controls.Calendar>選択および選択できない日付に 1 つとなしのいずれかを制御します。  
  
 ![カレンダー コントロール](~/add/media/ndp-calendarcontrols.png "カレンダーの制御")  
予定表コントロール  
  
 次のコードと XAML は、2 つのページを作成します。<xref:System.Windows.Controls.Calendar>前の図は、次のようなコントロール。  
  
 [!code-csharp[CalendarSnippets#1](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[CalendarSnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xaml[CalendarSnippets#1](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DatePicker" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Calendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Calendar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackoutDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.BlackoutDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlackoutDates As CalendarBlackoutDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarBlackoutDatesCollection ^ BlackoutDates { System::Windows::Controls::CalendarBlackoutDatesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BlackoutDates : System.Windows.Controls.CalendarBlackoutDatesCollection" Usage="System.Windows.Controls.Calendar.BlackoutDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarBlackoutDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択不可としてマークされている日付のコレクションを取得します。</summary>
        <value>選択できない日付のコレクション。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコレクション内の日付は灰色と交差をカレンダーに表示します。  
  
 すべて過去の日付選択可能な使用することができます、<xref:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast%2A>このプロパティによって返されるコレクションによって提供されるメソッド。  
  
<a name="xamlPropertyElementUsage_BlackoutDates"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.BlackoutDates>  
    oneOrMoreCalendarDateRanges  
  </object.BlackoutDates>  
</object>  
```  
  
<a name="xamlValues_BlackoutDates"></a>   
## <a name="xaml-values"></a>XAML 値  
 *oneOrMoreCalendarDateRanges*  
 型の 1 つまたは複数のオブジェクト要素<xref:System.Windows.Controls.CalendarDateRange>します。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.Calendar>を持ついくつかの日付を選択することはできません。  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 前の例では、次の図のような出力を生成します。  
  
 ![選択できない日付をカレンダーです。](~/add/media/ndp-calendarblackout.png "カレンダーで日付を選択することはできません。")  
選択できない日付をカレンダー  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarButtonStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarButtonStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Calendar.CalendarButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="T:System.Windows.Style" /> 内部オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.CalendarButton" /> オブジェクトの現在のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarButtonStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object CalendarButtonStyle="{resourceExtension styleResourceKey"/>  
  
```  
  
<a name="xamlValues_CalendarButtonStyle"></a>   
## <a name="xaml-values"></a>XAML 値  
 *resourceExtension*  
 次のいずれか:`StaticResource`または`DynamicResource`します。 詳細については、「[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)」を参照してください。  
  
 *styleResourceKey*  
 要求されているリソースを識別するキー。 このキーは、既存のリソースで、<xref:System.Windows.ResourceDictionary>します。  
  
<a name="dependencyPropertyInfo_CalendarButtonStyle"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.CalendarButtonStyleProperty>|  
|メタデータのプロパティを設定**は true。**|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarButtonStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarButtonStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarButtonStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarButtonStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarButtonStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.CalendarButtonStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.CalendarButtonStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarDayButtonStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarDayButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarDayButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarDayButtonStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarDayButtonStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Calendar.CalendarDayButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="T:System.Windows.Style" /> 内部オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.CalendarDayButton" /> オブジェクトの現在のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarDayButtonStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object CalendarDayButtonStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarDayButtonStyle"></a>   
## <a name="xaml-values"></a>XAML 値  
 *resourceExtension*  
 次のいずれか:`StaticResource`または`DynamicResource`します。 詳細については、「[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)」を参照してください。  
  
 *styleResourceKey*  
 要求されているリソースを識別するキー。 このキーは、既存のリソースで、<xref:System.Windows.ResourceDictionary>します。  
  
<a name="dependencyPropertyInfo_CalendarDayButtonStyle"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty>|  
|メタデータのプロパティを設定**は true。**|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarDayButtonStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarDayButtonStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarDayButtonStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarDayButtonStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarDayButtonStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarDayButtonStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.CalendarDayButtonStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.CalendarDayButtonStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarItemStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.CalendarItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarItemStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ CalendarItemStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CalendarItemStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Calendar.CalendarItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="T:System.Windows.Style" /> 内部オブジェクトに関連付けられている <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.CalendarItem" /> オブジェクトの現在のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_CalendarItemStyle"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object CalendarItemStyle="{resourceExtension styleResourceKey}"/>  
  
```  
  
<a name="xamlValues_CalendarItemStyle"></a>   
## <a name="xaml-values"></a>XAML 値  
 *resourceExtension*  
 次のいずれか:`StaticResource`または`DynamicResource`します。 詳細については、「[XAML リソース](~/docs/framework/wpf/advanced/xaml-resources.md)」を参照してください。  
  
 *styleResourceKey*  
 要求されているリソースを識別するキー。 このキーは、既存のリソースで、<xref:System.Windows.ResourceDictionary>します。  
  
<a name="dependencyPropertyInfo_CalendarItemStyle"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.CalendarItemStyleProperty>|  
|メタデータのプロパティを設定**は true。**|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarItemStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarItemStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarItemStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.CalendarItemStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CalendarItemStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CalendarItemStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CalendarItemStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.CalendarItemStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.CalendarItemStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDate">
      <MemberSignature Language="C#" Value="public DateTime DisplayDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DisplayDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDate" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DisplayDate { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDate : DateTime with get, set" Usage="System.Windows.Controls.Calendar.DisplayDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示する日付を取得または設定します。</summary>
        <value>表示する日付。 既定値は、<see cref="P:System.DateTime.Today" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar.DisplayDate%2A>と<xref:System.Windows.Controls.Calendar.DisplayMode%2A>プロパティ カレンダーが表示されるものとカレンダー内でフォーカスがあるものを指定します。  ユーザーが変更できる、<xref:System.Windows.Controls.Calendar.SelectedDate%2A>場合にのみ<xref:System.Windows.Controls.Calendar.DisplayMode%2A>月に設定されていても、ユーザーが変更、<xref:System.Windows.Controls.Calendar.DisplayDate%2A>カレンダーが年、10 年間のモードの場合にします。  次の表では、モードを変更する方法について説明します、<xref:System.Windows.Controls.Calendar.DisplayDate%2A>します。  
  
|DisplayMode|アクション|  
|-----------------|------------|  
|月|<xref:System.Windows.Controls.Calendar.DisplayDate%2A> 別の月に、ユーザーが移動したときに変更します。|  
|Year|月<xref:System.Windows.Controls.Calendar.DisplayDate%2A>ユーザーがクリックするか、別の月に移動するときに変更します。|  
|10 年間|年<xref:System.Windows.Controls.Calendar.DisplayDate%2A>変更、ユーザーがクリックするか、別の年へ移動します。|  
  
 <xref:System.Windows.Controls.Calendar.DisplayDate%2A> 値がで指定されている日付の範囲外にある場合は無視されます<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>と<xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A>プロパティ。  
  
<a name="dependencyPropertyInfo_DisplayDate"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.DisplayDateProperty>|  
|メタデータのプロパティを設定**は true。**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayDate="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDate"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)トピック。  
  
   
  
## Examples  
 次のコードを設定、<xref:System.Windows.Controls.Calendar>表示可能な日付は、現在選択されていると表示されている日付のセットの特定の範囲とします。  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarDateChangedEventArgs&gt; DisplayDateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.DisplayDateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DisplayDateChanged As EventHandler(Of CalendarDateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::CalendarDateChangedEventArgs ^&gt; ^ DisplayDateChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayDateChanged : EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; " Usage="member this.DisplayDateChanged : System.EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarDateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> プロパティが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは<xref:System.Windows.Controls.Calendar.DisplayDate%2A>その新しい値が割り当てられます。  
  
<a name="xamlAttributeUsage_DisplayDateChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayDateChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 次のイベント ハンドラーの更新プログラム、<xref:System.Windows.Controls.TextBox>から情報を含む、<xref:System.Windows.Controls.Calendar.DisplayDateChanged>イベント。 この例は例で使用できる、<xref:System.Windows.Controls.Calendar>の概要。  
  
 [!code-xaml[CalendarSnippets#6](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEnd">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateEnd As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateEnd { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateEnd : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.Calendar.DisplayDateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>予定表で使用できる日付範囲の最後の日付を取得または設定します。</summary>
        <value>予定表で使用できる最後の日付。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 範囲を制限することができます、<xref:System.Windows.Controls.Calendar>を設定して、<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>と<xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A>プロパティ。  ユーザーは、スクロールするか、この範囲外の日付を選択することはできません。  設定した場合、<xref:System.Windows.Controls.Calendar.SelectedDate%2A>プロパティの後の日付を<xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A>、<xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A>と同じ値に設定されている<xref:System.Windows.Controls.Calendar.SelectedDate%2A>します。  
  
<a name="dependencyPropertyInfo_DisplayDateEnd"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.DisplayDateEndProperty>|  
|メタデータのプロパティを設定**は true。**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateEnd"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayDateEnd="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateEnd"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)トピック。  
  
   
  
## Examples  
 次のコードを設定、<xref:System.Windows.Controls.Calendar>表示可能な日付は、現在選択されていると表示されている日付のセットの特定の範囲とします。  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateEndProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateEndProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateEndProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateEndProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateEndProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayDateEndProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.DisplayDate" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStart">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayDateStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayDateStart As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; DisplayDateStart { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayDateStart : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.Calendar.DisplayDateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>予定表で使用できる最初の日付を取得または設定します。</summary>
        <value>予定表で使用できる最初の日付。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定して、予定表の範囲を制限することができます、<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>と<xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A>プロパティ。  ユーザーは、スクロールするか、この範囲外の日付を選択することはできません。  設定した場合、<xref:System.Windows.Controls.Calendar.SelectedDate%2A>プロパティの前にある日付を<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>、<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A>と同じ値に設定されている<xref:System.Windows.Controls.Calendar.SelectedDate%2A>します。  
  
<a name="dependencyPropertyInfo_DisplayDateStart"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.DisplayDateStartProperty>|  
|メタデータのプロパティを設定**は true。**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateStart"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayDateStart="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateStart"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)トピック。  
  
   
  
## Examples  
 次のコードを設定、<xref:System.Windows.Controls.Calendar>表示可能な日付は、現在選択されていると表示されている日付のセットの特定の範囲とします。  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateStartProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayDateStartProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayDateStartProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayDateStartProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayDateStartProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayDateStartProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMode As CalendarMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarMode DisplayMode { System::Windows::Controls::CalendarMode get(); void set(System::Windows::Controls::CalendarMode value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMode : System.Windows.Controls.CalendarMode with get, set" Usage="System.Windows.Controls.Calendar.DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>予定表で月、年、10 年のいずれを表示するかを指定する値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Calendar" /> で表示する期間の長さを示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 1 か月、年、または 10 年以上、予定表を表示できます。 次の表は、ユーザーが各モードに移動する方法を示します。  
  
|DisplayMode|アクション|  
|-----------------|------------|  
|月|年モードに移動するには、月の見出しをクリックします。|  
|Year|10 年間のモードに移動するには、年の見出しをクリックします。 Month モードに移動するには、表示されている月の 1 つをクリックします。|  
|10 年間|年のモードに移動するには、表示されている年の 1 つをクリックします。|  
  
<a name="dependencyPropertyInfo_DisplayMode"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.DisplayModeProperty>|  
|メタデータのプロパティを設定**は true。**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 次の例は、1 年間とハンドルで月を表示するカレンダーを作成、<xref:System.Windows.Controls.Calendar.DisplayModeChanged>イベント カレンダーが変わらないできるように、ユーザーは、1 か月または年をクリックすると、その<xref:System.Windows.Controls.Calendar.DisplayMode%2A>します。  
  
 [!code-csharp[CalendarSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#4)]
 [!code-vb[CalendarSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#4)]
 [!code-xaml[CalendarSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#4)]  
  
 [!code-csharp[CalendarSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.CalendarModeChangedEventArgs&gt; DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DisplayModeChanged As EventHandler(Of CalendarModeChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::CalendarModeChangedEventArgs ^&gt; ^ DisplayModeChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanged : EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; " Usage="member this.DisplayModeChanged : System.EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.CalendarModeChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> プロパティが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_DisplayModeChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar DisplayModeChanged="eventhandler"/>  
```  
  
   
  
## Examples  
 次の例は、1 年間とハンドルで月を表示するカレンダーを作成、<xref:System.Windows.Controls.Calendar.DisplayModeChanged>イベント カレンダーが変わらないできるように、ユーザーは、1 か月または年をクリックすると、その<xref:System.Windows.Controls.Calendar.DisplayMode%2A>します。  
  
 [!code-csharp[CalendarSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#4)]
 [!code-vb[CalendarSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#4)]
 [!code-xaml[CalendarSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#4)]  
  
 [!code-csharp[CalendarSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.DisplayModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DisplayModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DisplayModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DisplayModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.DisplayModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.DisplayMode" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberSignature Language="F#" Value="member this.FirstDayOfWeek : DayOfWeek with get, set" Usage="System.Windows.Controls.Calendar.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>週の始まりと見なされる曜日を取得または設定します。</summary>
        <value>週の始まりを表す <see cref="T:System.DayOfWeek" />。 既定値は、現在のカルチャで決定された <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_FirstDayOfWeek"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.FirstDayOfWeekProperty>|  
|メタデータのプロパティを設定**は true。**|なし|  
  
<a name="xamlAttributeUsage_FirstDayOfWeek"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<Calendar **FirstDayOfWeek**="<xref:System.DayOfWeek>"/>  
  
   
  
## Examples  
 次の例のセット、<xref:System.Windows.Controls.Calendar.FirstDayOfWeek%2A>プロパティを<xref:System.DayOfWeek.Monday>します。  
  
 [!code-xaml[CalendarSnippets#8](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FirstDayOfWeekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FirstDayOfWeekProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.FirstDayOfWeekProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FirstDayOfWeekProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FirstDayOfWeekProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FirstDayOfWeekProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.FirstDayOfWeekProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.FirstDayOfWeek" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlighted">
      <MemberSignature Language="C#" Value="public bool IsTodayHighlighted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTodayHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.IsTodayHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTodayHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTodayHighlighted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTodayHighlighted : bool with get, set" Usage="System.Windows.Controls.Calendar.IsTodayHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の日付が強調表示されるかどうかを示す値を取得または設定します。</summary>
        <value>現在の日付が強調表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsTodayHighlighted"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.IsTodayHighlightedProperty>|  
|メタデータのプロパティを設定**は true。**|なし|  
  
<a name="xamlAttributeUsage_IsTodayHighlighted"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar IsTodayHighlighted="bool"/>  
```  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.Calendar>現在の日付が強調表示されていません。  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTodayHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTodayHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.IsTodayHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTodayHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTodayHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTodayHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.IsTodayHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="calendar.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しいテンプレートが適用されたときに、<see cref="T:System.Windows.Controls.Calendar" /> コントロールのビジュアル ツリーを構築します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーション コードや、レイアウト パスの再構築などの内部プロセスが呼び出すたびに、このメソッドが呼び出され、<xref:System.Windows.FrameworkElement.ApplyTemplate%2A>メソッド。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="calendar.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[!INCLUDE[silverlight](~/includes/silverlight-md.md)] オートメーション インフラストラクチャで使用するための <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> を返します。</summary>
        <returns>
          <see cref="T:System.Windows.Automation.Peers.CalendarAutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Controls.Calendar" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、新しい作成<xref:System.Windows.Automation.Peers.CalendarAutomationPeer>コントロール インスタンスの場合は、1 つのインスタンスが作成されていない。 それ以外を返します、<xref:System.Windows.Automation.Peers.CalendarAutomationPeer>以前に作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayDateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayDateChanged (System.Windows.Controls.CalendarDateChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayDateChanged(class System.Windows.Controls.CalendarDateChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayDateChanged (e As CalendarDateChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayDateChanged(System::Windows::Controls::CalendarDateChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayDateChanged : System.Windows.Controls.CalendarDateChangedEventArgs -&gt; unit&#xA;override this.OnDisplayDateChanged : System.Windows.Controls.CalendarDateChangedEventArgs -&gt; unit" Usage="calendar.OnDisplayDateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarDateChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.Calendar.DisplayDateChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Controls.Calendar.OnDisplayDateChanged(System.Windows.Controls.CalendarDateChangedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Windows.Controls.CalendarModeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Windows.Controls.CalendarModeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As CalendarModeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Windows::Controls::CalendarModeChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanged : System.Windows.Controls.CalendarModeChangedEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanged : System.Windows.Controls.CalendarModeChangedEventArgs -&gt; unit" Usage="calendar.OnDisplayModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.CalendarModeChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.Calendar.DisplayModeChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Controls.Calendar.OnDisplayModeChanged(System.Windows.Controls.CalendarModeChangedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="calendar.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>このコントロールにフォーカスがある状態でユーザーがキーを押したときに発生する <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティング イベントのクラス処理を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> 上書き、<xref:System.Windows.Controls.Calendar.OnKeyDown%2A>キーボード ナビゲーションをサポートするメソッド。  詳細については、<xref:System.Windows.Controls.Calendar> クラスを参照してください。 この実装をマーク、<xref:System.Windows.UIElement.KeyDown>イベントを処理するには、<xref:System.Windows.RoutedEventArgs.Handled%2A>にイベント データのプロパティ`true`など、矢印キーを押して、キーストロークがナビゲーションの操作を実行します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />、常基本実装を呼び出して、<see cref="M:System.Windows.Controls.Calendar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />実装します。 基本の実装の呼び出しに失敗すると、基底クラスが最後のクラスの実行時の動作が変わる可能性のある、クラス ハンドラーでイベントを処理できなくなります。 要件に応じて前に、または後、特別な処理の基本実装を呼び出すことができます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="calendar.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>このコントロールにフォーカスがある状態でユーザーがキーを離したときに発生する <see cref="E:System.Windows.UIElement.KeyUp" /> ルーティング イベントのクラス処理を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> 上書き、<xref:System.Windows.Controls.Calendar.OnKeyDown%2A>キーボード ナビゲーションをサポートするメソッド。  詳細については、<xref:System.Windows.Controls.Calendar> クラスを参照してください。 この実装では、処理済みの状態は変更されません (、<xref:System.Windows.RoutedEventArgs.Handled%2A>プロパティ) の<xref:System.Windows.UIElement.KeyUp>イベント データ。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" />、常基本実装を呼び出して、<see cref="M:System.Windows.Controls.Calendar.OnKeyUp(System.Windows.Input.KeyEventArgs)" />実装します。 基本の実装の呼び出しに失敗すると、基底クラスが最後のクラスの実行時の動作が変わる可能性のある、クラス ハンドラーでイベントを処理できなくなります。 要件に応じて前に、または後、特別な処理の基本実装を呼び出すことができます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedDatesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedDatesChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedDatesChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedDatesChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedDatesChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedDatesChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit&#xA;override this.OnSelectedDatesChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="calendar.OnSelectedDatesChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> ルーティング イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールで発生し、<xref:System.Windows.Controls.Calendar.SelectedDatesChanged>を呼び出してイベント<xref:System.Windows.UIElement.RaiseEvent%2A>します。 詳細については、次を参照してください。[ルーティング イベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Controls.Calendar.OnSelectedDatesChanged(System.Windows.Controls.SelectionChangedEventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionModeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionModeChanged : EventArgs -&gt; unit" Usage="calendar.OnSelectionModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.Calendar.SelectionModeChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドするときに<see cref="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" />、派生クラスで基底クラスを呼び出すことを確認する<see cref="M:System.Windows.Controls.Calendar.OnSelectionModeChanged(System.EventArgs)" />デリゲートを登録するためのメソッドがイベントを受信します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectedDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; SelectedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SelectedDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectedDate" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedDate As Nullable(Of DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;DateTime&gt; SelectedDate { Nullable&lt;DateTime&gt; get(); void set(Nullable&lt;DateTime&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDate : Nullable&lt;DateTime&gt; with get, set" Usage="System.Windows.Controls.Calendar.SelectedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在選択されている日付を取得または設定します。</summary>
        <value>現在選択されている日付。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectedDate"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.SelectedDateProperty>|  
|メタデータのプロパティを設定**は true。**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 このプロパティを使用するときに<xref:System.Windows.Controls.Calendar.SelectionMode%2A>に設定されている<xref:System.Windows.Controls.CalendarSelectionMode.SingleDate>します。 このプロパティが最初の日付を必ず他のモードで<xref:System.Windows.Controls.Calendar.SelectedDates%2A>します。  
  
<a name="xamlAttributeUsage_SelectedDate"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar SelectedDate="dateTimeString"/>  
```  
  
<a name="xamlValues_SelectedDate"></a>   
## <a name="xaml-values"></a>XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](~/docs/framework/wpf/advanced/datetime-xaml-syntax.md)トピック。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.Calendar>で特定の範囲の表示可能な日付は、および現在選択されていると表示されている日付を設定します。  
  
 [!code-csharp[CalendarSnippets#2](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[CalendarSnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xaml[CalendarSnippets#2](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された日付が <see cref="P:System.Windows.Controls.Calendar.DisplayDateStart" /> および <see cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" /> で指定された範囲内にありません。  
  
- または - 
指定した日付は <see cref="P:System.Windows.Controls.Calendar.BlackoutDates" /> コレクションにあります。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> が <see cref="F:System.Windows.Controls.CalendarSelectionMode.None" /> に設定されているときに、<see langword="null" /> 以外に設定する場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectedDateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectedDateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.SelectedDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SelectedDatesCollection SelectedDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SelectedDatesCollection SelectedDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectedDates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedDates As SelectedDatesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SelectedDatesCollection ^ SelectedDates { System::Windows::Controls::SelectedDatesCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedDates : System.Windows.Controls.SelectedDatesCollection" Usage="System.Windows.Controls.Calendar.SelectedDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SelectedDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択された日付のコレクションを設定します。</summary>
        <value>現在選択されている日付を含む <see cref="T:System.Windows.Controls.SelectedDatesCollection" /> オブジェクト。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 日付は、個別にまたは範囲を使用して、コレクションに追加できる、<xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A>メソッド。 値に応じて、<xref:System.Windows.Controls.Calendar.SelectionMode%2A>プロパティ、日付または範囲をコレクションに追加する可能性がありますをクリアします。 方法を次の表にリスト<xref:System.Windows.Controls.CalendarSelectionMode>影響、<xref:System.Windows.Controls.Calendar.SelectedDates%2A>プロパティ。  
  
|CalendarSelectionMode|説明|  
|---------------------------|-----------------|  
|<xref:System.Windows.Controls.CalendarSelectionMode.None>|選択は許可されません。 <xref:System.Windows.Controls.Calendar.SelectedDate%2A> 設定することはできませんに値を追加しないと<xref:System.Windows.Controls.Calendar.SelectedDates%2A>します。|  
|<xref:System.Windows.Controls.CalendarSelectionMode.SingleDate>|設定して、1 つの日付のみを選択できる<xref:System.Windows.Controls.Calendar.SelectedDate%2A>の最初の値または<xref:System.Windows.Controls.Calendar.SelectedDates%2A>します。 <xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A> 使用できません。|  
|<xref:System.Windows.Controls.CalendarSelectionMode.SingleRange>|1 つ日付範囲を選択できます。 設定<xref:System.Windows.Controls.Calendar.SelectedDate%2A>、日付を個別に追加する<xref:System.Windows.Controls.Calendar.SelectedDates%2A>、またはを使用して<xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A>から以前のすべての値がクリアされます<xref:System.Windows.Controls.Calendar.SelectedDates%2A>します。|  
|<xref:System.Windows.Controls.CalendarSelectionMode.MultipleRange>|隣接していない複数の日付範囲を選択できます。 日付を個別に追加する<xref:System.Windows.Controls.Calendar.SelectedDates%2A>またはを使用して<xref:System.Windows.Controls.SelectedDatesCollection.AddRange%2A>クリアしません<xref:System.Windows.Controls.Calendar.SelectedDates%2A>します。 設定<xref:System.Windows.Controls.Calendar.SelectedDate%2A>もクリアされます<xref:System.Windows.Controls.Calendar.SelectedDates%2A>が、追加の日付または範囲を追加し、ことができます。 日付の範囲の和集合で別の範囲結果と重複や、例外は発生しませんが既に選択されてを含む範囲を追加します。|  
  
<a name="xamlPropertyElementUsage_SelectedDates"></a>   
## <a name="xaml-property-element-usage"></a>XAML プロパティ要素の使用  
  
```  
<object>  
  <object.SelectedDates>  
    oneOrMoreDateTimeObjects  
  </object.SelectedDates>  
</object>  
  
```  
  
<a name="xamlValues_SelectedDates"></a>   
## <a name="xaml-values"></a>XAML 値  
 *oneOrMoreDateTimeObjects*  
 1 つまたは複数<xref:System.DateTime>object 要素。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.Calendar>を持つ複数の範囲の日付を選択します。  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDatesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.SelectedDatesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedDatesChanged As EventHandler(Of SelectionChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Controls::SelectionChangedEventArgs ^&gt; ^ SelectedDatesChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedDatesChanged : EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " Usage="member this.SelectedDatesChanged : System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.SelectedDates" /> プロパティが返すコレクションが変更されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_SelectedDatesChanged"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<Calendar SelectedDatesChanged="eventhandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDatesChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedDatesChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedDatesChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectedDatesChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectedDatesChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectedDatesChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectedDatesChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Calendar.SelectedDatesChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.Calendar.SelectedDatesChanged" /> ルーティング イベントを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CalendarSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Calendar.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As CalendarSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CalendarSelectionMode SelectionMode { System::Windows::Controls::CalendarSelectionMode get(); void set(System::Windows::Controls::CalendarSelectionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionMode : System.Windows.Controls.CalendarSelectionMode with get, set" Usage="System.Windows.Controls.Calendar.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>許可されている選択の種類を示す値を取得または設定します。</summary>
        <value>現在の選択モードを示す値。 既定値は、<see cref="F:System.Windows.Controls.CalendarSelectionMode.SingleDate" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_SelectionMode"></a>   
## <a name="dependency-property-information"></a>依存プロパティ情報  
  
|||  
|-|-|  
|識別子フィールドです。|<xref:System.Windows.Controls.Calendar.SelectionModeProperty>|  
|メタデータのプロパティを設定**は true。**|なし|  
  
 このプロパティを決定するかどうか、<xref:System.Windows.Controls.Calendar>選択、1 つの日付の選択、または複数の日付の選択は許可されません。 選択モードを指定した、<xref:System.Windows.Controls.CalendarSelectionMode>列挙体。  
  
 このプロパティが変更されたときに選択されているすべての日付はクリアされます。  
  
<a name="xamlAttributeUsage_SelectionMode"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
 \<Calendar **SelectionMode**="<xref:System.Windows.Controls.CalendarSelectionMode>"/>  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Controls.Calendar>を持つ複数の範囲の日付を選択します。  
  
 [!code-csharp[CalendarSnippets#3](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[CalendarSnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#3)]
 [!code-xaml[CalendarSnippets#3](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; SelectionModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; SelectionModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Calendar.SelectionModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionModeChanged As EventHandler(Of EventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;EventArgs ^&gt; ^ SelectionModeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionModeChanged : EventHandler&lt;EventArgs&gt; " Usage="member this.SelectionModeChanged : System.EventHandler&lt;System.EventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> が変更されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Calendar.SelectionModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Calendar.SelectionModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Calendar.SelectionMode" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Calendar.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="calendar.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択された日付のテキスト表現を提供します。</summary>
        <returns>選択された日付のテキスト表現、または <see cref="P:System.Windows.Controls.Calendar.SelectedDate" /> が <see langword="null" /> の場合は空の文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>