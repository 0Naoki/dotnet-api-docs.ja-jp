<Type Name="PrintDialog" FullName="System.Windows.Controls.PrintDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2ff668fcfe6ea6ad22ee4b07dce62cfe66d7575" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32693045" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrintDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDialog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.PrintDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class PrintDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintDialog" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザー入力に従って <see cref="T:System.Printing.PrintTicket" /> および <see cref="T:System.Printing.PrintQueue" /> を構成し、ドキュメントを印刷する標準の Microsoft Windows 印刷ダイアログ ボックスを呼び出します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーを使用できる、**印刷**ダイアログ ボックスをプリンターを選択して、構成、および印刷ジョブを実行します。  
  
 厳密には、使用することができます、<xref:System.Windows.Controls.PrintDialog.PrintDocument%2A>ダイアログを開くことがなくメソッドです。 その意味では、コンポーネントとして含まれる未知、印刷コントロールを使用できます。 パフォーマンス上の理由から、いずれかを使用する方がよいなりますが、<xref:System.Printing.PrintQueue.AddJob%2A>メソッドまたは多くのいずれかの<xref:System.Windows.Xps.XpsDocumentWriter.Write%2A>と<xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A>のメソッド、 <xref:System.Windows.Xps.XpsDocumentWriter>。 詳細については、これは、次を参照してください。[する方法: プログラムによって印刷 XPS のファイル](~/docs/framework/wpf/advanced/how-to-programmatically-print-xps-files.md)です。  
  
 このクラスを混同しないでください<xref:System.Windows.Controls.PrintDialog?displayProperty=nameWithType>で<xref:System.Windows.Forms.PrintDialog?displayProperty=nameWithType>です。 後者は、Windows フォーム アプリケーションで使用されます。 <xref:System.Windows.Controls.PrintDialog?displayProperty=nameWithType> Windows Presentation Foundation アプリケーションで使用されます。  
  
   
  
## Examples  
 次の例は、のインスタンスを作成し、単純なを表示する方法を示しています。<xref:System.Windows.Controls.PrintDialog>を使用して[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]マークアップおよびコード。  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrintDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.PrintDialog" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPageEnabled">
      <MemberSignature Language="C#" Value="public bool CurrentPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CurrentPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.CurrentPageEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPageEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CurrentPageEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリンターで現在のページを印刷するためのオプションが有効かどうかを示す値を取得または設定します。</summary>
        <value>
          現在のページを印刷するオプションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPage">
      <MemberSignature Language="C#" Value="public uint MaxPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MaxPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPage As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 MaxPage { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページ範囲内で許容されている最大のページ番号を取得または設定します。</summary>
        <value>A<see cref="T:System.UInt32" />ページ範囲で使用できる最大ページ数を表す、**印刷** ダイアログ ボックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クリックしたユーザー**印刷**ときに、**印刷** ダイアログ ボックスで設定されている範囲外のページを印刷に設定されて、<xref:System.Windows.Controls.PrintDialog.MaxPage%2A>と<xref:System.Windows.Controls.PrintDialog.MinPage%2A>値への助言を行うには、最大と最小のページ番号のエラー メッセージが表示されます。 何が印刷されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">このプロパティは 1 未満に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="MinPage">
      <MemberSignature Language="C#" Value="public uint MinPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MinPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MinPage" />
      <MemberSignature Language="VB.NET" Value="Public Property MinPage As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 MinPage { System::UInt32 get(); void set(System::UInt32 value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページ範囲内で許容されている最小のページ番号を取得または設定します。</summary>
        <value>A<see cref="T:System.UInt32" />ページ範囲で使用できる最小のページ番号を表す、**印刷** ダイアログ ボックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クリックしたユーザー**印刷**ときに、**印刷** ダイアログ ボックスで設定されている範囲外のページを印刷に設定されて、<xref:System.Windows.Controls.PrintDialog.MaxPage%2A>と<xref:System.Windows.Controls.PrintDialog.MinPage%2A>値への助言を行うには、最大と最小のページ番号のエラー メッセージが表示されます。 何が印刷されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">このプロパティは 1 未満に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRange">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRange PageRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRange PageRange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRange" />
      <MemberSignature Language="VB.NET" Value="Public Property PageRange As PageRange" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::PageRange PageRange { System::Windows::Controls::PageRange get(); void set(System::Windows::Controls::PageRange value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" /> が <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" /> に設定されている場合に印刷するページの範囲を取得または設定します。</summary>
        <value>印刷されているページの範囲を表す <see cref="T:System.Windows.Controls.PageRange" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">プロパティを設定するために使用されている <see cref="T:System.Windows.Controls.PageRange" /> オブジェクトによって、範囲の先頭または範囲の末尾が 1 未満の値に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRangeSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRangeSelection PageRangeSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRangeSelection PageRangeSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRangeSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PageRangeSelection As PageRangeSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::PageRangeSelection PageRangeSelection { System::Windows::Controls::PageRangeSelection get(); void set(System::Windows::Controls::PageRangeSelection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRangeSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.PageRangeSelection" /> のこのインスタンスの <see cref="T:System.Windows.Controls.PrintDialog" /> を取得または設定します。</summary>
        <value>印刷するページ範囲の種類を表す <see cref="T:System.Windows.Controls.PageRangeSelection" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.Windows.Controls.PrintDialog.PageRangeSelection%2A>プロパティを使用して[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]マークアップおよびコード。  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaHeight">
      <MemberSignature Language="C#" Value="public double PrintableAreaHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableAreaHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PrintableAreaHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの印刷可能領域の高さを取得します。</summary>
        <value>印刷可能ページ領域の高さを表す <see cref="T:System.Double" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例の値を取得する方法を示しています、<xref:System.Windows.Controls.PrintDialog.PrintableAreaHeight%2A>プロパティを使用して[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]マークアップおよびコード。  
  
 [!code-xaml[PrintDialog#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#4)]  
  
 ...  
  
 [!code-csharp[PrintDialog#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PrintDialog#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaWidth">
      <MemberSignature Language="C#" Value="public double PrintableAreaWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintableAreaWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PrintableAreaWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの印刷可能領域の幅を取得します。</summary>
        <value>印刷可能ページ領域の幅を表す <see cref="T:System.Double" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例の値を取得する方法を示しています、<xref:System.Windows.Controls.PrintDialog.PrintableAreaWidth%2A>プロパティを使用して[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]マークアップおよびコード。  
  
 [!code-xaml[PrintDialog#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#3)]  
  
 ...  
  
 [!code-csharp[PrintDialog#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PrintDialog#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public void PrintDocument (System.Windows.Documents.DocumentPaginator documentPaginator, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintDocument(class System.Windows.Documents.DocumentPaginator documentPaginator, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrintDocument(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">印刷する <see cref="T:System.Windows.Documents.DocumentPaginator" /> オブジェクト。</param>
        <param name="description">印刷されるジョブの説明。 このテキストは、プリンターの[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] に表示されます。</param>
        <summary>現在選択されている <see cref="T:System.Windows.Documents.DocumentPaginator" /> に <see cref="T:System.Printing.PrintQueue" /> オブジェクトを印刷します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="documentPaginator" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="PrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue PrintQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue PrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintQueue As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueue ^ PrintQueue { System::Printing::PrintQueue ^ get(); void set(System::Printing::PrintQueue ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されているプリンターを表す <see cref="T:System.Printing.PrintQueue" /> を取得または設定します。</summary>
        <value>ユーザーが選択した <see cref="T:System.Printing.PrintQueue" />。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">印刷する権限です。 関連する列挙。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.PrintTicket PrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket PrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTicket As PrintTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintTicket ^ PrintTicket { System::Printing::PrintTicket ^ get(); void set(System::Printing::PrintTicket ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが現在の印刷ジョブに対して **[印刷]** をクリックした場合に、<see cref="T:System.Windows.Controls.PrintDialog" /> によって使用される <see cref="T:System.Printing.PrintTicket" /> を取得または設定します。</summary>
        <value>A<see cref="T:System.Printing.PrintTicket" />次回使用される、**印刷** ダイアログ ボックスのボタンをクリックします。  
  
 この <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" /> プロパティを設定しても、特定の <see cref="T:System.Printing.PrintTicket" /> に対して指定した <see cref="T:System.Printing.PrintQueue" /> の検証または変更は行われません。  必要に応じて、<see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> メソッドを使用して、指定したプリンターに対して有効な、<see cref="T:System.Printing.PrintQueue" /> 固有の <see cref="T:System.Printing.PrintTicket" /> を作成します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 検証の設定も、このプロパティの取得、<xref:System.Printing.PrintTicket>です。 検証するのには使用<xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintVisual">
      <MemberSignature Language="C#" Value="public void PrintVisual (System.Windows.Media.Visual visual, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintVisual(class System.Windows.Media.Visual visual, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrintVisual(System::Windows::Media::Visual ^ visual, System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="visual">印刷する <see cref="T:System.Windows.Media.Visual" />。</param>
        <param name="description">印刷されるジョブの説明。 このテキストは、プリンターの[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] に表示されます。</param>
        <summary>
          <see cref="T:System.Windows.Media.Visual" /> クラスから派生している (テキスト以外の) ビジュアル オブジェクトを、現在選択されている <see cref="T:System.Printing.PrintQueue" /> に印刷します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visual" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedPagesEnabled">
      <MemberSignature Language="C#" Value="public bool SelectedPagesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectedPagesEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.SelectedPagesEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedPagesEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SelectedPagesEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリンターで選択されたページを印刷するためのオプションが有効かどうかを示す値を取得または設定します。</summary>
        <value>
          選択されたページを印刷するオプションが有効になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.PrintDialog" /> を、モーダル ダイアログ ボックスとして呼び出します。</summary>
        <returns>
          ユーザーが **[印刷]** をクリックした場合は <see langword="true" />。ユーザーが **[キャンセル]** をクリックした場合は <see langword="false" />。ユーザーが **[印刷]** も **[キャンセル]** もクリックせずにダイアログ ボックスを閉じた場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Windows.Controls.PrintDialog.ShowDialog%2A>コード内のメソッドです。  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserPageRangeEnabled">
      <MemberSignature Language="C#" Value="public bool UserPageRangeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserPageRangeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property UserPageRangeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UserPageRangeEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[印刷]** ダイアログ ボックスの印刷するページの範囲を指定するオプションを、ユーザーが使用できるかどうかを示す値を取得または設定します。</summary>
        <value>
          オプションを使用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、設定する方法を示します、<xref:System.Windows.Controls.PrintDialog.UserPageRangeEnabled%2A>プロパティを使用して[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]マークアップおよびコード。  
  
 [!code-xaml[PrintDialog#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>