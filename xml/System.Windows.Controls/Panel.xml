<Type Name="Panel" FullName="System.Windows.Controls.Panel">
  <TypeSignature Language="C#" Value="public abstract class Panel : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Panel extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Panel" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Panel&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class Panel abstract : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Children")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e14d0-101">すべての <see cref="T:System.Windows.Controls.Panel" /> 要素の基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-101">Provides a base class for all <see cref="T:System.Windows.Controls.Panel" /> elements.</span></span> <span data-ttu-id="e14d0-102"><see cref="T:System.Windows.Controls.Panel" /> 要素を使用して、Windows Presentation Foundation (WPF) アプリケーション内の子オブジェクトを配置および整理します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-102">Use <see cref="T:System.Windows.Controls.Panel" /> elements to position and arrange child objects in Windows Presentation Foundation (WPF) applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-103">A<xref:System.Windows.Controls.Panel>のコレクションを格納<xref:System.Windows.UIElement>では、オブジェクト、<xref:System.Windows.Controls.Panel.Children%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-103">A <xref:System.Windows.Controls.Panel> contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property.</span></span> <span data-ttu-id="e14d0-104">追加する、<xref:System.Windows.UIElement>に子、<xref:System.Windows.Controls.Panel>に暗黙的に追加して、<xref:System.Windows.Controls.UIElementCollection>の<xref:System.Windows.Controls.Panel>要素。</span><span class="sxs-lookup"><span data-stu-id="e14d0-104">Adding a <xref:System.Windows.UIElement> child to a <xref:System.Windows.Controls.Panel> implicitly adds it to the <xref:System.Windows.Controls.UIElementCollection> for the <xref:System.Windows.Controls.Panel> element.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="e14d0-105"> 包括的なスイートは、派生<xref:System.Windows.Controls.Panel>実装では、多くの複雑なレイアウトを有効にします。</span><span class="sxs-lookup"><span data-stu-id="e14d0-105"> provides a comprehensive suite of derived <xref:System.Windows.Controls.Panel> implementations, enabling many complex layouts.</span></span> <span data-ttu-id="e14d0-106">新しいレイアウト コンテナーを実装する場合は、使用、<xref:System.Windows.FrameworkElement.MeasureOverride%2A>と<xref:System.Windows.FrameworkElement.ArrangeOverride%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-106">If you want to implement new layout containers, use the <xref:System.Windows.FrameworkElement.MeasureOverride%2A> and <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> methods.</span></span> <span data-ttu-id="e14d0-107">これらのメソッドを使用する方法のデモについては、次を参照してください。[カスタム コンテンツの折り返しパネル サンプルを作成する](http://go.microsoft.com/fwlink/?LinkID=159979)です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-107">For a demonstration of how to use these methods, see [Create a Custom Content-Wrapping Panel Sample](http://go.microsoft.com/fwlink/?LinkID=159979).</span></span>  
  
 <span data-ttu-id="e14d0-108"><xref:System.Windows.Controls.Panel> 要素は受け取りませんマウス イベントやスタイラス イベント場合、<xref:System.Windows.Controls.Panel.Background%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-108"><xref:System.Windows.Controls.Panel> elements do not receive mouse or stylus events if a <xref:System.Windows.Controls.Panel.Background%2A> is not defined.</span></span> <span data-ttu-id="e14d0-109">イベント ハンドル マウスまたはスタイラスする必要がありますが、用の背景をしない場合、<xref:System.Windows.Controls.Panel>を使用して<xref:System.Windows.Media.Brushes.Transparent%2A>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-109">If you need to handle mouse or stylus events but do not want a background for your <xref:System.Windows.Controls.Panel>, use <xref:System.Windows.Media.Brushes.Transparent%2A>.</span></span>  
  
 <span data-ttu-id="e14d0-110">パネルの要素では、フォーカスは既定では表示されません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-110">Panel elements do not receive focus by default.</span></span> <span data-ttu-id="e14d0-111">フォーカスを受け取るパネルの要素を強制するには、設定、<xref:System.Windows.UIElement.Focusable%2A>プロパティを`true`です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-111">To compel a panel element to receive focus, set the <xref:System.Windows.UIElement.Focusable%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e14d0-112">次の例を使用する方法を示しています、 <xref:System.Windows.Controls.Panel.Children%2A> 2 を追加するプロパティ<xref:System.Windows.Controls.Button>オブジェクトを<xref:System.Windows.Controls.StackPanel>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-112">The following example shows how to use the <xref:System.Windows.Controls.Panel.Children%2A> property to add two <xref:System.Windows.Controls.Button> objects to a <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 [!code-xaml[StackPanel_snip#StackPanelExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StackPanel_snip/CS/StackPanelExample.xaml#stackpanelexamplewholepage)] 
 [!code-csharp[Stackpanel_Procedural_snip#StackPanelExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/Stackpanel_Procedural_snip/CSharp/StackpanelExample.cs#stackpanelexamplewholepage)] 
 [!code-vb[Stackpanel_Procedural_snip#StackPanelExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Stackpanel_Procedural_snip/visualbasic/stackpanelexample.vb#stackpanelexamplewholepage)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Panel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Panel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e14d0-113"><see cref="T:System.Windows.Controls.Panel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-113">Initializes a new instance of the <see cref="T:System.Windows.Controls.Panel" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-114"><see cref="T:System.Windows.Media.Brush" /> の境界線間の領域を塗りつぶすために使用する <see cref="T:System.Windows.Controls.Panel" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-114">Gets or sets a <see cref="T:System.Windows.Media.Brush" /> that is used to fill the area between the borders of a <see cref="T:System.Windows.Controls.Panel" />.</span></span></summary>
        <value><span data-ttu-id="e14d0-115"><see cref="T:System.Windows.Media.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-115">A <see cref="T:System.Windows.Media.Brush" />.</span></span> <span data-ttu-id="e14d0-116">この既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-116">This default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-117"><xref:System.Windows.Controls.Panel> 要素は受け取りませんマウス イベントやスタイラス イベント場合、<xref:System.Windows.Controls.Panel.Background%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-117"><xref:System.Windows.Controls.Panel> elements do not receive mouse or stylus events if a <xref:System.Windows.Controls.Panel.Background%2A> is not defined.</span></span> <span data-ttu-id="e14d0-118">イベント ハンドル マウスまたはスタイラスする必要がありますが、用の背景をしない場合、<xref:System.Windows.Controls.Panel>を使用して<xref:System.Windows.Media.Brushes.Transparent%2A>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-118">If you need to handle mouse or stylus events but do not want a background for your <xref:System.Windows.Controls.Panel>, use <xref:System.Windows.Media.Brushes.Transparent%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_Background"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e14d0-119">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="e14d0-119">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e14d0-120">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="e14d0-120">Identifier field</span></span>|<xref:System.Windows.Controls.Panel.BackgroundProperty>|  
|<span data-ttu-id="e14d0-121">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="e14d0-121">Metadata properties set to `true`</span></span>|<span data-ttu-id="e14d0-122"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="e14d0-122"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e14d0-123">次の例のセット、<xref:System.Windows.Controls.Panel.Background%2A>の<xref:System.Windows.Controls.Grid>を<xref:System.Windows.Media.RadialGradientBrush>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-123">The following example sets the <xref:System.Windows.Controls.Panel.Background%2A> of a <xref:System.Windows.Controls.Grid> to a <xref:System.Windows.Media.RadialGradientBrush>.</span></span>  
  
 [!code-xaml[PanelBackground#1](~/samples/snippets/csharp/VS_Snippets_Wpf/panelbackground/CS/mainwindow.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Brush" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Panel.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-124"><see cref="P:System.Windows.Controls.Panel.Background" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-124">Identifies the <see cref="P:System.Windows.Controls.Panel.Background" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.Panel.Background" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UIElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UIElementCollection ^ Children { System::Windows::Controls::UIElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-125">この <see cref="T:System.Windows.Controls.UIElementCollection" /> の子要素の <see cref="T:System.Windows.Controls.Panel" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-125">Gets a <see cref="T:System.Windows.Controls.UIElementCollection" /> of child elements of this <see cref="T:System.Windows.Controls.Panel" />.</span></span></summary>
        <value><span data-ttu-id="e14d0-126"><see cref="T:System.Windows.Controls.UIElementCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-126">A <see cref="T:System.Windows.Controls.UIElementCollection" />.</span></span> <span data-ttu-id="e14d0-127">既定値は空の <see cref="T:System.Windows.Controls.UIElementCollection" /> です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-127">The default is an empty <see cref="T:System.Windows.Controls.UIElementCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-128"><xref:System.Windows.Controls.Panel.Children%2A>のコレクション、<xref:System.Windows.Controls.Panel>要素のみで構成できます<xref:System.Windows.UIElement>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e14d0-128">The <xref:System.Windows.Controls.Panel.Children%2A> collection of a <xref:System.Windows.Controls.Panel> element can only consist of <xref:System.Windows.UIElement> objects.</span></span> <span data-ttu-id="e14d0-129">追加する、<xref:System.Windows.UIElement>に子、<xref:System.Windows.Controls.Panel>に暗黙的に追加して、<xref:System.Windows.Controls.UIElementCollection>の<xref:System.Windows.Controls.Panel>要素。</span><span class="sxs-lookup"><span data-stu-id="e14d0-129">Adding a <xref:System.Windows.UIElement> child to a <xref:System.Windows.Controls.Panel> implicitly adds it to the <xref:System.Windows.Controls.UIElementCollection> for the <xref:System.Windows.Controls.Panel> element.</span></span>  
  
 <span data-ttu-id="e14d0-130">このコレクションを使用しない派生<xref:System.Windows.Controls.Panel>クラス; 使用して、<xref:System.Windows.Controls.Panel.InternalChildren%2A>コレクション代わりにします。</span><span class="sxs-lookup"><span data-stu-id="e14d0-130">Do not use this collection with derived <xref:System.Windows.Controls.Panel> classes; use the <xref:System.Windows.Controls.Panel.InternalChildren%2A> collection instead.</span></span>  
  
 <span data-ttu-id="e14d0-131">このプロパティを返します`null`場合、<xref:System.Windows.Controls.Panel>データにバインドします。</span><span class="sxs-lookup"><span data-stu-id="e14d0-131">This property returns `null` if the <xref:System.Windows.Controls.Panel> is data bound.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e14d0-132">次のコード例を使用する方法を示しています、<xref:System.Windows.Controls.Panel.Children%2A>プロパティを追加する、<xref:System.Windows.UIElement>子を<xref:System.Windows.Controls.Panel>要素。</span><span class="sxs-lookup"><span data-stu-id="e14d0-132">The following code example demonstrates how to use the <xref:System.Windows.Controls.Panel.Children%2A> property to add a <xref:System.Windows.UIElement> child to a <xref:System.Windows.Controls.Panel> element.</span></span>  
  
 [!code-csharp[framesnips#FrameNavigateSetup](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnips/CSharp/Window1.xaml.cs#framenavigatesetup)]
 [!code-vb[framesnips#FrameNavigateSetup](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FrameSnips/visualbasic/window1.xaml.vb#framenavigatesetup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.UIElement" />
      </Docs>
    </Member>
    <Member MemberName="CreateUIElementCollection">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Controls.UIElementCollection CreateUIElementCollection (System.Windows.FrameworkElement logicalParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Controls.UIElementCollection CreateUIElementCollection(class System.Windows.FrameworkElement logicalParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateUIElementCollection (logicalParent As FrameworkElement) As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Controls::UIElementCollection ^ CreateUIElementCollection(System::Windows::FrameworkElement ^ logicalParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="logicalParent"><span data-ttu-id="e14d0-133">作成されるコレクションの論理上の親要素。</span><span class="sxs-lookup"><span data-stu-id="e14d0-133">The logical parent element of the collection to be created.</span></span></param>
        <summary><span data-ttu-id="e14d0-134">新しい <see cref="T:System.Windows.Controls.UIElementCollection" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-134">Creates a new <see cref="T:System.Windows.Controls.UIElementCollection" />.</span></span></summary>
        <returns><span data-ttu-id="e14d0-135">指定された論理上の親を持つ、要素の順序付きコレクション。</span><span class="sxs-lookup"><span data-stu-id="e14d0-135">An ordered collection of elements that have the specified logical parent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-136">使用して、生成された<xref:System.Windows.Controls.UIElementCollection>またはレイアウトの増分更新を実行する子要素に関する情報をキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="e14d0-136">Use the generated <xref:System.Windows.Controls.UIElementCollection> to cache information about child elements or to perform incremental layout updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e14d0-137"><see cref="T:System.Windows.Media.Visual" /> 子のインデックス位置。</span><span class="sxs-lookup"><span data-stu-id="e14d0-137">The index position of the <see cref="T:System.Windows.Media.Visual" /> child.</span></span></param>
        <summary><span data-ttu-id="e14d0-138">指定されたインデックス位置にあるこの <see cref="T:System.Windows.Media.Visual" /> の <see cref="T:System.Windows.Controls.Panel" /> 子を取得します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-138">Gets a <see cref="T:System.Windows.Media.Visual" /> child of this <see cref="T:System.Windows.Controls.Panel" /> at the specified index position.</span></span></summary>
        <returns><span data-ttu-id="e14d0-139">親 <see cref="T:System.Windows.Media.Visual" /> 要素の子 <see cref="T:System.Windows.Controls.Panel" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-139">A <see cref="T:System.Windows.Media.Visual" /> child of the parent <see cref="T:System.Windows.Controls.Panel" /> element.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Visual" />
      </Docs>
    </Member>
    <Member MemberName="GetZIndex">
      <MemberSignature Language="C#" Value="public static int GetZIndex (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetZIndex(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetZIndex (element As UIElement) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetZIndex(System::Windows::UIElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e14d0-140"><see cref="P:System.Windows.Controls.Panel.ZIndex" /> 値の取得対象となる要素。</span><span class="sxs-lookup"><span data-stu-id="e14d0-140">The element for which to retrieve the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> value.</span></span></param>
        <summary><span data-ttu-id="e14d0-141">特定の要素の <see cref="P:System.Windows.Controls.Panel.ZIndex" /> プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-141">Gets the value of the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> property for a given element.</span></span></summary>
        <returns><span data-ttu-id="e14d0-142">要素の <see cref="P:System.Windows.Controls.Panel.ZIndex" /> の位置。</span><span class="sxs-lookup"><span data-stu-id="e14d0-142">The <see cref="P:System.Windows.Controls.Panel.ZIndex" /> position of the element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e14d0-143">要素は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-143">The element is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Panel.ZIndex" />
      </Docs>
    </Member>
    <Member MemberName="HasLogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasLogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.HasLogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasLogicalOrientation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasLogicalOrientation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-144">この <see cref="T:System.Windows.Controls.Panel" /> がその子孫を 1 次元で整列させるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-144">Gets a value that indicates whether this <see cref="T:System.Windows.Controls.Panel" /> arranges its descendants in a single dimension.</span></span></summary>
        <value>
          <span data-ttu-id="e14d0-145"><see cref="T:System.Windows.Controls.Panel" /> の方向が 1 次元の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-145"><see langword="true" /> if the orientation of the <see cref="T:System.Windows.Controls.Panel" /> is in one dimension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-146">定義済みのみ panel 要素の間で<xref:System.Windows.Controls.StackPanel>返します`true`その方向が 1 つのディメンションであるため、します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-146">Among predefined panel elements, only <xref:System.Windows.Controls.StackPanel> returns `true`, because its orientation is in a single dimension.</span></span>  <span data-ttu-id="e14d0-147">サブクラス<xref:System.Windows.Controls.Panel>このプロパティを上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-147">Subclasses of <xref:System.Windows.Controls.Panel> can override this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="HasLogicalOrientationPublic">
      <MemberSignature Language="C#" Value="public bool HasLogicalOrientationPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLogicalOrientationPublic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.HasLogicalOrientationPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLogicalOrientationPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLogicalOrientationPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-148">この <see cref="T:System.Windows.Controls.Panel" /> がその子孫を 1 次元で整列させるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-148">Gets a value that indicates whether this <see cref="T:System.Windows.Controls.Panel" /> arranges its descendants in a single dimension.</span></span></summary>
        <value>
          <span data-ttu-id="e14d0-149"><see cref="T:System.Windows.Controls.Panel" /> の方向が 1 次元の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-149"><see langword="true" /> if the orientation of the <see cref="T:System.Windows.Controls.Panel" /> is in one dimension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-150">定義済みのみ panel 要素の間で<xref:System.Windows.Controls.StackPanel>返します`true`その方向が 1 つのディメンションであるため、します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-150">Among predefined panel elements, only <xref:System.Windows.Controls.StackPanel> returns `true`, because its orientation is in a single dimension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalChildren">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Controls.UIElementCollection InternalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection InternalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.InternalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property InternalChildren As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Controls::UIElementCollection ^ InternalChildren { System::Windows::Controls::UIElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-151">子要素の <see cref="T:System.Windows.Controls.UIElementCollection" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-151">Gets a <see cref="T:System.Windows.Controls.UIElementCollection" /> of child elements.</span></span></summary>
        <value><span data-ttu-id="e14d0-152"><see cref="T:System.Windows.UIElement" /> オブジェクトの順序の付いたコレクション。</span><span class="sxs-lookup"><span data-stu-id="e14d0-152">An ordered collection of <see cref="T:System.Windows.UIElement" /> objects.</span></span> <span data-ttu-id="e14d0-153">このプロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-153">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-154">返されるコレクションには、コードに直接追加される項目およびデータ バインディングによって生成される項目が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e14d0-154">The returned collection includes items that are added directly in code, and also items that are generated by data binding.</span></span>  
  
 <span data-ttu-id="e14d0-155">クラスから派生した<xref:System.Windows.Controls.Panel>の代わりに、このプロパティを使用する必要があります、<xref:System.Windows.Controls.Panel.Children%2A>などの内部の上書きのプロパティ、<xref:System.Windows.UIElement.MeasureCore%2A>と<xref:System.Windows.UIElement.ArrangeCore%2A>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-155">Classes that are derived from <xref:System.Windows.Controls.Panel> should use this property, instead of the <xref:System.Windows.Controls.Panel.Children%2A> property, for internal overrides such as <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemsHost">
      <MemberSignature Language="C#" Value="public bool IsItemsHost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsItemsHost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.IsItemsHost" />
      <MemberSignature Language="VB.NET" Value="Public Property IsItemsHost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsItemsHost { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-156">この <see cref="T:System.Windows.Controls.Panel" /> が <see cref="T:System.Windows.Controls.ItemsControl" /> で生成される[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目のコンテナーであることを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-156">Gets or sets a value that indicates that this <see cref="T:System.Windows.Controls.Panel" /> is a container for [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] items that are generated by an <see cref="T:System.Windows.Controls.ItemsControl" />.</span></span></summary>
        <value>
          <span data-ttu-id="e14d0-157"><see cref="T:System.Windows.Controls.Panel" /> のこのインスタンスが項目ホストの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-157"><see langword="true" /> if this instance of <see cref="T:System.Windows.Controls.Panel" /> is an items host; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e14d0-158">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-158">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-159">データは、このプロパティをバインドすることはできません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-159">You cannot bind data to this property.</span></span>  
  
<a name="dependencyPropertyInfo_IsItemsHost"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="e14d0-160">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="e14d0-160">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="e14d0-161">識別子のフィールド</span><span class="sxs-lookup"><span data-stu-id="e14d0-161">Identifier field</span></span>|<xref:System.Windows.Controls.Panel.IsItemsHostProperty>|  
|<span data-ttu-id="e14d0-162">メタデータ プロパティに設定します。 `true`</span><span class="sxs-lookup"><span data-stu-id="e14d0-162">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="e14d0-163">次の例では、<xref:System.Windows.Controls.ControlTemplate>を水平方向を作成する<xref:System.Windows.Controls.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-163">The following example uses a <xref:System.Windows.Controls.ControlTemplate> to create a horizontal <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="e14d0-164">水平<xref:System.Windows.Controls.StackPanel>内に指定されて、<xref:System.Windows.Controls.ControlTemplate>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-164">The horizontal <xref:System.Windows.Controls.StackPanel> is specified within the <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="e14d0-165"><xref:System.Windows.Controls.Panel.IsItemsHost%2A>プロパティに設定されている`true`上、<xref:System.Windows.Controls.StackPanel>パネルで、生成された項目に配置することを示します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-165">The <xref:System.Windows.Controls.Panel.IsItemsHost%2A> property is set to `true` on the <xref:System.Windows.Controls.StackPanel>, which indicates that the generated items should be placed in the panel.</span></span> <span data-ttu-id="e14d0-166">この方法を指定すると、<xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A>を使用せず、コントロールのユーザーによって置き換えることができません、<xref:System.Windows.Controls.ControlTemplate>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-166">When you specify it this way, the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> cannot be replaced by the user of the control without using a <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="e14d0-167">そのため、テンプレートを使用せずに交換するのには、パネルをしないようにすることがわかって場合にのみ、この作成を行います。</span><span class="sxs-lookup"><span data-stu-id="e14d0-167">Therefore, do this only if you know that you do not want the panel to be replaced without the use of a template.</span></span>  
  
 [!code-xaml[StylingIntroSnippet#ListBoxCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSnippet/CS/window1.xaml#listboxct)]   
  
 <span data-ttu-id="e14d0-168">また、設定することができます、<xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e14d0-168">Alternatively, you can set the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e14d0-169">次の例のセット、<xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A>で、<xref:System.Windows.Style>の<xref:System.Windows.Controls.ListBox>です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-169">The following example sets the <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> in a <xref:System.Windows.Style> of a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 [!code-xaml[listboxhorizontal#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxHorizontal/CS/window1.xaml#1)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ItemsControl" />
      </Docs>
    </Member>
    <Member MemberName="IsItemsHostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsItemsHostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsItemsHostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Panel.IsItemsHostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsItemsHostProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsItemsHostProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-170"><see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-170">Identifies the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.Panel.IsItemsHost" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-171">この <see cref="T:System.Windows.Controls.Panel" /> 要素の論理上の子要素を反復処理できる列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-171">Gets an enumerator that can iterate the logical child elements of this <see cref="T:System.Windows.Controls.Panel" /> element.</span></span></summary>
        <value><span data-ttu-id="e14d0-172"><see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-172">An <see cref="T:System.Collections.IEnumerator" />.</span></span> <span data-ttu-id="e14d0-173">このプロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-173">This property has no default value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Controls.Orientation LogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation LogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.LogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property LogicalOrientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Controls::Orientation LogicalOrientation { System::Windows::Controls::Orientation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-174">パネルが 1 次元のレイアウトのみをサポートする場合は、パネルの <see cref="T:System.Windows.Controls.Orientation" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-174">The <see cref="T:System.Windows.Controls.Orientation" /> of the panel, if the panel supports layout in only a single dimension.</span></span></summary>
        <value><span data-ttu-id="e14d0-175">パネルの <see cref="T:System.Windows.Controls.Orientation" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-175">The <see cref="T:System.Windows.Controls.Orientation" /> of the panel.</span></span> <span data-ttu-id="e14d0-176">このプロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-176">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-177">サブクラス<xref:System.Windows.Controls.Panel>このプロパティを上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-177">Subclasses of <xref:System.Windows.Controls.Panel> can override this property.</span></span> <span data-ttu-id="e14d0-178">場合<xref:System.Windows.Controls.Panel.HasLogicalOrientation%2A>は`false`、このプロパティの値を無視する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e14d0-178">If <xref:System.Windows.Controls.Panel.HasLogicalOrientation%2A> is `false`, this property value should be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="LogicalOrientationPublic">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation LogicalOrientationPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation LogicalOrientationPublic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.LogicalOrientationPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOrientationPublic As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Orientation LogicalOrientationPublic { System::Windows::Controls::Orientation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-179">パネルが 1 次元のレイアウトのみをサポートする場合は、パネルの <see cref="T:System.Windows.Controls.Orientation" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-179">The <see cref="T:System.Windows.Controls.Orientation" /> of the panel, if the panel supports layout in only a single dimension.</span></span></summary>
        <value><span data-ttu-id="e14d0-180">パネルの <see cref="T:System.Windows.Controls.Orientation" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-180">The <see cref="T:System.Windows.Controls.Orientation" /> of the panel.</span></span> <span data-ttu-id="e14d0-181">このプロパティには既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-181">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-182">場合<xref:System.Windows.Controls.Panel.HasLogicalOrientation%2A>は`false`、このプロパティの値を無視する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e14d0-182">If <xref:System.Windows.Controls.Panel.HasLogicalOrientation%2A> is `false`, this property value should be ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsItemsHostChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsItemsHostChanged (bool oldIsItemsHost, bool newIsItemsHost);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsItemsHostChanged(bool oldIsItemsHost, bool newIsItemsHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsItemsHostChanged (oldIsItemsHost As Boolean, newIsItemsHost As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsItemsHostChanged(bool oldIsItemsHost, bool newIsItemsHost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldIsItemsHost" Type="System.Boolean" />
        <Parameter Name="newIsItemsHost" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="oldIsItemsHost"><span data-ttu-id="e14d0-183">変更前のプロパティ値。</span><span class="sxs-lookup"><span data-stu-id="e14d0-183">The old property value.</span></span></param>
        <param name="newIsItemsHost"><span data-ttu-id="e14d0-184">変更後のプロパティ値。</span><span class="sxs-lookup"><span data-stu-id="e14d0-184">The new property value.</span></span></param>
        <summary><span data-ttu-id="e14d0-185"><see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> プロパティの値が変更されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-185">Indicates that the <see cref="P:System.Windows.Controls.Panel.IsItemsHost" /> property value has changed.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.Panel.IsItemsHost" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected override void OnRender (System.Windows.Media.DrawingContext dc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRender(class System.Windows.Media.DrawingContext dc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRender (dc As DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRender(System::Windows::Media::DrawingContext ^ dc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="dc"><span data-ttu-id="e14d0-186">描画する <see cref="T:System.Windows.Media.DrawingContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e14d0-186">The <see cref="T:System.Windows.Media.DrawingContext" /> object to draw.</span></span></param>
        <summary><span data-ttu-id="e14d0-187"><see cref="T:System.Windows.Media.DrawingContext" /> 要素の描画パス中に <see cref="T:System.Windows.Controls.Panel" /> オブジェクトのコンテンツを描画します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-187">Draws the content of a <see cref="T:System.Windows.Media.DrawingContext" /> object during the render pass of a <see cref="T:System.Windows.Controls.Panel" /> element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="e14d0-188">コレクションに追加された <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-188">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection.</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="e14d0-189">コレクションから削除された <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-189">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection.</span></span></param>
        <summary><span data-ttu-id="e14d0-190">ビジュアル オブジェクトの <see cref="T:System.Windows.Media.VisualCollection" /> が変更されると、呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-190">Invoked when the <see cref="T:System.Windows.Media.VisualCollection" /> of a visual object is modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-191"><xref:System.Windows.Controls.Panel.ZIndex%2A> 値は、子要素が追加またはコレクションから削除されたときに自動的に再計算されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-191"><xref:System.Windows.Controls.Panel.ZIndex%2A> values are automatically recalculated when child elements are added to or removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Visual" />
        <altmember cref="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetZIndex">
      <MemberSignature Language="C#" Value="public static void SetZIndex (System.Windows.UIElement element, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetZIndex(class System.Windows.UIElement element, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetZIndex (element As UIElement, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetZIndex(System::Windows::UIElement ^ element, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e14d0-192">プロパティ値を適用する要素。</span><span class="sxs-lookup"><span data-stu-id="e14d0-192">The element on which to apply the property value.</span></span></param>
        <param name="value"><span data-ttu-id="e14d0-193">この要素が表示される、z 平面上の順序。</span><span class="sxs-lookup"><span data-stu-id="e14d0-193">The order on the z-plane in which this element appears.</span></span></param>
        <summary><span data-ttu-id="e14d0-194">所定の要素の <see cref="P:System.Windows.Controls.Panel.ZIndex" /> 添付プロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-194">Sets the value of the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> attached property for a given element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e14d0-195">大なり、`value`の指定された`element`可能性が高く、`element`が前面に表示します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-195">The greater the `value` of a given `element`, the more likely the `element` is to appear in the foreground.</span></span> <span data-ttu-id="e14d0-196">同様に場合、`element`が比較的低い`value`、`element`はバック グラウンドで表示される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e14d0-196">Likewise, if an `element` has a relatively low `value`, the `element` will likely appear in the background.</span></span> <span data-ttu-id="e14d0-197">たとえば、`element`を持つ、 `value` 5 の上に表示されます、`element`を持つ、`value`は 4 で、さらに上に表示されます、`element`第 3 の値を設定しています。</span><span class="sxs-lookup"><span data-stu-id="e14d0-197">For example, an `element` that has a `value` of 5 will appear above an `element` that has a `value` of 4, which in turn will appear above an `element` that has a value of 3, and so on.</span></span> <span data-ttu-id="e14d0-198">負の値が許可され、この優先順位のパターンが続行されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-198">Negative values are allowed, and they continue this precedence pattern.</span></span>  
  
 <span data-ttu-id="e14d0-199">メンバー、<xref:System.Windows.Controls.Panel.Children%2A>と等しいコレクション<xref:System.Windows.Controls.Panel.ZIndex%2A>値がビジュアル ツリー内に出現する順序で表示されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-199">Members of a <xref:System.Windows.Controls.Panel.Children%2A> collection that have equal <xref:System.Windows.Controls.Panel.ZIndex%2A> values are rendered in the order in which they appear in the visual tree.</span></span> <span data-ttu-id="e14d0-200">メンバーを反復処理して、子のインデックス位置を指定できます、<xref:System.Windows.Controls.Panel.Children%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="e14d0-200">You can determine the index position of a child by iterating the members of the <xref:System.Windows.Controls.Panel.Children%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e14d0-201">次の例でコード内の値を設定する方法を示しています、<xref:System.Windows.Controls.Panel.ZIndex%2A>プロパティ (を使用して、<xref:System.Windows.Controls.Panel.SetZIndex%2A>メソッド)。</span><span class="sxs-lookup"><span data-stu-id="e14d0-201">The following example demonstrates in code how to set the value of the <xref:System.Windows.Controls.Panel.ZIndex%2A> property (by using the <xref:System.Windows.Controls.Panel.SetZIndex%2A> method).</span></span>  
  
 [!code-cpp[canvasz-order#2](~/samples/snippets/cpp/VS_Snippets_Wpf/CanvasZ-Order/CPP/CanvasZ-Order.cpp#2)]
 [!code-csharp[canvasz-order#2](~/samples/snippets/csharp/VS_Snippets_Wpf/CanvasZ-Order/Csharp/CanvasZ-Order.cs#2)]
 [!code-vb[canvasz-order#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CanvasZ-Order/VisualBasic/CanvasZ-Order.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e14d0-202">要素は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e14d0-202">The element is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeChildren">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.ShouldSerializeChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeChildren () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e14d0-203">パネルの <see cref="P:System.Windows.Controls.Panel.Children" /> コレクションをシリアル化する必要があるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-203">Determines whether the <see cref="P:System.Windows.Controls.Panel.Children" /> collection of a panel should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="e14d0-204"><see cref="P:System.Windows.Controls.Panel.Children" /> コレクションをシリアル化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e14d0-204"><see langword="true" /> if the <see cref="P:System.Windows.Controls.Panel.Children" /> collection should be serialized; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e14d0-205"><see cref="P:System.Windows.Controls.Panel.Children" /> コレクションは、空または <see langword="null" /> ではない場合にのみシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="e14d0-205">The <see cref="P:System.Windows.Controls.Panel.Children" /> collection is only serialized if it is not empty and not <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e14d0-206">子として追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e14d0-206">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="e14d0-207">この型またはメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-207">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Panel.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e14d0-208">オブジェクトに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="e14d0-208">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="e14d0-209">この型またはメンバーは、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="e14d0-209">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-210"><see cref="T:System.Windows.Media.Visual" /> のこのインスタンス内の子 <see cref="T:System.Windows.Controls.Panel" /> オブジェクトの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-210">Gets the number of child <see cref="T:System.Windows.Media.Visual" /> objects in this instance of <see cref="T:System.Windows.Controls.Panel" />.</span></span></summary>
        <value><span data-ttu-id="e14d0-211">子 <see cref="T:System.Windows.Media.Visual" /> オブジェクトの数。</span><span class="sxs-lookup"><span data-stu-id="e14d0-211">The number of child <see cref="T:System.Windows.Media.Visual" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZIndex">
      <MemberSignature Language="C#" Value="see GetZIndex, and SetZIndex" />
      <MemberSignature Language="ILAsm" Value="see GetZIndex, and SetZIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Panel.ZIndex" />
      <MemberSignature Language="VB.NET" Value="see GetZIndex, and SetZIndex" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ZIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ZIndexProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Panel.ZIndexProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ZIndexProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ZIndexProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e14d0-212"><see cref="P:System.Windows.Controls.Panel.ZIndex" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="e14d0-212">Identifies the <see cref="P:System.Windows.Controls.Panel.ZIndex" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>