<Type Name="UserControl" FullName="System.Windows.Controls.UserControl">
  <TypeSignature Language="C#" Value="public class UserControl : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UserControl extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.UserControl" />
  <TypeSignature Language="VB.NET" Value="Public Class UserControl&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserControl : System::Windows::Controls::ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fc4b3-101">コントロールを作成するための簡単な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-101">Provides a simple way to create a control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc4b3-102">コントロールの[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]豊富なコンテンツ、スタイル、トリガー、およびテンプレートをサポートします。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-102">Controls in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] support rich content, styles, triggers, and templates.</span></span> <span data-ttu-id="fc4b3-103">これらの機能では、多くの場合、新しいコントロールを作成することがなくカスタム一貫性のあるエクスペリエンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-103">In many cases, these features allow you to create custom and consistent experiences without having to create a new control.</span></span> <span data-ttu-id="fc4b3-104">詳しくは、「 [スタイルとテンプレート](~/docs/framework/wpf/controls/styling-and-templating.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-104">For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
 <span data-ttu-id="fc4b3-105">派生するクラスを作成する最も簡単な方法は、新しいコントロールを作成する必要がある場合<xref:System.Windows.Controls.UserControl>です。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-105">If you do need to create a new control, the simplest way is to create a class that derives from <xref:System.Windows.Controls.UserControl>.</span></span> <span data-ttu-id="fc4b3-106">これを行う前に、コントロールがテンプレートをサポートしないと、そのため、複雑なカスタマイズはサポートされていませんを検討してください。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-106">Before you do so, consider that your control will not support templates and therefore will not support complex customization.</span></span> <span data-ttu-id="fc4b3-107">ただしから派生する<xref:System.Windows.Controls.UserControl>は適切なモデル場合は、そのアプリケーションを構築する方法のような既存の要素を追加することで、コントロールをビルドする場合に複雑なカスタマイズをサポートする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-107">However, deriving from <xref:System.Windows.Controls.UserControl> is a suitable model if you want to build your control by adding existing elements to it, similar to how you build an application, and if you do not need to support complex customization.</span></span> <span data-ttu-id="fc4b3-108">(から派生して、コントロールでテンプレートを使用する場合は、<xref:System.Windows.Controls.Control>代わりにします)。コントロールを作成するための異なるモデルの詳細については、次を参照してください。[コントロールの作成の概要](~/docs/framework/wpf/controls/control-authoring-overview.md)です。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-108">(If you want to use templates with your control, derive from <xref:System.Windows.Controls.Control> instead.) For more information about the different models for authoring controls, see [Control Authoring Overview](~/docs/framework/wpf/controls/control-authoring-overview.md).</span></span>  
  
 <span data-ttu-id="fc4b3-109">A<xref:System.Windows.Controls.UserControl>は、 <xref:System.Windows.Controls.ContentControl>、任意の型 (文字列、画像、パネルなど) の 1 つのオブジェクトに含めることを意味します。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-109">A <xref:System.Windows.Controls.UserControl> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="fc4b3-110">詳細については、<xref:System.Windows.Controls.ContentControl> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-110">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
 <span data-ttu-id="fc4b3-111">コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-111">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="fc4b3-112">プロパティが既定のスタイルが設定されている場合は、アプリケーションでコントロールが表示されたら既定値から、プロパティが変更可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-112">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="fc4b3-113">既定のスタイルは、いるデスクトップ テーマによっては、アプリケーションが実行されている場合は使用が決定されます。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-113">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="fc4b3-114">詳細については、次を参照してください。 [WPF テーマの既定の](http://go.microsoft.com/fwlink/?LinkID=158252)します。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-114">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc4b3-115">次の例は、単純なを作成する方法を示します`NumericUpDown`<xref:System.Windows.Controls.UserControl>です。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-115">The following example shows how to create a simple `NumericUpDown`<xref:System.Windows.Controls.UserControl>.</span></span>  
  
 [!code-xaml[UserControlNumericUpDown#Markup](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml#markup)]  
  
 <span data-ttu-id="fc4b3-116">このロジックを次に示します<xref:System.Windows.Controls.UserControl>:</span><span class="sxs-lookup"><span data-stu-id="fc4b3-116">The following shows the logic of this <xref:System.Windows.Controls.UserControl>:</span></span>  
  
 [!code-csharp[UserControlNumericUpDown#CodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml.cs#codebehind)]
 [!code-vb[UserControlNumericUpDown#CodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UserControlNumericUpDown/visualbasic/numericupdown.xaml.vb#codebehind)]  
  
 <span data-ttu-id="fc4b3-117">詳しくは、「[コントロールの作成の概要](~/docs/framework/wpf/controls/control-authoring-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-117">For more information, see [Control Authoring Overview](~/docs/framework/wpf/controls/control-authoring-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc4b3-118"><see cref="T:System.Windows.Controls.UserControl" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-118">Initializes a new instance of the <see cref="T:System.Windows.Controls.UserControl" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc4b3-119">この <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.UserControl" /> を作成して返します。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-119">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for this <see cref="T:System.Windows.Controls.UserControl" />.</span></span></summary>
        <returns><span data-ttu-id="fc4b3-120">この <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> の新しい <see cref="T:System.Windows.Controls.UserControl" />。</span><span class="sxs-lookup"><span data-stu-id="fc4b3-120">A new <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> for this <see cref="T:System.Windows.Controls.UserControl" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>