<Namespace Name="System.Transactions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27e12b25390a72364c77196a34eae502971d0d2b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70501043" /></Metadata><Docs>
    <summary><span data-ttu-id="b0ee9-101"><see cref="N:System.Transactions" /> 名前空間には、トランザクション アプリケーションやリソース マネージャーを独自に作成するためのクラスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-101">The <see cref="N:System.Transactions" /> namespace contains classes that allow you to write your own transactional application and resource manager.</span></span> <span data-ttu-id="b0ee9-102">具体的には、1 つまたは複数の参加要素を含むローカル トランザクションまたは分散トランザクションを作成し、参加できます。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-102">Specifically, you can create and participate in a transaction (local or distributed) with one or multiple participants.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="b0ee9-103">この`System.Transactions`インフラストラクチャにより、SQL Server、ADO.NET、MSMQ、Microsoft 分散トランザクションコーディネーター (MSDTC) で開始されたトランザクションをサポートすることで、プラットフォーム全体でトランザクションプログラミングがシンプルで効率的になります。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-103">The `System.Transactions` infrastructure makes transactional programming simple and efficient throughout the platform by supporting transactions initiated in SQL Server, ADO.NET, MSMQ, and the Microsoft Distributed Transaction Coordinator (MSDTC).</span></span> <span data-ttu-id="b0ee9-104">この<xref:System.Transactions.Transaction>クラスには、クラスに基づく明示的なプログラミングモデルと、トランザクションがインフラストラクチャによって<xref:System.Transactions.TransactionScope>自動的に管理されるクラスを使用した暗黙的なプログラミングモデルが用意されています。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-104">It provides both an explicit programming model based on the <xref:System.Transactions.Transaction> class, as well as an implicit programming model using the <xref:System.Transactions.TransactionScope> class, in which transactions are automatically managed by the infrastructure.</span></span> <span data-ttu-id="b0ee9-105">開発には、より簡単な暗黙的なモデルを使用することを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-105">It is highly recommended that you use the easier implicit model for development.</span></span> <span data-ttu-id="b0ee9-106">開始するには、「[トランザクションスコープを使用した暗黙的なトランザクションの実装](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-106">To get started, see the [Implementing An Implicit Transaction Using Transaction Scope](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)) topic.</span></span> <span data-ttu-id="b0ee9-107">トランザクションアプリケーションの作成の詳細については、「[トランザクションアプリケーションの作成](~/docs/framework/data/transactions/writing-a-transactional-application.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-107">For more information on writing a transactional application, see [Writing A Transactional Application](~/docs/framework/data/transactions/writing-a-transactional-application.md).</span></span>
  
 <span data-ttu-id="b0ee9-108">`System.Transactions`には、リソースマネージャーを実装するための型も用意されています。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-108">`System.Transactions` also provides types for you to implement a resource manager.</span></span> <span data-ttu-id="b0ee9-109">`System.Transactions`インフラストラクチャにネイティブのトランザクションマネージャーを使用すると、揮発性リソースまたは1つの永続的なリソースの参加が、効率的にコミットまたはロールバックできます。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-109">The transaction manager native to the `System.Transactions` infrastructure allows volatile resources or a single durable resource enlistment to commit or roll back efficiently.</span></span> <span data-ttu-id="b0ee9-110">リソース マネージャーの実装の詳細については、「[Implementing A Resource Manager](https://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-110">For more information on implementing a resource manager, see [Implementing A Resource Manager](https://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e).</span></span>  
  
 <span data-ttu-id="b0ee9-111">また、トランザクションマネージャーは、追加の持続性のあるリソースマネージャーがトランザクションに参加するときに、DTC のようなディスクベースのトランザクションマネージャーによって調整することによって、ローカルトランザクションを分散トランザクションに透過的にエスカレートします。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-111">The transaction manager also transparently escalates local transactions to distributed transactions by coordinating through a disk-based transaction manager like the DTC, when an additional durable resource manager enlists itself with a transaction.</span></span> <span data-ttu-id="b0ee9-112">`System.Transactions` インフラストラクチャでは、主に 2 つの方法でパフォーマンスを向上させています。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-112">There are two key ways that the `System.Transactions` infrastructure provides enhanced performance.</span></span>  
  
-   <span data-ttu-id="b0ee9-113">動的エスカレーション。これは、インフラストラクチャ`System.Transactions`が実際にトランザクションに必要な場合にのみ MSDTC を使用することを意味します。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-113">Dynamic Escalation, which means that the `System.Transactions` infrastructure only engages the MSDTC when it is actually required for a transaction.</span></span> <span data-ttu-id="b0ee9-114">この領域の詳細については、「[トランザクション管理のエスカレーション](https://msdn.microsoft.com/library/5b87ae58-8ccf-4b9b-9715-41e4aade89b7)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-114">This area is covered in depth in the [Transaction Management Escalation](https://msdn.microsoft.com/library/5b87ae58-8ccf-4b9b-9715-41e4aade89b7) topic.</span></span>  
  
-   <span data-ttu-id="b0ee9-115">昇格可能参加リスト。これにより、データベースなどのリソースが、トランザクションに参加している唯一のエンティティである場合に、トランザクションの所有権を取得できます。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-115">Promotable Enlistments, which allows a resource, such as a database, to take ownership of the transaction if it is the only entity participating in the transaction.</span></span> <span data-ttu-id="b0ee9-116">その後、必要に応じ`System.Transactions`て、インフラストラクチャはトランザクションの管理を MSDTC にエスカレートすることができます。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-116">Later, if needed, the `System.Transactions` infrastructure can still escalate the management of the transaction to MSDTC.</span></span> <span data-ttu-id="b0ee9-117">これにより、MSDTC の使用頻度をさらに減らすことができます。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-117">This further reduces the chance of using the MSDTC.</span></span> <span data-ttu-id="b0ee9-118">この領域の詳細については、「[単一フェーズコミットと昇格可能単一フェーズ通知を使用した最適化](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms229980(v=vs.85))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-118">This area is covered in depth in the [Optimization Using Single Phase Commit and Promotable Single Phase Notification](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms229980(v=vs.85)) topic.</span></span>  
  
 <span data-ttu-id="b0ee9-119">`System.Transactions`は、公開するリソースの種類に対するアクセスを制限する3つの信頼レベルを定義します。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-119">`System.Transactions` defines three levels of trust that restrict access on the types of resources it exposes.</span></span> <span data-ttu-id="b0ee9-120">具体的には\*\* 、system.object アセンブリは、 `AllowPartiallyTrustedCallers`属性 (APTCA) でマークされているため、部分的に信頼されているコードから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-120">Specifically, the *System.Transactions* assembly can be called by partially trusted code as it has been marked with the `AllowPartiallyTrustedCallers` attribute (APTCA).</span></span> <span data-ttu-id="b0ee9-121">この属性は基本的に、<xref:System.Security.Permissions.SecurityAction.LinkDemand> アクセス許可セットの暗黙的な `FullTrust` を削除します。削除しない場合、これは各種類のパブリックにアクセスできるメソッドに自動的に配置されます。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-121">This attribute essentially removes the implicit <xref:System.Security.Permissions.SecurityAction.LinkDemand> for the `FullTrust` permission set that is otherwise automatically placed on each publicly accessible method in each type.</span></span> <span data-ttu-id="b0ee9-122">ただし、種類やメンバーによっては、さらに強力なアクセス許可が必要となります。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-122">However, some types and members still require stronger permissions.</span></span>  
  
 <span data-ttu-id="b0ee9-123">次に示すのは、部分的に信頼されるコードによって呼び出されない型とメンバーの一覧です。これらは、次の宣言型セキュリティ属性で修飾されています。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-123">The following is a list of types and members that are not callable by partially trusted code because they are decorated with the following declarative security attribute:</span></span>  
  
 `PermissionSetAttribute(SecurityAction.LinkDemand, Name := "FullTrust")`  
  
 <span data-ttu-id="b0ee9-124">EnlistDurable (トランザクション)</span><span class="sxs-lookup"><span data-stu-id="b0ee9-124">System.Transactions.Transaction.EnlistDurable</span></span>  
  
 <span data-ttu-id="b0ee9-125">Transaction.enlistpromotablesinglephase (トランザクション)</span><span class="sxs-lookup"><span data-stu-id="b0ee9-125">System.Transactions.Transaction.EnlistPromotableSinglePhase</span></span>  
  
 <span data-ttu-id="b0ee9-126">システムトランザクションの相互運用</span><span class="sxs-lookup"><span data-stu-id="b0ee9-126">System.Transactions.TransactionInterop</span></span>  
  
 <span data-ttu-id="b0ee9-127">DistributedTransactionStarted (システムトランザクション)</span><span class="sxs-lookup"><span data-stu-id="b0ee9-127">System.Transactions.TransactionManager.DistributedTransactionStarted</span></span>  
  
 <span data-ttu-id="b0ee9-128">System.string. HostCurrentTransactionCallback</span><span class="sxs-lookup"><span data-stu-id="b0ee9-128">System.Transactions.TransactionManager.HostCurrentTransactionCallback</span></span>  
  
 <span data-ttu-id="b0ee9-129">Reenlist (システムトランザクション)</span><span class="sxs-lookup"><span data-stu-id="b0ee9-129">System.Transactions.TransactionManager.Reenlist</span></span>  
  
 <span data-ttu-id="b0ee9-130">システムトランザクションの完了</span><span class="sxs-lookup"><span data-stu-id="b0ee9-130">System.Transactions.TransactionManager.RecoveryComplete</span></span>  
  
 <span data-ttu-id="b0ee9-131">システムトランザクション (system.string、system.string、system.string、またはの各サービスの相互に処理する場合) の場合。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-131">System.Transactions.TransactionScope.TransactionScope (System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)</span></span>  
  
 <span data-ttu-id="b0ee9-132">M:System.Transactions.TransactionScope.TransactionScope (システムトランザクションのオプション、システムトランザクションのオプション、システムのトランザクションの処理、およびサービスの処理)</span><span class="sxs-lookup"><span data-stu-id="b0ee9-132">M:System.Transactions.TransactionScope.TransactionScope(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)</span></span>  
  
 <span data-ttu-id="b0ee9-133">さまざまな信頼レベルの詳細については、「[Security Trust Levels in Accessing Resources](https://msdn.microsoft.com/library/8e45acbc-0d81-4f64-9da7-8f766aebff51)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-133">For more information on the various trust levels, see [Security Trust Levels in Accessing Resources](https://msdn.microsoft.com/library/8e45acbc-0d81-4f64-9da7-8f766aebff51).</span></span>  
  
 <span data-ttu-id="b0ee9-134">コア開発 Technologies\Data Access\ トランザクション処理 </span><span class="sxs-lookup"><span data-stu-id="b0ee9-134">Core Development Technologies\Data Access\Transaction Processing</span></span>\  
  
 <span data-ttu-id="b0ee9-135">名前空間の`System.Transactions`使用方法の詳細については、「」の「Core Development Technologies\Data access/transaction processing\\」セクションにある概念ドキュメントの[トランザクション処理](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/w97s6fw4(v=vs.85))を参照してください。ドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-135">For more information on how to use the `System.Transactions` namespace, you can consult the conceptual documentation [Transaction Processing](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/w97s6fw4(v=vs.85)), located under the "Core Development Technologies\Data Access\Transaction Processing\\" section in the documentation.</span></span> <span data-ttu-id="b0ee9-136">詳細については、次のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b0ee9-136">Specifically, you can find more information in the following topics.</span></span>  
  
 [<span data-ttu-id="b0ee9-137">システムトランザクションによって提供される機能</span><span class="sxs-lookup"><span data-stu-id="b0ee9-137">Features Provided By System.Transactions</span></span>](https://msdn.microsoft.com/library/99cc5ce0-b7fd-4d78-a553-a3dd3f17ed45)  
  
 [<span data-ttu-id="b0ee9-138">リソースマネージャーの実装</span><span class="sxs-lookup"><span data-stu-id="b0ee9-138">Implementing A Resource Manager</span></span>](https://msdn.microsoft.com/library/81509719-d579-4530-831e-42e1acdef63e)  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>