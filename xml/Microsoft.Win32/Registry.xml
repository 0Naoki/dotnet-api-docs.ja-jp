<Type Name="Registry" FullName="Microsoft.Win32.Registry">
  <TypeSignature Language="C#" Value="public static class Registry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Registry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.Registry" />
  <TypeSignature Language="VB.NET" Value="Public Class Registry" />
  <TypeSignature Language="C++ CLI" Value="public ref class Registry abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1a17-101">Windows レジストリのルート キーを表す <see cref="T:Microsoft.Win32.RegistryKey" /> オブジェクト、およびキー/値ペアにアクセスするための <see langword="static" /> メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-101">Provides <see cref="T:Microsoft.Win32.RegistryKey" /> objects that represent the root keys in the Windows registry, and <see langword="static" /> methods to access key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-102">このクラスは、Windows を実行しているコンピューターでのレジストリで見つかった標準のルート キーのセットを提供します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-102">This class provides the set of standard root keys found in the registry on machines running Windows.</span></span> <span data-ttu-id="a1a17-103">レジストリは、アプリケーション、ユーザー、および既定のシステム設定に関する情報を格納する機能です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-103">The registry is a storage facility for information about applications, users, and default system settings.</span></span> <span data-ttu-id="a1a17-104">たとえば、アプリケーションは、レジストリを使用して、アプリケーションが閉じられた後も保持する必要がある情報を格納して、アプリケーションが再読み込みされるときにその同じ情報にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="a1a17-104">For example, applications can use the registry for storing information that needs to be preserved after the application is closed, and access that same information when the application is reloaded.</span></span> <span data-ttu-id="a1a17-105">たとえば、色の設定、画面の位置、またはウィンドウのサイズを格納できます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-105">For instance, you can store color preferences, screen locations, or the size of the window.</span></span> <span data-ttu-id="a1a17-106">レジストリ内の別の場所に情報を格納することにより、ユーザーごとにこのデータを制御できます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-106">You can control this data for each user by storing the information in a different location in the registry.</span></span>  
  
 <span data-ttu-id="a1a17-107">ベース、またはルート<xref:Microsoft.Win32.RegistryKey>によって公開されているインスタンス、`Registry`クラスは、レジストリのサブキーと値の基本的なストレージ機構を記述します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-107">The base, or root <xref:Microsoft.Win32.RegistryKey> instances that are exposed by the `Registry` class delineate the basic storage mechanism for subkeys and values in the registry.</span></span> <span data-ttu-id="a1a17-108">すべてのキーは、レジストリがの存在に依存しているために、読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-108">All keys are read-only because the registry depends on their existence.</span></span> <span data-ttu-id="a1a17-109">によって公開されているキー`Registry`は。</span><span class="sxs-lookup"><span data-stu-id="a1a17-109">The keys exposed by `Registry` are:</span></span>  
  
 <xref:Microsoft.Win32.Registry.CurrentUser>  
 <span data-ttu-id="a1a17-110">ユーザー設定に関する情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-110">Stores information about user preferences.</span></span>  
  
 <xref:Microsoft.Win32.Registry.LocalMachine>  
 <span data-ttu-id="a1a17-111">ローカル コンピューターの構成情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-111">Stores configuration information for the local machine.</span></span>  
  
 <xref:Microsoft.Win32.Registry.ClassesRoot>  
 <span data-ttu-id="a1a17-112">型 (およびクラス) に関する情報とそのプロパティを格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-112">Stores information about types (and classes) and their properties.</span></span>  
  
 <xref:Microsoft.Win32.Registry.Users>  
 <span data-ttu-id="a1a17-113">既定のユーザー構成に関する情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-113">Stores information about the default user configuration.</span></span>  
  
 <xref:Microsoft.Win32.Registry.PerformanceData>  
 <span data-ttu-id="a1a17-114">ソフトウェア コンポーネントに関するパフォーマンス情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-114">Stores performance information for software components.</span></span>  
  
 <xref:Microsoft.Win32.Registry.CurrentConfig>  
 <span data-ttu-id="a1a17-115">ユーザー固有のハードウェア情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-115">Stores non-user-specific hardware information.</span></span>  
  
 <xref:Microsoft.Win32.Registry.DynData>  
 <span data-ttu-id="a1a17-116">動的なデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-116">Stores dynamic data.</span></span>  
  
 <span data-ttu-id="a1a17-117">使用することができます、レジストリからの情報を格納および取得に使用するルート キーを識別した後、<xref:Microsoft.Win32.RegistryKey>クラスの追加またはサブキーを削除して、指定されたキーの値を操作します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-117">Once you have identified the root key under which you want to store/retrieve information from the registry, you can use the <xref:Microsoft.Win32.RegistryKey> class to add or remove subkeys, and manipulate the values for a given key.</span></span>  
  
 <span data-ttu-id="a1a17-118">ハードウェア デバイスでは、プラグ アンド プレイ インターフェイスを使用して自動的にレジストリに情報を配置できます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-118">Hardware devices can place information in the registry automatically using the Plug and Play interface.</span></span> <span data-ttu-id="a1a17-119">デバイス ドライバーをインストールするソフトウェアは、標準的な Api を記述して、レジストリに情報を配置できます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-119">Software for installing device drivers can place information in the registry by writing to standard APIs.</span></span>  
  
## <a name="static-methods-for-getting-and-setting-values"></a><span data-ttu-id="a1a17-120">取得して、値を設定するための静的メソッド</span><span class="sxs-lookup"><span data-stu-id="a1a17-120">Static Methods for Getting and Setting Values</span></span>  
 <span data-ttu-id="a1a17-121">.NET framework version 2.0 では、<xref:Microsoft.Win32.Registry>クラスも含まれています。 `static` <xref:Microsoft.Win32.Registry.GetValue%2A>と<xref:Microsoft.Win32.Registry.SetValue%2A>設定およびレジストリ キーから値を取得するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-121">In the .NET Framework version 2.0, the <xref:Microsoft.Win32.Registry> class also contains `static`<xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods for setting and retrieving values from registry keys.</span></span> <span data-ttu-id="a1a17-122">これらのメソッドを開き、閉じるレジストリ キーの各実行しないように、使用時間だけでなく同期型のメソッドで、<xref:Microsoft.Win32.RegistryKey>クラス、多数の値にアクセスするとします。</span><span class="sxs-lookup"><span data-stu-id="a1a17-122">These methods open and close registry keys each time they are used, so they do not perform as well as analogous methods in the <xref:Microsoft.Win32.RegistryKey> class, when you access a large number of values.</span></span>  
  
 <span data-ttu-id="a1a17-123"><xref:Microsoft.Win32.RegistryKey>クラスには、レジストリ キー、キーを削除して、取得する前に、値のデータ型をテストするための Windows アクセス制御セキュリティを設定するためのメソッドも用意されています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-123">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to set Windows access control security for registry keys, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-124">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-124">This section contains two code examples.</span></span> <span data-ttu-id="a1a17-125">最初の例では、ルート キー、および 2 番目の例を示しています、 `static` <xref:Microsoft.Win32.Registry.GetValue%2A>と<xref:Microsoft.Win32.Registry.SetValue%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-125">The first example demonstrates root keys, and the second example demonstrates the `static`<xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods.</span></span>  
  
 <span data-ttu-id="a1a17-126">例 1</span><span class="sxs-lookup"><span data-stu-id="a1a17-126">Example 1</span></span>  
  
 <span data-ttu-id="a1a17-127">次のコード例では、HKEY_USERS キーのサブキーを取得し、画面にその名前を印刷する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-127">The following code example demonstrates how to retrieve the subkeys of the HKEY_USERS key, and print their names to the screen.</span></span> <span data-ttu-id="a1a17-128">使用して、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>関心のある特定のサブキーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-128">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="a1a17-129">その他の操作を行うこともできますし、`RegistryKey`をそのキーを操作します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-129">You can then use other operations in `RegistryKey` to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a1a17-130">例 2</span><span class="sxs-lookup"><span data-stu-id="a1a17-130">Example 2</span></span>  
  
 <span data-ttu-id="a1a17-131">次のコード例では、例キーとを取得し、表示値とキーを作成するいくつかのデータ型の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-131">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="a1a17-132">例の格納と取得の既定値 (無名) の名前と値のペアと、使用して`defaultValue`名前/値ペアが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="a1a17-132">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.RegistryHive" />
    <altmember cref="T:Microsoft.Win32.RegistryKey" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey ClassesRoot;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassesRoot As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ ClassesRoot;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1a17-133">ドキュメントの型 (またはクラス) と、これらの型に関連付けられるプロパティを定義します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-133">Defines the types (or classes) of documents and the properties associated with those types.</span></span> <span data-ttu-id="a1a17-134">このフィールドには、Windows レジストリの基本キー HKEY_CLASSES_ROOT が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-134">This field reads the Windows registry base key HKEY_CLASSES_ROOT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-135">従来のアプリケーションと OLE アプリケーションは、このキーの下に格納されているデータを使用します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-135">Both conventional applications and OLE applications use data that is stored under this key.</span></span> <span data-ttu-id="a1a17-136">このキーは、DDE と OLE のサポートの情報を格納することによっても Windows 3.1 登録データベースとの下位互換性を提供します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-136">This key also provides backward compatibility with the Windows 3.1 registration database by storing information for DDE and OLE support.</span></span> <span data-ttu-id="a1a17-137">ファイルのあるユーザーとユーザー インターフェイスの拡張機能は、このキーに、OLE クラス識別子を格納し、処理サーバーは、このキーに登録されています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-137">File viewers and user interface extensions store their OLE class identifiers in this key, and processing servers are registered in this key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-138">次の例では、このキーのサブキーを取得する方法について説明し、画面に名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-138">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="a1a17-139">使用して、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>関心のある特定のサブキーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-139">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="a1a17-140">その他の操作を行うこともできますし、<xref:Microsoft.Win32.RegistryKey>をそのキーを操作します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-140">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.ClassesRoot Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.ClassesRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.ClassesRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentConfig;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentConfig As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentConfig;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1a17-141">各ユーザーに共通のハードウェアに関する構成情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-141">Contains configuration information pertaining to the hardware that is not specific to the user.</span></span> <span data-ttu-id="a1a17-142">このフィールドには、Windows レジストリの基本キー HKEY_CURRENT_CONFIG が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-142">This field reads the Windows registry base key HKEY_CURRENT_CONFIG.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-143">このメンバーは、サブキー内にマップされて<xref:Microsoft.Win32.Registry.LocalMachine>です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-143">This member is mapped to a subkey within <xref:Microsoft.Win32.Registry.LocalMachine>.</span></span>  
  
 <span data-ttu-id="a1a17-144">このメンバーの使用例は、システムがネットワークに接続されているかどうかに応じて、データの別のサーバー名を格納するアプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-144">An example of using this member is an application that stores a different server name for its data depending on whether the system is attached to a network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-145">次の例では、このキーのサブキーを取得する方法について説明し、画面に名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-145">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="a1a17-146">使用して、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>関心のある特定のサブキーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-146">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="a1a17-147">その他の操作を行うこともできますし、<xref:Microsoft.Win32.RegistryKey>をそのキーを操作します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-147">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentConfig Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentConfig Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentConfig Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey CurrentUser;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CurrentUser As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ CurrentUser;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1a17-148">現在のユーザー設定に関する情報が格納されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-148">Contains information about the current user preferences.</span></span> <span data-ttu-id="a1a17-149">このフィールドには、Windows レジストリの基本キー HKEY_CURRENT_USER が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-149">This field reads the Windows registry base key HKEY_CURRENT_USER</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-150">このキーに格納された情報には、プログラム グループ、色、プリンター、ネットワーク接続、およびアプリケーションの設定に関するデータと環境変数の設定が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-150">Information stored in this key includes the settings of environment variables and data about program groups, colors, printers, network connections, and application preferences.</span></span> <span data-ttu-id="a1a17-151">このキーでは、現在のユーザーの設定を確立するためにやすくなります。</span><span class="sxs-lookup"><span data-stu-id="a1a17-151">This key makes it easier to establish the current user's settings.</span></span> <span data-ttu-id="a1a17-152">このキーでは、ソフトウェア ベンダーは、アプリケーション内で使用する現在のユーザーに固有の設定を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-152">In this key, software vendors store the current user-specific preferences to be used within their applications.</span></span> <span data-ttu-id="a1a17-153">Microsoft には、Microsoft のキーの下の独自のサブキーを作成する各アプリケーションで、使用するには、そのアプリケーションに対して、hkey_current_user \software\microsoft キーなどを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-153">Microsoft, for example, creates the HKEY_CURRENT_USER\Software\Microsoft key for its applications to use, with each application creating its own subkey under the Microsoft key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-154">次の例では、このキーのサブキーを取得する方法について説明し、画面に名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-154">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="a1a17-155">使用して、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>関心のある特定のサブキーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-155">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="a1a17-156">その他の操作を行うこともできますし、<xref:Microsoft.Win32.RegistryKey>をそのキーを操作します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-156">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.CurrentUser Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.CurrentUser Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.CurrentUser Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.CurrentUser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey DynData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.DynData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DynData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ DynData;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use PerformanceData instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1a17-157">動的レジストリ データを格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-157">Contains dynamic registry data.</span></span> <span data-ttu-id="a1a17-158">このフィールドには、Windows レジストリの基本キー HKEY_DYN_DATA が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-158">This field reads the Windows registry base key HKEY_DYN_DATA.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-159">Windows 98/Windows Me のレジストリでは、静的 (レジストリ内のディスクに保存されます) データと動的 (パフォーマンスの統計情報など、頻繁に変更) データの両方をサポートします。</span><span class="sxs-lookup"><span data-stu-id="a1a17-159">The Windows 98/Windows Me registry supports both static data (which is stored on disk in the registry) and dynamic data (which changes frequently, such as performance statistics).</span></span> <span data-ttu-id="a1a17-160">この動的なデータ領域は、Win32 アプリケーションでは、ローカルでもリモートで実行できる仮想デバイス ドライバー (Vxd) をリアルタイムのデータを提供できるようにするメカニズムです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-160">This dynamic data area is the mechanism that allows Virtual Device Drivers (VxDs) to provide real-time data to Win32 applications that can run remotely as well as locally.</span></span> <span data-ttu-id="a1a17-161">システム モニターはリモートの Windows 98/Windows Me システムでパフォーマンスの統計情報を提供することもできます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-161">It also allows the system monitor to provide performance statistics on remote Windows 98/Windows Me systems.</span></span>  
  
 <span data-ttu-id="a1a17-162">Vxd はパフォーマンス データに限定されません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-162">VxDs are not limited to performance data.</span></span> <span data-ttu-id="a1a17-163">リング 0 からせずに渡すリング 3 効率的に CPU を占有する任意のデータを提示できます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-163">They can provide any data they want to pass from Ring 0 to Ring 3 efficiently without monopolizing the CPU.</span></span> <span data-ttu-id="a1a17-164">レジストリ値 (または複数の値) を返す関数へのポインターを格納することによって動的なデータをサポートします。</span><span class="sxs-lookup"><span data-stu-id="a1a17-164">The registry supports dynamic data by storing a pointer to a function that returns a value (or many values).</span></span> <span data-ttu-id="a1a17-165">ときに呼び出しクエリのレジストリ値に関連付けられている動的なキーでは、目的の値または値を返す関数を呼び出すことです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-165">When a Registry call queries values associated with a dynamic key, that function is called to return the desired value or values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-166">動的なキーには、動的レジストリ データを処理する Microsoft Windows 95 では導入されました。</span><span class="sxs-lookup"><span data-stu-id="a1a17-166">Dynamic keys were introduced in Microsoft Windows 95 to handle dynamic Registry data.</span></span> <span data-ttu-id="a1a17-167">Windows 98/Windows me でのみサポートされています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-167">They are supported only in Windows 98/Windows Me.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-168">次の例では、このキーのサブキーを取得する方法について説明し、画面に名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-168">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="a1a17-169">使用して、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>関心のある特定のサブキーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-169">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="a1a17-170">その他の操作を行うこともできますし、<xref:Microsoft.Win32.RegistryKey>をそのキーを操作します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-170">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span> <span data-ttu-id="a1a17-171">この例結果が返されない、存在できない可能性があります動的データ、またはが実行されていない Windows 98 以降に注意してください/。</span><span class="sxs-lookup"><span data-stu-id="a1a17-171">Note that this example can return no results, since there might not be dynamic data available, or you might not be running Windows 98/ME.</span></span> <span data-ttu-id="a1a17-172">このキーを使用すると、他のシステムでエラーが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a1a17-172">Using this key may cause an error on other systems.</span></span>  
  
 [!code-cpp[Classic Registry.DynData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.DynData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.DynData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.DynData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.DynData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a1a17-173">そのオペレーティング システムは動的データをサポートしていません。つまり、それは Windows 98、Windows 98 Second Edition、または Windows Millennium Edition (Windows Me) ではありません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-173">The operating system does not support dynamic data; that is, it is not Windows 98, Windows 98 Second Edition, or Windows Millennium Edition (Windows Me).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="a1a17-174">有効なレジストリ ルート ("HKEY_CURRENT_USER" など) から始まるキーの完全なレジストリ パス。</span><span class="sxs-lookup"><span data-stu-id="a1a17-174">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span></span></param>
        <param name="valueName"><span data-ttu-id="a1a17-175">名前/値ペアの名前。</span><span class="sxs-lookup"><span data-stu-id="a1a17-175">The name of the name/value pair.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="a1a17-176"><c>valueName</c> が存在しない場合に返す値。</span><span class="sxs-lookup"><span data-stu-id="a1a17-176">The value to return if <c>valueName</c> does not exist.</span></span></param>
        <summary><span data-ttu-id="a1a17-177">指定したレジストリ キーに含まれる、指定した名前に関連付けられた値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-177">Retrieves the value associated with the specified name, in the specified registry key.</span></span> <span data-ttu-id="a1a17-178">指定したキーに該当する名前が見つからない場合は、設定している既定値が返されます。指定したキーが存在しない場合は、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-178">If the name is not found in the specified key, returns a default value that you provide, or <see langword="null" /> if the specified key does not exist.</span></span></summary>
        <returns>
          <span data-ttu-id="a1a17-179"><paramref name="keyName" /> で指定したサブキーが存在しない場合は、<see langword="null" />。それ以外の場合は、<paramref name="valueName" /> に関連付けられた値。<paramref name="defaultValue" /> が見つからない場合は、<paramref name="valueName" />。</span><span class="sxs-lookup"><span data-stu-id="a1a17-179"><see langword="null" /> if the subkey specified by <paramref name="keyName" /> does not exist; otherwise, the value associated with <paramref name="valueName" />, or <paramref name="defaultValue" /> if <paramref name="valueName" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-180">文字列`valueName`小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-180">The string `valueName` is not case-sensitive.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-181">レジストリ キーには、任意の名前に関連付けられていない 1 つの値を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-181">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="a1a17-182">レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-182">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="a1a17-183">この無名の値を取得するには、どちらかを指定`null`または空の文字列 ("") の`valuName`します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-183">To retrieve this unnamed value, specify either `null` or the empty string ("") for `valuName`.</span></span>  
  
 <span data-ttu-id="a1a17-184">有効なルート名とは、HKEY_CURRENT_USER、HKEY_LOCAL_MACHINE、HKEY_CLASSES_ROOT、HKEY_USERS、HKEY_PERFORMANCE_DATA、HKEY_CURRENT_CONFIG、およびとです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-184">Valid root names are HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span> <span data-ttu-id="a1a17-185">たとえば、Visual Basic では、文字列"HKEY_CURRENT_USER\MyTestKey"では、HKEY_CURRENT_USER のルートに"MyTestKey"サブキーのキー/値ペアにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="a1a17-185">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" accesses key/value pairs for the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span>  
  
 <span data-ttu-id="a1a17-186">ときに、<xref:Microsoft.Win32.RegistryKey.GetValue%2A>メソッドを展開可能な文字列値を取得します (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)、ローカルの環境からのデータを使用して環境文字列に展開されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-186">When the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method retrieves expandable string values (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), it expands environment strings using data from the local environment.</span></span> <span data-ttu-id="a1a17-187">環境変数を展開可能な参照を含む値を文字列として格納されている場合 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)、展開可能な文字列としてではなく (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)、<xref:Microsoft.Win32.RegistryKey.GetValue%2A>展開しません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-187">If a value containing expandable references to environment variables has been stored as a string (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>), rather than as an expandable string (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), <xref:Microsoft.Win32.RegistryKey.GetValue%2A> does not expand it.</span></span> <span data-ttu-id="a1a17-188">このような文字列を展開するには、呼び出すことによって取得された後、<xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-188">You can expand such a string after it has been retrieved by calling the <xref:System.Environment.ExpandEnvironmentVariables%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-189">HKEY_PERFORMANCE_DATA からデータを取得することをお勧めを使用して、<xref:System.Diagnostics.PerformanceCounter>クラスではなく、<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-189">The recommended way to retrieve data from HKEY_PERFORMANCE_DATA is to use the <xref:System.Diagnostics.PerformanceCounter> class rather than the <xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a1a17-190"><xref:Microsoft.Win32.Registry.GetValue%2A>と<xref:Microsoft.Win32.Registry.SetValue%2A>メソッドを開き、閉じるレジストリ キーのメソッドと同様に実行しないように、使用するたびに、<xref:Microsoft.Win32.RegistryKey>クラスの多数の値にアクセスする場合。</span><span class="sxs-lookup"><span data-stu-id="a1a17-190">The <xref:Microsoft.Win32.Registry.GetValue%2A> and <xref:Microsoft.Win32.Registry.SetValue%2A> methods open and close registry keys each time they are used, so they do not perform as well as the methods of the <xref:Microsoft.Win32.RegistryKey> class if you access a large number of values.</span></span>  
  
 <span data-ttu-id="a1a17-191"><xref:Microsoft.Win32.RegistryKey> 取得する前に、値のデータ型をテストし、キーを削除するレジストリ キーへのアクセス制御リスト (ACL) を追加できるメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-191"><xref:Microsoft.Win32.RegistryKey> also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-192">次のコード例では、例キーとを取得し、表示値とキーを作成するいくつかのデータ型の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-192">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="a1a17-193">例の格納と取得の既定値 (無名) の名前と値のペアと、使用して`defaultValue`名前/値ペアが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="a1a17-193">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a1a17-194">ユーザーに、レジストリ キーからの読み取りに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-194">The user does not have the permissions required to read from the registry key.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a1a17-195">削除対象としてマークされ、指定された値を格納する <see cref="T:Microsoft.Win32.RegistryKey" />。</span><span class="sxs-lookup"><span data-stu-id="a1a17-195">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1a17-196"><paramref name="keyName" /> が有効なレジストリ ルートから始まっていません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-196"><paramref name="keyName" /> does not begin with a valid registry root.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="a1a17-197">レジストリから読み取れません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-197">to read from the registry.</span></span> <span data-ttu-id="a1a17-198">関連する列挙。 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="a1a17-198">Associated enumeration: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="a1a17-199">REG_EXPAND_SZ の種類のレジストリ キーを読み取れません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-199">to read a registry key of type REG_EXPAND_SZ.</span></span> <span data-ttu-id="a1a17-200">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="a1a17-200">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey LocalMachine;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalMachine As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ LocalMachine;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1a17-201">ローカル コンピューターの構成データが格納されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-201">Contains the configuration data for the local machine.</span></span> <span data-ttu-id="a1a17-202">このフィールドには、Windows レジストリの基本キー HKEY_LOCAL_MACHINE が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-202">This field reads the Windows registry base key HKEY_LOCAL_MACHINE.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-203">`LocalMachine` 5 つのキーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-203">`LocalMachine` contains five keys:</span></span>  
  
 <span data-ttu-id="a1a17-204">ハードウェア</span><span class="sxs-lookup"><span data-stu-id="a1a17-204">Hardware</span></span>  
 <span data-ttu-id="a1a17-205">コンピューターで、物理ハードウェア デバイス ドライバーは、そのハードウェア、およびマッピングおよびユーザー モードのコードとカーネル モード ドライバーをリンクする関連データを使用する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-205">Describes the physical hardware in the computer, the way device drivers use that hardware, and mappings and related data that link kernel-mode drivers with user-mode code.</span></span> <span data-ttu-id="a1a17-206">このキーのすべてのデータは、システムを起動するたびに再作成されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-206">All data in this key is recreated each time the system is started.</span></span> <span data-ttu-id="a1a17-207">説明のサブキーには、実際のコンピューターのハードウェアについて説明します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-207">The Description subkey describes the actual computer hardware.</span></span> <span data-ttu-id="a1a17-208">DeviceMap サブキーには、ドライバーの特定のクラスに固有の形式での他のデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-208">The DeviceMap subkey contains miscellaneous data in formats specific to particular classes of drivers.</span></span> <span data-ttu-id="a1a17-209">ResourceMap サブキーは、どのデバイス ドライバがどのハードウェア リソースを要求について説明します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-209">The ResourceMap subkey describes which device drivers claim which hardware resources.</span></span> <span data-ttu-id="a1a17-210">Windows NT 診断プログラム (Winmsdp.exe) は、その内容を読みやすい形式で報告できます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-210">The Windows NT Diagnostics program (Winmsdp.exe) can report on its contents in an easy-to-read form.</span></span>  
  
 <span data-ttu-id="a1a17-211">SAM</span><span class="sxs-lookup"><span data-stu-id="a1a17-211">SAM</span></span>  
 <span data-ttu-id="a1a17-212">ユーザーおよびグループ アカウント、および Windows 2000 server ドメインのセキュリティ情報のディレクトリ サービス データベース (SAM は、セキュリティ アカウント マネージャーは、ディレクトリ サービス データベースと呼ばれます)。</span><span class="sxs-lookup"><span data-stu-id="a1a17-212">The directory services database of security information for user and group accounts, and for the domains in Windows 2000 Server (SAM is the Security Account Manager, known as the directory services database).</span></span>  
  
 <span data-ttu-id="a1a17-213">セキュリティ</span><span class="sxs-lookup"><span data-stu-id="a1a17-213">Security</span></span>  
 <span data-ttu-id="a1a17-214">特定のユーザー権限など、ローカル セキュリティ ポリシーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-214">Contains the local security policy, such as specific user rights.</span></span> <span data-ttu-id="a1a17-215">このキーは、Windows 2000 セキュリティ サブシステムによってのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-215">This key is used only by the Windows 2000 security subsystem.</span></span>  
  
 <span data-ttu-id="a1a17-216">ソフトウェア</span><span class="sxs-lookup"><span data-stu-id="a1a17-216">Software</span></span>  
 <span data-ttu-id="a1a17-217">コンピューターごとのソフトウェアのデータベースです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-217">The per-computer software database.</span></span> <span data-ttu-id="a1a17-218">このキーには、その他の構成データのさまざまな項目と共に、ローカル コンピューターにインストールされているソフトウェアに関するデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-218">This key contains data about software installed on the local computer, along with various items of miscellaneous configuration data.</span></span>  
  
 <span data-ttu-id="a1a17-219">システム</span><span class="sxs-lookup"><span data-stu-id="a1a17-219">System</span></span>  
 <span data-ttu-id="a1a17-220">システムの起動時、デバイス ドライバーの読み込み、Windows 2000 サービス、およびオペレーティング システムの動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-220">Controls system startup, device driver loading, Windows 2000 services, and operating system behavior.</span></span>  
  
 <span data-ttu-id="a1a17-221">規則では、下のようなデータが存在する場合は<xref:Microsoft.Win32.Registry.CurrentUser> <xref:Microsoft.Win32.Registry.LocalMachine>、内のデータ<xref:Microsoft.Win32.Registry.CurrentUser>が優先されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-221">By convention, if similar data exists under <xref:Microsoft.Win32.Registry.CurrentUser> and under <xref:Microsoft.Win32.Registry.LocalMachine>, the data in <xref:Microsoft.Win32.Registry.CurrentUser> takes precedence.</span></span> <span data-ttu-id="a1a17-222">ただし、このキーの値ことができますも拡張 (なく置換) Registry.LocalMachine 内のデータ。</span><span class="sxs-lookup"><span data-stu-id="a1a17-222">However, values in this key can also extend (rather than replace) data in Registry.LocalMachine.</span></span> <span data-ttu-id="a1a17-223">また、一部の項目 (デバイス ドライバーがエントリの読み込み) などは Registry.LocalMachine の外部で発生した場合です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-223">Also, some items (such as device driver loading entries) are meaningless if they occur outside of Registry.LocalMachine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-224">次の例では、このキーのサブキーを取得する方法について説明し、画面に名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-224">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="a1a17-225">使用して、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>関心のある特定のサブキーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-225">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="a1a17-226">その他の操作を行うこともできますし、<xref:Microsoft.Win32.RegistryKey>をそのキーを操作します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-226">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.LocalMachine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.LocalMachine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.LocalMachine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.LocalMachine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey PerformanceData;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PerformanceData As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ PerformanceData;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1a17-227">ソフトウェア コンポーネントのパフォーマンス情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-227">Contains performance information for software components.</span></span> <span data-ttu-id="a1a17-228">このフィールドには、Windows レジストリの基本キー HKEY_PERFORMANCE_DATA が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-228">This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-229">各ソフトウェア コンポーネントでは、カウンターがインストールされているが実行中に、カウンター データを書き込むときに、そのオブジェクトのキーを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-229">Each software component creates keys for its objects, counters when it is installed, and writes counter data while it is executing.</span></span> <span data-ttu-id="a1a17-230">使用して、その他のレジストリ データをアクセスは、このデータにアクセスすることができます、<xref:Microsoft.Win32.RegistryKey>関数。</span><span class="sxs-lookup"><span data-stu-id="a1a17-230">You can access this data as you would access any other registry data, using the <xref:Microsoft.Win32.RegistryKey> functions.</span></span>  
  
 <span data-ttu-id="a1a17-231">パフォーマンス データを収集するレジストリを使用すると、データはレジストリ データベースには格納されません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-231">Although you use the registry to collect performance data, the data is not stored in the registry database.</span></span> <span data-ttu-id="a1a17-232">代わりに、このキーを使用して、レジストリへのアクセスは、適切なシステム オブジェクト マネージャーからデータを収集するシステムです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-232">Instead, accessing the registry with this key causes the system to collect the data from the appropriate system object managers.</span></span>  
  
 <span data-ttu-id="a1a17-233">ローカル システムからパフォーマンス データを取得する、 <xref:Microsoft.Win32.RegistryKey.GetValue%2A> Registry.PerformanceData キーを持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-233">To obtain performance data from the local system, use the <xref:Microsoft.Win32.RegistryKey.GetValue%2A> method, with the Registry.PerformanceData key.</span></span> <span data-ttu-id="a1a17-234">最初の呼び出しでは、(最初のキーを明示的に開く必要はありません) キーを開きます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-234">The first call opens the key (you do not need to explicitly open the key first).</span></span> <span data-ttu-id="a1a17-235">ただし、使用するようにして、<xref:Microsoft.Win32.RegistryKey.Close%2A>パフォーマンス データの取得が完了したら、キーを識別するハンドルを閉じます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-235">However, be sure to use the <xref:Microsoft.Win32.RegistryKey.Close%2A> method to close the handle to the key when you are finished obtaining performance data.</span></span> <span data-ttu-id="a1a17-236">ユーザーは、インストールまたは、パフォーマンス データを使用している間は、ソフトウェア コンポーネントを削除できません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-236">The user cannot install or remove a software component while its performance data is in use.</span></span>  
  
 <span data-ttu-id="a1a17-237">使用する必要があります、リモート システムからパフォーマンス データを取得する、<xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A>をリモート システムと Registry.PerformanceData キーのコンピューター名のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-237">To obtain performance data from a remote system, you must use the <xref:Microsoft.Win32.RegistryKey.OpenRemoteBaseKey%2A> method, with the computer name of the remote system and the Registry.PerformanceData key.</span></span> <span data-ttu-id="a1a17-238">この呼び出しは、リモート システムのパフォーマンス データを表すキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-238">This call retrieves a key representing the performance data for the remote system.</span></span> <span data-ttu-id="a1a17-239">データを取得する<xref:Microsoft.Win32.RegistryKey.GetValue%2A>Registry.PerformanceData キーではなく、このキーを使用します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-239">To retrieve the data, call <xref:Microsoft.Win32.RegistryKey.GetValue%2A> using this key, rather than the Registry.PerformanceData key.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-240">Windows Server 2003 でユーザー属する必要がありますには、少なくとも、Performance Monitor Users グループにこの基本キーのサブキーにアクセスするためにします。</span><span class="sxs-lookup"><span data-stu-id="a1a17-240">On Windows Server 2003, a user must at least belong to the Performance Monitor Users group in order to access subkeys of this base key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-241">次の例では、このキーのサブキーを取得する方法について説明し、画面に名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-241">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="a1a17-242">使用して、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>関心のある特定のサブキーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-242">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="a1a17-243">その他の操作を行うこともできますし、<xref:Microsoft.Win32.RegistryKey>をそのキーを操作します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-243">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span> <span data-ttu-id="a1a17-244">この例多くの場合、結果が返されない、パフォーマンス データされる可能性がありますいないを確認します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-244">Note that this example can often return no results, since there might be no performance data.</span></span>  
  
 [!code-cpp[Classic Registry.PerformanceData Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.PerformanceData Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.PerformanceData Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.PerformanceData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1a17-245">レジストリ キーに名前/値ペアの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-245">Sets the value of a name/value pair in a registry key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1a17-246">次のコード例では、例キーとを取得し、表示値とキーを作成するいくつかのデータ型の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-246">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="a1a17-247">例の格納と取得の既定値 (無名) の名前と値のペアと、使用して`defaultValue`名前/値ペアが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="a1a17-247">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="a1a17-248">有効なレジストリ ルート ("HKEY_CURRENT_USER" など) から始まるキーの完全なレジストリ パス。</span><span class="sxs-lookup"><span data-stu-id="a1a17-248">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span></span></param>
        <param name="valueName"><span data-ttu-id="a1a17-249">名前/値ペアの名前。</span><span class="sxs-lookup"><span data-stu-id="a1a17-249">The name of the name/value pair.</span></span></param>
        <param name="value"><span data-ttu-id="a1a17-250">格納される値。</span><span class="sxs-lookup"><span data-stu-id="a1a17-250">The value to be stored.</span></span></param>
        <summary><span data-ttu-id="a1a17-251">指定したレジストリ キーに、指定した名前/値ペアを設定します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-251">Sets the specified name/value pair on the specified registry key.</span></span> <span data-ttu-id="a1a17-252">指定したキーが存在しない場合は、キーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-252">If the specified key does not exist, it is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-253">以降で、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、`valueName`パラメーターは、最大 255 文字に制限されなくただし、`keyName`パラメーターは引き続き、255 文字に制限します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-253">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the `valueName` parameter is no longer restricted to a maximum of 255 characters; however, the `keyName` parameter continues to have the 255-character restriction.</span></span>  
  
 <span data-ttu-id="a1a17-254">各レジストリ キーに、多くの値を格納できるため、使用、`valueName`パラメーターを設定する特定の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-254">Because many values can be stored in each key in the registry, you must use the `valueName` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-255">レジストリ キーには、任意の名前に関連付けられていない 1 つの値を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-255">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="a1a17-256">レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-256">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="a1a17-257">この無名の値を設定するには、いずれかを指定`null`または空の文字列 ("") の`valueName`します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-257">To set this unnamed value, specify either `null` or the empty string ("") for `valueName`.</span></span>  
  
 <span data-ttu-id="a1a17-258">場合`valueName`存在しないキーが作成され、関連付けられている値に設定されて`value`です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-258">If `valueName` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="a1a17-259">場合`keyName`サブキーが存在しないことを指定して、指定されたルートのサブキーを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-259">If `keyName` specifies a subkey that does not exist, the subkey is created in the specified root.</span></span> <span data-ttu-id="a1a17-260">たとえば、Visual Basic では、文字列"HKEY_CURRENT_USER\MyTestKey"HKEY_CURRENT_USER のルートに"MyTestKey"サブキーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-260">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span> <span data-ttu-id="a1a17-261">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span><span class="sxs-lookup"><span data-stu-id="a1a17-261">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span></span>  
  
 <span data-ttu-id="a1a17-262">有効なルート名には、HKEY_CURRENT_USER、HKEY_LOCAL_MACHINE、HKEY_CLASSES_ROOT、HKEY_USERS、HKEY_PERFORMANCE_DATA、HKEY_CURRENT_CONFIG、およびとが含まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-262">Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-263"><xref:Microsoft.Win32.Registry.SetValue%2A>メソッドは、レジストリ キーを開き、値を設定しが呼び出されるたびに、キーを閉じます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-263">The <xref:Microsoft.Win32.Registry.SetValue%2A> method opens a registry key, sets the value, and closes the key each time it is called.</span></span> <span data-ttu-id="a1a17-264">多数の値を変更する必要がある場合、<xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType>メソッドはパフォーマンスが向上する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a1a17-264">If you need to modify a large number of values, the <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> method might provide better performance.</span></span> <span data-ttu-id="a1a17-265"><xref:Microsoft.Win32.RegistryKey>クラスには、取得する前に、値のデータ型をテストし、キーを削除するレジストリ キーへのアクセス制御リスト (ACL) を追加できるメソッドも用意されています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-265">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
 <span data-ttu-id="a1a17-266">このオーバー ロード<xref:Microsoft.Win32.Registry.SetValue%2A>64 ビット整数値を文字列として格納 (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="a1a17-266">This overload of <xref:Microsoft.Win32.Registry.SetValue%2A> stores 64-bit integers as strings (<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>).</span></span> <span data-ttu-id="a1a17-267">として 64 ビットの数値を格納する<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>、値を使用して、<xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="a1a17-267">To store 64-bit numbers as <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType> values, use the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload.</span></span>  
  
 <span data-ttu-id="a1a17-268">このオーバー ロード<xref:Microsoft.Win32.Registry.SetValue%2A>としてすべての文字列値を格納<xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType>環境変数を展開可能な参照が含まれている場合でも、オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-268">This overload of <xref:Microsoft.Win32.Registry.SetValue%2A> stores all string values as <xref:Microsoft.Win32.RegistryValueKind.String?displayProperty=nameWithType> objects, even if they contain expandable references to environment variables.</span></span> <span data-ttu-id="a1a17-269">文字列値に展開可能な文字列を保存する (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>)、使用して、<xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="a1a17-269">To save string values as expandable strings (<xref:Microsoft.Win32.RegistryValueKind.ExpandString?displayProperty=nameWithType>), use the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload.</span></span>  
  
 <span data-ttu-id="a1a17-270">このオーバー ロードを呼び出すことは、<xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>とメソッドのオーバー ロード<xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-270">This overload is equivalent to calling the <xref:Microsoft.Win32.Registry.SetValue%28System.String%2CSystem.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> method overload with <xref:Microsoft.Win32.RegistryValueKind.Unknown?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-271">Windows 98 および Windows Millennium Edition (Windows Me) では、レジストリは、Unicode ではなく、すべての Unicode 文字は、すべてのコード ページに対して無効です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-271">On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="a1a17-272">現在のコード ページに対して無効な Unicode 文字は、使用可能な最適の一致に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-272">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="a1a17-273">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-273">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-274">次のコード例では、例キーとを取得し、表示値とキーを作成するいくつかのデータ型の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-274">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="a1a17-275">例の格納と取得の既定値 (無名) の名前と値のペアと、使用して`defaultValue`名前/値ペアが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="a1a17-275">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1a17-276"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-276"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1a17-277"><paramref name="keyName" /> が有効なレジストリ ルートから始まっていません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-277"><paramref name="keyName" /> does not begin with a valid registry root.</span></span>  
  
 <span data-ttu-id="a1a17-278">- または -</span><span class="sxs-lookup"><span data-stu-id="a1a17-278">-or-</span></span>  
  
 <span data-ttu-id="a1a17-279"><paramref name="keyName" /> が許容される最大長 (255 文字) を超えています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-279"><paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="a1a17-280"><see cref="T:Microsoft.Win32.RegistryKey" /> が読み取り専用であるため、このキーに書き込むことはできません。たとえば、ルートレベル ノードの場合などです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-280">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a1a17-281">ユーザーに、レジストリ キーの作成または変更に必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-281">The user does not have the permissions required to create or modify registry keys.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="a1a17-282">、存在する場合は、指定されたレジストリ キーを変更するのにまたはが既に存在しない場合に、レジストリ キーを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-282">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span></span> <span data-ttu-id="a1a17-283">関連する列挙: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />、 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span><span class="sxs-lookup"><span data-stu-id="a1a17-283">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public static void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.Registry.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="a1a17-284">有効なレジストリ ルート ("HKEY_CURRENT_USER" など) から始まるキーの完全なレジストリ パス。</span><span class="sxs-lookup"><span data-stu-id="a1a17-284">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</span></span></param>
        <param name="valueName"><span data-ttu-id="a1a17-285">名前/値ペアの名前。</span><span class="sxs-lookup"><span data-stu-id="a1a17-285">The name of the name/value pair.</span></span></param>
        <param name="value"><span data-ttu-id="a1a17-286">格納される値。</span><span class="sxs-lookup"><span data-stu-id="a1a17-286">The value to be stored.</span></span></param>
        <param name="valueKind"><span data-ttu-id="a1a17-287">データを格納する際に使用するレジストリ データ型。</span><span class="sxs-lookup"><span data-stu-id="a1a17-287">The registry data type to use when storing the data.</span></span></param>
        <summary><span data-ttu-id="a1a17-288">指定したレジストリ データ型を使用して、指定したレジストリ キーに名前/値ペアを設定します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-288">Sets the name/value pair on the specified registry key, using the specified registry data type.</span></span> <span data-ttu-id="a1a17-289">指定したキーが存在しない場合は、キーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-289">If the specified key does not exist, it is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-290">以降で、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、`valueName`パラメーターは、最大 255 文字に制限されなくただし、`keyName`パラメーターは、255 文字に制限があるが続行されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-290">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the `valueName` parameter is no longer restricted to a maximum of 255 characters; however, the `keyName` parameter continues have the 255-character restriction.</span></span>  
  
 <span data-ttu-id="a1a17-291">各レジストリ キーに、多くの値を格納できるため、使用、`valueName`パラメーターを設定する特定の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-291">Because many values can be stored in each key in the registry, you must use the `valueName` parameter to specify the particular value you want to set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-292">レジストリ キーには、任意の名前に関連付けられていない 1 つの値を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-292">A registry key can contain one value that is not associated with any name.</span></span> <span data-ttu-id="a1a17-293">レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-293">When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</span></span> <span data-ttu-id="a1a17-294">この無名の値を設定するには、いずれかを指定`null`または空の文字列 ("") の`valueName`します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-294">To set this unnamed value, specify either `null` or the empty string ("") for `valueName`.</span></span>  
  
 <span data-ttu-id="a1a17-295">場合`valueName`存在しないキーが作成され、関連付けられている値に設定されて`value`です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-295">If `valueName` does not exist in the key, it is created and the associated value is set to `value`.</span></span>  
  
 <span data-ttu-id="a1a17-296">場合`keyName`サブキーが存在しないことを指定して、指定されたルートのサブキーを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-296">If `keyName` specifies a subkey that does not exist, the subkey is created in the specified root.</span></span> <span data-ttu-id="a1a17-297">たとえば、Visual Basic では、文字列"HKEY_CURRENT_USER\MyTestKey"HKEY_CURRENT_USER のルートに"MyTestKey"サブキーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-297">For example, in Visual Basic the string "HKEY_CURRENT_USER\MyTestKey" creates the subkey "MyTestKey" in the HKEY_CURRENT_USER root.</span></span> <span data-ttu-id="a1a17-298">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span><span class="sxs-lookup"><span data-stu-id="a1a17-298">The string "HKEY_CURRENT_USER\MyTestKey\Key2\Key3" creates the nested subkeys "MyTestKey", "MyTestKey\Key2", and "MyTestKey\Key2\Key3".</span></span>  
  
 <span data-ttu-id="a1a17-299">有効なルート名には、HKEY_CURRENT_USER、HKEY_LOCAL_MACHINE、HKEY_CLASSES_ROOT、HKEY_USERS、HKEY_PERFORMANCE_DATA、HKEY_CURRENT_CONFIG、およびとが含まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-299">Valid root names include HKEY_CURRENT_USER, HKEY_LOCAL_MACHINE, HKEY_CLASSES_ROOT, HKEY_USERS, HKEY_PERFORMANCE_DATA, HKEY_CURRENT_CONFIG, and HKEY_DYN_DATA.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-300"><xref:Microsoft.Win32.Registry.SetValue%2A>メソッドは、レジストリ キーを開き、値を設定しが呼び出されるたびに、キーを閉じます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-300">The <xref:Microsoft.Win32.Registry.SetValue%2A> method opens a registry key, sets the value, and closes the key each time it is called.</span></span> <span data-ttu-id="a1a17-301">多数の値を変更する必要がある場合、<xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType>メソッドはパフォーマンスが向上する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a1a17-301">If you need to modify a large number of values, the <xref:Microsoft.Win32.RegistryKey.SetValue%2A?displayProperty=nameWithType> method might provide better performance.</span></span> <span data-ttu-id="a1a17-302"><xref:Microsoft.Win32.RegistryKey>クラスには、取得する前に、値のデータ型をテストし、キーを削除するレジストリ キーへのアクセス制御リスト (ACL) を追加できるメソッドも用意されています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-302">The <xref:Microsoft.Win32.RegistryKey> class also provides methods that allow you to add an access control list (ACL) to a registry key, to test the data type of a value before retrieving it, and to delete keys.</span></span>  
  
 <span data-ttu-id="a1a17-303">場合の指定した種類`value`、指定したとが一致しません`valueKind`、データにすることはできません、変換<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-303">If the type of the specified `value` does not match the specified `valueKind`, and the data cannot be converted, <xref:System.ArgumentException> is thrown.</span></span> <span data-ttu-id="a1a17-304">たとえば、保管、<xref:System.Int64?displayProperty=nameWithType>として、 <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>、その値がの最大値より小さい場合にのみが、<xref:System.Int32?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-304">For example, you can store a <xref:System.Int64?displayProperty=nameWithType> as a <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>, but only if its value is less than the maximum value of a <xref:System.Int32?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a1a17-305">として 1 つの文字列値を格納することはできません、<xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-305">You cannot store a single string value as a <xref:Microsoft.Win32.RegistryValueKind.MultiString?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-306">ボックス化された値が渡された場合<xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType>または<xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>、変換が行われるインバリアント カルチャを使用します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-306">If boxed values are passed for <xref:Microsoft.Win32.RegistryValueKind.DWord?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryValueKind.QWord?displayProperty=nameWithType>, the conversion is done using the invariant culture.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1a17-307">Windows 98 および Windows Millennium Edition (Windows Me) では、レジストリは、Unicode ではなく、すべての Unicode 文字は、すべてのコード ページに対して無効です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-307">On Windows 98 and Windows Millennium Edition (Windows Me), the registry is not Unicode, and not all Unicode characters are valid for all code pages.</span></span> <span data-ttu-id="a1a17-308">現在のコード ページに対して無効な Unicode 文字は、使用可能な最適の一致に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-308">A Unicode character that is invalid for the current code page is replaced by the best available match.</span></span> <span data-ttu-id="a1a17-309">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-309">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-310">次のコード例では、例キーとを取得し、表示値とキーを作成するいくつかのデータ型の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-310">The following code example stores values of several data types in an example key, creating the key as it does so, and then retrieves and displays the values.</span></span> <span data-ttu-id="a1a17-311">例の格納と取得の既定値 (無名) の名前と値のペアと、使用して`defaultValue`名前/値ペアが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="a1a17-311">The example demonstrates storing and retrieving the default (nameless) name/value pair, and the use of `defaultValue` when a name/value pair does not exist.</span></span>  
  
 [!code-cpp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/cpp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CPP/source.cpp#1)]
 [!code-csharp[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/csharp/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/CS/source.cs#1)]
 [!code-vb[Microsoft.Win32.Registry.GetSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Microsoft.Win32.Registry.GetSet/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1a17-312"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a1a17-312"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1a17-313"><paramref name="keyName" /> が有効なレジストリ ルートから始まっていません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-313"><paramref name="keyName" /> does not begin with a valid registry root.</span></span>  
  
 <span data-ttu-id="a1a17-314">- または -</span><span class="sxs-lookup"><span data-stu-id="a1a17-314">-or-</span></span>  
  
 <span data-ttu-id="a1a17-315"><paramref name="keyName" /> が許容される最大長 (255 文字) を超えています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-315"><paramref name="keyName" /> is longer than the maximum length allowed (255 characters).</span></span>  
  
 <span data-ttu-id="a1a17-316">- または -</span><span class="sxs-lookup"><span data-stu-id="a1a17-316">-or-</span></span>  
  
 <span data-ttu-id="a1a17-317"><paramref name="value" /> の型が <paramref name="valueKind" /> で指定したレジストリ データ型と一致しなかったため、データを適切に変換できませんでした。</span><span class="sxs-lookup"><span data-stu-id="a1a17-317">The type of <paramref name="value" /> did not match the registry data type specified by <paramref name="valueKind" />, therefore the data could not be converted properly.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="a1a17-318"><see cref="T:Microsoft.Win32.RegistryKey" /> が読み取り専用であるため、このキーに書き込むことはできません。ルートレベル ノードの場合や、書き込みアクセスが設定された状態でキーが開かれていない場合などです。</span><span class="sxs-lookup"><span data-stu-id="a1a17-318">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a1a17-319">ユーザーに、レジストリ キーの作成または変更に必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="a1a17-319">The user does not have the permissions required to create or modify registry keys.</span></span></exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="a1a17-320">、存在する場合は、指定されたレジストリ キーを変更するのにまたはが既に存在しない場合に、レジストリ キーを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-320">to modify the specified registry key if it exists, or to create the registry key if it does not already exist.</span></span> <span data-ttu-id="a1a17-321">関連する列挙: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />、 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span><span class="sxs-lookup"><span data-stu-id="a1a17-321">Associated enumerations: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Win32.RegistryKey Users;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Win32.Registry.Users" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Users As RegistryKey " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly Microsoft::Win32::RegistryKey ^ Users;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1a17-322">既定のユーザー構成に関する情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-322">Contains information about the default user configuration.</span></span> <span data-ttu-id="a1a17-323">このフィールドには、Windows レジストリの基本キー HKEY_USERS が読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-323">This field reads the Windows registry base key HKEY_USERS.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1a17-324">このキーには、コンピューターのユーザーごとに分岐が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a1a17-324">This key contains a branch for each user of the computer.</span></span> <span data-ttu-id="a1a17-325">既定の構成は、ユーザーが設定を変更していない場合、ローカル コンピューター上の新しいユーザーは、既定の現在のユーザーに対して提供されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-325">The default configuration is supplied for new users on the local computer and for the default current user if the user has not changed preferences.</span></span> <span data-ttu-id="a1a17-326">Windows 98/ME も Registry.Users をサポートしている、アプリケーションでも、ユーザーに固有の情報を Windows 2000 上で同じ方法アクセスできます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-326">Because Windows 98/ME also supports Registry.Users, applications can access the user-specific information the same way they do under Windows 2000.</span></span> <span data-ttu-id="a1a17-327">各ユーザーの情報は、ローカルまたはネットワーク サーバー上に格納できる個別のファイルに格納されます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-327">Each user's information is stored in a separate file, which can be stored locally or on a network server.</span></span> <span data-ttu-id="a1a17-328">Windows 98/ME このファイルをコピー、ユーザーの現在のシステムにできるように、ユーザーと別の設定を 1 台のコンピューターから移動できます。</span><span class="sxs-lookup"><span data-stu-id="a1a17-328">Windows 98/ME can copy this file to the user's current system so that settings can move from one computer to another with the user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1a17-329">次の例では、このキーのサブキーを取得する方法について説明し、画面に名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-329">The following example demonstrates how to retrieve the subkeys of this key, and prints their names to the screen.</span></span> <span data-ttu-id="a1a17-330">使用して、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>関心のある特定のサブキーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-330">Use the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to create an instance of the particular subkey of interest.</span></span> <span data-ttu-id="a1a17-331">その他の操作を行うこともできますし、<xref:Microsoft.Win32.RegistryKey>をそのキーを操作します。</span><span class="sxs-lookup"><span data-stu-id="a1a17-331">You can then use other operations in <xref:Microsoft.Win32.RegistryKey> to manipulate that key.</span></span>  
  
 [!code-cpp[Classic Registry.Users Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Registry.Users Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Registry.Users Example/CS/source.cs#1)]
 [!code-vb[Classic Registry.Users Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Registry.Users Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>